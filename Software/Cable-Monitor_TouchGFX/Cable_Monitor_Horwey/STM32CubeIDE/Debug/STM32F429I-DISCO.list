
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002bb34  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000175b0  0802bce4  0802bce4  0003bce4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043294  08043294  00053294  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08046f8c  08046f8c  00056f8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000007c4  080471d8  080471d8  000571d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0804799c  0804799c  0005799c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081609cc  081609cc  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  081609cc  081609cc  001709cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081609d4  081609d4  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081609d4  081609d4  001709d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  081609e8  081609e8  001709e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  081609ec  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013884  20000168  08160b54  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139ec  08160b54  001839ec  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009c50d  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a9  00000000  00000000  0021c7d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00299564  00000000  00000000  0021c880  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0003284f  00000000  00000000  004b5de4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004808  00000000  00000000  004e8638  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001210a8  00000000  00000000  004ece40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008262  00000000  00000000  0060dee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000323de  00000000  00000000  0061614a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003cd8b  00000000  00000000  00648528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d4c4  00000000  00000000  006852b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00692778  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00695af0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bccc 	.word	0x0802bccc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802bccc 	.word	0x0802bccc

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_drsub>:
 8000350:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000354:	e002      	b.n	800035c <__adddf3>
 8000356:	bf00      	nop

08000358 <__aeabi_dsub>:
 8000358:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800035c <__adddf3>:
 800035c:	b530      	push	{r4, r5, lr}
 800035e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000362:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	bf1f      	itttt	ne
 8000372:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000376:	ea55 0c02 	orrsne.w	ip, r5, r2
 800037a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800037e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000382:	f000 80e2 	beq.w	800054a <__adddf3+0x1ee>
 8000386:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800038a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800038e:	bfb8      	it	lt
 8000390:	426d      	neglt	r5, r5
 8000392:	dd0c      	ble.n	80003ae <__adddf3+0x52>
 8000394:	442c      	add	r4, r5
 8000396:	ea80 0202 	eor.w	r2, r0, r2
 800039a:	ea81 0303 	eor.w	r3, r1, r3
 800039e:	ea82 0000 	eor.w	r0, r2, r0
 80003a2:	ea83 0101 	eor.w	r1, r3, r1
 80003a6:	ea80 0202 	eor.w	r2, r0, r2
 80003aa:	ea81 0303 	eor.w	r3, r1, r3
 80003ae:	2d36      	cmp	r5, #54	; 0x36
 80003b0:	bf88      	it	hi
 80003b2:	bd30      	pophi	{r4, r5, pc}
 80003b4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003bc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003c4:	d002      	beq.n	80003cc <__adddf3+0x70>
 80003c6:	4240      	negs	r0, r0
 80003c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003cc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80003d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80003d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80003d8:	d002      	beq.n	80003e0 <__adddf3+0x84>
 80003da:	4252      	negs	r2, r2
 80003dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003e0:	ea94 0f05 	teq	r4, r5
 80003e4:	f000 80a7 	beq.w	8000536 <__adddf3+0x1da>
 80003e8:	f1a4 0401 	sub.w	r4, r4, #1
 80003ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80003f0:	db0d      	blt.n	800040e <__adddf3+0xb2>
 80003f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80003f6:	fa22 f205 	lsr.w	r2, r2, r5
 80003fa:	1880      	adds	r0, r0, r2
 80003fc:	f141 0100 	adc.w	r1, r1, #0
 8000400:	fa03 f20e 	lsl.w	r2, r3, lr
 8000404:	1880      	adds	r0, r0, r2
 8000406:	fa43 f305 	asr.w	r3, r3, r5
 800040a:	4159      	adcs	r1, r3
 800040c:	e00e      	b.n	800042c <__adddf3+0xd0>
 800040e:	f1a5 0520 	sub.w	r5, r5, #32
 8000412:	f10e 0e20 	add.w	lr, lr, #32
 8000416:	2a01      	cmp	r2, #1
 8000418:	fa03 fc0e 	lsl.w	ip, r3, lr
 800041c:	bf28      	it	cs
 800041e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000422:	fa43 f305 	asr.w	r3, r3, r5
 8000426:	18c0      	adds	r0, r0, r3
 8000428:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800042c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000430:	d507      	bpl.n	8000442 <__adddf3+0xe6>
 8000432:	f04f 0e00 	mov.w	lr, #0
 8000436:	f1dc 0c00 	rsbs	ip, ip, #0
 800043a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800043e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000442:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000446:	d31b      	bcc.n	8000480 <__adddf3+0x124>
 8000448:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800044c:	d30c      	bcc.n	8000468 <__adddf3+0x10c>
 800044e:	0849      	lsrs	r1, r1, #1
 8000450:	ea5f 0030 	movs.w	r0, r0, rrx
 8000454:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000458:	f104 0401 	add.w	r4, r4, #1
 800045c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000460:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000464:	f080 809a 	bcs.w	800059c <__adddf3+0x240>
 8000468:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800046c:	bf08      	it	eq
 800046e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000472:	f150 0000 	adcs.w	r0, r0, #0
 8000476:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800047a:	ea41 0105 	orr.w	r1, r1, r5
 800047e:	bd30      	pop	{r4, r5, pc}
 8000480:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000484:	4140      	adcs	r0, r0
 8000486:	eb41 0101 	adc.w	r1, r1, r1
 800048a:	3c01      	subs	r4, #1
 800048c:	bf28      	it	cs
 800048e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000492:	d2e9      	bcs.n	8000468 <__adddf3+0x10c>
 8000494:	f091 0f00 	teq	r1, #0
 8000498:	bf04      	itt	eq
 800049a:	4601      	moveq	r1, r0
 800049c:	2000      	moveq	r0, #0
 800049e:	fab1 f381 	clz	r3, r1
 80004a2:	bf08      	it	eq
 80004a4:	3320      	addeq	r3, #32
 80004a6:	f1a3 030b 	sub.w	r3, r3, #11
 80004aa:	f1b3 0220 	subs.w	r2, r3, #32
 80004ae:	da0c      	bge.n	80004ca <__adddf3+0x16e>
 80004b0:	320c      	adds	r2, #12
 80004b2:	dd08      	ble.n	80004c6 <__adddf3+0x16a>
 80004b4:	f102 0c14 	add.w	ip, r2, #20
 80004b8:	f1c2 020c 	rsb	r2, r2, #12
 80004bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80004c0:	fa21 f102 	lsr.w	r1, r1, r2
 80004c4:	e00c      	b.n	80004e0 <__adddf3+0x184>
 80004c6:	f102 0214 	add.w	r2, r2, #20
 80004ca:	bfd8      	it	le
 80004cc:	f1c2 0c20 	rsble	ip, r2, #32
 80004d0:	fa01 f102 	lsl.w	r1, r1, r2
 80004d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80004d8:	bfdc      	itt	le
 80004da:	ea41 010c 	orrle.w	r1, r1, ip
 80004de:	4090      	lslle	r0, r2
 80004e0:	1ae4      	subs	r4, r4, r3
 80004e2:	bfa2      	ittt	ge
 80004e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004e8:	4329      	orrge	r1, r5
 80004ea:	bd30      	popge	{r4, r5, pc}
 80004ec:	ea6f 0404 	mvn.w	r4, r4
 80004f0:	3c1f      	subs	r4, #31
 80004f2:	da1c      	bge.n	800052e <__adddf3+0x1d2>
 80004f4:	340c      	adds	r4, #12
 80004f6:	dc0e      	bgt.n	8000516 <__adddf3+0x1ba>
 80004f8:	f104 0414 	add.w	r4, r4, #20
 80004fc:	f1c4 0220 	rsb	r2, r4, #32
 8000500:	fa20 f004 	lsr.w	r0, r0, r4
 8000504:	fa01 f302 	lsl.w	r3, r1, r2
 8000508:	ea40 0003 	orr.w	r0, r0, r3
 800050c:	fa21 f304 	lsr.w	r3, r1, r4
 8000510:	ea45 0103 	orr.w	r1, r5, r3
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	f1c4 040c 	rsb	r4, r4, #12
 800051a:	f1c4 0220 	rsb	r2, r4, #32
 800051e:	fa20 f002 	lsr.w	r0, r0, r2
 8000522:	fa01 f304 	lsl.w	r3, r1, r4
 8000526:	ea40 0003 	orr.w	r0, r0, r3
 800052a:	4629      	mov	r1, r5
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	fa21 f004 	lsr.w	r0, r1, r4
 8000532:	4629      	mov	r1, r5
 8000534:	bd30      	pop	{r4, r5, pc}
 8000536:	f094 0f00 	teq	r4, #0
 800053a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800053e:	bf06      	itte	eq
 8000540:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000544:	3401      	addeq	r4, #1
 8000546:	3d01      	subne	r5, #1
 8000548:	e74e      	b.n	80003e8 <__adddf3+0x8c>
 800054a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800054e:	bf18      	it	ne
 8000550:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000554:	d029      	beq.n	80005aa <__adddf3+0x24e>
 8000556:	ea94 0f05 	teq	r4, r5
 800055a:	bf08      	it	eq
 800055c:	ea90 0f02 	teqeq	r0, r2
 8000560:	d005      	beq.n	800056e <__adddf3+0x212>
 8000562:	ea54 0c00 	orrs.w	ip, r4, r0
 8000566:	bf04      	itt	eq
 8000568:	4619      	moveq	r1, r3
 800056a:	4610      	moveq	r0, r2
 800056c:	bd30      	pop	{r4, r5, pc}
 800056e:	ea91 0f03 	teq	r1, r3
 8000572:	bf1e      	ittt	ne
 8000574:	2100      	movne	r1, #0
 8000576:	2000      	movne	r0, #0
 8000578:	bd30      	popne	{r4, r5, pc}
 800057a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800057e:	d105      	bne.n	800058c <__adddf3+0x230>
 8000580:	0040      	lsls	r0, r0, #1
 8000582:	4149      	adcs	r1, r1
 8000584:	bf28      	it	cs
 8000586:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800058a:	bd30      	pop	{r4, r5, pc}
 800058c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000590:	bf3c      	itt	cc
 8000592:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000596:	bd30      	popcc	{r4, r5, pc}
 8000598:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800059c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005a0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005a4:	f04f 0000 	mov.w	r0, #0
 80005a8:	bd30      	pop	{r4, r5, pc}
 80005aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005ae:	bf1a      	itte	ne
 80005b0:	4619      	movne	r1, r3
 80005b2:	4610      	movne	r0, r2
 80005b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005b8:	bf1c      	itt	ne
 80005ba:	460b      	movne	r3, r1
 80005bc:	4602      	movne	r2, r0
 80005be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005c2:	bf06      	itte	eq
 80005c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005c8:	ea91 0f03 	teqeq	r1, r3
 80005cc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80005d0:	bd30      	pop	{r4, r5, pc}
 80005d2:	bf00      	nop

080005d4 <__aeabi_ui2d>:
 80005d4:	f090 0f00 	teq	r0, #0
 80005d8:	bf04      	itt	eq
 80005da:	2100      	moveq	r1, #0
 80005dc:	4770      	bxeq	lr
 80005de:	b530      	push	{r4, r5, lr}
 80005e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005e8:	f04f 0500 	mov.w	r5, #0
 80005ec:	f04f 0100 	mov.w	r1, #0
 80005f0:	e750      	b.n	8000494 <__adddf3+0x138>
 80005f2:	bf00      	nop

080005f4 <__aeabi_i2d>:
 80005f4:	f090 0f00 	teq	r0, #0
 80005f8:	bf04      	itt	eq
 80005fa:	2100      	moveq	r1, #0
 80005fc:	4770      	bxeq	lr
 80005fe:	b530      	push	{r4, r5, lr}
 8000600:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000604:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000608:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800060c:	bf48      	it	mi
 800060e:	4240      	negmi	r0, r0
 8000610:	f04f 0100 	mov.w	r1, #0
 8000614:	e73e      	b.n	8000494 <__adddf3+0x138>
 8000616:	bf00      	nop

08000618 <__aeabi_f2d>:
 8000618:	0042      	lsls	r2, r0, #1
 800061a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800061e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000622:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000626:	bf1f      	itttt	ne
 8000628:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800062c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000630:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000634:	4770      	bxne	lr
 8000636:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800063a:	bf08      	it	eq
 800063c:	4770      	bxeq	lr
 800063e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000642:	bf04      	itt	eq
 8000644:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000648:	4770      	bxeq	lr
 800064a:	b530      	push	{r4, r5, lr}
 800064c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000650:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000654:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000658:	e71c      	b.n	8000494 <__adddf3+0x138>
 800065a:	bf00      	nop

0800065c <__aeabi_ul2d>:
 800065c:	ea50 0201 	orrs.w	r2, r0, r1
 8000660:	bf08      	it	eq
 8000662:	4770      	bxeq	lr
 8000664:	b530      	push	{r4, r5, lr}
 8000666:	f04f 0500 	mov.w	r5, #0
 800066a:	e00a      	b.n	8000682 <__aeabi_l2d+0x16>

0800066c <__aeabi_l2d>:
 800066c:	ea50 0201 	orrs.w	r2, r0, r1
 8000670:	bf08      	it	eq
 8000672:	4770      	bxeq	lr
 8000674:	b530      	push	{r4, r5, lr}
 8000676:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800067a:	d502      	bpl.n	8000682 <__aeabi_l2d+0x16>
 800067c:	4240      	negs	r0, r0
 800067e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000682:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000686:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800068a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800068e:	f43f aed8 	beq.w	8000442 <__adddf3+0xe6>
 8000692:	f04f 0203 	mov.w	r2, #3
 8000696:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800069a:	bf18      	it	ne
 800069c:	3203      	addne	r2, #3
 800069e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006a2:	bf18      	it	ne
 80006a4:	3203      	addne	r2, #3
 80006a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006aa:	f1c2 0320 	rsb	r3, r2, #32
 80006ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80006b2:	fa20 f002 	lsr.w	r0, r0, r2
 80006b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ba:	ea40 000e 	orr.w	r0, r0, lr
 80006be:	fa21 f102 	lsr.w	r1, r1, r2
 80006c2:	4414      	add	r4, r2
 80006c4:	e6bd      	b.n	8000442 <__adddf3+0xe6>
 80006c6:	bf00      	nop

080006c8 <__aeabi_dmul>:
 80006c8:	b570      	push	{r4, r5, r6, lr}
 80006ca:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80006ce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80006d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80006d6:	bf1d      	ittte	ne
 80006d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80006dc:	ea94 0f0c 	teqne	r4, ip
 80006e0:	ea95 0f0c 	teqne	r5, ip
 80006e4:	f000 f8de 	bleq	80008a4 <__aeabi_dmul+0x1dc>
 80006e8:	442c      	add	r4, r5
 80006ea:	ea81 0603 	eor.w	r6, r1, r3
 80006ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80006f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80006f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80006fa:	bf18      	it	ne
 80006fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000700:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000704:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000708:	d038      	beq.n	800077c <__aeabi_dmul+0xb4>
 800070a:	fba0 ce02 	umull	ip, lr, r0, r2
 800070e:	f04f 0500 	mov.w	r5, #0
 8000712:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000716:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800071a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800071e:	f04f 0600 	mov.w	r6, #0
 8000722:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000726:	f09c 0f00 	teq	ip, #0
 800072a:	bf18      	it	ne
 800072c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000730:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000734:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000738:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800073c:	d204      	bcs.n	8000748 <__aeabi_dmul+0x80>
 800073e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000742:	416d      	adcs	r5, r5
 8000744:	eb46 0606 	adc.w	r6, r6, r6
 8000748:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800074c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000750:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000754:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000758:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800075c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000760:	bf88      	it	hi
 8000762:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000766:	d81e      	bhi.n	80007a6 <__aeabi_dmul+0xde>
 8000768:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800076c:	bf08      	it	eq
 800076e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000772:	f150 0000 	adcs.w	r0, r0, #0
 8000776:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000780:	ea46 0101 	orr.w	r1, r6, r1
 8000784:	ea40 0002 	orr.w	r0, r0, r2
 8000788:	ea81 0103 	eor.w	r1, r1, r3
 800078c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000790:	bfc2      	ittt	gt
 8000792:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000796:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800079a:	bd70      	popgt	{r4, r5, r6, pc}
 800079c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007a0:	f04f 0e00 	mov.w	lr, #0
 80007a4:	3c01      	subs	r4, #1
 80007a6:	f300 80ab 	bgt.w	8000900 <__aeabi_dmul+0x238>
 80007aa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80007ae:	bfde      	ittt	le
 80007b0:	2000      	movle	r0, #0
 80007b2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80007b6:	bd70      	pople	{r4, r5, r6, pc}
 80007b8:	f1c4 0400 	rsb	r4, r4, #0
 80007bc:	3c20      	subs	r4, #32
 80007be:	da35      	bge.n	800082c <__aeabi_dmul+0x164>
 80007c0:	340c      	adds	r4, #12
 80007c2:	dc1b      	bgt.n	80007fc <__aeabi_dmul+0x134>
 80007c4:	f104 0414 	add.w	r4, r4, #20
 80007c8:	f1c4 0520 	rsb	r5, r4, #32
 80007cc:	fa00 f305 	lsl.w	r3, r0, r5
 80007d0:	fa20 f004 	lsr.w	r0, r0, r4
 80007d4:	fa01 f205 	lsl.w	r2, r1, r5
 80007d8:	ea40 0002 	orr.w	r0, r0, r2
 80007dc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80007e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007e8:	fa21 f604 	lsr.w	r6, r1, r4
 80007ec:	eb42 0106 	adc.w	r1, r2, r6
 80007f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007f4:	bf08      	it	eq
 80007f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007fa:	bd70      	pop	{r4, r5, r6, pc}
 80007fc:	f1c4 040c 	rsb	r4, r4, #12
 8000800:	f1c4 0520 	rsb	r5, r4, #32
 8000804:	fa00 f304 	lsl.w	r3, r0, r4
 8000808:	fa20 f005 	lsr.w	r0, r0, r5
 800080c:	fa01 f204 	lsl.w	r2, r1, r4
 8000810:	ea40 0002 	orr.w	r0, r0, r2
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800081c:	f141 0100 	adc.w	r1, r1, #0
 8000820:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000824:	bf08      	it	eq
 8000826:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	f1c4 0520 	rsb	r5, r4, #32
 8000830:	fa00 f205 	lsl.w	r2, r0, r5
 8000834:	ea4e 0e02 	orr.w	lr, lr, r2
 8000838:	fa20 f304 	lsr.w	r3, r0, r4
 800083c:	fa01 f205 	lsl.w	r2, r1, r5
 8000840:	ea43 0302 	orr.w	r3, r3, r2
 8000844:	fa21 f004 	lsr.w	r0, r1, r4
 8000848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800084c:	fa21 f204 	lsr.w	r2, r1, r4
 8000850:	ea20 0002 	bic.w	r0, r0, r2
 8000854:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000858:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800085c:	bf08      	it	eq
 800085e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000862:	bd70      	pop	{r4, r5, r6, pc}
 8000864:	f094 0f00 	teq	r4, #0
 8000868:	d10f      	bne.n	800088a <__aeabi_dmul+0x1c2>
 800086a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800086e:	0040      	lsls	r0, r0, #1
 8000870:	eb41 0101 	adc.w	r1, r1, r1
 8000874:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000878:	bf08      	it	eq
 800087a:	3c01      	subeq	r4, #1
 800087c:	d0f7      	beq.n	800086e <__aeabi_dmul+0x1a6>
 800087e:	ea41 0106 	orr.w	r1, r1, r6
 8000882:	f095 0f00 	teq	r5, #0
 8000886:	bf18      	it	ne
 8000888:	4770      	bxne	lr
 800088a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800088e:	0052      	lsls	r2, r2, #1
 8000890:	eb43 0303 	adc.w	r3, r3, r3
 8000894:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000898:	bf08      	it	eq
 800089a:	3d01      	subeq	r5, #1
 800089c:	d0f7      	beq.n	800088e <__aeabi_dmul+0x1c6>
 800089e:	ea43 0306 	orr.w	r3, r3, r6
 80008a2:	4770      	bx	lr
 80008a4:	ea94 0f0c 	teq	r4, ip
 80008a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ac:	bf18      	it	ne
 80008ae:	ea95 0f0c 	teqne	r5, ip
 80008b2:	d00c      	beq.n	80008ce <__aeabi_dmul+0x206>
 80008b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008b8:	bf18      	it	ne
 80008ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008be:	d1d1      	bne.n	8000864 <__aeabi_dmul+0x19c>
 80008c0:	ea81 0103 	eor.w	r1, r1, r3
 80008c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008c8:	f04f 0000 	mov.w	r0, #0
 80008cc:	bd70      	pop	{r4, r5, r6, pc}
 80008ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d2:	bf06      	itte	eq
 80008d4:	4610      	moveq	r0, r2
 80008d6:	4619      	moveq	r1, r3
 80008d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008dc:	d019      	beq.n	8000912 <__aeabi_dmul+0x24a>
 80008de:	ea94 0f0c 	teq	r4, ip
 80008e2:	d102      	bne.n	80008ea <__aeabi_dmul+0x222>
 80008e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80008e8:	d113      	bne.n	8000912 <__aeabi_dmul+0x24a>
 80008ea:	ea95 0f0c 	teq	r5, ip
 80008ee:	d105      	bne.n	80008fc <__aeabi_dmul+0x234>
 80008f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80008f4:	bf1c      	itt	ne
 80008f6:	4610      	movne	r0, r2
 80008f8:	4619      	movne	r1, r3
 80008fa:	d10a      	bne.n	8000912 <__aeabi_dmul+0x24a>
 80008fc:	ea81 0103 	eor.w	r1, r1, r3
 8000900:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000904:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000908:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800090c:	f04f 0000 	mov.w	r0, #0
 8000910:	bd70      	pop	{r4, r5, r6, pc}
 8000912:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000916:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800091a:	bd70      	pop	{r4, r5, r6, pc}

0800091c <__aeabi_ddiv>:
 800091c:	b570      	push	{r4, r5, r6, lr}
 800091e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000922:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000926:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800092a:	bf1d      	ittte	ne
 800092c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000930:	ea94 0f0c 	teqne	r4, ip
 8000934:	ea95 0f0c 	teqne	r5, ip
 8000938:	f000 f8a7 	bleq	8000a8a <__aeabi_ddiv+0x16e>
 800093c:	eba4 0405 	sub.w	r4, r4, r5
 8000940:	ea81 0e03 	eor.w	lr, r1, r3
 8000944:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000948:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800094c:	f000 8088 	beq.w	8000a60 <__aeabi_ddiv+0x144>
 8000950:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000954:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000958:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800095c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000960:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000964:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000968:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800096c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000970:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000974:	429d      	cmp	r5, r3
 8000976:	bf08      	it	eq
 8000978:	4296      	cmpeq	r6, r2
 800097a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800097e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000982:	d202      	bcs.n	800098a <__aeabi_ddiv+0x6e>
 8000984:	085b      	lsrs	r3, r3, #1
 8000986:	ea4f 0232 	mov.w	r2, r2, rrx
 800098a:	1ab6      	subs	r6, r6, r2
 800098c:	eb65 0503 	sbc.w	r5, r5, r3
 8000990:	085b      	lsrs	r3, r3, #1
 8000992:	ea4f 0232 	mov.w	r2, r2, rrx
 8000996:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800099a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800099e:	ebb6 0e02 	subs.w	lr, r6, r2
 80009a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009a6:	bf22      	ittt	cs
 80009a8:	1ab6      	subcs	r6, r6, r2
 80009aa:	4675      	movcs	r5, lr
 80009ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80009b0:	085b      	lsrs	r3, r3, #1
 80009b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009be:	bf22      	ittt	cs
 80009c0:	1ab6      	subcs	r6, r6, r2
 80009c2:	4675      	movcs	r5, lr
 80009c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80009c8:	085b      	lsrs	r3, r3, #1
 80009ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80009ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80009d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009d6:	bf22      	ittt	cs
 80009d8:	1ab6      	subcs	r6, r6, r2
 80009da:	4675      	movcs	r5, lr
 80009dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80009e0:	085b      	lsrs	r3, r3, #1
 80009e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009ee:	bf22      	ittt	cs
 80009f0:	1ab6      	subcs	r6, r6, r2
 80009f2:	4675      	movcs	r5, lr
 80009f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80009f8:	ea55 0e06 	orrs.w	lr, r5, r6
 80009fc:	d018      	beq.n	8000a30 <__aeabi_ddiv+0x114>
 80009fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000a02:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000a06:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000a0a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000a0e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000a12:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000a16:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000a1a:	d1c0      	bne.n	800099e <__aeabi_ddiv+0x82>
 8000a1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a20:	d10b      	bne.n	8000a3a <__aeabi_ddiv+0x11e>
 8000a22:	ea41 0100 	orr.w	r1, r1, r0
 8000a26:	f04f 0000 	mov.w	r0, #0
 8000a2a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000a2e:	e7b6      	b.n	800099e <__aeabi_ddiv+0x82>
 8000a30:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a34:	bf04      	itt	eq
 8000a36:	4301      	orreq	r1, r0
 8000a38:	2000      	moveq	r0, #0
 8000a3a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000a3e:	bf88      	it	hi
 8000a40:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000a44:	f63f aeaf 	bhi.w	80007a6 <__aeabi_dmul+0xde>
 8000a48:	ebb5 0c03 	subs.w	ip, r5, r3
 8000a4c:	bf04      	itt	eq
 8000a4e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000a52:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000a56:	f150 0000 	adcs.w	r0, r0, #0
 8000a5a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000a5e:	bd70      	pop	{r4, r5, r6, pc}
 8000a60:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a64:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a68:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a6c:	bfc2      	ittt	gt
 8000a6e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a72:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a76:	bd70      	popgt	{r4, r5, r6, pc}
 8000a78:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a7c:	f04f 0e00 	mov.w	lr, #0
 8000a80:	3c01      	subs	r4, #1
 8000a82:	e690      	b.n	80007a6 <__aeabi_dmul+0xde>
 8000a84:	ea45 0e06 	orr.w	lr, r5, r6
 8000a88:	e68d      	b.n	80007a6 <__aeabi_dmul+0xde>
 8000a8a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a8e:	ea94 0f0c 	teq	r4, ip
 8000a92:	bf08      	it	eq
 8000a94:	ea95 0f0c 	teqeq	r5, ip
 8000a98:	f43f af3b 	beq.w	8000912 <__aeabi_dmul+0x24a>
 8000a9c:	ea94 0f0c 	teq	r4, ip
 8000aa0:	d10a      	bne.n	8000ab8 <__aeabi_ddiv+0x19c>
 8000aa2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000aa6:	f47f af34 	bne.w	8000912 <__aeabi_dmul+0x24a>
 8000aaa:	ea95 0f0c 	teq	r5, ip
 8000aae:	f47f af25 	bne.w	80008fc <__aeabi_dmul+0x234>
 8000ab2:	4610      	mov	r0, r2
 8000ab4:	4619      	mov	r1, r3
 8000ab6:	e72c      	b.n	8000912 <__aeabi_dmul+0x24a>
 8000ab8:	ea95 0f0c 	teq	r5, ip
 8000abc:	d106      	bne.n	8000acc <__aeabi_ddiv+0x1b0>
 8000abe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000ac2:	f43f aefd 	beq.w	80008c0 <__aeabi_dmul+0x1f8>
 8000ac6:	4610      	mov	r0, r2
 8000ac8:	4619      	mov	r1, r3
 8000aca:	e722      	b.n	8000912 <__aeabi_dmul+0x24a>
 8000acc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000ad0:	bf18      	it	ne
 8000ad2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000ad6:	f47f aec5 	bne.w	8000864 <__aeabi_dmul+0x19c>
 8000ada:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000ade:	f47f af0d 	bne.w	80008fc <__aeabi_dmul+0x234>
 8000ae2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000ae6:	f47f aeeb 	bne.w	80008c0 <__aeabi_dmul+0x1f8>
 8000aea:	e712      	b.n	8000912 <__aeabi_dmul+0x24a>

08000aec <__aeabi_d2f>:
 8000aec:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af4:	bf24      	itt	cs
 8000af6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000afa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afe:	d90d      	bls.n	8000b1c <__aeabi_d2f+0x30>
 8000b00:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b04:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b08:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b0c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b10:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b14:	bf08      	it	eq
 8000b16:	f020 0001 	biceq.w	r0, r0, #1
 8000b1a:	4770      	bx	lr
 8000b1c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b20:	d121      	bne.n	8000b66 <__aeabi_d2f+0x7a>
 8000b22:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b26:	bfbc      	itt	lt
 8000b28:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b2c:	4770      	bxlt	lr
 8000b2e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b32:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b36:	f1c2 0218 	rsb	r2, r2, #24
 8000b3a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b42:	fa20 f002 	lsr.w	r0, r0, r2
 8000b46:	bf18      	it	ne
 8000b48:	f040 0001 	orrne.w	r0, r0, #1
 8000b4c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b50:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b54:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b58:	ea40 000c 	orr.w	r0, r0, ip
 8000b5c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b60:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b64:	e7cc      	b.n	8000b00 <__aeabi_d2f+0x14>
 8000b66:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b6a:	d107      	bne.n	8000b7c <__aeabi_d2f+0x90>
 8000b6c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b70:	bf1e      	ittt	ne
 8000b72:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b76:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b7a:	4770      	bxne	lr
 8000b7c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b80:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b84:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b88:	4770      	bx	lr
 8000b8a:	bf00      	nop

08000b8c <__aeabi_uldivmod>:
 8000b8c:	b953      	cbnz	r3, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b8e:	b94a      	cbnz	r2, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b90:	2900      	cmp	r1, #0
 8000b92:	bf08      	it	eq
 8000b94:	2800      	cmpeq	r0, #0
 8000b96:	bf1c      	itt	ne
 8000b98:	f04f 31ff 	movne.w	r1, #4294967295
 8000b9c:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba0:	f000 b970 	b.w	8000e84 <__aeabi_idiv0>
 8000ba4:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ba8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bac:	f000 f806 	bl	8000bbc <__udivmoddi4>
 8000bb0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bb8:	b004      	add	sp, #16
 8000bba:	4770      	bx	lr

08000bbc <__udivmoddi4>:
 8000bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc0:	9e08      	ldr	r6, [sp, #32]
 8000bc2:	460d      	mov	r5, r1
 8000bc4:	4604      	mov	r4, r0
 8000bc6:	460f      	mov	r7, r1
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d14a      	bne.n	8000c62 <__udivmoddi4+0xa6>
 8000bcc:	428a      	cmp	r2, r1
 8000bce:	4694      	mov	ip, r2
 8000bd0:	d965      	bls.n	8000c9e <__udivmoddi4+0xe2>
 8000bd2:	fab2 f382 	clz	r3, r2
 8000bd6:	b143      	cbz	r3, 8000bea <__udivmoddi4+0x2e>
 8000bd8:	fa02 fc03 	lsl.w	ip, r2, r3
 8000bdc:	f1c3 0220 	rsb	r2, r3, #32
 8000be0:	409f      	lsls	r7, r3
 8000be2:	fa20 f202 	lsr.w	r2, r0, r2
 8000be6:	4317      	orrs	r7, r2
 8000be8:	409c      	lsls	r4, r3
 8000bea:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000bee:	fa1f f58c 	uxth.w	r5, ip
 8000bf2:	fbb7 f1fe 	udiv	r1, r7, lr
 8000bf6:	0c22      	lsrs	r2, r4, #16
 8000bf8:	fb0e 7711 	mls	r7, lr, r1, r7
 8000bfc:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000c00:	fb01 f005 	mul.w	r0, r1, r5
 8000c04:	4290      	cmp	r0, r2
 8000c06:	d90a      	bls.n	8000c1e <__udivmoddi4+0x62>
 8000c08:	eb1c 0202 	adds.w	r2, ip, r2
 8000c0c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000c10:	f080 811c 	bcs.w	8000e4c <__udivmoddi4+0x290>
 8000c14:	4290      	cmp	r0, r2
 8000c16:	f240 8119 	bls.w	8000e4c <__udivmoddi4+0x290>
 8000c1a:	3902      	subs	r1, #2
 8000c1c:	4462      	add	r2, ip
 8000c1e:	1a12      	subs	r2, r2, r0
 8000c20:	b2a4      	uxth	r4, r4
 8000c22:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c26:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c2a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c2e:	fb00 f505 	mul.w	r5, r0, r5
 8000c32:	42a5      	cmp	r5, r4
 8000c34:	d90a      	bls.n	8000c4c <__udivmoddi4+0x90>
 8000c36:	eb1c 0404 	adds.w	r4, ip, r4
 8000c3a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c3e:	f080 8107 	bcs.w	8000e50 <__udivmoddi4+0x294>
 8000c42:	42a5      	cmp	r5, r4
 8000c44:	f240 8104 	bls.w	8000e50 <__udivmoddi4+0x294>
 8000c48:	4464      	add	r4, ip
 8000c4a:	3802      	subs	r0, #2
 8000c4c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c50:	1b64      	subs	r4, r4, r5
 8000c52:	2100      	movs	r1, #0
 8000c54:	b11e      	cbz	r6, 8000c5e <__udivmoddi4+0xa2>
 8000c56:	40dc      	lsrs	r4, r3
 8000c58:	2300      	movs	r3, #0
 8000c5a:	e9c6 4300 	strd	r4, r3, [r6]
 8000c5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c62:	428b      	cmp	r3, r1
 8000c64:	d908      	bls.n	8000c78 <__udivmoddi4+0xbc>
 8000c66:	2e00      	cmp	r6, #0
 8000c68:	f000 80ed 	beq.w	8000e46 <__udivmoddi4+0x28a>
 8000c6c:	2100      	movs	r1, #0
 8000c6e:	e9c6 0500 	strd	r0, r5, [r6]
 8000c72:	4608      	mov	r0, r1
 8000c74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c78:	fab3 f183 	clz	r1, r3
 8000c7c:	2900      	cmp	r1, #0
 8000c7e:	d149      	bne.n	8000d14 <__udivmoddi4+0x158>
 8000c80:	42ab      	cmp	r3, r5
 8000c82:	d302      	bcc.n	8000c8a <__udivmoddi4+0xce>
 8000c84:	4282      	cmp	r2, r0
 8000c86:	f200 80f8 	bhi.w	8000e7a <__udivmoddi4+0x2be>
 8000c8a:	1a84      	subs	r4, r0, r2
 8000c8c:	eb65 0203 	sbc.w	r2, r5, r3
 8000c90:	2001      	movs	r0, #1
 8000c92:	4617      	mov	r7, r2
 8000c94:	2e00      	cmp	r6, #0
 8000c96:	d0e2      	beq.n	8000c5e <__udivmoddi4+0xa2>
 8000c98:	e9c6 4700 	strd	r4, r7, [r6]
 8000c9c:	e7df      	b.n	8000c5e <__udivmoddi4+0xa2>
 8000c9e:	b902      	cbnz	r2, 8000ca2 <__udivmoddi4+0xe6>
 8000ca0:	deff      	udf	#255	; 0xff
 8000ca2:	fab2 f382 	clz	r3, r2
 8000ca6:	2b00      	cmp	r3, #0
 8000ca8:	f040 8090 	bne.w	8000dcc <__udivmoddi4+0x210>
 8000cac:	1a8a      	subs	r2, r1, r2
 8000cae:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cb2:	fa1f fe8c 	uxth.w	lr, ip
 8000cb6:	2101      	movs	r1, #1
 8000cb8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000cbc:	fb07 2015 	mls	r0, r7, r5, r2
 8000cc0:	0c22      	lsrs	r2, r4, #16
 8000cc2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000cc6:	fb0e f005 	mul.w	r0, lr, r5
 8000cca:	4290      	cmp	r0, r2
 8000ccc:	d908      	bls.n	8000ce0 <__udivmoddi4+0x124>
 8000cce:	eb1c 0202 	adds.w	r2, ip, r2
 8000cd2:	f105 38ff 	add.w	r8, r5, #4294967295
 8000cd6:	d202      	bcs.n	8000cde <__udivmoddi4+0x122>
 8000cd8:	4290      	cmp	r0, r2
 8000cda:	f200 80cb 	bhi.w	8000e74 <__udivmoddi4+0x2b8>
 8000cde:	4645      	mov	r5, r8
 8000ce0:	1a12      	subs	r2, r2, r0
 8000ce2:	b2a4      	uxth	r4, r4
 8000ce4:	fbb2 f0f7 	udiv	r0, r2, r7
 8000ce8:	fb07 2210 	mls	r2, r7, r0, r2
 8000cec:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cf0:	fb0e fe00 	mul.w	lr, lr, r0
 8000cf4:	45a6      	cmp	lr, r4
 8000cf6:	d908      	bls.n	8000d0a <__udivmoddi4+0x14e>
 8000cf8:	eb1c 0404 	adds.w	r4, ip, r4
 8000cfc:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d00:	d202      	bcs.n	8000d08 <__udivmoddi4+0x14c>
 8000d02:	45a6      	cmp	lr, r4
 8000d04:	f200 80bb 	bhi.w	8000e7e <__udivmoddi4+0x2c2>
 8000d08:	4610      	mov	r0, r2
 8000d0a:	eba4 040e 	sub.w	r4, r4, lr
 8000d0e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000d12:	e79f      	b.n	8000c54 <__udivmoddi4+0x98>
 8000d14:	f1c1 0720 	rsb	r7, r1, #32
 8000d18:	408b      	lsls	r3, r1
 8000d1a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d1e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d22:	fa05 f401 	lsl.w	r4, r5, r1
 8000d26:	fa20 f307 	lsr.w	r3, r0, r7
 8000d2a:	40fd      	lsrs	r5, r7
 8000d2c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d30:	4323      	orrs	r3, r4
 8000d32:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d36:	fa1f fe8c 	uxth.w	lr, ip
 8000d3a:	fb09 5518 	mls	r5, r9, r8, r5
 8000d3e:	0c1c      	lsrs	r4, r3, #16
 8000d40:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d44:	fb08 f50e 	mul.w	r5, r8, lr
 8000d48:	42a5      	cmp	r5, r4
 8000d4a:	fa02 f201 	lsl.w	r2, r2, r1
 8000d4e:	fa00 f001 	lsl.w	r0, r0, r1
 8000d52:	d90b      	bls.n	8000d6c <__udivmoddi4+0x1b0>
 8000d54:	eb1c 0404 	adds.w	r4, ip, r4
 8000d58:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d5c:	f080 8088 	bcs.w	8000e70 <__udivmoddi4+0x2b4>
 8000d60:	42a5      	cmp	r5, r4
 8000d62:	f240 8085 	bls.w	8000e70 <__udivmoddi4+0x2b4>
 8000d66:	f1a8 0802 	sub.w	r8, r8, #2
 8000d6a:	4464      	add	r4, ip
 8000d6c:	1b64      	subs	r4, r4, r5
 8000d6e:	b29d      	uxth	r5, r3
 8000d70:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d74:	fb09 4413 	mls	r4, r9, r3, r4
 8000d78:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d7c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d80:	45a6      	cmp	lr, r4
 8000d82:	d908      	bls.n	8000d96 <__udivmoddi4+0x1da>
 8000d84:	eb1c 0404 	adds.w	r4, ip, r4
 8000d88:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d8c:	d26c      	bcs.n	8000e68 <__udivmoddi4+0x2ac>
 8000d8e:	45a6      	cmp	lr, r4
 8000d90:	d96a      	bls.n	8000e68 <__udivmoddi4+0x2ac>
 8000d92:	3b02      	subs	r3, #2
 8000d94:	4464      	add	r4, ip
 8000d96:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d9a:	fba3 9502 	umull	r9, r5, r3, r2
 8000d9e:	eba4 040e 	sub.w	r4, r4, lr
 8000da2:	42ac      	cmp	r4, r5
 8000da4:	46c8      	mov	r8, r9
 8000da6:	46ae      	mov	lr, r5
 8000da8:	d356      	bcc.n	8000e58 <__udivmoddi4+0x29c>
 8000daa:	d053      	beq.n	8000e54 <__udivmoddi4+0x298>
 8000dac:	b156      	cbz	r6, 8000dc4 <__udivmoddi4+0x208>
 8000dae:	ebb0 0208 	subs.w	r2, r0, r8
 8000db2:	eb64 040e 	sbc.w	r4, r4, lr
 8000db6:	fa04 f707 	lsl.w	r7, r4, r7
 8000dba:	40ca      	lsrs	r2, r1
 8000dbc:	40cc      	lsrs	r4, r1
 8000dbe:	4317      	orrs	r7, r2
 8000dc0:	e9c6 7400 	strd	r7, r4, [r6]
 8000dc4:	4618      	mov	r0, r3
 8000dc6:	2100      	movs	r1, #0
 8000dc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dcc:	f1c3 0120 	rsb	r1, r3, #32
 8000dd0:	fa02 fc03 	lsl.w	ip, r2, r3
 8000dd4:	fa20 f201 	lsr.w	r2, r0, r1
 8000dd8:	fa25 f101 	lsr.w	r1, r5, r1
 8000ddc:	409d      	lsls	r5, r3
 8000dde:	432a      	orrs	r2, r5
 8000de0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000de4:	fa1f fe8c 	uxth.w	lr, ip
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1510 	mls	r5, r7, r0, r1
 8000df0:	0c11      	lsrs	r1, r2, #16
 8000df2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000df6:	fb00 f50e 	mul.w	r5, r0, lr
 8000dfa:	428d      	cmp	r5, r1
 8000dfc:	fa04 f403 	lsl.w	r4, r4, r3
 8000e00:	d908      	bls.n	8000e14 <__udivmoddi4+0x258>
 8000e02:	eb1c 0101 	adds.w	r1, ip, r1
 8000e06:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e0a:	d22f      	bcs.n	8000e6c <__udivmoddi4+0x2b0>
 8000e0c:	428d      	cmp	r5, r1
 8000e0e:	d92d      	bls.n	8000e6c <__udivmoddi4+0x2b0>
 8000e10:	3802      	subs	r0, #2
 8000e12:	4461      	add	r1, ip
 8000e14:	1b49      	subs	r1, r1, r5
 8000e16:	b292      	uxth	r2, r2
 8000e18:	fbb1 f5f7 	udiv	r5, r1, r7
 8000e1c:	fb07 1115 	mls	r1, r7, r5, r1
 8000e20:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e24:	fb05 f10e 	mul.w	r1, r5, lr
 8000e28:	4291      	cmp	r1, r2
 8000e2a:	d908      	bls.n	8000e3e <__udivmoddi4+0x282>
 8000e2c:	eb1c 0202 	adds.w	r2, ip, r2
 8000e30:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e34:	d216      	bcs.n	8000e64 <__udivmoddi4+0x2a8>
 8000e36:	4291      	cmp	r1, r2
 8000e38:	d914      	bls.n	8000e64 <__udivmoddi4+0x2a8>
 8000e3a:	3d02      	subs	r5, #2
 8000e3c:	4462      	add	r2, ip
 8000e3e:	1a52      	subs	r2, r2, r1
 8000e40:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e44:	e738      	b.n	8000cb8 <__udivmoddi4+0xfc>
 8000e46:	4631      	mov	r1, r6
 8000e48:	4630      	mov	r0, r6
 8000e4a:	e708      	b.n	8000c5e <__udivmoddi4+0xa2>
 8000e4c:	4639      	mov	r1, r7
 8000e4e:	e6e6      	b.n	8000c1e <__udivmoddi4+0x62>
 8000e50:	4610      	mov	r0, r2
 8000e52:	e6fb      	b.n	8000c4c <__udivmoddi4+0x90>
 8000e54:	4548      	cmp	r0, r9
 8000e56:	d2a9      	bcs.n	8000dac <__udivmoddi4+0x1f0>
 8000e58:	ebb9 0802 	subs.w	r8, r9, r2
 8000e5c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e60:	3b01      	subs	r3, #1
 8000e62:	e7a3      	b.n	8000dac <__udivmoddi4+0x1f0>
 8000e64:	4645      	mov	r5, r8
 8000e66:	e7ea      	b.n	8000e3e <__udivmoddi4+0x282>
 8000e68:	462b      	mov	r3, r5
 8000e6a:	e794      	b.n	8000d96 <__udivmoddi4+0x1da>
 8000e6c:	4640      	mov	r0, r8
 8000e6e:	e7d1      	b.n	8000e14 <__udivmoddi4+0x258>
 8000e70:	46d0      	mov	r8, sl
 8000e72:	e77b      	b.n	8000d6c <__udivmoddi4+0x1b0>
 8000e74:	3d02      	subs	r5, #2
 8000e76:	4462      	add	r2, ip
 8000e78:	e732      	b.n	8000ce0 <__udivmoddi4+0x124>
 8000e7a:	4608      	mov	r0, r1
 8000e7c:	e70a      	b.n	8000c94 <__udivmoddi4+0xd8>
 8000e7e:	4464      	add	r4, ip
 8000e80:	3802      	subs	r0, #2
 8000e82:	e742      	b.n	8000d0a <__udivmoddi4+0x14e>

08000e84 <__aeabi_idiv0>:
 8000e84:	4770      	bx	lr
 8000e86:	bf00      	nop

08000e88 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000e88:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000ec0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000e8c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000e8e:	e003      	b.n	8000e98 <LoopCopyDataInit>

08000e90 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000e90:	4b0c      	ldr	r3, [pc, #48]	; (8000ec4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000e92:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000e94:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000e96:	3104      	adds	r1, #4

08000e98 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000e98:	480b      	ldr	r0, [pc, #44]	; (8000ec8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000e9a:	4b0c      	ldr	r3, [pc, #48]	; (8000ecc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000e9c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000e9e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ea0:	d3f6      	bcc.n	8000e90 <CopyDataInit>
  ldr  r2, =_sbss
 8000ea2:	4a0b      	ldr	r2, [pc, #44]	; (8000ed0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000ea4:	e002      	b.n	8000eac <LoopFillZerobss>

08000ea6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000ea6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000ea8:	f842 3b04 	str.w	r3, [r2], #4

08000eac <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000eac:	4b09      	ldr	r3, [pc, #36]	; (8000ed4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000eae:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000eb0:	d3f9      	bcc.n	8000ea6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000eb2:	f009 f917 	bl	800a0e4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000eb6:	f02a f98d 	bl	802b1d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000eba:	f001 f829 	bl	8001f10 <main>
  bx  lr    
 8000ebe:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000ec0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000ec4:	081609ec 	.word	0x081609ec
  ldr  r0, =_sdata
 8000ec8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000ecc:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000ed0:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000ed4:	200139ec 	.word	0x200139ec

08000ed8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000ed8:	e7fe      	b.n	8000ed8 <ADC_IRQHandler>
	...

08000edc <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000edc:	4770      	bx	lr
 8000ede:	bf00      	nop

08000ee0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000ee0:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8000ee2:	f000 fba9 	bl	8001638 <touchgfx_components_init>
  touchgfx_init();
}
 8000ee6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000eea:	f000 bb33 	b.w	8001554 <touchgfx_init>
 8000eee:	bf00      	nop

08000ef0 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000ef0:	f000 bba4 	b.w	800163c <touchgfx_taskEntry>

08000ef4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000ef4:	4770      	bx	lr

08000ef6 <_ZN20STM32TouchControllerD0Ev>:
 8000ef6:	b510      	push	{r4, lr}
 8000ef8:	2104      	movs	r1, #4
 8000efa:	4604      	mov	r4, r0
 8000efc:	f028 ff7f 	bl	8029dfe <_ZdlPvj>
 8000f00:	4620      	mov	r0, r4
 8000f02:	bd10      	pop	{r4, pc}

08000f04 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000f04:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000f06:	4b0c      	ldr	r3, [pc, #48]	; (8000f38 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000f08:	4c0c      	ldr	r4, [pc, #48]	; (8000f3c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000f0a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000f0c:	4b0c      	ldr	r3, [pc, #48]	; (8000f40 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000f0e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000f10:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000f12:	6863      	ldr	r3, [r4, #4]
 8000f14:	4798      	blx	r3
 8000f16:	f640 0311 	movw	r3, #2065	; 0x811
 8000f1a:	4298      	cmp	r0, r3
 8000f1c:	d10a      	bne.n	8000f34 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000f1e:	4d09      	ldr	r5, [pc, #36]	; (8000f44 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000f20:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000f22:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000f24:	2082      	movs	r0, #130	; 0x82
 8000f26:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000f28:	682b      	ldr	r3, [r5, #0]
 8000f2a:	2082      	movs	r0, #130	; 0x82
 8000f2c:	68db      	ldr	r3, [r3, #12]
 8000f2e:	4798      	blx	r3
 8000f30:	2000      	movs	r0, #0
    }

    return ret;
}
 8000f32:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000f34:	2001      	movs	r0, #1
 8000f36:	e7fc      	b.n	8000f32 <_Z11BSP_TS_Inittt+0x2e>
 8000f38:	20000184 	.word	0x20000184
 8000f3c:	20000050 	.word	0x20000050
 8000f40:	20000186 	.word	0x20000186
 8000f44:	20000188 	.word	0x20000188

08000f48 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000f48:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000f4c:	20f0      	movs	r0, #240	; 0xf0
 8000f4e:	f7ff bfd9 	b.w	8000f04 <_Z11BSP_TS_Inittt>
	...

08000f54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000f54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000f56:	4d33      	ldr	r5, [pc, #204]	; (8001024 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8000f58:	682b      	ldr	r3, [r5, #0]
{
 8000f5a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000f5c:	691b      	ldr	r3, [r3, #16]
 8000f5e:	2082      	movs	r0, #130	; 0x82
 8000f60:	4798      	blx	r3
 8000f62:	b280      	uxth	r0, r0
 8000f64:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000f66:	2800      	cmp	r0, #0
 8000f68:	d04a      	beq.n	8001000 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000f6a:	682b      	ldr	r3, [r5, #0]
 8000f6c:	f10d 0206 	add.w	r2, sp, #6
 8000f70:	695b      	ldr	r3, [r3, #20]
 8000f72:	a901      	add	r1, sp, #4
 8000f74:	2082      	movs	r0, #130	; 0x82
 8000f76:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000f78:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000f7c:	f640 6274 	movw	r2, #3700	; 0xe74
 8000f80:	4293      	cmp	r3, r2
 8000f82:	d93f      	bls.n	8001004 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000f84:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8000f88:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000f8c:	1ad2      	subs	r2, r2, r3
 8000f8e:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000f90:	2a0a      	cmp	r2, #10
 8000f92:	d93d      	bls.n	8001010 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000f94:	230b      	movs	r3, #11
 8000f96:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000f9a:	4b23      	ldr	r3, [pc, #140]	; (8001028 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000f9c:	881b      	ldrh	r3, [r3, #0]
 8000f9e:	429a      	cmp	r2, r3
 8000fa0:	d901      	bls.n	8000fa6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000fa2:	3b01      	subs	r3, #1
 8000fa4:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000fa6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000faa:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000fae:	428b      	cmp	r3, r1
 8000fb0:	d830      	bhi.n	8001014 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000fb2:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8000fb6:	330e      	adds	r3, #14
 8000fb8:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8000fba:	210f      	movs	r1, #15
 8000fbc:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000fc0:	491a      	ldr	r1, [pc, #104]	; (800102c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000fc2:	8809      	ldrh	r1, [r1, #0]
 8000fc4:	428b      	cmp	r3, r1
 8000fc6:	d901      	bls.n	8000fcc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8000fc8:	3901      	subs	r1, #1
 8000fca:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000fcc:	4e18      	ldr	r6, [pc, #96]	; (8001030 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000fce:	4d19      	ldr	r5, [pc, #100]	; (8001034 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000fd0:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000fd2:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000fd4:	4283      	cmp	r3, r0
 8000fd6:	b281      	uxth	r1, r0
 8000fd8:	bf8c      	ite	hi
 8000fda:	1a59      	subhi	r1, r3, r1
 8000fdc:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000fde:	b2b8      	uxth	r0, r7
 8000fe0:	42ba      	cmp	r2, r7
 8000fe2:	bf8c      	ite	hi
 8000fe4:	1a10      	subhi	r0, r2, r0
 8000fe6:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000fe8:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000fea:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000fec:	4401      	add	r1, r0
 8000fee:	2905      	cmp	r1, #5
        {
            _x = x;
 8000ff0:	bfc8      	it	gt
 8000ff2:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000ff4:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8000ff6:	bfc8      	it	gt
 8000ff8:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8000ffa:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000ffc:	682b      	ldr	r3, [r5, #0]
 8000ffe:	80a3      	strh	r3, [r4, #4]
    }
}
 8001000:	b003      	add	sp, #12
 8001002:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001004:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001006:	bf9c      	itt	ls
 8001008:	23b4      	movls	r3, #180	; 0xb4
 800100a:	f8ad 3006 	strhls.w	r3, [sp, #6]
 800100e:	e7bb      	b.n	8000f88 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001010:	2200      	movs	r2, #0
 8001012:	e7c8      	b.n	8000fa6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001014:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001018:	3308      	adds	r3, #8
 800101a:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800101c:	2b0e      	cmp	r3, #14
 800101e:	d8cc      	bhi.n	8000fba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001020:	2300      	movs	r3, #0
 8001022:	e7d3      	b.n	8000fcc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001024:	20000188 	.word	0x20000188
 8001028:	20000186 	.word	0x20000186
 800102c:	20000184 	.word	0x20000184
 8001030:	2000018c 	.word	0x2000018c
 8001034:	20000190 	.word	0x20000190

08001038 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001038:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800103a:	4668      	mov	r0, sp
{
 800103c:	460d      	mov	r5, r1
 800103e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001040:	f7ff ff88 	bl	8000f54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001044:	f8bd 0000 	ldrh.w	r0, [sp]
 8001048:	b148      	cbz	r0, 800105e <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800104a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800104e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001050:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001054:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001056:	4b03      	ldr	r3, [pc, #12]	; (8001064 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001058:	223c      	movs	r2, #60	; 0x3c
 800105a:	601a      	str	r2, [r3, #0]
        return true;
 800105c:	2001      	movs	r0, #1
}
 800105e:	b003      	add	sp, #12
 8001060:	bd30      	pop	{r4, r5, pc}
 8001062:	bf00      	nop
 8001064:	20000014 	.word	0x20000014

08001068 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001068:	b110      	cbz	r0, 8001070 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800106a:	2802      	cmp	r0, #2
 800106c:	d009      	beq.n	8001082 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800106e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001070:	4b07      	ldr	r3, [pc, #28]	; (8001090 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001072:	681a      	ldr	r2, [r3, #0]
 8001074:	fab2 f282 	clz	r2, r2
 8001078:	0952      	lsrs	r2, r2, #5
 800107a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800107c:	4805      	ldr	r0, [pc, #20]	; (8001094 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800107e:	f009 ba49 	b.w	800a514 <HAL_GPIO_WritePin>
 8001082:	4b03      	ldr	r3, [pc, #12]	; (8001090 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001084:	689a      	ldr	r2, [r3, #8]
 8001086:	fab2 f282 	clz	r2, r2
 800108a:	0952      	lsrs	r2, r2, #5
 800108c:	2110      	movs	r1, #16
 800108e:	e7f5      	b.n	800107c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001090:	20000194 	.word	0x20000194
 8001094:	40021000 	.word	0x40021000

08001098 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001098:	b110      	cbz	r0, 80010a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800109a:	2802      	cmp	r0, #2
 800109c:	d009      	beq.n	80010b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800109e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80010a0:	4b07      	ldr	r3, [pc, #28]	; (80010c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80010a2:	681a      	ldr	r2, [r3, #0]
 80010a4:	3a00      	subs	r2, #0
 80010a6:	bf18      	it	ne
 80010a8:	2201      	movne	r2, #1
 80010aa:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80010ac:	4805      	ldr	r0, [pc, #20]	; (80010c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80010ae:	f009 ba31 	b.w	800a514 <HAL_GPIO_WritePin>
 80010b2:	4b03      	ldr	r3, [pc, #12]	; (80010c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80010b4:	689a      	ldr	r2, [r3, #8]
 80010b6:	3a00      	subs	r2, #0
 80010b8:	bf18      	it	ne
 80010ba:	2201      	movne	r2, #1
 80010bc:	2110      	movs	r1, #16
 80010be:	e7f5      	b.n	80010ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80010c0:	20000194 	.word	0x20000194
 80010c4:	40021000 	.word	0x40021000

080010c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80010c8:	b110      	cbz	r0, 80010d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80010ca:	2802      	cmp	r0, #2
 80010cc:	d004      	beq.n	80010d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80010ce:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80010d0:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80010d2:	4802      	ldr	r0, [pc, #8]	; (80010dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80010d4:	f009 ba22 	b.w	800a51c <HAL_GPIO_TogglePin>
 80010d8:	2110      	movs	r1, #16
 80010da:	e7fa      	b.n	80010d2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80010dc:	40021000 	.word	0x40021000

080010e0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80010e0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80010e2:	b130      	cbz	r0, 80010f2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80010e4:	2802      	cmp	r0, #2
 80010e6:	d009      	beq.n	80010fc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80010e8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80010ea:	1e43      	subs	r3, r0, #1
 80010ec:	4258      	negs	r0, r3
 80010ee:	4158      	adcs	r0, r3
 80010f0:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80010f2:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80010f4:	4802      	ldr	r0, [pc, #8]	; (8001100 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80010f6:	f009 fa07 	bl	800a508 <HAL_GPIO_ReadPin>
        break;
 80010fa:	e7f6      	b.n	80010ea <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80010fc:	2110      	movs	r1, #16
 80010fe:	e7f9      	b.n	80010f4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001100:	40021000 	.word	0x40021000

08001104 <_ZN8touchgfx4GPIO4initEv>:
{
 8001104:	b570      	push	{r4, r5, r6, lr}
 8001106:	4d08      	ldr	r5, [pc, #32]	; (8001128 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001108:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800110a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800110c:	b2e0      	uxtb	r0, r4
 800110e:	f7ff ffe7 	bl	80010e0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001112:	b118      	cbz	r0, 800111c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001114:	682b      	ldr	r3, [r5, #0]
 8001116:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001118:	bf18      	it	ne
 800111a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800111c:	3401      	adds	r4, #1
 800111e:	2c05      	cmp	r4, #5
 8001120:	f105 0504 	add.w	r5, r5, #4
 8001124:	d1f2      	bne.n	800110c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001126:	bd70      	pop	{r4, r5, r6, pc}
 8001128:	20000194 	.word	0x20000194

0800112c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800112c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800112e:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001132:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001138:	2000      	movs	r0, #0
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800113c:	4b03      	ldr	r3, [pc, #12]	; (800114c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800113e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001140:	3900      	subs	r1, #0
 8001142:	bf18      	it	ne
 8001144:	2101      	movne	r1, #1
 8001146:	7019      	strb	r1, [r3, #0]
    }
 8001148:	4770      	bx	lr
 800114a:	bf00      	nop
 800114c:	20012db3 	.word	0x20012db3

08001150 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001150:	2000      	movs	r0, #0
 8001152:	4770      	bx	lr

08001154 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001154:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001156:	b10b      	cbz	r3, 800115c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001158:	4608      	mov	r0, r1
 800115a:	4718      	bx	r3
        }
    }
 800115c:	4770      	bx	lr

0800115e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800115e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001162:	4770      	bx	lr

08001164 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001164:	6840      	ldr	r0, [r0, #4]
 8001166:	6803      	ldr	r3, [r0, #0]
 8001168:	699b      	ldr	r3, [r3, #24]
 800116a:	4718      	bx	r3

0800116c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 800116c:	4770      	bx	lr

0800116e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800116e:	4770      	bx	lr

08001170 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001170:	4770      	bx	lr
	...

08001174 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001174:	b510      	push	{r4, lr}
 8001176:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001178:	f000 fb4c 	bl	8001814 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 800117c:	6823      	ldr	r3, [r4, #0]
 800117e:	4903      	ldr	r1, [pc, #12]	; (800118c <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001180:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001184:	4620      	mov	r0, r4
}
 8001186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800118a:	4718      	bx	r3
 800118c:	d0000000 	.word	0xd0000000

08001190 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001190:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001192:	6803      	ldr	r3, [r0, #0]
{
 8001194:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001196:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800119a:	4798      	blx	r3
    enableInterrupts();
 800119c:	6823      	ldr	r3, [r4, #0]
 800119e:	4620      	mov	r0, r4
 80011a0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80011a2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80011a4:	f000 f8ec 	bl	8001380 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80011a8:	6823      	ldr	r3, [r4, #0]
 80011aa:	4620      	mov	r0, r4
 80011ac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80011ae:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80011b0:	2029      	movs	r0, #41	; 0x29
 80011b2:	f001 f979 	bl	80024a8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80011b6:	f000 f8e3 	bl	8001380 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80011ba:	6823      	ldr	r3, [r4, #0]
 80011bc:	4620      	mov	r0, r4
 80011be:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80011c0:	4798      	blx	r3
    for (;;)
 80011c2:	e7f8      	b.n	80011b6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080011c4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80011c4:	b510      	push	{r4, lr}
 80011c6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80011c8:	f010 fb34 	bl	8011834 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80011cc:	6823      	ldr	r3, [r4, #0]
 80011ce:	4620      	mov	r0, r4
 80011d0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80011d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80011d8:	4718      	bx	r3

080011da <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80011da:	f000 bb0d 	b.w	80017f8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080011de <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80011de:	f000 bb11 	b.w	8001804 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080011e2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80011e2:	f000 bb35 	b.w	8001850 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080011e6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80011e6:	f000 badd 	b.w	80017a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080011ea <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80011ea:	f000 bae3 	b.w	80017b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080011ee <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80011ee:	f000 bb3b 	b.w	8001868 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080011f2 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80011f2:	f000 bae7 	b.w	80017c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080011f6 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80011f6:	f00f bd89 	b.w	8010d0c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080011fa <_ZN11TouchGFXHALD0Ev>:
 80011fa:	b510      	push	{r4, lr}
 80011fc:	217c      	movs	r1, #124	; 0x7c
 80011fe:	4604      	mov	r4, r0
 8001200:	f028 fdfd 	bl	8029dfe <_ZdlPvj>
 8001204:	4620      	mov	r0, r4
 8001206:	bd10      	pop	{r4, pc}

08001208 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001208:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800120c:	b11b      	cbz	r3, 8001216 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800120e:	6840      	ldr	r0, [r0, #4]
 8001210:	6803      	ldr	r3, [r0, #0]
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	4718      	bx	r3
    }
 8001216:	4618      	mov	r0, r3
 8001218:	4770      	bx	lr
	...

0800121c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800121c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800121e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001222:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001226:	4b0c      	ldr	r3, [pc, #48]	; (8001258 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001228:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800122a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800122c:	d009      	beq.n	8001242 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800122e:	b93a      	cbnz	r2, 8001240 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001230:	4a0a      	ldr	r2, [pc, #40]	; (800125c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001232:	490b      	ldr	r1, [pc, #44]	; (8001260 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001234:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001236:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001238:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800123a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800123c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800123e:	701a      	strb	r2, [r3, #0]
    }
 8001240:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001242:	2a00      	cmp	r2, #0
 8001244:	d0fc      	beq.n	8001240 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001246:	4a05      	ldr	r2, [pc, #20]	; (800125c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001248:	4905      	ldr	r1, [pc, #20]	; (8001260 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800124a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800124c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800124e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001250:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001252:	2200      	movs	r2, #0
 8001254:	e7f3      	b.n	800123e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001256:	bf00      	nop
 8001258:	20012dac 	.word	0x20012dac
 800125c:	20012da8 	.word	0x20012da8
 8001260:	20012daa 	.word	0x20012daa

08001264 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001264:	b570      	push	{r4, r5, r6, lr}
 8001266:	460d      	mov	r5, r1
 8001268:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800126a:	b935      	cbnz	r5, 800127a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800126c:	4b09      	ldr	r3, [pc, #36]	; (8001294 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800126e:	4a0a      	ldr	r2, [pc, #40]	; (8001298 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001270:	480a      	ldr	r0, [pc, #40]	; (800129c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001272:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001276:	f029 fca9 	bl	802abcc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800127a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800127e:	4b08      	ldr	r3, [pc, #32]	; (80012a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001280:	3a00      	subs	r2, #0
 8001282:	bf18      	it	ne
 8001284:	2201      	movne	r2, #1
 8001286:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001288:	6803      	ldr	r3, [r0, #0]
    }
 800128a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800128e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001292:	4718      	bx	r3
 8001294:	0802bd60 	.word	0x0802bd60
 8001298:	0802bd98 	.word	0x0802bd98
 800129c:	0802bde6 	.word	0x0802bde6
 80012a0:	20012db2 	.word	0x20012db2

080012a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80012a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80012a6:	4b09      	ldr	r3, [pc, #36]	; (80012cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80012a8:	881b      	ldrh	r3, [r3, #0]
 80012aa:	428b      	cmp	r3, r1
 80012ac:	d803      	bhi.n	80012b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80012ae:	4b08      	ldr	r3, [pc, #32]	; (80012d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80012b0:	881b      	ldrh	r3, [r3, #0]
 80012b2:	4293      	cmp	r3, r2
 80012b4:	d905      	bls.n	80012c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80012b6:	4b07      	ldr	r3, [pc, #28]	; (80012d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80012b8:	4a07      	ldr	r2, [pc, #28]	; (80012d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80012ba:	4808      	ldr	r0, [pc, #32]	; (80012dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80012bc:	219e      	movs	r1, #158	; 0x9e
 80012be:	f029 fc85 	bl	802abcc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80012c2:	4b07      	ldr	r3, [pc, #28]	; (80012e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80012c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80012c6:	4b07      	ldr	r3, [pc, #28]	; (80012e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80012c8:	801a      	strh	r2, [r3, #0]
    }
 80012ca:	bd08      	pop	{r3, pc}
 80012cc:	20012da8 	.word	0x20012da8
 80012d0:	20012daa 	.word	0x20012daa
 80012d4:	0802be2b 	.word	0x0802be2b
 80012d8:	0802be8e 	.word	0x0802be8e
 80012dc:	0802bde6 	.word	0x0802bde6
 80012e0:	20012dae 	.word	0x20012dae
 80012e4:	20012db0 	.word	0x20012db0

080012e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80012e8:	2101      	movs	r1, #1
{
 80012ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80012ec:	2200      	movs	r2, #0
 80012ee:	4608      	mov	r0, r1
 80012f0:	f00c fb18 	bl	800d924 <osSemaphoreNew>
 80012f4:	4b0a      	ldr	r3, [pc, #40]	; (8001320 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80012f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80012f8:	b928      	cbnz	r0, 8001306 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80012fa:	4b0a      	ldr	r3, [pc, #40]	; (8001324 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80012fc:	4a0a      	ldr	r2, [pc, #40]	; (8001328 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80012fe:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001300:	480a      	ldr	r0, [pc, #40]	; (800132c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001302:	f029 fc63 	bl	802abcc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001306:	2200      	movs	r2, #0
 8001308:	2104      	movs	r1, #4
 800130a:	2001      	movs	r0, #1
 800130c:	f00c fbbe 	bl	800da8c <osMessageQueueNew>
 8001310:	4b07      	ldr	r3, [pc, #28]	; (8001330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001312:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001314:	b918      	cbnz	r0, 800131e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001316:	4b07      	ldr	r3, [pc, #28]	; (8001334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001318:	4a03      	ldr	r2, [pc, #12]	; (8001328 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800131a:	212c      	movs	r1, #44	; 0x2c
 800131c:	e7f0      	b.n	8001300 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800131e:	bd08      	pop	{r3, pc}
 8001320:	200001a8 	.word	0x200001a8
 8001324:	0802bfac 	.word	0x0802bfac
 8001328:	0802bff5 	.word	0x0802bff5
 800132c:	0802c024 	.word	0x0802c024
 8001330:	200001a4 	.word	0x200001a4
 8001334:	0802c0b4 	.word	0x0802c0b4

08001338 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001338:	4b02      	ldr	r3, [pc, #8]	; (8001344 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800133a:	f04f 31ff 	mov.w	r1, #4294967295
 800133e:	6818      	ldr	r0, [r3, #0]
 8001340:	f00c bb44 	b.w	800d9cc <osSemaphoreAcquire>
 8001344:	200001a8 	.word	0x200001a8

08001348 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001348:	4b01      	ldr	r3, [pc, #4]	; (8001350 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800134a:	6818      	ldr	r0, [r3, #0]
 800134c:	f00c bb72 	b.w	800da34 <osSemaphoreRelease>
 8001350:	200001a8 	.word	0x200001a8

08001354 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001354:	4b02      	ldr	r3, [pc, #8]	; (8001360 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001356:	2100      	movs	r1, #0
 8001358:	6818      	ldr	r0, [r3, #0]
 800135a:	f00c bb37 	b.w	800d9cc <osSemaphoreAcquire>
 800135e:	bf00      	nop
 8001360:	200001a8 	.word	0x200001a8

08001364 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001364:	f7ff bff0 	b.w	8001348 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001368 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001368:	4803      	ldr	r0, [pc, #12]	; (8001378 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800136a:	4904      	ldr	r1, [pc, #16]	; (800137c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800136c:	6800      	ldr	r0, [r0, #0]
 800136e:	2300      	movs	r3, #0
 8001370:	461a      	mov	r2, r3
 8001372:	f00c bbc5 	b.w	800db00 <osMessageQueuePut>
 8001376:	bf00      	nop
 8001378:	200001a4 	.word	0x200001a4
 800137c:	20000004 	.word	0x20000004

08001380 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001380:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001382:	4c08      	ldr	r4, [pc, #32]	; (80013a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001384:	2300      	movs	r3, #0
 8001386:	461a      	mov	r2, r3
 8001388:	a901      	add	r1, sp, #4
 800138a:	6820      	ldr	r0, [r4, #0]
 800138c:	f00c fbee 	bl	800db6c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001390:	6820      	ldr	r0, [r4, #0]
 8001392:	f04f 33ff 	mov.w	r3, #4294967295
 8001396:	2200      	movs	r2, #0
 8001398:	a901      	add	r1, sp, #4
 800139a:	f00c fbe7 	bl	800db6c <osMessageQueueGet>
}
 800139e:	b002      	add	sp, #8
 80013a0:	bd10      	pop	{r4, pc}
 80013a2:	bf00      	nop
 80013a4:	200001a4 	.word	0x200001a4

080013a8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80013a8:	4770      	bx	lr

080013aa <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80013aa:	2000      	movs	r0, #0
 80013ac:	4770      	bx	lr

080013ae <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80013ae:	4770      	bx	lr

080013b0 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80013b0:	4770      	bx	lr

080013b2 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80013b2:	2000      	movs	r0, #0
 80013b4:	4770      	bx	lr

080013b6 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80013b6:	4770      	bx	lr

080013b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80013b8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80013ba:	4a03      	ldr	r2, [pc, #12]	; (80013c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80013bc:	4b03      	ldr	r3, [pc, #12]	; (80013cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80013be:	4804      	ldr	r0, [pc, #16]	; (80013d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80013c0:	2122      	movs	r1, #34	; 0x22
 80013c2:	f029 fc03 	bl	802abcc <__assert_func>
 80013c6:	bf00      	nop
 80013c8:	0802c119 	.word	0x0802c119
 80013cc:	0802c0f6 	.word	0x0802c0f6
 80013d0:	0802c157 	.word	0x0802c157

080013d4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80013d4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80013d6:	4a03      	ldr	r2, [pc, #12]	; (80013e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80013d8:	4b03      	ldr	r3, [pc, #12]	; (80013e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80013da:	4804      	ldr	r0, [pc, #16]	; (80013ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80013dc:	2127      	movs	r1, #39	; 0x27
 80013de:	f029 fbf5 	bl	802abcc <__assert_func>
 80013e2:	bf00      	nop
 80013e4:	0802c1e5 	.word	0x0802c1e5
 80013e8:	0802c0f6 	.word	0x0802c0f6
 80013ec:	0802c157 	.word	0x0802c157

080013f0 <_ZN8STM32DMAD0Ev>:
 80013f0:	b510      	push	{r4, lr}
 80013f2:	2144      	movs	r1, #68	; 0x44
 80013f4:	4604      	mov	r4, r0
 80013f6:	f028 fd02 	bl	8029dfe <_ZdlPvj>
 80013fa:	4620      	mov	r0, r4
 80013fc:	bd10      	pop	{r4, pc}
	...

08001400 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001400:	b538      	push	{r3, r4, r5, lr}
 8001402:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8001404:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001406:	2500      	movs	r5, #0
 8001408:	4b06      	ldr	r3, [pc, #24]	; (8001424 <_ZN8STM32DMAC1Ev+0x24>)
 800140a:	7225      	strb	r5, [r4, #8]
 800140c:	300c      	adds	r0, #12
 800140e:	6060      	str	r0, [r4, #4]
 8001410:	7265      	strb	r5, [r4, #9]
 8001412:	2201      	movs	r2, #1
 8001414:	f841 3b20 	str.w	r3, [r1], #32
 8001418:	f010 fb64 	bl	8011ae4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800141c:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800141e:	4620      	mov	r0, r4
 8001420:	bd38      	pop	{r3, r4, r5, pc}
 8001422:	bf00      	nop
 8001424:	0802c22c 	.word	0x0802c22c

08001428 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001428:	2001      	movs	r0, #1
 800142a:	4770      	bx	lr

0800142c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800142c:	2038      	movs	r0, #56	; 0x38
 800142e:	4770      	bx	lr

08001430 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001430:	2338      	movs	r3, #56	; 0x38
 8001432:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001436:	3008      	adds	r0, #8
 8001438:	4770      	bx	lr

0800143a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800143a:	2338      	movs	r3, #56	; 0x38
 800143c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001440:	3008      	adds	r0, #8
 8001442:	4770      	bx	lr

08001444 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001444:	2001      	movs	r0, #1
 8001446:	4770      	bx	lr

08001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001448:	f241 30f8 	movw	r0, #5112	; 0x13f8
 800144c:	4770      	bx	lr

0800144e <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800144e:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8001452:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001456:	3008      	adds	r0, #8
 8001458:	4770      	bx	lr

0800145a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800145a:	f241 33f8 	movw	r3, #5112	; 0x13f8
 800145e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001462:	3008      	adds	r0, #8
 8001464:	4770      	bx	lr

08001466 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001466:	2001      	movs	r0, #1
 8001468:	4770      	bx	lr

0800146a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800146a:	2010      	movs	r0, #16
 800146c:	4770      	bx	lr

0800146e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800146e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001472:	3008      	adds	r0, #8
 8001474:	4770      	bx	lr

08001476 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001476:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800147a:	3008      	adds	r0, #8
 800147c:	4770      	bx	lr

0800147e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 800147e:	4608      	mov	r0, r1
 8001480:	f003 ba24 	b.w	80048cc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08001484 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001484:	b510      	push	{r4, lr}
 8001486:	4b03      	ldr	r3, [pc, #12]	; (8001494 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001488:	6003      	str	r3, [r0, #0]
 800148a:	4604      	mov	r4, r0
 800148c:	f00e ffc7 	bl	801041e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001490:	4620      	mov	r0, r4
 8001492:	bd10      	pop	{r4, pc}
 8001494:	0802c2e4 	.word	0x0802c2e4

08001498 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001498:	b510      	push	{r4, lr}
 800149a:	4604      	mov	r4, r0
 800149c:	f7ff fff2 	bl	8001484 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80014a0:	4620      	mov	r0, r4
 80014a2:	2140      	movs	r1, #64	; 0x40
 80014a4:	f028 fcab 	bl	8029dfe <_ZdlPvj>
 80014a8:	4620      	mov	r0, r4
 80014aa:	bd10      	pop	{r4, pc}

080014ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80014ac:	b510      	push	{r4, lr}
 80014ae:	4b03      	ldr	r3, [pc, #12]	; (80014bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80014b0:	6003      	str	r3, [r0, #0]
 80014b2:	4604      	mov	r4, r0
 80014b4:	f00e ffb3 	bl	801041e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014b8:	4620      	mov	r0, r4
 80014ba:	bd10      	pop	{r4, pc}
 80014bc:	0802c2b0 	.word	0x0802c2b0

080014c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80014c0:	b510      	push	{r4, lr}
 80014c2:	4604      	mov	r4, r0
 80014c4:	f7ff fff2 	bl	80014ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014c8:	4620      	mov	r0, r4
 80014ca:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014ce:	f028 fc96 	bl	8029dfe <_ZdlPvj>
 80014d2:	4620      	mov	r0, r4
 80014d4:	bd10      	pop	{r4, pc}
	...

080014d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80014d8:	b510      	push	{r4, lr}
 80014da:	4b03      	ldr	r3, [pc, #12]	; (80014e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80014dc:	6003      	str	r3, [r0, #0]
 80014de:	4604      	mov	r4, r0
 80014e0:	f00e ff9d 	bl	801041e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014e4:	4620      	mov	r0, r4
 80014e6:	bd10      	pop	{r4, pc}
 80014e8:	0802c27c 	.word	0x0802c27c

080014ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80014ec:	b510      	push	{r4, lr}
 80014ee:	4604      	mov	r4, r0
 80014f0:	f7ff fff2 	bl	80014d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014f4:	4620      	mov	r0, r4
 80014f6:	2118      	movs	r1, #24
 80014f8:	f028 fc81 	bl	8029dfe <_ZdlPvj>
 80014fc:	4620      	mov	r0, r4
 80014fe:	bd10      	pop	{r4, pc}

08001500 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001500:	b510      	push	{r4, lr}
 8001502:	4b09      	ldr	r3, [pc, #36]	; (8001528 <_ZN12FrontendHeapD1Ev+0x28>)
 8001504:	6003      	str	r3, [r0, #0]
 8001506:	4604      	mov	r4, r0
 8001508:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 800150c:	300c      	adds	r0, #12
 800150e:	f7ff ffb9 	bl	8001484 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001512:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001516:	f7ff ffc9 	bl	80014ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800151a:	f104 0014 	add.w	r0, r4, #20
 800151e:	f7ff ffdb 	bl	80014d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001522:	4620      	mov	r0, r4
 8001524:	bd10      	pop	{r4, pc}
 8001526:	bf00      	nop
 8001528:	0802c318 	.word	0x0802c318

0800152c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800152c:	b508      	push	{r3, lr}
 800152e:	4802      	ldr	r0, [pc, #8]	; (8001538 <__tcf_0+0xc>)
 8001530:	f7ff ffe6 	bl	8001500 <_ZN12FrontendHeapD1Ev>
 8001534:	bd08      	pop	{r3, pc}
 8001536:	bf00      	nop
 8001538:	200001b0 	.word	0x200001b0

0800153c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800153c:	b510      	push	{r4, lr}
 800153e:	4604      	mov	r4, r0
 8001540:	f7ff ffde 	bl	8001500 <_ZN12FrontendHeapD1Ev>
 8001544:	4620      	mov	r0, r4
 8001546:	f241 51d0 	movw	r1, #5584	; 0x15d0
 800154a:	f028 fc58 	bl	8029dfe <_ZdlPvj>
 800154e:	4620      	mov	r0, r4
 8001550:	bd10      	pop	{r4, pc}
	...

08001554 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001554:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001558:	f001 fcda 	bl	8002f10 <_ZN14BitmapDatabase11getInstanceEv>
 800155c:	4605      	mov	r5, r0
 800155e:	f001 fcdb 	bl	8002f18 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001562:	2400      	movs	r4, #0
 8001564:	4601      	mov	r1, r0
 8001566:	4623      	mov	r3, r4
 8001568:	4628      	mov	r0, r5
 800156a:	4622      	mov	r2, r4
 800156c:	9400      	str	r4, [sp, #0]
 800156e:	f017 ffcd 	bl	801950c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001572:	4b26      	ldr	r3, [pc, #152]	; (800160c <touchgfx_init+0xb8>)
 8001574:	4a26      	ldr	r2, [pc, #152]	; (8001610 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001576:	4d27      	ldr	r5, [pc, #156]	; (8001614 <touchgfx_init+0xc0>)
 8001578:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800157a:	4620      	mov	r0, r4
 800157c:	f007 fd86 	bl	800908c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001580:	4825      	ldr	r0, [pc, #148]	; (8001618 <touchgfx_init+0xc4>)
 8001582:	f017 ff2b 	bl	80193dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001586:	682b      	ldr	r3, [r5, #0]
 8001588:	f3bf 8f5b 	dmb	ish
 800158c:	07db      	lsls	r3, r3, #31
 800158e:	d437      	bmi.n	8001600 <touchgfx_init+0xac>
 8001590:	4628      	mov	r0, r5
 8001592:	f028 fc36 	bl	8029e02 <__cxa_guard_acquire>
 8001596:	b398      	cbz	r0, 8001600 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001598:	4c20      	ldr	r4, [pc, #128]	; (800161c <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800159a:	4b21      	ldr	r3, [pc, #132]	; (8001620 <touchgfx_init+0xcc>)
 800159c:	6023      	str	r3, [r4, #0]
 800159e:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80015a2:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 80015a6:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 80015aa:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 80015ae:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80015b0:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80015b4:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80015b6:	6126      	str	r6, [r4, #16]
 80015b8:	f00e ff32 	bl	8010420 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80015bc:	4b19      	ldr	r3, [pc, #100]	; (8001624 <touchgfx_init+0xd0>)
 80015be:	6163      	str	r3, [r4, #20]
 80015c0:	4640      	mov	r0, r8
 80015c2:	f00e ff2d 	bl	8010420 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80015c6:	4b18      	ldr	r3, [pc, #96]	; (8001628 <touchgfx_init+0xd4>)
 80015c8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80015ca:	4638      	mov	r0, r7
 80015cc:	f00e ff28 	bl	8010420 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80015d0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80015d4:	4a15      	ldr	r2, [pc, #84]	; (800162c <touchgfx_init+0xd8>)
 80015d6:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 80015da:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 80015de:	f008 fa41 	bl	8009a64 <_ZN5ModelC1Ev>
 80015e2:	4622      	mov	r2, r4
 80015e4:	f1a6 0108 	sub.w	r1, r6, #8
 80015e8:	4630      	mov	r0, r6
 80015ea:	f007 ff3f 	bl	800946c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80015ee:	4630      	mov	r0, r6
 80015f0:	f003 f96c 	bl	80048cc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 80015f4:	480e      	ldr	r0, [pc, #56]	; (8001630 <touchgfx_init+0xdc>)
 80015f6:	f029 fb07 	bl	802ac08 <atexit>
 80015fa:	4628      	mov	r0, r5
 80015fc:	f028 fc0d 	bl	8029e1a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001600:	480c      	ldr	r0, [pc, #48]	; (8001634 <touchgfx_init+0xe0>)
}
 8001602:	b002      	add	sp, #8
 8001604:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001608:	f7ff bdb4 	b.w	8001174 <_ZN11TouchGFXHAL10initializeEv>
 800160c:	20012e18 	.word	0x20012e18
 8001610:	20001844 	.word	0x20001844
 8001614:	200001ac 	.word	0x200001ac
 8001618:	20000008 	.word	0x20000008
 800161c:	200001b0 	.word	0x200001b0
 8001620:	0802c318 	.word	0x0802c318
 8001624:	0802c27c 	.word	0x0802c27c
 8001628:	0802c2b0 	.word	0x0802c2b0
 800162c:	0802c2e4 	.word	0x0802c2e4
 8001630:	0800152d 	.word	0x0800152d
 8001634:	200017c8 	.word	0x200017c8

08001638 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001638:	4770      	bx	lr
	...

0800163c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800163c:	4801      	ldr	r0, [pc, #4]	; (8001644 <touchgfx_taskEntry+0x8>)
 800163e:	f7ff bda7 	b.w	8001190 <_ZN11TouchGFXHAL9taskEntryEv>
 8001642:	bf00      	nop
 8001644:	200017c8 	.word	0x200017c8

08001648 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001648:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800164a:	4e22      	ldr	r6, [pc, #136]	; (80016d4 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 800164c:	4c22      	ldr	r4, [pc, #136]	; (80016d8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800164e:	4d23      	ldr	r5, [pc, #140]	; (80016dc <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001650:	4b23      	ldr	r3, [pc, #140]	; (80016e0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001652:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001654:	4630      	mov	r0, r6
 8001656:	f7ff fed3 	bl	8001400 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800165a:	4628      	mov	r0, r5
 800165c:	f01c fa22 	bl	801daa4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001660:	4b20      	ldr	r3, [pc, #128]	; (80016e4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001662:	4821      	ldr	r0, [pc, #132]	; (80016e8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001664:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001666:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001668:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 800166c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8001670:	491e      	ldr	r1, [pc, #120]	; (80016ec <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001672:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001674:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001678:	491d      	ldr	r1, [pc, #116]	; (80016f0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800167a:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 800167c:	491d      	ldr	r1, [pc, #116]	; (80016f4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800167e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8001682:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001684:	21f0      	movs	r1, #240	; 0xf0
 8001686:	8001      	strh	r1, [r0, #0]
 8001688:	481b      	ldr	r0, [pc, #108]	; (80016f8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800168a:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800168c:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800168e:	481b      	ldr	r0, [pc, #108]	; (80016fc <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8001690:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001694:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8001698:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800169c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80016a0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80016a4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80016a8:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80016ac:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80016b0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80016b4:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80016b8:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80016ba:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80016be:	8001      	strh	r1, [r0, #0]
 80016c0:	480f      	ldr	r0, [pc, #60]	; (8001700 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80016c2:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80016c4:	490f      	ldr	r1, [pc, #60]	; (8001704 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80016c6:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80016c8:	2201      	movs	r2, #1
 80016ca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80016ce:	4a0e      	ldr	r2, [pc, #56]	; (8001708 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80016d0:	601a      	str	r2, [r3, #0]
}
 80016d2:	bd70      	pop	{r4, r5, r6, pc}
 80016d4:	20001784 	.word	0x20001784
 80016d8:	20001780 	.word	0x20001780
 80016dc:	20001848 	.word	0x20001848
 80016e0:	0802bd50 	.word	0x0802bd50
 80016e4:	200017c8 	.word	0x200017c8
 80016e8:	20012da8 	.word	0x20012da8
 80016ec:	01000001 	.word	0x01000001
 80016f0:	01010000 	.word	0x01010000
 80016f4:	20012db4 	.word	0x20012db4
 80016f8:	20012dae 	.word	0x20012dae
 80016fc:	20012daa 	.word	0x20012daa
 8001700:	20012db0 	.word	0x20012db0
 8001704:	20012dac 	.word	0x20012dac
 8001708:	0802bedc 	.word	0x0802bedc

0800170c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800170c:	2000      	movs	r0, #0
 800170e:	4770      	bx	lr

08001710 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001710:	8081      	strh	r1, [r0, #4]
    }
 8001712:	4770      	bx	lr

08001714 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001714:	80c1      	strh	r1, [r0, #6]
    }
 8001716:	4770      	bx	lr

08001718 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001718:	8101      	strh	r1, [r0, #8]
    }
 800171a:	4770      	bx	lr

0800171c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800171c:	8141      	strh	r1, [r0, #10]
    }
 800171e:	4770      	bx	lr

08001720 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001720:	4770      	bx	lr

08001722 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001722:	4770      	bx	lr

08001724 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001724:	4770      	bx	lr

08001726 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001726:	4770      	bx	lr

08001728 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001728:	4770      	bx	lr

0800172a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800172a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800172c:	88c4      	ldrh	r4, [r0, #6]
 800172e:	6803      	ldr	r3, [r0, #0]
 8001730:	1b12      	subs	r2, r2, r4
 8001732:	8884      	ldrh	r4, [r0, #4]
 8001734:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001736:	1b09      	subs	r1, r1, r4
 8001738:	b212      	sxth	r2, r2
    }
 800173a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800173e:	b209      	sxth	r1, r1
 8001740:	4718      	bx	r3

08001742 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001742:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001746:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001748:	f04f 33ff 	mov.w	r3, #4294967295
 800174c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800174e:	6813      	ldr	r3, [r2, #0]
 8001750:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001752:	6010      	str	r0, [r2, #0]
    }
 8001754:	4770      	bx	lr

08001756 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001756:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800175a:	b11a      	cbz	r2, 8001764 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800175c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001760:	b102      	cbz	r2, 8001764 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001762:	6018      	str	r0, [r3, #0]
        }
    }
 8001764:	4770      	bx	lr

08001766 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001766:	2000      	movs	r0, #0
 8001768:	4770      	bx	lr

0800176a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800176a:	888b      	ldrh	r3, [r1, #4]
 800176c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800176e:	2001      	movs	r0, #1
 8001770:	4770      	bx	lr

08001772 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001772:	4770      	bx	lr

08001774 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001774:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001778:	4770      	bx	lr

0800177a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800177a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800177e:	4770      	bx	lr

08001780 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001780:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001782:	2200      	movs	r2, #0
        return rect.width;
 8001784:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001788:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800178c:	8002      	strh	r2, [r0, #0]
 800178e:	8042      	strh	r2, [r0, #2]
 8001790:	8084      	strh	r4, [r0, #4]
 8001792:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001794:	bd10      	pop	{r4, pc}

08001796 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001796:	2200      	movs	r2, #0
 8001798:	8002      	strh	r2, [r0, #0]
 800179a:	8042      	strh	r2, [r0, #2]
 800179c:	8082      	strh	r2, [r0, #4]
 800179e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80017a0:	4770      	bx	lr
	...

080017a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80017a4:	4b02      	ldr	r3, [pc, #8]	; (80017b0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80017a6:	2290      	movs	r2, #144	; 0x90
 80017a8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80017ac:	4770      	bx	lr
 80017ae:	bf00      	nop
 80017b0:	e000e100 	.word	0xe000e100

080017b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80017b4:	4b02      	ldr	r3, [pc, #8]	; (80017c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80017b6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80017ba:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80017bc:	4770      	bx	lr
 80017be:	bf00      	nop
 80017c0:	e000e100 	.word	0xe000e100

080017c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80017c4:	4a09      	ldr	r2, [pc, #36]	; (80017ec <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80017c6:	490a      	ldr	r1, [pc, #40]	; (80017f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80017c8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80017ca:	480a      	ldr	r0, [pc, #40]	; (80017f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80017cc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80017d0:	3b01      	subs	r3, #1
 80017d2:	b29b      	uxth	r3, r3
 80017d4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80017d6:	6911      	ldr	r1, [r2, #16]
 80017d8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80017dc:	3901      	subs	r1, #1
 80017de:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80017e0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80017e2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80017e4:	f043 0301 	orr.w	r3, r3, #1
 80017e8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80017ea:	4770      	bx	lr
 80017ec:	40016800 	.word	0x40016800
 80017f0:	200018ce 	.word	0x200018ce
 80017f4:	200018cc 	.word	0x200018cc

080017f8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80017f8:	4b01      	ldr	r3, [pc, #4]	; (8001800 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80017fa:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80017fe:	4770      	bx	lr
 8001800:	40016800 	.word	0x40016800

08001804 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001804:	4b02      	ldr	r3, [pc, #8]	; (8001810 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001806:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001808:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800180c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800180e:	4770      	bx	lr
 8001810:	40016800 	.word	0x40016800

08001814 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001814:	b570      	push	{r4, r5, r6, lr}
 8001816:	4604      	mov	r4, r0
    HAL::initialize();
 8001818:	f00f facd 	bl	8010db6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800181c:	6823      	ldr	r3, [r4, #0]
 800181e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001820:	f014 fa76 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 8001824:	4601      	mov	r1, r0
 8001826:	4620      	mov	r0, r4
 8001828:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800182a:	6823      	ldr	r3, [r4, #0]
 800182c:	4a05      	ldr	r2, [pc, #20]	; (8001844 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800182e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001832:	4620      	mov	r0, r4
 8001834:	46ac      	mov	ip, r5
 8001836:	2300      	movs	r3, #0
}
 8001838:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800183c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001840:	4760      	bx	ip
 8001842:	bf00      	nop
 8001844:	d004b000 	.word	0xd004b000

08001848 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001848:	f00f ba9c 	b.w	8010d84 <_ZN8touchgfx3HAL10beginFrameEv>

0800184c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800184c:	f00f baa6 	b.w	8010d9c <_ZN8touchgfx3HAL8endFrameEv>

08001850 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001850:	f00f ba62 	b.w	8010d18 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001854 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001854:	f00f bbc3 	b.w	8010fde <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001858 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001858:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800185c:	b112      	cbz	r2, 8001864 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800185e:	6803      	ldr	r3, [r0, #0]
 8001860:	695b      	ldr	r3, [r3, #20]
 8001862:	4718      	bx	r3
    }
 8001864:	4770      	bx	lr
	...

08001868 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001868:	4b04      	ldr	r3, [pc, #16]	; (800187c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800186a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800186e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001872:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001876:	f3bf 8f6f 	isb	sy
}
 800187a:	4770      	bx	lr
 800187c:	e000e100 	.word	0xe000e100

08001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001880:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001882:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001884:	4e12      	ldr	r6, [pc, #72]	; (80018d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001886:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001888:	4b12      	ldr	r3, [pc, #72]	; (80018d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800188a:	6003      	str	r3, [r0, #0]
 800188c:	6833      	ldr	r3, [r6, #0]
 800188e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001892:	4605      	mov	r5, r0
 8001894:	b10a      	cbz	r2, 800189a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001896:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001898:	b900      	cbnz	r0, 800189c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800189a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800189c:	6803      	ldr	r3, [r0, #0]
 800189e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80018a0:	4798      	blx	r3
        return auxiliaryLCD;
 80018a2:	6833      	ldr	r3, [r6, #0]
 80018a4:	fab0 f480 	clz	r4, r0
 80018a8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80018aa:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80018ac:	b130      	cbz	r0, 80018bc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80018ae:	6803      	ldr	r3, [r0, #0]
 80018b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80018b2:	4798      	blx	r3
 80018b4:	2800      	cmp	r0, #0
 80018b6:	bf08      	it	eq
 80018b8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80018bc:	b92c      	cbnz	r4, 80018ca <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80018be:	4b06      	ldr	r3, [pc, #24]	; (80018d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80018c0:	4a06      	ldr	r2, [pc, #24]	; (80018dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80018c2:	4807      	ldr	r0, [pc, #28]	; (80018e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80018c4:	212c      	movs	r1, #44	; 0x2c
 80018c6:	f029 f981 	bl	802abcc <__assert_func>
    }
 80018ca:	4628      	mov	r0, r5
 80018cc:	bd70      	pop	{r4, r5, r6, pc}
 80018ce:	bf00      	nop
 80018d0:	20012db4 	.word	0x20012db4
 80018d4:	0802c428 	.word	0x0802c428
 80018d8:	0802c324 	.word	0x0802c324
 80018dc:	0802c382 	.word	0x0802c382
 80018e0:	0802c3bb 	.word	0x0802c3bb

080018e4 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80018e4:	4770      	bx	lr
	...

080018e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80018e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80018ec:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80018ee:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80018f2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80018f6:	d105      	bne.n	8001904 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80018f8:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80018fc:	4281      	cmp	r1, r0
 80018fe:	d8fb      	bhi.n	80018f8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8001900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8001904:	4f17      	ldr	r7, [pc, #92]	; (8001964 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001906:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800190a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800190e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001912:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001916:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001918:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800191a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800191c:	b2db      	uxtb	r3, r3
 800191e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8001920:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001924:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001928:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800192c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001930:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001934:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001938:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800193c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001940:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001942:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001946:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800194a:	fb03 4e0e 	mla	lr, r3, lr, r4
 800194e:	fbbe fef5 	udiv	lr, lr, r5
 8001952:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001956:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800195a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800195e:	4281      	cmp	r1, r0
 8001960:	d8de      	bhi.n	8001920 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8001962:	e7cd      	b.n	8001900 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8001964:	fffff800 	.word	0xfffff800

08001968 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001968:	b510      	push	{r4, lr}
        return instance;
 800196a:	4c14      	ldr	r4, [pc, #80]	; (80019bc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800196c:	6823      	ldr	r3, [r4, #0]
 800196e:	b323      	cbz	r3, 80019ba <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001970:	4b13      	ldr	r3, [pc, #76]	; (80019c0 <HAL_LTDC_LineEventCallback+0x58>)
 8001972:	4a14      	ldr	r2, [pc, #80]	; (80019c4 <HAL_LTDC_LineEventCallback+0x5c>)
 8001974:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001976:	8811      	ldrh	r1, [r2, #0]
 8001978:	428b      	cmp	r3, r1
 800197a:	d113      	bne.n	80019a4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800197c:	4b12      	ldr	r3, [pc, #72]	; (80019c8 <HAL_LTDC_LineEventCallback+0x60>)
 800197e:	8819      	ldrh	r1, [r3, #0]
 8001980:	f00a fbe4 	bl	800c14c <HAL_LTDC_ProgramLineEvent>
 8001984:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001986:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800198a:	3301      	adds	r3, #1
 800198c:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001990:	f7ff fcea 	bl	8001368 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001994:	6820      	ldr	r0, [r4, #0]
 8001996:	f00f ff4d 	bl	8011834 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800199a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800199e:	2000      	movs	r0, #0
 80019a0:	f7ff bb62 	b.w	8001068 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80019a4:	f00a fbd2 	bl	800c14c <HAL_LTDC_ProgramLineEvent>
        return instance;
 80019a8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80019aa:	6803      	ldr	r3, [r0, #0]
 80019ac:	6a1b      	ldr	r3, [r3, #32]
 80019ae:	4798      	blx	r3
    }
 80019b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80019b4:	2000      	movs	r0, #0
 80019b6:	f7ff bb6f 	b.w	8001098 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80019ba:	bd10      	pop	{r4, pc}
 80019bc:	20012db4 	.word	0x20012db4
 80019c0:	40016800 	.word	0x40016800
 80019c4:	200018ce 	.word	0x200018ce
 80019c8:	200018cc 	.word	0x200018cc

080019cc <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples) {
 80019cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80019d0:	ed2d 8b02 	vpush	{d8}
 80019d4:	b08d      	sub	sp, #52	; 0x34
 80019d6:	af00      	add	r7, sp, #0
 80019d8:	460d      	mov	r5, r1
 80019da:	60f8      	str	r0, [r7, #12]
 80019dc:	4690      	mov	r8, r2
    // Perform FFT using CMSIS-DSP library
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80019de:	f000 ff19 	bl	8002814 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80019e2:	b203      	sxth	r3, r0
 80019e4:	60bb      	str	r3, [r7, #8]
 80019e6:	009b      	lsls	r3, r3, #2
 80019e8:	607b      	str	r3, [r7, #4]
 80019ea:	3307      	adds	r3, #7
 80019ec:	f023 0307 	bic.w	r3, r3, #7
 80019f0:	ebad 0d03 	sub.w	sp, sp, r3
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80019f4:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80019f6:	46eb      	mov	fp, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80019f8:	b1f0      	cbz	r0, 8001a38 <calculate_freq_and_signalstrength+0x6c>
 80019fa:	3d01      	subs	r5, #1
 80019fc:	46d9      	mov	r9, fp
        input_samples[i] =
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80019fe:	46da      	mov	sl, fp
    for (uint32_t i = 0; i < fft_size; i++) {
 8001a00:	2600      	movs	r6, #0
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8001a02:	f000 ff05 	bl	8002810 <MEAS_get_num_of_chan>
 8001a06:	fb06 5000 	mla	r0, r6, r0, r5
 8001a0a:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 8001a0e:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 8001a12:	3601      	adds	r6, #1
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8001a14:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 8001a18:	42b4      	cmp	r4, r6
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8001a1a:	ecea 7a01 	vstmia	sl!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8001a1e:	d1f0      	bne.n	8001a02 <calculate_freq_and_signalstrength+0x36>
 8001a20:	687e      	ldr	r6, [r7, #4]
    }
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 8001a22:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8001b40 <calculate_freq_and_signalstrength+0x174>
 8001a26:	445e      	add	r6, fp
 8001a28:	edd9 7a00 	vldr	s15, [r9]
 8001a2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001a30:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8001a34:	454e      	cmp	r6, r9
 8001a36:	d1f7      	bne.n	8001a28 <calculate_freq_and_signalstrength+0x5c>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * buffer_size];
 8001a38:	68bb      	ldr	r3, [r7, #8]
 8001a3a:	466a      	mov	r2, sp
 8001a3c:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001a40:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * buffer_size];
 8001a44:	469d      	mov	sp, r3
 8001a46:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001a48:	b2a1      	uxth	r1, r4
 8001a4a:	f107 0018 	add.w	r0, r7, #24
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001a4e:	eef8 8a67 	vcvt.f32.u32	s17, s15
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001a52:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001a54:	f027 f912 	bl	8028c7c <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001a58:	2300      	movs	r3, #0
 8001a5a:	4659      	mov	r1, fp
 8001a5c:	f107 0018 	add.w	r0, r7, #24
 8001a60:	462a      	mov	r2, r5
 8001a62:	f027 f98f 	bl	8028d84 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001a66:	4622      	mov	r2, r4
 8001a68:	4629      	mov	r1, r5
 8001a6a:	4628      	mov	r0, r5
 8001a6c:	f027 fdf8 	bl	8029660 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001a70:	f107 0310 	add.w	r3, r7, #16
 8001a74:	f107 0214 	add.w	r2, r7, #20
 8001a78:	4621      	mov	r1, r4
 8001a7a:	4628      	mov	r0, r5
 8001a7c:	f027 f896 	bl	8028bac <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001a80:	edd7 7a04 	vldr	s15, [r7, #16]
 8001a84:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001a88:	f000 fec6 	bl	8002818 <MEAS_get_samp_freq>
 8001a8c:	ee07 0a90 	vmov	s15, r0
 8001a90:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8001a94:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001b44 <calculate_freq_and_signalstrength+0x178>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001a98:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8001a9c:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8001aa0:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8001aa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001aa8:	d81b      	bhi.n	8001ae2 <calculate_freq_and_signalstrength+0x116>
 8001aaa:	eddf 7a27 	vldr	s15, [pc, #156]	; 8001b48 <calculate_freq_and_signalstrength+0x17c>
 8001aae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8001ab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ab6:	db2d      	blt.n	8001b14 <calculate_freq_and_signalstrength+0x148>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001ab8:	68bb      	ldr	r3, [r7, #8]
 8001aba:	eb03 0983 	add.w	r9, r3, r3, lsl #2
 8001abe:	f000 feab 	bl	8002818 <MEAS_get_samp_freq>
 8001ac2:	eb09 0989 	add.w	r9, r9, r9, lsl #2
 8001ac6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8001aca:	fbb9 f0f0 	udiv	r0, r9, r0
    // set the signal strength to 0
    float signal_strength = 0; 
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8001ace:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8001ad2:	edd0 7a00 	vldr	s15, [r0]
 8001ad6:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8001ada:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8001adc:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8001ae0:	e00b      	b.n	8001afa <calculate_freq_and_signalstrength+0x12e>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8001ae2:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001b4c <calculate_freq_and_signalstrength+0x180>
 8001ae6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8001aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001aee:	d91d      	bls.n	8001b2c <calculate_freq_and_signalstrength+0x160>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001af0:	f000 fe92 	bl	8002818 <MEAS_get_samp_freq>
    float signal_strength = 0; 
 8001af4:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001b50 <calculate_freq_and_signalstrength+0x184>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8001af8:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8001afa:	68fa      	ldr	r2, [r7, #12]
}
 8001afc:	3734      	adds	r7, #52	; 0x34
 8001afe:	4610      	mov	r0, r2
    return fft;
 8001b00:	ed82 8a00 	vstr	s16, [r2]
 8001b04:	ed82 7a01 	vstr	s14, [r2, #4]
 8001b08:	7213      	strb	r3, [r2, #8]
}
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	ecbd 8b02 	vpop	{d8}
 8001b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8001b14:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8001b4c <calculate_freq_and_signalstrength+0x180>
 8001b18:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8001b1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b20:	d8e6      	bhi.n	8001af0 <calculate_freq_and_signalstrength+0x124>
 8001b22:	eeb4 8a47 	vcmp.f32	s16, s14
 8001b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b2a:	d1e1      	bne.n	8001af0 <calculate_freq_and_signalstrength+0x124>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001b2c:	68bb      	ldr	r3, [r7, #8]
 8001b2e:	ebc3 1903 	rsb	r9, r3, r3, lsl #4
 8001b32:	f000 fe71 	bl	8002818 <MEAS_get_samp_freq>
 8001b36:	ea4f 0989 	mov.w	r9, r9, lsl #2
 8001b3a:	fbb9 f0f0 	udiv	r0, r9, r0
    if (given_frequency != 0) {
 8001b3e:	e7c6      	b.n	8001ace <calculate_freq_and_signalstrength+0x102>
 8001b40:	44fff000 	.word	0x44fff000
 8001b44:	425c0000 	.word	0x425c0000
 8001b48:	42340000 	.word	0x42340000
 8001b4c:	42820000 	.word	0x42820000
 8001b50:	00000000 	.word	0x00000000

08001b54 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8001b54:	ed90 6a01 	vldr	s12, [r0, #4]
 8001b58:	edd0 5a02 	vldr	s11, [r0, #8]
 8001b5c:	edd0 4a00 	vldr	s9, [r0]
 8001b60:	edd1 6a02 	vldr	s13, [r1, #8]
 8001b64:	edd1 3a01 	vldr	s7, [r1, #4]
 8001b68:	ed91 4a00 	vldr	s8, [r1]
 8001b6c:	492e      	ldr	r1, [pc, #184]	; (8001c28 <calculate_coefficients_single_pad+0xd4>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001b6e:	4a2f      	ldr	r2, [pc, #188]	; (8001c2c <calculate_coefficients_single_pad+0xd8>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001b70:	4b2f      	ldr	r3, [pc, #188]	; (8001c30 <calculate_coefficients_single_pad+0xdc>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001b72:	ee76 7a25 	vadd.f32	s15, s12, s11
 8001b76:	ee26 1a25 	vmul.f32	s2, s12, s11
 8001b7a:	ee74 7ae7 	vsub.f32	s15, s9, s15
 8001b7e:	eeb0 7a41 	vmov.f32	s14, s2
 8001b82:	eea4 7aa7 	vfma.f32	s14, s9, s15
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8001b86:	ee36 3a65 	vsub.f32	s6, s12, s11
 8001b8a:	ee66 7ae5 	vnmul.f32	s15, s13, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001b8e:	ee23 7a07 	vmul.f32	s14, s6, s14
 8001b92:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 8001b96:	eec5 1a07 	vdiv.f32	s3, s10, s14
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8001b9a:	eee6 7a23 	vfma.f32	s15, s12, s7
 8001b9e:	ee26 5a06 	vmul.f32	s10, s12, s12
 8001ba2:	ee24 7aa4 	vmul.f32	s14, s9, s9
 8001ba6:	ee65 0aa5 	vmul.f32	s1, s11, s11
 8001baa:	ee27 3a03 	vmul.f32	s6, s14, s6
 8001bae:	ee23 0ac5 	vnmul.f32	s0, s7, s10
 8001bb2:	ee67 7a81 	vmul.f32	s15, s15, s2
 8001bb6:	eea0 0aa6 	vfma.f32	s0, s1, s13
 8001bba:	eee3 7a04 	vfma.f32	s15, s6, s8
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001bbe:	ee76 2ac4 	vsub.f32	s5, s13, s8
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8001bc2:	eee4 7a80 	vfma.f32	s15, s9, s0
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001bc6:	ee33 2ac4 	vsub.f32	s4, s7, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001bca:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001bce:	ee22 2a05 	vmul.f32	s4, s4, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001bd2:	ee62 2aa5 	vmul.f32	s5, s5, s11
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001bd6:	ee20 3a85 	vmul.f32	s6, s1, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001bda:	ee24 5a86 	vmul.f32	s10, s9, s12
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8001bde:	edc1 7a00 	vstr	s15, [r1]
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001be2:	ee74 7a66 	vsub.f32	s15, s8, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001be6:	ee34 4a63 	vsub.f32	s8, s8, s7
 8001bea:	ee65 5a25 	vmul.f32	s11, s10, s11
 8001bee:	eeb0 5a62 	vmov.f32	s10, s5
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001bf2:	eea0 2aa7 	vfma.f32	s4, s1, s15
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001bf6:	eea6 5a04 	vfma.f32	s10, s12, s8
 8001bfa:	ee73 7ae6 	vsub.f32	s15, s7, s13
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001bfe:	ee27 7a02 	vmul.f32	s14, s14, s4
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001c02:	ee67 7a81 	vmul.f32	s15, s15, s2
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001c06:	ee76 6ae3 	vsub.f32	s13, s13, s7
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001c0a:	eee4 7a85 	vfma.f32	s15, s9, s10
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001c0e:	eea3 7a26 	vfma.f32	s14, s6, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001c12:	ee65 7aa7 	vmul.f32	s15, s11, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001c16:	ee27 7a21 	vmul.f32	s14, s14, s3
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001c1a:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8001c1e:	ed82 7a00 	vstr	s14, [r2]
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8001c22:	edc3 7a00 	vstr	s15, [r3]
}
 8001c26:	4770      	bx	lr
 8001c28:	200018d0 	.word	0x200018d0
 8001c2c:	200018d4 	.word	0x200018d4
 8001c30:	200018d8 	.word	0x200018d8
 8001c34:	00000000 	.word	0x00000000

08001c38 <calculate_distance_and_angle>:


DISTANCE_ANGLE calculate_distance_and_angle()
{ 
 8001c38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    float32_t distance[3] = {10, 50, 100};
 8001c3c:	4b4a      	ldr	r3, [pc, #296]	; (8001d68 <calculate_distance_and_angle+0x130>)
    uint32_t* Samples = MEAS_start_measure();
    FFT fft = calculate_freq_and_signalstrength(1, Samples);

    float32_t signal_pad = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 8001c3e:	f8df 9134 	ldr.w	r9, [pc, #308]	; 8001d74 <calculate_distance_and_angle+0x13c>
 8001c42:	f8df 8134 	ldr.w	r8, [pc, #308]	; 8001d78 <calculate_distance_and_angle+0x140>
 8001c46:	4f49      	ldr	r7, [pc, #292]	; (8001d6c <calculate_distance_and_angle+0x134>)
{ 
 8001c48:	ed2d 8b04 	vpush	{d8-d9}
 8001c4c:	4604      	mov	r4, r0
    float32_t distance[3] = {10, 50, 100};
 8001c4e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
{ 
 8001c52:	b08f      	sub	sp, #60	; 0x3c
    float32_t distance[3] = {10, 50, 100};
 8001c54:	ad02      	add	r5, sp, #8
 8001c56:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 8001c5a:	f103 020c 	add.w	r2, r3, #12
 8001c5e:	ca07      	ldmia	r2, {r0, r1, r2}
 8001c60:	f10d 0c14 	add.w	ip, sp, #20
    float32_t signal_l[3] = {920, 655, 553};
 8001c64:	3318      	adds	r3, #24
    float32_t signal_r[3] = {1030, 717, 543};
 8001c66:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 8001c6a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001c6e:	ae08      	add	r6, sp, #32
 8001c70:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_r, distance);
 8001c74:	4660      	mov	r0, ip
 8001c76:	4629      	mov	r1, r5
 8001c78:	f7ff ff6c 	bl	8001b54 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_l, distance);
 8001c7c:	4629      	mov	r1, r5
 8001c7e:	4630      	mov	r0, r6
 8001c80:	f7ff ff68 	bl	8001b54 <calculate_coefficients_single_pad>
    uint32_t* Samples = MEAS_start_measure();
 8001c84:	f000 fd98 	bl	80027b8 <MEAS_start_measure>
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001c88:	2101      	movs	r1, #1
    uint32_t* Samples = MEAS_start_measure();
 8001c8a:	4602      	mov	r2, r0
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001c8c:	9001      	str	r0, [sp, #4]
 8001c8e:	a80b      	add	r0, sp, #44	; 0x2c
 8001c90:	f7ff fe9c 	bl	80019cc <calculate_freq_and_signalstrength>
 8001c94:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 8001c98:	ed99 7a00 	vldr	s14, [r9]
 8001c9c:	ed98 6a00 	vldr	s12, [r8]
    // Calculate the angle using the distance
    
    // Set the calculated values
    dist_angle.distance_r = calc_distance;

    fft = calculate_freq_and_signalstrength(2, Samples);
 8001ca0:	9a01      	ldr	r2, [sp, #4]
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 8001ca2:	eec7 8a27 	vdiv.f32	s17, s14, s15
    fft = calculate_freq_and_signalstrength(2, Samples);
 8001ca6:	a80b      	add	r0, sp, #44	; 0x2c
 8001ca8:	2102      	movs	r1, #2
    float32_t calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 8001caa:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8001cae:	ed97 7a00 	vldr	s14, [r7]
 8001cb2:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8001cb6:	ee78 8a87 	vadd.f32	s17, s17, s14
 8001cba:	ee78 8aa7 	vadd.f32	s17, s17, s15
    fft = calculate_freq_and_signalstrength(2, Samples);
 8001cbe:	f7ff fe85 	bl	80019cc <calculate_freq_and_signalstrength>
 8001cc2:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
    signal_pad = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = a + (b / signal_pad) + (c / POW2(signal_pad));
 8001cc6:	ed99 7a00 	vldr	s14, [r9]
 8001cca:	ed98 6a00 	vldr	s12, [r8]
 8001cce:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8001cd2:	ee87 8a27 	vdiv.f32	s16, s14, s15
 8001cd6:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8001cda:	ed97 7a00 	vldr	s14, [r7]
 8001cde:	ee38 8a07 	vadd.f32	s16, s16, s14
 8001ce2:	ee38 8a27 	vadd.f32	s16, s16, s15
    // Set the calculated values
    dist_angle.distance_l = calc_distance;

    // calculate the distance and angle
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
    dist_angle.angle_r = atanf(2 * D_P / (dist_angle.distance_r - dist_angle.distance_l));
 8001ce6:	ee78 7ac8 	vsub.f32	s15, s17, s16
 8001cea:	ee17 0a90 	vmov	r0, s15
 8001cee:	f7fe fc93 	bl	8000618 <__aeabi_f2d>
 8001cf2:	4602      	mov	r2, r0
 8001cf4:	460b      	mov	r3, r1
 8001cf6:	a11a      	add	r1, pc, #104	; (adr r1, 8001d60 <calculate_distance_and_angle+0x128>)
 8001cf8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001cfc:	f7fe fe0e 	bl	800091c <__aeabi_ddiv>
 8001d00:	460f      	mov	r7, r1
 8001d02:	4606      	mov	r6, r0
 8001d04:	f7fe fef2 	bl	8000aec <__aeabi_d2f>
 8001d08:	ee00 0a10 	vmov	s0, r0
 8001d0c:	f028 f8be 	bl	8029e8c <atanf>
    dist_angle.angle_l = atanf(2 * D_P / (dist_angle.distance_l - dist_angle.distance_r));
 8001d10:	f107 4100 	add.w	r1, r7, #2147483648	; 0x80000000
 8001d14:	4630      	mov	r0, r6
    dist_angle.angle_r = atanf(2 * D_P / (dist_angle.distance_r - dist_angle.distance_l));
 8001d16:	eeb0 9a40 	vmov.f32	s18, s0
    dist_angle.angle_l = atanf(2 * D_P / (dist_angle.distance_l - dist_angle.distance_r));
 8001d1a:	f7fe fee7 	bl	8000aec <__aeabi_d2f>
 8001d1e:	ee00 0a10 	vmov	s0, r0
 8001d22:	f028 f8b3 	bl	8029e8c <atanf>
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 8001d26:	ee38 7a88 	vadd.f32	s14, s17, s16
    
    dist_angle.angle = (dist_angle.angle_r * 180 / PI);
 8001d2a:	eddf 7a11 	vldr	s15, [pc, #68]	; 8001d70 <calculate_distance_and_angle+0x138>

    // Return the calculated values
    return dist_angle;
 8001d2e:	edc4 8a00 	vstr	s17, [r4]
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 8001d32:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8001d36:	ee27 7a26 	vmul.f32	s14, s14, s13
    dist_angle.angle = (dist_angle.angle_r * 180 / PI);
 8001d3a:	ee69 7a27 	vmul.f32	s15, s18, s15
}
 8001d3e:	4620      	mov	r0, r4
    return dist_angle;
 8001d40:	ed84 9a01 	vstr	s18, [r4, #4]
 8001d44:	ed84 8a02 	vstr	s16, [r4, #8]
 8001d48:	ed84 0a03 	vstr	s0, [r4, #12]
 8001d4c:	ed84 7a04 	vstr	s14, [r4, #16]
 8001d50:	edc4 7a05 	vstr	s15, [r4, #20]
}
 8001d54:	b00f      	add	sp, #60	; 0x3c
 8001d56:	ecbd 8b04 	vpop	{d8-d9}
 8001d5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d5e:	bf00      	nop
 8001d60:	33333333 	.word	0x33333333
 8001d64:	4043b333 	.word	0x4043b333
 8001d68:	0802bce4 	.word	0x0802bce4
 8001d6c:	200018d0 	.word	0x200018d0
 8001d70:	42652ee0 	.word	0x42652ee0
 8001d74:	200018d4 	.word	0x200018d4
 8001d78:	200018d8 	.word	0x200018d8

08001d7c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001d7c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001d7e:	2064      	movs	r0, #100	; 0x64
 8001d80:	f00b fdc2 	bl	800d908 <osDelay>
  for(;;)
 8001d84:	e7fb      	b.n	8001d7e <StartDefaultTask+0x2>
 8001d86:	bf00      	nop

08001d88 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001d88:	b580      	push	{r7, lr}
 8001d8a:	4c10      	ldr	r4, [pc, #64]	; (8001dcc <StartTimeoutTask+0x44>)
 8001d8c:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8001dd8 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001d90:	4f0f      	ldr	r7, [pc, #60]	; (8001dd0 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001d92:	4e10      	ldr	r6, [pc, #64]	; (8001dd4 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8001d94:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001d96:	2300      	movs	r3, #0
 8001d98:	461a      	mov	r2, r3
 8001d9a:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8001d9c:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001d9e:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8001da2:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001da4:	f00b feac 	bl	800db00 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001da8:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001daa:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001dac:	4638      	mov	r0, r7
 8001dae:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001db0:	b912      	cbnz	r2, 8001db8 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 8001db2:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001db4:	f008 fbae 	bl	800a514 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001db8:	4630      	mov	r0, r6
 8001dba:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001dbe:	f008 fbad 	bl	800a51c <HAL_GPIO_TogglePin>

	  osDelay(1000);
 8001dc2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001dc6:	f00b fd9f 	bl	800d908 <osDelay>
	  sleep_timeout_value--;
 8001dca:	e7e3      	b.n	8001d94 <StartTimeoutTask+0xc>
 8001dcc:	20000014 	.word	0x20000014
 8001dd0:	40021000 	.word	0x40021000
 8001dd4:	40021800 	.word	0x40021800
 8001dd8:	200018e4 	.word	0x200018e4

08001ddc <updateGUI_test>:
	return sleep_timeout_value;
 8001ddc:	4b01      	ldr	r3, [pc, #4]	; (8001de4 <updateGUI_test+0x8>)
}
 8001dde:	6818      	ldr	r0, [r3, #0]
 8001de0:	4770      	bx	lr
 8001de2:	bf00      	nop
 8001de4:	20000014 	.word	0x20000014

08001de8 <gyro_disable>:
{
 8001de8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dea:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001dec:	4e1f      	ldr	r6, [pc, #124]	; (8001e6c <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001dee:	4d20      	ldr	r5, [pc, #128]	; (8001e70 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001df0:	4c20      	ldr	r4, [pc, #128]	; (8001e74 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001df2:	2700      	movs	r7, #0
 8001df4:	9700      	str	r7, [sp, #0]
 8001df6:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001df8:	f043 0304 	orr.w	r3, r3, #4
 8001dfc:	6333      	str	r3, [r6, #48]	; 0x30
 8001dfe:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001e00:	f003 0304 	and.w	r3, r3, #4
 8001e04:	9300      	str	r3, [sp, #0]
 8001e06:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001e08:	682b      	ldr	r3, [r5, #0]
 8001e0a:	f023 030c 	bic.w	r3, r3, #12
 8001e0e:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8001e10:	682b      	ldr	r3, [r5, #0]
 8001e12:	f043 0304 	orr.w	r3, r3, #4
 8001e16:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001e18:	69ab      	ldr	r3, [r5, #24]
 8001e1a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001e1e:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8001e20:	200a      	movs	r0, #10
 8001e22:	f008 f999 	bl	800a158 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001e26:	682b      	ldr	r3, [r5, #0]
 8001e28:	f043 030c 	orr.w	r3, r3, #12
 8001e2c:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001e2e:	9701      	str	r7, [sp, #4]
 8001e30:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001e32:	f043 0320 	orr.w	r3, r3, #32
 8001e36:	6333      	str	r3, [r6, #48]	; 0x30
 8001e38:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001e3a:	f003 0320 	and.w	r3, r3, #32
 8001e3e:	9301      	str	r3, [sp, #4]
 8001e40:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001e42:	68a3      	ldr	r3, [r4, #8]
 8001e44:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001e48:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001e4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e4c:	f023 030f 	bic.w	r3, r3, #15
 8001e50:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8001e52:	68e3      	ldr	r3, [r4, #12]
 8001e54:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001e58:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001e5a:	200a      	movs	r0, #10
 8001e5c:	f008 f97c 	bl	800a158 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001e60:	6823      	ldr	r3, [r4, #0]
 8001e62:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001e66:	6023      	str	r3, [r4, #0]
}
 8001e68:	b003      	add	sp, #12
 8001e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e6c:	40023800 	.word	0x40023800
 8001e70:	40020800 	.word	0x40020800
 8001e74:	40021400 	.word	0x40021400

08001e78 <SystemClock_Config>:
{
 8001e78:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001e7a:	2400      	movs	r4, #0
{
 8001e7c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001e7e:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8001e82:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001e86:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001e8a:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e8e:	4a1e      	ldr	r2, [pc, #120]	; (8001f08 <SystemClock_Config+0x90>)
 8001e90:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001e92:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e94:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001e96:	4b1d      	ldr	r3, [pc, #116]	; (8001f0c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e98:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001e9c:	6411      	str	r1, [r2, #64]	; 0x40
 8001e9e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001ea0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001ea4:	9201      	str	r2, [sp, #4]
 8001ea6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001ea8:	9402      	str	r4, [sp, #8]
 8001eaa:	681a      	ldr	r2, [r3, #0]
 8001eac:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001eb0:	601a      	str	r2, [r3, #0]
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001eb8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001eba:	2201      	movs	r2, #1
 8001ebc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001ec0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001ec4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001ec6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001ec8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001eca:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001ece:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ed2:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001ed6:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001ed8:	2202      	movs	r2, #2
 8001eda:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001edc:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001ede:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001ee2:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ee4:	f00a f954 	bl	800c190 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001ee8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001eea:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001eee:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001ef2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ef6:	a803      	add	r0, sp, #12
 8001ef8:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001efa:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001efe:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001f00:	f00a fb5e 	bl	800c5c0 <HAL_RCC_ClockConfig>
}
 8001f04:	b015      	add	sp, #84	; 0x54
 8001f06:	bd30      	pop	{r4, r5, pc}
 8001f08:	40023800 	.word	0x40023800
 8001f0c:	40007000 	.word	0x40007000

08001f10 <main>:
{
 8001f10:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f14:	2400      	movs	r4, #0
{
 8001f16:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001f18:	f008 f8f2 	bl	800a100 <HAL_Init>
  SystemClock_Config();
 8001f1c:	f7ff ffac 	bl	8001e78 <SystemClock_Config>
  gyro_disable();
 8001f20:	f7ff ff62 	bl	8001de8 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f24:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001f28:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001f2c:	4bbe      	ldr	r3, [pc, #760]	; (8002228 <main+0x318>)
 8001f2e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f30:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001f32:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001f34:	48bd      	ldr	r0, [pc, #756]	; (800222c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8001f36:	4dbe      	ldr	r5, [pc, #760]	; (8002230 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001f38:	f041 0110 	orr.w	r1, r1, #16
 8001f3c:	6319      	str	r1, [r3, #48]	; 0x30
 8001f3e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f40:	f001 0110 	and.w	r1, r1, #16
 8001f44:	9100      	str	r1, [sp, #0]
 8001f46:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f48:	9401      	str	r4, [sp, #4]
 8001f4a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f4c:	f041 0120 	orr.w	r1, r1, #32
 8001f50:	6319      	str	r1, [r3, #48]	; 0x30
 8001f52:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f54:	f001 0120 	and.w	r1, r1, #32
 8001f58:	9101      	str	r1, [sp, #4]
 8001f5a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001f5c:	9402      	str	r4, [sp, #8]
 8001f5e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f60:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001f64:	6319      	str	r1, [r3, #48]	; 0x30
 8001f66:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f68:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001f6c:	9102      	str	r1, [sp, #8]
 8001f6e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f70:	9403      	str	r4, [sp, #12]
 8001f72:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f74:	f041 0104 	orr.w	r1, r1, #4
 8001f78:	6319      	str	r1, [r3, #48]	; 0x30
 8001f7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f7c:	f001 0104 	and.w	r1, r1, #4
 8001f80:	9103      	str	r1, [sp, #12]
 8001f82:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f84:	9404      	str	r4, [sp, #16]
 8001f86:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f88:	f041 0101 	orr.w	r1, r1, #1
 8001f8c:	6319      	str	r1, [r3, #48]	; 0x30
 8001f8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f90:	f001 0101 	and.w	r1, r1, #1
 8001f94:	9104      	str	r1, [sp, #16]
 8001f96:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001f98:	9405      	str	r4, [sp, #20]
 8001f9a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f9c:	f041 0102 	orr.w	r1, r1, #2
 8001fa0:	6319      	str	r1, [r3, #48]	; 0x30
 8001fa2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001fa4:	f001 0102 	and.w	r1, r1, #2
 8001fa8:	9105      	str	r1, [sp, #20]
 8001faa:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001fac:	9406      	str	r4, [sp, #24]
 8001fae:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001fb0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001fb4:	6319      	str	r1, [r3, #48]	; 0x30
 8001fb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001fb8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001fbc:	9106      	str	r1, [sp, #24]
 8001fbe:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fc0:	9407      	str	r4, [sp, #28]
 8001fc2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001fc4:	f041 0108 	orr.w	r1, r1, #8
 8001fc8:	6319      	str	r1, [r3, #48]	; 0x30
 8001fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fcc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001fd0:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fd2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001fd4:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fd6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001fd8:	f008 fa9c 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001fdc:	4893      	ldr	r0, [pc, #588]	; (800222c <main+0x31c>)
 8001fde:	2120      	movs	r1, #32
 8001fe0:	2201      	movs	r2, #1
 8001fe2:	f008 fa97 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001fe6:	4893      	ldr	r0, [pc, #588]	; (8002234 <main+0x324>)
 8001fe8:	4622      	mov	r2, r4
 8001fea:	2114      	movs	r1, #20
 8001fec:	f008 fa92 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8001ff0:	4891      	ldr	r0, [pc, #580]	; (8002238 <main+0x328>)
 8001ff2:	4622      	mov	r2, r4
 8001ff4:	2180      	movs	r1, #128	; 0x80
 8001ff6:	f008 fa8d 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001ffa:	4890      	ldr	r0, [pc, #576]	; (800223c <main+0x32c>)
 8001ffc:	4622      	mov	r2, r4
 8001ffe:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002002:	f008 fa87 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8002006:	488e      	ldr	r0, [pc, #568]	; (8002240 <main+0x330>)
 8002008:	4622      	mov	r2, r4
 800200a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800200e:	f008 fa81 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8002012:	488c      	ldr	r0, [pc, #560]	; (8002244 <main+0x334>)
 8002014:	4622      	mov	r2, r4
 8002016:	2104      	movs	r1, #4
 8002018:	f008 fa7c 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800201c:	2201      	movs	r2, #1
 800201e:	4889      	ldr	r0, [pc, #548]	; (8002244 <main+0x334>)
 8002020:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002024:	f008 fa76 	bl	800a514 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002028:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800202a:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800202e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002030:	487e      	ldr	r0, [pc, #504]	; (800222c <main+0x31c>)
 8002032:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8002034:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002038:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203c:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002040:	f008 f924 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002044:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8002048:	4878      	ldr	r0, [pc, #480]	; (800222c <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800204a:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800204c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800204e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002052:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8002054:	f008 f91a 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8002058:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800205a:	4874      	ldr	r0, [pc, #464]	; (800222c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800205c:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800205e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002060:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002062:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002066:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800206a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800206c:	f008 f90e 	bl	800a28c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002070:	4870      	ldr	r0, [pc, #448]	; (8002234 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002072:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002076:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002078:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800207c:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800207e:	f008 f905 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8002082:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8002084:	486c      	ldr	r0, [pc, #432]	; (8002238 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8002086:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8002088:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800208a:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800208e:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002092:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8002094:	f008 f8fa 	bl	800a28c <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8002098:	4866      	ldr	r0, [pc, #408]	; (8002234 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800209a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800209c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800209e:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80020a2:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80020a6:	f008 f8f1 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80020aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020ae:	4863      	ldr	r0, [pc, #396]	; (800223c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80020b0:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020b2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020b4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80020b8:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020ba:	f008 f8e7 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80020be:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020c2:	485f      	ldr	r0, [pc, #380]	; (8002240 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80020c4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020c6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020c8:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80020cc:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020ce:	f008 f8dd 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80020d2:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020d6:	485b      	ldr	r0, [pc, #364]	; (8002244 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80020d8:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020da:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020dc:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80020e0:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020e2:	f008 f8d3 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80020e6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020ea:	4853      	ldr	r0, [pc, #332]	; (8002238 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80020ec:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020ee:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80020f0:	230f      	movs	r3, #15
 80020f2:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020f4:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80020f8:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020fa:	f008 f8c7 	bl	800a28c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80020fe:	4622      	mov	r2, r4
 8002100:	2105      	movs	r1, #5
 8002102:	2009      	movs	r0, #9
 8002104:	f008 f84c 	bl	800a1a0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8002108:	2009      	movs	r0, #9
 800210a:	f008 f887 	bl	800a21c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800210e:	484e      	ldr	r0, [pc, #312]	; (8002248 <main+0x338>)
 8002110:	4b4e      	ldr	r3, [pc, #312]	; (800224c <main+0x33c>)
 8002112:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8002114:	f008 f890 	bl	800a238 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8002118:	494d      	ldr	r1, [pc, #308]	; (8002250 <main+0x340>)
 800211a:	4b4e      	ldr	r3, [pc, #312]	; (8002254 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800211c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800211e:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002122:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002126:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8002128:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800212c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002130:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8002134:	f008 fc54 	bl	800a9e0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8002138:	4651      	mov	r1, sl
 800213a:	4628      	mov	r0, r5
 800213c:	f009 fe1c 	bl	800bd78 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8002140:	4621      	mov	r1, r4
 8002142:	4628      	mov	r0, r5
 8002144:	f009 fe38 	bl	800bdb8 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002148:	f8df c118 	ldr.w	ip, [pc, #280]	; 8002264 <main+0x354>
  hspi5.Instance = SPI5;
 800214c:	4842      	ldr	r0, [pc, #264]	; (8002258 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800214e:	4d43      	ldr	r5, [pc, #268]	; (800225c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002150:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002152:	f44f 7382 	mov.w	r3, #260	; 0x104
 8002156:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800215a:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800215e:	2318      	movs	r3, #24
 8002160:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8002164:	230a      	movs	r3, #10
 8002166:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8002168:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800216c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8002170:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8002174:	f00a fd12 	bl	800cb9c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002178:	2307      	movs	r3, #7
 800217a:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800217c:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800217e:	4b38      	ldr	r3, [pc, #224]	; (8002260 <main+0x350>)
 8002180:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002182:	2040      	movs	r0, #64	; 0x40
 8002184:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8002188:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800218c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002190:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002192:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002194:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002198:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800219a:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800219c:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80021a0:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80021a4:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80021a6:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80021a8:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 80021ac:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 80021b0:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 80021b2:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80021b4:	f00a fc00 	bl	800c9b8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80021b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80021bc:	a909      	add	r1, sp, #36	; 0x24
 80021be:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80021c0:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80021c4:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 80021c8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80021ca:	f00a fc17 	bl	800c9fc <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80021ce:	4630      	mov	r0, r6
 80021d0:	f007 ffc2 	bl	800a158 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80021d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80021d8:	a909      	add	r1, sp, #36	; 0x24
 80021da:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80021dc:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80021e0:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80021e4:	f00a fc0a 	bl	800c9fc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80021e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80021ec:	a909      	add	r1, sp, #36	; 0x24
 80021ee:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80021f0:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80021f4:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80021f8:	f00a fc00 	bl	800c9fc <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80021fc:	f44f 730c 	mov.w	r3, #560	; 0x230
 8002200:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8002202:	9b08      	ldr	r3, [sp, #32]
 8002204:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002206:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800220a:	a909      	add	r1, sp, #36	; 0x24
 800220c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800220e:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8002212:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002214:	f00a fbf2 	bl	800c9fc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8002218:	4628      	mov	r0, r5
 800221a:	f240 516a 	movw	r1, #1386	; 0x56a
 800221e:	f00a fc0b 	bl	800ca38 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002222:	2234      	movs	r2, #52	; 0x34
 8002224:	e020      	b.n	8002268 <main+0x358>
 8002226:	bf00      	nop
 8002228:	40023800 	.word	0x40023800
 800222c:	40021000 	.word	0x40021000
 8002230:	200018f8 	.word	0x200018f8
 8002234:	40020800 	.word	0x40020800
 8002238:	40020000 	.word	0x40020000
 800223c:	40020400 	.word	0x40020400
 8002240:	40020c00 	.word	0x40020c00
 8002244:	40021800 	.word	0x40021800
 8002248:	200018f0 	.word	0x200018f0
 800224c:	40023000 	.word	0x40023000
 8002250:	40005c00 	.word	0x40005c00
 8002254:	000186a0 	.word	0x000186a0
 8002258:	20001a28 	.word	0x20001a28
 800225c:	200019f4 	.word	0x200019f4
 8002260:	a0000140 	.word	0xa0000140
 8002264:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8002268:	4d3a      	ldr	r5, [pc, #232]	; (8002354 <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800226a:	4621      	mov	r1, r4
 800226c:	eb0d 0002 	add.w	r0, sp, r2
 8002270:	f028 feb1 	bl	802afd6 <memset>
  hltdc.Instance = LTDC;
 8002274:	4b38      	ldr	r3, [pc, #224]	; (8002358 <main+0x448>)
 8002276:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8002278:	2309      	movs	r3, #9
 800227a:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800227c:	231d      	movs	r3, #29
 800227e:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8002280:	f240 1b0d 	movw	fp, #269	; 0x10d
 8002284:	f240 1343 	movw	r3, #323	; 0x143
 8002288:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800228c:	f240 1217 	movw	r2, #279	; 0x117
 8002290:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8002294:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8002296:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8002298:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 800229c:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 800229e:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80022a2:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 80022a6:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 80022aa:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80022ae:	f009 fda7 	bl	800be00 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 80022b2:	23f0      	movs	r3, #240	; 0xf0
 80022b4:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 80022b6:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 80022b8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80022bc:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 80022be:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 80022c0:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80022c2:	a90d      	add	r1, sp, #52	; 0x34
 80022c4:	4622      	mov	r2, r4
 80022c6:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80022c8:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80022ca:	f44f 6680 	mov.w	r6, #1024	; 0x400
 80022ce:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 80022d0:	4d22      	ldr	r5, [pc, #136]	; (800235c <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 80022d2:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80022d4:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80022d8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80022da:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 80022dc:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 80022de:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 80022e0:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80022e4:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80022e8:	f009 fe60 	bl	800bfac <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80022ec:	4b1c      	ldr	r3, [pc, #112]	; (8002360 <main+0x450>)
 80022ee:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80022f4:	682b      	ldr	r3, [r5, #0]
 80022f6:	68db      	ldr	r3, [r3, #12]
 80022f8:	4798      	blx	r3
  MX_TouchGFX_Init();
 80022fa:	f7fe fdf1 	bl	8000ee0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80022fe:	f7fe fded 	bl	8000edc <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8002302:	f7ff fd71 	bl	8001de8 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8002306:	f000 f945 	bl	8002594 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800230a:	f000 f977 	bl	80025fc <MEAS_timer_init>
  osKernelInitialize();
 800230e:	f00b fa83 	bl	800d818 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8002312:	4a14      	ldr	r2, [pc, #80]	; (8002364 <main+0x454>)
 8002314:	4639      	mov	r1, r7
 8002316:	4650      	mov	r0, sl
 8002318:	f00b fbb8 	bl	800da8c <osMessageQueueNew>
 800231c:	4b12      	ldr	r3, [pc, #72]	; (8002368 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800231e:	4a13      	ldr	r2, [pc, #76]	; (800236c <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8002320:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002322:	4621      	mov	r1, r4
 8002324:	4812      	ldr	r0, [pc, #72]	; (8002370 <main+0x460>)
 8002326:	f00b faa3 	bl	800d870 <osThreadNew>
 800232a:	4b12      	ldr	r3, [pc, #72]	; (8002374 <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800232c:	4a12      	ldr	r2, [pc, #72]	; (8002378 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800232e:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002330:	4621      	mov	r1, r4
 8002332:	4812      	ldr	r0, [pc, #72]	; (800237c <main+0x46c>)
 8002334:	f00b fa9c 	bl	800d870 <osThreadNew>
 8002338:	4b11      	ldr	r3, [pc, #68]	; (8002380 <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800233a:	4a12      	ldr	r2, [pc, #72]	; (8002384 <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800233c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800233e:	4621      	mov	r1, r4
 8002340:	4811      	ldr	r0, [pc, #68]	; (8002388 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002342:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8002344:	f00b fa94 	bl	800d870 <osThreadNew>
 8002348:	4b10      	ldr	r3, [pc, #64]	; (800238c <main+0x47c>)
 800234a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800234c:	f00b fa76 	bl	800d83c <osKernelStart>
  while (1)
 8002350:	e7fe      	b.n	8002350 <main+0x440>
 8002352:	bf00      	nop
 8002354:	2000194c 	.word	0x2000194c
 8002358:	40016800 	.word	0x40016800
 800235c:	200018e0 	.word	0x200018e0
 8002360:	20000018 	.word	0x20000018
 8002364:	0802c498 	.word	0x0802c498
 8002368:	200018e4 	.word	0x200018e4
 800236c:	0802c4d4 	.word	0x0802c4d4
 8002370:	08001d7d 	.word	0x08001d7d
 8002374:	200018ec 	.word	0x200018ec
 8002378:	0802c474 	.word	0x0802c474
 800237c:	08000ef1 	.word	0x08000ef1
 8002380:	200018dc 	.word	0x200018dc
 8002384:	0802c4b0 	.word	0x0802c4b0
 8002388:	08001d89 	.word	0x08001d89
 800238c:	200018e8 	.word	0x200018e8

08002390 <IOE_Init>:
 8002390:	4770      	bx	lr
 8002392:	bf00      	nop

08002394 <IOE_ITConfig>:
 8002394:	4770      	bx	lr
 8002396:	bf00      	nop

08002398 <IOE_Write>:
{
 8002398:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800239a:	4c09      	ldr	r4, [pc, #36]	; (80023c0 <IOE_Write+0x28>)
{
 800239c:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800239e:	6824      	ldr	r4, [r4, #0]
 80023a0:	9402      	str	r4, [sp, #8]
{
 80023a2:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80023a4:	2301      	movs	r3, #1
 80023a6:	f88d 4017 	strb.w	r4, [sp, #23]
 80023aa:	f10d 0417 	add.w	r4, sp, #23
 80023ae:	460a      	mov	r2, r1
 80023b0:	9301      	str	r3, [sp, #4]
 80023b2:	4601      	mov	r1, r0
 80023b4:	9400      	str	r4, [sp, #0]
 80023b6:	4803      	ldr	r0, [pc, #12]	; (80023c4 <IOE_Write+0x2c>)
 80023b8:	f008 fbda 	bl	800ab70 <HAL_I2C_Mem_Write>
}
 80023bc:	b006      	add	sp, #24
 80023be:	bd10      	pop	{r4, pc}
 80023c0:	2000000c 	.word	0x2000000c
 80023c4:	200018f8 	.word	0x200018f8

080023c8 <IOE_Read>:
{
 80023c8:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80023ca:	4b0b      	ldr	r3, [pc, #44]	; (80023f8 <IOE_Read+0x30>)
{
 80023cc:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80023ce:	681b      	ldr	r3, [r3, #0]
 80023d0:	9302      	str	r3, [sp, #8]
{
 80023d2:	4684      	mov	ip, r0
 80023d4:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80023d6:	2301      	movs	r3, #1
 80023d8:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80023dc:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80023de:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80023e2:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80023e6:	4661      	mov	r1, ip
 80023e8:	4804      	ldr	r0, [pc, #16]	; (80023fc <IOE_Read+0x34>)
 80023ea:	f008 fcb3 	bl	800ad54 <HAL_I2C_Mem_Read>
}
 80023ee:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80023f2:	b007      	add	sp, #28
 80023f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80023f8:	2000000c 	.word	0x2000000c
 80023fc:	200018f8 	.word	0x200018f8

08002400 <IOE_ReadMultiple>:
{
 8002400:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002402:	4c09      	ldr	r4, [pc, #36]	; (8002428 <IOE_ReadMultiple+0x28>)
{
 8002404:	b084      	sub	sp, #16
 8002406:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002408:	6820      	ldr	r0, [r4, #0]
 800240a:	9002      	str	r0, [sp, #8]
 800240c:	e9cd 2300 	strd	r2, r3, [sp]
 8002410:	4806      	ldr	r0, [pc, #24]	; (800242c <IOE_ReadMultiple+0x2c>)
 8002412:	460a      	mov	r2, r1
 8002414:	2301      	movs	r3, #1
 8002416:	4661      	mov	r1, ip
 8002418:	f008 fc9c 	bl	800ad54 <HAL_I2C_Mem_Read>
}
 800241c:	3800      	subs	r0, #0
 800241e:	bf18      	it	ne
 8002420:	2001      	movne	r0, #1
 8002422:	b004      	add	sp, #16
 8002424:	bd10      	pop	{r4, pc}
 8002426:	bf00      	nop
 8002428:	2000000c 	.word	0x2000000c
 800242c:	200018f8 	.word	0x200018f8

08002430 <IOE_Delay>:
 8002430:	f007 be92 	b.w	800a158 <HAL_Delay>

08002434 <LCD_IO_Init>:
{
 8002434:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002436:	4806      	ldr	r0, [pc, #24]	; (8002450 <LCD_IO_Init+0x1c>)
 8002438:	2200      	movs	r2, #0
 800243a:	2104      	movs	r1, #4
 800243c:	f008 f86a 	bl	800a514 <HAL_GPIO_WritePin>
}
 8002440:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002444:	4802      	ldr	r0, [pc, #8]	; (8002450 <LCD_IO_Init+0x1c>)
 8002446:	2201      	movs	r2, #1
 8002448:	2104      	movs	r1, #4
 800244a:	f008 b863 	b.w	800a514 <HAL_GPIO_WritePin>
 800244e:	bf00      	nop
 8002450:	40020800 	.word	0x40020800

08002454 <LCD_IO_WriteData>:
{
 8002454:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002456:	4d10      	ldr	r5, [pc, #64]	; (8002498 <LCD_IO_WriteData+0x44>)
{
 8002458:	b083      	sub	sp, #12
 800245a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800245c:	2201      	movs	r2, #1
 800245e:	480f      	ldr	r0, [pc, #60]	; (800249c <LCD_IO_WriteData+0x48>)
 8002460:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002464:	f008 f856 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002468:	4628      	mov	r0, r5
 800246a:	2200      	movs	r2, #0
 800246c:	2104      	movs	r1, #4
 800246e:	f008 f851 	bl	800a514 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002472:	4b0b      	ldr	r3, [pc, #44]	; (80024a0 <LCD_IO_WriteData+0x4c>)
 8002474:	480b      	ldr	r0, [pc, #44]	; (80024a4 <LCD_IO_WriteData+0x50>)
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	f8ad 4006 	strh.w	r4, [sp, #6]
 800247c:	f10d 0106 	add.w	r1, sp, #6
 8002480:	2201      	movs	r2, #1
 8002482:	f00a fbed 	bl	800cc60 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002486:	2201      	movs	r2, #1
 8002488:	2104      	movs	r1, #4
 800248a:	4628      	mov	r0, r5
}
 800248c:	b003      	add	sp, #12
 800248e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002492:	f008 b83f 	b.w	800a514 <HAL_GPIO_WritePin>
 8002496:	bf00      	nop
 8002498:	40020800 	.word	0x40020800
 800249c:	40020c00 	.word	0x40020c00
 80024a0:	20000010 	.word	0x20000010
 80024a4:	20001a28 	.word	0x20001a28

080024a8 <LCD_IO_WriteReg>:
{
 80024a8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80024aa:	4d10      	ldr	r5, [pc, #64]	; (80024ec <LCD_IO_WriteReg+0x44>)
{
 80024ac:	b083      	sub	sp, #12
 80024ae:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80024b0:	2200      	movs	r2, #0
 80024b2:	480f      	ldr	r0, [pc, #60]	; (80024f0 <LCD_IO_WriteReg+0x48>)
 80024b4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80024b8:	f008 f82c 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80024bc:	4628      	mov	r0, r5
 80024be:	2200      	movs	r2, #0
 80024c0:	2104      	movs	r1, #4
 80024c2:	f008 f827 	bl	800a514 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80024c6:	4b0b      	ldr	r3, [pc, #44]	; (80024f4 <LCD_IO_WriteReg+0x4c>)
 80024c8:	480b      	ldr	r0, [pc, #44]	; (80024f8 <LCD_IO_WriteReg+0x50>)
 80024ca:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80024cc:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80024d0:	f10d 0106 	add.w	r1, sp, #6
 80024d4:	2201      	movs	r2, #1
 80024d6:	f00a fbc3 	bl	800cc60 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80024da:	2201      	movs	r2, #1
 80024dc:	2104      	movs	r1, #4
 80024de:	4628      	mov	r0, r5
}
 80024e0:	b003      	add	sp, #12
 80024e2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80024e6:	f008 b815 	b.w	800a514 <HAL_GPIO_WritePin>
 80024ea:	bf00      	nop
 80024ec:	40020800 	.word	0x40020800
 80024f0:	40020c00 	.word	0x40020c00
 80024f4:	20000010 	.word	0x20000010
 80024f8:	20001a28 	.word	0x20001a28

080024fc <LCD_IO_ReadData>:
{
 80024fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002500:	4e19      	ldr	r6, [pc, #100]	; (8002568 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002502:	4f1a      	ldr	r7, [pc, #104]	; (800256c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002504:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8002570 <LCD_IO_ReadData+0x74>
 8002508:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8002574 <LCD_IO_ReadData+0x78>
{
 800250c:	b083      	sub	sp, #12
 800250e:	460c      	mov	r4, r1
 8002510:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002512:	2200      	movs	r2, #0
 8002514:	4630      	mov	r0, r6
 8002516:	2104      	movs	r1, #4
 8002518:	f007 fffc 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800251c:	4638      	mov	r0, r7
 800251e:	2200      	movs	r2, #0
 8002520:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002524:	f007 fff6 	bl	800a514 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002528:	f8d9 3000 	ldr.w	r3, [r9]
 800252c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8002530:	a901      	add	r1, sp, #4
 8002532:	2201      	movs	r2, #1
 8002534:	4640      	mov	r0, r8
 8002536:	f00a fb93 	bl	800cc60 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800253a:	f8d9 3000 	ldr.w	r3, [r9]
 800253e:	4622      	mov	r2, r4
 8002540:	a901      	add	r1, sp, #4
 8002542:	4640      	mov	r0, r8
 8002544:	f00a fe34 	bl	800d1b0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002548:	4638      	mov	r0, r7
 800254a:	2201      	movs	r2, #1
 800254c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002550:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002552:	f007 ffdf 	bl	800a514 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002556:	4630      	mov	r0, r6
 8002558:	2201      	movs	r2, #1
 800255a:	2104      	movs	r1, #4
 800255c:	f007 ffda 	bl	800a514 <HAL_GPIO_WritePin>
}
 8002560:	4620      	mov	r0, r4
 8002562:	b003      	add	sp, #12
 8002564:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002568:	40020800 	.word	0x40020800
 800256c:	40020c00 	.word	0x40020c00
 8002570:	20000010 	.word	0x20000010
 8002574:	20001a28 	.word	0x20001a28

08002578 <LCD_Delay>:
  HAL_Delay(Delay);
 8002578:	f007 bdee 	b.w	800a158 <HAL_Delay>

0800257c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800257c:	4b03      	ldr	r3, [pc, #12]	; (800258c <HAL_TIM_PeriodElapsedCallback+0x10>)
 800257e:	6802      	ldr	r2, [r0, #0]
 8002580:	429a      	cmp	r2, r3
 8002582:	d000      	beq.n	8002586 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002584:	4770      	bx	lr
    HAL_IncTick();
 8002586:	f007 bdd5 	b.w	800a134 <HAL_IncTick>
 800258a:	bf00      	nop
 800258c:	40001000 	.word	0x40001000

08002590 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002590:	4770      	bx	lr
 8002592:	bf00      	nop

08002594 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8002594:	b410      	push	{r4}
 8002596:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8002598:	4b15      	ldr	r3, [pc, #84]	; (80025f0 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800259a:	4916      	ldr	r1, [pc, #88]	; (80025f4 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800259c:	2400      	movs	r4, #0
 800259e:	9400      	str	r4, [sp, #0]
 80025a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80025a2:	f042 0220 	orr.w	r2, r2, #32
 80025a6:	631a      	str	r2, [r3, #48]	; 0x30
 80025a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80025aa:	f002 0220 	and.w	r2, r2, #32
 80025ae:	9200      	str	r2, [sp, #0]
 80025b0:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80025b2:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80025b4:	4a10      	ldr	r2, [pc, #64]	; (80025f8 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80025b6:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80025ba:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80025bc:	6808      	ldr	r0, [r1, #0]
 80025be:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80025c2:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80025c4:	9401      	str	r4, [sp, #4]
 80025c6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80025c8:	f041 0104 	orr.w	r1, r1, #4
 80025cc:	6319      	str	r1, [r3, #48]	; 0x30
 80025ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025d0:	f003 0304 	and.w	r3, r3, #4
 80025d4:	9301      	str	r3, [sp, #4]
 80025d6:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80025d8:	6813      	ldr	r3, [r2, #0]
 80025da:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80025de:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 80025e0:	6813      	ldr	r3, [r2, #0]
 80025e2:	f043 030c 	orr.w	r3, r3, #12
 80025e6:	6013      	str	r3, [r2, #0]
}
 80025e8:	b003      	add	sp, #12
 80025ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80025ee:	4770      	bx	lr
 80025f0:	40023800 	.word	0x40023800
 80025f4:	40021400 	.word	0x40021400
 80025f8:	40020800 	.word	0x40020800

080025fc <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 80025fc:	b410      	push	{r4}
 80025fe:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8002600:	4a0e      	ldr	r2, [pc, #56]	; (800263c <MEAS_timer_init+0x40>)
 8002602:	2000      	movs	r0, #0
 8002604:	9001      	str	r0, [sp, #4]
 8002606:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8002608:	f041 0101 	orr.w	r1, r1, #1
 800260c:	6411      	str	r1, [r2, #64]	; 0x40
 800260e:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8002610:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8002614:	f002 0201 	and.w	r2, r2, #1
 8002618:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800261a:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800261e:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8002620:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8002622:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8002624:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8002626:	685a      	ldr	r2, [r3, #4]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002628:	4905      	ldr	r1, [pc, #20]	; (8002640 <MEAS_timer_init+0x44>)
 800262a:	f042 0220 	orr.w	r2, r2, #32
 800262e:	605a      	str	r2, [r3, #4]
 8002630:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8002634:	b003      	add	sp, #12
 8002636:	f85d 4b04 	ldr.w	r4, [sp], #4
 800263a:	4770      	bx	lr
 800263c:	40023800 	.word	0x40023800
 8002640:	e000e100 	.word	0xe000e100

08002644 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8002644:	b410      	push	{r4}
 8002646:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8002648:	4a36      	ldr	r2, [pc, #216]	; (8002724 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800264a:	4b37      	ldr	r3, [pc, #220]	; (8002728 <MEAS_ADC3_scan_init+0xe4>)
 800264c:	4c37      	ldr	r4, [pc, #220]	; (800272c <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800264e:	2100      	movs	r1, #0
 8002650:	9100      	str	r1, [sp, #0]
 8002652:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002654:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8002658:	6450      	str	r0, [r2, #68]	; 0x44
 800265a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800265c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8002660:	9000      	str	r0, [sp, #0]
 8002662:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002664:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8002666:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800266a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 800266c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800266e:	f040 0004 	orr.w	r0, r0, #4
 8002672:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8002674:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002676:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800267a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 800267c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800267e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8002682:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8002684:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002686:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 800268a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 800268c:	6858      	ldr	r0, [r3, #4]
 800268e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8002692:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8002694:	6898      	ldr	r0, [r3, #8]
 8002696:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800269a:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 800269c:	6898      	ldr	r0, [r3, #8]
 800269e:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80026a2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80026a4:	6898      	ldr	r0, [r3, #8]
 80026a6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80026aa:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80026ac:	9101      	str	r1, [sp, #4]
 80026ae:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80026b0:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80026b4:	6310      	str	r0, [r2, #48]	; 0x30
 80026b6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80026b8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80026bc:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80026be:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80026c2:	9a01      	ldr	r2, [sp, #4]
 80026c4:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80026c8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80026ca:	f022 0201 	bic.w	r2, r2, #1
 80026ce:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN);     // Wait for DMA to finish
 80026d0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80026d2:	07d2      	lsls	r2, r2, #31
 80026d4:	d4fc      	bmi.n	80026d0 <MEAS_ADC3_scan_init+0x8c>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80026d6:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80026d8:	4815      	ldr	r0, [pc, #84]	; (8002730 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80026da:	4916      	ldr	r1, [pc, #88]	; (8002734 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80026dc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80026e0:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 80026e2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80026e4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80026e8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 80026ea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80026ec:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80026f0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 80026f2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80026f4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80026f8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 80026fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80026fc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002700:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8002702:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002704:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002708:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800270a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800270c:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002710:	f042 0210 	orr.w	r2, r2, #16
 8002714:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8002716:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8002718:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800271a:	6359      	str	r1, [r3, #52]	; 0x34
}
 800271c:	b003      	add	sp, #12
 800271e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002722:	4770      	bx	lr
 8002724:	40023800 	.word	0x40023800
 8002728:	40012200 	.word	0x40012200
 800272c:	e000e100 	.word	0xe000e100
 8002730:	4001224c 	.word	0x4001224c
 8002734:	20001a80 	.word	0x20001a80

08002738 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8002738:	4b1b      	ldr	r3, [pc, #108]	; (80027a8 <DMA2_Stream1_IRQHandler+0x70>)
 800273a:	681a      	ldr	r2, [r3, #0]
 800273c:	0511      	lsls	r1, r2, #20
 800273e:	d400      	bmi.n	8002742 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8002740:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002742:	4a1a      	ldr	r2, [pc, #104]	; (80027ac <DMA2_Stream1_IRQHandler+0x74>)
 8002744:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002748:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800274c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002750:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002754:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002758:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800275a:	f022 0201 	bic.w	r2, r2, #1
 800275e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN);	  // Wait for DMA to finish
 8002760:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002762:	07d2      	lsls	r2, r2, #31
 8002764:	d4fc      	bmi.n	8002760 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002766:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002768:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800276c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8002770:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002772:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002774:	490e      	ldr	r1, [pc, #56]	; (80027b0 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002776:	f023 0301 	bic.w	r3, r3, #1
 800277a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800277c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800277e:	4b0d      	ldr	r3, [pc, #52]	; (80027b4 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002780:	f020 0001 	bic.w	r0, r0, #1
 8002784:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8002786:	6888      	ldr	r0, [r1, #8]
 8002788:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 800278c:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800278e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002790:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002794:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8002796:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002798:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 800279c:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 800279e:	6813      	ldr	r3, [r2, #0]
 80027a0:	f023 0301 	bic.w	r3, r3, #1
 80027a4:	6013      	str	r3, [r2, #0]
}
 80027a6:	4770      	bx	lr
 80027a8:	40026400 	.word	0x40026400
 80027ac:	e000e100 	.word	0xe000e100
 80027b0:	40012200 	.word	0x40012200
 80027b4:	40023800 	.word	0x40023800

080027b8 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80027b8:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80027ba:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80027be:	2100      	movs	r1, #0
 80027c0:	480f      	ldr	r0, [pc, #60]	; (8002800 <MEAS_start_measure+0x48>)
 80027c2:	f028 fc08 	bl	802afd6 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80027c6:	f7ff ff3d 	bl	8002644 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80027ca:	4a0e      	ldr	r2, [pc, #56]	; (8002804 <MEAS_start_measure+0x4c>)
 80027cc:	490e      	ldr	r1, [pc, #56]	; (8002808 <MEAS_start_measure+0x50>)
 80027ce:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80027d0:	480e      	ldr	r0, [pc, #56]	; (800280c <MEAS_start_measure+0x54>)
 80027d2:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80027d6:	f043 0301 	orr.w	r3, r3, #1
 80027da:	6293      	str	r3, [r2, #40]	; 0x28
 80027dc:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80027e0:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80027e2:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80027e4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80027e8:	f043 0301 	orr.w	r3, r3, #1
 80027ec:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80027ee:	680b      	ldr	r3, [r1, #0]
 80027f0:	f043 0301 	orr.w	r3, r3, #1
 80027f4:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80027f6:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80027f8:	07db      	lsls	r3, r3, #31
 80027fa:	d4fc      	bmi.n	80027f6 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 80027fc:	4800      	ldr	r0, [pc, #0]	; (8002800 <MEAS_start_measure+0x48>)
 80027fe:	bd10      	pop	{r4, pc}
 8002800:	20001a80 	.word	0x20001a80
 8002804:	40026400 	.word	0x40026400
 8002808:	e000e100 	.word	0xe000e100
 800280c:	40012200 	.word	0x40012200

08002810 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8002810:	2004      	movs	r0, #4
 8002812:	4770      	bx	lr

08002814 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8002814:	2040      	movs	r0, #64	; 0x40
 8002816:	4770      	bx	lr

08002818 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8002818:	f44f 7020 	mov.w	r0, #640	; 0x280
 800281c:	4770      	bx	lr
 800281e:	bf00      	nop

08002820 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002820:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002822:	4b0e      	ldr	r3, [pc, #56]	; (800285c <HAL_MspInit+0x3c>)
 8002824:	2200      	movs	r2, #0
 8002826:	9200      	str	r2, [sp, #0]
 8002828:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800282a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800282e:	6459      	str	r1, [r3, #68]	; 0x44
 8002830:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8002832:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8002836:	9000      	str	r0, [sp, #0]
 8002838:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800283a:	9201      	str	r2, [sp, #4]
 800283c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800283e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8002842:	6418      	str	r0, [r3, #64]	; 0x40
 8002844:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002846:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800284a:	9301      	str	r3, [sp, #4]
 800284c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800284e:	210f      	movs	r1, #15
 8002850:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002854:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002856:	f007 bca3 	b.w	800a1a0 <HAL_NVIC_SetPriority>
 800285a:	bf00      	nop
 800285c:	40023800 	.word	0x40023800

08002860 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002860:	4b0b      	ldr	r3, [pc, #44]	; (8002890 <HAL_CRC_MspInit+0x30>)
 8002862:	6802      	ldr	r2, [r0, #0]
 8002864:	429a      	cmp	r2, r3
 8002866:	d000      	beq.n	800286a <HAL_CRC_MspInit+0xa>
 8002868:	4770      	bx	lr
{
 800286a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800286c:	2200      	movs	r2, #0
 800286e:	9201      	str	r2, [sp, #4]
 8002870:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8002874:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002878:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 800287c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002880:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002882:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002886:	9301      	str	r3, [sp, #4]
 8002888:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800288a:	b002      	add	sp, #8
 800288c:	4770      	bx	lr
 800288e:	bf00      	nop
 8002890:	40023000 	.word	0x40023000

08002894 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002894:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8002898:	4b2e      	ldr	r3, [pc, #184]	; (8002954 <HAL_I2C_MspInit+0xc0>)
 800289a:	6802      	ldr	r2, [r0, #0]
{
 800289c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800289e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80028a0:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80028a2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80028a6:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80028aa:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80028ac:	d002      	beq.n	80028b4 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80028ae:	b00a      	add	sp, #40	; 0x28
 80028b0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80028b4:	4d28      	ldr	r5, [pc, #160]	; (8002958 <HAL_I2C_MspInit+0xc4>)
 80028b6:	9401      	str	r4, [sp, #4]
 80028b8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028ba:	4828      	ldr	r0, [pc, #160]	; (800295c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80028bc:	f043 0304 	orr.w	r3, r3, #4
 80028c0:	632b      	str	r3, [r5, #48]	; 0x30
 80028c2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80028c4:	f003 0304 	and.w	r3, r3, #4
 80028c8:	9301      	str	r3, [sp, #4]
 80028ca:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80028cc:	9402      	str	r4, [sp, #8]
 80028ce:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80028d0:	f043 0301 	orr.w	r3, r3, #1
 80028d4:	632b      	str	r3, [r5, #48]	; 0x30
 80028d6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80028d8:	f003 0301 	and.w	r3, r3, #1
 80028dc:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80028de:	f44f 7200 	mov.w	r2, #512	; 0x200
 80028e2:	f04f 0801 	mov.w	r8, #1
 80028e6:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80028ea:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028ec:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80028ee:	2312      	movs	r3, #18
 80028f0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80028f4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80028f8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80028fa:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028fc:	f007 fcc6 	bl	800a28c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002900:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002902:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002906:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002908:	4815      	ldr	r0, [pc, #84]	; (8002960 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800290a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800290c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002910:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002914:	f007 fcba 	bl	800a28c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002918:	9403      	str	r4, [sp, #12]
 800291a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800291c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002920:	642b      	str	r3, [r5, #64]	; 0x40
 8002922:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8002924:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002928:	4622      	mov	r2, r4
 800292a:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 800292c:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800292e:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002930:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002932:	f007 fc35 	bl	800a1a0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8002936:	2048      	movs	r0, #72	; 0x48
 8002938:	f007 fc70 	bl	800a21c <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 800293c:	6a2b      	ldr	r3, [r5, #32]
 800293e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002942:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002944:	6a2b      	ldr	r3, [r5, #32]
 8002946:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800294a:	622b      	str	r3, [r5, #32]
}
 800294c:	b00a      	add	sp, #40	; 0x28
 800294e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8002952:	bf00      	nop
 8002954:	40005c00 	.word	0x40005c00
 8002958:	40023800 	.word	0x40023800
 800295c:	40020800 	.word	0x40020800
 8002960:	40020000 	.word	0x40020000

08002964 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002964:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002968:	4604      	mov	r4, r0
 800296a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800296c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800296e:	2230      	movs	r2, #48	; 0x30
 8002970:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002972:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8002976:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800297a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800297c:	f028 fb2b 	bl	802afd6 <memset>
  if(hltdc->Instance==LTDC)
 8002980:	4b67      	ldr	r3, [pc, #412]	; (8002b20 <HAL_LTDC_MspInit+0x1bc>)
 8002982:	6822      	ldr	r2, [r4, #0]
 8002984:	429a      	cmp	r2, r3
 8002986:	d002      	beq.n	800298e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002988:	b01a      	add	sp, #104	; 0x68
 800298a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800298e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002990:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002992:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002994:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002996:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002998:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800299c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800299e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80029a0:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80029a2:	f009 fedd 	bl	800c760 <HAL_RCCEx_PeriphCLKConfig>
 80029a6:	2800      	cmp	r0, #0
 80029a8:	f040 80b7 	bne.w	8002b1a <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80029ac:	4b5d      	ldr	r3, [pc, #372]	; (8002b24 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029ae:	485e      	ldr	r0, [pc, #376]	; (8002b28 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80029b0:	2400      	movs	r4, #0
 80029b2:	9401      	str	r4, [sp, #4]
 80029b4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80029b6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80029ba:	645a      	str	r2, [r3, #68]	; 0x44
 80029bc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80029be:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80029c2:	9201      	str	r2, [sp, #4]
 80029c4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80029c6:	9402      	str	r4, [sp, #8]
 80029c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029ca:	f042 0220 	orr.w	r2, r2, #32
 80029ce:	631a      	str	r2, [r3, #48]	; 0x30
 80029d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029d2:	f002 0220 	and.w	r2, r2, #32
 80029d6:	9202      	str	r2, [sp, #8]
 80029d8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029da:	9403      	str	r4, [sp, #12]
 80029dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029de:	f042 0201 	orr.w	r2, r2, #1
 80029e2:	631a      	str	r2, [r3, #48]	; 0x30
 80029e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029e6:	f002 0201 	and.w	r2, r2, #1
 80029ea:	9203      	str	r2, [sp, #12]
 80029ec:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80029ee:	9404      	str	r4, [sp, #16]
 80029f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029f2:	f042 0202 	orr.w	r2, r2, #2
 80029f6:	631a      	str	r2, [r3, #48]	; 0x30
 80029f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029fa:	f002 0202 	and.w	r2, r2, #2
 80029fe:	9204      	str	r2, [sp, #16]
 8002a00:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002a02:	9405      	str	r4, [sp, #20]
 8002a04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a06:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002a0a:	631a      	str	r2, [r3, #48]	; 0x30
 8002a0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a0e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8002a12:	9205      	str	r2, [sp, #20]
 8002a14:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002a16:	9406      	str	r4, [sp, #24]
 8002a18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a1a:	f042 0204 	orr.w	r2, r2, #4
 8002a1e:	631a      	str	r2, [r3, #48]	; 0x30
 8002a20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a22:	f002 0204 	and.w	r2, r2, #4
 8002a26:	9206      	str	r2, [sp, #24]
 8002a28:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002a2a:	9407      	str	r4, [sp, #28]
 8002a2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a2e:	f042 0208 	orr.w	r2, r2, #8
 8002a32:	631a      	str	r2, [r3, #48]	; 0x30
 8002a34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a36:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002a3a:	2600      	movs	r6, #0
 8002a3c:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002a3e:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002a40:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a42:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002a44:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002a48:	2302      	movs	r3, #2
 8002a4a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002a4e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002a52:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002a54:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a56:	f007 fc19 	bl	800a28c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a5a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002a5c:	f641 0258 	movw	r2, #6232	; 0x1858
 8002a60:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a62:	4832      	ldr	r0, [pc, #200]	; (8002b2c <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002a64:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002a66:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002a6a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002a6e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a72:	f007 fc0b 	bl	800a28c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a76:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002a78:	2203      	movs	r2, #3
 8002a7a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a7c:	482c      	ldr	r0, [pc, #176]	; (8002b30 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002a7e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002a82:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002a86:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a8a:	f007 fbff 	bl	800a28c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a8e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002a90:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002a94:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a96:	4826      	ldr	r0, [pc, #152]	; (8002b30 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002a98:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002a9a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002a9e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002aa2:	f007 fbf3 	bl	800a28c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aa6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002aa8:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002aac:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aae:	4821      	ldr	r0, [pc, #132]	; (8002b34 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002ab0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002ab2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002ab6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aba:	f007 fbe7 	bl	800a28c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002abe:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002ac0:	22c0      	movs	r2, #192	; 0xc0
 8002ac2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002ac4:	481c      	ldr	r0, [pc, #112]	; (8002b38 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002ac6:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002ac8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002acc:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002ad0:	f007 fbdc 	bl	800a28c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ad4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002ad6:	2208      	movs	r2, #8
 8002ad8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ada:	4818      	ldr	r0, [pc, #96]	; (8002b3c <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002adc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002ade:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002ae2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ae6:	f007 fbd1 	bl	800a28c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002aea:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aec:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002aee:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002af2:	4810      	ldr	r0, [pc, #64]	; (8002b34 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002af4:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002af8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002afc:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b00:	f007 fbc4 	bl	800a28c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002b04:	4622      	mov	r2, r4
 8002b06:	2105      	movs	r1, #5
 8002b08:	2058      	movs	r0, #88	; 0x58
 8002b0a:	f007 fb49 	bl	800a1a0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002b0e:	2058      	movs	r0, #88	; 0x58
 8002b10:	f007 fb84 	bl	800a21c <HAL_NVIC_EnableIRQ>
}
 8002b14:	b01a      	add	sp, #104	; 0x68
 8002b16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8002b1a:	f7ff fd39 	bl	8002590 <Error_Handler>
 8002b1e:	e745      	b.n	80029ac <HAL_LTDC_MspInit+0x48>
 8002b20:	40016800 	.word	0x40016800
 8002b24:	40023800 	.word	0x40023800
 8002b28:	40021400 	.word	0x40021400
 8002b2c:	40020000 	.word	0x40020000
 8002b30:	40020400 	.word	0x40020400
 8002b34:	40021800 	.word	0x40021800
 8002b38:	40020800 	.word	0x40020800
 8002b3c:	40020c00 	.word	0x40020c00

08002b40 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002b40:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8002b42:	4a1b      	ldr	r2, [pc, #108]	; (8002bb0 <HAL_SPI_MspInit+0x70>)
 8002b44:	6801      	ldr	r1, [r0, #0]
{
 8002b46:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b48:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002b4a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b4c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002b50:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002b54:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002b56:	d001      	beq.n	8002b5c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002b58:	b008      	add	sp, #32
 8002b5a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002b5c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002b60:	9300      	str	r3, [sp, #0]
 8002b62:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002b64:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002b68:	6450      	str	r0, [r2, #68]	; 0x44
 8002b6a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002b6c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002b70:	9000      	str	r0, [sp, #0]
 8002b72:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002b74:	9301      	str	r3, [sp, #4]
 8002b76:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002b78:	480e      	ldr	r0, [pc, #56]	; (8002bb4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002b7a:	f043 0320 	orr.w	r3, r3, #32
 8002b7e:	6313      	str	r3, [r2, #48]	; 0x30
 8002b80:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002b82:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002ba8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002b86:	f003 0320 	and.w	r3, r3, #32
 8002b8a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002b8c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002b8e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002b90:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002b92:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002b96:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002b9a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002b9c:	f007 fb76 	bl	800a28c <HAL_GPIO_Init>
}
 8002ba0:	b008      	add	sp, #32
 8002ba2:	bd10      	pop	{r4, pc}
 8002ba4:	f3af 8000 	nop.w
 8002ba8:	00000380 	.word	0x00000380
 8002bac:	00000002 	.word	0x00000002
 8002bb0:	40015000 	.word	0x40015000
 8002bb4:	40021400 	.word	0x40021400

08002bb8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002bb8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 8002bba:	4a21      	ldr	r2, [pc, #132]	; (8002c40 <HAL_TIM_Base_MspInit+0x88>)
 8002bbc:	6803      	ldr	r3, [r0, #0]
 8002bbe:	4293      	cmp	r3, r2
{
 8002bc0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 8002bc2:	d008      	beq.n	8002bd6 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 8002bc4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bc8:	d023      	beq.n	8002c12 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002bca:	4a1e      	ldr	r2, [pc, #120]	; (8002c44 <HAL_TIM_Base_MspInit+0x8c>)
 8002bcc:	4293      	cmp	r3, r2
 8002bce:	d011      	beq.n	8002bf4 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002bd0:	b005      	add	sp, #20
 8002bd2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002bd6:	4b1c      	ldr	r3, [pc, #112]	; (8002c48 <HAL_TIM_Base_MspInit+0x90>)
 8002bd8:	2200      	movs	r2, #0
 8002bda:	9201      	str	r2, [sp, #4]
 8002bdc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002bde:	f042 0201 	orr.w	r2, r2, #1
 8002be2:	645a      	str	r2, [r3, #68]	; 0x44
 8002be4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002be6:	f003 0301 	and.w	r3, r3, #1
 8002bea:	9301      	str	r3, [sp, #4]
 8002bec:	9b01      	ldr	r3, [sp, #4]
}
 8002bee:	b005      	add	sp, #20
 8002bf0:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002bf4:	4b14      	ldr	r3, [pc, #80]	; (8002c48 <HAL_TIM_Base_MspInit+0x90>)
 8002bf6:	2200      	movs	r2, #0
 8002bf8:	9203      	str	r2, [sp, #12]
 8002bfa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002bfc:	f042 0202 	orr.w	r2, r2, #2
 8002c00:	641a      	str	r2, [r3, #64]	; 0x40
 8002c02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c04:	f003 0302 	and.w	r3, r3, #2
 8002c08:	9303      	str	r3, [sp, #12]
 8002c0a:	9b03      	ldr	r3, [sp, #12]
}
 8002c0c:	b005      	add	sp, #20
 8002c0e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002c12:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002c16:	2200      	movs	r2, #0
 8002c18:	9202      	str	r2, [sp, #8]
 8002c1a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002c1c:	f041 0101 	orr.w	r1, r1, #1
 8002c20:	6419      	str	r1, [r3, #64]	; 0x40
 8002c22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c24:	f003 0301 	and.w	r3, r3, #1
 8002c28:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002c2a:	201c      	movs	r0, #28
 8002c2c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002c2e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002c30:	f007 fab6 	bl	800a1a0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002c34:	201c      	movs	r0, #28
}
 8002c36:	b005      	add	sp, #20
 8002c38:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002c3c:	f007 baee 	b.w	800a21c <HAL_NVIC_EnableIRQ>
 8002c40:	40010000 	.word	0x40010000
 8002c44:	40000400 	.word	0x40000400
 8002c48:	40023800 	.word	0x40023800

08002c4c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002c4c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002c4e:	4b2b      	ldr	r3, [pc, #172]	; (8002cfc <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002c50:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002c52:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002c54:	2200      	movs	r2, #0
 8002c56:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002c58:	2c00      	cmp	r4, #0
 8002c5a:	d14c      	bne.n	8002cf6 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002c5c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c5e:	4a28      	ldr	r2, [pc, #160]	; (8002d00 <HAL_SDRAM_MspInit+0xb4>)
 8002c60:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002c62:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c64:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c66:	4827      	ldr	r0, [pc, #156]	; (8002d04 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c68:	433b      	orrs	r3, r7
 8002c6a:	6393      	str	r3, [r2, #56]	; 0x38
 8002c6c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002c6e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c70:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c72:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002c74:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c78:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c7a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002c7c:	2302      	movs	r3, #2
 8002c7e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c82:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c86:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c88:	f007 fb00 	bl	800a28c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c8c:	481e      	ldr	r0, [pc, #120]	; (8002d08 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002c8e:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c90:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c92:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c94:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c98:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c9c:	f007 faf6 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002ca0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002ca4:	4819      	ldr	r0, [pc, #100]	; (8002d0c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002ca6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002ca8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002caa:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cae:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002cb2:	f007 faeb 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002cb6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002cba:	4815      	ldr	r0, [pc, #84]	; (8002d10 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002cbc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002cbe:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002cc0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cc4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002cc8:	f007 fae0 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002ccc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002cd0:	4810      	ldr	r0, [pc, #64]	; (8002d14 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002cd2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002cd4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002cd6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cda:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002cde:	f007 fad5 	bl	800a28c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002ce2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ce4:	480c      	ldr	r0, [pc, #48]	; (8002d18 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ce6:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ce8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cea:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cee:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002cf0:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002cf2:	f007 facb 	bl	800a28c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002cf6:	b009      	add	sp, #36	; 0x24
 8002cf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002cfa:	bf00      	nop
 8002cfc:	20001e80 	.word	0x20001e80
 8002d00:	40023800 	.word	0x40023800
 8002d04:	40021400 	.word	0x40021400
 8002d08:	40020800 	.word	0x40020800
 8002d0c:	40021800 	.word	0x40021800
 8002d10:	40021000 	.word	0x40021000
 8002d14:	40020c00 	.word	0x40020c00
 8002d18:	40020400 	.word	0x40020400

08002d1c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002d1c:	b570      	push	{r4, r5, r6, lr}
 8002d1e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002d20:	4b23      	ldr	r3, [pc, #140]	; (8002db0 <HAL_InitTick+0x94>)
 8002d22:	2200      	movs	r2, #0
 8002d24:	9202      	str	r2, [sp, #8]
 8002d26:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002d28:	f042 0210 	orr.w	r2, r2, #16
 8002d2c:	641a      	str	r2, [r3, #64]	; 0x40
 8002d2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d30:	f003 0310 	and.w	r3, r3, #16
 8002d34:	9302      	str	r3, [sp, #8]
{
 8002d36:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002d38:	a901      	add	r1, sp, #4
 8002d3a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002d3c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002d3e:	f009 fced 	bl	800c71c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002d42:	9b06      	ldr	r3, [sp, #24]
 8002d44:	b9d3      	cbnz	r3, 8002d7c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002d46:	f009 fcd9 	bl	800c6fc <HAL_RCC_GetPCLK1Freq>
 8002d4a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002d4c:	4a19      	ldr	r2, [pc, #100]	; (8002db4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002d4e:	4c1a      	ldr	r4, [pc, #104]	; (8002db8 <HAL_InitTick+0x9c>)
 8002d50:	491a      	ldr	r1, [pc, #104]	; (8002dbc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002d52:	fba2 2303 	umull	r2, r3, r2, r3
 8002d56:	0c9b      	lsrs	r3, r3, #18
 8002d58:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8002d5a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002d5c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002d60:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002d62:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002d66:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002d68:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002d6a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002d6c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002d6e:	f00a fb05 	bl	800d37c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002d72:	4606      	mov	r6, r0
 8002d74:	b130      	cbz	r0, 8002d84 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002d76:	4630      	mov	r0, r6
 8002d78:	b008      	add	sp, #32
 8002d7a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002d7c:	f009 fcbe 	bl	800c6fc <HAL_RCC_GetPCLK1Freq>
 8002d80:	0043      	lsls	r3, r0, #1
 8002d82:	e7e3      	b.n	8002d4c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002d84:	4620      	mov	r0, r4
 8002d86:	f00a fb87 	bl	800d498 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002d8a:	4606      	mov	r6, r0
 8002d8c:	2800      	cmp	r0, #0
 8002d8e:	d1f2      	bne.n	8002d76 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002d90:	2036      	movs	r0, #54	; 0x36
 8002d92:	f007 fa43 	bl	800a21c <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002d96:	2d0f      	cmp	r5, #15
 8002d98:	d901      	bls.n	8002d9e <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002d9a:	2601      	movs	r6, #1
 8002d9c:	e7eb      	b.n	8002d76 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002d9e:	4632      	mov	r2, r6
 8002da0:	4629      	mov	r1, r5
 8002da2:	2036      	movs	r0, #54	; 0x36
 8002da4:	f007 f9fc 	bl	800a1a0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002da8:	4b05      	ldr	r3, [pc, #20]	; (8002dc0 <HAL_InitTick+0xa4>)
 8002daa:	601d      	str	r5, [r3, #0]
 8002dac:	e7e3      	b.n	8002d76 <HAL_InitTick+0x5a>
 8002dae:	bf00      	nop
 8002db0:	40023800 	.word	0x40023800
 8002db4:	431bde83 	.word	0x431bde83
 8002db8:	20001e84 	.word	0x20001e84
 8002dbc:	40001000 	.word	0x40001000
 8002dc0:	20000080 	.word	0x20000080

08002dc4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002dc4:	4770      	bx	lr
 8002dc6:	bf00      	nop

08002dc8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002dc8:	e7fe      	b.n	8002dc8 <HardFault_Handler>
 8002dca:	bf00      	nop

08002dcc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002dcc:	e7fe      	b.n	8002dcc <MemManage_Handler>
 8002dce:	bf00      	nop

08002dd0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002dd0:	e7fe      	b.n	8002dd0 <BusFault_Handler>
 8002dd2:	bf00      	nop

08002dd4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002dd4:	e7fe      	b.n	8002dd4 <UsageFault_Handler>
 8002dd6:	bf00      	nop

08002dd8 <DebugMon_Handler>:
 8002dd8:	4770      	bx	lr
 8002dda:	bf00      	nop

08002ddc <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002ddc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002dde:	20c8      	movs	r0, #200	; 0xc8
 8002de0:	f007 f9ba 	bl	800a158 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002de4:	4804      	ldr	r0, [pc, #16]	; (8002df8 <EXTI3_IRQHandler+0x1c>)
 8002de6:	2200      	movs	r2, #0
 8002de8:	2120      	movs	r1, #32
 8002dea:	f007 fb93 	bl	800a514 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002dee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002df2:	2008      	movs	r0, #8
 8002df4:	f007 bb9e 	b.w	800a534 <HAL_GPIO_EXTI_IRQHandler>
 8002df8:	40021000 	.word	0x40021000

08002dfc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002dfc:	4801      	ldr	r0, [pc, #4]	; (8002e04 <TIM6_DAC_IRQHandler+0x8>)
 8002dfe:	f00a bb8f 	b.w	800d520 <HAL_TIM_IRQHandler>
 8002e02:	bf00      	nop
 8002e04:	20001e84 	.word	0x20001e84

08002e08 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002e08:	4801      	ldr	r0, [pc, #4]	; (8002e10 <I2C3_EV_IRQHandler+0x8>)
 8002e0a:	f008 baf3 	b.w	800b3f4 <HAL_I2C_EV_IRQHandler>
 8002e0e:	bf00      	nop
 8002e10:	200018f8 	.word	0x200018f8

08002e14 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002e14:	4801      	ldr	r0, [pc, #4]	; (8002e1c <LTDC_IRQHandler+0x8>)
 8002e16:	f009 b867 	b.w	800bee8 <HAL_LTDC_IRQHandler>
 8002e1a:	bf00      	nop
 8002e1c:	2000194c 	.word	0x2000194c

08002e20 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002e20:	2001      	movs	r0, #1
 8002e22:	4770      	bx	lr

08002e24 <_kill>:

int _kill(int pid, int sig)
{
 8002e24:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002e26:	f028 f9cf 	bl	802b1c8 <__errno>
 8002e2a:	2316      	movs	r3, #22
 8002e2c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002e2e:	f04f 30ff 	mov.w	r0, #4294967295
 8002e32:	bd08      	pop	{r3, pc}

08002e34 <_exit>:

void _exit (int status)
{
 8002e34:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002e36:	f028 f9c7 	bl	802b1c8 <__errno>
 8002e3a:	2316      	movs	r3, #22
 8002e3c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002e3e:	e7fe      	b.n	8002e3e <_exit+0xa>

08002e40 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002e40:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e42:	1e16      	subs	r6, r2, #0
 8002e44:	dd07      	ble.n	8002e56 <_read+0x16>
 8002e46:	460c      	mov	r4, r1
 8002e48:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002e4a:	f3af 8000 	nop.w
 8002e4e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e52:	42a5      	cmp	r5, r4
 8002e54:	d1f9      	bne.n	8002e4a <_read+0xa>
	}

return len;
}
 8002e56:	4630      	mov	r0, r6
 8002e58:	bd70      	pop	{r4, r5, r6, pc}
 8002e5a:	bf00      	nop

08002e5c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002e5c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e5e:	1e16      	subs	r6, r2, #0
 8002e60:	dd07      	ble.n	8002e72 <_write+0x16>
 8002e62:	460c      	mov	r4, r1
 8002e64:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002e66:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002e6a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e6e:	42ac      	cmp	r4, r5
 8002e70:	d1f9      	bne.n	8002e66 <_write+0xa>
	}
	return len;
}
 8002e72:	4630      	mov	r0, r6
 8002e74:	bd70      	pop	{r4, r5, r6, pc}
 8002e76:	bf00      	nop

08002e78 <_close>:

int _close(int file)
{
	return -1;
}
 8002e78:	f04f 30ff 	mov.w	r0, #4294967295
 8002e7c:	4770      	bx	lr
 8002e7e:	bf00      	nop

08002e80 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002e80:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002e84:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002e86:	2000      	movs	r0, #0
 8002e88:	4770      	bx	lr
 8002e8a:	bf00      	nop

08002e8c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002e8c:	2001      	movs	r0, #1
 8002e8e:	4770      	bx	lr

08002e90 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002e90:	2000      	movs	r0, #0
 8002e92:	4770      	bx	lr

08002e94 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002e94:	4a0b      	ldr	r2, [pc, #44]	; (8002ec4 <_sbrk+0x30>)
{
 8002e96:	b508      	push	{r3, lr}
 8002e98:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002e9a:	6810      	ldr	r0, [r2, #0]
 8002e9c:	b128      	cbz	r0, 8002eaa <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002e9e:	4403      	add	r3, r0
 8002ea0:	4669      	mov	r1, sp
 8002ea2:	428b      	cmp	r3, r1
 8002ea4:	d807      	bhi.n	8002eb6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002ea6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002ea8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002eaa:	4807      	ldr	r0, [pc, #28]	; (8002ec8 <_sbrk+0x34>)
 8002eac:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002eae:	4403      	add	r3, r0
 8002eb0:	4669      	mov	r1, sp
 8002eb2:	428b      	cmp	r3, r1
 8002eb4:	d9f7      	bls.n	8002ea6 <_sbrk+0x12>
		errno = ENOMEM;
 8002eb6:	f028 f987 	bl	802b1c8 <__errno>
 8002eba:	230c      	movs	r3, #12
 8002ebc:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002ebe:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002ec2:	bd08      	pop	{r3, pc}
 8002ec4:	20001ecc 	.word	0x20001ecc
 8002ec8:	200139f0 	.word	0x200139f0

08002ecc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002ecc:	4770      	bx	lr

08002ece <_ZN23ApplicationFontProviderD0Ev>:
 8002ece:	b510      	push	{r4, lr}
 8002ed0:	2104      	movs	r1, #4
 8002ed2:	4604      	mov	r4, r0
 8002ed4:	f026 ff93 	bl	8029dfe <_ZdlPvj>
 8002ed8:	4620      	mov	r0, r4
 8002eda:	bd10      	pop	{r4, pc}

08002edc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002edc:	b508      	push	{r3, lr}
    switch (typography)
 8002ede:	2903      	cmp	r1, #3
 8002ee0:	d813      	bhi.n	8002f0a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002ee2:	e8df f001 	tbb	[pc, r1]
 8002ee6:	0602      	.short	0x0602
 8002ee8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002eea:	f006 f91b 	bl	8009124 <_ZN17TypedTextDatabase8getFontsEv>
 8002eee:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002ef0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002ef2:	f006 f917 	bl	8009124 <_ZN17TypedTextDatabase8getFontsEv>
 8002ef6:	6840      	ldr	r0, [r0, #4]
 8002ef8:	e7fa      	b.n	8002ef0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002efa:	f006 f913 	bl	8009124 <_ZN17TypedTextDatabase8getFontsEv>
 8002efe:	6880      	ldr	r0, [r0, #8]
 8002f00:	e7f6      	b.n	8002ef0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002f02:	f006 f90f 	bl	8009124 <_ZN17TypedTextDatabase8getFontsEv>
 8002f06:	68c0      	ldr	r0, [r0, #12]
 8002f08:	e7f2      	b.n	8002ef0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002f0a:	2000      	movs	r0, #0
 8002f0c:	e7f0      	b.n	8002ef0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002f10 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002f10:	4800      	ldr	r0, [pc, #0]	; (8002f14 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002f12:	4770      	bx	lr
 8002f14:	0802c50c 	.word	0x0802c50c

08002f18 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002f18:	200d      	movs	r0, #13
 8002f1a:	4770      	bx	lr

08002f1c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002f1c:	b513      	push	{r0, r1, r4, lr}
 8002f1e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002f20:	b151      	cbz	r1, 8002f38 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f22:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002f24:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002f26:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002f2a:	aa01      	add	r2, sp, #4
 8002f2c:	689c      	ldr	r4, [r3, #8]
 8002f2e:	f10d 0303 	add.w	r3, sp, #3
 8002f32:	47a0      	blx	r4
        return glyph;
    }
 8002f34:	b002      	add	sp, #8
 8002f36:	bd10      	pop	{r4, pc}
            return 0;
 8002f38:	4608      	mov	r0, r1
 8002f3a:	e7fb      	b.n	8002f34 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002f3c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002f3c:	89c0      	ldrh	r0, [r0, #14]
 8002f3e:	4770      	bx	lr

08002f40 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002f40:	8a00      	ldrh	r0, [r0, #16]
 8002f42:	4770      	bx	lr

08002f44 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002f44:	88c0      	ldrh	r0, [r0, #6]
 8002f46:	4770      	bx	lr

08002f48 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f48:	8880      	ldrh	r0, [r0, #4]
 8002f4a:	4770      	bx	lr

08002f4c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f4c:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f4e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002f52:	4770      	bx	lr

08002f54 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f54:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f56:	09c0      	lsrs	r0, r0, #7
 8002f58:	4770      	bx	lr

08002f5a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002f5a:	4770      	bx	lr

08002f5c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002f5c:	4770      	bx	lr

08002f5e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002f5e:	4770      	bx	lr

08002f60 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002f60:	4770      	bx	lr

08002f62 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002f62:	4770      	bx	lr

08002f64 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002f64:	4770      	bx	lr

08002f66 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002f66:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002f68:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002f6a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002f6c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002f6e:	466d      	mov	r5, sp
 8002f70:	4601      	mov	r1, r0
 8002f72:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002f76:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002f78:	4628      	mov	r0, r5
 8002f7a:	4798      	blx	r3
 8002f7c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f80:	343c      	adds	r4, #60	; 0x3c
 8002f82:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002f86:	b005      	add	sp, #20
 8002f88:	bd30      	pop	{r4, r5, pc}

08002f8a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002f8a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002f8c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002f8e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002f90:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002f92:	466d      	mov	r5, sp
 8002f94:	4601      	mov	r1, r0
 8002f96:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002f9a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002f9c:	4628      	mov	r0, r5
 8002f9e:	4798      	blx	r3
 8002fa0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002fa4:	343c      	adds	r4, #60	; 0x3c
 8002fa6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002faa:	b005      	add	sp, #20
 8002fac:	bd30      	pop	{r4, r5, pc}

08002fae <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002fae:	2200      	movs	r2, #0
 8002fb0:	8002      	strh	r2, [r0, #0]
 8002fb2:	8042      	strh	r2, [r0, #2]
 8002fb4:	8082      	strh	r2, [r0, #4]
 8002fb6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002fb8:	4770      	bx	lr

08002fba <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002fba:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002fbe:	4770      	bx	lr

08002fc0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002fc0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002fc2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002fc4:	4604      	mov	r4, r0
        setX(x);
 8002fc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002fc8:	4615      	mov	r5, r2
        setX(x);
 8002fca:	4798      	blx	r3
        setBaselineY(baselineY);
 8002fcc:	6823      	ldr	r3, [r4, #0]
 8002fce:	4629      	mov	r1, r5
 8002fd0:	4620      	mov	r0, r4
 8002fd2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002fd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002fd8:	4718      	bx	r3

08002fda <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002fda:	2000      	movs	r0, #0
 8002fdc:	4770      	bx	lr

08002fde <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002fde:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002fe0:	4770      	bx	lr

08002fe2 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002fe2:	4770      	bx	lr

08002fe4 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002fe4:	4770      	bx	lr

08002fe6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002fe6:	4770      	bx	lr

08002fe8 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002fe8:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002fea:	68c2      	ldr	r2, [r0, #12]
 8002fec:	6844      	ldr	r4, [r0, #4]
 8002fee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002ff0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002ff2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ff6:	07d2      	lsls	r2, r2, #31
 8002ff8:	bf48      	it	mi
 8002ffa:	5962      	ldrmi	r2, [r4, r5]
 8002ffc:	689b      	ldr	r3, [r3, #8]
    }
 8002ffe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003000:	bf48      	it	mi
 8003002:	58d3      	ldrmi	r3, [r2, r3]
 8003004:	4718      	bx	r3

08003006 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003006:	6843      	ldr	r3, [r0, #4]
 8003008:	b12b      	cbz	r3, 8003016 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800300a:	6883      	ldr	r3, [r0, #8]
 800300c:	b92b      	cbnz	r3, 800301a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800300e:	68c0      	ldr	r0, [r0, #12]
 8003010:	f000 0001 	and.w	r0, r0, #1
 8003014:	4770      	bx	lr
 8003016:	4618      	mov	r0, r3
 8003018:	4770      	bx	lr
 800301a:	2001      	movs	r0, #1
    }
 800301c:	4770      	bx	lr

0800301e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800301e:	b510      	push	{r4, lr}
    }
 8003020:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003022:	4604      	mov	r4, r0
    }
 8003024:	f026 feeb 	bl	8029dfe <_ZdlPvj>
 8003028:	4620      	mov	r0, r4
 800302a:	bd10      	pop	{r4, pc}

0800302c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800302c:	b510      	push	{r4, lr}
 800302e:	214c      	movs	r1, #76	; 0x4c
 8003030:	4604      	mov	r4, r0
 8003032:	f026 fee4 	bl	8029dfe <_ZdlPvj>
 8003036:	4620      	mov	r0, r4
 8003038:	bd10      	pop	{r4, pc}

0800303a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800303a:	b510      	push	{r4, lr}
 800303c:	2110      	movs	r1, #16
 800303e:	4604      	mov	r4, r0
 8003040:	f026 fedd 	bl	8029dfe <_ZdlPvj>
 8003044:	4620      	mov	r0, r4
 8003046:	bd10      	pop	{r4, pc}

08003048 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8003048:	b510      	push	{r4, lr}
 800304a:	4b03      	ldr	r3, [pc, #12]	; (8003058 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 800304c:	6003      	str	r3, [r0, #0]
 800304e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003050:	f011 f95c 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003054:	4620      	mov	r0, r4
 8003056:	bd10      	pop	{r4, pc}
 8003058:	0802c878 	.word	0x0802c878

0800305c <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 800305c:	b507      	push	{r0, r1, r2, lr}
 800305e:	4b07      	ldr	r3, [pc, #28]	; (800307c <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8003060:	6003      	str	r3, [r0, #0]
 8003062:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003064:	f011 f952 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003068:	9801      	ldr	r0, [sp, #4]
 800306a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800306e:	f026 fec6 	bl	8029dfe <_ZdlPvj>
 8003072:	9801      	ldr	r0, [sp, #4]
 8003074:	b003      	add	sp, #12
 8003076:	f85d fb04 	ldr.w	pc, [sp], #4
 800307a:	bf00      	nop
 800307c:	0802c878 	.word	0x0802c878

08003080 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003080:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003082:	f7fe fbe9 	bl	8001858 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003086:	bd08      	pop	{r3, pc}

08003088 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003088:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800308a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800308c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800308e:	4b12      	ldr	r3, [pc, #72]	; (80030d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003090:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003092:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003094:	b28d      	uxth	r5, r1
 8003096:	b92b      	cbnz	r3, 80030a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003098:	4b10      	ldr	r3, [pc, #64]	; (80030dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800309a:	4a11      	ldr	r2, [pc, #68]	; (80030e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800309c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800309e:	4811      	ldr	r0, [pc, #68]	; (80030e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80030a0:	f027 fd94 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80030a4:	4910      	ldr	r1, [pc, #64]	; (80030e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80030a6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80030a8:	8809      	ldrh	r1, [r1, #0]
 80030aa:	4291      	cmp	r1, r2
 80030ac:	d803      	bhi.n	80030b6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80030ae:	4b0f      	ldr	r3, [pc, #60]	; (80030ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80030b0:	4a0b      	ldr	r2, [pc, #44]	; (80030e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80030b2:	216d      	movs	r1, #109	; 0x6d
 80030b4:	e7f3      	b.n	800309e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80030b6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80030ba:	4b0d      	ldr	r3, [pc, #52]	; (80030f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80030c2:	6803      	ldr	r3, [r0, #0]
 80030c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030c6:	4798      	blx	r3
 80030c8:	1a28      	subs	r0, r5, r0
 80030ca:	b201      	sxth	r1, r0
 80030cc:	4633      	mov	r3, r6
 80030ce:	4620      	mov	r0, r4
    }
 80030d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80030d4:	4718      	bx	r3
 80030d6:	bf00      	nop
 80030d8:	20012e0c 	.word	0x20012e0c
 80030dc:	0802c610 	.word	0x0802c610
 80030e0:	0802c652 	.word	0x0802c652
 80030e4:	0802c68d 	.word	0x0802c68d
 80030e8:	20012e10 	.word	0x20012e10
 80030ec:	0802c6d4 	.word	0x0802c6d4
 80030f0:	20012e14 	.word	0x20012e14

080030f4 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80030f4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80030f6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80030fa:	4299      	cmp	r1, r3
{
 80030fc:	4604      	mov	r4, r0
 80030fe:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8003100:	d103      	bne.n	800310a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003102:	f012 fe05 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003106:	f001 fbf1 	bl	80048ec <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800310a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800310e:	429d      	cmp	r5, r3
 8003110:	d103      	bne.n	800311a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8003112:	f012 fdfd 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8003116:	f001 fca9 	bl	8004a6c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800311a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800311e:	42a5      	cmp	r5, r4
 8003120:	d105      	bne.n	800312e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8003122:	f012 fdf5 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8003126:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800312a:	f001 bcaf 	b.w	8004a8c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800312e:	bd38      	pop	{r3, r4, r5, pc}

08003130 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003130:	2200      	movs	r2, #0
 8003132:	f04f 31ff 	mov.w	r1, #4294967295
 8003136:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800313a:	6082      	str	r2, [r0, #8]
    }
 800313c:	4770      	bx	lr

0800313e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800313e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003140:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003142:	4604      	mov	r4, r0
        setX(x);
 8003144:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003146:	4615      	mov	r5, r2
        setX(x);
 8003148:	4798      	blx	r3
        setY(y);
 800314a:	6823      	ldr	r3, [r4, #0]
 800314c:	4629      	mov	r1, r5
 800314e:	4620      	mov	r0, r4
 8003150:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003152:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003156:	4718      	bx	r3

08003158 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003158:	b570      	push	{r4, r5, r6, lr}
 800315a:	4604      	mov	r4, r0
 800315c:	461d      	mov	r5, r3
 800315e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003162:	f7ff ffec 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003166:	6823      	ldr	r3, [r4, #0]
 8003168:	4629      	mov	r1, r5
 800316a:	4620      	mov	r0, r4
 800316c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800316e:	4798      	blx	r3
        setHeight(height);
 8003170:	6823      	ldr	r3, [r4, #0]
 8003172:	4631      	mov	r1, r6
 8003174:	4620      	mov	r0, r4
 8003176:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003178:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800317c:	4718      	bx	r3
	...

08003180 <_ZN8touchgfx6WidgetC1Ev>:
 8003180:	2200      	movs	r2, #0
 8003182:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003186:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800318a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800318e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003192:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003196:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003198:	4a01      	ldr	r2, [pc, #4]	; (80031a0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800319a:	6002      	str	r2, [r0, #0]
 800319c:	4770      	bx	lr
 800319e:	bf00      	nop
 80031a0:	0802c758 	.word	0x0802c758

080031a4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80031a4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031a6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80031a8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031aa:	2100      	movs	r1, #0
 80031ac:	f027 ff13 	bl	802afd6 <memset>
 80031b0:	4620      	mov	r0, r4
 80031b2:	f7ff ffe5 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80031b6:	4b0a      	ldr	r3, [pc, #40]	; (80031e0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80031b8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80031ba:	4b0a      	ldr	r3, [pc, #40]	; (80031e4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80031bc:	62a3      	str	r3, [r4, #40]	; 0x28
 80031be:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80031c2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80031c4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80031c8:	2300      	movs	r3, #0
 80031ca:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031ce:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80031d2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80031d6:	8723      	strh	r3, [r4, #56]	; 0x38
 80031d8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80031da:	4620      	mov	r0, r4
 80031dc:	bd10      	pop	{r4, pc}
 80031de:	bf00      	nop
 80031e0:	0802f090 	.word	0x0802f090
 80031e4:	0802c7c0 	.word	0x0802c7c0

080031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80031e8:	4b1a      	ldr	r3, [pc, #104]	; (8003254 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80031ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80031ec:	881b      	ldrh	r3, [r3, #0]
 80031ee:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80031f0:	428b      	cmp	r3, r1
    void updateTextPosition()
 80031f2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80031f4:	d92b      	bls.n	800324e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80031f6:	4b18      	ldr	r3, [pc, #96]	; (8003258 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80031f8:	681b      	ldr	r3, [r3, #0]
 80031fa:	b92b      	cbnz	r3, 8003208 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80031fc:	4b17      	ldr	r3, [pc, #92]	; (800325c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80031fe:	4a18      	ldr	r2, [pc, #96]	; (8003260 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003200:	4818      	ldr	r0, [pc, #96]	; (8003264 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003202:	216c      	movs	r1, #108	; 0x6c
 8003204:	f027 fce2 	bl	802abcc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003208:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800320c:	4b16      	ldr	r3, [pc, #88]	; (8003268 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003214:	4b15      	ldr	r3, [pc, #84]	; (800326c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003216:	6818      	ldr	r0, [r3, #0]
 8003218:	f005 ff74 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800321c:	682b      	ldr	r3, [r5, #0]
 800321e:	9001      	str	r0, [sp, #4]
 8003220:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003222:	4628      	mov	r0, r5
 8003224:	4798      	blx	r3
 8003226:	682b      	ldr	r3, [r5, #0]
 8003228:	9901      	ldr	r1, [sp, #4]
 800322a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800322c:	4604      	mov	r4, r0
 800322e:	4628      	mov	r0, r5
 8003230:	4798      	blx	r3
 8003232:	682b      	ldr	r3, [r5, #0]
 8003234:	9901      	ldr	r1, [sp, #4]
 8003236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003238:	fb14 f400 	smulbb	r4, r4, r0
 800323c:	4628      	mov	r0, r5
 800323e:	4798      	blx	r3
 8003240:	b2a4      	uxth	r4, r4
 8003242:	1823      	adds	r3, r4, r0
 8003244:	b21b      	sxth	r3, r3
 8003246:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800324a:	b002      	add	sp, #8
 800324c:	bd70      	pop	{r4, r5, r6, pc}
 800324e:	2300      	movs	r3, #0
 8003250:	e7f9      	b.n	8003246 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003252:	bf00      	nop
 8003254:	20012e10 	.word	0x20012e10
 8003258:	20012e0c 	.word	0x20012e0c
 800325c:	0802c610 	.word	0x0802c610
 8003260:	0802c652 	.word	0x0802c652
 8003264:	0802c68d 	.word	0x0802c68d
 8003268:	20012e14 	.word	0x20012e14
 800326c:	20012e18 	.word	0x20012e18

08003270 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8003270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003274:	ed2d 8b06 	vpush	{d8-d10}
 8003278:	4604      	mov	r4, r0
 800327a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 800327c:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800327e:	2500      	movs	r5, #0
 8003280:	f014 f9c6 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8003284:	4b66      	ldr	r3, [pc, #408]	; (8003420 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 8003286:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003288:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800328c:	2226      	movs	r2, #38	; 0x26
 800328e:	4629      	mov	r1, r5
 8003290:	4658      	mov	r0, fp
 8003292:	f027 fea0 	bl	802afd6 <memset>
 8003296:	4658      	mov	r0, fp
 8003298:	f7ff ff72 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 800329c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80032a0:	26ff      	movs	r6, #255	; 0xff
 80032a2:	4b60      	ldr	r3, [pc, #384]	; (8003424 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80032a4:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80032a6:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80032a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80032ac:	4629      	mov	r1, r5
 80032ae:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80032b2:	4650      	mov	r0, sl
        : color(col)
 80032b4:	66a5      	str	r5, [r4, #104]	; 0x68
 80032b6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80032ba:	f027 fe8c 	bl	802afd6 <memset>
 80032be:	4650      	mov	r0, sl
 80032c0:	f7ff ff5e 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80032c4:	4b58      	ldr	r3, [pc, #352]	; (8003428 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80032c6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80032c8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80032cc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80032d0:	a90a      	add	r1, sp, #40	; 0x28
 80032d2:	4650      	mov	r0, sl
 80032d4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80032d8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80032dc:	f010 f80f 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80032e0:	4648      	mov	r0, r9
 80032e2:	f7ff ff5f 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80032e6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80032ea:	4b50      	ldr	r3, [pc, #320]	; (800342c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 80032ec:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80032f0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80032f4:	4638      	mov	r0, r7
 80032f6:	f00e fecb 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 80032fa:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80032fe:	4618      	mov	r0, r3
 8003300:	9303      	str	r3, [sp, #12]
 8003302:	f7fe fabd 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003306:	4b4a      	ldr	r3, [pc, #296]	; (8003430 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8003308:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800330c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8003310:	3324      	adds	r3, #36	; 0x24
 8003312:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003316:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800331a:	4640      	mov	r0, r8
 800331c:	f7ff ff42 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003320:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8003324:	4618      	mov	r0, r3
 8003326:	ee08 3a10 	vmov	s16, r3
 800332a:	f7ff ff3b 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 800332e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8003332:	4618      	mov	r0, r3
 8003334:	ee08 3a90 	vmov	s17, r3
 8003338:	f7ff ff34 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 800333c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8003340:	4618      	mov	r0, r3
 8003342:	ee09 3a10 	vmov	s18, r3
 8003346:	f010 f91b 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800334a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800334e:	4618      	mov	r0, r3
 8003350:	ee09 3a90 	vmov	s19, r3
 8003354:	f010 f914 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003358:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800335c:	4618      	mov	r0, r3
 800335e:	ee0a 3a10 	vmov	s20, r3
 8003362:	f010 f90d 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003366:	4a33      	ldr	r2, [pc, #204]	; (8003434 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8003368:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800336c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8003370:	4a31      	ldr	r2, [pc, #196]	; (8003438 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003372:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003376:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800337a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800337e:	f010 ffbb 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003382:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003386:	462a      	mov	r2, r5
 8003388:	4658      	mov	r0, fp
 800338a:	9300      	str	r3, [sp, #0]
 800338c:	4629      	mov	r1, r5
 800338e:	23f0      	movs	r3, #240	; 0xf0
 8003390:	f7ff fee2 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003394:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003396:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800339a:	66a3      	str	r3, [r4, #104]	; 0x68
 800339c:	4659      	mov	r1, fp
 800339e:	4630      	mov	r0, r6
 80033a0:	f00d fa1e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80033a4:	462a      	mov	r2, r5
 80033a6:	4650      	mov	r0, sl
 80033a8:	4629      	mov	r1, r5
 80033aa:	f7ff fec8 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80033ae:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80033b0:	4650      	mov	r0, sl
 80033b2:	a90a      	add	r1, sp, #40	; 0x28
 80033b4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80033b8:	f00f ffa1 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80033bc:	4651      	mov	r1, sl
 80033be:	4630      	mov	r0, r6
 80033c0:	f00d fa0e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80033c4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80033c8:	2159      	movs	r1, #89	; 0x59
 80033ca:	4648      	mov	r0, r9
 80033cc:	f7ff feb7 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80033d0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80033d4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80033d8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80033dc:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80033e0:	4650      	mov	r0, sl
 80033e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80033e6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80033ea:	4649      	mov	r1, r9
 80033ec:	4798      	blx	r3
 80033ee:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80033f2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80033f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80033fa:	4b10      	ldr	r3, [pc, #64]	; (800343c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 80033fc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 80033fe:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8003402:	b92b      	cbnz	r3, 8003410 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8003404:	4b0e      	ldr	r3, [pc, #56]	; (8003440 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8003406:	4a0f      	ldr	r2, [pc, #60]	; (8003444 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8003408:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800340a:	480f      	ldr	r0, [pc, #60]	; (8003448 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800340c:	f027 fbde 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003410:	4b0e      	ldr	r3, [pc, #56]	; (800344c <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003412:	881b      	ldrh	r3, [r3, #0]
 8003414:	2b24      	cmp	r3, #36	; 0x24
 8003416:	d81d      	bhi.n	8003454 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8003418:	4b0d      	ldr	r3, [pc, #52]	; (8003450 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800341a:	4a0a      	ldr	r2, [pc, #40]	; (8003444 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800341c:	2161      	movs	r1, #97	; 0x61
 800341e:	e7f4      	b.n	800340a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8003420:	0802c878 	.word	0x0802c878
 8003424:	0802f120 	.word	0x0802f120
 8003428:	0802f2e8 	.word	0x0802f2e8
 800342c:	0802c7d0 	.word	0x0802c7d0
 8003430:	0802ee54 	.word	0x0802ee54
 8003434:	0802c860 	.word	0x0802c860
 8003438:	080030f5 	.word	0x080030f5
 800343c:	20012e0c 	.word	0x20012e0c
 8003440:	0802c610 	.word	0x0802c610
 8003444:	0802c712 	.word	0x0802c712
 8003448:	0802c68d 	.word	0x0802c68d
 800344c:	20012e10 	.word	0x20012e10
 8003450:	0802c6d4 	.word	0x0802c6d4
        return texts->getText(typedTextId);
 8003454:	4b93      	ldr	r3, [pc, #588]	; (80036a4 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8003456:	2124      	movs	r1, #36	; 0x24
 8003458:	6818      	ldr	r0, [r3, #0]
 800345a:	f005 fe53 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 800345e:	4a92      	ldr	r2, [pc, #584]	; (80036a8 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8003460:	4603      	mov	r3, r0
 8003462:	2104      	movs	r1, #4
 8003464:	4650      	mov	r0, sl
 8003466:	f015 fdc3 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800346a:	4648      	mov	r0, r9
        wc1 = value;
 800346c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8003470:	f00f fb4a 	bl	8012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003474:	4b8d      	ldr	r3, [pc, #564]	; (80036ac <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8003476:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8003478:	a90a      	add	r1, sp, #40	; 0x28
 800347a:	2325      	movs	r3, #37	; 0x25
 800347c:	4648      	mov	r0, r9
 800347e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003482:	f00f fb61 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003486:	4649      	mov	r1, r9
 8003488:	4630      	mov	r0, r6
 800348a:	f00d f9a9 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800348e:	230a      	movs	r3, #10
 8003490:	9300      	str	r3, [sp, #0]
 8003492:	2232      	movs	r2, #50	; 0x32
 8003494:	23f0      	movs	r3, #240	; 0xf0
 8003496:	4629      	mov	r1, r5
 8003498:	4638      	mov	r0, r7
 800349a:	f7ff fe5d 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 800349e:	9b03      	ldr	r3, [sp, #12]
 80034a0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80034a4:	22a0      	movs	r2, #160	; 0xa0
 80034a6:	4611      	mov	r1, r2
 80034a8:	4638      	mov	r0, r7
 80034aa:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80034ae:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80034b2:	f00e ff03 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80034b6:	22a0      	movs	r2, #160	; 0xa0
 80034b8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80034bc:	4638      	mov	r0, r7
 80034be:	f00e ff08 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80034c2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80034c6:	2b20      	cmp	r3, #32
 80034c8:	d005      	beq.n	80034d6 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80034ca:	2320      	movs	r3, #32
 80034cc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80034d0:	4638      	mov	r0, r7
 80034d2:	f00e fdfd 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80034d6:	4638      	mov	r0, r7
 80034d8:	2101      	movs	r1, #1
 80034da:	f00e ff05 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80034de:	4639      	mov	r1, r7
 80034e0:	4630      	mov	r0, r6
 80034e2:	ad04      	add	r5, sp, #16
        color = newColor;
 80034e4:	f04f 37ff 	mov.w	r7, #4294967295
 80034e8:	f00d f97a 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80034ec:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 80034f0:	223c      	movs	r2, #60	; 0x3c
 80034f2:	4640      	mov	r0, r8
 80034f4:	2146      	movs	r1, #70	; 0x46
 80034f6:	f7ff fe22 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80034fa:	4641      	mov	r1, r8
 80034fc:	4628      	mov	r0, r5
        color = newColor;
 80034fe:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8003502:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8003506:	f00f f885 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800350a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800350e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8003512:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003516:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80036ac <_ZN19CalibrationViewBaseC1Ev+0x43c>
 800351a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800351e:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8003520:	a90a      	add	r1, sp, #40	; 0x28
 8003522:	4640      	mov	r0, r8
 8003524:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003528:	f00f fb0e 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800352c:	4641      	mov	r1, r8
 800352e:	4630      	mov	r0, r6
 8003530:	f00d f956 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8003534:	ee18 0a10 	vmov	r0, s16
 8003538:	2223      	movs	r2, #35	; 0x23
 800353a:	2145      	movs	r1, #69	; 0x45
 800353c:	f7ff fdff 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8003540:	ee18 1a10 	vmov	r1, s16
 8003544:	4628      	mov	r0, r5
        color = newColor;
 8003546:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800354a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800354e:	f00f f861 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003552:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003556:	ee18 3a10 	vmov	r3, s16
 800355a:	333c      	adds	r3, #60	; 0x3c
 800355c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003560:	235a      	movs	r3, #90	; 0x5a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8003562:	ee18 0a10 	vmov	r0, s16
 8003566:	a90a      	add	r1, sp, #40	; 0x28
 8003568:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800356c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003570:	f00f faea 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003574:	ee18 1a10 	vmov	r1, s16
 8003578:	4630      	mov	r0, r6
 800357a:	f00d f931 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800357e:	ee18 0a90 	vmov	r0, s17
 8003582:	220c      	movs	r2, #12
 8003584:	2136      	movs	r1, #54	; 0x36
 8003586:	f7ff fdda 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800358a:	ee18 1a90 	vmov	r1, s17
 800358e:	4628      	mov	r0, r5
        color = newColor;
 8003590:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8003594:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8003598:	f00f f83c 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800359c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80035a0:	ee18 3a90 	vmov	r3, s17
 80035a4:	333c      	adds	r3, #60	; 0x3c
 80035a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80035aa:	2359      	movs	r3, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 80035ac:	ee18 0a90 	vmov	r0, s17
 80035b0:	a90a      	add	r1, sp, #40	; 0x28
 80035b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035b6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80035ba:	f00f fac5 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035be:	ee18 1a90 	vmov	r1, s17
 80035c2:	4630      	mov	r0, r6
 80035c4:	f00d f90c 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80035c8:	ee19 0a10 	vmov	r0, s18
 80035cc:	22f0      	movs	r2, #240	; 0xf0
 80035ce:	2121      	movs	r1, #33	; 0x21
 80035d0:	f7ff fdb5 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80035d4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80035d8:	aa0a      	add	r2, sp, #40	; 0x28
 80035da:	f04f 0802 	mov.w	r8, #2
 80035de:	a909      	add	r1, sp, #36	; 0x24
 80035e0:	ee19 0a10 	vmov	r0, s18
 80035e4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80035e8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80035ec:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80035f0:	f00f fc8f 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80035f4:	2358      	movs	r3, #88	; 0x58
 80035f6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80035fa:	3510      	adds	r5, #16
        updateTextPosition();
 80035fc:	ee19 0a10 	vmov	r0, s18
 8003600:	f7ff fdf2 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003604:	ee19 1a10 	vmov	r1, s18
 8003608:	4630      	mov	r0, r6
        colorPressed = col;
 800360a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800360e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8003612:	f00d f8e5 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8003616:	ee19 0a90 	vmov	r0, s19
 800361a:	22aa      	movs	r2, #170	; 0xaa
 800361c:	2121      	movs	r1, #33	; 0x21
 800361e:	f7ff fd8e 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003622:	aa0a      	add	r2, sp, #40	; 0x28
 8003624:	a909      	add	r1, sp, #36	; 0x24
 8003626:	ee19 0a90 	vmov	r0, s19
 800362a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800362e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8003632:	f00f fc6e 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003636:	2357      	movs	r3, #87	; 0x57
 8003638:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800363c:	ee19 0a90 	vmov	r0, s19
 8003640:	f7ff fdd2 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003644:	ee19 1a90 	vmov	r1, s19
 8003648:	4630      	mov	r0, r6
        colorPressed = col;
 800364a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800364e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003652:	f00d f8c5 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8003656:	ee1a 0a10 	vmov	r0, s20
 800365a:	2264      	movs	r2, #100	; 0x64
 800365c:	2121      	movs	r1, #33	; 0x21
 800365e:	f7ff fd6e 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003662:	aa0a      	add	r2, sp, #40	; 0x28
 8003664:	a909      	add	r1, sp, #36	; 0x24
 8003666:	ee1a 0a10 	vmov	r0, s20
 800366a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800366e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8003672:	f00f fc4e 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003676:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 8003678:	ee1a 0a10 	vmov	r0, s20
 800367c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8003680:	f7ff fdb2 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003684:	4630      	mov	r0, r6
        colorPressed = col;
 8003686:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800368a:	ee1a 1a10 	vmov	r1, s20
 800368e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8003692:	f00d f8a5 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003696:	4620      	mov	r0, r4
 8003698:	b00d      	add	sp, #52	; 0x34
 800369a:	ecbd 8b06 	vpop	{d8-d10}
 800369e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036a2:	bf00      	nop
 80036a4:	20012e18 	.word	0x20012e18
 80036a8:	0802c74a 	.word	0x0802c74a
 80036ac:	0802c7c0 	.word	0x0802c7c0

080036b0 <_ZN24Calibration_HallViewBase25function_cali_hall_sensorEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_hall_sensor()
    {
        // Override and implement this function in Calibration_Hall
    }
 80036b0:	4770      	bx	lr

080036b2 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 80036b2:	4770      	bx	lr

080036b4 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80036b4:	4770      	bx	lr

080036b6 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80036b6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80036b8:	68c2      	ldr	r2, [r0, #12]
 80036ba:	6844      	ldr	r4, [r0, #4]
 80036bc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80036be:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80036c0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80036c4:	07d2      	lsls	r2, r2, #31
 80036c6:	bf48      	it	mi
 80036c8:	5962      	ldrmi	r2, [r4, r5]
 80036ca:	689b      	ldr	r3, [r3, #8]
    }
 80036cc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80036ce:	bf48      	it	mi
 80036d0:	58d3      	ldrmi	r3, [r2, r3]
 80036d2:	4718      	bx	r3

080036d4 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80036d4:	6843      	ldr	r3, [r0, #4]
 80036d6:	b12b      	cbz	r3, 80036e4 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80036d8:	6883      	ldr	r3, [r0, #8]
 80036da:	b92b      	cbnz	r3, 80036e8 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80036dc:	68c0      	ldr	r0, [r0, #12]
 80036de:	f000 0001 	and.w	r0, r0, #1
 80036e2:	4770      	bx	lr
 80036e4:	4618      	mov	r0, r3
 80036e6:	4770      	bx	lr
 80036e8:	2001      	movs	r0, #1
    }
 80036ea:	4770      	bx	lr

080036ec <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80036ec:	b510      	push	{r4, lr}
 80036ee:	2110      	movs	r1, #16
 80036f0:	4604      	mov	r4, r0
 80036f2:	f026 fb84 	bl	8029dfe <_ZdlPvj>
 80036f6:	4620      	mov	r0, r4
 80036f8:	bd10      	pop	{r4, pc}
	...

080036fc <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 80036fc:	b510      	push	{r4, lr}
 80036fe:	4b03      	ldr	r3, [pc, #12]	; (800370c <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8003700:	6003      	str	r3, [r0, #0]
 8003702:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003704:	f010 fe02 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003708:	4620      	mov	r0, r4
 800370a:	bd10      	pop	{r4, pc}
 800370c:	0802c8c4 	.word	0x0802c8c4

08003710 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8003710:	b507      	push	{r0, r1, r2, lr}
 8003712:	4b07      	ldr	r3, [pc, #28]	; (8003730 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8003714:	6003      	str	r3, [r0, #0]
 8003716:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003718:	f010 fdf8 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800371c:	9801      	ldr	r0, [sp, #4]
 800371e:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003722:	f026 fb6c 	bl	8029dfe <_ZdlPvj>
 8003726:	9801      	ldr	r0, [sp, #4]
 8003728:	b003      	add	sp, #12
 800372a:	f85d fb04 	ldr.w	pc, [sp], #4
 800372e:	bf00      	nop
 8003730:	0802c8c4 	.word	0x0802c8c4

08003734 <_ZN24Calibration_HallViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_HallViewBase::handleTickEvent()
{
 8003734:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003736:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 800373a:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 800373e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003740:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003742:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003746:	d105      	bne.n	8003754 <_ZN24Calibration_HallViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_hall_sensor
        function_cali_hall_sensor();
 8003748:	6803      	ldr	r3, [r0, #0]
 800374a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800374c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 800374e:	2300      	movs	r3, #0
 8003750:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003754:	bd10      	pop	{r4, pc}

08003756 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003756:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 800375a:	4288      	cmp	r0, r1
{
 800375c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800375e:	d105      	bne.n	800376c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003760:	f012 fad6 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003764:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003768:	f001 b970 	b.w	8004a4c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800376c:	bd08      	pop	{r3, pc}
	...

08003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003770:	b510      	push	{r4, lr}
 8003772:	4604      	mov	r4, r0
        : TextArea()
 8003774:	f7ff fd16 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003778:	4b02      	ldr	r3, [pc, #8]	; (8003784 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800377a:	6023      	str	r3, [r4, #0]
 800377c:	2300      	movs	r3, #0
 800377e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003780:	4620      	mov	r0, r4
 8003782:	bd10      	pop	{r4, pc}
 8003784:	0802c7d0 	.word	0x0802c7d0

08003788 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8003788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800378c:	ed2d 8b06 	vpush	{d8-d10}
 8003790:	4604      	mov	r4, r0
 8003792:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003794:	46a3      	mov	fp, r4
 8003796:	2500      	movs	r5, #0
 8003798:	f013 ff3a 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 800379c:	4b69      	ldr	r3, [pc, #420]	; (8003944 <_ZN24Calibration_HallViewBaseC1Ev+0x1bc>)
 800379e:	63e5      	str	r5, [r4, #60]	; 0x3c
 80037a0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80037a4:	2226      	movs	r2, #38	; 0x26
 80037a6:	4629      	mov	r1, r5
 80037a8:	4658      	mov	r0, fp
 80037aa:	f027 fc14 	bl	802afd6 <memset>
 80037ae:	4658      	mov	r0, fp
 80037b0:	f7ff fce6 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80037b4:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80037b8:	27ff      	movs	r7, #255	; 0xff
 80037ba:	4b63      	ldr	r3, [pc, #396]	; (8003948 <_ZN24Calibration_HallViewBaseC1Ev+0x1c0>)
 80037bc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80037be:	2226      	movs	r2, #38	; 0x26
 80037c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80037c4:	4629      	mov	r1, r5
 80037c6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 80037ca:	4630      	mov	r0, r6
 80037cc:	66a5      	str	r5, [r4, #104]	; 0x68
 80037ce:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80037d2:	f027 fc00 	bl	802afd6 <memset>
 80037d6:	4630      	mov	r0, r6
 80037d8:	f7ff fcd2 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80037dc:	4b5b      	ldr	r3, [pc, #364]	; (800394c <_ZN24Calibration_HallViewBaseC1Ev+0x1c4>)
 80037de:	66e3      	str	r3, [r4, #108]	; 0x6c
 80037e0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80037e4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80037e8:	a90a      	add	r1, sp, #40	; 0x28
 80037ea:	4630      	mov	r0, r6
 80037ec:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80037f0:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80037f4:	f00f fd83 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80037f8:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 80037fc:	4650      	mov	r0, sl
 80037fe:	f7ff ffb7 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003802:	4648      	mov	r0, r9
 8003804:	f7ff ffb4 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003808:	f504 7398 	add.w	r3, r4, #304	; 0x130
 800380c:	4618      	mov	r0, r3
 800380e:	ee09 3a10 	vmov	s18, r3
 8003812:	f7ff ffad 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003816:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 800381a:	4618      	mov	r0, r3
 800381c:	ee09 3a90 	vmov	s19, r3
 8003820:	f7ff ffa6 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003824:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003828:	4618      	mov	r0, r3
 800382a:	ee0a 3a10 	vmov	s20, r3
 800382e:	f00f fea7 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003832:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003836:	4618      	mov	r0, r3
 8003838:	f504 7816 	add.w	r8, r4, #600	; 0x258
 800383c:	ee0a 3a90 	vmov	s21, r3
 8003840:	f7ff fcb0 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003844:	4640      	mov	r0, r8
 8003846:	f00e fc23 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 800384a:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800384e:	4618      	mov	r0, r3
 8003850:	9302      	str	r3, [sp, #8]
 8003852:	f7fe f815 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003856:	4b3e      	ldr	r3, [pc, #248]	; (8003950 <_ZN24Calibration_HallViewBaseC1Ev+0x1c8>)
 8003858:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 800385c:	3324      	adds	r3, #36	; 0x24
 800385e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003862:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003866:	4618      	mov	r0, r3
 8003868:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
 800386c:	ee08 3a10 	vmov	s16, r3
 8003870:	f7ff fc98 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003874:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003878:	4618      	mov	r0, r3
 800387a:	ee08 3a90 	vmov	s17, r3
 800387e:	f7ff fc91 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003882:	4a34      	ldr	r2, [pc, #208]	; (8003954 <_ZN24Calibration_HallViewBaseC1Ev+0x1cc>)
 8003884:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003888:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 800388c:	4a32      	ldr	r2, [pc, #200]	; (8003958 <_ZN24Calibration_HallViewBaseC1Ev+0x1d0>)
 800388e:	f8c3 51dc 	str.w	r5, [r3, #476]	; 0x1dc
 8003892:	e9c3 2575 	strd	r2, r5, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003896:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800389a:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 800389e:	f010 fd2b 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80038a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80038a6:	462a      	mov	r2, r5
 80038a8:	4658      	mov	r0, fp
 80038aa:	9300      	str	r3, [sp, #0]
 80038ac:	4629      	mov	r1, r5
 80038ae:	23f0      	movs	r3, #240	; 0xf0
 80038b0:	f7ff fc52 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038b4:	1d27      	adds	r7, r4, #4
        color = newColor;
 80038b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80038ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80038bc:	4659      	mov	r1, fp
 80038be:	4638      	mov	r0, r7
 80038c0:	f00c ff8e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80038c4:	462a      	mov	r2, r5
 80038c6:	4630      	mov	r0, r6
 80038c8:	4629      	mov	r1, r5
 80038ca:	f7ff fc38 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80038ce:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80038d0:	4630      	mov	r0, r6
 80038d2:	a90a      	add	r1, sp, #40	; 0x28
 80038d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80038d8:	f00f fd11 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80038dc:	4631      	mov	r1, r6
 80038de:	4638      	mov	r0, r7
 80038e0:	f00c ff7e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_S.setPosition(0, 160, 207, 27);
 80038e4:	231b      	movs	r3, #27
 80038e6:	22a0      	movs	r2, #160	; 0xa0
 80038e8:	9300      	str	r3, [sp, #0]
 80038ea:	4629      	mov	r1, r5
 80038ec:	23cf      	movs	r3, #207	; 0xcf
 80038ee:	4650      	mov	r0, sl
 80038f0:	f7ff fc32 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038f4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80038f8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80038fc:	ae04      	add	r6, sp, #16
        color = newColor;
 80038fe:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003902:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003906:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800390a:	4651      	mov	r1, sl
 800390c:	4630      	mov	r0, r6
 800390e:	4798      	blx	r3
 8003910:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003914:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003918:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_96IR).getText());
 800391c:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003920:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003922:	4b0e      	ldr	r3, [pc, #56]	; (800395c <_ZN24Calibration_HallViewBaseC1Ev+0x1d4>)
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	b92b      	cbnz	r3, 8003934 <_ZN24Calibration_HallViewBaseC1Ev+0x1ac>
 8003928:	4b0d      	ldr	r3, [pc, #52]	; (8003960 <_ZN24Calibration_HallViewBaseC1Ev+0x1d8>)
 800392a:	4a0e      	ldr	r2, [pc, #56]	; (8003964 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 800392c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800392e:	480e      	ldr	r0, [pc, #56]	; (8003968 <_ZN24Calibration_HallViewBaseC1Ev+0x1e0>)
 8003930:	f027 f94c 	bl	802abcc <__assert_func>
 8003934:	4b0d      	ldr	r3, [pc, #52]	; (800396c <_ZN24Calibration_HallViewBaseC1Ev+0x1e4>)
 8003936:	881b      	ldrh	r3, [r3, #0]
 8003938:	b9e3      	cbnz	r3, 8003974 <_ZN24Calibration_HallViewBaseC1Ev+0x1ec>
 800393a:	4b0d      	ldr	r3, [pc, #52]	; (8003970 <_ZN24Calibration_HallViewBaseC1Ev+0x1e8>)
 800393c:	4a09      	ldr	r2, [pc, #36]	; (8003964 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 800393e:	2161      	movs	r1, #97	; 0x61
 8003940:	e7f5      	b.n	800392e <_ZN24Calibration_HallViewBaseC1Ev+0x1a6>
 8003942:	bf00      	nop
 8003944:	0802c8c4 	.word	0x0802c8c4
 8003948:	0802f120 	.word	0x0802f120
 800394c:	0802f2e8 	.word	0x0802f2e8
 8003950:	0802ee54 	.word	0x0802ee54
 8003954:	0802c8ac 	.word	0x0802c8ac
 8003958:	08003757 	.word	0x08003757
 800395c:	20012e0c 	.word	0x20012e0c
 8003960:	0802c610 	.word	0x0802c610
 8003964:	0802c712 	.word	0x0802c712
 8003968:	0802c68d 	.word	0x0802c68d
 800396c:	20012e10 	.word	0x20012e10
 8003970:	0802c6d4 	.word	0x0802c6d4
        return texts->getText(typedTextId);
 8003974:	4bd7      	ldr	r3, [pc, #860]	; (8003cd4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003976:	4629      	mov	r1, r5
 8003978:	6818      	ldr	r0, [r3, #0]
 800397a:	f005 fbc3 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 800397e:	4ad6      	ldr	r2, [pc, #856]	; (8003cd8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003980:	4603      	mov	r3, r0
 8003982:	210a      	movs	r1, #10
 8003984:	9803      	ldr	r0, [sp, #12]
 8003986:	f015 fb33 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800398a:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 800398c:	4bd3      	ldr	r3, [pc, #844]	; (8003cdc <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 800398e:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_HSL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1XZ));
 8003992:	4650      	mov	r0, sl
 8003994:	930a      	str	r3, [sp, #40]	; 0x28
 8003996:	a90a      	add	r1, sp, #40	; 0x28
 8003998:	2301      	movs	r3, #1
 800399a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800399e:	f00f f8d3 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039a2:	4651      	mov	r1, sl
 80039a4:	4638      	mov	r0, r7
 80039a6:	f00c ff1b 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_F.setPosition(25, 187, 207, 22);
 80039aa:	2116      	movs	r1, #22
 80039ac:	22bb      	movs	r2, #187	; 0xbb
 80039ae:	9100      	str	r1, [sp, #0]
 80039b0:	23cf      	movs	r3, #207	; 0xcf
 80039b2:	2119      	movs	r1, #25
 80039b4:	4648      	mov	r0, r9
 80039b6:	f7ff fbcf 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039ba:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 80039be:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80039c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80039c6:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80039ca:	4649      	mov	r1, r9
 80039cc:	4630      	mov	r0, r6
 80039ce:	4798      	blx	r3
 80039d0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039d4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80039d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039dc:	49c0      	ldr	r1, [pc, #768]	; (8003ce0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 80039de:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PU07).getText());
 80039e0:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 80039e4:	2b00      	cmp	r3, #0
 80039e6:	d09f      	beq.n	8003928 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039e8:	48be      	ldr	r0, [pc, #760]	; (8003ce4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 80039ea:	8803      	ldrh	r3, [r0, #0]
 80039ec:	2b02      	cmp	r3, #2
 80039ee:	d9a4      	bls.n	800393a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 80039f0:	4ab8      	ldr	r2, [pc, #736]	; (8003cd4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 80039f2:	2102      	movs	r1, #2
 80039f4:	6810      	ldr	r0, [r2, #0]
 80039f6:	f005 fb85 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 80039fa:	4ab7      	ldr	r2, [pc, #732]	; (8003cd8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 80039fc:	4603      	mov	r3, r0
 80039fe:	210a      	movs	r1, #10
 8003a00:	4650      	mov	r0, sl
 8003a02:	f015 faf5 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AFGX));
 8003a06:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003a0a:	4bb4      	ldr	r3, [pc, #720]	; (8003cdc <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003a0c:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003a10:	4661      	mov	r1, ip
 8003a12:	4648      	mov	r0, r9
 8003a14:	f04f 0a03 	mov.w	sl, #3
 8003a18:	930a      	str	r3, [sp, #40]	; 0x28
 8003a1a:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8003a1e:	f00f f893 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a22:	4649      	mov	r1, r9
 8003a24:	4638      	mov	r0, r7
 8003a26:	f00c fedb 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_F.setPosition(25, 119, 207, 22);
 8003a2a:	f04f 0c16 	mov.w	ip, #22
 8003a2e:	2277      	movs	r2, #119	; 0x77
 8003a30:	ee19 0a10 	vmov	r0, s18
 8003a34:	f8cd c000 	str.w	ip, [sp]
 8003a38:	23cf      	movs	r3, #207	; 0xcf
 8003a3a:	2119      	movs	r1, #25
 8003a3c:	f7ff fb8c 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a40:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8003a44:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8003a48:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003a4c:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8003a50:	ee19 1a10 	vmov	r1, s18
 8003a54:	4630      	mov	r0, r6
 8003a56:	4798      	blx	r3
 8003a58:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a5c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003a60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a64:	499e      	ldr	r1, [pc, #632]	; (8003ce0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003a66:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IPYE).getText());
 8003a68:	f504 7965 	add.w	r9, r4, #916	; 0x394
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	f43f af5b 	beq.w	8003928 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a72:	489c      	ldr	r0, [pc, #624]	; (8003ce4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003a74:	8803      	ldrh	r3, [r0, #0]
 8003a76:	2b04      	cmp	r3, #4
 8003a78:	f67f af5f 	bls.w	800393a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003a7c:	4a95      	ldr	r2, [pc, #596]	; (8003cd4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003a7e:	2104      	movs	r1, #4
 8003a80:	6810      	ldr	r0, [r2, #0]
 8003a82:	f005 fb3f 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8003a86:	4a94      	ldr	r2, [pc, #592]	; (8003cd8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003a88:	4603      	mov	r3, r0
 8003a8a:	210a      	movs	r1, #10
 8003a8c:	4648      	mov	r0, r9
 8003a8e:	f015 faaf 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0EGP));
 8003a92:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003a96:	4b91      	ldr	r3, [pc, #580]	; (8003cdc <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003a98:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8003a9c:	4661      	mov	r1, ip
 8003a9e:	ee19 0a10 	vmov	r0, s18
 8003aa2:	930a      	str	r3, [sp, #40]	; 0x28
 8003aa4:	2305      	movs	r3, #5
 8003aa6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003aaa:	f00f f84d 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003aae:	ee19 1a10 	vmov	r1, s18
 8003ab2:	4638      	mov	r0, r7
 8003ab4:	f00c fe94 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_S.setPosition(0, 92, 207, 27);
 8003ab8:	f04f 0c1b 	mov.w	ip, #27
 8003abc:	225c      	movs	r2, #92	; 0x5c
 8003abe:	ee19 0a90 	vmov	r0, s19
 8003ac2:	f8cd c000 	str.w	ip, [sp]
 8003ac6:	23cf      	movs	r3, #207	; 0xcf
 8003ac8:	4629      	mov	r1, r5
 8003aca:	f7ff fb45 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ace:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 8003ad2:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 8003ad6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003ada:	f8a4 51b0 	strh.w	r5, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8003ade:	ee19 1a90 	vmov	r1, s19
 8003ae2:	4630      	mov	r0, r6
 8003ae4:	4798      	blx	r3
 8003ae6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003aea:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8003aee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003af2:	497b      	ldr	r1, [pc, #492]	; (8003ce0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003af4:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KCM3).getText());
 8003af6:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	f43f af14 	beq.w	8003928 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b00:	4878      	ldr	r0, [pc, #480]	; (8003ce4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003b02:	8803      	ldrh	r3, [r0, #0]
 8003b04:	2b06      	cmp	r3, #6
 8003b06:	f67f af18 	bls.w	800393a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003b0a:	4a72      	ldr	r2, [pc, #456]	; (8003cd4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003b0c:	2106      	movs	r1, #6
 8003b0e:	6810      	ldr	r0, [r2, #0]
 8003b10:	f005 faf8 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8003b14:	4a70      	ldr	r2, [pc, #448]	; (8003cd8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003b16:	4603      	mov	r3, r0
 8003b18:	210a      	movs	r1, #10
 8003b1a:	4648      	mov	r0, r9
 8003b1c:	f015 fa68 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003b20:	4b6e      	ldr	r3, [pc, #440]	; (8003cdc <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003b22:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_HSR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MWJ));
 8003b24:	ee19 0a90 	vmov	r0, s19
 8003b28:	2307      	movs	r3, #7
 8003b2a:	a90a      	add	r1, sp, #40	; 0x28
 8003b2c:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003b30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003b34:	f00f f808 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b38:	ee19 1a90 	vmov	r1, s19
 8003b3c:	4638      	mov	r0, r7
 8003b3e:	f00c fe4f 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003b42:	ee1a 0a10 	vmov	r0, s20
 8003b46:	f240 1201 	movw	r2, #257	; 0x101
 8003b4a:	2121      	movs	r1, #33	; 0x21
 8003b4c:	f7ff faf7 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003b50:	aa0a      	add	r2, sp, #40	; 0x28
 8003b52:	2302      	movs	r3, #2
 8003b54:	a909      	add	r1, sp, #36	; 0x24
 8003b56:	ee1a 0a10 	vmov	r0, s20
 8003b5a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003b5e:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8003b62:	f00f f9d6 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003b66:	2319      	movs	r3, #25
        updateTextPosition();
 8003b68:	ee1a 0a10 	vmov	r0, s20
 8003b6c:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8003b70:	f7ff fb3a 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003b74:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8003b78:	330c      	adds	r3, #12
 8003b7a:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8003b7e:	ee1a 1a10 	vmov	r1, s20
 8003b82:	4638      	mov	r0, r7
        colorPressed = col;
 8003b84:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8003b88:	f00c fe2a 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(32, 60);
 8003b8c:	223c      	movs	r2, #60	; 0x3c
 8003b8e:	ee1a 0a90 	vmov	r0, s21
 8003b92:	2120      	movs	r1, #32
 8003b94:	f7ff fad3 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8003b98:	ee1a 1a90 	vmov	r1, s21
 8003b9c:	4630      	mov	r0, r6
        color = newColor;
 8003b9e:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8003ba2:	f8a4 5244 	strh.w	r5, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8003ba6:	f00e fd35 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003baa:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003bae:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003bb2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003bb6:	4b49      	ldr	r3, [pc, #292]	; (8003cdc <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003bb8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8003bba:	ee1a 0a90 	vmov	r0, s21
 8003bbe:	231a      	movs	r3, #26
 8003bc0:	a90a      	add	r1, sp, #40	; 0x28
 8003bc2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003bc6:	f00e ffbf 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003bca:	ee1a 1a90 	vmov	r1, s21
 8003bce:	4638      	mov	r0, r7
 8003bd0:	f00c fe06 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003bd4:	230a      	movs	r3, #10
 8003bd6:	9300      	str	r3, [sp, #0]
 8003bd8:	2232      	movs	r2, #50	; 0x32
 8003bda:	23f0      	movs	r3, #240	; 0xf0
 8003bdc:	4629      	mov	r1, r5
 8003bde:	4640      	mov	r0, r8
 8003be0:	f7ff faba 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003be4:	9b02      	ldr	r3, [sp, #8]
 8003be6:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003bea:	22a0      	movs	r2, #160	; 0xa0
 8003bec:	4611      	mov	r1, r2
 8003bee:	4640      	mov	r0, r8
 8003bf0:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003bf4:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 8003bf8:	f00e fb60 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003bfc:	22a0      	movs	r2, #160	; 0xa0
 8003bfe:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003c02:	4640      	mov	r0, r8
 8003c04:	f00e fb65 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003c08:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8003c0c:	2b20      	cmp	r3, #32
 8003c0e:	d005      	beq.n	8003c1c <_ZN24Calibration_HallViewBaseC1Ev+0x494>
        lineWidthQ5 = widthQ5;
 8003c10:	2320      	movs	r3, #32
 8003c12:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 8003c16:	4640      	mov	r0, r8
 8003c18:	f00e fa5a 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003c1c:	4640      	mov	r0, r8
 8003c1e:	2101      	movs	r1, #1
 8003c20:	f00e fb62 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003c24:	4641      	mov	r1, r8
 8003c26:	4638      	mov	r0, r7
 8003c28:	f00c fdda 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003c2c:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8003c2e:	ee18 0a10 	vmov	r0, s16
 8003c32:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8003c34:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 8003c38:	f04f 0800 	mov.w	r8, #0
 8003c3c:	2145      	movs	r1, #69	; 0x45
 8003c3e:	f7ff fa7e 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003c42:	ee18 1a10 	vmov	r1, s16
 8003c46:	4628      	mov	r0, r5
        color = newColor;
 8003c48:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8003c4c:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8003c50:	f00e fce0 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003c54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c58:	ee18 3a10 	vmov	r3, s16
 8003c5c:	333c      	adds	r3, #60	; 0x3c
 8003c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003c62:	4e1e      	ldr	r6, [pc, #120]	; (8003cdc <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003c64:	960a      	str	r6, [sp, #40]	; 0x28
 8003c66:	231b      	movs	r3, #27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003c68:	ee18 0a10 	vmov	r0, s16
 8003c6c:	a90a      	add	r1, sp, #40	; 0x28
 8003c6e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003c72:	f00e ff69 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c76:	ee18 1a10 	vmov	r1, s16
 8003c7a:	4638      	mov	r0, r7
 8003c7c:	f00c fdb0 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003c80:	ee18 0a90 	vmov	r0, s17
 8003c84:	220c      	movs	r2, #12
 8003c86:	2136      	movs	r1, #54	; 0x36
 8003c88:	f7ff fa59 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8003c8c:	ee18 1a90 	vmov	r1, s17
 8003c90:	4628      	mov	r0, r5
        color = newColor;
 8003c92:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8003c96:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8003c9a:	f00e fcbb 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003c9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ca2:	ee18 3a90 	vmov	r3, s17
 8003ca6:	333c      	adds	r3, #60	; 0x3c
 8003ca8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003cac:	231c      	movs	r3, #28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003cae:	ee18 0a90 	vmov	r0, s17
 8003cb2:	a90a      	add	r1, sp, #40	; 0x28
 8003cb4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003cb8:	960a      	str	r6, [sp, #40]	; 0x28
 8003cba:	f00e ff45 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003cbe:	4638      	mov	r0, r7
 8003cc0:	ee18 1a90 	vmov	r1, s17
 8003cc4:	f00c fd8c 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003cc8:	4620      	mov	r0, r4
 8003cca:	b00d      	add	sp, #52	; 0x34
 8003ccc:	ecbd 8b06 	vpop	{d8-d10}
 8003cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cd4:	20012e18 	.word	0x20012e18
 8003cd8:	0802c74a 	.word	0x0802c74a
 8003cdc:	0802c7c0 	.word	0x0802c7c0
 8003ce0:	20012e0c 	.word	0x20012e0c
 8003ce4:	20012e10 	.word	0x20012e10

08003ce8 <_ZN23Calibration_PadViewBase17function_cali_padEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_pad()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003ce8:	4770      	bx	lr

08003cea <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003cea:	4770      	bx	lr

08003cec <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003cec:	4770      	bx	lr

08003cee <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003cee:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003cf0:	68c2      	ldr	r2, [r0, #12]
 8003cf2:	6844      	ldr	r4, [r0, #4]
 8003cf4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003cf6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003cf8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003cfc:	07d2      	lsls	r2, r2, #31
 8003cfe:	bf48      	it	mi
 8003d00:	5962      	ldrmi	r2, [r4, r5]
 8003d02:	689b      	ldr	r3, [r3, #8]
    }
 8003d04:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d06:	bf48      	it	mi
 8003d08:	58d3      	ldrmi	r3, [r2, r3]
 8003d0a:	4718      	bx	r3

08003d0c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003d0c:	6843      	ldr	r3, [r0, #4]
 8003d0e:	b12b      	cbz	r3, 8003d1c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003d10:	6883      	ldr	r3, [r0, #8]
 8003d12:	b92b      	cbnz	r3, 8003d20 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003d14:	68c0      	ldr	r0, [r0, #12]
 8003d16:	f000 0001 	and.w	r0, r0, #1
 8003d1a:	4770      	bx	lr
 8003d1c:	4618      	mov	r0, r3
 8003d1e:	4770      	bx	lr
 8003d20:	2001      	movs	r0, #1
    }
 8003d22:	4770      	bx	lr

08003d24 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d24:	b510      	push	{r4, lr}
 8003d26:	2110      	movs	r1, #16
 8003d28:	4604      	mov	r4, r0
 8003d2a:	f026 f868 	bl	8029dfe <_ZdlPvj>
 8003d2e:	4620      	mov	r0, r4
 8003d30:	bd10      	pop	{r4, pc}
	...

08003d34 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003d34:	b510      	push	{r4, lr}
 8003d36:	4b03      	ldr	r3, [pc, #12]	; (8003d44 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003d38:	6003      	str	r3, [r0, #0]
 8003d3a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003d3c:	f010 fae6 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003d40:	4620      	mov	r0, r4
 8003d42:	bd10      	pop	{r4, pc}
 8003d44:	0802c914 	.word	0x0802c914

08003d48 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003d48:	b507      	push	{r0, r1, r2, lr}
 8003d4a:	4b07      	ldr	r3, [pc, #28]	; (8003d68 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003d4c:	6003      	str	r3, [r0, #0]
 8003d4e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003d50:	f010 fadc 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003d54:	9801      	ldr	r0, [sp, #4]
 8003d56:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003d5a:	f026 f850 	bl	8029dfe <_ZdlPvj>
 8003d5e:	9801      	ldr	r0, [sp, #4]
 8003d60:	b003      	add	sp, #12
 8003d62:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d66:	bf00      	nop
 8003d68:	0802c914 	.word	0x0802c914

08003d6c <_ZN23Calibration_PadViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_PadViewBase::handleTickEvent()
{
 8003d6c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003d6e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8003d72:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 8003d76:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003d78:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003d7a:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003d7e:	d105      	bne.n	8003d8c <_ZN23Calibration_PadViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_pad
        function_cali_pad();
 8003d80:	6803      	ldr	r3, [r0, #0]
 8003d82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d84:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8003d86:	2300      	movs	r3, #0
 8003d88:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003d8c:	bd10      	pop	{r4, pc}

08003d8e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003d8e:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 8003d92:	4288      	cmp	r0, r1
{
 8003d94:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003d96:	d105      	bne.n	8003da4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003d98:	f011 ffba 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003d9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003da0:	f000 be54 	b.w	8004a4c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003da4:	bd08      	pop	{r3, pc}
	...

08003da8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003dac:	ed2d 8b06 	vpush	{d8-d10}
 8003db0:	4604      	mov	r4, r0
 8003db2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003db4:	46a3      	mov	fp, r4
 8003db6:	2600      	movs	r6, #0
 8003db8:	f013 fc2a 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8003dbc:	4b6a      	ldr	r3, [pc, #424]	; (8003f68 <_ZN23Calibration_PadViewBaseC1Ev+0x1c0>)
 8003dbe:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003dc0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8003dc4:	2226      	movs	r2, #38	; 0x26
 8003dc6:	4631      	mov	r1, r6
 8003dc8:	4658      	mov	r0, fp
 8003dca:	f027 f904 	bl	802afd6 <memset>
 8003dce:	4658      	mov	r0, fp
 8003dd0:	f7ff f9d6 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8003dd4:	f104 056c 	add.w	r5, r4, #108	; 0x6c
 8003dd8:	27ff      	movs	r7, #255	; 0xff
 8003dda:	4b64      	ldr	r3, [pc, #400]	; (8003f6c <_ZN23Calibration_PadViewBaseC1Ev+0x1c4>)
 8003ddc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003dde:	2226      	movs	r2, #38	; 0x26
 8003de0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003de4:	4631      	mov	r1, r6
 8003de6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003dea:	4628      	mov	r0, r5
 8003dec:	66a6      	str	r6, [r4, #104]	; 0x68
 8003dee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003df2:	f027 f8f0 	bl	802afd6 <memset>
 8003df6:	4628      	mov	r0, r5
 8003df8:	f7ff f9c2 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8003dfc:	4b5c      	ldr	r3, [pc, #368]	; (8003f70 <_ZN23Calibration_PadViewBaseC1Ev+0x1c8>)
 8003dfe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003e00:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003e04:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003e08:	a90a      	add	r1, sp, #40	; 0x28
 8003e0a:	4628      	mov	r0, r5
 8003e0c:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003e10:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003e14:	f00f fa73 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e18:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 8003e1c:	4650      	mov	r0, sl
 8003e1e:	f7ff fca7 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e22:	4648      	mov	r0, r9
 8003e24:	f7ff fca4 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e28:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8003e2c:	4618      	mov	r0, r3
 8003e2e:	ee09 3a10 	vmov	s18, r3
 8003e32:	f7ff fc9d 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e36:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8003e3a:	4618      	mov	r0, r3
 8003e3c:	ee09 3a90 	vmov	s19, r3
 8003e40:	f7ff fc96 	bl	8003770 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e44:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003e48:	4618      	mov	r0, r3
 8003e4a:	ee0a 3a10 	vmov	s20, r3
 8003e4e:	f00f fb97 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003e52:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003e56:	4618      	mov	r0, r3
 8003e58:	f504 7816 	add.w	r8, r4, #600	; 0x258
 8003e5c:	ee0a 3a90 	vmov	s21, r3
 8003e60:	f7ff f9a0 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003e64:	4640      	mov	r0, r8
 8003e66:	f00e f913 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 8003e6a:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003e6e:	4618      	mov	r0, r3
 8003e70:	9302      	str	r3, [sp, #8]
 8003e72:	f7fd fd05 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e76:	4b3f      	ldr	r3, [pc, #252]	; (8003f74 <_ZN23Calibration_PadViewBaseC1Ev+0x1cc>)
 8003e78:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 8003e7c:	3324      	adds	r3, #36	; 0x24
 8003e7e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003e82:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003e86:	4618      	mov	r0, r3
 8003e88:	f8c4 62d4 	str.w	r6, [r4, #724]	; 0x2d4
 8003e8c:	ee08 3a10 	vmov	s16, r3
 8003e90:	f7ff f988 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8003e94:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003e98:	4618      	mov	r0, r3
 8003e9a:	ee08 3a90 	vmov	s17, r3
 8003e9e:	f7ff f981 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003ea2:	4a35      	ldr	r2, [pc, #212]	; (8003f78 <_ZN23Calibration_PadViewBaseC1Ev+0x1d0>)
 8003ea4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003ea8:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 8003eac:	4a33      	ldr	r2, [pc, #204]	; (8003f7c <_ZN23Calibration_PadViewBaseC1Ev+0x1d4>)
 8003eae:	f8c3 61dc 	str.w	r6, [r3, #476]	; 0x1dc
 8003eb2:	e9c3 2675 	strd	r2, r6, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003eb6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003eba:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003ebe:	f010 fa1b 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003ec2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003ec6:	4632      	mov	r2, r6
 8003ec8:	4658      	mov	r0, fp
 8003eca:	9300      	str	r3, [sp, #0]
 8003ecc:	4631      	mov	r1, r6
 8003ece:	23f0      	movs	r3, #240	; 0xf0
 8003ed0:	f7ff f942 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ed4:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003ed6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003eda:	66a3      	str	r3, [r4, #104]	; 0x68
 8003edc:	4659      	mov	r1, fp
 8003ede:	4638      	mov	r0, r7
 8003ee0:	f00c fc7e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003ee4:	4632      	mov	r2, r6
 8003ee6:	4628      	mov	r0, r5
 8003ee8:	4631      	mov	r1, r6
 8003eea:	f7ff f928 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8003eee:	f04f 0309 	mov.w	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003ef2:	4628      	mov	r0, r5
 8003ef4:	a90a      	add	r1, sp, #40	; 0x28
 8003ef6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003efa:	f00f fa00 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003efe:	4629      	mov	r1, r5
 8003f00:	4638      	mov	r0, r7
 8003f02:	f00c fc6d 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_S.setPosition(0, 92, 207, 27);
 8003f06:	231b      	movs	r3, #27
 8003f08:	225c      	movs	r2, #92	; 0x5c
 8003f0a:	9300      	str	r3, [sp, #0]
 8003f0c:	4631      	mov	r1, r6
 8003f0e:	23cf      	movs	r3, #207	; 0xcf
 8003f10:	4650      	mov	r0, sl
 8003f12:	f7ff f921 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f16:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003f1a:	f8a4 60cc 	strh.w	r6, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003f1e:	ad04      	add	r5, sp, #16
        color = newColor;
 8003f20:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003f24:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003f28:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003f2c:	4651      	mov	r1, sl
 8003f2e:	4628      	mov	r0, r5
 8003f30:	4798      	blx	r3
 8003f32:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f36:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003f3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NNGV).getText());
 8003f3e:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003f42:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f44:	4b0e      	ldr	r3, [pc, #56]	; (8003f80 <_ZN23Calibration_PadViewBaseC1Ev+0x1d8>)
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	b92b      	cbnz	r3, 8003f56 <_ZN23Calibration_PadViewBaseC1Ev+0x1ae>
 8003f4a:	4b0e      	ldr	r3, [pc, #56]	; (8003f84 <_ZN23Calibration_PadViewBaseC1Ev+0x1dc>)
 8003f4c:	4a0e      	ldr	r2, [pc, #56]	; (8003f88 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003f4e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f50:	480e      	ldr	r0, [pc, #56]	; (8003f8c <_ZN23Calibration_PadViewBaseC1Ev+0x1e4>)
 8003f52:	f026 fe3b 	bl	802abcc <__assert_func>
 8003f56:	4b0e      	ldr	r3, [pc, #56]	; (8003f90 <_ZN23Calibration_PadViewBaseC1Ev+0x1e8>)
 8003f58:	881b      	ldrh	r3, [r3, #0]
 8003f5a:	2b0a      	cmp	r3, #10
 8003f5c:	d81c      	bhi.n	8003f98 <_ZN23Calibration_PadViewBaseC1Ev+0x1f0>
 8003f5e:	4b0d      	ldr	r3, [pc, #52]	; (8003f94 <_ZN23Calibration_PadViewBaseC1Ev+0x1ec>)
 8003f60:	4a09      	ldr	r2, [pc, #36]	; (8003f88 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003f62:	2161      	movs	r1, #97	; 0x61
 8003f64:	e7f4      	b.n	8003f50 <_ZN23Calibration_PadViewBaseC1Ev+0x1a8>
 8003f66:	bf00      	nop
 8003f68:	0802c914 	.word	0x0802c914
 8003f6c:	0802f120 	.word	0x0802f120
 8003f70:	0802f2e8 	.word	0x0802f2e8
 8003f74:	0802ee54 	.word	0x0802ee54
 8003f78:	0802c8fc 	.word	0x0802c8fc
 8003f7c:	08003d8f 	.word	0x08003d8f
 8003f80:	20012e0c 	.word	0x20012e0c
 8003f84:	0802c610 	.word	0x0802c610
 8003f88:	0802c712 	.word	0x0802c712
 8003f8c:	0802c68d 	.word	0x0802c68d
 8003f90:	20012e10 	.word	0x20012e10
 8003f94:	0802c6d4 	.word	0x0802c6d4
        return texts->getText(typedTextId);
 8003f98:	4bd8      	ldr	r3, [pc, #864]	; (80042fc <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003f9a:	210a      	movs	r1, #10
 8003f9c:	6818      	ldr	r0, [r3, #0]
 8003f9e:	f005 f8b1 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8003fa2:	4ad7      	ldr	r2, [pc, #860]	; (8004300 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003fa4:	4603      	mov	r3, r0
 8003fa6:	210a      	movs	r1, #10
 8003fa8:	9803      	ldr	r0, [sp, #12]
 8003faa:	f015 f821 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003fae:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8003fb0:	4bd4      	ldr	r3, [pc, #848]	; (8004304 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003fb2:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_PADR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WYEC));
 8003fb6:	4650      	mov	r0, sl
 8003fb8:	930a      	str	r3, [sp, #40]	; 0x28
 8003fba:	a90a      	add	r1, sp, #40	; 0x28
 8003fbc:	230b      	movs	r3, #11
 8003fbe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003fc2:	f00e fdc1 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003fc6:	4651      	mov	r1, sl
 8003fc8:	4638      	mov	r0, r7
 8003fca:	f00c fc09 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_F.setPosition(25, 119, 207, 22);
 8003fce:	2116      	movs	r1, #22
 8003fd0:	2277      	movs	r2, #119	; 0x77
 8003fd2:	9100      	str	r1, [sp, #0]
 8003fd4:	23cf      	movs	r3, #207	; 0xcf
 8003fd6:	2119      	movs	r1, #25
 8003fd8:	4648      	mov	r0, r9
 8003fda:	f7ff f8bd 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fde:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003fe2:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003fe6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003fea:	f8a4 6118 	strh.w	r6, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003fee:	4649      	mov	r1, r9
 8003ff0:	4628      	mov	r0, r5
 8003ff2:	4798      	blx	r3
 8003ff4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ff8:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003ffc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004000:	49c1      	ldr	r1, [pc, #772]	; (8004308 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8004002:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9DMI).getText());
 8004004:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 8004008:	2b00      	cmp	r3, #0
 800400a:	d09e      	beq.n	8003f4a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800400c:	48bf      	ldr	r0, [pc, #764]	; (800430c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 800400e:	8803      	ldrh	r3, [r0, #0]
 8004010:	2b0c      	cmp	r3, #12
 8004012:	d9a4      	bls.n	8003f5e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8004014:	4ab9      	ldr	r2, [pc, #740]	; (80042fc <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8004016:	210c      	movs	r1, #12
 8004018:	6810      	ldr	r0, [r2, #0]
 800401a:	f005 f873 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 800401e:	4ab8      	ldr	r2, [pc, #736]	; (8004300 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8004020:	4603      	mov	r3, r0
 8004022:	210a      	movs	r1, #10
 8004024:	4650      	mov	r0, sl
 8004026:	f014 ffe3 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_PADR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MDOA));
 800402a:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 800402e:	4bb5      	ldr	r3, [pc, #724]	; (8004304 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004030:	930a      	str	r3, [sp, #40]	; 0x28
 8004032:	4661      	mov	r1, ip
 8004034:	230d      	movs	r3, #13
 8004036:	4648      	mov	r0, r9
 8004038:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 800403c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004040:	f00e fd82 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004044:	4649      	mov	r1, r9
 8004046:	4638      	mov	r0, r7
 8004048:	f00c fbca 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_F.setPosition(25, 187, 207, 22);
 800404c:	f04f 0c16 	mov.w	ip, #22
 8004050:	22bb      	movs	r2, #187	; 0xbb
 8004052:	ee19 0a10 	vmov	r0, s18
 8004056:	f8cd c000 	str.w	ip, [sp]
 800405a:	23cf      	movs	r3, #207	; 0xcf
 800405c:	2119      	movs	r1, #25
 800405e:	f7ff f87b 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004062:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8004066:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800406a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800406e:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8004072:	ee19 1a10 	vmov	r1, s18
 8004076:	4628      	mov	r0, r5
 8004078:	4798      	blx	r3
 800407a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800407e:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8004082:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004086:	49a0      	ldr	r1, [pc, #640]	; (8004308 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8004088:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZTO).getText());
 800408a:	f504 7965 	add.w	r9, r4, #916	; 0x394
 800408e:	2b00      	cmp	r3, #0
 8004090:	f43f af5b 	beq.w	8003f4a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004094:	489d      	ldr	r0, [pc, #628]	; (800430c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8004096:	8803      	ldrh	r3, [r0, #0]
 8004098:	2b08      	cmp	r3, #8
 800409a:	f67f af60 	bls.w	8003f5e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 800409e:	4a97      	ldr	r2, [pc, #604]	; (80042fc <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 80040a0:	2108      	movs	r1, #8
 80040a2:	6810      	ldr	r0, [r2, #0]
 80040a4:	f005 f82e 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 80040a8:	4a95      	ldr	r2, [pc, #596]	; (8004300 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 80040aa:	4603      	mov	r3, r0
 80040ac:	210a      	movs	r1, #10
 80040ae:	4648      	mov	r0, r9
 80040b0:	f014 ff9e 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80040b4:	f04f 0c09 	mov.w	ip, #9
 80040b8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
    CALIBRATION_PADL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H127));
 80040bc:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 80040c0:	4b90      	ldr	r3, [pc, #576]	; (8004304 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 80040c2:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 80040c6:	4661      	mov	r1, ip
 80040c8:	ee19 0a10 	vmov	r0, s18
 80040cc:	930a      	str	r3, [sp, #40]	; 0x28
 80040ce:	f00e fd3b 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040d2:	ee19 1a10 	vmov	r1, s18
 80040d6:	4638      	mov	r0, r7
 80040d8:	f00c fb82 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_S.setPosition(0, 160, 207, 27);
 80040dc:	f04f 0c1b 	mov.w	ip, #27
 80040e0:	22a0      	movs	r2, #160	; 0xa0
 80040e2:	ee19 0a90 	vmov	r0, s19
 80040e6:	f8cd c000 	str.w	ip, [sp]
 80040ea:	23cf      	movs	r3, #207	; 0xcf
 80040ec:	4631      	mov	r1, r6
 80040ee:	f7ff f833 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80040f2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 80040f6:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 80040fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80040fe:	f8a4 61b0 	strh.w	r6, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8004102:	ee19 1a90 	vmov	r1, s19
 8004106:	4628      	mov	r0, r5
 8004108:	4798      	blx	r3
 800410a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800410e:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8004112:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004116:	497c      	ldr	r1, [pc, #496]	; (8004308 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8004118:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KIGA).getText());
 800411a:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 800411e:	2b00      	cmp	r3, #0
 8004120:	f43f af13 	beq.w	8003f4a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004124:	4879      	ldr	r0, [pc, #484]	; (800430c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8004126:	8803      	ldrh	r3, [r0, #0]
 8004128:	2b0f      	cmp	r3, #15
 800412a:	f67f af18 	bls.w	8003f5e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 800412e:	4a73      	ldr	r2, [pc, #460]	; (80042fc <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8004130:	210f      	movs	r1, #15
 8004132:	6810      	ldr	r0, [r2, #0]
 8004134:	f004 ffe6 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8004138:	4a71      	ldr	r2, [pc, #452]	; (8004300 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 800413a:	4603      	mov	r3, r0
 800413c:	210a      	movs	r1, #10
 800413e:	4648      	mov	r0, r9
 8004140:	f014 ff56 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004144:	4b6f      	ldr	r3, [pc, #444]	; (8004304 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004146:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_PADL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2BW0));
 8004148:	ee19 0a90 	vmov	r0, s19
 800414c:	230e      	movs	r3, #14
 800414e:	a90a      	add	r1, sp, #40	; 0x28
 8004150:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8004154:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004158:	f00e fcf6 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800415c:	ee19 1a90 	vmov	r1, s19
 8004160:	4638      	mov	r0, r7
 8004162:	f00c fb3d 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8004166:	ee1a 0a10 	vmov	r0, s20
 800416a:	f240 1201 	movw	r2, #257	; 0x101
 800416e:	2121      	movs	r1, #33	; 0x21
 8004170:	f7fe ffe5 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8004174:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004176:	aa0a      	add	r2, sp, #40	; 0x28
 8004178:	a909      	add	r1, sp, #36	; 0x24
 800417a:	ee1a 0a10 	vmov	r0, s20
 800417e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004182:	2302      	movs	r3, #2
 8004184:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004188:	f00e fec3 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800418c:	231f      	movs	r3, #31
        updateTextPosition();
 800418e:	ee1a 0a10 	vmov	r0, s20
 8004192:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8004196:	f7ff f827 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800419a:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 800419e:	330c      	adds	r3, #12
 80041a0:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 80041a4:	ee1a 1a10 	vmov	r1, s20
 80041a8:	4638      	mov	r0, r7
        colorPressed = col;
 80041aa:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 80041ae:	f00c fb17 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(58, 60);
 80041b2:	223c      	movs	r2, #60	; 0x3c
 80041b4:	ee1a 0a90 	vmov	r0, s21
 80041b8:	213a      	movs	r1, #58	; 0x3a
 80041ba:	f7fe ffc0 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80041be:	ee1a 1a90 	vmov	r1, s21
 80041c2:	4628      	mov	r0, r5
        color = newColor;
 80041c4:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 80041c8:	f8a4 6244 	strh.w	r6, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 80041cc:	f00e fa22 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80041d4:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 80041d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80041dc:	4b49      	ldr	r3, [pc, #292]	; (8004304 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 80041de:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80041e0:	ee1a 0a90 	vmov	r0, s21
 80041e4:	231e      	movs	r3, #30
 80041e6:	a90a      	add	r1, sp, #40	; 0x28
 80041e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80041ec:	f00e fcac 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80041f0:	ee1a 1a90 	vmov	r1, s21
 80041f4:	4638      	mov	r0, r7
 80041f6:	f00c faf3 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80041fa:	230a      	movs	r3, #10
 80041fc:	9300      	str	r3, [sp, #0]
 80041fe:	2232      	movs	r2, #50	; 0x32
 8004200:	23f0      	movs	r3, #240	; 0xf0
 8004202:	4631      	mov	r1, r6
 8004204:	4640      	mov	r0, r8
 8004206:	f7fe ffa7 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 800420a:	9b02      	ldr	r3, [sp, #8]
 800420c:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004210:	22a0      	movs	r2, #160	; 0xa0
 8004212:	4611      	mov	r1, r2
 8004214:	4640      	mov	r0, r8
 8004216:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800421a:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 800421e:	f00e f84d 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004222:	22a0      	movs	r2, #160	; 0xa0
 8004224:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004228:	4640      	mov	r0, r8
 800422a:	f00e f852 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800422e:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8004232:	2b20      	cmp	r3, #32
 8004234:	d005      	beq.n	8004242 <_ZN23Calibration_PadViewBaseC1Ev+0x49a>
        lineWidthQ5 = widthQ5;
 8004236:	2320      	movs	r3, #32
 8004238:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 800423c:	4640      	mov	r0, r8
 800423e:	f00d ff47 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004242:	4640      	mov	r0, r8
 8004244:	2101      	movs	r1, #1
 8004246:	f00e f84f 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800424a:	4641      	mov	r1, r8
 800424c:	4638      	mov	r0, r7
 800424e:	f00c fac7 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004252:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8004254:	ee18 0a10 	vmov	r0, s16
 8004258:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 800425a:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 800425e:	f04f 0800 	mov.w	r8, #0
 8004262:	2145      	movs	r1, #69	; 0x45
 8004264:	f7fe ff6b 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004268:	ee18 1a10 	vmov	r1, s16
 800426c:	4628      	mov	r0, r5
        color = newColor;
 800426e:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8004272:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8004276:	f00e f9cd 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800427a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800427e:	ee18 3a10 	vmov	r3, s16
 8004282:	333c      	adds	r3, #60	; 0x3c
 8004284:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004288:	4e1e      	ldr	r6, [pc, #120]	; (8004304 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 800428a:	960a      	str	r6, [sp, #40]	; 0x28
 800428c:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800428e:	ee18 0a10 	vmov	r0, s16
 8004292:	a90a      	add	r1, sp, #40	; 0x28
 8004294:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004298:	f00e fc56 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800429c:	ee18 1a10 	vmov	r1, s16
 80042a0:	4638      	mov	r0, r7
 80042a2:	f00c fa9d 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80042a6:	ee18 0a90 	vmov	r0, s17
 80042aa:	220c      	movs	r2, #12
 80042ac:	2136      	movs	r1, #54	; 0x36
 80042ae:	f7fe ff46 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80042b2:	ee18 1a90 	vmov	r1, s17
 80042b6:	4628      	mov	r0, r5
        color = newColor;
 80042b8:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 80042bc:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 80042c0:	f00e f9a8 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80042c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80042c8:	ee18 3a90 	vmov	r3, s17
 80042cc:	333c      	adds	r3, #60	; 0x3c
 80042ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042d2:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80042d4:	ee18 0a90 	vmov	r0, s17
 80042d8:	a90a      	add	r1, sp, #40	; 0x28
 80042da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80042de:	960a      	str	r6, [sp, #40]	; 0x28
 80042e0:	f00e fc32 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80042e4:	4638      	mov	r0, r7
 80042e6:	ee18 1a90 	vmov	r1, s17
 80042ea:	f00c fa79 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80042ee:	4620      	mov	r0, r4
 80042f0:	b00d      	add	sp, #52	; 0x34
 80042f2:	ecbd 8b06 	vpop	{d8-d10}
 80042f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042fa:	bf00      	nop
 80042fc:	20012e18 	.word	0x20012e18
 8004300:	0802c74a 	.word	0x0802c74a
 8004304:	0802c7c0 	.word	0x0802c7c0
 8004308:	20012e0c 	.word	0x20012e0c
 800430c:	20012e10 	.word	0x20012e10

08004310 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004310:	4770      	bx	lr

08004312 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004312:	4770      	bx	lr

08004314 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004314:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004318:	6808      	ldr	r0, [r1, #0]
 800431a:	6849      	ldr	r1, [r1, #4]
 800431c:	c303      	stmia	r3!, {r0, r1}
    }
 800431e:	4770      	bx	lr

08004320 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004320:	4770      	bx	lr

08004322 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004322:	4770      	bx	lr

08004324 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004324:	6041      	str	r1, [r0, #4]
    }
 8004326:	4770      	bx	lr

08004328 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004328:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800432a:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 800432c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004330:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004334:	8002      	strh	r2, [r0, #0]
 8004336:	8042      	strh	r2, [r0, #2]
 8004338:	8084      	strh	r4, [r0, #4]
 800433a:	80c1      	strh	r1, [r0, #6]
        }
 800433c:	bd10      	pop	{r4, pc}

0800433e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800433e:	4770      	bx	lr

08004340 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004340:	4770      	bx	lr
	...

08004344 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004344:	4b06      	ldr	r3, [pc, #24]	; (8004360 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004346:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800434a:	2300      	movs	r3, #0
 800434c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004350:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004354:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004358:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800435c:	4770      	bx	lr
 800435e:	bf00      	nop
 8004360:	08004701 	.word	0x08004701

08004364 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004364:	2301      	movs	r3, #1
 8004366:	7203      	strb	r3, [r0, #8]
    }
 8004368:	4770      	bx	lr

0800436a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800436a:	4770      	bx	lr

0800436c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800436c:	4770      	bx	lr

0800436e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800436e:	4770      	bx	lr

08004370 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004370:	4770      	bx	lr

08004372 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004372:	4770      	bx	lr

08004374 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004374:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004376:	6840      	ldr	r0, [r0, #4]
 8004378:	6803      	ldr	r3, [r0, #0]
 800437a:	3110      	adds	r1, #16
 800437c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800437e:	4718      	bx	r3

08004380 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004380:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004382:	6840      	ldr	r0, [r0, #4]
 8004384:	6803      	ldr	r3, [r0, #0]
 8004386:	3110      	adds	r1, #16
 8004388:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800438a:	4718      	bx	r3

0800438c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800438c:	4770      	bx	lr

0800438e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800438e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004390:	6840      	ldr	r0, [r0, #4]
 8004392:	6803      	ldr	r3, [r0, #0]
 8004394:	3110      	adds	r1, #16
 8004396:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004398:	4718      	bx	r3

0800439a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800439a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800439c:	6840      	ldr	r0, [r0, #4]
 800439e:	6803      	ldr	r3, [r0, #0]
 80043a0:	3110      	adds	r1, #16
 80043a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80043a4:	4718      	bx	r3

080043a6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 80043a6:	4770      	bx	lr

080043a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80043a8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80043aa:	68c2      	ldr	r2, [r0, #12]
 80043ac:	6841      	ldr	r1, [r0, #4]
 80043ae:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80043b0:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80043b2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80043b6:	07d2      	lsls	r2, r2, #31
 80043b8:	bf48      	it	mi
 80043ba:	590a      	ldrmi	r2, [r1, r4]
 80043bc:	689b      	ldr	r3, [r3, #8]
    }
 80043be:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80043c2:	bf48      	it	mi
 80043c4:	58d3      	ldrmi	r3, [r2, r3]
 80043c6:	4718      	bx	r3

080043c8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80043c8:	6843      	ldr	r3, [r0, #4]
 80043ca:	b12b      	cbz	r3, 80043d8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80043cc:	6883      	ldr	r3, [r0, #8]
 80043ce:	b92b      	cbnz	r3, 80043dc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80043d0:	68c0      	ldr	r0, [r0, #12]
 80043d2:	f000 0001 	and.w	r0, r0, #1
 80043d6:	4770      	bx	lr
 80043d8:	4618      	mov	r0, r3
 80043da:	4770      	bx	lr
 80043dc:	2001      	movs	r0, #1
    }
 80043de:	4770      	bx	lr

080043e0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80043e0:	b510      	push	{r4, lr}
 80043e2:	210c      	movs	r1, #12
 80043e4:	4604      	mov	r4, r0
 80043e6:	f025 fd0a 	bl	8029dfe <_ZdlPvj>
 80043ea:	4620      	mov	r0, r4
 80043ec:	bd10      	pop	{r4, pc}

080043ee <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80043ee:	b510      	push	{r4, lr}
 80043f0:	2110      	movs	r1, #16
 80043f2:	4604      	mov	r4, r0
 80043f4:	f025 fd03 	bl	8029dfe <_ZdlPvj>
 80043f8:	4620      	mov	r0, r4
 80043fa:	bd10      	pop	{r4, pc}

080043fc <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80043fc:	b510      	push	{r4, lr}
 80043fe:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8004402:	4604      	mov	r4, r0
 8004404:	f025 fcfb 	bl	8029dfe <_ZdlPvj>
 8004408:	4620      	mov	r0, r4
 800440a:	bd10      	pop	{r4, pc}

0800440c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 800440c:	b510      	push	{r4, lr}
 800440e:	2138      	movs	r1, #56	; 0x38
 8004410:	4604      	mov	r4, r0
 8004412:	f025 fcf4 	bl	8029dfe <_ZdlPvj>
 8004416:	4620      	mov	r0, r4
 8004418:	bd10      	pop	{r4, pc}

0800441a <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800441a:	b510      	push	{r4, lr}
 800441c:	2128      	movs	r1, #40	; 0x28
 800441e:	4604      	mov	r4, r0
 8004420:	f025 fced 	bl	8029dfe <_ZdlPvj>
 8004424:	4620      	mov	r0, r4
 8004426:	bd10      	pop	{r4, pc}

08004428 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8004428:	b510      	push	{r4, lr}
 800442a:	2138      	movs	r1, #56	; 0x38
 800442c:	4604      	mov	r4, r0
 800442e:	f025 fce6 	bl	8029dfe <_ZdlPvj>
 8004432:	4620      	mov	r0, r4
 8004434:	bd10      	pop	{r4, pc}

08004436 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004436:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8004438:	f011 fc6a 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 800443c:	6803      	ldr	r3, [r0, #0]
    }
 800443e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8004442:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004444:	4718      	bx	r3
	...

08004448 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004448:	b513      	push	{r0, r1, r4, lr}
 800444a:	4604      	mov	r4, r0
        animationCounter++;
 800444c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800444e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004450:	3001      	adds	r0, #1
 8004452:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004454:	4298      	cmp	r0, r3
        animationCounter++;
 8004456:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004458:	d905      	bls.n	8004466 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800445a:	2301      	movs	r3, #1
 800445c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800445e:	2300      	movs	r3, #0
 8004460:	72a3      	strb	r3, [r4, #10]
    }
 8004462:	b002      	add	sp, #8
 8004464:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004466:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800446a:	2100      	movs	r1, #0
 800446c:	f013 fa82 	bl	8017974 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004470:	f010 0201 	ands.w	r2, r0, #1
 8004474:	b283      	uxth	r3, r0
 8004476:	d12a      	bne.n	80044ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004478:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800447a:	4a19      	ldr	r2, [pc, #100]	; (80044e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800447c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004480:	89e3      	ldrh	r3, [r4, #14]
 8004482:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004484:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004488:	82a0      	strh	r0, [r4, #20]
 800448a:	2000      	movs	r0, #0
 800448c:	1ad2      	subs	r2, r2, r3
 800448e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8004492:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004494:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004496:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004498:	4a12      	ldr	r2, [pc, #72]	; (80044e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800449a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800449e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80044a0:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 80044a4:	691b      	ldr	r3, [r3, #16]
 80044a6:	f8ad 1000 	strh.w	r1, [sp]
 80044aa:	f8ad 2006 	strh.w	r2, [sp, #6]
 80044ae:	4669      	mov	r1, sp
 80044b0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80044b2:	7aa3      	ldrb	r3, [r4, #10]
 80044b4:	2b01      	cmp	r3, #1
 80044b6:	d1d4      	bne.n	8004462 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80044b8:	4b0b      	ldr	r3, [pc, #44]	; (80044e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80044ba:	781b      	ldrb	r3, [r3, #0]
 80044bc:	2b00      	cmp	r3, #0
 80044be:	d0d0      	beq.n	8004462 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044c0:	f011 fc26 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80044c4:	b002      	add	sp, #8
 80044c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044ca:	f011 bc27 	b.w	8015d1c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80044ce:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80044d2:	2800      	cmp	r0, #0
 80044d4:	bfd8      	it	le
 80044d6:	460a      	movle	r2, r1
 80044d8:	4413      	add	r3, r2
 80044da:	81e3      	strh	r3, [r4, #14]
 80044dc:	e7cd      	b.n	800447a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80044de:	bf00      	nop
 80044e0:	20012da8 	.word	0x20012da8
 80044e4:	20012daa 	.word	0x20012daa
 80044e8:	20012db2 	.word	0x20012db2

080044ec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80044ec:	b510      	push	{r4, lr}
 80044ee:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80044f0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80044f4:	b158      	cbz	r0, 800450e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80044f6:	6803      	ldr	r3, [r0, #0]
 80044f8:	68db      	ldr	r3, [r3, #12]
 80044fa:	4798      	blx	r3
 80044fc:	b138      	cbz	r0, 800450e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80044fe:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8004502:	6803      	ldr	r3, [r0, #0]
 8004504:	689b      	ldr	r3, [r3, #8]
 8004506:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004508:	2300      	movs	r3, #0
 800450a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800450e:	bd10      	pop	{r4, pc}

08004510 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004510:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004514:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004518:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800451a:	68a8      	ldr	r0, [r5, #8]
 800451c:	6803      	ldr	r3, [r0, #0]
 800451e:	6a1b      	ldr	r3, [r3, #32]
 8004520:	4798      	blx	r3
 8004522:	2897      	cmp	r0, #151	; 0x97
 8004524:	d805      	bhi.n	8004532 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8004526:	4b46      	ldr	r3, [pc, #280]	; (8004640 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8004528:	4a46      	ldr	r2, [pc, #280]	; (8004644 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800452a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800452c:	4846      	ldr	r0, [pc, #280]	; (8004648 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 800452e:	f026 fb4d 	bl	802abcc <__assert_func>
 8004532:	6868      	ldr	r0, [r5, #4]
 8004534:	6803      	ldr	r3, [r0, #0]
 8004536:	6a1b      	ldr	r3, [r3, #32]
 8004538:	4798      	blx	r3
 800453a:	280f      	cmp	r0, #15
 800453c:	d803      	bhi.n	8004546 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800453e:	4b43      	ldr	r3, [pc, #268]	; (800464c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8004540:	4a40      	ldr	r2, [pc, #256]	; (8004644 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004542:	21a4      	movs	r1, #164	; 0xa4
 8004544:	e7f2      	b.n	800452c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004546:	68e8      	ldr	r0, [r5, #12]
 8004548:	6803      	ldr	r3, [r0, #0]
 800454a:	6a1b      	ldr	r3, [r3, #32]
 800454c:	4798      	blx	r3
 800454e:	280b      	cmp	r0, #11
 8004550:	d803      	bhi.n	800455a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8004552:	4b3f      	ldr	r3, [pc, #252]	; (8004650 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8004554:	4a3b      	ldr	r2, [pc, #236]	; (8004644 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004556:	21a5      	movs	r1, #165	; 0xa5
 8004558:	e7e8      	b.n	800452c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800455a:	f011 fbd9 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800455e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004658 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004562:	3004      	adds	r0, #4
 8004564:	f011 fc3a 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004568:	f8d9 0000 	ldr.w	r0, [r9]
 800456c:	b110      	cbz	r0, 8004574 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800456e:	6803      	ldr	r3, [r0, #0]
 8004570:	68db      	ldr	r3, [r3, #12]
 8004572:	4798      	blx	r3
    if (*currentTrans)
 8004574:	f8d9 0000 	ldr.w	r0, [r9]
 8004578:	b110      	cbz	r0, 8004580 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800457a:	6803      	ldr	r3, [r0, #0]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	4798      	blx	r3
    if (*currentScreen)
 8004580:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800465c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004584:	f8d8 0000 	ldr.w	r0, [r8]
 8004588:	b110      	cbz	r0, 8004590 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800458a:	6803      	ldr	r3, [r0, #0]
 800458c:	695b      	ldr	r3, [r3, #20]
 800458e:	4798      	blx	r3
    if (*currentPresenter)
 8004590:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004594:	b110      	cbz	r0, 800459c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004596:	6803      	ldr	r3, [r0, #0]
 8004598:	685b      	ldr	r3, [r3, #4]
 800459a:	4798      	blx	r3
    if (*currentScreen)
 800459c:	f8d8 0000 	ldr.w	r0, [r8]
 80045a0:	b110      	cbz	r0, 80045a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80045a2:	6803      	ldr	r3, [r0, #0]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	4798      	blx	r3
    if (*currentPresenter)
 80045a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045ac:	b110      	cbz	r0, 80045b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80045ae:	6803      	ldr	r3, [r0, #0]
 80045b0:	689b      	ldr	r3, [r3, #8]
 80045b2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045b4:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80045b6:	6803      	ldr	r3, [r0, #0]
 80045b8:	2100      	movs	r1, #0
 80045ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045bc:	4798      	blx	r3
        : screenContainer(0), done(false)
 80045be:	f04f 0b00 	mov.w	fp, #0
 80045c2:	4b24      	ldr	r3, [pc, #144]	; (8004654 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80045c4:	6003      	str	r3, [r0, #0]
 80045c6:	4604      	mov	r4, r0
 80045c8:	f8c0 b004 	str.w	fp, [r0, #4]
 80045cc:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045d0:	68a8      	ldr	r0, [r5, #8]
 80045d2:	6803      	ldr	r3, [r0, #0]
 80045d4:	4659      	mov	r1, fp
 80045d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045d8:	4798      	blx	r3
 80045da:	4606      	mov	r6, r0
 80045dc:	f005 faf4 	bl	8009bc8 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045e0:	6868      	ldr	r0, [r5, #4]
 80045e2:	6803      	ldr	r3, [r0, #0]
 80045e4:	4659      	mov	r1, fp
 80045e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045e8:	4798      	blx	r3
 80045ea:	4631      	mov	r1, r6
 80045ec:	4605      	mov	r5, r0
 80045ee:	f005 fac7 	bl	8009b80 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80045f2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80045f6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045fa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045fe:	b1e5      	cbz	r5, 800463a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8004600:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004602:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004606:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004608:	f8c5 a008 	str.w	sl, [r5, #8]
 800460c:	4630      	mov	r0, r6
 800460e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004610:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004612:	4798      	blx	r3
    newPresenter->activate();
 8004614:	682b      	ldr	r3, [r5, #0]
 8004616:	4628      	mov	r0, r5
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800461c:	4621      	mov	r1, r4
 800461e:	4630      	mov	r0, r6
 8004620:	f013 f9a2 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004624:	6823      	ldr	r3, [r4, #0]
 8004626:	4620      	mov	r0, r4
 8004628:	691b      	ldr	r3, [r3, #16]
 800462a:	4798      	blx	r3
    newTransition->invalidate();
 800462c:	6823      	ldr	r3, [r4, #0]
 800462e:	695b      	ldr	r3, [r3, #20]
 8004630:	4620      	mov	r0, r4
}
 8004632:	b001      	add	sp, #4
 8004634:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004638:	4718      	bx	r3
    model->bind(newPresenter);
 800463a:	462b      	mov	r3, r5
 800463c:	e7e1      	b.n	8004602 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800463e:	bf00      	nop
 8004640:	0802c944 	.word	0x0802c944
 8004644:	0802c9d2 	.word	0x0802c9d2
 8004648:	0802cae0 	.word	0x0802cae0
 800464c:	0802cb27 	.word	0x0802cb27
 8004650:	0802cbca 	.word	0x0802cbca
 8004654:	0802dfe8 	.word	0x0802dfe8
 8004658:	20012dfc 	.word	0x20012dfc
 800465c:	20012df8 	.word	0x20012df8

08004660 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004660:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004662:	4604      	mov	r4, r0
        animationCounter++;
 8004664:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004666:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004668:	3001      	adds	r0, #1
 800466a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800466c:	4298      	cmp	r0, r3
        animationCounter++;
 800466e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004670:	d905      	bls.n	800467e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8004672:	2301      	movs	r3, #1
 8004674:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004676:	2300      	movs	r3, #0
 8004678:	72a3      	strb	r3, [r4, #10]
    }
 800467a:	b003      	add	sp, #12
 800467c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800467e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004682:	2100      	movs	r1, #0
 8004684:	f013 f976 	bl	8017974 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004688:	f010 0201 	ands.w	r2, r0, #1
 800468c:	b283      	uxth	r3, r0
 800468e:	d128      	bne.n	80046e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004690:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004692:	4b18      	ldr	r3, [pc, #96]	; (80046f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004694:	4818      	ldr	r0, [pc, #96]	; (80046f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004696:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004698:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800469a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800469c:	f9b0 0000 	ldrsh.w	r0, [r0]
 80046a0:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80046a4:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80046a6:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80046a8:	442b      	add	r3, r5
 80046aa:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80046ac:	b212      	sxth	r2, r2
 80046ae:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80046b2:	6803      	ldr	r3, [r0, #0]
 80046b4:	8322      	strh	r2, [r4, #24]
 80046b6:	f8ad 2000 	strh.w	r2, [sp]
 80046ba:	2200      	movs	r2, #0
 80046bc:	691b      	ldr	r3, [r3, #16]
 80046be:	f8ad 2002 	strh.w	r2, [sp, #2]
 80046c2:	4669      	mov	r1, sp
 80046c4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80046c6:	7aa3      	ldrb	r3, [r4, #10]
 80046c8:	2b01      	cmp	r3, #1
 80046ca:	d1d6      	bne.n	800467a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80046cc:	4b0b      	ldr	r3, [pc, #44]	; (80046fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80046ce:	781b      	ldrb	r3, [r3, #0]
 80046d0:	2b00      	cmp	r3, #0
 80046d2:	d0d2      	beq.n	800467a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80046d4:	f011 fb1c 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80046d8:	b003      	add	sp, #12
 80046da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80046de:	f011 bb1d 	b.w	8015d1c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80046e2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80046e6:	2800      	cmp	r0, #0
 80046e8:	bfd8      	it	le
 80046ea:	460a      	movle	r2, r1
 80046ec:	4413      	add	r3, r2
 80046ee:	81e3      	strh	r3, [r4, #14]
 80046f0:	e7cf      	b.n	8004692 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80046f2:	bf00      	nop
 80046f4:	20012da8 	.word	0x20012da8
 80046f8:	20012daa 	.word	0x20012daa
 80046fc:	20012db2 	.word	0x20012db2

08004700 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8004700:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004704:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004708:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800470a:	68a8      	ldr	r0, [r5, #8]
 800470c:	6803      	ldr	r3, [r0, #0]
 800470e:	6a1b      	ldr	r3, [r3, #32]
 8004710:	4798      	blx	r3
 8004712:	f241 137b 	movw	r3, #4475	; 0x117b
 8004716:	4298      	cmp	r0, r3
 8004718:	d805      	bhi.n	8004726 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 800471a:	4b46      	ldr	r3, [pc, #280]	; (8004834 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 800471c:	4a46      	ldr	r2, [pc, #280]	; (8004838 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800471e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004720:	4846      	ldr	r0, [pc, #280]	; (800483c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8004722:	f026 fa53 	bl	802abcc <__assert_func>
 8004726:	6868      	ldr	r0, [r5, #4]
 8004728:	6803      	ldr	r3, [r0, #0]
 800472a:	6a1b      	ldr	r3, [r3, #32]
 800472c:	4798      	blx	r3
 800472e:	280f      	cmp	r0, #15
 8004730:	d803      	bhi.n	800473a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8004732:	4b43      	ldr	r3, [pc, #268]	; (8004840 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8004734:	4a40      	ldr	r2, [pc, #256]	; (8004838 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004736:	21a4      	movs	r1, #164	; 0xa4
 8004738:	e7f2      	b.n	8004720 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800473a:	68e8      	ldr	r0, [r5, #12]
 800473c:	6803      	ldr	r3, [r0, #0]
 800473e:	6a1b      	ldr	r3, [r3, #32]
 8004740:	4798      	blx	r3
 8004742:	280b      	cmp	r0, #11
 8004744:	d803      	bhi.n	800474e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8004746:	4b3f      	ldr	r3, [pc, #252]	; (8004844 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004748:	4a3b      	ldr	r2, [pc, #236]	; (8004838 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800474a:	21a5      	movs	r1, #165	; 0xa5
 800474c:	e7e8      	b.n	8004720 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800474e:	f011 fadf 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004752:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800484c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8004756:	3004      	adds	r0, #4
 8004758:	f011 fb40 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800475c:	f8d9 0000 	ldr.w	r0, [r9]
 8004760:	b110      	cbz	r0, 8004768 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004762:	6803      	ldr	r3, [r0, #0]
 8004764:	68db      	ldr	r3, [r3, #12]
 8004766:	4798      	blx	r3
    if (*currentTrans)
 8004768:	f8d9 0000 	ldr.w	r0, [r9]
 800476c:	b110      	cbz	r0, 8004774 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800476e:	6803      	ldr	r3, [r0, #0]
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	4798      	blx	r3
    if (*currentScreen)
 8004774:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004850 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004778:	f8d8 0000 	ldr.w	r0, [r8]
 800477c:	b110      	cbz	r0, 8004784 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800477e:	6803      	ldr	r3, [r0, #0]
 8004780:	695b      	ldr	r3, [r3, #20]
 8004782:	4798      	blx	r3
    if (*currentPresenter)
 8004784:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004788:	b110      	cbz	r0, 8004790 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800478a:	6803      	ldr	r3, [r0, #0]
 800478c:	685b      	ldr	r3, [r3, #4]
 800478e:	4798      	blx	r3
    if (*currentScreen)
 8004790:	f8d8 0000 	ldr.w	r0, [r8]
 8004794:	b110      	cbz	r0, 800479c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004796:	6803      	ldr	r3, [r0, #0]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	4798      	blx	r3
    if (*currentPresenter)
 800479c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047a0:	b110      	cbz	r0, 80047a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80047a2:	6803      	ldr	r3, [r0, #0]
 80047a4:	689b      	ldr	r3, [r3, #8]
 80047a6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047a8:	68e8      	ldr	r0, [r5, #12]
 80047aa:	6803      	ldr	r3, [r0, #0]
 80047ac:	2100      	movs	r1, #0
 80047ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047b0:	4798      	blx	r3
 80047b2:	f04f 0b00 	mov.w	fp, #0
 80047b6:	4b24      	ldr	r3, [pc, #144]	; (8004848 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 80047b8:	6003      	str	r3, [r0, #0]
 80047ba:	4604      	mov	r4, r0
 80047bc:	f8c0 b004 	str.w	fp, [r0, #4]
 80047c0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047c4:	68a8      	ldr	r0, [r5, #8]
 80047c6:	6803      	ldr	r3, [r0, #0]
 80047c8:	4659      	mov	r1, fp
 80047ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047cc:	4798      	blx	r3
 80047ce:	4606      	mov	r6, r0
 80047d0:	f004 feb4 	bl	800953c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047d4:	6868      	ldr	r0, [r5, #4]
 80047d6:	6803      	ldr	r3, [r0, #0]
 80047d8:	4659      	mov	r1, fp
 80047da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047dc:	4798      	blx	r3
 80047de:	4631      	mov	r1, r6
 80047e0:	4605      	mov	r5, r0
 80047e2:	f004 fe85 	bl	80094f0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80047e6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80047ea:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80047ee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80047f2:	b1e5      	cbz	r5, 800482e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80047f4:	1d2b      	adds	r3, r5, #4
 80047f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047fa:	6833      	ldr	r3, [r6, #0]
 80047fc:	f8c5 a008 	str.w	sl, [r5, #8]
 8004800:	4630      	mov	r0, r6
 8004802:	68db      	ldr	r3, [r3, #12]
 8004804:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004806:	4798      	blx	r3
    newPresenter->activate();
 8004808:	682b      	ldr	r3, [r5, #0]
 800480a:	4628      	mov	r0, r5
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004810:	4621      	mov	r1, r4
 8004812:	4630      	mov	r0, r6
 8004814:	f013 f8a8 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004818:	6823      	ldr	r3, [r4, #0]
 800481a:	4620      	mov	r0, r4
 800481c:	691b      	ldr	r3, [r3, #16]
 800481e:	4798      	blx	r3
    newTransition->invalidate();
 8004820:	6823      	ldr	r3, [r4, #0]
 8004822:	695b      	ldr	r3, [r3, #20]
 8004824:	4620      	mov	r0, r4
}
 8004826:	b001      	add	sp, #4
 8004828:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800482c:	4718      	bx	r3
    model->bind(newPresenter);
 800482e:	462b      	mov	r3, r5
 8004830:	e7e1      	b.n	80047f6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8004832:	bf00      	nop
 8004834:	0802c944 	.word	0x0802c944
 8004838:	0802cc6d 	.word	0x0802cc6d
 800483c:	0802cae0 	.word	0x0802cae0
 8004840:	0802cb27 	.word	0x0802cb27
 8004844:	0802cbca 	.word	0x0802cbca
 8004848:	0802dfe8 	.word	0x0802dfe8
 800484c:	20012dfc 	.word	0x20012dfc
 8004850:	20012df8 	.word	0x20012df8

08004854 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004854:	4b04      	ldr	r3, [pc, #16]	; (8004868 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800485c:	b10a      	cbz	r2, 8004862 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800485e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004860:	b900      	cbnz	r0, 8004864 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8004862:	6898      	ldr	r0, [r3, #8]
    }
 8004864:	4770      	bx	lr
 8004866:	bf00      	nop
 8004868:	20012db4 	.word	0x20012db4

0800486c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800486c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800486e:	4604      	mov	r4, r0
 8004870:	4617      	mov	r7, r2
 8004872:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004874:	f011 fb80 	bl	8015f78 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004878:	4b10      	ldr	r3, [pc, #64]	; (80048bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800487a:	601c      	str	r4, [r3, #0]
      model(m)
 800487c:	4b10      	ldr	r3, [pc, #64]	; (80048c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800487e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004880:	4b10      	ldr	r3, [pc, #64]	; (80048c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8004882:	2500      	movs	r5, #0
 8004884:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004888:	4b0f      	ldr	r3, [pc, #60]	; (80048c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800488a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800488e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004890:	6803      	ldr	r3, [r0, #0]
 8004892:	2101      	movs	r1, #1
 8004894:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004896:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800489a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800489e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80048a0:	4628      	mov	r0, r5
 80048a2:	f004 fbf3 	bl	800908c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80048a6:	f7ff ffd5 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 80048aa:	f01a ff2a 	bl	801f702 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80048ae:	f7ff ffd1 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 80048b2:	f01a ffa1 	bl	801f7f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80048b6:	4620      	mov	r0, r4
 80048b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80048ba:	bf00      	nop
 80048bc:	20012e08 	.word	0x20012e08
 80048c0:	0802df94 	.word	0x0802df94
 80048c4:	0802df7c 	.word	0x0802df7c
 80048c8:	20012db4 	.word	0x20012db4

080048cc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80048cc:	4b06      	ldr	r3, [pc, #24]	; (80048e8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80048ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048d2:	2300      	movs	r3, #0
 80048d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048e4:	4770      	bx	lr
 80048e6:	bf00      	nop
 80048e8:	08004701 	.word	0x08004701

080048ec <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80048ec:	4b06      	ldr	r3, [pc, #24]	; (8004908 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80048ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048f2:	2300      	movs	r3, #0
 80048f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004900:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004904:	4770      	bx	lr
 8004906:	bf00      	nop
 8004908:	08004f11 	.word	0x08004f11

0800490c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 800490c:	4b06      	ldr	r3, [pc, #24]	; (8004928 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800490e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004912:	2300      	movs	r3, #0
 8004914:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004918:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800491c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004920:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004924:	4770      	bx	lr
 8004926:	bf00      	nop
 8004928:	08005d35 	.word	0x08005d35

0800492c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 800492c:	4b06      	ldr	r3, [pc, #24]	; (8004948 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 800492e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004932:	2300      	movs	r3, #0
 8004934:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004938:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800493c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004940:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004944:	4770      	bx	lr
 8004946:	bf00      	nop
 8004948:	08004dd1 	.word	0x08004dd1

0800494c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 800494c:	4b06      	ldr	r3, [pc, #24]	; (8004968 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800494e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004952:	2300      	movs	r3, #0
 8004954:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004958:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800495c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004960:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004964:	4770      	bx	lr
 8004966:	bf00      	nop
 8004968:	08005bf5 	.word	0x08005bf5

0800496c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 800496c:	4b06      	ldr	r3, [pc, #24]	; (8004988 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800496e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004972:	2300      	movs	r3, #0
 8004974:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004978:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800497c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004980:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004984:	4770      	bx	lr
 8004986:	bf00      	nop
 8004988:	08005ab5 	.word	0x08005ab5

0800498c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800498c:	4b06      	ldr	r3, [pc, #24]	; (80049a8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800498e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004992:	2300      	movs	r3, #0
 8004994:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004998:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800499c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049a4:	4770      	bx	lr
 80049a6:	bf00      	nop
 80049a8:	08005975 	.word	0x08005975

080049ac <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80049ac:	4b06      	ldr	r3, [pc, #24]	; (80049c8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80049ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049b2:	2300      	movs	r3, #0
 80049b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049c4:	4770      	bx	lr
 80049c6:	bf00      	nop
 80049c8:	08005835 	.word	0x08005835

080049cc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80049cc:	4b06      	ldr	r3, [pc, #24]	; (80049e8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80049ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049d2:	2300      	movs	r3, #0
 80049d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049e4:	4770      	bx	lr
 80049e6:	bf00      	nop
 80049e8:	08004c91 	.word	0x08004c91

080049ec <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80049ec:	4b06      	ldr	r3, [pc, #24]	; (8004a08 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80049ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049f2:	2300      	movs	r3, #0
 80049f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a00:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a04:	4770      	bx	lr
 8004a06:	bf00      	nop
 8004a08:	080056f5 	.word	0x080056f5

08004a0c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004a0c:	4b06      	ldr	r3, [pc, #24]	; (8004a28 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004a0e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a12:	2300      	movs	r3, #0
 8004a14:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a18:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a1c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a20:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a24:	4770      	bx	lr
 8004a26:	bf00      	nop
 8004a28:	080055b5 	.word	0x080055b5

08004a2c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8004a2c:	4b06      	ldr	r3, [pc, #24]	; (8004a48 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8004a2e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a32:	2300      	movs	r3, #0
 8004a34:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a38:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a3c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a40:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a44:	4770      	bx	lr
 8004a46:	bf00      	nop
 8004a48:	08005475 	.word	0x08005475

08004a4c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8004a4c:	4b06      	ldr	r3, [pc, #24]	; (8004a68 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8004a4e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a52:	2300      	movs	r3, #0
 8004a54:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a58:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a5c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a60:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a64:	4770      	bx	lr
 8004a66:	bf00      	nop
 8004a68:	08004b51 	.word	0x08004b51

08004a6c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004a6c:	4b06      	ldr	r3, [pc, #24]	; (8004a88 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004a6e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a72:	2300      	movs	r3, #0
 8004a74:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a78:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a7c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a80:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a84:	4770      	bx	lr
 8004a86:	bf00      	nop
 8004a88:	08005335 	.word	0x08005335

08004a8c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8004a8c:	4b06      	ldr	r3, [pc, #24]	; (8004aa8 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8004a8e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a92:	2300      	movs	r3, #0
 8004a94:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a98:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a9c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004aa0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004aa4:	4770      	bx	lr
 8004aa6:	bf00      	nop
 8004aa8:	080051f5 	.word	0x080051f5

08004aac <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004aac:	4b06      	ldr	r3, [pc, #24]	; (8004ac8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004aae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ab2:	2300      	movs	r3, #0
 8004ab4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ab8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004abc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ac0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ac4:	4770      	bx	lr
 8004ac6:	bf00      	nop
 8004ac8:	080050b5 	.word	0x080050b5

08004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004acc:	4b06      	ldr	r3, [pc, #24]	; (8004ae8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004ace:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ad2:	2300      	movs	r3, #0
 8004ad4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ad8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004adc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004ae0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ae4:	4770      	bx	lr
 8004ae6:	bf00      	nop
 8004ae8:	08004511 	.word	0x08004511

08004aec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004aec:	6803      	ldr	r3, [r0, #0]
 8004aee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004af0:	4718      	bx	r3
	...

08004af4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004af4:	4b12      	ldr	r3, [pc, #72]	; (8004b40 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004af6:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004af8:	6003      	str	r3, [r0, #0]
 8004afa:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004afe:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004b00:	4b10      	ldr	r3, [pc, #64]	; (8004b44 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004b02:	7241      	strb	r1, [r0, #9]
 8004b04:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b06:	4910      	ldr	r1, [pc, #64]	; (8004b48 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004b08:	4b10      	ldr	r3, [pc, #64]	; (8004b4c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b0a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004b0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004b12:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004b14:	2200      	movs	r2, #0
 8004b16:	6042      	str	r2, [r0, #4]
 8004b18:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004b1a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004b1c:	81c2      	strh	r2, [r0, #14]
          solid()
 8004b1e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004b22:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004b26:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004b2a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b2e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b30:	9100      	str	r1, [sp, #0]
 8004b32:	3010      	adds	r0, #16
 8004b34:	4611      	mov	r1, r2
 8004b36:	f7fe fb0f 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004b3a:	4620      	mov	r0, r4
 8004b3c:	b002      	add	sp, #8
 8004b3e:	bd10      	pop	{r4, pc}
 8004b40:	0802e030 	.word	0x0802e030
 8004b44:	0802df14 	.word	0x0802df14
 8004b48:	20012daa 	.word	0x20012daa
 8004b4c:	20012da8 	.word	0x20012da8

08004b50 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8004b50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b54:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b5a:	68a0      	ldr	r0, [r4, #8]
 8004b5c:	6803      	ldr	r3, [r0, #0]
 8004b5e:	6a1b      	ldr	r3, [r3, #32]
 8004b60:	4798      	blx	r3
 8004b62:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b66:	d205      	bcs.n	8004b74 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004b68:	4b42      	ldr	r3, [pc, #264]	; (8004c74 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8004b6a:	4a43      	ldr	r2, [pc, #268]	; (8004c78 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004b6c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b6e:	4843      	ldr	r0, [pc, #268]	; (8004c7c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8004b70:	f026 f82c 	bl	802abcc <__assert_func>
 8004b74:	6860      	ldr	r0, [r4, #4]
 8004b76:	6803      	ldr	r3, [r0, #0]
 8004b78:	6a1b      	ldr	r3, [r3, #32]
 8004b7a:	4798      	blx	r3
 8004b7c:	280f      	cmp	r0, #15
 8004b7e:	d803      	bhi.n	8004b88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8004b80:	4b3f      	ldr	r3, [pc, #252]	; (8004c80 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8004b82:	4a3d      	ldr	r2, [pc, #244]	; (8004c78 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004b84:	21a4      	movs	r1, #164	; 0xa4
 8004b86:	e7f2      	b.n	8004b6e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b88:	68e0      	ldr	r0, [r4, #12]
 8004b8a:	6803      	ldr	r3, [r0, #0]
 8004b8c:	6a1b      	ldr	r3, [r3, #32]
 8004b8e:	4798      	blx	r3
 8004b90:	2837      	cmp	r0, #55	; 0x37
 8004b92:	d803      	bhi.n	8004b9c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8004b94:	4b3b      	ldr	r3, [pc, #236]	; (8004c84 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8004b96:	4a38      	ldr	r2, [pc, #224]	; (8004c78 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004b98:	21a5      	movs	r1, #165	; 0xa5
 8004b9a:	e7e8      	b.n	8004b6e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b9c:	f011 f8b8 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ba0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8004ba4:	3004      	adds	r0, #4
 8004ba6:	f011 f919 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004baa:	f8d9 0000 	ldr.w	r0, [r9]
 8004bae:	b110      	cbz	r0, 8004bb6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004bb0:	6803      	ldr	r3, [r0, #0]
 8004bb2:	68db      	ldr	r3, [r3, #12]
 8004bb4:	4798      	blx	r3
    if (*currentTrans)
 8004bb6:	f8d9 0000 	ldr.w	r0, [r9]
 8004bba:	b110      	cbz	r0, 8004bc2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	4798      	blx	r3
    if (*currentScreen)
 8004bc2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c8c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8004bc6:	f8d8 0000 	ldr.w	r0, [r8]
 8004bca:	b110      	cbz	r0, 8004bd2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004bcc:	6803      	ldr	r3, [r0, #0]
 8004bce:	695b      	ldr	r3, [r3, #20]
 8004bd0:	4798      	blx	r3
    if (*currentPresenter)
 8004bd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004bd6:	b110      	cbz	r0, 8004bde <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004bd8:	6803      	ldr	r3, [r0, #0]
 8004bda:	685b      	ldr	r3, [r3, #4]
 8004bdc:	4798      	blx	r3
    if (*currentScreen)
 8004bde:	f8d8 0000 	ldr.w	r0, [r8]
 8004be2:	b110      	cbz	r0, 8004bea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004be4:	6803      	ldr	r3, [r0, #0]
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	4798      	blx	r3
    if (*currentPresenter)
 8004bea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004bee:	b110      	cbz	r0, 8004bf6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004bf0:	6803      	ldr	r3, [r0, #0]
 8004bf2:	689b      	ldr	r3, [r3, #8]
 8004bf4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004bf6:	68e0      	ldr	r0, [r4, #12]
 8004bf8:	2100      	movs	r1, #0
 8004bfa:	f7ff ff77 	bl	8004aec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004bfe:	2114      	movs	r1, #20
 8004c00:	4605      	mov	r5, r0
 8004c02:	f7ff ff77 	bl	8004af4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c06:	68a0      	ldr	r0, [r4, #8]
 8004c08:	6803      	ldr	r3, [r0, #0]
 8004c0a:	2100      	movs	r1, #0
 8004c0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c0e:	4798      	blx	r3
 8004c10:	4606      	mov	r6, r0
 8004c12:	f004 fad9 	bl	80091c8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c16:	6860      	ldr	r0, [r4, #4]
 8004c18:	6803      	ldr	r3, [r0, #0]
 8004c1a:	2100      	movs	r1, #0
 8004c1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c1e:	4798      	blx	r3
 8004c20:	4631      	mov	r1, r6
 8004c22:	4604      	mov	r4, r0
 8004c24:	f004 faaa 	bl	800917c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004c28:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c2c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c30:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c34:	b1dc      	cbz	r4, 8004c6e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8004c36:	1d23      	adds	r3, r4, #4
 8004c38:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c3c:	6833      	ldr	r3, [r6, #0]
 8004c3e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c42:	4630      	mov	r0, r6
 8004c44:	68db      	ldr	r3, [r3, #12]
 8004c46:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c48:	4798      	blx	r3
    newPresenter->activate();
 8004c4a:	6823      	ldr	r3, [r4, #0]
 8004c4c:	4620      	mov	r0, r4
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c52:	4629      	mov	r1, r5
 8004c54:	4630      	mov	r0, r6
 8004c56:	f012 fe87 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c5a:	682b      	ldr	r3, [r5, #0]
 8004c5c:	4628      	mov	r0, r5
 8004c5e:	691b      	ldr	r3, [r3, #16]
 8004c60:	4798      	blx	r3
    newTransition->invalidate();
 8004c62:	682b      	ldr	r3, [r5, #0]
 8004c64:	4628      	mov	r0, r5
 8004c66:	695b      	ldr	r3, [r3, #20]
}
 8004c68:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c6c:	4718      	bx	r3
    model->bind(newPresenter);
 8004c6e:	4623      	mov	r3, r4
 8004c70:	e7e2      	b.n	8004c38 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8004c72:	bf00      	nop
 8004c74:	0802c944 	.word	0x0802c944
 8004c78:	0802cd75 	.word	0x0802cd75
 8004c7c:	0802cae0 	.word	0x0802cae0
 8004c80:	0802cb27 	.word	0x0802cb27
 8004c84:	0802cbca 	.word	0x0802cbca
 8004c88:	20012dfc 	.word	0x20012dfc
 8004c8c:	20012df8 	.word	0x20012df8

08004c90 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c94:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c98:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c9a:	68a0      	ldr	r0, [r4, #8]
 8004c9c:	6803      	ldr	r3, [r0, #0]
 8004c9e:	6a1b      	ldr	r3, [r3, #32]
 8004ca0:	4798      	blx	r3
 8004ca2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004ca6:	d205      	bcs.n	8004cb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004ca8:	4b42      	ldr	r3, [pc, #264]	; (8004db4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004caa:	4a43      	ldr	r2, [pc, #268]	; (8004db8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004cac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cae:	4843      	ldr	r0, [pc, #268]	; (8004dbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004cb0:	f025 ff8c 	bl	802abcc <__assert_func>
 8004cb4:	6860      	ldr	r0, [r4, #4]
 8004cb6:	6803      	ldr	r3, [r0, #0]
 8004cb8:	6a1b      	ldr	r3, [r3, #32]
 8004cba:	4798      	blx	r3
 8004cbc:	280f      	cmp	r0, #15
 8004cbe:	d803      	bhi.n	8004cc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004cc0:	4b3f      	ldr	r3, [pc, #252]	; (8004dc0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004cc2:	4a3d      	ldr	r2, [pc, #244]	; (8004db8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004cc4:	21a4      	movs	r1, #164	; 0xa4
 8004cc6:	e7f2      	b.n	8004cae <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004cc8:	68e0      	ldr	r0, [r4, #12]
 8004cca:	6803      	ldr	r3, [r0, #0]
 8004ccc:	6a1b      	ldr	r3, [r3, #32]
 8004cce:	4798      	blx	r3
 8004cd0:	2837      	cmp	r0, #55	; 0x37
 8004cd2:	d803      	bhi.n	8004cdc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004cd4:	4b3b      	ldr	r3, [pc, #236]	; (8004dc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004cd6:	4a38      	ldr	r2, [pc, #224]	; (8004db8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004cd8:	21a5      	movs	r1, #165	; 0xa5
 8004cda:	e7e8      	b.n	8004cae <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004cdc:	f011 f818 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ce0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004dc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004ce4:	3004      	adds	r0, #4
 8004ce6:	f011 f879 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004cea:	f8d9 0000 	ldr.w	r0, [r9]
 8004cee:	b110      	cbz	r0, 8004cf6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004cf0:	6803      	ldr	r3, [r0, #0]
 8004cf2:	68db      	ldr	r3, [r3, #12]
 8004cf4:	4798      	blx	r3
    if (*currentTrans)
 8004cf6:	f8d9 0000 	ldr.w	r0, [r9]
 8004cfa:	b110      	cbz	r0, 8004d02 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004cfc:	6803      	ldr	r3, [r0, #0]
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	4798      	blx	r3
    if (*currentScreen)
 8004d02:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004dcc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004d06:	f8d8 0000 	ldr.w	r0, [r8]
 8004d0a:	b110      	cbz	r0, 8004d12 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d0c:	6803      	ldr	r3, [r0, #0]
 8004d0e:	695b      	ldr	r3, [r3, #20]
 8004d10:	4798      	blx	r3
    if (*currentPresenter)
 8004d12:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d16:	b110      	cbz	r0, 8004d1e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d18:	6803      	ldr	r3, [r0, #0]
 8004d1a:	685b      	ldr	r3, [r3, #4]
 8004d1c:	4798      	blx	r3
    if (*currentScreen)
 8004d1e:	f8d8 0000 	ldr.w	r0, [r8]
 8004d22:	b110      	cbz	r0, 8004d2a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d24:	6803      	ldr	r3, [r0, #0]
 8004d26:	681b      	ldr	r3, [r3, #0]
 8004d28:	4798      	blx	r3
    if (*currentPresenter)
 8004d2a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d2e:	b110      	cbz	r0, 8004d36 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d30:	6803      	ldr	r3, [r0, #0]
 8004d32:	689b      	ldr	r3, [r3, #8]
 8004d34:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d36:	68e0      	ldr	r0, [r4, #12]
 8004d38:	2100      	movs	r1, #0
 8004d3a:	f7ff fed7 	bl	8004aec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004d3e:	2114      	movs	r1, #20
 8004d40:	4605      	mov	r5, r0
 8004d42:	f7ff fed7 	bl	8004af4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d46:	68a0      	ldr	r0, [r4, #8]
 8004d48:	6803      	ldr	r3, [r0, #0]
 8004d4a:	2100      	movs	r1, #0
 8004d4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d4e:	4798      	blx	r3
 8004d50:	4606      	mov	r6, r0
 8004d52:	f004 fcb3 	bl	80096bc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d56:	6860      	ldr	r0, [r4, #4]
 8004d58:	6803      	ldr	r3, [r0, #0]
 8004d5a:	2100      	movs	r1, #0
 8004d5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d5e:	4798      	blx	r3
 8004d60:	4631      	mov	r1, r6
 8004d62:	4604      	mov	r4, r0
 8004d64:	f004 fc84 	bl	8009670 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004d68:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d6c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d70:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d74:	b1dc      	cbz	r4, 8004dae <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004d76:	1d23      	adds	r3, r4, #4
 8004d78:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d7c:	6833      	ldr	r3, [r6, #0]
 8004d7e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d82:	4630      	mov	r0, r6
 8004d84:	68db      	ldr	r3, [r3, #12]
 8004d86:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d88:	4798      	blx	r3
    newPresenter->activate();
 8004d8a:	6823      	ldr	r3, [r4, #0]
 8004d8c:	4620      	mov	r0, r4
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d92:	4629      	mov	r1, r5
 8004d94:	4630      	mov	r0, r6
 8004d96:	f012 fde7 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d9a:	682b      	ldr	r3, [r5, #0]
 8004d9c:	4628      	mov	r0, r5
 8004d9e:	691b      	ldr	r3, [r3, #16]
 8004da0:	4798      	blx	r3
    newTransition->invalidate();
 8004da2:	682b      	ldr	r3, [r5, #0]
 8004da4:	4628      	mov	r0, r5
 8004da6:	695b      	ldr	r3, [r3, #20]
}
 8004da8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004dac:	4718      	bx	r3
    model->bind(newPresenter);
 8004dae:	4623      	mov	r3, r4
 8004db0:	e7e2      	b.n	8004d78 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004db2:	bf00      	nop
 8004db4:	0802c944 	.word	0x0802c944
 8004db8:	0802ce93 	.word	0x0802ce93
 8004dbc:	0802cae0 	.word	0x0802cae0
 8004dc0:	0802cb27 	.word	0x0802cb27
 8004dc4:	0802cbca 	.word	0x0802cbca
 8004dc8:	20012dfc 	.word	0x20012dfc
 8004dcc:	20012df8 	.word	0x20012df8

08004dd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004dd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004dd4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004dd8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004dda:	68a0      	ldr	r0, [r4, #8]
 8004ddc:	6803      	ldr	r3, [r0, #0]
 8004dde:	6a1b      	ldr	r3, [r3, #32]
 8004de0:	4798      	blx	r3
 8004de2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004de6:	d205      	bcs.n	8004df4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004de8:	4b42      	ldr	r3, [pc, #264]	; (8004ef4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004dea:	4a43      	ldr	r2, [pc, #268]	; (8004ef8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004dec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004dee:	4843      	ldr	r0, [pc, #268]	; (8004efc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004df0:	f025 feec 	bl	802abcc <__assert_func>
 8004df4:	6860      	ldr	r0, [r4, #4]
 8004df6:	6803      	ldr	r3, [r0, #0]
 8004df8:	6a1b      	ldr	r3, [r3, #32]
 8004dfa:	4798      	blx	r3
 8004dfc:	280f      	cmp	r0, #15
 8004dfe:	d803      	bhi.n	8004e08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004e00:	4b3f      	ldr	r3, [pc, #252]	; (8004f00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004e02:	4a3d      	ldr	r2, [pc, #244]	; (8004ef8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004e04:	21a4      	movs	r1, #164	; 0xa4
 8004e06:	e7f2      	b.n	8004dee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e08:	68e0      	ldr	r0, [r4, #12]
 8004e0a:	6803      	ldr	r3, [r0, #0]
 8004e0c:	6a1b      	ldr	r3, [r3, #32]
 8004e0e:	4798      	blx	r3
 8004e10:	2837      	cmp	r0, #55	; 0x37
 8004e12:	d803      	bhi.n	8004e1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004e14:	4b3b      	ldr	r3, [pc, #236]	; (8004f04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004e16:	4a38      	ldr	r2, [pc, #224]	; (8004ef8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004e18:	21a5      	movs	r1, #165	; 0xa5
 8004e1a:	e7e8      	b.n	8004dee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004e1c:	f010 ff78 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e20:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004e24:	3004      	adds	r0, #4
 8004e26:	f010 ffd9 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e2a:	f8d9 0000 	ldr.w	r0, [r9]
 8004e2e:	b110      	cbz	r0, 8004e36 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e30:	6803      	ldr	r3, [r0, #0]
 8004e32:	68db      	ldr	r3, [r3, #12]
 8004e34:	4798      	blx	r3
    if (*currentTrans)
 8004e36:	f8d9 0000 	ldr.w	r0, [r9]
 8004e3a:	b110      	cbz	r0, 8004e42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004e3c:	6803      	ldr	r3, [r0, #0]
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	4798      	blx	r3
    if (*currentScreen)
 8004e42:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004f0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004e46:	f8d8 0000 	ldr.w	r0, [r8]
 8004e4a:	b110      	cbz	r0, 8004e52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004e4c:	6803      	ldr	r3, [r0, #0]
 8004e4e:	695b      	ldr	r3, [r3, #20]
 8004e50:	4798      	blx	r3
    if (*currentPresenter)
 8004e52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e56:	b110      	cbz	r0, 8004e5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e58:	6803      	ldr	r3, [r0, #0]
 8004e5a:	685b      	ldr	r3, [r3, #4]
 8004e5c:	4798      	blx	r3
    if (*currentScreen)
 8004e5e:	f8d8 0000 	ldr.w	r0, [r8]
 8004e62:	b110      	cbz	r0, 8004e6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e64:	6803      	ldr	r3, [r0, #0]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	4798      	blx	r3
    if (*currentPresenter)
 8004e6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e6e:	b110      	cbz	r0, 8004e76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e70:	6803      	ldr	r3, [r0, #0]
 8004e72:	689b      	ldr	r3, [r3, #8]
 8004e74:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e76:	68e0      	ldr	r0, [r4, #12]
 8004e78:	2100      	movs	r1, #0
 8004e7a:	f7ff fe37 	bl	8004aec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004e7e:	2114      	movs	r1, #20
 8004e80:	4605      	mov	r5, r0
 8004e82:	f7ff fe37 	bl	8004af4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e86:	68a0      	ldr	r0, [r4, #8]
 8004e88:	6803      	ldr	r3, [r0, #0]
 8004e8a:	2100      	movs	r1, #0
 8004e8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e8e:	4798      	blx	r3
 8004e90:	4606      	mov	r6, r0
 8004e92:	f004 fbb3 	bl	80095fc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e96:	6860      	ldr	r0, [r4, #4]
 8004e98:	6803      	ldr	r3, [r0, #0]
 8004e9a:	2100      	movs	r1, #0
 8004e9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e9e:	4798      	blx	r3
 8004ea0:	4631      	mov	r1, r6
 8004ea2:	4604      	mov	r4, r0
 8004ea4:	f004 fb84 	bl	80095b0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004ea8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004eac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004eb0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004eb4:	b1dc      	cbz	r4, 8004eee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004eb6:	1d23      	adds	r3, r4, #4
 8004eb8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ebc:	6833      	ldr	r3, [r6, #0]
 8004ebe:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ec2:	4630      	mov	r0, r6
 8004ec4:	68db      	ldr	r3, [r3, #12]
 8004ec6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ec8:	4798      	blx	r3
    newPresenter->activate();
 8004eca:	6823      	ldr	r3, [r4, #0]
 8004ecc:	4620      	mov	r0, r4
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ed2:	4629      	mov	r1, r5
 8004ed4:	4630      	mov	r0, r6
 8004ed6:	f012 fd47 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004eda:	682b      	ldr	r3, [r5, #0]
 8004edc:	4628      	mov	r0, r5
 8004ede:	691b      	ldr	r3, [r3, #16]
 8004ee0:	4798      	blx	r3
    newTransition->invalidate();
 8004ee2:	682b      	ldr	r3, [r5, #0]
 8004ee4:	4628      	mov	r0, r5
 8004ee6:	695b      	ldr	r3, [r3, #20]
}
 8004ee8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004eec:	4718      	bx	r3
    model->bind(newPresenter);
 8004eee:	4623      	mov	r3, r4
 8004ef0:	e7e2      	b.n	8004eb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004ef2:	bf00      	nop
 8004ef4:	0802c944 	.word	0x0802c944
 8004ef8:	0802cfc3 	.word	0x0802cfc3
 8004efc:	0802cae0 	.word	0x0802cae0
 8004f00:	0802cb27 	.word	0x0802cb27
 8004f04:	0802cbca 	.word	0x0802cbca
 8004f08:	20012dfc 	.word	0x20012dfc
 8004f0c:	20012df8 	.word	0x20012df8

08004f10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f14:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004f18:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f1a:	68a0      	ldr	r0, [r4, #8]
 8004f1c:	6803      	ldr	r3, [r0, #0]
 8004f1e:	6a1b      	ldr	r3, [r3, #32]
 8004f20:	4798      	blx	r3
 8004f22:	f241 137b 	movw	r3, #4475	; 0x117b
 8004f26:	4298      	cmp	r0, r3
 8004f28:	d805      	bhi.n	8004f36 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004f2a:	4b42      	ldr	r3, [pc, #264]	; (8005034 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004f2c:	4a42      	ldr	r2, [pc, #264]	; (8005038 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004f2e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f30:	4842      	ldr	r0, [pc, #264]	; (800503c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004f32:	f025 fe4b 	bl	802abcc <__assert_func>
 8004f36:	6860      	ldr	r0, [r4, #4]
 8004f38:	6803      	ldr	r3, [r0, #0]
 8004f3a:	6a1b      	ldr	r3, [r3, #32]
 8004f3c:	4798      	blx	r3
 8004f3e:	280f      	cmp	r0, #15
 8004f40:	d803      	bhi.n	8004f4a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004f42:	4b3f      	ldr	r3, [pc, #252]	; (8005040 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004f44:	4a3c      	ldr	r2, [pc, #240]	; (8005038 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004f46:	21a4      	movs	r1, #164	; 0xa4
 8004f48:	e7f2      	b.n	8004f30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f4a:	68e0      	ldr	r0, [r4, #12]
 8004f4c:	6803      	ldr	r3, [r0, #0]
 8004f4e:	6a1b      	ldr	r3, [r3, #32]
 8004f50:	4798      	blx	r3
 8004f52:	2837      	cmp	r0, #55	; 0x37
 8004f54:	d803      	bhi.n	8004f5e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004f56:	4b3b      	ldr	r3, [pc, #236]	; (8005044 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004f58:	4a37      	ldr	r2, [pc, #220]	; (8005038 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004f5a:	21a5      	movs	r1, #165	; 0xa5
 8004f5c:	e7e8      	b.n	8004f30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f5e:	f010 fed7 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f62:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005048 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004f66:	3004      	adds	r0, #4
 8004f68:	f010 ff38 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f6c:	f8d9 0000 	ldr.w	r0, [r9]
 8004f70:	b110      	cbz	r0, 8004f78 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f72:	6803      	ldr	r3, [r0, #0]
 8004f74:	68db      	ldr	r3, [r3, #12]
 8004f76:	4798      	blx	r3
    if (*currentTrans)
 8004f78:	f8d9 0000 	ldr.w	r0, [r9]
 8004f7c:	b110      	cbz	r0, 8004f84 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f7e:	6803      	ldr	r3, [r0, #0]
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	4798      	blx	r3
    if (*currentScreen)
 8004f84:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800504c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004f88:	f8d8 0000 	ldr.w	r0, [r8]
 8004f8c:	b110      	cbz	r0, 8004f94 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f8e:	6803      	ldr	r3, [r0, #0]
 8004f90:	695b      	ldr	r3, [r3, #20]
 8004f92:	4798      	blx	r3
    if (*currentPresenter)
 8004f94:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f98:	b110      	cbz	r0, 8004fa0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f9a:	6803      	ldr	r3, [r0, #0]
 8004f9c:	685b      	ldr	r3, [r3, #4]
 8004f9e:	4798      	blx	r3
    if (*currentScreen)
 8004fa0:	f8d8 0000 	ldr.w	r0, [r8]
 8004fa4:	b110      	cbz	r0, 8004fac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004fa6:	6803      	ldr	r3, [r0, #0]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	4798      	blx	r3
    if (*currentPresenter)
 8004fac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004fb0:	b110      	cbz	r0, 8004fb8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004fb2:	6803      	ldr	r3, [r0, #0]
 8004fb4:	689b      	ldr	r3, [r3, #8]
 8004fb6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004fb8:	68e0      	ldr	r0, [r4, #12]
 8004fba:	2100      	movs	r1, #0
 8004fbc:	f7ff fd96 	bl	8004aec <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004fc0:	2114      	movs	r1, #20
 8004fc2:	4605      	mov	r5, r0
 8004fc4:	f7ff fd96 	bl	8004af4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004fc8:	68a0      	ldr	r0, [r4, #8]
 8004fca:	6803      	ldr	r3, [r0, #0]
 8004fcc:	2100      	movs	r1, #0
 8004fce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fd0:	4798      	blx	r3
 8004fd2:	4606      	mov	r6, r0
 8004fd4:	f004 fab2 	bl	800953c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004fd8:	6860      	ldr	r0, [r4, #4]
 8004fda:	6803      	ldr	r3, [r0, #0]
 8004fdc:	2100      	movs	r1, #0
 8004fde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fe0:	4798      	blx	r3
 8004fe2:	4631      	mov	r1, r6
 8004fe4:	4604      	mov	r4, r0
 8004fe6:	f004 fa83 	bl	80094f0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004fea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004fee:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ff2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ff6:	b1dc      	cbz	r4, 8005030 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004ff8:	1d23      	adds	r3, r4, #4
 8004ffa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ffe:	6833      	ldr	r3, [r6, #0]
 8005000:	f8c4 a008 	str.w	sl, [r4, #8]
 8005004:	4630      	mov	r0, r6
 8005006:	68db      	ldr	r3, [r3, #12]
 8005008:	63f4      	str	r4, [r6, #60]	; 0x3c
 800500a:	4798      	blx	r3
    newPresenter->activate();
 800500c:	6823      	ldr	r3, [r4, #0]
 800500e:	4620      	mov	r0, r4
 8005010:	681b      	ldr	r3, [r3, #0]
 8005012:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005014:	4629      	mov	r1, r5
 8005016:	4630      	mov	r0, r6
 8005018:	f012 fca6 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800501c:	682b      	ldr	r3, [r5, #0]
 800501e:	4628      	mov	r0, r5
 8005020:	691b      	ldr	r3, [r3, #16]
 8005022:	4798      	blx	r3
    newTransition->invalidate();
 8005024:	682b      	ldr	r3, [r5, #0]
 8005026:	4628      	mov	r0, r5
 8005028:	695b      	ldr	r3, [r3, #20]
}
 800502a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800502e:	4718      	bx	r3
    model->bind(newPresenter);
 8005030:	4623      	mov	r3, r4
 8005032:	e7e2      	b.n	8004ffa <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8005034:	0802c944 	.word	0x0802c944
 8005038:	0802d0e1 	.word	0x0802d0e1
 800503c:	0802cae0 	.word	0x0802cae0
 8005040:	0802cb27 	.word	0x0802cb27
 8005044:	0802cbca 	.word	0x0802cbca
 8005048:	20012dfc 	.word	0x20012dfc
 800504c:	20012df8 	.word	0x20012df8

08005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005050:	6803      	ldr	r3, [r0, #0]
 8005052:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005054:	4718      	bx	r3
	...

08005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005058:	4b12      	ldr	r3, [pc, #72]	; (80050a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800505a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800505c:	6003      	str	r3, [r0, #0]
 800505e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005062:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005064:	4b10      	ldr	r3, [pc, #64]	; (80050a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005066:	7241      	strb	r1, [r0, #9]
 8005068:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800506a:	4910      	ldr	r1, [pc, #64]	; (80050ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 800506c:	4b10      	ldr	r3, [pc, #64]	; (80050b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800506e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005072:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005076:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005078:	2200      	movs	r2, #0
 800507a:	6042      	str	r2, [r0, #4]
 800507c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800507e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005080:	81c2      	strh	r2, [r0, #14]
          solid()
 8005082:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005086:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800508a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800508e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005092:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005094:	9100      	str	r1, [sp, #0]
 8005096:	3010      	adds	r0, #16
 8005098:	4611      	mov	r1, r2
 800509a:	f7fe f85d 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800509e:	4620      	mov	r0, r4
 80050a0:	b002      	add	sp, #8
 80050a2:	bd10      	pop	{r4, pc}
 80050a4:	0802e00c 	.word	0x0802e00c
 80050a8:	0802df14 	.word	0x0802df14
 80050ac:	20012daa 	.word	0x20012daa
 80050b0:	20012da8 	.word	0x20012da8

080050b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 80050b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80050b8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80050bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80050be:	68a0      	ldr	r0, [r4, #8]
 80050c0:	6803      	ldr	r3, [r0, #0]
 80050c2:	6a1b      	ldr	r3, [r3, #32]
 80050c4:	4798      	blx	r3
 80050c6:	f241 03af 	movw	r3, #4271	; 0x10af
 80050ca:	4298      	cmp	r0, r3
 80050cc:	d805      	bhi.n	80050da <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80050ce:	4b42      	ldr	r3, [pc, #264]	; (80051d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80050d0:	4a42      	ldr	r2, [pc, #264]	; (80051dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80050d2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80050d4:	4842      	ldr	r0, [pc, #264]	; (80051e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80050d6:	f025 fd79 	bl	802abcc <__assert_func>
 80050da:	6860      	ldr	r0, [r4, #4]
 80050dc:	6803      	ldr	r3, [r0, #0]
 80050de:	6a1b      	ldr	r3, [r3, #32]
 80050e0:	4798      	blx	r3
 80050e2:	280f      	cmp	r0, #15
 80050e4:	d803      	bhi.n	80050ee <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80050e6:	4b3f      	ldr	r3, [pc, #252]	; (80051e4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80050e8:	4a3c      	ldr	r2, [pc, #240]	; (80051dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80050ea:	21a4      	movs	r1, #164	; 0xa4
 80050ec:	e7f2      	b.n	80050d4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80050ee:	68e0      	ldr	r0, [r4, #12]
 80050f0:	6803      	ldr	r3, [r0, #0]
 80050f2:	6a1b      	ldr	r3, [r3, #32]
 80050f4:	4798      	blx	r3
 80050f6:	2837      	cmp	r0, #55	; 0x37
 80050f8:	d803      	bhi.n	8005102 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80050fa:	4b3b      	ldr	r3, [pc, #236]	; (80051e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80050fc:	4a37      	ldr	r2, [pc, #220]	; (80051dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80050fe:	21a5      	movs	r1, #165	; 0xa5
 8005100:	e7e8      	b.n	80050d4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005102:	f010 fe05 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005106:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80051ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 800510a:	3004      	adds	r0, #4
 800510c:	f010 fe66 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005110:	f8d9 0000 	ldr.w	r0, [r9]
 8005114:	b110      	cbz	r0, 800511c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005116:	6803      	ldr	r3, [r0, #0]
 8005118:	68db      	ldr	r3, [r3, #12]
 800511a:	4798      	blx	r3
    if (*currentTrans)
 800511c:	f8d9 0000 	ldr.w	r0, [r9]
 8005120:	b110      	cbz	r0, 8005128 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005122:	6803      	ldr	r3, [r0, #0]
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	4798      	blx	r3
    if (*currentScreen)
 8005128:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80051f0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 800512c:	f8d8 0000 	ldr.w	r0, [r8]
 8005130:	b110      	cbz	r0, 8005138 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005132:	6803      	ldr	r3, [r0, #0]
 8005134:	695b      	ldr	r3, [r3, #20]
 8005136:	4798      	blx	r3
    if (*currentPresenter)
 8005138:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800513c:	b110      	cbz	r0, 8005144 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800513e:	6803      	ldr	r3, [r0, #0]
 8005140:	685b      	ldr	r3, [r3, #4]
 8005142:	4798      	blx	r3
    if (*currentScreen)
 8005144:	f8d8 0000 	ldr.w	r0, [r8]
 8005148:	b110      	cbz	r0, 8005150 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800514a:	6803      	ldr	r3, [r0, #0]
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	4798      	blx	r3
    if (*currentPresenter)
 8005150:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005154:	b110      	cbz	r0, 800515c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005156:	6803      	ldr	r3, [r0, #0]
 8005158:	689b      	ldr	r3, [r3, #8]
 800515a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800515c:	68e0      	ldr	r0, [r4, #12]
 800515e:	2100      	movs	r1, #0
 8005160:	f7ff ff76 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005164:	2114      	movs	r1, #20
 8005166:	4605      	mov	r5, r0
 8005168:	f7ff ff76 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800516c:	68a0      	ldr	r0, [r4, #8]
 800516e:	6803      	ldr	r3, [r0, #0]
 8005170:	2100      	movs	r1, #0
 8005172:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005174:	4798      	blx	r3
 8005176:	4606      	mov	r6, r0
 8005178:	f004 fcce 	bl	8009b18 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800517c:	6860      	ldr	r0, [r4, #4]
 800517e:	6803      	ldr	r3, [r0, #0]
 8005180:	2100      	movs	r1, #0
 8005182:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005184:	4798      	blx	r3
 8005186:	4631      	mov	r1, r6
 8005188:	4604      	mov	r4, r0
 800518a:	f004 fc9f 	bl	8009acc <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800518e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005192:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005196:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800519a:	b1dc      	cbz	r4, 80051d4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 800519c:	1d23      	adds	r3, r4, #4
 800519e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80051a2:	6833      	ldr	r3, [r6, #0]
 80051a4:	f8c4 a008 	str.w	sl, [r4, #8]
 80051a8:	4630      	mov	r0, r6
 80051aa:	68db      	ldr	r3, [r3, #12]
 80051ac:	63f4      	str	r4, [r6, #60]	; 0x3c
 80051ae:	4798      	blx	r3
    newPresenter->activate();
 80051b0:	6823      	ldr	r3, [r4, #0]
 80051b2:	4620      	mov	r0, r4
 80051b4:	681b      	ldr	r3, [r3, #0]
 80051b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80051b8:	4629      	mov	r1, r5
 80051ba:	4630      	mov	r0, r6
 80051bc:	f012 fbd4 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80051c0:	682b      	ldr	r3, [r5, #0]
 80051c2:	4628      	mov	r0, r5
 80051c4:	691b      	ldr	r3, [r3, #16]
 80051c6:	4798      	blx	r3
    newTransition->invalidate();
 80051c8:	682b      	ldr	r3, [r5, #0]
 80051ca:	4628      	mov	r0, r5
 80051cc:	695b      	ldr	r3, [r3, #20]
}
 80051ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051d2:	4718      	bx	r3
    model->bind(newPresenter);
 80051d4:	4623      	mov	r3, r4
 80051d6:	e7e2      	b.n	800519e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80051d8:	0802c944 	.word	0x0802c944
 80051dc:	0802d1fb 	.word	0x0802d1fb
 80051e0:	0802cae0 	.word	0x0802cae0
 80051e4:	0802cb27 	.word	0x0802cb27
 80051e8:	0802cbca 	.word	0x0802cbca
 80051ec:	20012dfc 	.word	0x20012dfc
 80051f0:	20012df8 	.word	0x20012df8

080051f4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 80051f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80051fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051fe:	68a0      	ldr	r0, [r4, #8]
 8005200:	6803      	ldr	r3, [r0, #0]
 8005202:	6a1b      	ldr	r3, [r3, #32]
 8005204:	4798      	blx	r3
 8005206:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 800520a:	d205      	bcs.n	8005218 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x24>
 800520c:	4b42      	ldr	r3, [pc, #264]	; (8005318 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 800520e:	4a43      	ldr	r2, [pc, #268]	; (800531c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005210:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005212:	4843      	ldr	r0, [pc, #268]	; (8005320 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8005214:	f025 fcda 	bl	802abcc <__assert_func>
 8005218:	6860      	ldr	r0, [r4, #4]
 800521a:	6803      	ldr	r3, [r0, #0]
 800521c:	6a1b      	ldr	r3, [r3, #32]
 800521e:	4798      	blx	r3
 8005220:	280f      	cmp	r0, #15
 8005222:	d803      	bhi.n	800522c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x38>
 8005224:	4b3f      	ldr	r3, [pc, #252]	; (8005324 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8005226:	4a3d      	ldr	r2, [pc, #244]	; (800531c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005228:	21a4      	movs	r1, #164	; 0xa4
 800522a:	e7f2      	b.n	8005212 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800522c:	68e0      	ldr	r0, [r4, #12]
 800522e:	6803      	ldr	r3, [r0, #0]
 8005230:	6a1b      	ldr	r3, [r3, #32]
 8005232:	4798      	blx	r3
 8005234:	2837      	cmp	r0, #55	; 0x37
 8005236:	d803      	bhi.n	8005240 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4c>
 8005238:	4b3b      	ldr	r3, [pc, #236]	; (8005328 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 800523a:	4a38      	ldr	r2, [pc, #224]	; (800531c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800523c:	21a5      	movs	r1, #165	; 0xa5
 800523e:	e7e8      	b.n	8005212 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005240:	f010 fd66 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005244:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800532c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8005248:	3004      	adds	r0, #4
 800524a:	f010 fdc7 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800524e:	f8d9 0000 	ldr.w	r0, [r9]
 8005252:	b110      	cbz	r0, 800525a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005254:	6803      	ldr	r3, [r0, #0]
 8005256:	68db      	ldr	r3, [r3, #12]
 8005258:	4798      	blx	r3
    if (*currentTrans)
 800525a:	f8d9 0000 	ldr.w	r0, [r9]
 800525e:	b110      	cbz	r0, 8005266 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005260:	6803      	ldr	r3, [r0, #0]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	4798      	blx	r3
    if (*currentScreen)
 8005266:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005330 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 800526a:	f8d8 0000 	ldr.w	r0, [r8]
 800526e:	b110      	cbz	r0, 8005276 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005270:	6803      	ldr	r3, [r0, #0]
 8005272:	695b      	ldr	r3, [r3, #20]
 8005274:	4798      	blx	r3
    if (*currentPresenter)
 8005276:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800527a:	b110      	cbz	r0, 8005282 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800527c:	6803      	ldr	r3, [r0, #0]
 800527e:	685b      	ldr	r3, [r3, #4]
 8005280:	4798      	blx	r3
    if (*currentScreen)
 8005282:	f8d8 0000 	ldr.w	r0, [r8]
 8005286:	b110      	cbz	r0, 800528e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005288:	6803      	ldr	r3, [r0, #0]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	4798      	blx	r3
    if (*currentPresenter)
 800528e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005292:	b110      	cbz	r0, 800529a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005294:	6803      	ldr	r3, [r0, #0]
 8005296:	689b      	ldr	r3, [r3, #8]
 8005298:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800529a:	68e0      	ldr	r0, [r4, #12]
 800529c:	2100      	movs	r1, #0
 800529e:	f7ff fed7 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80052a2:	2114      	movs	r1, #20
 80052a4:	4605      	mov	r5, r0
 80052a6:	f7ff fed7 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052aa:	68a0      	ldr	r0, [r4, #8]
 80052ac:	6803      	ldr	r3, [r0, #0]
 80052ae:	2100      	movs	r1, #0
 80052b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052b2:	4798      	blx	r3
 80052b4:	4606      	mov	r6, r0
 80052b6:	f003 ffe1 	bl	800927c <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80052ba:	6860      	ldr	r0, [r4, #4]
 80052bc:	6803      	ldr	r3, [r0, #0]
 80052be:	2100      	movs	r1, #0
 80052c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052c2:	4798      	blx	r3
 80052c4:	4631      	mov	r1, r6
 80052c6:	4604      	mov	r4, r0
 80052c8:	f003 ffb2 	bl	8009230 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 80052cc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80052d0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80052d4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052d8:	b1dc      	cbz	r4, 8005312 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x11e>
 80052da:	1d23      	adds	r3, r4, #4
 80052dc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052e0:	6833      	ldr	r3, [r6, #0]
 80052e2:	f8c4 a008 	str.w	sl, [r4, #8]
 80052e6:	4630      	mov	r0, r6
 80052e8:	68db      	ldr	r3, [r3, #12]
 80052ea:	63f4      	str	r4, [r6, #60]	; 0x3c
 80052ec:	4798      	blx	r3
    newPresenter->activate();
 80052ee:	6823      	ldr	r3, [r4, #0]
 80052f0:	4620      	mov	r0, r4
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052f6:	4629      	mov	r1, r5
 80052f8:	4630      	mov	r0, r6
 80052fa:	f012 fb35 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052fe:	682b      	ldr	r3, [r5, #0]
 8005300:	4628      	mov	r0, r5
 8005302:	691b      	ldr	r3, [r3, #16]
 8005304:	4798      	blx	r3
    newTransition->invalidate();
 8005306:	682b      	ldr	r3, [r5, #0]
 8005308:	4628      	mov	r0, r5
 800530a:	695b      	ldr	r3, [r3, #20]
}
 800530c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005310:	4718      	bx	r3
    model->bind(newPresenter);
 8005312:	4623      	mov	r3, r4
 8005314:	e7e2      	b.n	80052dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xe8>
 8005316:	bf00      	nop
 8005318:	0802c944 	.word	0x0802c944
 800531c:	0802d31b 	.word	0x0802d31b
 8005320:	0802cae0 	.word	0x0802cae0
 8005324:	0802cb27 	.word	0x0802cb27
 8005328:	0802cbca 	.word	0x0802cbca
 800532c:	20012dfc 	.word	0x20012dfc
 8005330:	20012df8 	.word	0x20012df8

08005334 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005334:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005338:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800533c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800533e:	68a0      	ldr	r0, [r4, #8]
 8005340:	6803      	ldr	r3, [r0, #0]
 8005342:	6a1b      	ldr	r3, [r3, #32]
 8005344:	4798      	blx	r3
 8005346:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 800534a:	d205      	bcs.n	8005358 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x24>
 800534c:	4b42      	ldr	r3, [pc, #264]	; (8005458 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800534e:	4a43      	ldr	r2, [pc, #268]	; (800545c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005350:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005352:	4843      	ldr	r0, [pc, #268]	; (8005460 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005354:	f025 fc3a 	bl	802abcc <__assert_func>
 8005358:	6860      	ldr	r0, [r4, #4]
 800535a:	6803      	ldr	r3, [r0, #0]
 800535c:	6a1b      	ldr	r3, [r3, #32]
 800535e:	4798      	blx	r3
 8005360:	280f      	cmp	r0, #15
 8005362:	d803      	bhi.n	800536c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x38>
 8005364:	4b3f      	ldr	r3, [pc, #252]	; (8005464 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005366:	4a3d      	ldr	r2, [pc, #244]	; (800545c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005368:	21a4      	movs	r1, #164	; 0xa4
 800536a:	e7f2      	b.n	8005352 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800536c:	68e0      	ldr	r0, [r4, #12]
 800536e:	6803      	ldr	r3, [r0, #0]
 8005370:	6a1b      	ldr	r3, [r3, #32]
 8005372:	4798      	blx	r3
 8005374:	2837      	cmp	r0, #55	; 0x37
 8005376:	d803      	bhi.n	8005380 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4c>
 8005378:	4b3b      	ldr	r3, [pc, #236]	; (8005468 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 800537a:	4a38      	ldr	r2, [pc, #224]	; (800545c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800537c:	21a5      	movs	r1, #165	; 0xa5
 800537e:	e7e8      	b.n	8005352 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005380:	f010 fcc6 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005384:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800546c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005388:	3004      	adds	r0, #4
 800538a:	f010 fd27 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800538e:	f8d9 0000 	ldr.w	r0, [r9]
 8005392:	b110      	cbz	r0, 800539a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005394:	6803      	ldr	r3, [r0, #0]
 8005396:	68db      	ldr	r3, [r3, #12]
 8005398:	4798      	blx	r3
    if (*currentTrans)
 800539a:	f8d9 0000 	ldr.w	r0, [r9]
 800539e:	b110      	cbz	r0, 80053a6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80053a0:	6803      	ldr	r3, [r0, #0]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	4798      	blx	r3
    if (*currentScreen)
 80053a6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005470 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 80053aa:	f8d8 0000 	ldr.w	r0, [r8]
 80053ae:	b110      	cbz	r0, 80053b6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80053b0:	6803      	ldr	r3, [r0, #0]
 80053b2:	695b      	ldr	r3, [r3, #20]
 80053b4:	4798      	blx	r3
    if (*currentPresenter)
 80053b6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053ba:	b110      	cbz	r0, 80053c2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80053bc:	6803      	ldr	r3, [r0, #0]
 80053be:	685b      	ldr	r3, [r3, #4]
 80053c0:	4798      	blx	r3
    if (*currentScreen)
 80053c2:	f8d8 0000 	ldr.w	r0, [r8]
 80053c6:	b110      	cbz	r0, 80053ce <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80053c8:	6803      	ldr	r3, [r0, #0]
 80053ca:	681b      	ldr	r3, [r3, #0]
 80053cc:	4798      	blx	r3
    if (*currentPresenter)
 80053ce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053d2:	b110      	cbz	r0, 80053da <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80053d4:	6803      	ldr	r3, [r0, #0]
 80053d6:	689b      	ldr	r3, [r3, #8]
 80053d8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80053da:	68e0      	ldr	r0, [r4, #12]
 80053dc:	2100      	movs	r1, #0
 80053de:	f7ff fe37 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80053e2:	2114      	movs	r1, #20
 80053e4:	4605      	mov	r5, r0
 80053e6:	f7ff fe37 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80053ea:	68a0      	ldr	r0, [r4, #8]
 80053ec:	6803      	ldr	r3, [r0, #0]
 80053ee:	2100      	movs	r1, #0
 80053f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053f2:	4798      	blx	r3
 80053f4:	4606      	mov	r6, r0
 80053f6:	f003 ffcf 	bl	8009398 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053fa:	6860      	ldr	r0, [r4, #4]
 80053fc:	6803      	ldr	r3, [r0, #0]
 80053fe:	2100      	movs	r1, #0
 8005400:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005402:	4798      	blx	r3
 8005404:	4631      	mov	r1, r6
 8005406:	4604      	mov	r4, r0
 8005408:	f003 ffa0 	bl	800934c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 800540c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005410:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005414:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005418:	b1dc      	cbz	r4, 8005452 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x11e>
 800541a:	1d23      	adds	r3, r4, #4
 800541c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005420:	6833      	ldr	r3, [r6, #0]
 8005422:	f8c4 a008 	str.w	sl, [r4, #8]
 8005426:	4630      	mov	r0, r6
 8005428:	68db      	ldr	r3, [r3, #12]
 800542a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800542c:	4798      	blx	r3
    newPresenter->activate();
 800542e:	6823      	ldr	r3, [r4, #0]
 8005430:	4620      	mov	r0, r4
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005436:	4629      	mov	r1, r5
 8005438:	4630      	mov	r0, r6
 800543a:	f012 fa95 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800543e:	682b      	ldr	r3, [r5, #0]
 8005440:	4628      	mov	r0, r5
 8005442:	691b      	ldr	r3, [r3, #16]
 8005444:	4798      	blx	r3
    newTransition->invalidate();
 8005446:	682b      	ldr	r3, [r5, #0]
 8005448:	4628      	mov	r0, r5
 800544a:	695b      	ldr	r3, [r3, #20]
}
 800544c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005450:	4718      	bx	r3
    model->bind(newPresenter);
 8005452:	4623      	mov	r3, r4
 8005454:	e7e2      	b.n	800541c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xe8>
 8005456:	bf00      	nop
 8005458:	0802c944 	.word	0x0802c944
 800545c:	0802d443 	.word	0x0802d443
 8005460:	0802cae0 	.word	0x0802cae0
 8005464:	0802cb27 	.word	0x0802cb27
 8005468:	0802cbca 	.word	0x0802cbca
 800546c:	20012dfc 	.word	0x20012dfc
 8005470:	20012df8 	.word	0x20012df8

08005474 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8005474:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005478:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800547c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800547e:	68a0      	ldr	r0, [r4, #8]
 8005480:	6803      	ldr	r3, [r0, #0]
 8005482:	6a1b      	ldr	r3, [r3, #32]
 8005484:	4798      	blx	r3
 8005486:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800548a:	d205      	bcs.n	8005498 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800548c:	4b42      	ldr	r3, [pc, #264]	; (8005598 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800548e:	4a43      	ldr	r2, [pc, #268]	; (800559c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005490:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005492:	4843      	ldr	r0, [pc, #268]	; (80055a0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8005494:	f025 fb9a 	bl	802abcc <__assert_func>
 8005498:	6860      	ldr	r0, [r4, #4]
 800549a:	6803      	ldr	r3, [r0, #0]
 800549c:	6a1b      	ldr	r3, [r3, #32]
 800549e:	4798      	blx	r3
 80054a0:	280f      	cmp	r0, #15
 80054a2:	d803      	bhi.n	80054ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 80054a4:	4b3f      	ldr	r3, [pc, #252]	; (80055a4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 80054a6:	4a3d      	ldr	r2, [pc, #244]	; (800559c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80054a8:	21a4      	movs	r1, #164	; 0xa4
 80054aa:	e7f2      	b.n	8005492 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054ac:	68e0      	ldr	r0, [r4, #12]
 80054ae:	6803      	ldr	r3, [r0, #0]
 80054b0:	6a1b      	ldr	r3, [r3, #32]
 80054b2:	4798      	blx	r3
 80054b4:	2837      	cmp	r0, #55	; 0x37
 80054b6:	d803      	bhi.n	80054c0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 80054b8:	4b3b      	ldr	r3, [pc, #236]	; (80055a8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 80054ba:	4a38      	ldr	r2, [pc, #224]	; (800559c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80054bc:	21a5      	movs	r1, #165	; 0xa5
 80054be:	e7e8      	b.n	8005492 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80054c0:	f010 fc26 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80054c4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80055ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 80054c8:	3004      	adds	r0, #4
 80054ca:	f010 fc87 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80054ce:	f8d9 0000 	ldr.w	r0, [r9]
 80054d2:	b110      	cbz	r0, 80054da <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80054d4:	6803      	ldr	r3, [r0, #0]
 80054d6:	68db      	ldr	r3, [r3, #12]
 80054d8:	4798      	blx	r3
    if (*currentTrans)
 80054da:	f8d9 0000 	ldr.w	r0, [r9]
 80054de:	b110      	cbz	r0, 80054e6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80054e0:	6803      	ldr	r3, [r0, #0]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	4798      	blx	r3
    if (*currentScreen)
 80054e6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80055b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80054ea:	f8d8 0000 	ldr.w	r0, [r8]
 80054ee:	b110      	cbz	r0, 80054f6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80054f0:	6803      	ldr	r3, [r0, #0]
 80054f2:	695b      	ldr	r3, [r3, #20]
 80054f4:	4798      	blx	r3
    if (*currentPresenter)
 80054f6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054fa:	b110      	cbz	r0, 8005502 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80054fc:	6803      	ldr	r3, [r0, #0]
 80054fe:	685b      	ldr	r3, [r3, #4]
 8005500:	4798      	blx	r3
    if (*currentScreen)
 8005502:	f8d8 0000 	ldr.w	r0, [r8]
 8005506:	b110      	cbz	r0, 800550e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005508:	6803      	ldr	r3, [r0, #0]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	4798      	blx	r3
    if (*currentPresenter)
 800550e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005512:	b110      	cbz	r0, 800551a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005514:	6803      	ldr	r3, [r0, #0]
 8005516:	689b      	ldr	r3, [r3, #8]
 8005518:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800551a:	68e0      	ldr	r0, [r4, #12]
 800551c:	2100      	movs	r1, #0
 800551e:	f7ff fd97 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005522:	2114      	movs	r1, #20
 8005524:	4605      	mov	r5, r0
 8005526:	f7ff fd97 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800552a:	68a0      	ldr	r0, [r4, #8]
 800552c:	6803      	ldr	r3, [r0, #0]
 800552e:	2100      	movs	r1, #0
 8005530:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005532:	4798      	blx	r3
 8005534:	4606      	mov	r6, r0
 8005536:	f003 fe47 	bl	80091c8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800553a:	6860      	ldr	r0, [r4, #4]
 800553c:	6803      	ldr	r3, [r0, #0]
 800553e:	2100      	movs	r1, #0
 8005540:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005542:	4798      	blx	r3
 8005544:	4631      	mov	r1, r6
 8005546:	4604      	mov	r4, r0
 8005548:	f003 fe18 	bl	800917c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 800554c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005550:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005554:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005558:	b1dc      	cbz	r4, 8005592 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 800555a:	1d23      	adds	r3, r4, #4
 800555c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005560:	6833      	ldr	r3, [r6, #0]
 8005562:	f8c4 a008 	str.w	sl, [r4, #8]
 8005566:	4630      	mov	r0, r6
 8005568:	68db      	ldr	r3, [r3, #12]
 800556a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800556c:	4798      	blx	r3
    newPresenter->activate();
 800556e:	6823      	ldr	r3, [r4, #0]
 8005570:	4620      	mov	r0, r4
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005576:	4629      	mov	r1, r5
 8005578:	4630      	mov	r0, r6
 800557a:	f012 f9f5 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800557e:	682b      	ldr	r3, [r5, #0]
 8005580:	4628      	mov	r0, r5
 8005582:	691b      	ldr	r3, [r3, #16]
 8005584:	4798      	blx	r3
    newTransition->invalidate();
 8005586:	682b      	ldr	r3, [r5, #0]
 8005588:	4628      	mov	r0, r5
 800558a:	695b      	ldr	r3, [r3, #20]
}
 800558c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005590:	4718      	bx	r3
    model->bind(newPresenter);
 8005592:	4623      	mov	r3, r4
 8005594:	e7e2      	b.n	800555c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8005596:	bf00      	nop
 8005598:	0802c944 	.word	0x0802c944
 800559c:	0802d569 	.word	0x0802d569
 80055a0:	0802cae0 	.word	0x0802cae0
 80055a4:	0802cb27 	.word	0x0802cb27
 80055a8:	0802cbca 	.word	0x0802cbca
 80055ac:	20012dfc 	.word	0x20012dfc
 80055b0:	20012df8 	.word	0x20012df8

080055b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 80055b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80055b8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80055bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80055be:	68a0      	ldr	r0, [r4, #8]
 80055c0:	6803      	ldr	r3, [r0, #0]
 80055c2:	6a1b      	ldr	r3, [r3, #32]
 80055c4:	4798      	blx	r3
 80055c6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80055ca:	4298      	cmp	r0, r3
 80055cc:	d805      	bhi.n	80055da <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 80055ce:	4b42      	ldr	r3, [pc, #264]	; (80056d8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80055d0:	4a42      	ldr	r2, [pc, #264]	; (80056dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80055d2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80055d4:	4842      	ldr	r0, [pc, #264]	; (80056e0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80055d6:	f025 faf9 	bl	802abcc <__assert_func>
 80055da:	6860      	ldr	r0, [r4, #4]
 80055dc:	6803      	ldr	r3, [r0, #0]
 80055de:	6a1b      	ldr	r3, [r3, #32]
 80055e0:	4798      	blx	r3
 80055e2:	280f      	cmp	r0, #15
 80055e4:	d803      	bhi.n	80055ee <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80055e6:	4b3f      	ldr	r3, [pc, #252]	; (80056e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80055e8:	4a3c      	ldr	r2, [pc, #240]	; (80056dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80055ea:	21a4      	movs	r1, #164	; 0xa4
 80055ec:	e7f2      	b.n	80055d4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80055ee:	68e0      	ldr	r0, [r4, #12]
 80055f0:	6803      	ldr	r3, [r0, #0]
 80055f2:	6a1b      	ldr	r3, [r3, #32]
 80055f4:	4798      	blx	r3
 80055f6:	2837      	cmp	r0, #55	; 0x37
 80055f8:	d803      	bhi.n	8005602 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80055fa:	4b3b      	ldr	r3, [pc, #236]	; (80056e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80055fc:	4a37      	ldr	r2, [pc, #220]	; (80056dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80055fe:	21a5      	movs	r1, #165	; 0xa5
 8005600:	e7e8      	b.n	80055d4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005602:	f010 fb85 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005606:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80056ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800560a:	3004      	adds	r0, #4
 800560c:	f010 fbe6 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005610:	f8d9 0000 	ldr.w	r0, [r9]
 8005614:	b110      	cbz	r0, 800561c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005616:	6803      	ldr	r3, [r0, #0]
 8005618:	68db      	ldr	r3, [r3, #12]
 800561a:	4798      	blx	r3
    if (*currentTrans)
 800561c:	f8d9 0000 	ldr.w	r0, [r9]
 8005620:	b110      	cbz	r0, 8005628 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005622:	6803      	ldr	r3, [r0, #0]
 8005624:	681b      	ldr	r3, [r3, #0]
 8005626:	4798      	blx	r3
    if (*currentScreen)
 8005628:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80056f0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 800562c:	f8d8 0000 	ldr.w	r0, [r8]
 8005630:	b110      	cbz	r0, 8005638 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005632:	6803      	ldr	r3, [r0, #0]
 8005634:	695b      	ldr	r3, [r3, #20]
 8005636:	4798      	blx	r3
    if (*currentPresenter)
 8005638:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800563c:	b110      	cbz	r0, 8005644 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800563e:	6803      	ldr	r3, [r0, #0]
 8005640:	685b      	ldr	r3, [r3, #4]
 8005642:	4798      	blx	r3
    if (*currentScreen)
 8005644:	f8d8 0000 	ldr.w	r0, [r8]
 8005648:	b110      	cbz	r0, 8005650 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800564a:	6803      	ldr	r3, [r0, #0]
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	4798      	blx	r3
    if (*currentPresenter)
 8005650:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005654:	b110      	cbz	r0, 800565c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005656:	6803      	ldr	r3, [r0, #0]
 8005658:	689b      	ldr	r3, [r3, #8]
 800565a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800565c:	68e0      	ldr	r0, [r4, #12]
 800565e:	2100      	movs	r1, #0
 8005660:	f7ff fcf6 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005664:	2114      	movs	r1, #20
 8005666:	4605      	mov	r5, r0
 8005668:	f7ff fcf6 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800566c:	68a0      	ldr	r0, [r4, #8]
 800566e:	6803      	ldr	r3, [r0, #0]
 8005670:	2100      	movs	r1, #0
 8005672:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005674:	4798      	blx	r3
 8005676:	4606      	mov	r6, r0
 8005678:	f004 f8bc 	bl	80097f4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800567c:	6860      	ldr	r0, [r4, #4]
 800567e:	6803      	ldr	r3, [r0, #0]
 8005680:	2100      	movs	r1, #0
 8005682:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005684:	4798      	blx	r3
 8005686:	4631      	mov	r1, r6
 8005688:	4604      	mov	r4, r0
 800568a:	f004 f88d 	bl	80097a8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800568e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005692:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005696:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800569a:	b1dc      	cbz	r4, 80056d4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 800569c:	1d23      	adds	r3, r4, #4
 800569e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056a2:	6833      	ldr	r3, [r6, #0]
 80056a4:	f8c4 a008 	str.w	sl, [r4, #8]
 80056a8:	4630      	mov	r0, r6
 80056aa:	68db      	ldr	r3, [r3, #12]
 80056ac:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056ae:	4798      	blx	r3
    newPresenter->activate();
 80056b0:	6823      	ldr	r3, [r4, #0]
 80056b2:	4620      	mov	r0, r4
 80056b4:	681b      	ldr	r3, [r3, #0]
 80056b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80056b8:	4629      	mov	r1, r5
 80056ba:	4630      	mov	r0, r6
 80056bc:	f012 f954 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80056c0:	682b      	ldr	r3, [r5, #0]
 80056c2:	4628      	mov	r0, r5
 80056c4:	691b      	ldr	r3, [r3, #16]
 80056c6:	4798      	blx	r3
    newTransition->invalidate();
 80056c8:	682b      	ldr	r3, [r5, #0]
 80056ca:	4628      	mov	r0, r5
 80056cc:	695b      	ldr	r3, [r3, #20]
}
 80056ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80056d2:	4718      	bx	r3
    model->bind(newPresenter);
 80056d4:	4623      	mov	r3, r4
 80056d6:	e7e2      	b.n	800569e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80056d8:	0802c944 	.word	0x0802c944
 80056dc:	0802d687 	.word	0x0802d687
 80056e0:	0802cae0 	.word	0x0802cae0
 80056e4:	0802cb27 	.word	0x0802cb27
 80056e8:	0802cbca 	.word	0x0802cbca
 80056ec:	20012dfc 	.word	0x20012dfc
 80056f0:	20012df8 	.word	0x20012df8

080056f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80056f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80056f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80056fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80056fe:	68a0      	ldr	r0, [r4, #8]
 8005700:	6803      	ldr	r3, [r0, #0]
 8005702:	6a1b      	ldr	r3, [r3, #32]
 8005704:	4798      	blx	r3
 8005706:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800570a:	4298      	cmp	r0, r3
 800570c:	d805      	bhi.n	800571a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800570e:	4b42      	ldr	r3, [pc, #264]	; (8005818 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005710:	4a42      	ldr	r2, [pc, #264]	; (800581c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005712:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005714:	4842      	ldr	r0, [pc, #264]	; (8005820 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005716:	f025 fa59 	bl	802abcc <__assert_func>
 800571a:	6860      	ldr	r0, [r4, #4]
 800571c:	6803      	ldr	r3, [r0, #0]
 800571e:	6a1b      	ldr	r3, [r3, #32]
 8005720:	4798      	blx	r3
 8005722:	280f      	cmp	r0, #15
 8005724:	d803      	bhi.n	800572e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005726:	4b3f      	ldr	r3, [pc, #252]	; (8005824 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005728:	4a3c      	ldr	r2, [pc, #240]	; (800581c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800572a:	21a4      	movs	r1, #164	; 0xa4
 800572c:	e7f2      	b.n	8005714 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800572e:	68e0      	ldr	r0, [r4, #12]
 8005730:	6803      	ldr	r3, [r0, #0]
 8005732:	6a1b      	ldr	r3, [r3, #32]
 8005734:	4798      	blx	r3
 8005736:	2837      	cmp	r0, #55	; 0x37
 8005738:	d803      	bhi.n	8005742 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 800573a:	4b3b      	ldr	r3, [pc, #236]	; (8005828 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 800573c:	4a37      	ldr	r2, [pc, #220]	; (800581c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800573e:	21a5      	movs	r1, #165	; 0xa5
 8005740:	e7e8      	b.n	8005714 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005742:	f010 fae5 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005746:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800582c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 800574a:	3004      	adds	r0, #4
 800574c:	f010 fb46 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005750:	f8d9 0000 	ldr.w	r0, [r9]
 8005754:	b110      	cbz	r0, 800575c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005756:	6803      	ldr	r3, [r0, #0]
 8005758:	68db      	ldr	r3, [r3, #12]
 800575a:	4798      	blx	r3
    if (*currentTrans)
 800575c:	f8d9 0000 	ldr.w	r0, [r9]
 8005760:	b110      	cbz	r0, 8005768 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005762:	6803      	ldr	r3, [r0, #0]
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	4798      	blx	r3
    if (*currentScreen)
 8005768:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005830 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 800576c:	f8d8 0000 	ldr.w	r0, [r8]
 8005770:	b110      	cbz	r0, 8005778 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005772:	6803      	ldr	r3, [r0, #0]
 8005774:	695b      	ldr	r3, [r3, #20]
 8005776:	4798      	blx	r3
    if (*currentPresenter)
 8005778:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800577c:	b110      	cbz	r0, 8005784 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800577e:	6803      	ldr	r3, [r0, #0]
 8005780:	685b      	ldr	r3, [r3, #4]
 8005782:	4798      	blx	r3
    if (*currentScreen)
 8005784:	f8d8 0000 	ldr.w	r0, [r8]
 8005788:	b110      	cbz	r0, 8005790 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800578a:	6803      	ldr	r3, [r0, #0]
 800578c:	681b      	ldr	r3, [r3, #0]
 800578e:	4798      	blx	r3
    if (*currentPresenter)
 8005790:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005794:	b110      	cbz	r0, 800579c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005796:	6803      	ldr	r3, [r0, #0]
 8005798:	689b      	ldr	r3, [r3, #8]
 800579a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800579c:	68e0      	ldr	r0, [r4, #12]
 800579e:	2100      	movs	r1, #0
 80057a0:	f7ff fc56 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80057a4:	2114      	movs	r1, #20
 80057a6:	4605      	mov	r5, r0
 80057a8:	f7ff fc56 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057ac:	68a0      	ldr	r0, [r4, #8]
 80057ae:	6803      	ldr	r3, [r0, #0]
 80057b0:	2100      	movs	r1, #0
 80057b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057b4:	4798      	blx	r3
 80057b6:	4606      	mov	r6, r0
 80057b8:	f003 ffda 	bl	8009770 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80057bc:	6860      	ldr	r0, [r4, #4]
 80057be:	6803      	ldr	r3, [r0, #0]
 80057c0:	2100      	movs	r1, #0
 80057c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057c4:	4798      	blx	r3
 80057c6:	4631      	mov	r1, r6
 80057c8:	4604      	mov	r4, r0
 80057ca:	f003 ffab 	bl	8009724 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80057ce:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80057d2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80057d6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80057da:	b1dc      	cbz	r4, 8005814 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80057dc:	1d23      	adds	r3, r4, #4
 80057de:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80057e2:	6833      	ldr	r3, [r6, #0]
 80057e4:	f8c4 a008 	str.w	sl, [r4, #8]
 80057e8:	4630      	mov	r0, r6
 80057ea:	68db      	ldr	r3, [r3, #12]
 80057ec:	63f4      	str	r4, [r6, #60]	; 0x3c
 80057ee:	4798      	blx	r3
    newPresenter->activate();
 80057f0:	6823      	ldr	r3, [r4, #0]
 80057f2:	4620      	mov	r0, r4
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80057f8:	4629      	mov	r1, r5
 80057fa:	4630      	mov	r0, r6
 80057fc:	f012 f8b4 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005800:	682b      	ldr	r3, [r5, #0]
 8005802:	4628      	mov	r0, r5
 8005804:	691b      	ldr	r3, [r3, #16]
 8005806:	4798      	blx	r3
    newTransition->invalidate();
 8005808:	682b      	ldr	r3, [r5, #0]
 800580a:	4628      	mov	r0, r5
 800580c:	695b      	ldr	r3, [r3, #20]
}
 800580e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005812:	4718      	bx	r3
    model->bind(newPresenter);
 8005814:	4623      	mov	r3, r4
 8005816:	e7e2      	b.n	80057de <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005818:	0802c944 	.word	0x0802c944
 800581c:	0802d7cb 	.word	0x0802d7cb
 8005820:	0802cae0 	.word	0x0802cae0
 8005824:	0802cb27 	.word	0x0802cb27
 8005828:	0802cbca 	.word	0x0802cbca
 800582c:	20012dfc 	.word	0x20012dfc
 8005830:	20012df8 	.word	0x20012df8

08005834 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8005834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005838:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800583c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800583e:	68a0      	ldr	r0, [r4, #8]
 8005840:	6803      	ldr	r3, [r0, #0]
 8005842:	6a1b      	ldr	r3, [r3, #32]
 8005844:	4798      	blx	r3
 8005846:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800584a:	d205      	bcs.n	8005858 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 800584c:	4b42      	ldr	r3, [pc, #264]	; (8005958 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800584e:	4a43      	ldr	r2, [pc, #268]	; (800595c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005850:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005852:	4843      	ldr	r0, [pc, #268]	; (8005960 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8005854:	f025 f9ba 	bl	802abcc <__assert_func>
 8005858:	6860      	ldr	r0, [r4, #4]
 800585a:	6803      	ldr	r3, [r0, #0]
 800585c:	6a1b      	ldr	r3, [r3, #32]
 800585e:	4798      	blx	r3
 8005860:	280f      	cmp	r0, #15
 8005862:	d803      	bhi.n	800586c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005864:	4b3f      	ldr	r3, [pc, #252]	; (8005964 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005866:	4a3d      	ldr	r2, [pc, #244]	; (800595c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005868:	21a4      	movs	r1, #164	; 0xa4
 800586a:	e7f2      	b.n	8005852 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800586c:	68e0      	ldr	r0, [r4, #12]
 800586e:	6803      	ldr	r3, [r0, #0]
 8005870:	6a1b      	ldr	r3, [r3, #32]
 8005872:	4798      	blx	r3
 8005874:	2837      	cmp	r0, #55	; 0x37
 8005876:	d803      	bhi.n	8005880 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005878:	4b3b      	ldr	r3, [pc, #236]	; (8005968 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 800587a:	4a38      	ldr	r2, [pc, #224]	; (800595c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800587c:	21a5      	movs	r1, #165	; 0xa5
 800587e:	e7e8      	b.n	8005852 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005880:	f010 fa46 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005884:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800596c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005888:	3004      	adds	r0, #4
 800588a:	f010 faa7 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800588e:	f8d9 0000 	ldr.w	r0, [r9]
 8005892:	b110      	cbz	r0, 800589a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005894:	6803      	ldr	r3, [r0, #0]
 8005896:	68db      	ldr	r3, [r3, #12]
 8005898:	4798      	blx	r3
    if (*currentTrans)
 800589a:	f8d9 0000 	ldr.w	r0, [r9]
 800589e:	b110      	cbz	r0, 80058a6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80058a0:	6803      	ldr	r3, [r0, #0]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	4798      	blx	r3
    if (*currentScreen)
 80058a6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005970 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80058aa:	f8d8 0000 	ldr.w	r0, [r8]
 80058ae:	b110      	cbz	r0, 80058b6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80058b0:	6803      	ldr	r3, [r0, #0]
 80058b2:	695b      	ldr	r3, [r3, #20]
 80058b4:	4798      	blx	r3
    if (*currentPresenter)
 80058b6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80058ba:	b110      	cbz	r0, 80058c2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80058bc:	6803      	ldr	r3, [r0, #0]
 80058be:	685b      	ldr	r3, [r3, #4]
 80058c0:	4798      	blx	r3
    if (*currentScreen)
 80058c2:	f8d8 0000 	ldr.w	r0, [r8]
 80058c6:	b110      	cbz	r0, 80058ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80058c8:	6803      	ldr	r3, [r0, #0]
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	4798      	blx	r3
    if (*currentPresenter)
 80058ce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80058d2:	b110      	cbz	r0, 80058da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80058d4:	6803      	ldr	r3, [r0, #0]
 80058d6:	689b      	ldr	r3, [r3, #8]
 80058d8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80058da:	68e0      	ldr	r0, [r4, #12]
 80058dc:	2100      	movs	r1, #0
 80058de:	f7ff fbb7 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80058e2:	2114      	movs	r1, #20
 80058e4:	4605      	mov	r5, r0
 80058e6:	f7ff fbb7 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80058ea:	68a0      	ldr	r0, [r4, #8]
 80058ec:	6803      	ldr	r3, [r0, #0]
 80058ee:	2100      	movs	r1, #0
 80058f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058f2:	4798      	blx	r3
 80058f4:	4606      	mov	r6, r0
 80058f6:	f003 fee1 	bl	80096bc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80058fa:	6860      	ldr	r0, [r4, #4]
 80058fc:	6803      	ldr	r3, [r0, #0]
 80058fe:	2100      	movs	r1, #0
 8005900:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005902:	4798      	blx	r3
 8005904:	4631      	mov	r1, r6
 8005906:	4604      	mov	r4, r0
 8005908:	f003 feb2 	bl	8009670 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800590c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005910:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005914:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005918:	b1dc      	cbz	r4, 8005952 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 800591a:	1d23      	adds	r3, r4, #4
 800591c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005920:	6833      	ldr	r3, [r6, #0]
 8005922:	f8c4 a008 	str.w	sl, [r4, #8]
 8005926:	4630      	mov	r0, r6
 8005928:	68db      	ldr	r3, [r3, #12]
 800592a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800592c:	4798      	blx	r3
    newPresenter->activate();
 800592e:	6823      	ldr	r3, [r4, #0]
 8005930:	4620      	mov	r0, r4
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005936:	4629      	mov	r1, r5
 8005938:	4630      	mov	r0, r6
 800593a:	f012 f815 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800593e:	682b      	ldr	r3, [r5, #0]
 8005940:	4628      	mov	r0, r5
 8005942:	691b      	ldr	r3, [r3, #16]
 8005944:	4798      	blx	r3
    newTransition->invalidate();
 8005946:	682b      	ldr	r3, [r5, #0]
 8005948:	4628      	mov	r0, r5
 800594a:	695b      	ldr	r3, [r3, #20]
}
 800594c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005950:	4718      	bx	r3
    model->bind(newPresenter);
 8005952:	4623      	mov	r3, r4
 8005954:	e7e2      	b.n	800591c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8005956:	bf00      	nop
 8005958:	0802c944 	.word	0x0802c944
 800595c:	0802d90b 	.word	0x0802d90b
 8005960:	0802cae0 	.word	0x0802cae0
 8005964:	0802cb27 	.word	0x0802cb27
 8005968:	0802cbca 	.word	0x0802cbca
 800596c:	20012dfc 	.word	0x20012dfc
 8005970:	20012df8 	.word	0x20012df8

08005974 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005974:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005978:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800597c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800597e:	68a0      	ldr	r0, [r4, #8]
 8005980:	6803      	ldr	r3, [r0, #0]
 8005982:	6a1b      	ldr	r3, [r3, #32]
 8005984:	4798      	blx	r3
 8005986:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800598a:	4298      	cmp	r0, r3
 800598c:	d805      	bhi.n	800599a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800598e:	4b42      	ldr	r3, [pc, #264]	; (8005a98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8005990:	4a42      	ldr	r2, [pc, #264]	; (8005a9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005992:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005994:	4842      	ldr	r0, [pc, #264]	; (8005aa0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8005996:	f025 f919 	bl	802abcc <__assert_func>
 800599a:	6860      	ldr	r0, [r4, #4]
 800599c:	6803      	ldr	r3, [r0, #0]
 800599e:	6a1b      	ldr	r3, [r3, #32]
 80059a0:	4798      	blx	r3
 80059a2:	280f      	cmp	r0, #15
 80059a4:	d803      	bhi.n	80059ae <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 80059a6:	4b3f      	ldr	r3, [pc, #252]	; (8005aa4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 80059a8:	4a3c      	ldr	r2, [pc, #240]	; (8005a9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80059aa:	21a4      	movs	r1, #164	; 0xa4
 80059ac:	e7f2      	b.n	8005994 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80059ae:	68e0      	ldr	r0, [r4, #12]
 80059b0:	6803      	ldr	r3, [r0, #0]
 80059b2:	6a1b      	ldr	r3, [r3, #32]
 80059b4:	4798      	blx	r3
 80059b6:	2837      	cmp	r0, #55	; 0x37
 80059b8:	d803      	bhi.n	80059c2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80059ba:	4b3b      	ldr	r3, [pc, #236]	; (8005aa8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80059bc:	4a37      	ldr	r2, [pc, #220]	; (8005a9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80059be:	21a5      	movs	r1, #165	; 0xa5
 80059c0:	e7e8      	b.n	8005994 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80059c2:	f010 f9a5 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80059c6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005aac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80059ca:	3004      	adds	r0, #4
 80059cc:	f010 fa06 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80059d0:	f8d9 0000 	ldr.w	r0, [r9]
 80059d4:	b110      	cbz	r0, 80059dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80059d6:	6803      	ldr	r3, [r0, #0]
 80059d8:	68db      	ldr	r3, [r3, #12]
 80059da:	4798      	blx	r3
    if (*currentTrans)
 80059dc:	f8d9 0000 	ldr.w	r0, [r9]
 80059e0:	b110      	cbz	r0, 80059e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80059e2:	6803      	ldr	r3, [r0, #0]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	4798      	blx	r3
    if (*currentScreen)
 80059e8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005ab0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80059ec:	f8d8 0000 	ldr.w	r0, [r8]
 80059f0:	b110      	cbz	r0, 80059f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80059f2:	6803      	ldr	r3, [r0, #0]
 80059f4:	695b      	ldr	r3, [r3, #20]
 80059f6:	4798      	blx	r3
    if (*currentPresenter)
 80059f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80059fc:	b110      	cbz	r0, 8005a04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80059fe:	6803      	ldr	r3, [r0, #0]
 8005a00:	685b      	ldr	r3, [r3, #4]
 8005a02:	4798      	blx	r3
    if (*currentScreen)
 8005a04:	f8d8 0000 	ldr.w	r0, [r8]
 8005a08:	b110      	cbz	r0, 8005a10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005a0a:	6803      	ldr	r3, [r0, #0]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	4798      	blx	r3
    if (*currentPresenter)
 8005a10:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a14:	b110      	cbz	r0, 8005a1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005a16:	6803      	ldr	r3, [r0, #0]
 8005a18:	689b      	ldr	r3, [r3, #8]
 8005a1a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a1c:	68e0      	ldr	r0, [r4, #12]
 8005a1e:	2100      	movs	r1, #0
 8005a20:	f7ff fb16 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005a24:	2114      	movs	r1, #20
 8005a26:	4605      	mov	r5, r0
 8005a28:	f7ff fb16 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a2c:	68a0      	ldr	r0, [r4, #8]
 8005a2e:	6803      	ldr	r3, [r0, #0]
 8005a30:	2100      	movs	r1, #0
 8005a32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a34:	4798      	blx	r3
 8005a36:	4606      	mov	r6, r0
 8005a38:	f004 f808 	bl	8009a4c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a3c:	6860      	ldr	r0, [r4, #4]
 8005a3e:	6803      	ldr	r3, [r0, #0]
 8005a40:	2100      	movs	r1, #0
 8005a42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a44:	4798      	blx	r3
 8005a46:	4631      	mov	r1, r6
 8005a48:	4604      	mov	r4, r0
 8005a4a:	f003 ffd9 	bl	8009a00 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8005a4e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005a52:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005a56:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005a5a:	b1dc      	cbz	r4, 8005a94 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8005a5c:	1d23      	adds	r3, r4, #4
 8005a5e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005a62:	6833      	ldr	r3, [r6, #0]
 8005a64:	f8c4 a008 	str.w	sl, [r4, #8]
 8005a68:	4630      	mov	r0, r6
 8005a6a:	68db      	ldr	r3, [r3, #12]
 8005a6c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005a6e:	4798      	blx	r3
    newPresenter->activate();
 8005a70:	6823      	ldr	r3, [r4, #0]
 8005a72:	4620      	mov	r0, r4
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005a78:	4629      	mov	r1, r5
 8005a7a:	4630      	mov	r0, r6
 8005a7c:	f011 ff74 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005a80:	682b      	ldr	r3, [r5, #0]
 8005a82:	4628      	mov	r0, r5
 8005a84:	691b      	ldr	r3, [r3, #16]
 8005a86:	4798      	blx	r3
    newTransition->invalidate();
 8005a88:	682b      	ldr	r3, [r5, #0]
 8005a8a:	4628      	mov	r0, r5
 8005a8c:	695b      	ldr	r3, [r3, #20]
}
 8005a8e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a92:	4718      	bx	r3
    model->bind(newPresenter);
 8005a94:	4623      	mov	r3, r4
 8005a96:	e7e2      	b.n	8005a5e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005a98:	0802c944 	.word	0x0802c944
 8005a9c:	0802da3b 	.word	0x0802da3b
 8005aa0:	0802cae0 	.word	0x0802cae0
 8005aa4:	0802cb27 	.word	0x0802cb27
 8005aa8:	0802cbca 	.word	0x0802cbca
 8005aac:	20012dfc 	.word	0x20012dfc
 8005ab0:	20012df8 	.word	0x20012df8

08005ab4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005ab4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ab8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005abc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005abe:	68a0      	ldr	r0, [r4, #8]
 8005ac0:	6803      	ldr	r3, [r0, #0]
 8005ac2:	6a1b      	ldr	r3, [r3, #32]
 8005ac4:	4798      	blx	r3
 8005ac6:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005aca:	4298      	cmp	r0, r3
 8005acc:	d805      	bhi.n	8005ada <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8005ace:	4b42      	ldr	r3, [pc, #264]	; (8005bd8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8005ad0:	4a42      	ldr	r2, [pc, #264]	; (8005bdc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005ad2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005ad4:	4842      	ldr	r0, [pc, #264]	; (8005be0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005ad6:	f025 f879 	bl	802abcc <__assert_func>
 8005ada:	6860      	ldr	r0, [r4, #4]
 8005adc:	6803      	ldr	r3, [r0, #0]
 8005ade:	6a1b      	ldr	r3, [r3, #32]
 8005ae0:	4798      	blx	r3
 8005ae2:	280f      	cmp	r0, #15
 8005ae4:	d803      	bhi.n	8005aee <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005ae6:	4b3f      	ldr	r3, [pc, #252]	; (8005be4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005ae8:	4a3c      	ldr	r2, [pc, #240]	; (8005bdc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005aea:	21a4      	movs	r1, #164	; 0xa4
 8005aec:	e7f2      	b.n	8005ad4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005aee:	68e0      	ldr	r0, [r4, #12]
 8005af0:	6803      	ldr	r3, [r0, #0]
 8005af2:	6a1b      	ldr	r3, [r3, #32]
 8005af4:	4798      	blx	r3
 8005af6:	2837      	cmp	r0, #55	; 0x37
 8005af8:	d803      	bhi.n	8005b02 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005afa:	4b3b      	ldr	r3, [pc, #236]	; (8005be8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005afc:	4a37      	ldr	r2, [pc, #220]	; (8005bdc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005afe:	21a5      	movs	r1, #165	; 0xa5
 8005b00:	e7e8      	b.n	8005ad4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005b02:	f010 f905 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005b06:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005b0a:	3004      	adds	r0, #4
 8005b0c:	f010 f966 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005b10:	f8d9 0000 	ldr.w	r0, [r9]
 8005b14:	b110      	cbz	r0, 8005b1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005b16:	6803      	ldr	r3, [r0, #0]
 8005b18:	68db      	ldr	r3, [r3, #12]
 8005b1a:	4798      	blx	r3
    if (*currentTrans)
 8005b1c:	f8d9 0000 	ldr.w	r0, [r9]
 8005b20:	b110      	cbz	r0, 8005b28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005b22:	6803      	ldr	r3, [r0, #0]
 8005b24:	681b      	ldr	r3, [r3, #0]
 8005b26:	4798      	blx	r3
    if (*currentScreen)
 8005b28:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005bf0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005b2c:	f8d8 0000 	ldr.w	r0, [r8]
 8005b30:	b110      	cbz	r0, 8005b38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005b32:	6803      	ldr	r3, [r0, #0]
 8005b34:	695b      	ldr	r3, [r3, #20]
 8005b36:	4798      	blx	r3
    if (*currentPresenter)
 8005b38:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005b3c:	b110      	cbz	r0, 8005b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005b3e:	6803      	ldr	r3, [r0, #0]
 8005b40:	685b      	ldr	r3, [r3, #4]
 8005b42:	4798      	blx	r3
    if (*currentScreen)
 8005b44:	f8d8 0000 	ldr.w	r0, [r8]
 8005b48:	b110      	cbz	r0, 8005b50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005b4a:	6803      	ldr	r3, [r0, #0]
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	4798      	blx	r3
    if (*currentPresenter)
 8005b50:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005b54:	b110      	cbz	r0, 8005b5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005b56:	6803      	ldr	r3, [r0, #0]
 8005b58:	689b      	ldr	r3, [r3, #8]
 8005b5a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005b5c:	68e0      	ldr	r0, [r4, #12]
 8005b5e:	2100      	movs	r1, #0
 8005b60:	f7ff fa76 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005b64:	2114      	movs	r1, #20
 8005b66:	4605      	mov	r5, r0
 8005b68:	f7ff fa76 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005b6c:	68a0      	ldr	r0, [r4, #8]
 8005b6e:	6803      	ldr	r3, [r0, #0]
 8005b70:	2100      	movs	r1, #0
 8005b72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b74:	4798      	blx	r3
 8005b76:	4606      	mov	r6, r0
 8005b78:	f003 fede 	bl	8009938 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005b7c:	6860      	ldr	r0, [r4, #4]
 8005b7e:	6803      	ldr	r3, [r0, #0]
 8005b80:	2100      	movs	r1, #0
 8005b82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b84:	4798      	blx	r3
 8005b86:	4631      	mov	r1, r6
 8005b88:	4604      	mov	r4, r0
 8005b8a:	f003 feaf 	bl	80098ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005b8e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005b92:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005b96:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005b9a:	b1dc      	cbz	r4, 8005bd4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005b9c:	1d23      	adds	r3, r4, #4
 8005b9e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ba2:	6833      	ldr	r3, [r6, #0]
 8005ba4:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ba8:	4630      	mov	r0, r6
 8005baa:	68db      	ldr	r3, [r3, #12]
 8005bac:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005bae:	4798      	blx	r3
    newPresenter->activate();
 8005bb0:	6823      	ldr	r3, [r4, #0]
 8005bb2:	4620      	mov	r0, r4
 8005bb4:	681b      	ldr	r3, [r3, #0]
 8005bb6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005bb8:	4629      	mov	r1, r5
 8005bba:	4630      	mov	r0, r6
 8005bbc:	f011 fed4 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005bc0:	682b      	ldr	r3, [r5, #0]
 8005bc2:	4628      	mov	r0, r5
 8005bc4:	691b      	ldr	r3, [r3, #16]
 8005bc6:	4798      	blx	r3
    newTransition->invalidate();
 8005bc8:	682b      	ldr	r3, [r5, #0]
 8005bca:	4628      	mov	r0, r5
 8005bcc:	695b      	ldr	r3, [r3, #20]
}
 8005bce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bd2:	4718      	bx	r3
    model->bind(newPresenter);
 8005bd4:	4623      	mov	r3, r4
 8005bd6:	e7e2      	b.n	8005b9e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005bd8:	0802c944 	.word	0x0802c944
 8005bdc:	0802db7d 	.word	0x0802db7d
 8005be0:	0802cae0 	.word	0x0802cae0
 8005be4:	0802cb27 	.word	0x0802cb27
 8005be8:	0802cbca 	.word	0x0802cbca
 8005bec:	20012dfc 	.word	0x20012dfc
 8005bf0:	20012df8 	.word	0x20012df8

08005bf4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005bf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005bf8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005bfc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005bfe:	68a0      	ldr	r0, [r4, #8]
 8005c00:	6803      	ldr	r3, [r0, #0]
 8005c02:	6a1b      	ldr	r3, [r3, #32]
 8005c04:	4798      	blx	r3
 8005c06:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005c0a:	d205      	bcs.n	8005c18 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005c0c:	4b42      	ldr	r3, [pc, #264]	; (8005d18 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005c0e:	4a43      	ldr	r2, [pc, #268]	; (8005d1c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005c10:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005c12:	4843      	ldr	r0, [pc, #268]	; (8005d20 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005c14:	f024 ffda 	bl	802abcc <__assert_func>
 8005c18:	6860      	ldr	r0, [r4, #4]
 8005c1a:	6803      	ldr	r3, [r0, #0]
 8005c1c:	6a1b      	ldr	r3, [r3, #32]
 8005c1e:	4798      	blx	r3
 8005c20:	280f      	cmp	r0, #15
 8005c22:	d803      	bhi.n	8005c2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005c24:	4b3f      	ldr	r3, [pc, #252]	; (8005d24 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005c26:	4a3d      	ldr	r2, [pc, #244]	; (8005d1c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005c28:	21a4      	movs	r1, #164	; 0xa4
 8005c2a:	e7f2      	b.n	8005c12 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005c2c:	68e0      	ldr	r0, [r4, #12]
 8005c2e:	6803      	ldr	r3, [r0, #0]
 8005c30:	6a1b      	ldr	r3, [r3, #32]
 8005c32:	4798      	blx	r3
 8005c34:	2837      	cmp	r0, #55	; 0x37
 8005c36:	d803      	bhi.n	8005c40 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005c38:	4b3b      	ldr	r3, [pc, #236]	; (8005d28 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005c3a:	4a38      	ldr	r2, [pc, #224]	; (8005d1c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005c3c:	21a5      	movs	r1, #165	; 0xa5
 8005c3e:	e7e8      	b.n	8005c12 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005c40:	f010 f866 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005c44:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005d2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005c48:	3004      	adds	r0, #4
 8005c4a:	f010 f8c7 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005c4e:	f8d9 0000 	ldr.w	r0, [r9]
 8005c52:	b110      	cbz	r0, 8005c5a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005c54:	6803      	ldr	r3, [r0, #0]
 8005c56:	68db      	ldr	r3, [r3, #12]
 8005c58:	4798      	blx	r3
    if (*currentTrans)
 8005c5a:	f8d9 0000 	ldr.w	r0, [r9]
 8005c5e:	b110      	cbz	r0, 8005c66 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005c60:	6803      	ldr	r3, [r0, #0]
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	4798      	blx	r3
    if (*currentScreen)
 8005c66:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005d30 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005c6a:	f8d8 0000 	ldr.w	r0, [r8]
 8005c6e:	b110      	cbz	r0, 8005c76 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005c70:	6803      	ldr	r3, [r0, #0]
 8005c72:	695b      	ldr	r3, [r3, #20]
 8005c74:	4798      	blx	r3
    if (*currentPresenter)
 8005c76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c7a:	b110      	cbz	r0, 8005c82 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005c7c:	6803      	ldr	r3, [r0, #0]
 8005c7e:	685b      	ldr	r3, [r3, #4]
 8005c80:	4798      	blx	r3
    if (*currentScreen)
 8005c82:	f8d8 0000 	ldr.w	r0, [r8]
 8005c86:	b110      	cbz	r0, 8005c8e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005c88:	6803      	ldr	r3, [r0, #0]
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	4798      	blx	r3
    if (*currentPresenter)
 8005c8e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c92:	b110      	cbz	r0, 8005c9a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005c94:	6803      	ldr	r3, [r0, #0]
 8005c96:	689b      	ldr	r3, [r3, #8]
 8005c98:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c9a:	68e0      	ldr	r0, [r4, #12]
 8005c9c:	2100      	movs	r1, #0
 8005c9e:	f7ff f9d7 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ca2:	2114      	movs	r1, #20
 8005ca4:	4605      	mov	r5, r0
 8005ca6:	f7ff f9d7 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005caa:	68a0      	ldr	r0, [r4, #8]
 8005cac:	6803      	ldr	r3, [r0, #0]
 8005cae:	2100      	movs	r1, #0
 8005cb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cb2:	4798      	blx	r3
 8005cb4:	4606      	mov	r6, r0
 8005cb6:	f003 fde5 	bl	8009884 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005cba:	6860      	ldr	r0, [r4, #4]
 8005cbc:	6803      	ldr	r3, [r0, #0]
 8005cbe:	2100      	movs	r1, #0
 8005cc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cc2:	4798      	blx	r3
 8005cc4:	4631      	mov	r1, r6
 8005cc6:	4604      	mov	r4, r0
 8005cc8:	f003 fdb6 	bl	8009838 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005ccc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005cd0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005cd4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005cd8:	b1dc      	cbz	r4, 8005d12 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005cda:	1d23      	adds	r3, r4, #4
 8005cdc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ce0:	6833      	ldr	r3, [r6, #0]
 8005ce2:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ce6:	4630      	mov	r0, r6
 8005ce8:	68db      	ldr	r3, [r3, #12]
 8005cea:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005cec:	4798      	blx	r3
    newPresenter->activate();
 8005cee:	6823      	ldr	r3, [r4, #0]
 8005cf0:	4620      	mov	r0, r4
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005cf6:	4629      	mov	r1, r5
 8005cf8:	4630      	mov	r0, r6
 8005cfa:	f011 fe35 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005cfe:	682b      	ldr	r3, [r5, #0]
 8005d00:	4628      	mov	r0, r5
 8005d02:	691b      	ldr	r3, [r3, #16]
 8005d04:	4798      	blx	r3
    newTransition->invalidate();
 8005d06:	682b      	ldr	r3, [r5, #0]
 8005d08:	4628      	mov	r0, r5
 8005d0a:	695b      	ldr	r3, [r3, #20]
}
 8005d0c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005d10:	4718      	bx	r3
    model->bind(newPresenter);
 8005d12:	4623      	mov	r3, r4
 8005d14:	e7e2      	b.n	8005cdc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005d16:	bf00      	nop
 8005d18:	0802c944 	.word	0x0802c944
 8005d1c:	0802dcbf 	.word	0x0802dcbf
 8005d20:	0802cae0 	.word	0x0802cae0
 8005d24:	0802cb27 	.word	0x0802cb27
 8005d28:	0802cbca 	.word	0x0802cbca
 8005d2c:	20012dfc 	.word	0x20012dfc
 8005d30:	20012df8 	.word	0x20012df8

08005d34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005d38:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005d3c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005d3e:	68a0      	ldr	r0, [r4, #8]
 8005d40:	6803      	ldr	r3, [r0, #0]
 8005d42:	6a1b      	ldr	r3, [r3, #32]
 8005d44:	4798      	blx	r3
 8005d46:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005d4a:	d205      	bcs.n	8005d58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005d4c:	4b42      	ldr	r3, [pc, #264]	; (8005e58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005d4e:	4a43      	ldr	r2, [pc, #268]	; (8005e5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005d50:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005d52:	4843      	ldr	r0, [pc, #268]	; (8005e60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005d54:	f024 ff3a 	bl	802abcc <__assert_func>
 8005d58:	6860      	ldr	r0, [r4, #4]
 8005d5a:	6803      	ldr	r3, [r0, #0]
 8005d5c:	6a1b      	ldr	r3, [r3, #32]
 8005d5e:	4798      	blx	r3
 8005d60:	280f      	cmp	r0, #15
 8005d62:	d803      	bhi.n	8005d6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005d64:	4b3f      	ldr	r3, [pc, #252]	; (8005e64 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005d66:	4a3d      	ldr	r2, [pc, #244]	; (8005e5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005d68:	21a4      	movs	r1, #164	; 0xa4
 8005d6a:	e7f2      	b.n	8005d52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d6c:	68e0      	ldr	r0, [r4, #12]
 8005d6e:	6803      	ldr	r3, [r0, #0]
 8005d70:	6a1b      	ldr	r3, [r3, #32]
 8005d72:	4798      	blx	r3
 8005d74:	2837      	cmp	r0, #55	; 0x37
 8005d76:	d803      	bhi.n	8005d80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005d78:	4b3b      	ldr	r3, [pc, #236]	; (8005e68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005d7a:	4a38      	ldr	r2, [pc, #224]	; (8005e5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005d7c:	21a5      	movs	r1, #165	; 0xa5
 8005d7e:	e7e8      	b.n	8005d52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005d80:	f00f ffc6 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005d84:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005e6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005d88:	3004      	adds	r0, #4
 8005d8a:	f010 f827 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d8e:	f8d9 0000 	ldr.w	r0, [r9]
 8005d92:	b110      	cbz	r0, 8005d9a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005d94:	6803      	ldr	r3, [r0, #0]
 8005d96:	68db      	ldr	r3, [r3, #12]
 8005d98:	4798      	blx	r3
    if (*currentTrans)
 8005d9a:	f8d9 0000 	ldr.w	r0, [r9]
 8005d9e:	b110      	cbz	r0, 8005da6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005da0:	6803      	ldr	r3, [r0, #0]
 8005da2:	681b      	ldr	r3, [r3, #0]
 8005da4:	4798      	blx	r3
    if (*currentScreen)
 8005da6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005e70 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005daa:	f8d8 0000 	ldr.w	r0, [r8]
 8005dae:	b110      	cbz	r0, 8005db6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005db0:	6803      	ldr	r3, [r0, #0]
 8005db2:	695b      	ldr	r3, [r3, #20]
 8005db4:	4798      	blx	r3
    if (*currentPresenter)
 8005db6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005dba:	b110      	cbz	r0, 8005dc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005dbc:	6803      	ldr	r3, [r0, #0]
 8005dbe:	685b      	ldr	r3, [r3, #4]
 8005dc0:	4798      	blx	r3
    if (*currentScreen)
 8005dc2:	f8d8 0000 	ldr.w	r0, [r8]
 8005dc6:	b110      	cbz	r0, 8005dce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005dc8:	6803      	ldr	r3, [r0, #0]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	4798      	blx	r3
    if (*currentPresenter)
 8005dce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005dd2:	b110      	cbz	r0, 8005dda <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005dd4:	6803      	ldr	r3, [r0, #0]
 8005dd6:	689b      	ldr	r3, [r3, #8]
 8005dd8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005dda:	68e0      	ldr	r0, [r4, #12]
 8005ddc:	2100      	movs	r1, #0
 8005dde:	f7ff f937 	bl	8005050 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005de2:	2114      	movs	r1, #20
 8005de4:	4605      	mov	r5, r0
 8005de6:	f7ff f937 	bl	8005058 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005dea:	68a0      	ldr	r0, [r4, #8]
 8005dec:	6803      	ldr	r3, [r0, #0]
 8005dee:	2100      	movs	r1, #0
 8005df0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005df2:	4798      	blx	r3
 8005df4:	4606      	mov	r6, r0
 8005df6:	f003 fc01 	bl	80095fc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005dfa:	6860      	ldr	r0, [r4, #4]
 8005dfc:	6803      	ldr	r3, [r0, #0]
 8005dfe:	2100      	movs	r1, #0
 8005e00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e02:	4798      	blx	r3
 8005e04:	4631      	mov	r1, r6
 8005e06:	4604      	mov	r4, r0
 8005e08:	f003 fbd2 	bl	80095b0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005e0c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005e10:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005e14:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005e18:	b1dc      	cbz	r4, 8005e52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005e1a:	1d23      	adds	r3, r4, #4
 8005e1c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005e20:	6833      	ldr	r3, [r6, #0]
 8005e22:	f8c4 a008 	str.w	sl, [r4, #8]
 8005e26:	4630      	mov	r0, r6
 8005e28:	68db      	ldr	r3, [r3, #12]
 8005e2a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005e2c:	4798      	blx	r3
    newPresenter->activate();
 8005e2e:	6823      	ldr	r3, [r4, #0]
 8005e30:	4620      	mov	r0, r4
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005e36:	4629      	mov	r1, r5
 8005e38:	4630      	mov	r0, r6
 8005e3a:	f011 fd95 	bl	8017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005e3e:	682b      	ldr	r3, [r5, #0]
 8005e40:	4628      	mov	r0, r5
 8005e42:	691b      	ldr	r3, [r3, #16]
 8005e44:	4798      	blx	r3
    newTransition->invalidate();
 8005e46:	682b      	ldr	r3, [r5, #0]
 8005e48:	4628      	mov	r0, r5
 8005e4a:	695b      	ldr	r3, [r3, #20]
}
 8005e4c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e50:	4718      	bx	r3
    model->bind(newPresenter);
 8005e52:	4623      	mov	r3, r4
 8005e54:	e7e2      	b.n	8005e1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005e56:	bf00      	nop
 8005e58:	0802c944 	.word	0x0802c944
 8005e5c:	0802ddeb 	.word	0x0802ddeb
 8005e60:	0802cae0 	.word	0x0802cae0
 8005e64:	0802cb27 	.word	0x0802cb27
 8005e68:	0802cbca 	.word	0x0802cbca
 8005e6c:	20012dfc 	.word	0x20012dfc
 8005e70:	20012df8 	.word	0x20012df8

08005e74 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005e74:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005e76:	4770      	bx	lr

08005e78 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005e78:	4770      	bx	lr

08005e7a <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005e7a:	4770      	bx	lr

08005e7c <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005e7c:	b510      	push	{r4, lr}
}
 8005e7e:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005e82:	4604      	mov	r4, r0
}
 8005e84:	f023 ffbb 	bl	8029dfe <_ZdlPvj>
 8005e88:	4620      	mov	r0, r4
 8005e8a:	bd10      	pop	{r4, pc}

08005e8c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8005e90:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005e94:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005e96:	2600      	movs	r6, #0
 8005e98:	ed2d 8b02 	vpush	{d8}
 8005e9c:	8483      	strh	r3, [r0, #36]	; 0x24
 8005e9e:	4bb2      	ldr	r3, [pc, #712]	; (8006168 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8005ea0:	6286      	str	r6, [r0, #40]	; 0x28
 8005ea2:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005ea6:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005eaa:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8005eae:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8005eb2:	f848 3b2c 	str.w	r3, [r8], #44
 8005eb6:	b08b      	sub	sp, #44	; 0x2c
 8005eb8:	4604      	mov	r4, r0
 8005eba:	4640      	mov	r0, r8
 8005ebc:	f7fd f972 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005ec0:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005ec4:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005ec8:	4618      	mov	r0, r3
 8005eca:	9303      	str	r3, [sp, #12]
 8005ecc:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8005ed0:	f7fd f968 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005ed4:	4658      	mov	r0, fp
 8005ed6:	f7fd f965 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005eda:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8005ede:	4da3      	ldr	r5, [pc, #652]	; (800616c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8005ee0:	4650      	mov	r0, sl
 8005ee2:	f7fd f95f 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005ee6:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005eea:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8005eee:	4648      	mov	r0, r9
 8005ef0:	f7fd f958 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005ef4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005ef8:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005efc:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005efe:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8005f02:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8005f06:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005f0a:	f7fd f94b 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005f0e:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8005f12:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8005f16:	4638      	mov	r0, r7
 8005f18:	f00c feb4 	bl	8012c84 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8005f1c:	4a94      	ldr	r2, [pc, #592]	; (8006170 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8005f1e:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8005f20:	4640      	mov	r0, r8
 8005f22:	226d      	movs	r2, #109	; 0x6d
 8005f24:	21d9      	movs	r1, #217	; 0xd9
 8005f26:	ad04      	add	r5, sp, #16
 8005f28:	f7fd f909 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005f2c:	f04f 33ff 	mov.w	r3, #4294967295
 8005f30:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8005f32:	4641      	mov	r1, r8
 8005f34:	4628      	mov	r0, r5
        linespace = space;
 8005f36:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005f3a:	f00c fb6b 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f42:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8005f46:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005f4a:	4b8a      	ldr	r3, [pc, #552]	; (8006174 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005f4c:	9308      	str	r3, [sp, #32]
 8005f4e:	223f      	movs	r2, #63	; 0x3f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8005f50:	a908      	add	r1, sp, #32
 8005f52:	4640      	mov	r0, r8
 8005f54:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005f58:	f00c fdf6 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005f5c:	4641      	mov	r1, r8
 8005f5e:	4620      	mov	r0, r4
 8005f60:	f00a fc3e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8005f64:	9b03      	ldr	r3, [sp, #12]
 8005f66:	4631      	mov	r1, r6
 8005f68:	4618      	mov	r0, r3
 8005f6a:	226d      	movs	r2, #109	; 0x6d
 8005f6c:	f7fd f8e7 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8005f70:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8005f72:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8005f76:	f04f 32ff 	mov.w	r2, #4294967295
 8005f7a:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005f7e:	4619      	mov	r1, r3
 8005f80:	4628      	mov	r0, r5
 8005f82:	f00c fb47 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f86:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f8a:	4b7a      	ldr	r3, [pc, #488]	; (8006174 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005f8c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8005f8e:	9b03      	ldr	r3, [sp, #12]
 8005f90:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8005f94:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005f98:	2240      	movs	r2, #64	; 0x40
 8005f9a:	a908      	add	r1, sp, #32
 8005f9c:	4618      	mov	r0, r3
 8005f9e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005fa2:	f00c fdd1 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8005fa6:	9b03      	ldr	r3, [sp, #12]
 8005fa8:	4620      	mov	r0, r4
 8005faa:	4619      	mov	r1, r3
 8005fac:	f00a fc18 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8005fb0:	4632      	mov	r2, r6
 8005fb2:	4658      	mov	r0, fp
 8005fb4:	2171      	movs	r1, #113	; 0x71
 8005fb6:	f7fd f8c2 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005fba:	f04f 32ff 	mov.w	r2, #4294967295
 8005fbe:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8005fc2:	4659      	mov	r1, fp
 8005fc4:	4628      	mov	r0, r5
        linespace = space;
 8005fc6:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005fca:	f00c fb23 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fd2:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8005fd6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fda:	4b66      	ldr	r3, [pc, #408]	; (8006174 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005fdc:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005fde:	a908      	add	r1, sp, #32
 8005fe0:	2341      	movs	r3, #65	; 0x41
 8005fe2:	4658      	mov	r0, fp
 8005fe4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005fe8:	f00c fdae 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005fec:	4659      	mov	r1, fp
 8005fee:	4620      	mov	r0, r4
 8005ff0:	f00a fbf6 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8005ff4:	4650      	mov	r0, sl
 8005ff6:	227c      	movs	r2, #124	; 0x7c
 8005ff8:	214c      	movs	r1, #76	; 0x4c
 8005ffa:	f7fd f8a0 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8005ffe:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8006002:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8006006:	f04f 32ff 	mov.w	r2, #4294967295
 800600a:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 800600e:	4651      	mov	r1, sl
 8006010:	4628      	mov	r0, r5
 8006012:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006016:	4798      	blx	r3
 8006018:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800601c:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8006020:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006024:	4b53      	ldr	r3, [pc, #332]	; (8006174 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8006026:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8006028:	a908      	add	r1, sp, #32
 800602a:	233e      	movs	r3, #62	; 0x3e
 800602c:	4650      	mov	r0, sl
 800602e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006032:	f00c fd89 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8006036:	4651      	mov	r1, sl
 8006038:	4620      	mov	r0, r4
 800603a:	f00a fbd1 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 800603e:	4648      	mov	r0, r9
 8006040:	228b      	movs	r2, #139	; 0x8b
 8006042:	2156      	movs	r1, #86	; 0x56
 8006044:	f7fd f87b 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006048:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 800604c:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8006050:	f04f 32ff 	mov.w	r2, #4294967295
 8006054:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8006058:	4649      	mov	r1, r9
 800605a:	4628      	mov	r0, r5
 800605c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006060:	4798      	blx	r3
 8006062:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006066:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 800606a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800606e:	4b41      	ldr	r3, [pc, #260]	; (8006174 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8006070:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8006072:	a908      	add	r1, sp, #32
 8006074:	233d      	movs	r3, #61	; 0x3d
 8006076:	4648      	mov	r0, r9
 8006078:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800607c:	f00c fd64 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8006080:	4649      	mov	r1, r9
 8006082:	4620      	mov	r0, r4
 8006084:	f00a fbac 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8006088:	ee18 0a10 	vmov	r0, s16
 800608c:	229a      	movs	r2, #154	; 0x9a
 800608e:	2156      	movs	r1, #86	; 0x56
 8006090:	f7fd f855 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006094:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8006098:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 800609c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80060a0:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 80060a4:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 80060a8:	4628      	mov	r0, r5
 80060aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80060ae:	4798      	blx	r3
 80060b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80060b4:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 80060b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060bc:	4b2d      	ldr	r3, [pc, #180]	; (8006174 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80060be:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 80060c0:	ee18 0a10 	vmov	r0, s16
 80060c4:	233c      	movs	r3, #60	; 0x3c
 80060c6:	a908      	add	r1, sp, #32
 80060c8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80060cc:	f00c fd3c 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 80060d0:	ee18 1a10 	vmov	r1, s16
 80060d4:	4620      	mov	r0, r4
 80060d6:	f00a fb83 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80060da:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80060dc:	a908      	add	r1, sp, #32
 80060de:	4638      	mov	r0, r7
 80060e0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80060e4:	f00a fb0e 	bl	8010704 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 80060e8:	2212      	movs	r2, #18
 80060ea:	4638      	mov	r0, r7
 80060ec:	211c      	movs	r1, #28
 80060ee:	f7fd f826 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80060f2:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80060f6:	4638      	mov	r0, r7
 80060f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80060fa:	21b8      	movs	r1, #184	; 0xb8
 80060fc:	4798      	blx	r3
        setHeight(height);
 80060fe:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8006102:	4638      	mov	r0, r7
 8006104:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006106:	216a      	movs	r1, #106	; 0x6a
 8006108:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 800610a:	225c      	movs	r2, #92	; 0x5c
 800610c:	4611      	mov	r1, r2
 800610e:	4638      	mov	r0, r7
 8006110:	f00c fe63 	bl	8012dda <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8006114:	4638      	mov	r0, r7
 8006116:	225a      	movs	r2, #90	; 0x5a
 8006118:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800611c:	f00c fee2 	bl	8012ee4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8006120:	4633      	mov	r3, r6
 8006122:	225a      	movs	r2, #90	; 0x5a
 8006124:	4638      	mov	r0, r7
 8006126:	9600      	str	r6, [sp, #0]
 8006128:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800612c:	f00a f997 	bl	801045e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8006130:	4631      	mov	r1, r6
 8006132:	4638      	mov	r0, r7
 8006134:	f00c fe80 	bl	8012e38 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8006138:	2335      	movs	r3, #53	; 0x35
 800613a:	2208      	movs	r2, #8
 800613c:	4638      	mov	r0, r7
 800613e:	2105      	movs	r1, #5
 8006140:	f00c fe36 	bl	8012db0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006144:	4638      	mov	r0, r7
 8006146:	2101      	movs	r1, #1
 8006148:	f00c fdd4 	bl	8012cf4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800614c:	4638      	mov	r0, r7
 800614e:	2101      	movs	r1, #1
 8006150:	f00c fdd3 	bl	8012cfa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8006154:	4620      	mov	r0, r4
 8006156:	4639      	mov	r1, r7
 8006158:	f00a fb42 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800615c:	4620      	mov	r0, r4
 800615e:	b00b      	add	sp, #44	; 0x2c
 8006160:	ecbd 8b02 	vpop	{d8}
 8006164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006168:	0802e054 	.word	0x0802e054
 800616c:	0802c7d0 	.word	0x0802c7d0
 8006170:	00a900f0 	.word	0x00a900f0
 8006174:	0802c7c0 	.word	0x0802c7c0

08006178 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006178:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800617a:	4770      	bx	lr

0800617c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800617c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800617e:	4770      	bx	lr

08006180 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006180:	4770      	bx	lr

08006182 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8006182:	888b      	ldrh	r3, [r1, #4]
 8006184:	69c0      	ldr	r0, [r0, #28]
 8006186:	680a      	ldr	r2, [r1, #0]
 8006188:	0adb      	lsrs	r3, r3, #11
 800618a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800618e:	4410      	add	r0, r2
 8006190:	4770      	bx	lr

08006192 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8006192:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8006194:	b1c2      	cbz	r2, 80061c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8006196:	7b13      	ldrb	r3, [r2, #12]
 8006198:	b1b3      	cbz	r3, 80061c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800619a:	7b54      	ldrb	r4, [r2, #13]
 800619c:	7ad2      	ldrb	r2, [r2, #11]
 800619e:	0224      	lsls	r4, r4, #8
 80061a0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80061a4:	4314      	orrs	r4, r2
 80061a6:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80061a8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80061aa:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80061ae:	8813      	ldrh	r3, [r2, #0]
 80061b0:	428b      	cmp	r3, r1
 80061b2:	d102      	bne.n	80061ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80061b4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80061b8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80061ba:	d805      	bhi.n	80061c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80061bc:	3801      	subs	r0, #1
 80061be:	b280      	uxth	r0, r0
 80061c0:	3204      	adds	r2, #4
 80061c2:	2800      	cmp	r0, #0
 80061c4:	d1f3      	bne.n	80061ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80061c6:	e7f7      	b.n	80061b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80061c8:	2000      	movs	r0, #0
 80061ca:	e7f5      	b.n	80061b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080061cc <_ZN8touchgfx13GeneratedFontD0Ev>:
 80061cc:	b510      	push	{r4, lr}
 80061ce:	212c      	movs	r1, #44	; 0x2c
 80061d0:	4604      	mov	r4, r0
 80061d2:	f023 fe14 	bl	8029dfe <_ZdlPvj>
 80061d6:	4620      	mov	r0, r4
 80061d8:	bd10      	pop	{r4, pc}
	...

080061dc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80061dc:	b530      	push	{r4, r5, lr}
 80061de:	b08b      	sub	sp, #44	; 0x2c
 80061e0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80061e2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80061e6:	9508      	str	r5, [sp, #32]
 80061e8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80061ec:	9507      	str	r5, [sp, #28]
 80061ee:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80061f2:	9506      	str	r5, [sp, #24]
 80061f4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80061f8:	9505      	str	r5, [sp, #20]
 80061fa:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80061fe:	9504      	str	r5, [sp, #16]
 8006200:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006204:	9503      	str	r5, [sp, #12]
 8006206:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800620a:	9502      	str	r5, [sp, #8]
 800620c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006210:	9501      	str	r5, [sp, #4]
 8006212:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8006216:	9500      	str	r5, [sp, #0]
 8006218:	f010 ff10 	bl	801703c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800621c:	4b06      	ldr	r3, [pc, #24]	; (8006238 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800621e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006220:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006222:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006224:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006226:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006228:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800622a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800622c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800622e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006230:	4620      	mov	r0, r4
 8006232:	b00b      	add	sp, #44	; 0x2c
 8006234:	bd30      	pop	{r4, r5, pc}
 8006236:	bf00      	nop
 8006238:	0802e0e8 	.word	0x0802e0e8

0800623c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800623c:	4770      	bx	lr

0800623e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800623e:	4770      	bx	lr

08006240 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006240:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006242:	68c2      	ldr	r2, [r0, #12]
 8006244:	6844      	ldr	r4, [r0, #4]
 8006246:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006248:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800624a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800624e:	07d2      	lsls	r2, r2, #31
 8006250:	bf48      	it	mi
 8006252:	5962      	ldrmi	r2, [r4, r5]
 8006254:	689b      	ldr	r3, [r3, #8]
    }
 8006256:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006258:	bf48      	it	mi
 800625a:	58d3      	ldrmi	r3, [r2, r3]
 800625c:	4718      	bx	r3

0800625e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800625e:	6843      	ldr	r3, [r0, #4]
 8006260:	b12b      	cbz	r3, 800626e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006262:	6883      	ldr	r3, [r0, #8]
 8006264:	b92b      	cbnz	r3, 8006272 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006266:	68c0      	ldr	r0, [r0, #12]
 8006268:	f000 0001 	and.w	r0, r0, #1
 800626c:	4770      	bx	lr
 800626e:	4618      	mov	r0, r3
 8006270:	4770      	bx	lr
 8006272:	2001      	movs	r0, #1
    }
 8006274:	4770      	bx	lr

08006276 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006276:	b510      	push	{r4, lr}
 8006278:	2110      	movs	r1, #16
 800627a:	4604      	mov	r4, r0
 800627c:	f023 fdbf 	bl	8029dfe <_ZdlPvj>
 8006280:	4620      	mov	r0, r4
 8006282:	bd10      	pop	{r4, pc}

08006284 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006284:	b510      	push	{r4, lr}
 8006286:	4b03      	ldr	r3, [pc, #12]	; (8006294 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006288:	6003      	str	r3, [r0, #0]
 800628a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800628c:	f00e f83e 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006290:	4620      	mov	r0, r4
 8006292:	bd10      	pop	{r4, pc}
 8006294:	0802e160 	.word	0x0802e160

08006298 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006298:	b507      	push	{r0, r1, r2, lr}
 800629a:	4b07      	ldr	r3, [pc, #28]	; (80062b8 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800629c:	6003      	str	r3, [r0, #0]
 800629e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80062a0:	f00e f834 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80062a4:	9801      	ldr	r0, [sp, #4]
 80062a6:	f241 117c 	movw	r1, #4476	; 0x117c
 80062aa:	f023 fda8 	bl	8029dfe <_ZdlPvj>
 80062ae:	9801      	ldr	r0, [sp, #4]
 80062b0:	b003      	add	sp, #12
 80062b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80062b6:	bf00      	nop
 80062b8:	0802e160 	.word	0x0802e160

080062bc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80062bc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 80062be:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 80062c2:	4299      	cmp	r1, r3
{
 80062c4:	4604      	mov	r4, r0
 80062c6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 80062c8:	d103      	bne.n	80062d2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80062ca:	f00f fd21 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80062ce:	f7fe fb1d 	bl	800490c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80062d2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80062d6:	429d      	cmp	r5, r3
 80062d8:	d103      	bne.n	80062e2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80062da:	f00f fd19 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80062de:	f7fe fba5 	bl	8004a2c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80062e2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80062e6:	429d      	cmp	r5, r3
 80062e8:	d103      	bne.n	80062f2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80062ea:	f00f fd11 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80062ee:	f7fe fbdd 	bl	8004aac <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80062f2:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80062f6:	42a5      	cmp	r5, r4
 80062f8:	d10a      	bne.n	8006310 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80062fa:	4806      	ldr	r0, [pc, #24]	; (8006314 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80062fc:	2200      	movs	r2, #0
 80062fe:	2120      	movs	r1, #32
 8006300:	f004 f908 	bl	800a514 <HAL_GPIO_WritePin>
 8006304:	f00f fd04 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006308:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800630c:	f7fe bbde 	b.w	8004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006310:	bd38      	pop	{r3, r4, r5, pc}
 8006312:	bf00      	nop
 8006314:	40021000 	.word	0x40021000

08006318 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800631c:	ed2d 8b06 	vpush	{d8-d10}
 8006320:	4604      	mov	r4, r0
 8006322:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006324:	46a3      	mov	fp, r4
        : presenter(0)
 8006326:	2500      	movs	r5, #0
 8006328:	f011 f972 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 800632c:	4b6a      	ldr	r3, [pc, #424]	; (80064d8 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800632e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006330:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006334:	2226      	movs	r2, #38	; 0x26
 8006336:	4629      	mov	r1, r5
 8006338:	4658      	mov	r0, fp
 800633a:	f024 fe4c 	bl	802afd6 <memset>
 800633e:	4658      	mov	r0, fp
 8006340:	f7fc ff1e 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8006344:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006348:	26ff      	movs	r6, #255	; 0xff
 800634a:	4b64      	ldr	r3, [pc, #400]	; (80064dc <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 800634c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800634e:	2226      	movs	r2, #38	; 0x26
 8006350:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006354:	4629      	mov	r1, r5
 8006356:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800635a:	4650      	mov	r0, sl
        : color(col)
 800635c:	66a5      	str	r5, [r4, #104]	; 0x68
 800635e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006362:	f024 fe38 	bl	802afd6 <memset>
 8006366:	4650      	mov	r0, sl
 8006368:	f7fc ff0a 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 800636c:	4b5c      	ldr	r3, [pc, #368]	; (80064e0 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800636e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006370:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8006374:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006378:	a90c      	add	r1, sp, #48	; 0x30
 800637a:	4650      	mov	r0, sl
 800637c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006380:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006384:	f00c ffbb 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006388:	4648      	mov	r0, r9
 800638a:	f7fc ff0b 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 800638e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006392:	4b54      	ldr	r3, [pc, #336]	; (80064e4 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8006394:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006398:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800639c:	4638      	mov	r0, r7
 800639e:	f00b fe77 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 80063a2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80063a6:	4618      	mov	r0, r3
 80063a8:	9303      	str	r3, [sp, #12]
 80063aa:	f7fb fa69 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80063ae:	4b4e      	ldr	r3, [pc, #312]	; (80064e8 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 80063b0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80063b4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80063b8:	3324      	adds	r3, #36	; 0x24
 80063ba:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80063be:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80063c2:	4640      	mov	r0, r8
 80063c4:	f7fc feee 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80063c8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80063cc:	4618      	mov	r0, r3
 80063ce:	ee08 3a10 	vmov	s16, r3
 80063d2:	f7fc fee7 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80063d6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80063da:	4618      	mov	r0, r3
 80063dc:	ee08 3a90 	vmov	s17, r3
 80063e0:	f7fc fee0 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80063e4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80063e8:	4618      	mov	r0, r3
 80063ea:	ee09 3a10 	vmov	s18, r3
 80063ee:	f00d f8c7 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063f2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80063f6:	4618      	mov	r0, r3
 80063f8:	ee09 3a90 	vmov	s19, r3
 80063fc:	f00d f8c0 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006400:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006404:	4618      	mov	r0, r3
 8006406:	ee0a 3a10 	vmov	s20, r3
 800640a:	f00d f8b9 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800640e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8006412:	4618      	mov	r0, r3
 8006414:	ee0a 3a90 	vmov	s21, r3
 8006418:	f00c ff4a 	bl	80132b0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800641c:	4a33      	ldr	r2, [pc, #204]	; (80064ec <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800641e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006422:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8006426:	4a32      	ldr	r2, [pc, #200]	; (80064f0 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006428:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800642c:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8006430:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8006434:	f00d ff60 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006438:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800643c:	462a      	mov	r2, r5
 800643e:	4658      	mov	r0, fp
 8006440:	9300      	str	r3, [sp, #0]
 8006442:	4629      	mov	r1, r5
 8006444:	23f0      	movs	r3, #240	; 0xf0
 8006446:	f7fc fe87 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 800644a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800644c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006450:	66a3      	str	r3, [r4, #104]	; 0x68
 8006452:	4659      	mov	r1, fp
 8006454:	4630      	mov	r0, r6
 8006456:	f00a f9c3 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800645a:	462a      	mov	r2, r5
 800645c:	4650      	mov	r0, sl
 800645e:	4629      	mov	r1, r5
 8006460:	f7fc fe6d 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006464:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006466:	4650      	mov	r0, sl
 8006468:	a90c      	add	r1, sp, #48	; 0x30
 800646a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800646e:	f00c ff46 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006472:	4651      	mov	r1, sl
 8006474:	4630      	mov	r0, r6
 8006476:	f00a f9b3 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800647a:	f44f 729a 	mov.w	r2, #308	; 0x134
 800647e:	2156      	movs	r1, #86	; 0x56
 8006480:	4648      	mov	r0, r9
 8006482:	f7fc fe5c 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006486:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800648a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800648e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006492:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006496:	4650      	mov	r0, sl
 8006498:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800649c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80064a0:	4649      	mov	r1, r9
 80064a2:	4798      	blx	r3
 80064a4:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80064a8:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80064ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80064b0:	4b10      	ldr	r3, [pc, #64]	; (80064f4 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 80064b2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 80064b4:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 80064b8:	b92b      	cbnz	r3, 80064c6 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 80064ba:	4b0f      	ldr	r3, [pc, #60]	; (80064f8 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 80064bc:	4a0f      	ldr	r2, [pc, #60]	; (80064fc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80064be:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80064c0:	480f      	ldr	r0, [pc, #60]	; (8006500 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 80064c2:	f024 fb83 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80064c6:	4b0f      	ldr	r3, [pc, #60]	; (8006504 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80064c8:	881b      	ldrh	r3, [r3, #0]
 80064ca:	2b3a      	cmp	r3, #58	; 0x3a
 80064cc:	d81e      	bhi.n	800650c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 80064ce:	4b0e      	ldr	r3, [pc, #56]	; (8006508 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80064d0:	4a0a      	ldr	r2, [pc, #40]	; (80064fc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80064d2:	2161      	movs	r1, #97	; 0x61
 80064d4:	e7f4      	b.n	80064c0 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80064d6:	bf00      	nop
 80064d8:	0802e160 	.word	0x0802e160
 80064dc:	0802f120 	.word	0x0802f120
 80064e0:	0802f2e8 	.word	0x0802f2e8
 80064e4:	0802c7d0 	.word	0x0802c7d0
 80064e8:	0802ee54 	.word	0x0802ee54
 80064ec:	0802e148 	.word	0x0802e148
 80064f0:	080062bd 	.word	0x080062bd
 80064f4:	20012e0c 	.word	0x20012e0c
 80064f8:	0802c610 	.word	0x0802c610
 80064fc:	0802c712 	.word	0x0802c712
 8006500:	0802c68d 	.word	0x0802c68d
 8006504:	20012e10 	.word	0x20012e10
 8006508:	0802c6d4 	.word	0x0802c6d4
        return texts->getText(typedTextId);
 800650c:	4ba5      	ldr	r3, [pc, #660]	; (80067a4 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800650e:	213a      	movs	r1, #58	; 0x3a
 8006510:	6818      	ldr	r0, [r3, #0]
 8006512:	f002 fdf7 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8006516:	4aa4      	ldr	r2, [pc, #656]	; (80067a8 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8006518:	4603      	mov	r3, r0
 800651a:	2104      	movs	r1, #4
 800651c:	4650      	mov	r0, sl
 800651e:	f012 fd67 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8006522:	4648      	mov	r0, r9
        wc1 = value;
 8006524:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006528:	f00c faee 	bl	8012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800652c:	4b9f      	ldr	r3, [pc, #636]	; (80067ac <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 800652e:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006530:	a90c      	add	r1, sp, #48	; 0x30
 8006532:	233b      	movs	r3, #59	; 0x3b
 8006534:	4648      	mov	r0, r9
 8006536:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800653a:	f00c fb05 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800653e:	4649      	mov	r1, r9
 8006540:	4630      	mov	r0, r6
 8006542:	f00a f94d 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006546:	230a      	movs	r3, #10
 8006548:	9300      	str	r3, [sp, #0]
 800654a:	2232      	movs	r2, #50	; 0x32
 800654c:	23f0      	movs	r3, #240	; 0xf0
 800654e:	4629      	mov	r1, r5
 8006550:	4638      	mov	r0, r7
 8006552:	f7fc fe01 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006556:	9b03      	ldr	r3, [sp, #12]
 8006558:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800655c:	22a0      	movs	r2, #160	; 0xa0
 800655e:	4611      	mov	r1, r2
 8006560:	4638      	mov	r0, r7
 8006562:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006566:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800656a:	f00b fea7 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800656e:	22a0      	movs	r2, #160	; 0xa0
 8006570:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006574:	4638      	mov	r0, r7
 8006576:	f00b feac 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800657a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800657e:	2b20      	cmp	r3, #32
 8006580:	d005      	beq.n	800658e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8006582:	2320      	movs	r3, #32
 8006584:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006588:	4638      	mov	r0, r7
 800658a:	f00b fda1 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800658e:	4638      	mov	r0, r7
 8006590:	2101      	movs	r1, #1
 8006592:	f00b fea9 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006596:	4639      	mov	r1, r7
 8006598:	4630      	mov	r0, r6
 800659a:	ad04      	add	r5, sp, #16
        color = newColor;
 800659c:	f04f 37ff 	mov.w	r7, #4294967295
 80065a0:	f00a f91e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80065a4:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80065a8:	2223      	movs	r2, #35	; 0x23
 80065aa:	4640      	mov	r0, r8
 80065ac:	2145      	movs	r1, #69	; 0x45
 80065ae:	f7fc fdc6 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80065b2:	4641      	mov	r1, r8
 80065b4:	4628      	mov	r0, r5
        color = newColor;
 80065b6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80065ba:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80065be:	f00c f829 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 80065c6:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80065ca:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80065ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065d2:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 80067ac <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80065d6:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80065da:	2360      	movs	r3, #96	; 0x60
 80065dc:	4649      	mov	r1, r9
 80065de:	4640      	mov	r0, r8
 80065e0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80065e4:	f00c fab0 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065e8:	4641      	mov	r1, r8
 80065ea:	4630      	mov	r0, r6
 80065ec:	f00a f8f8 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80065f0:	ee18 0a10 	vmov	r0, s16
 80065f4:	220c      	movs	r2, #12
 80065f6:	2136      	movs	r1, #54	; 0x36
 80065f8:	f7fc fda1 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80065fc:	ee18 1a10 	vmov	r1, s16
 8006600:	4628      	mov	r0, r5
        color = newColor;
 8006602:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006606:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800660a:	f00c f803 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800660e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006612:	ee18 3a10 	vmov	r3, s16
 8006616:	333c      	adds	r3, #60	; 0x3c
 8006618:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800661c:	2361      	movs	r3, #97	; 0x61
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800661e:	ee18 0a10 	vmov	r0, s16
 8006622:	4649      	mov	r1, r9
 8006624:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006628:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800662c:	f00c fa8c 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006630:	ee18 1a10 	vmov	r1, s16
 8006634:	4630      	mov	r0, r6
 8006636:	f00a f8d3 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 800663a:	ee18 0a90 	vmov	r0, s17
 800663e:	223c      	movs	r2, #60	; 0x3c
 8006640:	2158      	movs	r1, #88	; 0x58
 8006642:	f7fc fd7c 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006646:	ee18 1a90 	vmov	r1, s17
 800664a:	4628      	mov	r0, r5
        color = newColor;
 800664c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006650:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006654:	f00b ffde 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006658:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800665c:	ee18 3a90 	vmov	r3, s17
 8006660:	333c      	adds	r3, #60	; 0x3c
 8006662:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006666:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006668:	ee18 0a90 	vmov	r0, s17
 800666c:	4649      	mov	r1, r9
 800666e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006672:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006676:	f00c fa67 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800667a:	ee18 1a90 	vmov	r1, s17
 800667e:	4630      	mov	r0, r6
 8006680:	f00a f8ae 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006684:	ee19 0a10 	vmov	r0, s18
 8006688:	22f0      	movs	r2, #240	; 0xf0
 800668a:	2121      	movs	r1, #33	; 0x21
 800668c:	f7fc fd57 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006690:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006694:	464a      	mov	r2, r9
 8006696:	f04f 0802 	mov.w	r8, #2
 800669a:	a90b      	add	r1, sp, #44	; 0x2c
 800669c:	ee19 0a10 	vmov	r0, s18
 80066a0:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80066a4:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 80066a8:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066ac:	f00c fc31 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80066b0:	2362      	movs	r3, #98	; 0x62
 80066b2:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80066b6:	350c      	adds	r5, #12
        updateTextPosition();
 80066b8:	ee19 0a10 	vmov	r0, s18
 80066bc:	f7fc fd94 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80066c0:	ee19 1a10 	vmov	r1, s18
 80066c4:	4630      	mov	r0, r6
        colorPressed = col;
 80066c6:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80066ca:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80066ce:	f00a f887 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80066d2:	ee19 0a90 	vmov	r0, s19
 80066d6:	22aa      	movs	r2, #170	; 0xaa
 80066d8:	2121      	movs	r1, #33	; 0x21
 80066da:	f7fc fd30 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066de:	464a      	mov	r2, r9
 80066e0:	a90b      	add	r1, sp, #44	; 0x2c
 80066e2:	ee19 0a90 	vmov	r0, s19
 80066e6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80066ea:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80066ee:	f00c fc10 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80066f2:	2363      	movs	r3, #99	; 0x63
 80066f4:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80066f8:	ee19 0a90 	vmov	r0, s19
 80066fc:	f7fc fd74 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006700:	ee19 1a90 	vmov	r1, s19
 8006704:	4630      	mov	r0, r6
        colorPressed = col;
 8006706:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800670a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800670e:	f00a f867 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006712:	ee1a 0a10 	vmov	r0, s20
 8006716:	2264      	movs	r2, #100	; 0x64
 8006718:	2121      	movs	r1, #33	; 0x21
 800671a:	f7fc fd10 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800671e:	464a      	mov	r2, r9
 8006720:	a90b      	add	r1, sp, #44	; 0x2c
 8006722:	ee1a 0a10 	vmov	r0, s20
 8006726:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800672a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800672e:	f00c fbf0 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006732:	2364      	movs	r3, #100	; 0x64
 8006734:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8006738:	ee1a 0a10 	vmov	r0, s20
 800673c:	f7fc fd54 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006740:	ee1a 1a10 	vmov	r1, s20
 8006744:	4630      	mov	r0, r6
        colorPressed = col;
 8006746:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800674a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800674e:	f00a f847 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8006752:	ee1a 0a90 	vmov	r0, s21
 8006756:	2205      	movs	r2, #5
 8006758:	21c6      	movs	r1, #198	; 0xc6
 800675a:	f7fc fcf0 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800675e:	2301      	movs	r3, #1
 8006760:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006764:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006766:	ee1a 0a90 	vmov	r0, s21
 800676a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800676e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006772:	aa0a      	add	r2, sp, #40	; 0x28
 8006774:	ab0b      	add	r3, sp, #44	; 0x2c
 8006776:	a909      	add	r1, sp, #36	; 0x24
 8006778:	f8cd 9000 	str.w	r9, [sp]
 800677c:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006780:	f00c fd01 	bl	8013186 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006784:	4630      	mov	r0, r6
 8006786:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800678a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800678e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8006792:	f00a f825 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006796:	4620      	mov	r0, r4
 8006798:	b00f      	add	sp, #60	; 0x3c
 800679a:	ecbd 8b06 	vpop	{d8-d10}
 800679e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067a2:	bf00      	nop
 80067a4:	20012e18 	.word	0x20012e18
 80067a8:	0802c74a 	.word	0x0802c74a
 80067ac:	0802c7c0 	.word	0x0802c7c0

080067b0 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 80067b0:	4770      	bx	lr

080067b2 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067b2:	4770      	bx	lr

080067b4 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80067b4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067b6:	68c2      	ldr	r2, [r0, #12]
 80067b8:	6844      	ldr	r4, [r0, #4]
 80067ba:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80067bc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80067be:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80067c2:	07d2      	lsls	r2, r2, #31
 80067c4:	bf48      	it	mi
 80067c6:	5962      	ldrmi	r2, [r4, r5]
 80067c8:	689b      	ldr	r3, [r3, #8]
    }
 80067ca:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067cc:	bf48      	it	mi
 80067ce:	58d3      	ldrmi	r3, [r2, r3]
 80067d0:	4718      	bx	r3

080067d2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80067d2:	6843      	ldr	r3, [r0, #4]
 80067d4:	b12b      	cbz	r3, 80067e2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80067d6:	6883      	ldr	r3, [r0, #8]
 80067d8:	b92b      	cbnz	r3, 80067e6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80067da:	68c0      	ldr	r0, [r0, #12]
 80067dc:	f000 0001 	and.w	r0, r0, #1
 80067e0:	4770      	bx	lr
 80067e2:	4618      	mov	r0, r3
 80067e4:	4770      	bx	lr
 80067e6:	2001      	movs	r0, #1
    }
 80067e8:	4770      	bx	lr

080067ea <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067ea:	b510      	push	{r4, lr}
 80067ec:	2110      	movs	r1, #16
 80067ee:	4604      	mov	r4, r0
 80067f0:	f023 fb05 	bl	8029dfe <_ZdlPvj>
 80067f4:	4620      	mov	r0, r4
 80067f6:	bd10      	pop	{r4, pc}

080067f8 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80067f8:	b510      	push	{r4, lr}
 80067fa:	4b03      	ldr	r3, [pc, #12]	; (8006808 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80067fc:	6003      	str	r3, [r0, #0]
 80067fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006800:	f00d fd84 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006804:	4620      	mov	r0, r4
 8006806:	bd10      	pop	{r4, pc}
 8006808:	0802e1ac 	.word	0x0802e1ac

0800680c <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800680c:	b507      	push	{r0, r1, r2, lr}
 800680e:	4b07      	ldr	r3, [pc, #28]	; (800682c <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006810:	6003      	str	r3, [r0, #0]
 8006812:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006814:	f00d fd7a 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006818:	9801      	ldr	r0, [sp, #4]
 800681a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800681e:	f023 faee 	bl	8029dfe <_ZdlPvj>
 8006822:	9801      	ldr	r0, [sp, #4]
 8006824:	b003      	add	sp, #12
 8006826:	f85d fb04 	ldr.w	pc, [sp], #4
 800682a:	bf00      	nop
 800682c:	0802e1ac 	.word	0x0802e1ac

08006830 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006830:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006832:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006836:	4299      	cmp	r1, r3
{
 8006838:	4604      	mov	r4, r0
 800683a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800683c:	d103      	bne.n	8006846 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800683e:	f00f fa67 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006842:	f7fe f853 	bl	80048ec <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006846:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800684a:	429d      	cmp	r5, r3
 800684c:	d103      	bne.n	8006856 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800684e:	f00f fa5f 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006852:	f7fe f87b 	bl	800494c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006856:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800685a:	42a5      	cmp	r5, r4
 800685c:	d105      	bne.n	800686a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800685e:	f00f fa57 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006862:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006866:	f7fe b8a1 	b.w	80049ac <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800686a:	bd38      	pop	{r3, r4, r5, pc}

0800686c <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 800686c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006870:	ed2d 8b06 	vpush	{d8-d10}
 8006874:	4604      	mov	r4, r0
 8006876:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006878:	46a3      	mov	fp, r4
 800687a:	2500      	movs	r5, #0
 800687c:	f010 fec8 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8006880:	4b66      	ldr	r3, [pc, #408]	; (8006a1c <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006882:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006884:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006888:	2226      	movs	r2, #38	; 0x26
 800688a:	4629      	mov	r1, r5
 800688c:	4658      	mov	r0, fp
 800688e:	f024 fba2 	bl	802afd6 <memset>
 8006892:	4658      	mov	r0, fp
 8006894:	f7fc fc74 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8006898:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800689c:	26ff      	movs	r6, #255	; 0xff
 800689e:	4b60      	ldr	r3, [pc, #384]	; (8006a20 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 80068a0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80068a2:	2226      	movs	r2, #38	; 0x26
 80068a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80068a8:	4629      	mov	r1, r5
 80068aa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80068ae:	4650      	mov	r0, sl
 80068b0:	66a5      	str	r5, [r4, #104]	; 0x68
 80068b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068b6:	f024 fb8e 	bl	802afd6 <memset>
 80068ba:	4650      	mov	r0, sl
 80068bc:	f7fc fc60 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80068c0:	4b58      	ldr	r3, [pc, #352]	; (8006a24 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 80068c2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80068c4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80068c8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80068cc:	a90a      	add	r1, sp, #40	; 0x28
 80068ce:	4650      	mov	r0, sl
 80068d0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80068d4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80068d8:	f00c fd11 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80068dc:	4648      	mov	r0, r9
 80068de:	f7fc fc61 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80068e2:	4b51      	ldr	r3, [pc, #324]	; (8006a28 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80068e4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80068e8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80068ec:	4618      	mov	r0, r3
 80068ee:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80068f2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80068f6:	ee08 3a90 	vmov	s17, r3
 80068fa:	f7fc fc53 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80068fe:	4638      	mov	r0, r7
 8006900:	f00b fbc6 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 8006904:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006908:	4618      	mov	r0, r3
 800690a:	9303      	str	r3, [sp, #12]
 800690c:	f7fa ffb8 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006910:	4b46      	ldr	r3, [pc, #280]	; (8006a2c <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8006912:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006916:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800691a:	3324      	adds	r3, #36	; 0x24
 800691c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006920:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006924:	4640      	mov	r0, r8
 8006926:	f7fc fc3d 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 800692a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800692e:	4618      	mov	r0, r3
 8006930:	ee08 3a10 	vmov	s16, r3
 8006934:	f7fc fc36 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006938:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800693c:	4618      	mov	r0, r3
 800693e:	ee09 3a10 	vmov	s18, r3
 8006942:	f00c fe1d 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006946:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800694a:	4618      	mov	r0, r3
 800694c:	ee09 3a90 	vmov	s19, r3
 8006950:	f00c fe16 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006954:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006958:	4618      	mov	r0, r3
 800695a:	ee0a 3a10 	vmov	s20, r3
 800695e:	f00c fe0f 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006962:	4a33      	ldr	r2, [pc, #204]	; (8006a30 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006964:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006968:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800696c:	4a31      	ldr	r2, [pc, #196]	; (8006a34 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800696e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006972:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006976:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800697a:	f00d fcbd 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800697e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006982:	462a      	mov	r2, r5
 8006984:	4658      	mov	r0, fp
 8006986:	9300      	str	r3, [sp, #0]
 8006988:	4629      	mov	r1, r5
 800698a:	23f0      	movs	r3, #240	; 0xf0
 800698c:	f7fc fbe4 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006990:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006992:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006996:	66a3      	str	r3, [r4, #104]	; 0x68
 8006998:	4659      	mov	r1, fp
 800699a:	4630      	mov	r0, r6
 800699c:	f009 ff20 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80069a0:	462a      	mov	r2, r5
 80069a2:	4650      	mov	r0, sl
 80069a4:	4629      	mov	r1, r5
 80069a6:	f7fc fbca 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80069aa:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80069ac:	4650      	mov	r0, sl
 80069ae:	a90a      	add	r1, sp, #40	; 0x28
 80069b0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80069b4:	f00c fca3 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80069b8:	4651      	mov	r1, sl
 80069ba:	4630      	mov	r0, r6
 80069bc:	f009 ff10 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80069c0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80069c4:	2156      	movs	r1, #86	; 0x56
 80069c6:	4648      	mov	r0, r9
 80069c8:	f7fc fbb9 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80069cc:	f04f 33ff 	mov.w	r3, #4294967295
 80069d0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80069d4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80069d8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80069dc:	f10d 0b10 	add.w	fp, sp, #16
 80069e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80069e4:	4649      	mov	r1, r9
 80069e6:	4658      	mov	r0, fp
 80069e8:	4798      	blx	r3
 80069ea:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80069ee:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80069f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80069f6:	4b10      	ldr	r3, [pc, #64]	; (8006a38 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80069f8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80069fa:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80069fe:	b92b      	cbnz	r3, 8006a0c <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006a00:	4b0e      	ldr	r3, [pc, #56]	; (8006a3c <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8006a02:	4a0f      	ldr	r2, [pc, #60]	; (8006a40 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006a04:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a06:	480f      	ldr	r0, [pc, #60]	; (8006a44 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006a08:	f024 f8e0 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006a0c:	4b0e      	ldr	r3, [pc, #56]	; (8006a48 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a0e:	881b      	ldrh	r3, [r3, #0]
 8006a10:	2b2b      	cmp	r3, #43	; 0x2b
 8006a12:	d81d      	bhi.n	8006a50 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006a14:	4b0d      	ldr	r3, [pc, #52]	; (8006a4c <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006a16:	4a0a      	ldr	r2, [pc, #40]	; (8006a40 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006a18:	2161      	movs	r1, #97	; 0x61
 8006a1a:	e7f4      	b.n	8006a06 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8006a1c:	0802e1ac 	.word	0x0802e1ac
 8006a20:	0802f120 	.word	0x0802f120
 8006a24:	0802f2e8 	.word	0x0802f2e8
 8006a28:	0802c7d0 	.word	0x0802c7d0
 8006a2c:	0802ee54 	.word	0x0802ee54
 8006a30:	0802e194 	.word	0x0802e194
 8006a34:	08006831 	.word	0x08006831
 8006a38:	20012e0c 	.word	0x20012e0c
 8006a3c:	0802c610 	.word	0x0802c610
 8006a40:	0802c712 	.word	0x0802c712
 8006a44:	0802c68d 	.word	0x0802c68d
 8006a48:	20012e10 	.word	0x20012e10
 8006a4c:	0802c6d4 	.word	0x0802c6d4
        return texts->getText(typedTextId);
 8006a50:	4b95      	ldr	r3, [pc, #596]	; (8006ca8 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8006a52:	212b      	movs	r1, #43	; 0x2b
 8006a54:	6818      	ldr	r0, [r3, #0]
 8006a56:	f002 fb55 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8006a5a:	4a94      	ldr	r2, [pc, #592]	; (8006cac <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006a5c:	4603      	mov	r3, r0
 8006a5e:	2104      	movs	r1, #4
 8006a60:	4650      	mov	r0, sl
 8006a62:	f012 fac5 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006a66:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006a6a:	4648      	mov	r0, r9
 8006a6c:	f00c f84c 	bl	8012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006a70:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006cb0 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006a74:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006a78:	232c      	movs	r3, #44	; 0x2c
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006a7a:	a90a      	add	r1, sp, #40	; 0x28
 8006a7c:	4648      	mov	r0, r9
 8006a7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a82:	f00c f861 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a86:	4649      	mov	r1, r9
 8006a88:	4630      	mov	r0, r6
 8006a8a:	f009 fea9 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006a8e:	223c      	movs	r2, #60	; 0x3c
 8006a90:	ee18 0a90 	vmov	r0, s17
 8006a94:	213d      	movs	r1, #61	; 0x3d
 8006a96:	f7fc fb52 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a9a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006a9e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006aa2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006aa6:	4658      	mov	r0, fp
        linespace = space;
 8006aa8:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006aac:	f00b fdb2 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ab0:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006ab4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006ab8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006abc:	2339      	movs	r3, #57	; 0x39
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006abe:	ee18 0a90 	vmov	r0, s17
 8006ac2:	a90a      	add	r1, sp, #40	; 0x28
 8006ac4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ac8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006acc:	f00c f83c 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ad0:	ee18 1a90 	vmov	r1, s17
 8006ad4:	4630      	mov	r0, r6
 8006ad6:	f009 fe83 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006ada:	230a      	movs	r3, #10
 8006adc:	9300      	str	r3, [sp, #0]
 8006ade:	2232      	movs	r2, #50	; 0x32
 8006ae0:	23f0      	movs	r3, #240	; 0xf0
 8006ae2:	4629      	mov	r1, r5
 8006ae4:	4638      	mov	r0, r7
 8006ae6:	f7fc fb37 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006aea:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006aee:	22a0      	movs	r2, #160	; 0xa0
 8006af0:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006af4:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006af8:	9b03      	ldr	r3, [sp, #12]
 8006afa:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006afe:	4611      	mov	r1, r2
 8006b00:	4638      	mov	r0, r7
 8006b02:	f00b fbdb 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006b06:	22a0      	movs	r2, #160	; 0xa0
 8006b08:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006b0c:	4638      	mov	r0, r7
 8006b0e:	f00b fbe0 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006b12:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006b16:	2b20      	cmp	r3, #32
 8006b18:	d005      	beq.n	8006b26 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006b1a:	2320      	movs	r3, #32
 8006b1c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006b20:	4638      	mov	r0, r7
 8006b22:	f00b fad5 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006b26:	4638      	mov	r0, r7
 8006b28:	2101      	movs	r1, #1
 8006b2a:	f00b fbdd 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006b2e:	4639      	mov	r1, r7
 8006b30:	4630      	mov	r0, r6
 8006b32:	f009 fe55 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006b36:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006b3a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006b3c:	2223      	movs	r2, #35	; 0x23
 8006b3e:	4640      	mov	r0, r8
        linespace = space;
 8006b40:	f04f 0a00 	mov.w	sl, #0
 8006b44:	2145      	movs	r1, #69	; 0x45
 8006b46:	f7fc fafa 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006b4a:	4641      	mov	r1, r8
 8006b4c:	4638      	mov	r0, r7
        color = newColor;
 8006b4e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006b52:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006b56:	f00b fd5d 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b5a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006b5e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006b62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b66:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006cb0 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006b6a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006b6e:	235e      	movs	r3, #94	; 0x5e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006b70:	a90a      	add	r1, sp, #40	; 0x28
 8006b72:	4640      	mov	r0, r8
 8006b74:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b78:	f00b ffe6 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b7c:	4641      	mov	r1, r8
 8006b7e:	4630      	mov	r0, r6
 8006b80:	f009 fe2e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006b84:	ee18 0a10 	vmov	r0, s16
 8006b88:	220c      	movs	r2, #12
 8006b8a:	2136      	movs	r1, #54	; 0x36
 8006b8c:	f7fc fad7 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006b90:	ee18 1a10 	vmov	r1, s16
 8006b94:	4638      	mov	r0, r7
        color = newColor;
 8006b96:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006b9a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006b9e:	f00b fd39 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ba2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006ba6:	ee18 3a10 	vmov	r3, s16
 8006baa:	333c      	adds	r3, #60	; 0x3c
 8006bac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006bb0:	235f      	movs	r3, #95	; 0x5f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006bb2:	ee18 0a10 	vmov	r0, s16
 8006bb6:	a90a      	add	r1, sp, #40	; 0x28
 8006bb8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006bbc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006bc0:	f00b ffc2 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006bc4:	ee18 1a10 	vmov	r1, s16
 8006bc8:	4630      	mov	r0, r6
 8006bca:	f009 fe09 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006bce:	ee19 0a10 	vmov	r0, s18
 8006bd2:	22f0      	movs	r2, #240	; 0xf0
 8006bd4:	2121      	movs	r1, #33	; 0x21
 8006bd6:	f7fc fab2 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006bda:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006bde:	aa0a      	add	r2, sp, #40	; 0x28
 8006be0:	f04f 0802 	mov.w	r8, #2
 8006be4:	a909      	add	r1, sp, #36	; 0x24
 8006be6:	ee19 0a10 	vmov	r0, s18
 8006bea:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006bee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006bf2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006bf6:	f00c f98c 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006bfa:	235d      	movs	r3, #93	; 0x5d
 8006bfc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006c00:	3710      	adds	r7, #16
        updateTextPosition();
 8006c02:	ee19 0a10 	vmov	r0, s18
 8006c06:	f7fc faef 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c0a:	ee19 1a10 	vmov	r1, s18
 8006c0e:	4630      	mov	r0, r6
        colorPressed = col;
 8006c10:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006c14:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006c18:	f009 fde2 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006c1c:	ee19 0a90 	vmov	r0, s19
 8006c20:	22aa      	movs	r2, #170	; 0xaa
 8006c22:	2121      	movs	r1, #33	; 0x21
 8006c24:	f7fc fa8b 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c28:	aa0a      	add	r2, sp, #40	; 0x28
 8006c2a:	a909      	add	r1, sp, #36	; 0x24
 8006c2c:	ee19 0a90 	vmov	r0, s19
 8006c30:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006c34:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006c38:	f00c f96b 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c3c:	235c      	movs	r3, #92	; 0x5c
 8006c3e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006c42:	ee19 0a90 	vmov	r0, s19
 8006c46:	f7fc facf 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c4a:	ee19 1a90 	vmov	r1, s19
 8006c4e:	4630      	mov	r0, r6
        colorPressed = col;
 8006c50:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006c54:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006c58:	f009 fdc2 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006c5c:	ee1a 0a10 	vmov	r0, s20
 8006c60:	2264      	movs	r2, #100	; 0x64
 8006c62:	2121      	movs	r1, #33	; 0x21
 8006c64:	f7fc fa6b 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c68:	aa0a      	add	r2, sp, #40	; 0x28
 8006c6a:	a909      	add	r1, sp, #36	; 0x24
 8006c6c:	ee1a 0a10 	vmov	r0, s20
 8006c70:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006c74:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006c78:	f00c f94b 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c7c:	235b      	movs	r3, #91	; 0x5b
        updateTextPosition();
 8006c7e:	ee1a 0a10 	vmov	r0, s20
 8006c82:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006c86:	f7fc faaf 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c8a:	4630      	mov	r0, r6
        colorPressed = col;
 8006c8c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006c90:	ee1a 1a10 	vmov	r1, s20
 8006c94:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006c98:	f009 fda2 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c9c:	4620      	mov	r0, r4
 8006c9e:	b00d      	add	sp, #52	; 0x34
 8006ca0:	ecbd 8b06 	vpop	{d8-d10}
 8006ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ca8:	20012e18 	.word	0x20012e18
 8006cac:	0802c74a 	.word	0x0802c74a
 8006cb0:	0802c7c0 	.word	0x0802c7c0

08006cb4 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006cb4:	4770      	bx	lr

08006cb6 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006cb6:	4770      	bx	lr

08006cb8 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006cb8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006cba:	68c2      	ldr	r2, [r0, #12]
 8006cbc:	6844      	ldr	r4, [r0, #4]
 8006cbe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006cc0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006cc2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006cc6:	07d2      	lsls	r2, r2, #31
 8006cc8:	bf48      	it	mi
 8006cca:	5962      	ldrmi	r2, [r4, r5]
 8006ccc:	689b      	ldr	r3, [r3, #8]
    }
 8006cce:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006cd0:	bf48      	it	mi
 8006cd2:	58d3      	ldrmi	r3, [r2, r3]
 8006cd4:	4718      	bx	r3

08006cd6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006cd6:	6843      	ldr	r3, [r0, #4]
 8006cd8:	b12b      	cbz	r3, 8006ce6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006cda:	6883      	ldr	r3, [r0, #8]
 8006cdc:	b92b      	cbnz	r3, 8006cea <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006cde:	68c0      	ldr	r0, [r0, #12]
 8006ce0:	f000 0001 	and.w	r0, r0, #1
 8006ce4:	4770      	bx	lr
 8006ce6:	4618      	mov	r0, r3
 8006ce8:	4770      	bx	lr
 8006cea:	2001      	movs	r0, #1
    }
 8006cec:	4770      	bx	lr

08006cee <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006cee:	b510      	push	{r4, lr}
 8006cf0:	2110      	movs	r1, #16
 8006cf2:	4604      	mov	r4, r0
 8006cf4:	f023 f883 	bl	8029dfe <_ZdlPvj>
 8006cf8:	4620      	mov	r0, r4
 8006cfa:	bd10      	pop	{r4, pc}

08006cfc <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006cfc:	b510      	push	{r4, lr}
 8006cfe:	4b03      	ldr	r3, [pc, #12]	; (8006d0c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006d00:	6003      	str	r3, [r0, #0]
 8006d02:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006d04:	f00d fb02 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006d08:	4620      	mov	r0, r4
 8006d0a:	bd10      	pop	{r4, pc}
 8006d0c:	0802e1f8 	.word	0x0802e1f8

08006d10 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006d10:	b507      	push	{r0, r1, r2, lr}
 8006d12:	4b07      	ldr	r3, [pc, #28]	; (8006d30 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006d14:	6003      	str	r3, [r0, #0]
 8006d16:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006d18:	f00d faf8 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006d1c:	9801      	ldr	r0, [sp, #4]
 8006d1e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006d22:	f023 f86c 	bl	8029dfe <_ZdlPvj>
 8006d26:	9801      	ldr	r0, [sp, #4]
 8006d28:	b003      	add	sp, #12
 8006d2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006d2e:	bf00      	nop
 8006d30:	0802e1f8 	.word	0x0802e1f8

08006d34 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006d34:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006d36:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006d3a:	4299      	cmp	r1, r3
{
 8006d3c:	4604      	mov	r4, r0
 8006d3e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006d40:	d103      	bne.n	8006d4a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006d42:	f00e ffe5 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006d46:	f7fd fdf1 	bl	800492c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006d4a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006d4e:	429d      	cmp	r5, r3
 8006d50:	d103      	bne.n	8006d5a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006d52:	f00e ffdd 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006d56:	f7fd fe59 	bl	8004a0c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006d5a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006d5e:	42a5      	cmp	r5, r4
 8006d60:	d105      	bne.n	8006d6e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006d62:	f00e ffd5 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006d66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006d6a:	f7fd be3f 	b.w	80049ec <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006d6e:	bd38      	pop	{r3, r4, r5, pc}

08006d70 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d74:	ed2d 8b06 	vpush	{d8-d10}
 8006d78:	4604      	mov	r4, r0
 8006d7a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006d7c:	46a3      	mov	fp, r4
 8006d7e:	2500      	movs	r5, #0
 8006d80:	f010 fc46 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8006d84:	4b66      	ldr	r3, [pc, #408]	; (8006f20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006d86:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006d88:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006d8c:	2226      	movs	r2, #38	; 0x26
 8006d8e:	4629      	mov	r1, r5
 8006d90:	4658      	mov	r0, fp
 8006d92:	f024 f920 	bl	802afd6 <memset>
 8006d96:	4658      	mov	r0, fp
 8006d98:	f7fc f9f2 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8006d9c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006da0:	26ff      	movs	r6, #255	; 0xff
 8006da2:	4b60      	ldr	r3, [pc, #384]	; (8006f24 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006da4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006da6:	2226      	movs	r2, #38	; 0x26
 8006da8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006dac:	4629      	mov	r1, r5
 8006dae:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006db2:	4650      	mov	r0, sl
 8006db4:	66a5      	str	r5, [r4, #104]	; 0x68
 8006db6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006dba:	f024 f90c 	bl	802afd6 <memset>
 8006dbe:	4650      	mov	r0, sl
 8006dc0:	f7fc f9de 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8006dc4:	4b58      	ldr	r3, [pc, #352]	; (8006f28 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006dc6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006dc8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006dcc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006dd0:	a90a      	add	r1, sp, #40	; 0x28
 8006dd2:	4650      	mov	r0, sl
 8006dd4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006dd8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ddc:	f00c fa8f 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006de0:	4648      	mov	r0, r9
 8006de2:	f7fc f9df 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006de6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006dea:	4b50      	ldr	r3, [pc, #320]	; (8006f2c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006dec:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006df0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006df4:	4638      	mov	r0, r7
 8006df6:	f00b f94b 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 8006dfa:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006dfe:	4618      	mov	r0, r3
 8006e00:	9303      	str	r3, [sp, #12]
 8006e02:	f7fa fd3d 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006e06:	4b4a      	ldr	r3, [pc, #296]	; (8006f30 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006e08:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006e0c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006e10:	3324      	adds	r3, #36	; 0x24
 8006e12:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006e16:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006e1a:	4640      	mov	r0, r8
 8006e1c:	f7fc f9c2 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006e20:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006e24:	4618      	mov	r0, r3
 8006e26:	ee08 3a10 	vmov	s16, r3
 8006e2a:	f7fc f9bb 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006e2e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006e32:	4618      	mov	r0, r3
 8006e34:	ee08 3a90 	vmov	s17, r3
 8006e38:	f7fc f9b4 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006e3c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006e40:	4618      	mov	r0, r3
 8006e42:	ee09 3a10 	vmov	s18, r3
 8006e46:	f00c fb9b 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006e4a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006e4e:	4618      	mov	r0, r3
 8006e50:	ee09 3a90 	vmov	s19, r3
 8006e54:	f00c fb94 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006e58:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006e5c:	4618      	mov	r0, r3
 8006e5e:	ee0a 3a10 	vmov	s20, r3
 8006e62:	f00c fb8d 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006e66:	4a33      	ldr	r2, [pc, #204]	; (8006f34 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006e68:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006e6c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006e70:	4a31      	ldr	r2, [pc, #196]	; (8006f38 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006e72:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006e76:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006e7a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006e7e:	f00d fa3b 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006e82:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006e86:	462a      	mov	r2, r5
 8006e88:	4658      	mov	r0, fp
 8006e8a:	9300      	str	r3, [sp, #0]
 8006e8c:	4629      	mov	r1, r5
 8006e8e:	23f0      	movs	r3, #240	; 0xf0
 8006e90:	f7fc f962 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e94:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006e96:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006e9a:	66a3      	str	r3, [r4, #104]	; 0x68
 8006e9c:	4659      	mov	r1, fp
 8006e9e:	4630      	mov	r0, r6
 8006ea0:	f009 fc9e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006ea4:	462a      	mov	r2, r5
 8006ea6:	4650      	mov	r0, sl
 8006ea8:	4629      	mov	r1, r5
 8006eaa:	f7fc f948 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006eae:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006eb0:	4650      	mov	r0, sl
 8006eb2:	a90a      	add	r1, sp, #40	; 0x28
 8006eb4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006eb8:	f00c fa21 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ebc:	4651      	mov	r1, sl
 8006ebe:	4630      	mov	r0, r6
 8006ec0:	f009 fc8e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006ec4:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006ec8:	2156      	movs	r1, #86	; 0x56
 8006eca:	4648      	mov	r0, r9
 8006ecc:	f7fc f937 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8006ed0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006ed4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006ed8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006edc:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006ee0:	4650      	mov	r0, sl
 8006ee2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006ee6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006eea:	4649      	mov	r1, r9
 8006eec:	4798      	blx	r3
 8006eee:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006ef2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006ef6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006efa:	4b10      	ldr	r3, [pc, #64]	; (8006f3c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006efc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006efe:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006f02:	b92b      	cbnz	r3, 8006f10 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006f04:	4b0e      	ldr	r3, [pc, #56]	; (8006f40 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006f06:	4a0f      	ldr	r2, [pc, #60]	; (8006f44 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006f08:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f0a:	480f      	ldr	r0, [pc, #60]	; (8006f48 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006f0c:	f023 fe5e 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006f10:	4b0e      	ldr	r3, [pc, #56]	; (8006f4c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f12:	881b      	ldrh	r3, [r3, #0]
 8006f14:	2b26      	cmp	r3, #38	; 0x26
 8006f16:	d81d      	bhi.n	8006f54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006f18:	4b0d      	ldr	r3, [pc, #52]	; (8006f50 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006f1a:	4a0a      	ldr	r2, [pc, #40]	; (8006f44 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006f1c:	2161      	movs	r1, #97	; 0x61
 8006f1e:	e7f4      	b.n	8006f0a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006f20:	0802e1f8 	.word	0x0802e1f8
 8006f24:	0802f120 	.word	0x0802f120
 8006f28:	0802f2e8 	.word	0x0802f2e8
 8006f2c:	0802c7d0 	.word	0x0802c7d0
 8006f30:	0802ee54 	.word	0x0802ee54
 8006f34:	0802e1e0 	.word	0x0802e1e0
 8006f38:	08006d35 	.word	0x08006d35
 8006f3c:	20012e0c 	.word	0x20012e0c
 8006f40:	0802c610 	.word	0x0802c610
 8006f44:	0802c712 	.word	0x0802c712
 8006f48:	0802c68d 	.word	0x0802c68d
 8006f4c:	20012e10 	.word	0x20012e10
 8006f50:	0802c6d4 	.word	0x0802c6d4
        return texts->getText(typedTextId);
 8006f54:	4b93      	ldr	r3, [pc, #588]	; (80071a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8006f56:	2126      	movs	r1, #38	; 0x26
 8006f58:	6818      	ldr	r0, [r3, #0]
 8006f5a:	f002 f8d3 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8006f5e:	4a92      	ldr	r2, [pc, #584]	; (80071a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006f60:	4603      	mov	r3, r0
 8006f62:	2104      	movs	r1, #4
 8006f64:	4650      	mov	r0, sl
 8006f66:	f012 f843 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006f6a:	4648      	mov	r0, r9
        wc1 = value;
 8006f6c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006f70:	f00b fdca 	bl	8012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006f74:	4b8d      	ldr	r3, [pc, #564]	; (80071ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006f76:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006f78:	a90a      	add	r1, sp, #40	; 0x28
 8006f7a:	2327      	movs	r3, #39	; 0x27
 8006f7c:	4648      	mov	r0, r9
 8006f7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f82:	f00b fde1 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f86:	4649      	mov	r1, r9
 8006f88:	4630      	mov	r0, r6
 8006f8a:	f009 fc29 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006f8e:	230a      	movs	r3, #10
 8006f90:	9300      	str	r3, [sp, #0]
 8006f92:	2232      	movs	r2, #50	; 0x32
 8006f94:	23f0      	movs	r3, #240	; 0xf0
 8006f96:	4629      	mov	r1, r5
 8006f98:	4638      	mov	r0, r7
 8006f9a:	f7fc f8dd 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f9e:	9b03      	ldr	r3, [sp, #12]
 8006fa0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006fa4:	22a0      	movs	r2, #160	; 0xa0
 8006fa6:	4611      	mov	r1, r2
 8006fa8:	4638      	mov	r0, r7
 8006faa:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006fae:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006fb2:	f00b f983 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006fb6:	22a0      	movs	r2, #160	; 0xa0
 8006fb8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006fbc:	4638      	mov	r0, r7
 8006fbe:	f00b f988 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006fc2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006fc6:	2b20      	cmp	r3, #32
 8006fc8:	d005      	beq.n	8006fd6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006fca:	2320      	movs	r3, #32
 8006fcc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006fd0:	4638      	mov	r0, r7
 8006fd2:	f00b f87d 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006fd6:	4638      	mov	r0, r7
 8006fd8:	2101      	movs	r1, #1
 8006fda:	f00b f985 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006fde:	4639      	mov	r1, r7
 8006fe0:	4630      	mov	r0, r6
 8006fe2:	ad04      	add	r5, sp, #16
        color = newColor;
 8006fe4:	f04f 37ff 	mov.w	r7, #4294967295
 8006fe8:	f009 fbfa 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006fec:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006ff0:	2223      	movs	r2, #35	; 0x23
 8006ff2:	4640      	mov	r0, r8
 8006ff4:	2145      	movs	r1, #69	; 0x45
 8006ff6:	f7fc f8a2 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006ffa:	4641      	mov	r1, r8
 8006ffc:	4628      	mov	r0, r5
        color = newColor;
 8006ffe:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8007002:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8007006:	f00b fb05 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800700a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800700e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007012:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007016:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80071ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 800701a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800701e:	234c      	movs	r3, #76	; 0x4c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8007020:	a90a      	add	r1, sp, #40	; 0x28
 8007022:	4640      	mov	r0, r8
 8007024:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007028:	f00b fd8e 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800702c:	4641      	mov	r1, r8
 800702e:	4630      	mov	r0, r6
 8007030:	f009 fbd6 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007034:	ee18 0a10 	vmov	r0, s16
 8007038:	220c      	movs	r2, #12
 800703a:	2136      	movs	r1, #54	; 0x36
 800703c:	f7fc f87f 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8007040:	ee18 1a10 	vmov	r1, s16
 8007044:	4628      	mov	r0, r5
        color = newColor;
 8007046:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800704a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800704e:	f00b fae1 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007052:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007056:	ee18 3a10 	vmov	r3, s16
 800705a:	333c      	adds	r3, #60	; 0x3c
 800705c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007060:	234b      	movs	r3, #75	; 0x4b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8007062:	ee18 0a10 	vmov	r0, s16
 8007066:	a90a      	add	r1, sp, #40	; 0x28
 8007068:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800706c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007070:	f00b fd6a 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007074:	ee18 1a10 	vmov	r1, s16
 8007078:	4630      	mov	r0, r6
 800707a:	f009 fbb1 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 800707e:	ee18 0a90 	vmov	r0, s17
 8007082:	223c      	movs	r2, #60	; 0x3c
 8007084:	2121      	movs	r1, #33	; 0x21
 8007086:	f7fc f85a 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800708a:	ee18 1a90 	vmov	r1, s17
 800708e:	4628      	mov	r0, r5
        color = newColor;
 8007090:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007094:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007098:	f00b fabc 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800709c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80070a0:	ee18 3a90 	vmov	r3, s17
 80070a4:	333c      	adds	r3, #60	; 0x3c
 80070a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070aa:	2335      	movs	r3, #53	; 0x35
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80070ac:	ee18 0a90 	vmov	r0, s17
 80070b0:	a90a      	add	r1, sp, #40	; 0x28
 80070b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070b6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80070ba:	f00b fd45 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070be:	ee18 1a90 	vmov	r1, s17
 80070c2:	4630      	mov	r0, r6
 80070c4:	f009 fb8c 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80070c8:	ee19 0a10 	vmov	r0, s18
 80070cc:	22f0      	movs	r2, #240	; 0xf0
 80070ce:	2121      	movs	r1, #33	; 0x21
 80070d0:	f7fc f835 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80070d4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070d8:	aa0a      	add	r2, sp, #40	; 0x28
 80070da:	f04f 0802 	mov.w	r8, #2
 80070de:	a909      	add	r1, sp, #36	; 0x24
 80070e0:	ee19 0a10 	vmov	r0, s18
 80070e4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80070e8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80070ec:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070f0:	f00b ff0f 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80070f4:	234a      	movs	r3, #74	; 0x4a
 80070f6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80070fa:	3510      	adds	r5, #16
        updateTextPosition();
 80070fc:	ee19 0a10 	vmov	r0, s18
 8007100:	f7fc f872 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007104:	ee19 1a10 	vmov	r1, s18
 8007108:	4630      	mov	r0, r6
        colorPressed = col;
 800710a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800710e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8007112:	f009 fb65 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007116:	ee19 0a90 	vmov	r0, s19
 800711a:	22aa      	movs	r2, #170	; 0xaa
 800711c:	2121      	movs	r1, #33	; 0x21
 800711e:	f7fc f80e 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007122:	aa0a      	add	r2, sp, #40	; 0x28
 8007124:	a909      	add	r1, sp, #36	; 0x24
 8007126:	ee19 0a90 	vmov	r0, s19
 800712a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800712e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007132:	f00b feee 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007136:	2349      	movs	r3, #73	; 0x49
 8007138:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800713c:	ee19 0a90 	vmov	r0, s19
 8007140:	f7fc f852 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007144:	ee19 1a90 	vmov	r1, s19
 8007148:	4630      	mov	r0, r6
        colorPressed = col;
 800714a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800714e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8007152:	f009 fb45 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007156:	ee1a 0a10 	vmov	r0, s20
 800715a:	2264      	movs	r2, #100	; 0x64
 800715c:	2121      	movs	r1, #33	; 0x21
 800715e:	f7fb ffee 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007162:	aa0a      	add	r2, sp, #40	; 0x28
 8007164:	a909      	add	r1, sp, #36	; 0x24
 8007166:	ee1a 0a10 	vmov	r0, s20
 800716a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800716e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007172:	f00b fece 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007176:	2348      	movs	r3, #72	; 0x48
        updateTextPosition();
 8007178:	ee1a 0a10 	vmov	r0, s20
 800717c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007180:	f7fc f832 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007184:	4630      	mov	r0, r6
        colorPressed = col;
 8007186:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800718a:	ee1a 1a10 	vmov	r1, s20
 800718e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8007192:	f009 fb25 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007196:	4620      	mov	r0, r4
 8007198:	b00d      	add	sp, #52	; 0x34
 800719a:	ecbd 8b06 	vpop	{d8-d10}
 800719e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071a2:	bf00      	nop
 80071a4:	20012e18 	.word	0x20012e18
 80071a8:	0802c74a 	.word	0x0802c74a
 80071ac:	0802c7c0 	.word	0x0802c7c0

080071b0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071b0:	4770      	bx	lr

080071b2 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80071b2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071b4:	68c2      	ldr	r2, [r0, #12]
 80071b6:	6844      	ldr	r4, [r0, #4]
 80071b8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80071ba:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80071bc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80071c0:	07d2      	lsls	r2, r2, #31
 80071c2:	bf48      	it	mi
 80071c4:	5962      	ldrmi	r2, [r4, r5]
 80071c6:	689b      	ldr	r3, [r3, #8]
    }
 80071c8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071ca:	bf48      	it	mi
 80071cc:	58d3      	ldrmi	r3, [r2, r3]
 80071ce:	4718      	bx	r3

080071d0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80071d0:	6843      	ldr	r3, [r0, #4]
 80071d2:	b12b      	cbz	r3, 80071e0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80071d4:	6883      	ldr	r3, [r0, #8]
 80071d6:	b92b      	cbnz	r3, 80071e4 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80071d8:	68c0      	ldr	r0, [r0, #12]
 80071da:	f000 0001 	and.w	r0, r0, #1
 80071de:	4770      	bx	lr
 80071e0:	4618      	mov	r0, r3
 80071e2:	4770      	bx	lr
 80071e4:	2001      	movs	r0, #1
    }
 80071e6:	4770      	bx	lr

080071e8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071e8:	b510      	push	{r4, lr}
 80071ea:	2110      	movs	r1, #16
 80071ec:	4604      	mov	r4, r0
 80071ee:	f022 fe06 	bl	8029dfe <_ZdlPvj>
 80071f2:	4620      	mov	r0, r4
 80071f4:	bd10      	pop	{r4, pc}

080071f6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80071f6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80071fa:	f002 b961 	b.w	80094c0 <_ZN17Gauge_with_Values10initializeEv>

080071fe <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80071fe:	3098      	adds	r0, #152	; 0x98
 8007200:	4288      	cmp	r0, r1
{
 8007202:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007204:	d105      	bne.n	8007212 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007206:	f00e fd83 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800720a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800720e:	f7fd bbdd 	b.w	80049cc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007212:	bd08      	pop	{r3, pc}

08007214 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007214:	b510      	push	{r4, lr}
 8007216:	4b07      	ldr	r3, [pc, #28]	; (8007234 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8007218:	6003      	str	r3, [r0, #0]
 800721a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800721c:	f00d f876 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8007220:	4b05      	ldr	r3, [pc, #20]	; (8007238 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8007222:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8007226:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800722a:	f7fe fe25 	bl	8005e78 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800722e:	4620      	mov	r0, r4
 8007230:	bd10      	pop	{r4, pc}
 8007232:	bf00      	nop
 8007234:	0802e244 	.word	0x0802e244
 8007238:	0802e7ac 	.word	0x0802e7ac

0800723c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800723c:	b510      	push	{r4, lr}
 800723e:	4604      	mov	r4, r0
}
 8007240:	f7ff ffe8 	bl	8007214 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8007244:	4620      	mov	r0, r4
 8007246:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800724a:	f022 fdd8 	bl	8029dfe <_ZdlPvj>
 800724e:	4620      	mov	r0, r4
 8007250:	bd10      	pop	{r4, pc}
	...

08007254 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007258:	ed2d 8b04 	vpush	{d8-d9}
 800725c:	4604      	mov	r4, r0
 800725e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007260:	46a1      	mov	r9, r4
 8007262:	2500      	movs	r5, #0
 8007264:	f010 f9d4 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8007268:	4bad      	ldr	r3, [pc, #692]	; (8007520 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 800726a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800726c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007270:	2226      	movs	r2, #38	; 0x26
 8007272:	4629      	mov	r1, r5
 8007274:	4648      	mov	r0, r9
 8007276:	f023 feae 	bl	802afd6 <memset>
 800727a:	4648      	mov	r0, r9
 800727c:	f7fb ff80 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8007280:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007284:	26ff      	movs	r6, #255	; 0xff
 8007286:	4ba7      	ldr	r3, [pc, #668]	; (8007524 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8007288:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800728a:	2226      	movs	r2, #38	; 0x26
 800728c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007290:	4629      	mov	r1, r5
 8007292:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007296:	4640      	mov	r0, r8
 8007298:	66a5      	str	r5, [r4, #104]	; 0x68
 800729a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800729e:	f023 fe9a 	bl	802afd6 <memset>
 80072a2:	4640      	mov	r0, r8
 80072a4:	f7fb ff6c 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80072a8:	4b9f      	ldr	r3, [pc, #636]	; (8007528 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 80072aa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80072ac:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80072b0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80072b4:	a90a      	add	r1, sp, #40	; 0x28
 80072b6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80072ba:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80072bc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80072c0:	f00c f81d 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80072c4:	4658      	mov	r0, fp
 80072c6:	f00c f95b 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072ca:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80072ce:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80072d2:	4618      	mov	r0, r3
 80072d4:	ee08 3a90 	vmov	s17, r3
 80072d8:	f7fb ff64 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80072dc:	4638      	mov	r0, r7
 80072de:	f00a fed7 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 80072e2:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80072e6:	4618      	mov	r0, r3
 80072e8:	9303      	str	r3, [sp, #12]
 80072ea:	f7fa fac9 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80072ee:	4b8f      	ldr	r3, [pc, #572]	; (800752c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80072f0:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80072f4:	3324      	adds	r3, #36	; 0x24
 80072f6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80072fa:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80072fe:	4618      	mov	r0, r3
 8007300:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8007304:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007308:	ee08 3a10 	vmov	s16, r3
 800730c:	f7fb ff4a 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007310:	4650      	mov	r0, sl
 8007312:	f7fb ff47 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007316:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800731a:	4618      	mov	r0, r3
 800731c:	ee09 3a10 	vmov	s18, r3
 8007320:	f002 f8c4 	bl	80094ac <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007324:	4a82      	ldr	r2, [pc, #520]	; (8007530 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
 8007326:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800732a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800732e:	4a81      	ldr	r2, [pc, #516]	; (8007534 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007330:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007334:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007338:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800733c:	f00c ffdc 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007340:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007344:	462a      	mov	r2, r5
 8007346:	4648      	mov	r0, r9
 8007348:	9300      	str	r3, [sp, #0]
 800734a:	4629      	mov	r1, r5
 800734c:	23f0      	movs	r3, #240	; 0xf0
 800734e:	f7fb ff03 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007352:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007354:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007358:	66a3      	str	r3, [r4, #104]	; 0x68
 800735a:	4649      	mov	r1, r9
 800735c:	4630      	mov	r0, r6
 800735e:	f009 fa3f 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007362:	462a      	mov	r2, r5
 8007364:	4640      	mov	r0, r8
 8007366:	4629      	mov	r1, r5
 8007368:	f7fb fee9 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800736c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800736e:	4640      	mov	r0, r8
 8007370:	a90a      	add	r1, sp, #40	; 0x28
 8007372:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007376:	f00b ffc2 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800737a:	4641      	mov	r1, r8
 800737c:	4630      	mov	r0, r6
 800737e:	f009 fa2f 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007382:	4658      	mov	r0, fp
 8007384:	f240 1201 	movw	r2, #257	; 0x101
 8007388:	2121      	movs	r1, #33	; 0x21
 800738a:	f7fb fed8 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800738e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007390:	aa0a      	add	r2, sp, #40	; 0x28
 8007392:	a909      	add	r1, sp, #36	; 0x24
 8007394:	4658      	mov	r0, fp
 8007396:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800739a:	2302      	movs	r3, #2
 800739c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80073a0:	f00b fdb7 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80073a4:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 80073a6:	4658      	mov	r0, fp
 80073a8:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80073ac:	f7fb ff1c 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80073b0:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80073b4:	3314      	adds	r3, #20
        color = col;
 80073b6:	f04f 39ff 	mov.w	r9, #4294967295
 80073ba:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80073be:	4659      	mov	r1, fp
 80073c0:	4630      	mov	r0, r6
        colorPressed = col;
 80073c2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80073c6:	f009 fa0b 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80073ca:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80073ce:	223c      	movs	r2, #60	; 0x3c
 80073d0:	ee18 0a90 	vmov	r0, s17
 80073d4:	2117      	movs	r1, #23
 80073d6:	f7fb feb2 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80073da:	ee18 1a90 	vmov	r1, s17
 80073de:	4640      	mov	r0, r8
        color = newColor;
 80073e0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80073e4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80073e8:	f00b f914 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073ec:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073f0:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80073f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80073f8:	f04f 0b32 	mov.w	fp, #50	; 0x32
 80073fc:	4b4e      	ldr	r3, [pc, #312]	; (8007538 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 80073fe:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007400:	ee18 0a90 	vmov	r0, s17
 8007404:	a90a      	add	r1, sp, #40	; 0x28
 8007406:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800740a:	f00b fb9d 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800740e:	ee18 1a90 	vmov	r1, s17
 8007412:	4630      	mov	r0, r6
 8007414:	f009 f9e4 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007418:	230a      	movs	r3, #10
 800741a:	9300      	str	r3, [sp, #0]
 800741c:	465a      	mov	r2, fp
 800741e:	23f0      	movs	r3, #240	; 0xf0
 8007420:	4629      	mov	r1, r5
 8007422:	4638      	mov	r0, r7
 8007424:	f7fb fe98 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007428:	9b03      	ldr	r3, [sp, #12]
 800742a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800742e:	22a0      	movs	r2, #160	; 0xa0
 8007430:	4611      	mov	r1, r2
 8007432:	4638      	mov	r0, r7
 8007434:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007438:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800743c:	f00a ff3e 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007440:	22a0      	movs	r2, #160	; 0xa0
 8007442:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007446:	4638      	mov	r0, r7
 8007448:	f00a ff43 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800744c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007450:	2b20      	cmp	r3, #32
 8007452:	d005      	beq.n	8007460 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x20c>
        lineWidthQ5 = widthQ5;
 8007454:	2320      	movs	r3, #32
 8007456:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800745a:	4638      	mov	r0, r7
 800745c:	f00a fe38 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007460:	4638      	mov	r0, r7
 8007462:	2101      	movs	r1, #1
 8007464:	f00a ff40 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007468:	4639      	mov	r1, r7
 800746a:	4630      	mov	r0, r6
 800746c:	f009 f9b8 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007470:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8007472:	ee18 0a10 	vmov	r0, s16
 8007476:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8007478:	f04f 39ff 	mov.w	r9, #4294967295
 800747c:	2145      	movs	r1, #69	; 0x45
 800747e:	f7fb fe5e 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007482:	ee18 1a10 	vmov	r1, s16
 8007486:	4640      	mov	r0, r8
        color = newColor;
 8007488:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800748c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007490:	f00b f8c0 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007494:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007498:	ee18 3a10 	vmov	r3, s16
 800749c:	333c      	adds	r3, #60	; 0x3c
 800749e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074a2:	4f25      	ldr	r7, [pc, #148]	; (8007538 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 80074a4:	970a      	str	r7, [sp, #40]	; 0x28
 80074a6:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80074a8:	ee18 0a10 	vmov	r0, s16
 80074ac:	a90a      	add	r1, sp, #40	; 0x28
 80074ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074b2:	f00b fb49 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074b6:	ee18 1a10 	vmov	r1, s16
 80074ba:	4630      	mov	r0, r6
 80074bc:	f009 f990 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80074c0:	220c      	movs	r2, #12
 80074c2:	4650      	mov	r0, sl
 80074c4:	2136      	movs	r1, #54	; 0x36
 80074c6:	f7fb fe3a 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80074ca:	4651      	mov	r1, sl
 80074cc:	4640      	mov	r0, r8
        color = newColor;
 80074ce:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80074d2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80074d6:	f00b f89d 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074da:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80074de:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80074e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074e6:	2334      	movs	r3, #52	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80074e8:	a90a      	add	r1, sp, #40	; 0x28
 80074ea:	4650      	mov	r0, sl
 80074ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074f0:	970a      	str	r7, [sp, #40]	; 0x28
 80074f2:	f00b fb29 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074f6:	4651      	mov	r1, sl
 80074f8:	4630      	mov	r0, r6
 80074fa:	f009 f971 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80074fe:	ee19 0a10 	vmov	r0, s18
 8007502:	224e      	movs	r2, #78	; 0x4e
 8007504:	4629      	mov	r1, r5
 8007506:	f7fb fe1a 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800750a:	4630      	mov	r0, r6
 800750c:	ee19 1a10 	vmov	r1, s18
 8007510:	f009 f966 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007514:	4620      	mov	r0, r4
 8007516:	b00d      	add	sp, #52	; 0x34
 8007518:	ecbd 8b04 	vpop	{d8-d9}
 800751c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007520:	0802e244 	.word	0x0802e244
 8007524:	0802f120 	.word	0x0802f120
 8007528:	0802f2e8 	.word	0x0802f2e8
 800752c:	0802ee54 	.word	0x0802ee54
 8007530:	0802e22c 	.word	0x0802e22c
 8007534:	080071ff 	.word	0x080071ff
 8007538:	0802c7c0 	.word	0x0802c7c0

0800753c <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800753c:	4770      	bx	lr

0800753e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800753e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007540:	68c2      	ldr	r2, [r0, #12]
 8007542:	6844      	ldr	r4, [r0, #4]
 8007544:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007546:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007548:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800754c:	07d2      	lsls	r2, r2, #31
 800754e:	bf48      	it	mi
 8007550:	5962      	ldrmi	r2, [r4, r5]
 8007552:	689b      	ldr	r3, [r3, #8]
    }
 8007554:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007556:	bf48      	it	mi
 8007558:	58d3      	ldrmi	r3, [r2, r3]
 800755a:	4718      	bx	r3

0800755c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800755c:	6843      	ldr	r3, [r0, #4]
 800755e:	b12b      	cbz	r3, 800756c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007560:	6883      	ldr	r3, [r0, #8]
 8007562:	b92b      	cbnz	r3, 8007570 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007564:	68c0      	ldr	r0, [r0, #12]
 8007566:	f000 0001 	and.w	r0, r0, #1
 800756a:	4770      	bx	lr
 800756c:	4618      	mov	r0, r3
 800756e:	4770      	bx	lr
 8007570:	2001      	movs	r0, #1
    }
 8007572:	4770      	bx	lr

08007574 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007574:	b510      	push	{r4, lr}
 8007576:	2110      	movs	r1, #16
 8007578:	4604      	mov	r4, r0
 800757a:	f022 fc40 	bl	8029dfe <_ZdlPvj>
 800757e:	4620      	mov	r0, r4
 8007580:	bd10      	pop	{r4, pc}

08007582 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007582:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8007586:	f001 bf9b 	b.w	80094c0 <_ZN17Gauge_with_Values10initializeEv>

0800758a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800758a:	3098      	adds	r0, #152	; 0x98
 800758c:	4288      	cmp	r0, r1
{
 800758e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007590:	d105      	bne.n	800759e <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007592:	f00e fbbd 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007596:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800759a:	f7fd ba17 	b.w	80049cc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800759e:	bd08      	pop	{r3, pc}

080075a0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80075a0:	b510      	push	{r4, lr}
 80075a2:	4b07      	ldr	r3, [pc, #28]	; (80075c0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 80075a4:	6003      	str	r3, [r0, #0]
 80075a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80075a8:	f00c feb0 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80075ac:	4b05      	ldr	r3, [pc, #20]	; (80075c4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 80075ae:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80075b2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80075b6:	f7fe fc5f 	bl	8005e78 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80075ba:	4620      	mov	r0, r4
 80075bc:	bd10      	pop	{r4, pc}
 80075be:	bf00      	nop
 80075c0:	0802e290 	.word	0x0802e290
 80075c4:	0802e7ac 	.word	0x0802e7ac

080075c8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80075c8:	b510      	push	{r4, lr}
 80075ca:	4604      	mov	r4, r0
}
 80075cc:	f7ff ffe8 	bl	80075a0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80075d0:	4620      	mov	r0, r4
 80075d2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80075d6:	f022 fc12 	bl	8029dfe <_ZdlPvj>
 80075da:	4620      	mov	r0, r4
 80075dc:	bd10      	pop	{r4, pc}
	...

080075e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80075e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075e4:	ed2d 8b04 	vpush	{d8-d9}
 80075e8:	4604      	mov	r4, r0
 80075ea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80075ec:	46a1      	mov	r9, r4
 80075ee:	2500      	movs	r5, #0
 80075f0:	f010 f80e 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 80075f4:	4bac      	ldr	r3, [pc, #688]	; (80078a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 80075f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80075f8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80075fc:	2226      	movs	r2, #38	; 0x26
 80075fe:	4629      	mov	r1, r5
 8007600:	4648      	mov	r0, r9
 8007602:	f023 fce8 	bl	802afd6 <memset>
 8007606:	4648      	mov	r0, r9
 8007608:	f7fb fdba 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 800760c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007610:	26ff      	movs	r6, #255	; 0xff
 8007612:	4ba6      	ldr	r3, [pc, #664]	; (80078ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8007614:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007616:	2226      	movs	r2, #38	; 0x26
 8007618:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800761c:	4629      	mov	r1, r5
 800761e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007622:	4640      	mov	r0, r8
 8007624:	66a5      	str	r5, [r4, #104]	; 0x68
 8007626:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800762a:	f023 fcd4 	bl	802afd6 <memset>
 800762e:	4640      	mov	r0, r8
 8007630:	f7fb fda6 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8007634:	4b9e      	ldr	r3, [pc, #632]	; (80078b0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8007636:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007638:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800763c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007640:	a90a      	add	r1, sp, #40	; 0x28
 8007642:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007644:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007648:	f00b fe59 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800764c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007650:	4618      	mov	r0, r3
 8007652:	ee08 3a10 	vmov	s16, r3
 8007656:	f00b ff93 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800765a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800765e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8007662:	4618      	mov	r0, r3
 8007664:	ee08 3a90 	vmov	s17, r3
 8007668:	f7fb fd9c 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 800766c:	4638      	mov	r0, r7
 800766e:	f00a fd0f 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 8007672:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007676:	4618      	mov	r0, r3
 8007678:	9303      	str	r3, [sp, #12]
 800767a:	f7fa f901 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800767e:	4b8d      	ldr	r3, [pc, #564]	; (80078b4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8007680:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8007684:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8007688:	3324      	adds	r3, #36	; 0x24
 800768a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800768e:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8007692:	4658      	mov	r0, fp
 8007694:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007698:	f7fb fd84 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 800769c:	4650      	mov	r0, sl
 800769e:	f7fb fd81 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80076a2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80076a6:	4618      	mov	r0, r3
 80076a8:	ee09 3a10 	vmov	s18, r3
 80076ac:	f001 fefe 	bl	80094ac <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80076b0:	4a81      	ldr	r2, [pc, #516]	; (80078b8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 80076b2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80076b6:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80076ba:	4a80      	ldr	r2, [pc, #512]	; (80078bc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80076bc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80076c0:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80076c4:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80076c8:	f00c fe16 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80076cc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80076d0:	462a      	mov	r2, r5
 80076d2:	4648      	mov	r0, r9
 80076d4:	9300      	str	r3, [sp, #0]
 80076d6:	4629      	mov	r1, r5
 80076d8:	23f0      	movs	r3, #240	; 0xf0
 80076da:	f7fb fd3d 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80076de:	1d26      	adds	r6, r4, #4
        color = newColor;
 80076e0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80076e4:	66a3      	str	r3, [r4, #104]	; 0x68
 80076e6:	4649      	mov	r1, r9
 80076e8:	4630      	mov	r0, r6
 80076ea:	f009 f879 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80076ee:	462a      	mov	r2, r5
 80076f0:	4640      	mov	r0, r8
 80076f2:	4629      	mov	r1, r5
 80076f4:	f7fb fd23 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80076f8:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80076fa:	4640      	mov	r0, r8
 80076fc:	a90a      	add	r1, sp, #40	; 0x28
 80076fe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007702:	f00b fdfc 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007706:	4641      	mov	r1, r8
 8007708:	4630      	mov	r0, r6
 800770a:	f009 f869 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800770e:	ee18 0a10 	vmov	r0, s16
 8007712:	f240 1201 	movw	r2, #257	; 0x101
 8007716:	2121      	movs	r1, #33	; 0x21
 8007718:	f7fb fd11 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800771c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800771e:	aa0a      	add	r2, sp, #40	; 0x28
 8007720:	a909      	add	r1, sp, #36	; 0x24
 8007722:	ee18 0a10 	vmov	r0, s16
 8007726:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800772a:	2302      	movs	r3, #2
 800772c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007730:	f00b fbef 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007734:	232d      	movs	r3, #45	; 0x2d
        updateTextPosition();
 8007736:	ee18 0a10 	vmov	r0, s16
 800773a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800773e:	f7fb fd53 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007742:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007746:	3314      	adds	r3, #20
        color = col;
 8007748:	f04f 39ff 	mov.w	r9, #4294967295
 800774c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007750:	ee18 1a10 	vmov	r1, s16
 8007754:	4630      	mov	r0, r6
        colorPressed = col;
 8007756:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800775a:	f009 f841 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800775e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007762:	223c      	movs	r2, #60	; 0x3c
 8007764:	ee18 0a90 	vmov	r0, s17
 8007768:	2117      	movs	r1, #23
 800776a:	f7fb fce8 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800776e:	ee18 1a90 	vmov	r1, s17
 8007772:	4640      	mov	r0, r8
        color = newColor;
 8007774:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8007778:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800777c:	f00a ff4a 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007780:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007784:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007788:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800778c:	4b4c      	ldr	r3, [pc, #304]	; (80078c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800778e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8007790:	ee18 0a90 	vmov	r0, s17
 8007794:	232e      	movs	r3, #46	; 0x2e
 8007796:	a90a      	add	r1, sp, #40	; 0x28
 8007798:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800779c:	f00b f9d4 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077a0:	ee18 1a90 	vmov	r1, s17
 80077a4:	4630      	mov	r0, r6
 80077a6:	f009 f81b 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80077aa:	230a      	movs	r3, #10
 80077ac:	9300      	str	r3, [sp, #0]
 80077ae:	2232      	movs	r2, #50	; 0x32
 80077b0:	23f0      	movs	r3, #240	; 0xf0
 80077b2:	4629      	mov	r1, r5
 80077b4:	4638      	mov	r0, r7
 80077b6:	f7fb fccf 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077ba:	9b03      	ldr	r3, [sp, #12]
 80077bc:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077c0:	22a0      	movs	r2, #160	; 0xa0
 80077c2:	4611      	mov	r1, r2
 80077c4:	4638      	mov	r0, r7
 80077c6:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80077ca:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80077ce:	f00a fd75 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077d2:	22a0      	movs	r2, #160	; 0xa0
 80077d4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80077d8:	4638      	mov	r0, r7
 80077da:	f00a fd7a 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80077de:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80077e2:	2b20      	cmp	r3, #32
 80077e4:	d005      	beq.n	80077f2 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80077e6:	2320      	movs	r3, #32
 80077e8:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80077ec:	4638      	mov	r0, r7
 80077ee:	f00a fc6f 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80077f2:	4638      	mov	r0, r7
 80077f4:	2101      	movs	r1, #1
 80077f6:	f00a fd77 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80077fa:	4639      	mov	r1, r7
 80077fc:	4630      	mov	r0, r6
 80077fe:	f008 ffef 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007802:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8007804:	2223      	movs	r2, #35	; 0x23
 8007806:	4658      	mov	r0, fp
        color = newColor;
 8007808:	f04f 39ff 	mov.w	r9, #4294967295
 800780c:	2145      	movs	r1, #69	; 0x45
 800780e:	f7fb fc96 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007812:	4659      	mov	r1, fp
 8007814:	4640      	mov	r0, r8
        color = newColor;
 8007816:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800781a:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800781e:	f00a fef9 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007822:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007826:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800782a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800782e:	4f24      	ldr	r7, [pc, #144]	; (80078c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8007830:	970a      	str	r7, [sp, #40]	; 0x28
 8007832:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007834:	a90a      	add	r1, sp, #40	; 0x28
 8007836:	4658      	mov	r0, fp
 8007838:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800783c:	f00b f984 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007840:	4659      	mov	r1, fp
 8007842:	4630      	mov	r0, r6
 8007844:	f008 ffcc 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007848:	220c      	movs	r2, #12
 800784a:	4650      	mov	r0, sl
 800784c:	2136      	movs	r1, #54	; 0x36
 800784e:	f7fb fc76 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8007852:	4651      	mov	r1, sl
 8007854:	4640      	mov	r0, r8
        color = newColor;
 8007856:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800785a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800785e:	f00a fed9 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007862:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007866:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800786a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800786e:	2330      	movs	r3, #48	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8007870:	a90a      	add	r1, sp, #40	; 0x28
 8007872:	4650      	mov	r0, sl
 8007874:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007878:	970a      	str	r7, [sp, #40]	; 0x28
 800787a:	f00b f965 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800787e:	4651      	mov	r1, sl
 8007880:	4630      	mov	r0, r6
 8007882:	f008 ffad 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007886:	ee19 0a10 	vmov	r0, s18
 800788a:	224e      	movs	r2, #78	; 0x4e
 800788c:	4629      	mov	r1, r5
 800788e:	f7fb fc56 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8007892:	4630      	mov	r0, r6
 8007894:	ee19 1a10 	vmov	r1, s18
 8007898:	f008 ffa2 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800789c:	4620      	mov	r0, r4
 800789e:	b00d      	add	sp, #52	; 0x34
 80078a0:	ecbd 8b04 	vpop	{d8-d9}
 80078a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078a8:	0802e290 	.word	0x0802e290
 80078ac:	0802f120 	.word	0x0802f120
 80078b0:	0802f2e8 	.word	0x0802f2e8
 80078b4:	0802ee54 	.word	0x0802ee54
 80078b8:	0802e278 	.word	0x0802e278
 80078bc:	0800758b 	.word	0x0800758b
 80078c0:	0802c7c0 	.word	0x0802c7c0

080078c4 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80078c4:	4770      	bx	lr

080078c6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078c6:	4770      	bx	lr

080078c8 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80078c8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078ca:	68c2      	ldr	r2, [r0, #12]
 80078cc:	6844      	ldr	r4, [r0, #4]
 80078ce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80078d0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80078d2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80078d6:	07d2      	lsls	r2, r2, #31
 80078d8:	bf48      	it	mi
 80078da:	5962      	ldrmi	r2, [r4, r5]
 80078dc:	689b      	ldr	r3, [r3, #8]
    }
 80078de:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078e0:	bf48      	it	mi
 80078e2:	58d3      	ldrmi	r3, [r2, r3]
 80078e4:	4718      	bx	r3

080078e6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80078e6:	6843      	ldr	r3, [r0, #4]
 80078e8:	b12b      	cbz	r3, 80078f6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80078ea:	6883      	ldr	r3, [r0, #8]
 80078ec:	b92b      	cbnz	r3, 80078fa <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80078ee:	68c0      	ldr	r0, [r0, #12]
 80078f0:	f000 0001 	and.w	r0, r0, #1
 80078f4:	4770      	bx	lr
 80078f6:	4618      	mov	r0, r3
 80078f8:	4770      	bx	lr
 80078fa:	2001      	movs	r0, #1
    }
 80078fc:	4770      	bx	lr

080078fe <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078fe:	b510      	push	{r4, lr}
 8007900:	2110      	movs	r1, #16
 8007902:	4604      	mov	r4, r0
 8007904:	f022 fa7b 	bl	8029dfe <_ZdlPvj>
 8007908:	4620      	mov	r0, r4
 800790a:	bd10      	pop	{r4, pc}

0800790c <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800790c:	b510      	push	{r4, lr}
 800790e:	4b03      	ldr	r3, [pc, #12]	; (800791c <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007910:	6003      	str	r3, [r0, #0]
 8007912:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007914:	f00c fcfa 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007918:	4620      	mov	r0, r4
 800791a:	bd10      	pop	{r4, pc}
 800791c:	0802e2dc 	.word	0x0802e2dc

08007920 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007920:	b507      	push	{r0, r1, r2, lr}
 8007922:	4b07      	ldr	r3, [pc, #28]	; (8007940 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007924:	6003      	str	r3, [r0, #0]
 8007926:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007928:	f00c fcf0 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800792c:	9801      	ldr	r0, [sp, #4]
 800792e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007932:	f022 fa64 	bl	8029dfe <_ZdlPvj>
 8007936:	9801      	ldr	r0, [sp, #4]
 8007938:	b003      	add	sp, #12
 800793a:	f85d fb04 	ldr.w	pc, [sp], #4
 800793e:	bf00      	nop
 8007940:	0802e2dc 	.word	0x0802e2dc

08007944 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007944:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8007946:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800794a:	4299      	cmp	r1, r3
{
 800794c:	4604      	mov	r4, r0
 800794e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007950:	d103      	bne.n	800795a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007952:	f00e f9dd 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007956:	f7fc ffe9 	bl	800492c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800795a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800795e:	429d      	cmp	r5, r3
 8007960:	d103      	bne.n	800796a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007962:	f00e f9d5 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8007966:	f7fd f801 	bl	800496c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800796a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800796e:	42a5      	cmp	r5, r4
 8007970:	d105      	bne.n	800797e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007972:	f00e f9cd 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8007976:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 800797a:	f7fd b807 	b.w	800498c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800797e:	bd38      	pop	{r3, r4, r5, pc}

08007980 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007984:	ed2d 8b06 	vpush	{d8-d10}
 8007988:	4604      	mov	r4, r0
 800798a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 800798c:	46a3      	mov	fp, r4
 800798e:	2500      	movs	r5, #0
 8007990:	f00f fe3e 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8007994:	4b66      	ldr	r3, [pc, #408]	; (8007b30 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8007996:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007998:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800799c:	2226      	movs	r2, #38	; 0x26
 800799e:	4629      	mov	r1, r5
 80079a0:	4658      	mov	r0, fp
 80079a2:	f023 fb18 	bl	802afd6 <memset>
 80079a6:	4658      	mov	r0, fp
 80079a8:	f7fb fbea 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80079ac:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80079b0:	26ff      	movs	r6, #255	; 0xff
 80079b2:	4b60      	ldr	r3, [pc, #384]	; (8007b34 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80079b4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80079b6:	2226      	movs	r2, #38	; 0x26
 80079b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80079bc:	4629      	mov	r1, r5
 80079be:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80079c2:	4650      	mov	r0, sl
 80079c4:	66a5      	str	r5, [r4, #104]	; 0x68
 80079c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079ca:	f023 fb04 	bl	802afd6 <memset>
 80079ce:	4650      	mov	r0, sl
 80079d0:	f7fb fbd6 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80079d4:	4b58      	ldr	r3, [pc, #352]	; (8007b38 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80079d6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80079d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80079dc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80079e0:	a90a      	add	r1, sp, #40	; 0x28
 80079e2:	4650      	mov	r0, sl
 80079e4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80079e8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80079ec:	f00b fc87 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80079f0:	4648      	mov	r0, r9
 80079f2:	f7fb fbd7 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80079f6:	4b51      	ldr	r3, [pc, #324]	; (8007b3c <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 80079f8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80079fc:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007a00:	4618      	mov	r0, r3
 8007a02:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007a06:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8007a0a:	ee08 3a90 	vmov	s17, r3
 8007a0e:	f7fb fbc9 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a12:	4638      	mov	r0, r7
 8007a14:	f00a fb3c 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 8007a18:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007a1c:	4618      	mov	r0, r3
 8007a1e:	9303      	str	r3, [sp, #12]
 8007a20:	f7f9 ff2e 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a24:	4b46      	ldr	r3, [pc, #280]	; (8007b40 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8007a26:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8007a2a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007a2e:	3324      	adds	r3, #36	; 0x24
 8007a30:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007a34:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007a38:	4640      	mov	r0, r8
 8007a3a:	f7fb fbb3 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a3e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007a42:	4618      	mov	r0, r3
 8007a44:	ee08 3a10 	vmov	s16, r3
 8007a48:	f7fb fbac 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007a4c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007a50:	4618      	mov	r0, r3
 8007a52:	ee09 3a10 	vmov	s18, r3
 8007a56:	f00b fd93 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007a5a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007a5e:	4618      	mov	r0, r3
 8007a60:	ee09 3a90 	vmov	s19, r3
 8007a64:	f00b fd8c 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007a68:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007a6c:	4618      	mov	r0, r3
 8007a6e:	ee0a 3a10 	vmov	s20, r3
 8007a72:	f00b fd85 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007a76:	4a33      	ldr	r2, [pc, #204]	; (8007b44 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8007a78:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007a7c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007a80:	4a31      	ldr	r2, [pc, #196]	; (8007b48 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007a82:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007a86:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8007a8a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8007a8e:	f00c fc33 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007a92:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007a96:	462a      	mov	r2, r5
 8007a98:	4658      	mov	r0, fp
 8007a9a:	9300      	str	r3, [sp, #0]
 8007a9c:	4629      	mov	r1, r5
 8007a9e:	23f0      	movs	r3, #240	; 0xf0
 8007aa0:	f7fb fb5a 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007aa4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007aa6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007aaa:	66a3      	str	r3, [r4, #104]	; 0x68
 8007aac:	4659      	mov	r1, fp
 8007aae:	4630      	mov	r0, r6
 8007ab0:	f008 fe96 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007ab4:	462a      	mov	r2, r5
 8007ab6:	4650      	mov	r0, sl
 8007ab8:	4629      	mov	r1, r5
 8007aba:	f7fb fb40 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8007abe:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007ac0:	4650      	mov	r0, sl
 8007ac2:	a90a      	add	r1, sp, #40	; 0x28
 8007ac4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ac8:	f00b fc19 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007acc:	4651      	mov	r1, sl
 8007ace:	4630      	mov	r0, r6
 8007ad0:	f008 fe86 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007ad4:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007ad8:	2156      	movs	r1, #86	; 0x56
 8007ada:	4648      	mov	r0, r9
 8007adc:	f7fb fb2f 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007ae0:	f04f 33ff 	mov.w	r3, #4294967295
 8007ae4:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007ae8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007aec:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007af0:	f10d 0b10 	add.w	fp, sp, #16
 8007af4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007af8:	4649      	mov	r1, r9
 8007afa:	4658      	mov	r0, fp
 8007afc:	4798      	blx	r3
 8007afe:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007b02:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007b06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b0a:	4b10      	ldr	r3, [pc, #64]	; (8007b4c <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007b0c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007b0e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007b12:	b92b      	cbnz	r3, 8007b20 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007b14:	4b0e      	ldr	r3, [pc, #56]	; (8007b50 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007b16:	4a0f      	ldr	r2, [pc, #60]	; (8007b54 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007b18:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b1a:	480f      	ldr	r0, [pc, #60]	; (8007b58 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007b1c:	f023 f856 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007b20:	4b0e      	ldr	r3, [pc, #56]	; (8007b5c <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b22:	881b      	ldrh	r3, [r3, #0]
 8007b24:	2b28      	cmp	r3, #40	; 0x28
 8007b26:	d81d      	bhi.n	8007b64 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007b28:	4b0d      	ldr	r3, [pc, #52]	; (8007b60 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007b2a:	4a0a      	ldr	r2, [pc, #40]	; (8007b54 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007b2c:	2161      	movs	r1, #97	; 0x61
 8007b2e:	e7f4      	b.n	8007b1a <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007b30:	0802e2dc 	.word	0x0802e2dc
 8007b34:	0802f120 	.word	0x0802f120
 8007b38:	0802f2e8 	.word	0x0802f2e8
 8007b3c:	0802c7d0 	.word	0x0802c7d0
 8007b40:	0802ee54 	.word	0x0802ee54
 8007b44:	0802e2c4 	.word	0x0802e2c4
 8007b48:	08007945 	.word	0x08007945
 8007b4c:	20012e0c 	.word	0x20012e0c
 8007b50:	0802c610 	.word	0x0802c610
 8007b54:	0802c712 	.word	0x0802c712
 8007b58:	0802c68d 	.word	0x0802c68d
 8007b5c:	20012e10 	.word	0x20012e10
 8007b60:	0802c6d4 	.word	0x0802c6d4
        return texts->getText(typedTextId);
 8007b64:	4b95      	ldr	r3, [pc, #596]	; (8007dbc <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8007b66:	2128      	movs	r1, #40	; 0x28
 8007b68:	6818      	ldr	r0, [r3, #0]
 8007b6a:	f001 facb 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8007b6e:	4a94      	ldr	r2, [pc, #592]	; (8007dc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007b70:	4603      	mov	r3, r0
 8007b72:	2104      	movs	r1, #4
 8007b74:	4650      	mov	r0, sl
 8007b76:	f011 fa3b 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007b7a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8007b7e:	4648      	mov	r0, r9
 8007b80:	f00a ffc2 	bl	8012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007b84:	f04f 0a29 	mov.w	sl, #41	; 0x29
 8007b88:	4b8e      	ldr	r3, [pc, #568]	; (8007dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007b8a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8007b8c:	a90a      	add	r1, sp, #40	; 0x28
 8007b8e:	4648      	mov	r0, r9
 8007b90:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8007b94:	f00a ffd8 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b98:	4649      	mov	r1, r9
 8007b9a:	4630      	mov	r0, r6
 8007b9c:	f008 fe20 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8007ba0:	ee18 0a90 	vmov	r0, s17
 8007ba4:	223c      	movs	r2, #60	; 0x3c
 8007ba6:	4651      	mov	r1, sl
 8007ba8:	f7fb fac9 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007bac:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007bb0:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8007bb4:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007bb8:	4658      	mov	r0, fp
        linespace = space;
 8007bba:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007bbe:	f00a fd29 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bc2:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007bc6:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007bca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bce:	4b7d      	ldr	r3, [pc, #500]	; (8007dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007bd0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007bd2:	ee18 0a90 	vmov	r0, s17
 8007bd6:	2338      	movs	r3, #56	; 0x38
 8007bd8:	a90a      	add	r1, sp, #40	; 0x28
 8007bda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bde:	f00a ffb3 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007be2:	ee18 1a90 	vmov	r1, s17
 8007be6:	4630      	mov	r0, r6
 8007be8:	f008 fdfa 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007bec:	230a      	movs	r3, #10
 8007bee:	9300      	str	r3, [sp, #0]
 8007bf0:	2232      	movs	r2, #50	; 0x32
 8007bf2:	23f0      	movs	r3, #240	; 0xf0
 8007bf4:	4629      	mov	r1, r5
 8007bf6:	4638      	mov	r0, r7
 8007bf8:	f7fb faae 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bfc:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c00:	22a0      	movs	r2, #160	; 0xa0
 8007c02:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007c06:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007c0a:	9b03      	ldr	r3, [sp, #12]
 8007c0c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007c10:	4611      	mov	r1, r2
 8007c12:	4638      	mov	r0, r7
 8007c14:	f00a fb52 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c18:	22a0      	movs	r2, #160	; 0xa0
 8007c1a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007c1e:	4638      	mov	r0, r7
 8007c20:	f00a fb57 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007c24:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007c28:	2b20      	cmp	r3, #32
 8007c2a:	d005      	beq.n	8007c38 <_ZN26Measurement_SingleViewBaseC1Ev+0x2b8>
        lineWidthQ5 = widthQ5;
 8007c2c:	2320      	movs	r3, #32
 8007c2e:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007c32:	4638      	mov	r0, r7
 8007c34:	f00a fa4c 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007c38:	4638      	mov	r0, r7
 8007c3a:	2101      	movs	r1, #1
 8007c3c:	f00a fb54 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007c40:	4639      	mov	r1, r7
 8007c42:	4630      	mov	r0, r6
 8007c44:	f008 fdcc 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007c48:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007c4c:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007c4e:	2223      	movs	r2, #35	; 0x23
 8007c50:	4640      	mov	r0, r8
        linespace = space;
 8007c52:	f04f 0a00 	mov.w	sl, #0
 8007c56:	2145      	movs	r1, #69	; 0x45
 8007c58:	f7fb fa71 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007c5c:	4641      	mov	r1, r8
 8007c5e:	4638      	mov	r0, r7
        color = newColor;
 8007c60:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007c64:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007c68:	f00a fcd4 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c6c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c70:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007c74:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c78:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007c7c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c80:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007c82:	a90a      	add	r1, sp, #40	; 0x28
 8007c84:	4640      	mov	r0, r8
 8007c86:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c8a:	f00a ff5d 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c8e:	4641      	mov	r1, r8
 8007c90:	4630      	mov	r0, r6
 8007c92:	f008 fda5 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007c96:	ee18 0a10 	vmov	r0, s16
 8007c9a:	220c      	movs	r2, #12
 8007c9c:	2136      	movs	r1, #54	; 0x36
 8007c9e:	f7fb fa4e 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8007ca2:	ee18 1a10 	vmov	r1, s16
 8007ca6:	4638      	mov	r0, r7
        color = newColor;
 8007ca8:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007cac:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007cb0:	f00a fcb0 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cb4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007cb8:	ee18 3a10 	vmov	r3, s16
 8007cbc:	333c      	adds	r3, #60	; 0x3c
 8007cbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cc2:	2350      	movs	r3, #80	; 0x50
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007cc4:	ee18 0a10 	vmov	r0, s16
 8007cc8:	a90a      	add	r1, sp, #40	; 0x28
 8007cca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cce:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007cd2:	f00a ff39 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cd6:	ee18 1a10 	vmov	r1, s16
 8007cda:	4630      	mov	r0, r6
 8007cdc:	f008 fd80 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007ce0:	ee19 0a10 	vmov	r0, s18
 8007ce4:	22f0      	movs	r2, #240	; 0xf0
 8007ce6:	2121      	movs	r1, #33	; 0x21
 8007ce8:	f7fb fa29 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8007cec:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007cf0:	aa0a      	add	r2, sp, #40	; 0x28
 8007cf2:	f04f 0802 	mov.w	r8, #2
 8007cf6:	a909      	add	r1, sp, #36	; 0x24
 8007cf8:	ee19 0a10 	vmov	r0, s18
 8007cfc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007d00:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007d04:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007d08:	f00b f903 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007d0c:	234f      	movs	r3, #79	; 0x4f
 8007d0e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007d12:	3710      	adds	r7, #16
        updateTextPosition();
 8007d14:	ee19 0a10 	vmov	r0, s18
 8007d18:	f7fb fa66 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007d1c:	ee19 1a10 	vmov	r1, s18
 8007d20:	4630      	mov	r0, r6
        colorPressed = col;
 8007d22:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007d26:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007d2a:	f008 fd59 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007d2e:	ee19 0a90 	vmov	r0, s19
 8007d32:	22aa      	movs	r2, #170	; 0xaa
 8007d34:	2121      	movs	r1, #33	; 0x21
 8007d36:	f7fb fa02 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007d3a:	aa0a      	add	r2, sp, #40	; 0x28
 8007d3c:	a909      	add	r1, sp, #36	; 0x24
 8007d3e:	ee19 0a90 	vmov	r0, s19
 8007d42:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007d46:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007d4a:	f00b f8e2 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007d4e:	234e      	movs	r3, #78	; 0x4e
 8007d50:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007d54:	ee19 0a90 	vmov	r0, s19
 8007d58:	f7fb fa46 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007d5c:	ee19 1a90 	vmov	r1, s19
 8007d60:	4630      	mov	r0, r6
        colorPressed = col;
 8007d62:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007d66:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007d6a:	f008 fd39 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007d6e:	ee1a 0a10 	vmov	r0, s20
 8007d72:	2264      	movs	r2, #100	; 0x64
 8007d74:	2121      	movs	r1, #33	; 0x21
 8007d76:	f7fb f9e2 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007d7a:	aa0a      	add	r2, sp, #40	; 0x28
 8007d7c:	a909      	add	r1, sp, #36	; 0x24
 8007d7e:	ee1a 0a10 	vmov	r0, s20
 8007d82:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007d86:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007d8a:	f00b f8c2 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007d8e:	234d      	movs	r3, #77	; 0x4d
        updateTextPosition();
 8007d90:	ee1a 0a10 	vmov	r0, s20
 8007d94:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007d98:	f7fb fa26 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007d9c:	4630      	mov	r0, r6
        colorPressed = col;
 8007d9e:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007da2:	ee1a 1a10 	vmov	r1, s20
 8007da6:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007daa:	f008 fd19 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007dae:	4620      	mov	r0, r4
 8007db0:	b00d      	add	sp, #52	; 0x34
 8007db2:	ecbd 8b06 	vpop	{d8-d10}
 8007db6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007dba:	bf00      	nop
 8007dbc:	20012e18 	.word	0x20012e18
 8007dc0:	0802c74a 	.word	0x0802c74a
 8007dc4:	0802c7c0 	.word	0x0802c7c0

08007dc8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007dc8:	4770      	bx	lr

08007dca <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007dca:	4770      	bx	lr

08007dcc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007dcc:	4770      	bx	lr

08007dce <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007dce:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007dd0:	68c2      	ldr	r2, [r0, #12]
 8007dd2:	6844      	ldr	r4, [r0, #4]
 8007dd4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007dd6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007dd8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007ddc:	07d2      	lsls	r2, r2, #31
 8007dde:	bf48      	it	mi
 8007de0:	5962      	ldrmi	r2, [r4, r5]
 8007de2:	689b      	ldr	r3, [r3, #8]
    }
 8007de4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007de6:	bf48      	it	mi
 8007de8:	58d3      	ldrmi	r3, [r2, r3]
 8007dea:	4718      	bx	r3

08007dec <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007dec:	6843      	ldr	r3, [r0, #4]
 8007dee:	b12b      	cbz	r3, 8007dfc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007df0:	6883      	ldr	r3, [r0, #8]
 8007df2:	b92b      	cbnz	r3, 8007e00 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007df4:	68c0      	ldr	r0, [r0, #12]
 8007df6:	f000 0001 	and.w	r0, r0, #1
 8007dfa:	4770      	bx	lr
 8007dfc:	4618      	mov	r0, r3
 8007dfe:	4770      	bx	lr
 8007e00:	2001      	movs	r0, #1
    }
 8007e02:	4770      	bx	lr

08007e04 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e04:	b510      	push	{r4, lr}
 8007e06:	2110      	movs	r1, #16
 8007e08:	4604      	mov	r4, r0
 8007e0a:	f021 fff8 	bl	8029dfe <_ZdlPvj>
 8007e0e:	4620      	mov	r0, r4
 8007e10:	bd10      	pop	{r4, pc}
	...

08007e14 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007e14:	b510      	push	{r4, lr}
 8007e16:	4b03      	ldr	r3, [pc, #12]	; (8007e24 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007e18:	6003      	str	r3, [r0, #0]
 8007e1a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e1c:	f00c fa76 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e20:	4620      	mov	r0, r4
 8007e22:	bd10      	pop	{r4, pc}
 8007e24:	0802e328 	.word	0x0802e328

08007e28 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007e28:	b507      	push	{r0, r1, r2, lr}
 8007e2a:	4b07      	ldr	r3, [pc, #28]	; (8007e48 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007e2c:	6003      	str	r3, [r0, #0]
 8007e2e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e30:	f00c fa6c 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e34:	9801      	ldr	r0, [sp, #4]
 8007e36:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007e3a:	f021 ffe0 	bl	8029dfe <_ZdlPvj>
 8007e3e:	9801      	ldr	r0, [sp, #4]
 8007e40:	b003      	add	sp, #12
 8007e42:	f85d fb04 	ldr.w	pc, [sp], #4
 8007e46:	bf00      	nop
 8007e48:	0802e328 	.word	0x0802e328

08007e4c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007e4c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007e4e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007e52:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8007e56:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007e58:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007e5a:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007e5e:	d105      	bne.n	8007e6c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007e60:	6803      	ldr	r3, [r0, #0]
 8007e62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e64:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8007e66:	2300      	movs	r3, #0
 8007e68:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007e6c:	bd10      	pop	{r4, pc}

08007e6e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007e6e:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007e72:	4288      	cmp	r0, r1
{
 8007e74:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007e76:	d105      	bne.n	8007e84 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007e78:	f00d ff4a 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007e7c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007e80:	f7fc bd64 	b.w	800494c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007e84:	bd08      	pop	{r3, pc}
	...

08007e88 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e8c:	ed2d 8b0a 	vpush	{d8-d12}
 8007e90:	4604      	mov	r4, r0
 8007e92:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007e94:	46a1      	mov	r9, r4
 8007e96:	2500      	movs	r5, #0
 8007e98:	f00f fbba 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8007e9c:	4ba9      	ldr	r3, [pc, #676]	; (8008144 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8007e9e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007ea0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007ea4:	2226      	movs	r2, #38	; 0x26
 8007ea6:	4629      	mov	r1, r5
 8007ea8:	4648      	mov	r0, r9
 8007eaa:	f023 f894 	bl	802afd6 <memset>
 8007eae:	4648      	mov	r0, r9
 8007eb0:	f7fb f966 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8007eb4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007eb8:	26ff      	movs	r6, #255	; 0xff
 8007eba:	4ba3      	ldr	r3, [pc, #652]	; (8008148 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007ebc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007ebe:	2226      	movs	r2, #38	; 0x26
 8007ec0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007ec4:	4629      	mov	r1, r5
 8007ec6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007eca:	4640      	mov	r0, r8
 8007ecc:	66a5      	str	r5, [r4, #104]	; 0x68
 8007ece:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ed2:	f023 f880 	bl	802afd6 <memset>
 8007ed6:	4640      	mov	r0, r8
 8007ed8:	f7fb f952 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8007edc:	4b9b      	ldr	r3, [pc, #620]	; (800814c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007ede:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007ee0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007ee4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007ee8:	a90a      	add	r1, sp, #40	; 0x28
 8007eea:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007eee:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007ef0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007ef4:	f00b fa03 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007ef8:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007efc:	4658      	mov	r0, fp
 8007efe:	f7fb f951 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f02:	4638      	mov	r0, r7
 8007f04:	f00a febe 	bl	8012c84 <_ZN8touchgfx5GaugeC1Ev>
 8007f08:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007f0c:	4618      	mov	r0, r3
 8007f0e:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007f12:	4e8f      	ldr	r6, [pc, #572]	; (8008150 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8007f14:	f7fb f946 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f18:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007f1c:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007f20:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007f22:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8007f26:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007f2a:	f7fb f93b 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f2e:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007f32:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8007f36:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007f38:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007f3c:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007f40:	f7fb f930 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f44:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007f48:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007f4c:	4618      	mov	r0, r3
 8007f4e:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007f52:	ee0a 3a90 	vmov	s21, r3
 8007f56:	f7fb f925 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f5a:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007f5e:	4618      	mov	r0, r3
 8007f60:	ee0b 3a10 	vmov	s22, r3
 8007f64:	f7fb f91e 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f68:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007f6c:	4618      	mov	r0, r3
 8007f6e:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8007f72:	ee0b 3a90 	vmov	s23, r3
 8007f76:	f7fb f915 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007f7a:	4650      	mov	r0, sl
 8007f7c:	f00a f888 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 8007f80:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007f84:	4618      	mov	r0, r3
 8007f86:	9303      	str	r3, [sp, #12]
 8007f88:	f7f9 fc7a 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f8c:	4b71      	ldr	r3, [pc, #452]	; (8008154 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007f8e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8007f92:	3324      	adds	r3, #36	; 0x24
 8007f94:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007f98:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007f9c:	4618      	mov	r0, r3
 8007f9e:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007fa2:	ee08 3a10 	vmov	s16, r3
 8007fa6:	f7fb f8fd 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007faa:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007fae:	4618      	mov	r0, r3
 8007fb0:	ee08 3a90 	vmov	s17, r3
 8007fb4:	f7fb f8f6 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007fb8:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007fbc:	4618      	mov	r0, r3
 8007fbe:	ee0c 3a10 	vmov	s24, r3
 8007fc2:	f00b fadd 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007fc6:	4a64      	ldr	r2, [pc, #400]	; (8008158 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007fc8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007fcc:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007fd0:	4a62      	ldr	r2, [pc, #392]	; (800815c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007fd2:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007fd6:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007fda:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007fde:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007fe2:	f00c f989 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007fe6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007fea:	462a      	mov	r2, r5
 8007fec:	4648      	mov	r0, r9
 8007fee:	9300      	str	r3, [sp, #0]
 8007ff0:	4629      	mov	r1, r5
 8007ff2:	23f0      	movs	r3, #240	; 0xf0
 8007ff4:	f7fb f8b0 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ff8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007ffa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007ffe:	66a3      	str	r3, [r4, #104]	; 0x68
 8008000:	4649      	mov	r1, r9
 8008002:	4630      	mov	r0, r6
 8008004:	f008 fbec 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008008:	462a      	mov	r2, r5
 800800a:	4640      	mov	r0, r8
 800800c:	4629      	mov	r1, r5
 800800e:	f7fb f896 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008012:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008014:	4640      	mov	r0, r8
 8008016:	a90a      	add	r1, sp, #40	; 0x28
 8008018:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800801c:	f00b f96f 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008020:	4641      	mov	r1, r8
 8008022:	4630      	mov	r0, r6
 8008024:	f008 fbdc 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008028:	223c      	movs	r2, #60	; 0x3c
 800802a:	211f      	movs	r1, #31
 800802c:	4658      	mov	r0, fp
 800802e:	f7fb f886 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008032:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8008036:	f04f 33ff 	mov.w	r3, #4294967295
 800803a:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800803e:	4659      	mov	r1, fp
 8008040:	4640      	mov	r0, r8
        linespace = space;
 8008042:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008046:	f00a fae5 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800804a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800804e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008052:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008056:	4b42      	ldr	r3, [pc, #264]	; (8008160 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8008058:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 800805a:	a90a      	add	r1, sp, #40	; 0x28
 800805c:	2337      	movs	r3, #55	; 0x37
 800805e:	4658      	mov	r0, fp
 8008060:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008064:	f00a fd70 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008068:	4659      	mov	r1, fp
 800806a:	4630      	mov	r0, r6
 800806c:	f008 fbb8 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008070:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8008072:	4638      	mov	r0, r7
 8008074:	a90a      	add	r1, sp, #40	; 0x28
 8008076:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800807a:	f008 fb43 	bl	8010704 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 800807e:	236a      	movs	r3, #106	; 0x6a
 8008080:	4638      	mov	r0, r7
 8008082:	9300      	str	r3, [sp, #0]
 8008084:	225e      	movs	r2, #94	; 0x5e
 8008086:	23b8      	movs	r3, #184	; 0xb8
 8008088:	211c      	movs	r1, #28
 800808a:	f7fb f865 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 800808e:	225c      	movs	r2, #92	; 0x5c
 8008090:	4611      	mov	r1, r2
 8008092:	4638      	mov	r0, r7
 8008094:	f00a fea1 	bl	8012dda <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8008098:	4638      	mov	r0, r7
 800809a:	225a      	movs	r2, #90	; 0x5a
 800809c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80080a0:	f00a ff20 	bl	8012ee4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 80080a4:	462b      	mov	r3, r5
 80080a6:	225a      	movs	r2, #90	; 0x5a
 80080a8:	4638      	mov	r0, r7
 80080aa:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80080ae:	9500      	str	r5, [sp, #0]
 80080b0:	f008 f9d5 	bl	801045e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 80080b4:	4638      	mov	r0, r7
 80080b6:	4629      	mov	r1, r5
 80080b8:	f00a febe 	bl	8012e38 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80080bc:	2335      	movs	r3, #53	; 0x35
 80080be:	2208      	movs	r2, #8
 80080c0:	4638      	mov	r0, r7
 80080c2:	2105      	movs	r1, #5
 80080c4:	f00a fe74 	bl	8012db0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80080c8:	4638      	mov	r0, r7
 80080ca:	2101      	movs	r1, #1
 80080cc:	f00a fe12 	bl	8012cf4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80080d0:	4638      	mov	r0, r7
 80080d2:	2101      	movs	r1, #1
 80080d4:	f00a fe11 	bl	8012cfa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80080d8:	4639      	mov	r1, r7
 80080da:	4630      	mov	r0, r6
 80080dc:	f008 fb80 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 80080e0:	230f      	movs	r3, #15
 80080e2:	22e6      	movs	r2, #230	; 0xe6
 80080e4:	ee19 0a10 	vmov	r0, s18
 80080e8:	9300      	str	r3, [sp, #0]
 80080ea:	4629      	mov	r1, r5
 80080ec:	23f0      	movs	r3, #240	; 0xf0
 80080ee:	f7fb f833 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80080f2:	f04f 33ff 	mov.w	r3, #4294967295
 80080f6:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 80080fa:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 80080fe:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8008102:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008106:	4f17      	ldr	r7, [pc, #92]	; (8008164 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8008108:	ee19 1a10 	vmov	r1, s18
 800810c:	4640      	mov	r0, r8
 800810e:	4798      	blx	r3
 8008110:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008114:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8008118:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800811c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 800811e:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8008122:	b92b      	cbnz	r3, 8008130 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 8008124:	4b10      	ldr	r3, [pc, #64]	; (8008168 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8008126:	4a11      	ldr	r2, [pc, #68]	; (800816c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8008128:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800812a:	4811      	ldr	r0, [pc, #68]	; (8008170 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 800812c:	f022 fd4e 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008130:	f8df b044 	ldr.w	fp, [pc, #68]	; 8008178 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008134:	f8bb 3000 	ldrh.w	r3, [fp]
 8008138:	2b10      	cmp	r3, #16
 800813a:	d81f      	bhi.n	800817c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 800813c:	4b0d      	ldr	r3, [pc, #52]	; (8008174 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 800813e:	4a0b      	ldr	r2, [pc, #44]	; (800816c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8008140:	2161      	movs	r1, #97	; 0x61
 8008142:	e7f2      	b.n	800812a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
 8008144:	0802e328 	.word	0x0802e328
 8008148:	0802f120 	.word	0x0802f120
 800814c:	0802f2e8 	.word	0x0802f2e8
 8008150:	0802c7d0 	.word	0x0802c7d0
 8008154:	0802ee54 	.word	0x0802ee54
 8008158:	0802e310 	.word	0x0802e310
 800815c:	08007e6f 	.word	0x08007e6f
 8008160:	0802c7c0 	.word	0x0802c7c0
 8008164:	20012e0c 	.word	0x20012e0c
 8008168:	0802c610 	.word	0x0802c610
 800816c:	0802c712 	.word	0x0802c712
 8008170:	0802c68d 	.word	0x0802c68d
 8008174:	0802c6d4 	.word	0x0802c6d4
 8008178:	20012e10 	.word	0x20012e10
        return texts->getText(typedTextId);
 800817c:	4bde      	ldr	r3, [pc, #888]	; (80084f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800817e:	2110      	movs	r1, #16
 8008180:	6818      	ldr	r0, [r3, #0]
 8008182:	f000 ffbf 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8008186:	4add      	ldr	r2, [pc, #884]	; (80084fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8008188:	4603      	mov	r3, r0
 800818a:	210a      	movs	r1, #10
 800818c:	4648      	mov	r0, r9
 800818e:	f010 ff2f 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008192:	4bdb      	ldr	r3, [pc, #876]	; (8008500 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 8008194:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8008198:	ee19 0a10 	vmov	r0, s18
 800819c:	930a      	str	r3, [sp, #40]	; 0x28
 800819e:	a90a      	add	r1, sp, #40	; 0x28
 80081a0:	2313      	movs	r3, #19
 80081a2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081a6:	f00a fccf 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081aa:	ee19 1a10 	vmov	r1, s18
 80081ae:	4630      	mov	r0, r6
 80081b0:	f008 fb16 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 80081b4:	210f      	movs	r1, #15
 80081b6:	22d7      	movs	r2, #215	; 0xd7
 80081b8:	ee19 0a90 	vmov	r0, s19
 80081bc:	9100      	str	r1, [sp, #0]
 80081be:	23f0      	movs	r3, #240	; 0xf0
 80081c0:	4629      	mov	r1, r5
 80081c2:	f7fa ffc9 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80081c6:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 80081ca:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 80081ce:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80081d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80081d6:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 80081da:	4640      	mov	r0, r8
 80081dc:	ee19 1a90 	vmov	r1, s19
 80081e0:	4798      	blx	r3
 80081e2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80081e6:	f504 7342 	add.w	r3, r4, #776	; 0x308
 80081ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80081ee:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80081f0:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 80081f4:	2b00      	cmp	r3, #0
 80081f6:	d095      	beq.n	8008124 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80081f8:	f8bb 3000 	ldrh.w	r3, [fp]
 80081fc:	2b11      	cmp	r3, #17
 80081fe:	d99d      	bls.n	800813c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008200:	4abd      	ldr	r2, [pc, #756]	; (80084f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8008202:	2111      	movs	r1, #17
 8008204:	6810      	ldr	r0, [r2, #0]
 8008206:	f000 ff7d 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 800820a:	4abc      	ldr	r2, [pc, #752]	; (80084fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800820c:	4603      	mov	r3, r0
 800820e:	210a      	movs	r1, #10
 8008210:	4648      	mov	r0, r9
 8008212:	f010 feed 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008216:	4bba      	ldr	r3, [pc, #744]	; (8008500 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8008218:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 800821c:	ee19 0a90 	vmov	r0, s19
 8008220:	930a      	str	r3, [sp, #40]	; 0x28
 8008222:	a90a      	add	r1, sp, #40	; 0x28
 8008224:	2314      	movs	r3, #20
 8008226:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800822a:	f00a fc8d 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800822e:	ee19 1a90 	vmov	r1, s19
 8008232:	4630      	mov	r0, r6
 8008234:	f008 fad4 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8008238:	210f      	movs	r1, #15
 800823a:	22c8      	movs	r2, #200	; 0xc8
 800823c:	ee1a 0a10 	vmov	r0, s20
 8008240:	9100      	str	r1, [sp, #0]
 8008242:	23f0      	movs	r3, #240	; 0xf0
 8008244:	4629      	mov	r1, r5
 8008246:	f7fa ff87 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 800824a:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 800824e:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8008252:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8008256:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800825a:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 800825e:	4640      	mov	r0, r8
 8008260:	ee1a 1a10 	vmov	r1, s20
 8008264:	4798      	blx	r3
 8008266:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800826a:	f504 7355 	add.w	r3, r4, #852	; 0x354
 800826e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008272:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8008274:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8008278:	2b00      	cmp	r3, #0
 800827a:	f43f af53 	beq.w	8008124 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800827e:	f8bb 3000 	ldrh.w	r3, [fp]
 8008282:	2b12      	cmp	r3, #18
 8008284:	f67f af5a 	bls.w	800813c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008288:	4a9b      	ldr	r2, [pc, #620]	; (80084f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 800828a:	4f9d      	ldr	r7, [pc, #628]	; (8008500 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 800828c:	6810      	ldr	r0, [r2, #0]
 800828e:	2112      	movs	r1, #18
 8008290:	f000 ff38 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8008294:	4a99      	ldr	r2, [pc, #612]	; (80084fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8008296:	4603      	mov	r3, r0
 8008298:	210a      	movs	r1, #10
 800829a:	4648      	mov	r0, r9
 800829c:	f010 fea8 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80082a0:	2315      	movs	r3, #21
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80082a2:	ee1a 0a10 	vmov	r0, s20
 80082a6:	a90a      	add	r1, sp, #40	; 0x28
 80082a8:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 80082ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082b0:	970a      	str	r7, [sp, #40]	; 0x28
 80082b2:	f00a fc49 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082b6:	ee1a 1a10 	vmov	r1, s20
 80082ba:	4630      	mov	r0, r6
 80082bc:	f008 fa90 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80082c0:	224c      	movs	r2, #76	; 0x4c
 80082c2:	ee1a 0a90 	vmov	r0, s21
 80082c6:	2171      	movs	r1, #113	; 0x71
 80082c8:	f7fa ff39 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80082cc:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80082d0:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 80082d4:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80082d8:	4640      	mov	r0, r8
        linespace = space;
 80082da:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80082de:	f00a f999 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80082e2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80082e6:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80082ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80082ee:	2316      	movs	r3, #22
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 80082f0:	ee1a 0a90 	vmov	r0, s21
 80082f4:	a90a      	add	r1, sp, #40	; 0x28
 80082f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082fa:	970a      	str	r7, [sp, #40]	; 0x28
 80082fc:	f00a fc24 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008300:	ee1a 1a90 	vmov	r1, s21
 8008304:	4630      	mov	r0, r6
 8008306:	f008 fa6b 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 800830a:	22b9      	movs	r2, #185	; 0xb9
 800830c:	ee1b 0a10 	vmov	r0, s22
 8008310:	4629      	mov	r1, r5
 8008312:	f7fa ff14 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008316:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800831a:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800831e:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8008322:	4640      	mov	r0, r8
        linespace = space;
 8008324:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8008328:	f00a f974 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800832c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008330:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8008334:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008338:	2317      	movs	r3, #23
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 800833a:	ee1b 0a10 	vmov	r0, s22
 800833e:	a90a      	add	r1, sp, #40	; 0x28
 8008340:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008344:	970a      	str	r7, [sp, #40]	; 0x28
 8008346:	f00a fbff 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800834a:	ee1b 1a10 	vmov	r1, s22
 800834e:	4630      	mov	r0, r6
 8008350:	f008 fa46 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8008354:	22b9      	movs	r2, #185	; 0xb9
 8008356:	ee1b 0a90 	vmov	r0, s23
 800835a:	21d9      	movs	r1, #217	; 0xd9
 800835c:	f7fa feef 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008360:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008364:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8008368:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 800836c:	4640      	mov	r0, r8
        linespace = space;
 800836e:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8008372:	f00a f94f 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008376:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800837a:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 800837e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008382:	2318      	movs	r3, #24
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8008384:	ee1b 0a90 	vmov	r0, s23
 8008388:	a90a      	add	r1, sp, #40	; 0x28
 800838a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800838e:	970a      	str	r7, [sp, #40]	; 0x28
 8008390:	f00a fbda 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008394:	ee1b 1a90 	vmov	r1, s23
 8008398:	4630      	mov	r0, r6
 800839a:	f008 fa21 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800839e:	230a      	movs	r3, #10
 80083a0:	9300      	str	r3, [sp, #0]
 80083a2:	2232      	movs	r2, #50	; 0x32
 80083a4:	23f0      	movs	r3, #240	; 0xf0
 80083a6:	4629      	mov	r1, r5
 80083a8:	4650      	mov	r0, sl
 80083aa:	f7fa fed5 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80083ae:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80083b2:	22a0      	movs	r2, #160	; 0xa0
 80083b4:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80083b8:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 80083bc:	9b03      	ldr	r3, [sp, #12]
 80083be:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 80083c2:	4611      	mov	r1, r2
 80083c4:	4650      	mov	r0, sl
 80083c6:	f009 ff79 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80083ca:	22a0      	movs	r2, #160	; 0xa0
 80083cc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80083d0:	4650      	mov	r0, sl
 80083d2:	f009 ff7e 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80083d6:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80083da:	2b20      	cmp	r3, #32
 80083dc:	d005      	beq.n	80083ea <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x562>
        lineWidthQ5 = widthQ5;
 80083de:	2320      	movs	r3, #32
 80083e0:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80083e4:	4650      	mov	r0, sl
 80083e6:	f009 fe73 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80083ea:	4650      	mov	r0, sl
 80083ec:	2101      	movs	r1, #1
 80083ee:	f009 ff7b 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80083f2:	4651      	mov	r1, sl
 80083f4:	4630      	mov	r0, r6
 80083f6:	f008 f9f3 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80083fa:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 80083fe:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8008400:	ee18 0a10 	vmov	r0, s16
 8008404:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008406:	f04f 0900 	mov.w	r9, #0
 800840a:	2145      	movs	r1, #69	; 0x45
 800840c:	f7fa fe97 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008410:	ee18 1a10 	vmov	r1, s16
 8008414:	4628      	mov	r0, r5
        color = newColor;
 8008416:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 800841a:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800841e:	f00a f8f9 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008422:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008426:	ee18 3a10 	vmov	r3, s16
 800842a:	333c      	adds	r3, #60	; 0x3c
 800842c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008430:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8008500 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 8008434:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8008438:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 800843a:	ee18 0a10 	vmov	r0, s16
 800843e:	a90a      	add	r1, sp, #40	; 0x28
 8008440:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008444:	f00a fb80 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008448:	ee18 1a10 	vmov	r1, s16
 800844c:	4630      	mov	r0, r6
 800844e:	f008 f9c7 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008452:	ee18 0a90 	vmov	r0, s17
 8008456:	220c      	movs	r2, #12
 8008458:	2136      	movs	r1, #54	; 0x36
 800845a:	f7fa fe70 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800845e:	ee18 1a90 	vmov	r1, s17
 8008462:	4628      	mov	r0, r5
        color = newColor;
 8008464:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8008468:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 800846c:	f00a f8d2 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008470:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008474:	ee18 3a90 	vmov	r3, s17
 8008478:	333c      	adds	r3, #60	; 0x3c
 800847a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800847e:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8008480:	ee18 0a90 	vmov	r0, s17
 8008484:	a90a      	add	r1, sp, #40	; 0x28
 8008486:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800848a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800848e:	f00a fb5b 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008492:	ee18 1a90 	vmov	r1, s17
 8008496:	4630      	mov	r0, r6
 8008498:	f008 f9a2 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 800849c:	ee1c 0a10 	vmov	r0, s24
 80084a0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80084a4:	2121      	movs	r1, #33	; 0x21
 80084a6:	f7fa fe4a 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80084aa:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80084ac:	aa0a      	add	r2, sp, #40	; 0x28
 80084ae:	a909      	add	r1, sp, #36	; 0x24
 80084b0:	ee1c 0a10 	vmov	r0, s24
 80084b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80084b8:	2302      	movs	r3, #2
 80084ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80084be:	f00a fd28 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80084c2:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 80084c4:	ee1c 0a10 	vmov	r0, s24
 80084c8:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80084cc:	f7fa fe8c 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80084d0:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80084d4:	3304      	adds	r3, #4
 80084d6:	4630      	mov	r0, r6
 80084d8:	ee1c 1a10 	vmov	r1, s24
        color = col;
 80084dc:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 80084e0:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 80084e4:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 80084e8:	f008 f97a 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80084ec:	4620      	mov	r0, r4
 80084ee:	b00d      	add	sp, #52	; 0x34
 80084f0:	ecbd 8b0a 	vpop	{d8-d12}
 80084f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084f8:	20012e18 	.word	0x20012e18
 80084fc:	0802c74a 	.word	0x0802c74a
 8008500:	0802c7c0 	.word	0x0802c7c0

08008504 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008504:	4770      	bx	lr

08008506 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008506:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008508:	68c2      	ldr	r2, [r0, #12]
 800850a:	6844      	ldr	r4, [r0, #4]
 800850c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800850e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008510:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008514:	07d2      	lsls	r2, r2, #31
 8008516:	bf48      	it	mi
 8008518:	5962      	ldrmi	r2, [r4, r5]
 800851a:	689b      	ldr	r3, [r3, #8]
    }
 800851c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800851e:	bf48      	it	mi
 8008520:	58d3      	ldrmi	r3, [r2, r3]
 8008522:	4718      	bx	r3

08008524 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008524:	6843      	ldr	r3, [r0, #4]
 8008526:	b12b      	cbz	r3, 8008534 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008528:	6883      	ldr	r3, [r0, #8]
 800852a:	b92b      	cbnz	r3, 8008538 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800852c:	68c0      	ldr	r0, [r0, #12]
 800852e:	f000 0001 	and.w	r0, r0, #1
 8008532:	4770      	bx	lr
 8008534:	4618      	mov	r0, r3
 8008536:	4770      	bx	lr
 8008538:	2001      	movs	r0, #1
    }
 800853a:	4770      	bx	lr

0800853c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800853c:	b510      	push	{r4, lr}
 800853e:	2110      	movs	r1, #16
 8008540:	4604      	mov	r4, r0
 8008542:	f021 fc5c 	bl	8029dfe <_ZdlPvj>
 8008546:	4620      	mov	r0, r4
 8008548:	bd10      	pop	{r4, pc}

0800854a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800854a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800854e:	f000 bfb7 	b.w	80094c0 <_ZN17Gauge_with_Values10initializeEv>

08008552 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008552:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8008556:	4288      	cmp	r0, r1
{
 8008558:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800855a:	d105      	bne.n	8008568 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800855c:	f00d fbd8 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8008560:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008564:	f7fc b9f2 	b.w	800494c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008568:	bd08      	pop	{r3, pc}
	...

0800856c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800856c:	b510      	push	{r4, lr}
 800856e:	4b07      	ldr	r3, [pc, #28]	; (800858c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8008570:	6003      	str	r3, [r0, #0]
 8008572:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008574:	f00b feca 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8008578:	4b05      	ldr	r3, [pc, #20]	; (8008590 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 800857a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800857e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8008582:	f7fd fc79 	bl	8005e78 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8008586:	4620      	mov	r0, r4
 8008588:	bd10      	pop	{r4, pc}
 800858a:	bf00      	nop
 800858c:	0802e378 	.word	0x0802e378
 8008590:	0802e7ac 	.word	0x0802e7ac

08008594 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8008594:	b510      	push	{r4, lr}
 8008596:	4604      	mov	r4, r0
}
 8008598:	f7ff ffe8 	bl	800856c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800859c:	4620      	mov	r0, r4
 800859e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80085a2:	f021 fc2c 	bl	8029dfe <_ZdlPvj>
 80085a6:	4620      	mov	r0, r4
 80085a8:	bd10      	pop	{r4, pc}
	...

080085ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80085ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80085b0:	ed2d 8b04 	vpush	{d8-d9}
 80085b4:	4604      	mov	r4, r0
 80085b6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80085b8:	46a3      	mov	fp, r4
 80085ba:	2500      	movs	r5, #0
 80085bc:	f00f f828 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 80085c0:	4bae      	ldr	r3, [pc, #696]	; (800887c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 80085c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80085c4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80085c8:	2226      	movs	r2, #38	; 0x26
 80085ca:	4629      	mov	r1, r5
 80085cc:	4658      	mov	r0, fp
 80085ce:	f022 fd02 	bl	802afd6 <memset>
 80085d2:	4658      	mov	r0, fp
 80085d4:	f7fa fdd4 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 80085d8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80085dc:	26ff      	movs	r6, #255	; 0xff
 80085de:	4ba8      	ldr	r3, [pc, #672]	; (8008880 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 80085e0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80085e2:	2226      	movs	r2, #38	; 0x26
 80085e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80085e8:	4629      	mov	r1, r5
 80085ea:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80085ee:	66a5      	str	r5, [r4, #104]	; 0x68
 80085f0:	4650      	mov	r0, sl
 80085f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80085f6:	f022 fcee 	bl	802afd6 <memset>
 80085fa:	4650      	mov	r0, sl
 80085fc:	f7fa fdc0 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8008600:	4ba0      	ldr	r3, [pc, #640]	; (8008884 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8008602:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008604:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008608:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800860c:	a90a      	add	r1, sp, #40	; 0x28
 800860e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008612:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008616:	4650      	mov	r0, sl
 8008618:	f00a fe71 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800861c:	4638      	mov	r0, r7
 800861e:	f009 fd37 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 8008622:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008626:	4618      	mov	r0, r3
 8008628:	9303      	str	r3, [sp, #12]
 800862a:	f7f9 f929 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800862e:	4b96      	ldr	r3, [pc, #600]	; (8008888 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8008630:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8008634:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8008638:	3324      	adds	r3, #36	; 0x24
 800863a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800863e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8008642:	4648      	mov	r0, r9
 8008644:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8008648:	f7fa fdac 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 800864c:	4640      	mov	r0, r8
 800864e:	f7fa fda9 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008652:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8008656:	4618      	mov	r0, r3
 8008658:	ee08 3a10 	vmov	s16, r3
 800865c:	f7fa fda2 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 8008660:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008664:	4618      	mov	r0, r3
 8008666:	ee08 3a90 	vmov	s17, r3
 800866a:	f00a ff89 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800866e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8008672:	4618      	mov	r0, r3
 8008674:	ee09 3a10 	vmov	s18, r3
 8008678:	f000 ff18 	bl	80094ac <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800867c:	4a83      	ldr	r2, [pc, #524]	; (800888c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800867e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008682:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8008686:	4a82      	ldr	r2, [pc, #520]	; (8008890 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008688:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800868c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8008690:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8008694:	f00b fe30 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008698:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800869c:	462a      	mov	r2, r5
 800869e:	9300      	str	r3, [sp, #0]
 80086a0:	4629      	mov	r1, r5
 80086a2:	23f0      	movs	r3, #240	; 0xf0
 80086a4:	4658      	mov	r0, fp
 80086a6:	f7fa fd57 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80086aa:	1d26      	adds	r6, r4, #4
        color = newColor;
 80086ac:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80086b0:	66a3      	str	r3, [r4, #104]	; 0x68
 80086b2:	4659      	mov	r1, fp
 80086b4:	4630      	mov	r0, r6
 80086b6:	f008 f893 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80086ba:	462a      	mov	r2, r5
 80086bc:	4629      	mov	r1, r5
 80086be:	4650      	mov	r0, sl
 80086c0:	f7fa fd3d 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80086c4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80086c6:	a90a      	add	r1, sp, #40	; 0x28
 80086c8:	4650      	mov	r0, sl
 80086ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80086ce:	f00a fe16 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80086d2:	4651      	mov	r1, sl
 80086d4:	4630      	mov	r0, r6
 80086d6:	f008 f883 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80086da:	230a      	movs	r3, #10
 80086dc:	9300      	str	r3, [sp, #0]
 80086de:	2232      	movs	r2, #50	; 0x32
 80086e0:	23f0      	movs	r3, #240	; 0xf0
 80086e2:	4629      	mov	r1, r5
 80086e4:	4638      	mov	r0, r7
 80086e6:	f7fa fd37 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 80086ea:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80086ee:	22a0      	movs	r2, #160	; 0xa0
 80086f0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 80086f4:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 80086f8:	9b03      	ldr	r3, [sp, #12]
 80086fa:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80086fe:	4611      	mov	r1, r2
 8008700:	4638      	mov	r0, r7
 8008702:	f009 fddb 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008706:	22a0      	movs	r2, #160	; 0xa0
 8008708:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800870c:	4638      	mov	r0, r7
 800870e:	f009 fde0 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008712:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008716:	2b20      	cmp	r3, #32
 8008718:	d005      	beq.n	8008726 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 800871a:	2320      	movs	r3, #32
 800871c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8008720:	4638      	mov	r0, r7
 8008722:	f009 fcd5 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008726:	4638      	mov	r0, r7
 8008728:	2101      	movs	r1, #1
 800872a:	f009 fddd 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800872e:	4639      	mov	r1, r7
 8008730:	4630      	mov	r0, r6
 8008732:	ad04      	add	r5, sp, #16
 8008734:	f008 f854 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008738:	f04f 3aff 	mov.w	sl, #4294967295
        linespace = space;
 800873c:	2700      	movs	r7, #0
    textArea2.setXY(69, 35);
 800873e:	2223      	movs	r2, #35	; 0x23
 8008740:	4648      	mov	r0, r9
 8008742:	2145      	movs	r1, #69	; 0x45
 8008744:	f7fa fcfb 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008748:	4649      	mov	r1, r9
 800874a:	4628      	mov	r0, r5
        color = newColor;
 800874c:	f8c4 a14c 	str.w	sl, [r4, #332]	; 0x14c
        linespace = space;
 8008750:	f8a4 7150 	strh.w	r7, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008754:	f009 ff5e 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008758:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800875c:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8008760:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008764:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8008894 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8008768:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800876c:	2347      	movs	r3, #71	; 0x47
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800876e:	a90a      	add	r1, sp, #40	; 0x28
 8008770:	4648      	mov	r0, r9
 8008772:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008776:	f00a f9e7 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800877a:	4649      	mov	r1, r9
 800877c:	4630      	mov	r0, r6
 800877e:	f008 f82f 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008782:	223c      	movs	r2, #60	; 0x3c
 8008784:	4640      	mov	r0, r8
 8008786:	211f      	movs	r1, #31
 8008788:	f7fa fcd9 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800878c:	4641      	mov	r1, r8
 800878e:	4628      	mov	r0, r5
        color = newColor;
 8008790:	f8c4 a194 	str.w	sl, [r4, #404]	; 0x194
        linespace = space;
 8008794:	f8a4 7198 	strh.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8008798:	f009 ff3c 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800879c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087a0:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80087a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80087a8:	f04f 0936 	mov.w	r9, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80087ac:	a90a      	add	r1, sp, #40	; 0x28
 80087ae:	4640      	mov	r0, r8
 80087b0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80087b4:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80087b8:	f00a f9c6 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80087bc:	4641      	mov	r1, r8
 80087be:	4630      	mov	r0, r6
 80087c0:	f008 f80e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80087c4:	ee18 0a10 	vmov	r0, s16
 80087c8:	220c      	movs	r2, #12
 80087ca:	4649      	mov	r1, r9
 80087cc:	f7fa fcb7 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80087d0:	ee18 1a10 	vmov	r1, s16
 80087d4:	4628      	mov	r0, r5
        color = newColor;
 80087d6:	f8c4 a1dc 	str.w	sl, [r4, #476]	; 0x1dc
        linespace = space;
 80087da:	f8a4 71e0 	strh.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80087de:	f009 ff19 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80087e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087e6:	ee18 3a10 	vmov	r3, s16
 80087ea:	333c      	adds	r3, #60	; 0x3c
 80087ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80087f0:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 80087f2:	ee18 0a10 	vmov	r0, s16
 80087f6:	a90a      	add	r1, sp, #40	; 0x28
 80087f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80087fc:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8008800:	f00a f9a2 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008804:	ee18 1a10 	vmov	r1, s16
 8008808:	4630      	mov	r0, r6
 800880a:	f007 ffe9 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800880e:	ee18 0a90 	vmov	r0, s17
 8008812:	f240 1201 	movw	r2, #257	; 0x101
 8008816:	2121      	movs	r1, #33	; 0x21
 8008818:	f7fa fc91 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 800881c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800881e:	aa0a      	add	r2, sp, #40	; 0x28
 8008820:	a909      	add	r1, sp, #36	; 0x24
 8008822:	ee18 0a90 	vmov	r0, s17
 8008826:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800882a:	2302      	movs	r3, #2
 800882c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008830:	f00a fb6f 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008834:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 8008836:	ee18 0a90 	vmov	r0, s17
 800883a:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800883e:	f7fa fcd3 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008842:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8008846:	3314      	adds	r3, #20
 8008848:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800884c:	ee18 1a90 	vmov	r1, s17
 8008850:	4630      	mov	r0, r6
        colorPressed = col;
 8008852:	e9c4 aa8c 	strd	sl, sl, [r4, #560]	; 0x230
 8008856:	f007 ffc3 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800885a:	ee19 0a10 	vmov	r0, s18
 800885e:	224e      	movs	r2, #78	; 0x4e
 8008860:	4639      	mov	r1, r7
 8008862:	f7fa fc6c 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008866:	4630      	mov	r0, r6
 8008868:	ee19 1a10 	vmov	r1, s18
 800886c:	f007 ffb8 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008870:	4620      	mov	r0, r4
 8008872:	b00d      	add	sp, #52	; 0x34
 8008874:	ecbd 8b04 	vpop	{d8-d9}
 8008878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800887c:	0802e378 	.word	0x0802e378
 8008880:	0802f120 	.word	0x0802f120
 8008884:	0802f2e8 	.word	0x0802f2e8
 8008888:	0802ee54 	.word	0x0802ee54
 800888c:	0802e360 	.word	0x0802e360
 8008890:	08008553 	.word	0x08008553
 8008894:	0802c7c0 	.word	0x0802c7c0

08008898 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8008898:	4770      	bx	lr

0800889a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800889a:	4770      	bx	lr

0800889c <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800889c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800889e:	68c2      	ldr	r2, [r0, #12]
 80088a0:	6844      	ldr	r4, [r0, #4]
 80088a2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80088a4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80088a6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80088aa:	07d2      	lsls	r2, r2, #31
 80088ac:	bf48      	it	mi
 80088ae:	5962      	ldrmi	r2, [r4, r5]
 80088b0:	689b      	ldr	r3, [r3, #8]
    }
 80088b2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80088b4:	bf48      	it	mi
 80088b6:	58d3      	ldrmi	r3, [r2, r3]
 80088b8:	4718      	bx	r3

080088ba <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80088ba:	6843      	ldr	r3, [r0, #4]
 80088bc:	b12b      	cbz	r3, 80088ca <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80088be:	6883      	ldr	r3, [r0, #8]
 80088c0:	b92b      	cbnz	r3, 80088ce <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80088c2:	68c0      	ldr	r0, [r0, #12]
 80088c4:	f000 0001 	and.w	r0, r0, #1
 80088c8:	4770      	bx	lr
 80088ca:	4618      	mov	r0, r3
 80088cc:	4770      	bx	lr
 80088ce:	2001      	movs	r0, #1
    }
 80088d0:	4770      	bx	lr

080088d2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80088d2:	b510      	push	{r4, lr}
 80088d4:	2110      	movs	r1, #16
 80088d6:	4604      	mov	r4, r0
 80088d8:	f021 fa91 	bl	8029dfe <_ZdlPvj>
 80088dc:	4620      	mov	r0, r4
 80088de:	bd10      	pop	{r4, pc}

080088e0 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80088e0:	b510      	push	{r4, lr}
 80088e2:	4b03      	ldr	r3, [pc, #12]	; (80088f0 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80088e4:	6003      	str	r3, [r0, #0]
 80088e6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80088e8:	f00b fd10 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80088ec:	4620      	mov	r0, r4
 80088ee:	bd10      	pop	{r4, pc}
 80088f0:	0802e3c4 	.word	0x0802e3c4

080088f4 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80088f4:	b507      	push	{r0, r1, r2, lr}
 80088f6:	4b07      	ldr	r3, [pc, #28]	; (8008914 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80088f8:	6003      	str	r3, [r0, #0]
 80088fa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80088fc:	f00b fd06 	bl	801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008900:	9801      	ldr	r0, [sp, #4]
 8008902:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008906:	f021 fa7a 	bl	8029dfe <_ZdlPvj>
 800890a:	9801      	ldr	r0, [sp, #4]
 800890c:	b003      	add	sp, #12
 800890e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008912:	bf00      	nop
 8008914:	0802e3c4 	.word	0x0802e3c4

08008918 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008918:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 800891c:	4288      	cmp	r0, r1
{
 800891e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008920:	d105      	bne.n	800892e <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008922:	f00d f9f5 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8008926:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800892a:	f7fb bfdf 	b.w	80048ec <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800892e:	bd08      	pop	{r3, pc}

08008930 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008934:	ed2d 8b04 	vpush	{d8-d9}
 8008938:	4604      	mov	r4, r0
 800893a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 800893c:	46a3      	mov	fp, r4
 800893e:	2500      	movs	r5, #0
 8008940:	f00e fe66 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8008944:	4bd1      	ldr	r3, [pc, #836]	; (8008c8c <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8008946:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008948:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800894c:	2226      	movs	r2, #38	; 0x26
 800894e:	4629      	mov	r1, r5
 8008950:	4658      	mov	r0, fp
 8008952:	f022 fb40 	bl	802afd6 <memset>
 8008956:	4658      	mov	r0, fp
 8008958:	f7fa fc12 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 800895c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008960:	26ff      	movs	r6, #255	; 0xff
 8008962:	4bcb      	ldr	r3, [pc, #812]	; (8008c90 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8008964:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008966:	2226      	movs	r2, #38	; 0x26
 8008968:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800896c:	4629      	mov	r1, r5
 800896e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008972:	4650      	mov	r0, sl
 8008974:	66a5      	str	r5, [r4, #104]	; 0x68
 8008976:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800897a:	f022 fb2c 	bl	802afd6 <memset>
 800897e:	4650      	mov	r0, sl
 8008980:	f7fa fbfe 	bl	8003180 <_ZN8touchgfx6WidgetC1Ev>
 8008984:	4bc3      	ldr	r3, [pc, #780]	; (8008c94 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8008986:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008988:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800898c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008990:	a90a      	add	r1, sp, #40	; 0x28
 8008992:	4650      	mov	r0, sl
 8008994:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008998:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800899c:	f00a fcaf 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80089a0:	4648      	mov	r0, r9
 80089a2:	f7fa fbff 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80089a6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80089aa:	4bbb      	ldr	r3, [pc, #748]	; (8008c98 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80089ac:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80089b0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80089b4:	4638      	mov	r0, r7
 80089b6:	f009 fb6b 	bl	8012090 <_ZN8touchgfx4LineC1Ev>
 80089ba:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80089be:	4618      	mov	r0, r3
 80089c0:	9303      	str	r3, [sp, #12]
 80089c2:	f7f8 ff5d 	bl	8001880 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089c6:	4bb5      	ldr	r3, [pc, #724]	; (8008c9c <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80089c8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80089cc:	3324      	adds	r3, #36	; 0x24
 80089ce:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80089d2:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80089d6:	4618      	mov	r0, r3
 80089d8:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80089dc:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80089e0:	ee09 3a10 	vmov	s18, r3
 80089e4:	f00a fdcc 	bl	8013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80089e8:	4640      	mov	r0, r8
 80089ea:	f7fa fbdb 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80089ee:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80089f2:	4618      	mov	r0, r3
 80089f4:	ee08 3a10 	vmov	s16, r3
 80089f8:	f7fa fbd4 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
 80089fc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008a00:	4618      	mov	r0, r3
 8008a02:	ee08 3a90 	vmov	s17, r3
 8008a06:	f7fa fbcd 	bl	80031a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008a0a:	4aa5      	ldr	r2, [pc, #660]	; (8008ca0 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008a0c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008a10:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008a14:	4aa3      	ldr	r2, [pc, #652]	; (8008ca4 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008a16:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008a1a:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008a1e:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8008a22:	f00b fc69 	bl	80142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008a26:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008a2a:	462a      	mov	r2, r5
 8008a2c:	4658      	mov	r0, fp
 8008a2e:	9300      	str	r3, [sp, #0]
 8008a30:	4629      	mov	r1, r5
 8008a32:	23f0      	movs	r3, #240	; 0xf0
 8008a34:	f7fa fb90 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a38:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008a3a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008a3e:	66a3      	str	r3, [r4, #104]	; 0x68
 8008a40:	4659      	mov	r1, fp
 8008a42:	4630      	mov	r0, r6
 8008a44:	f007 fecc 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008a48:	462a      	mov	r2, r5
 8008a4a:	4650      	mov	r0, sl
 8008a4c:	4629      	mov	r1, r5
 8008a4e:	f7fa fb76 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008a52:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008a54:	4650      	mov	r0, sl
 8008a56:	a90a      	add	r1, sp, #40	; 0x28
 8008a58:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a5c:	f00a fc4f 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008a60:	4651      	mov	r1, sl
 8008a62:	4630      	mov	r0, r6
 8008a64:	f007 febc 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008a68:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008a6c:	2156      	movs	r1, #86	; 0x56
 8008a6e:	4648      	mov	r0, r9
 8008a70:	f7fa fb65 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008a74:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008a78:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008a7c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008a80:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8008a84:	4650      	mov	r0, sl
 8008a86:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008a8a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008a8e:	4649      	mov	r1, r9
 8008a90:	4798      	blx	r3
 8008a92:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8008a96:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008a9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008a9e:	4b82      	ldr	r3, [pc, #520]	; (8008ca8 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8008aa0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8008aa2:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8008aa6:	b92b      	cbnz	r3, 8008ab4 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8008aa8:	4b80      	ldr	r3, [pc, #512]	; (8008cac <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8008aaa:	4a81      	ldr	r2, [pc, #516]	; (8008cb0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008aac:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008aae:	4881      	ldr	r0, [pc, #516]	; (8008cb4 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8008ab0:	f022 f88c 	bl	802abcc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008ab4:	4b80      	ldr	r3, [pc, #512]	; (8008cb8 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008ab6:	881b      	ldrh	r3, [r3, #0]
 8008ab8:	2b22      	cmp	r3, #34	; 0x22
 8008aba:	d803      	bhi.n	8008ac4 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8008abc:	4b7f      	ldr	r3, [pc, #508]	; (8008cbc <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8008abe:	4a7c      	ldr	r2, [pc, #496]	; (8008cb0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008ac0:	2161      	movs	r1, #97	; 0x61
 8008ac2:	e7f4      	b.n	8008aae <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8008ac4:	4b7e      	ldr	r3, [pc, #504]	; (8008cc0 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8008ac6:	2122      	movs	r1, #34	; 0x22
 8008ac8:	6818      	ldr	r0, [r3, #0]
 8008aca:	f000 fb1b 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8008ace:	4a7d      	ldr	r2, [pc, #500]	; (8008cc4 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8008ad0:	4603      	mov	r3, r0
 8008ad2:	2104      	movs	r1, #4
 8008ad4:	4650      	mov	r0, sl
 8008ad6:	f010 fa8b 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8008ada:	4648      	mov	r0, r9
        wc1 = value;
 8008adc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8008ae0:	f00a f812 	bl	8012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008ae4:	4b78      	ldr	r3, [pc, #480]	; (8008cc8 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8008ae6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8008ae8:	a90a      	add	r1, sp, #40	; 0x28
 8008aea:	2323      	movs	r3, #35	; 0x23
 8008aec:	4648      	mov	r0, r9
 8008aee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008af2:	f00a f829 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008af6:	4649      	mov	r1, r9
 8008af8:	4630      	mov	r0, r6
 8008afa:	f007 fe71 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008afe:	230a      	movs	r3, #10
 8008b00:	9300      	str	r3, [sp, #0]
 8008b02:	2232      	movs	r2, #50	; 0x32
 8008b04:	23f0      	movs	r3, #240	; 0xf0
 8008b06:	4629      	mov	r1, r5
 8008b08:	4638      	mov	r0, r7
 8008b0a:	f7fa fb25 	bl	8003158 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008b0e:	9b03      	ldr	r3, [sp, #12]
 8008b10:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008b14:	22a0      	movs	r2, #160	; 0xa0
 8008b16:	4611      	mov	r1, r2
 8008b18:	4638      	mov	r0, r7
 8008b1a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008b1e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008b22:	f009 fbcb 	bl	80122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008b26:	22a0      	movs	r2, #160	; 0xa0
 8008b28:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008b2c:	4638      	mov	r0, r7
 8008b2e:	f009 fbd0 	bl	80122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008b32:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008b36:	2b20      	cmp	r3, #32
 8008b38:	d005      	beq.n	8008b46 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008b3a:	2320      	movs	r3, #32
 8008b3c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008b40:	4638      	mov	r0, r7
 8008b42:	f009 fac5 	bl	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008b46:	4638      	mov	r0, r7
 8008b48:	2101      	movs	r1, #1
 8008b4a:	f009 fbcd 	bl	80122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008b4e:	4639      	mov	r1, r7
 8008b50:	4630      	mov	r0, r6
 8008b52:	f007 fe45 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008b56:	ee19 0a10 	vmov	r0, s18
 8008b5a:	22f0      	movs	r2, #240	; 0xf0
 8008b5c:	2121      	movs	r1, #33	; 0x21
 8008b5e:	f7fa faee 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008b62:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b64:	aa0a      	add	r2, sp, #40	; 0x28
 8008b66:	a909      	add	r1, sp, #36	; 0x24
 8008b68:	ee19 0a10 	vmov	r0, s18
 8008b6c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b70:	2302      	movs	r3, #2
 8008b72:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008b76:	f00a f9cc 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008b7a:	2352      	movs	r3, #82	; 0x52
        updateTextPosition();
 8008b7c:	ee19 0a10 	vmov	r0, s18
 8008b80:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008b84:	f7fa fb30 	bl	80031e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008b88:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008b8c:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008b90:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8008b94:	ee19 1a10 	vmov	r1, s18
 8008b98:	4630      	mov	r0, r6
        colorPressed = col;
 8008b9a:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8008b9e:	ad04      	add	r5, sp, #16
 8008ba0:	f007 fe1e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008ba4:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008ba8:	225b      	movs	r2, #91	; 0x5b
 8008baa:	4640      	mov	r0, r8
 8008bac:	2105      	movs	r1, #5
 8008bae:	f7fa fac6 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008bb2:	4641      	mov	r1, r8
 8008bb4:	4628      	mov	r0, r5
        color = newColor;
 8008bb6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8008bba:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8008bbe:	f009 fd29 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008bc2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008bc6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008bca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008bce:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008cc8 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8008bd2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008bd6:	2353      	movs	r3, #83	; 0x53
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8008bd8:	a90a      	add	r1, sp, #40	; 0x28
 8008bda:	4640      	mov	r0, r8
 8008bdc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008be0:	f009 ffb2 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008be4:	4641      	mov	r1, r8
 8008be6:	4630      	mov	r0, r6
 8008be8:	f007 fdfa 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008bec:	ee18 0a10 	vmov	r0, s16
 8008bf0:	2223      	movs	r2, #35	; 0x23
 8008bf2:	2145      	movs	r1, #69	; 0x45
 8008bf4:	f7fa faa3 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008bf8:	ee18 1a10 	vmov	r1, s16
 8008bfc:	4628      	mov	r0, r5
        color = newColor;
 8008bfe:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008c02:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008c06:	f009 fd05 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008c0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c0e:	ee18 3a10 	vmov	r3, s16
 8008c12:	333c      	adds	r3, #60	; 0x3c
 8008c14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008c18:	2355      	movs	r3, #85	; 0x55
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008c1a:	ee18 0a10 	vmov	r0, s16
 8008c1e:	a90a      	add	r1, sp, #40	; 0x28
 8008c20:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c24:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008c28:	f009 ff8e 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c2c:	ee18 1a10 	vmov	r1, s16
 8008c30:	4630      	mov	r0, r6
 8008c32:	f007 fdd5 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008c36:	ee18 0a90 	vmov	r0, s17
 8008c3a:	220c      	movs	r2, #12
 8008c3c:	2136      	movs	r1, #54	; 0x36
 8008c3e:	f7fa fa7e 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008c42:	ee18 1a90 	vmov	r1, s17
 8008c46:	4628      	mov	r0, r5
        color = newColor;
 8008c48:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008c4c:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008c50:	f009 fce0 	bl	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008c54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c58:	ee18 3a90 	vmov	r3, s17
 8008c5c:	333c      	adds	r3, #60	; 0x3c
 8008c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008c62:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008c64:	ee18 0a90 	vmov	r0, s17
 8008c68:	a90a      	add	r1, sp, #40	; 0x28
 8008c6a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c6e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008c72:	f009 ff69 	bl	8012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c76:	4630      	mov	r0, r6
 8008c78:	ee18 1a90 	vmov	r1, s17
 8008c7c:	f007 fdb0 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008c80:	4620      	mov	r0, r4
 8008c82:	b00d      	add	sp, #52	; 0x34
 8008c84:	ecbd 8b04 	vpop	{d8-d9}
 8008c88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c8c:	0802e3c4 	.word	0x0802e3c4
 8008c90:	0802f120 	.word	0x0802f120
 8008c94:	0802f2e8 	.word	0x0802f2e8
 8008c98:	0802c7d0 	.word	0x0802c7d0
 8008c9c:	0802ee54 	.word	0x0802ee54
 8008ca0:	0802e3ac 	.word	0x0802e3ac
 8008ca4:	08008919 	.word	0x08008919
 8008ca8:	20012e0c 	.word	0x20012e0c
 8008cac:	0802c610 	.word	0x0802c610
 8008cb0:	0802c712 	.word	0x0802c712
 8008cb4:	0802c68d 	.word	0x0802c68d
 8008cb8:	20012e10 	.word	0x20012e10
 8008cbc:	0802c6d4 	.word	0x0802c6d4
 8008cc0:	20012e18 	.word	0x20012e18
 8008cc4:	0802c74a 	.word	0x0802c74a
 8008cc8:	0802c7c0 	.word	0x0802c7c0

08008ccc <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008ccc:	4770      	bx	lr

08008cce <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008cce:	4770      	bx	lr

08008cd0 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008cd0:	b510      	push	{r4, lr}
}
 8008cd2:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008cd4:	4604      	mov	r4, r0
}
 8008cd6:	f021 f892 	bl	8029dfe <_ZdlPvj>
 8008cda:	4620      	mov	r0, r4
 8008cdc:	bd10      	pop	{r4, pc}
	...

08008ce0 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008ce0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008ce4:	4604      	mov	r4, r0
 8008ce6:	4626      	mov	r6, r4
 8008ce8:	f00e fc92 	bl	8017610 <_ZN8touchgfx6ScreenC1Ev>
 8008cec:	2500      	movs	r5, #0
 8008cee:	4b2e      	ldr	r3, [pc, #184]	; (8008da8 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008cf0:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008cf2:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008cf6:	4b2d      	ldr	r3, [pc, #180]	; (8008dac <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008cf8:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008cfa:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008cfe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008d02:	23ff      	movs	r3, #255	; 0xff
 8008d04:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008d08:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008d0c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008d10:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008d14:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008d18:	4a25      	ldr	r2, [pc, #148]	; (8008db0 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008d1a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008d1e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008d22:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008d24:	a901      	add	r1, sp, #4
 8008d26:	4638      	mov	r0, r7
 8008d28:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008d2c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008d30:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008d34:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008d38:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008d3c:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008d40:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008d44:	66a5      	str	r5, [r4, #104]	; 0x68
 8008d46:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008d4a:	f00a fad8 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008d4e:	462a      	mov	r2, r5
 8008d50:	4629      	mov	r1, r5
 8008d52:	4630      	mov	r0, r6
 8008d54:	f7fa f9f3 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008d58:	4630      	mov	r0, r6
 8008d5a:	21f0      	movs	r1, #240	; 0xf0
 8008d5c:	f7f8 fcdc 	bl	8001718 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008d60:	4630      	mov	r0, r6
 8008d62:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008d66:	f7f8 fcd9 	bl	800171c <_ZN8touchgfx8Drawable9setHeightEs>
 8008d6a:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008d6e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008d72:	66a3      	str	r3, [r4, #104]	; 0x68
 8008d74:	4631      	mov	r1, r6
 8008d76:	4640      	mov	r0, r8
 8008d78:	f007 fd32 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008d7c:	462a      	mov	r2, r5
 8008d7e:	4638      	mov	r0, r7
 8008d80:	f06f 0102 	mvn.w	r1, #2
 8008d84:	f7fa f9db 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8008d88:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008d8a:	a901      	add	r1, sp, #4
 8008d8c:	4638      	mov	r0, r7
 8008d8e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008d92:	f00a fab4 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008d96:	4640      	mov	r0, r8
 8008d98:	4639      	mov	r1, r7
 8008d9a:	f007 fd21 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008d9e:	4620      	mov	r0, r4
 8008da0:	b002      	add	sp, #8
 8008da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008da6:	bf00      	nop
 8008da8:	0802e3f8 	.word	0x0802e3f8
 8008dac:	0802f120 	.word	0x0802f120
 8008db0:	0802f2e8 	.word	0x0802f2e8

08008db4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008db4:	4770      	bx	lr
	...

08008db8 <_Z23getFont_verdana_10_4bppv>:
{
 8008db8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008dba:	4d17      	ldr	r5, [pc, #92]	; (8008e18 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008dbc:	682c      	ldr	r4, [r5, #0]
 8008dbe:	f3bf 8f5b 	dmb	ish
 8008dc2:	f014 0401 	ands.w	r4, r4, #1
{
 8008dc6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008dc8:	d122      	bne.n	8008e10 <_Z23getFont_verdana_10_4bppv+0x58>
 8008dca:	4628      	mov	r0, r5
 8008dcc:	f021 f819 	bl	8029e02 <__cxa_guard_acquire>
 8008dd0:	b1f0      	cbz	r0, 8008e10 <_Z23getFont_verdana_10_4bppv+0x58>
 8008dd2:	233f      	movs	r3, #63	; 0x3f
 8008dd4:	9309      	str	r3, [sp, #36]	; 0x24
 8008dd6:	4b11      	ldr	r3, [pc, #68]	; (8008e1c <_Z23getFont_verdana_10_4bppv+0x64>)
 8008dd8:	9308      	str	r3, [sp, #32]
 8008dda:	4b11      	ldr	r3, [pc, #68]	; (8008e20 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008ddc:	9307      	str	r3, [sp, #28]
 8008dde:	2301      	movs	r3, #1
 8008de0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008de4:	9304      	str	r3, [sp, #16]
 8008de6:	2304      	movs	r3, #4
 8008de8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008dec:	230a      	movs	r3, #10
 8008dee:	490d      	ldr	r1, [pc, #52]	; (8008e24 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008df0:	9300      	str	r3, [sp, #0]
 8008df2:	225f      	movs	r2, #95	; 0x5f
 8008df4:	230c      	movs	r3, #12
 8008df6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008dfa:	480b      	ldr	r0, [pc, #44]	; (8008e28 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008dfc:	940a      	str	r4, [sp, #40]	; 0x28
 8008dfe:	9401      	str	r4, [sp, #4]
 8008e00:	f7fd f9ec 	bl	80061dc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008e04:	4809      	ldr	r0, [pc, #36]	; (8008e2c <_Z23getFont_verdana_10_4bppv+0x74>)
 8008e06:	f021 feff 	bl	802ac08 <atexit>
 8008e0a:	4628      	mov	r0, r5
 8008e0c:	f021 f805 	bl	8029e1a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008e10:	4805      	ldr	r0, [pc, #20]	; (8008e28 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008e12:	b00f      	add	sp, #60	; 0x3c
 8008e14:	bd30      	pop	{r4, r5, pc}
 8008e16:	bf00      	nop
 8008e18:	20001ed0 	.word	0x20001ed0
 8008e1c:	08046f8c 	.word	0x08046f8c
 8008e20:	080471c8 	.word	0x080471c8
 8008e24:	08045fd4 	.word	0x08045fd4
 8008e28:	20001ed4 	.word	0x20001ed4
 8008e2c:	08008db5 	.word	0x08008db5

08008e30 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008e30:	4770      	bx	lr
	...

08008e34 <_Z23getFont_verdana_12_4bppv>:
{
 8008e34:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008e36:	4d17      	ldr	r5, [pc, #92]	; (8008e94 <_Z23getFont_verdana_12_4bppv+0x60>)
 8008e38:	682c      	ldr	r4, [r5, #0]
 8008e3a:	f3bf 8f5b 	dmb	ish
 8008e3e:	f014 0401 	ands.w	r4, r4, #1
{
 8008e42:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008e44:	d122      	bne.n	8008e8c <_Z23getFont_verdana_12_4bppv+0x58>
 8008e46:	4628      	mov	r0, r5
 8008e48:	f020 ffdb 	bl	8029e02 <__cxa_guard_acquire>
 8008e4c:	b1f0      	cbz	r0, 8008e8c <_Z23getFont_verdana_12_4bppv+0x58>
 8008e4e:	233f      	movs	r3, #63	; 0x3f
 8008e50:	9309      	str	r3, [sp, #36]	; 0x24
 8008e52:	4b11      	ldr	r3, [pc, #68]	; (8008e98 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008e54:	9308      	str	r3, [sp, #32]
 8008e56:	4b11      	ldr	r3, [pc, #68]	; (8008e9c <_Z23getFont_verdana_12_4bppv+0x68>)
 8008e58:	9307      	str	r3, [sp, #28]
 8008e5a:	2301      	movs	r3, #1
 8008e5c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008e60:	9304      	str	r3, [sp, #16]
 8008e62:	2304      	movs	r3, #4
 8008e64:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008e68:	230c      	movs	r3, #12
 8008e6a:	490d      	ldr	r1, [pc, #52]	; (8008ea0 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008e6c:	9300      	str	r3, [sp, #0]
 8008e6e:	2260      	movs	r2, #96	; 0x60
 8008e70:	230f      	movs	r3, #15
 8008e72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008e76:	480b      	ldr	r0, [pc, #44]	; (8008ea4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008e78:	940a      	str	r4, [sp, #40]	; 0x28
 8008e7a:	9401      	str	r4, [sp, #4]
 8008e7c:	f7fd f9ae 	bl	80061dc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008e80:	4809      	ldr	r0, [pc, #36]	; (8008ea8 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008e82:	f021 fec1 	bl	802ac08 <atexit>
 8008e86:	4628      	mov	r0, r5
 8008e88:	f020 ffc7 	bl	8029e1a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008e8c:	4805      	ldr	r0, [pc, #20]	; (8008ea4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008e8e:	b00f      	add	sp, #60	; 0x3c
 8008e90:	bd30      	pop	{r4, r5, pc}
 8008e92:	bf00      	nop
 8008e94:	20001f00 	.word	0x20001f00
 8008e98:	08046fc0 	.word	0x08046fc0
 8008e9c:	080471cc 	.word	0x080471cc
 8008ea0:	08046508 	.word	0x08046508
 8008ea4:	20001f04 	.word	0x20001f04
 8008ea8:	08008e31 	.word	0x08008e31

08008eac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008eac:	4770      	bx	lr
	...

08008eb0 <_Z23getFont_verdana_19_4bppv>:
{
 8008eb0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008eb2:	4d17      	ldr	r5, [pc, #92]	; (8008f10 <_Z23getFont_verdana_19_4bppv+0x60>)
 8008eb4:	682c      	ldr	r4, [r5, #0]
 8008eb6:	f3bf 8f5b 	dmb	ish
 8008eba:	f014 0401 	ands.w	r4, r4, #1
{
 8008ebe:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008ec0:	d122      	bne.n	8008f08 <_Z23getFont_verdana_19_4bppv+0x58>
 8008ec2:	4628      	mov	r0, r5
 8008ec4:	f020 ff9d 	bl	8029e02 <__cxa_guard_acquire>
 8008ec8:	b1f0      	cbz	r0, 8008f08 <_Z23getFont_verdana_19_4bppv+0x58>
 8008eca:	233f      	movs	r3, #63	; 0x3f
 8008ecc:	9309      	str	r3, [sp, #36]	; 0x24
 8008ece:	4b11      	ldr	r3, [pc, #68]	; (8008f14 <_Z23getFont_verdana_19_4bppv+0x64>)
 8008ed0:	9308      	str	r3, [sp, #32]
 8008ed2:	4b11      	ldr	r3, [pc, #68]	; (8008f18 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008ed4:	9307      	str	r3, [sp, #28]
 8008ed6:	2301      	movs	r3, #1
 8008ed8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008edc:	9304      	str	r3, [sp, #16]
 8008ede:	2304      	movs	r3, #4
 8008ee0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008ee4:	2313      	movs	r3, #19
 8008ee6:	490d      	ldr	r1, [pc, #52]	; (8008f1c <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008ee8:	9300      	str	r3, [sp, #0]
 8008eea:	225f      	movs	r2, #95	; 0x5f
 8008eec:	2317      	movs	r3, #23
 8008eee:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008ef2:	480b      	ldr	r0, [pc, #44]	; (8008f20 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008ef4:	940a      	str	r4, [sp, #40]	; 0x28
 8008ef6:	9401      	str	r4, [sp, #4]
 8008ef8:	f7fd f970 	bl	80061dc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008efc:	4809      	ldr	r0, [pc, #36]	; (8008f24 <_Z23getFont_verdana_19_4bppv+0x74>)
 8008efe:	f021 fe83 	bl	802ac08 <atexit>
 8008f02:	4628      	mov	r0, r5
 8008f04:	f020 ff89 	bl	8029e1a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008f08:	4805      	ldr	r0, [pc, #20]	; (8008f20 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008f0a:	b00f      	add	sp, #60	; 0x3c
 8008f0c:	bd30      	pop	{r4, r5, pc}
 8008f0e:	bf00      	nop
 8008f10:	20001f30 	.word	0x20001f30
 8008f14:	08047044 	.word	0x08047044
 8008f18:	080471d0 	.word	0x080471d0
 8008f1c:	08046a48 	.word	0x08046a48
 8008f20:	20001f34 	.word	0x20001f34
 8008f24:	08008ead 	.word	0x08008ead

08008f28 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008f28:	4770      	bx	lr
	...

08008f2c <_Z23getFont_verdana_40_4bppv>:
{
 8008f2c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008f2e:	4d16      	ldr	r5, [pc, #88]	; (8008f88 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008f30:	682c      	ldr	r4, [r5, #0]
 8008f32:	f3bf 8f5b 	dmb	ish
 8008f36:	f014 0401 	ands.w	r4, r4, #1
{
 8008f3a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008f3c:	d120      	bne.n	8008f80 <_Z23getFont_verdana_40_4bppv+0x54>
 8008f3e:	4628      	mov	r0, r5
 8008f40:	f020 ff5f 	bl	8029e02 <__cxa_guard_acquire>
 8008f44:	b1e0      	cbz	r0, 8008f80 <_Z23getFont_verdana_40_4bppv+0x54>
 8008f46:	233f      	movs	r3, #63	; 0x3f
 8008f48:	9309      	str	r3, [sp, #36]	; 0x24
 8008f4a:	4b10      	ldr	r3, [pc, #64]	; (8008f8c <_Z23getFont_verdana_40_4bppv+0x60>)
 8008f4c:	9308      	str	r3, [sp, #32]
 8008f4e:	4b10      	ldr	r3, [pc, #64]	; (8008f90 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008f50:	4910      	ldr	r1, [pc, #64]	; (8008f94 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008f52:	4811      	ldr	r0, [pc, #68]	; (8008f98 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008f54:	940a      	str	r4, [sp, #40]	; 0x28
 8008f56:	2201      	movs	r2, #1
 8008f58:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008f5c:	2304      	movs	r3, #4
 8008f5e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8008f62:	2328      	movs	r3, #40	; 0x28
 8008f64:	9300      	str	r3, [sp, #0]
 8008f66:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008f6a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008f6e:	9405      	str	r4, [sp, #20]
 8008f70:	f7fd f934 	bl	80061dc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008f74:	4809      	ldr	r0, [pc, #36]	; (8008f9c <_Z23getFont_verdana_40_4bppv+0x70>)
 8008f76:	f021 fe47 	bl	802ac08 <atexit>
 8008f7a:	4628      	mov	r0, r5
 8008f7c:	f020 ff4d 	bl	8029e1a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008f80:	4805      	ldr	r0, [pc, #20]	; (8008f98 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008f82:	b00f      	add	sp, #60	; 0x3c
 8008f84:	bd30      	pop	{r4, r5, pc}
 8008f86:	bf00      	nop
 8008f88:	20001f60 	.word	0x20001f60
 8008f8c:	080471c4 	.word	0x080471c4
 8008f90:	080471d4 	.word	0x080471d4
 8008f94:	08046f7c 	.word	0x08046f7c
 8008f98:	20001f64 	.word	0x20001f64
 8008f9c:	08008f29 	.word	0x08008f29

08008fa0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008fa0:	2000      	movs	r0, #0
 8008fa2:	4770      	bx	lr

08008fa4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008fa4:	2000      	movs	r0, #0
 8008fa6:	4770      	bx	lr

08008fa8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008fa8:	b40e      	push	{r1, r2, r3}
 8008faa:	b503      	push	{r0, r1, lr}
 8008fac:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008fae:	2100      	movs	r1, #0
{
 8008fb0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008fb4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008fb6:	f00d fe69 	bl	8016c8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008fba:	b002      	add	sp, #8
 8008fbc:	f85d eb04 	ldr.w	lr, [sp], #4
 8008fc0:	b003      	add	sp, #12
 8008fc2:	4770      	bx	lr

08008fc4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008fc4:	b40c      	push	{r2, r3}
 8008fc6:	b507      	push	{r0, r1, r2, lr}
 8008fc8:	ab04      	add	r3, sp, #16
 8008fca:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008fce:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008fd0:	f00d fe5c 	bl	8016c8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008fd4:	b003      	add	sp, #12
 8008fd6:	f85d eb04 	ldr.w	lr, [sp], #4
 8008fda:	b002      	add	sp, #8
 8008fdc:	4770      	bx	lr
	...

08008fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008fe0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008fe2:	b510      	push	{r4, lr}
 8008fe4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008fe6:	b373      	cbz	r3, 8009046 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008fe8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008fea:	b92b      	cbnz	r3, 8008ff8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008fec:	4b18      	ldr	r3, [pc, #96]	; (8009050 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008fee:	4a19      	ldr	r2, [pc, #100]	; (8009054 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008ff0:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008ff2:	4819      	ldr	r0, [pc, #100]	; (8009058 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008ff4:	f021 fdea 	bl	802abcc <__assert_func>
            return buffer[pos];
 8008ff8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008ffa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008ffe:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8009000:	b30b      	cbz	r3, 8009046 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8009002:	f00f fa40 	bl	8018486 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8009006:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8009008:	2b01      	cmp	r3, #1
 800900a:	d803      	bhi.n	8009014 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800900c:	4b13      	ldr	r3, [pc, #76]	; (800905c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800900e:	4a14      	ldr	r2, [pc, #80]	; (8009060 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8009010:	21cb      	movs	r1, #203	; 0xcb
 8009012:	e7ee      	b.n	8008ff2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8009014:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8009016:	1c53      	adds	r3, r2, #1
 8009018:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800901a:	2b09      	cmp	r3, #9
 800901c:	4619      	mov	r1, r3
 800901e:	bf88      	it	hi
 8009020:	f1a3 010a 	subhi.w	r1, r3, #10
 8009024:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8009028:	f640 103f 	movw	r0, #2367	; 0x93f
 800902c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800902e:	4281      	cmp	r1, r0
 8009030:	d109      	bne.n	8009046 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8009032:	2b0a      	cmp	r3, #10
 8009034:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8009038:	bf28      	it	cs
 800903a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800903c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8009040:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8009042:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8009044:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8009046:	4620      	mov	r0, r4
}
 8009048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800904c:	f00f b91e 	b.w	801828c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009050:	0802e424 	.word	0x0802e424
 8009054:	0802e42d 	.word	0x0802e42d
 8009058:	0802e4d8 	.word	0x0802e4d8
 800905c:	0802e522 	.word	0x0802e522
 8009060:	0802e530 	.word	0x0802e530

08009064 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8009064:	f00f b8d9 	b.w	801821a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08009068 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8009068:	b510      	push	{r4, lr}
 800906a:	b086      	sub	sp, #24
 800906c:	ac02      	add	r4, sp, #8
 800906e:	e884 0006 	stmia.w	r4, {r1, r2}
 8009072:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8009074:	ab0a      	add	r3, sp, #40	; 0x28
 8009076:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8009078:	9301      	str	r3, [sp, #4]
 800907a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800907c:	9300      	str	r3, [sp, #0]
 800907e:	4621      	mov	r1, r4
 8009080:	9b08      	ldr	r3, [sp, #32]
 8009082:	f00c f9c7 	bl	8015414 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8009086:	b006      	add	sp, #24
 8009088:	bd10      	pop	{r4, pc}
	...

0800908c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800908c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800908e:	bb18      	cbnz	r0, 80090d8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8009090:	4b12      	ldr	r3, [pc, #72]	; (80090dc <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8009092:	4813      	ldr	r0, [pc, #76]	; (80090e0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8009094:	681c      	ldr	r4, [r3, #0]
 8009096:	4913      	ldr	r1, [pc, #76]	; (80090e4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8009098:	b1b4      	cbz	r4, 80090c8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800909a:	6822      	ldr	r2, [r4, #0]
 800909c:	4422      	add	r2, r4
 800909e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80090a0:	6862      	ldr	r2, [r4, #4]
 80090a2:	4422      	add	r2, r4
 80090a4:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80090a6:	68a2      	ldr	r2, [r4, #8]
 80090a8:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80090aa:	4b0f      	ldr	r3, [pc, #60]	; (80090e8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80090ac:	2200      	movs	r2, #0
 80090ae:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80090b0:	f000 f838 	bl	8009124 <_ZN17TypedTextDatabase8getFontsEv>
 80090b4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80090b6:	f000 f833 	bl	8009120 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80090ba:	4b0c      	ldr	r3, [pc, #48]	; (80090ec <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80090bc:	601c      	str	r4, [r3, #0]
        fonts = f;
 80090be:	4b0c      	ldr	r3, [pc, #48]	; (80090f0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80090c0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80090c2:	4b0c      	ldr	r3, [pc, #48]	; (80090f4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80090c4:	8018      	strh	r0, [r3, #0]
    }
}
 80090c6:	e007      	b.n	80090d8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80090c8:	4b0b      	ldr	r3, [pc, #44]	; (80090f8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80090ca:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80090cc:	4b0b      	ldr	r3, [pc, #44]	; (80090fc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80090ce:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80090d0:	4b0b      	ldr	r3, [pc, #44]	; (8009100 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80090d2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80090d4:	2c00      	cmp	r4, #0
 80090d6:	d1e8      	bne.n	80090aa <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80090d8:	bd38      	pop	{r3, r4, r5, pc}
 80090da:	bf00      	nop
 80090dc:	20001f90 	.word	0x20001f90
 80090e0:	20001f94 	.word	0x20001f94
 80090e4:	20001f98 	.word	0x20001f98
 80090e8:	20001f9c 	.word	0x20001f9c
 80090ec:	20012e0c 	.word	0x20012e0c
 80090f0:	20012e14 	.word	0x20012e14
 80090f4:	20012e10 	.word	0x20012e10
 80090f8:	0804736c 	.word	0x0804736c
 80090fc:	080471d8 	.word	0x080471d8
 8009100:	08047998 	.word	0x08047998

08009104 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8009104:	4b04      	ldr	r3, [pc, #16]	; (8009118 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8009106:	681b      	ldr	r3, [r3, #0]
 8009108:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800910c:	4b03      	ldr	r3, [pc, #12]	; (800911c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800910e:	681b      	ldr	r3, [r3, #0]
}
 8009110:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8009114:	4770      	bx	lr
 8009116:	bf00      	nop
 8009118:	20001f98 	.word	0x20001f98
 800911c:	20001f94 	.word	0x20001f94

08009120 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8009120:	2065      	movs	r0, #101	; 0x65
 8009122:	4770      	bx	lr

08009124 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8009124:	4800      	ldr	r0, [pc, #0]	; (8009128 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8009126:	4770      	bx	lr
 8009128:	20001fa0 	.word	0x20001fa0

0800912c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800912c:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800912e:	f7ff febf 	bl	8008eb0 <_Z23getFont_verdana_19_4bppv>
};
 8009132:	4c06      	ldr	r4, [pc, #24]	; (800914c <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8009134:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8009136:	f7ff fef9 	bl	8008f2c <_Z23getFont_verdana_40_4bppv>
};
 800913a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800913c:	f7ff fe3c 	bl	8008db8 <_Z23getFont_verdana_10_4bppv>
};
 8009140:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8009142:	f7ff fe77 	bl	8008e34 <_Z23getFont_verdana_12_4bppv>
};
 8009146:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8009148:	bd10      	pop	{r4, pc}
 800914a:	bf00      	nop
 800914c:	20001fa0 	.word	0x20001fa0

08009150 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8009150:	4770      	bx	lr

08009152 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8009152:	3804      	subs	r0, #4
 8009154:	4770      	bx	lr

08009156 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8009156:	4770      	bx	lr

08009158 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009158:	68c0      	ldr	r0, [r0, #12]
 800915a:	6803      	ldr	r3, [r0, #0]
 800915c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800915e:	4718      	bx	r3

08009160 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009160:	f1a0 0004 	sub.w	r0, r0, #4
 8009164:	f7ff bff8 	b.w	8009158 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08009168 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8009168:	b510      	push	{r4, lr}
 800916a:	2110      	movs	r1, #16
 800916c:	4604      	mov	r4, r0
 800916e:	f020 fe46 	bl	8029dfe <_ZdlPvj>
 8009172:	4620      	mov	r0, r4
 8009174:	bd10      	pop	{r4, pc}

08009176 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8009176:	f1a0 0004 	sub.w	r0, r0, #4
 800917a:	e7f5      	b.n	8009168 <_ZN20CalibrationPresenterD0Ev>

0800917c <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 800917c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800917e:	2200      	movs	r2, #0
 8009180:	6082      	str	r2, [r0, #8]
    : view(v)
 8009182:	4a04      	ldr	r2, [pc, #16]	; (8009194 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8009184:	60c1      	str	r1, [r0, #12]
 8009186:	f102 0408 	add.w	r4, r2, #8
 800918a:	3224      	adds	r2, #36	; 0x24
 800918c:	6004      	str	r4, [r0, #0]
 800918e:	6042      	str	r2, [r0, #4]
}
 8009190:	bd10      	pop	{r4, pc}
 8009192:	bf00      	nop
 8009194:	0802e604 	.word	0x0802e604

08009198 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8009198:	4770      	bx	lr
	...

0800919c <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 800919c:	b510      	push	{r4, lr}
 800919e:	4b03      	ldr	r3, [pc, #12]	; (80091ac <_ZN15CalibrationViewD1Ev+0x10>)
 80091a0:	6003      	str	r3, [r0, #0]
 80091a2:	4604      	mov	r4, r0
 80091a4:	f7f9 ff50 	bl	8003048 <_ZN19CalibrationViewBaseD1Ev>
 80091a8:	4620      	mov	r0, r4
 80091aa:	bd10      	pop	{r4, pc}
 80091ac:	0802e640 	.word	0x0802e640

080091b0 <_ZN15CalibrationViewD0Ev>:
 80091b0:	b510      	push	{r4, lr}
 80091b2:	4604      	mov	r4, r0
 80091b4:	f7ff fff2 	bl	800919c <_ZN15CalibrationViewD1Ev>
 80091b8:	4620      	mov	r0, r4
 80091ba:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80091be:	f020 fe1e 	bl	8029dfe <_ZdlPvj>
 80091c2:	4620      	mov	r0, r4
 80091c4:	bd10      	pop	{r4, pc}
	...

080091c8 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 80091c8:	b510      	push	{r4, lr}
 80091ca:	4604      	mov	r4, r0
 80091cc:	f7fa f850 	bl	8003270 <_ZN19CalibrationViewBaseC1Ev>
 80091d0:	4b01      	ldr	r3, [pc, #4]	; (80091d8 <_ZN15CalibrationViewC1Ev+0x10>)
 80091d2:	6023      	str	r3, [r4, #0]
}
 80091d4:	4620      	mov	r0, r4
 80091d6:	bd10      	pop	{r4, pc}
 80091d8:	0802e640 	.word	0x0802e640

080091dc <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 80091dc:	f7f9 bf01 	b.w	8002fe2 <_ZN19CalibrationViewBase11setupScreenEv>

080091e0 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 80091e0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80091e2:	4a0a      	ldr	r2, [pc, #40]	; (800920c <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 80091e4:	4605      	mov	r5, r0
 80091e6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80091e8:	460b      	mov	r3, r1
 80091ea:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80091ee:	2104      	movs	r1, #4
 80091f0:	f00f fefe 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80091f4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80091f8:	f00d fe72 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80091fc:	b92c      	cbnz	r4, 800920a <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 80091fe:	f00c fd87 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009202:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009206:	f7fb bc61 	b.w	8004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800920a:	bd38      	pop	{r3, r4, r5, pc}
 800920c:	0802e634 	.word	0x0802e634

08009210 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8009210:	4770      	bx	lr

08009212 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8009212:	3804      	subs	r0, #4
 8009214:	4770      	bx	lr

08009216 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8009216:	4770      	bx	lr

08009218 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8009218:	4770      	bx	lr

0800921a <_ZN25Calibration_HallPresenterD0Ev>:
 800921a:	b510      	push	{r4, lr}
 800921c:	2110      	movs	r1, #16
 800921e:	4604      	mov	r4, r0
 8009220:	f020 fded 	bl	8029dfe <_ZdlPvj>
 8009224:	4620      	mov	r0, r4
 8009226:	bd10      	pop	{r4, pc}

08009228 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8009228:	f1a0 0004 	sub.w	r0, r0, #4
 800922c:	e7f5      	b.n	800921a <_ZN25Calibration_HallPresenterD0Ev>

0800922e <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 800922e:	4770      	bx	lr

08009230 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8009230:	b510      	push	{r4, lr}
 8009232:	2200      	movs	r2, #0
 8009234:	6082      	str	r2, [r0, #8]
    : view(v)
 8009236:	4a04      	ldr	r2, [pc, #16]	; (8009248 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8009238:	60c1      	str	r1, [r0, #12]
 800923a:	f102 0408 	add.w	r4, r2, #8
 800923e:	3224      	adds	r2, #36	; 0x24
 8009240:	6004      	str	r4, [r0, #0]
 8009242:	6042      	str	r2, [r0, #4]
}
 8009244:	bd10      	pop	{r4, pc}
 8009246:	bf00      	nop
 8009248:	0802e670 	.word	0x0802e670

0800924c <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 800924c:	4770      	bx	lr

0800924e <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 800924e:	4770      	bx	lr

08009250 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8009250:	b510      	push	{r4, lr}
 8009252:	4b03      	ldr	r3, [pc, #12]	; (8009260 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8009254:	6003      	str	r3, [r0, #0]
 8009256:	4604      	mov	r4, r0
 8009258:	f7fa fa50 	bl	80036fc <_ZN24Calibration_HallViewBaseD1Ev>
 800925c:	4620      	mov	r0, r4
 800925e:	bd10      	pop	{r4, pc}
 8009260:	0802e6b0 	.word	0x0802e6b0

08009264 <_ZN20Calibration_HallViewD0Ev>:
 8009264:	b510      	push	{r4, lr}
 8009266:	4604      	mov	r4, r0
 8009268:	f7ff fff2 	bl	8009250 <_ZN20Calibration_HallViewD1Ev>
 800926c:	4620      	mov	r0, r4
 800926e:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8009272:	f020 fdc4 	bl	8029dfe <_ZdlPvj>
 8009276:	4620      	mov	r0, r4
 8009278:	bd10      	pop	{r4, pc}
	...

0800927c <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 800927c:	b510      	push	{r4, lr}
 800927e:	4604      	mov	r4, r0
 8009280:	f7fa fa82 	bl	8003788 <_ZN24Calibration_HallViewBaseC1Ev>
 8009284:	4b01      	ldr	r3, [pc, #4]	; (800928c <_ZN20Calibration_HallViewC1Ev+0x10>)
 8009286:	6023      	str	r3, [r4, #0]
}
 8009288:	4620      	mov	r0, r4
 800928a:	bd10      	pop	{r4, pc}
 800928c:	0802e6b0 	.word	0x0802e6b0

08009290 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8009290:	f7fa ba0f 	b.w	80036b2 <_ZN24Calibration_HallViewBase11setupScreenEv>

08009294 <_ZN20Calibration_HallView25function_cali_hall_sensorEv>:

void Calibration_HallView::function_cali_hall_sensor()
{
 8009294:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009296:	b085      	sub	sp, #20
 8009298:	4604      	mov	r4, r0
#ifndef SIMULATOR

	uint32_t* Samples = MEAS_start_measure();
 800929a:	f7f9 fa8d 	bl	80027b8 <MEAS_start_measure>
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800929e:	4d22      	ldr	r5, [pc, #136]	; (8009328 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x94>)
 80092a0:	4606      	mov	r6, r0
	FFT fft = calculate_freq_and_signalstrength(3, Samples);
 80092a2:	4602      	mov	r2, r0
 80092a4:	2103      	movs	r1, #3
 80092a6:	a801      	add	r0, sp, #4
 80092a8:	f7f8 fb90 	bl	80019cc <calculate_freq_and_signalstrength>
 80092ac:	9b02      	ldr	r3, [sp, #8]
 80092ae:	9300      	str	r3, [sp, #0]
 80092b0:	462a      	mov	r2, r5
 80092b2:	466b      	mov	r3, sp
 80092b4:	210a      	movs	r1, #10
 80092b6:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 80092ba:	9f01      	ldr	r7, [sp, #4]
 80092bc:	f010 f884 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%.2f", fft.signal_strength);
	CALIBRATION_HSR_S.invalidate();
 80092c0:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 80092c4:	f00d fe0c 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80092c8:	466b      	mov	r3, sp
 80092ca:	462a      	mov	r2, r5
 80092cc:	210a      	movs	r1, #10
 80092ce:	f504 7065 	add.w	r0, r4, #916	; 0x394
 80092d2:	9700      	str	r7, [sp, #0]
 80092d4:	f010 f878 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%.2f", fft.main_freq);
	CALIBRATION_HSR_F.invalidate();
 80092d8:	f504 7098 	add.w	r0, r4, #304	; 0x130
 80092dc:	f00d fe00 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	fft = calculate_freq_and_signalstrength(4, Samples);
 80092e0:	2104      	movs	r1, #4
 80092e2:	eb0d 0001 	add.w	r0, sp, r1
 80092e6:	4632      	mov	r2, r6
 80092e8:	f7f8 fb70 	bl	80019cc <calculate_freq_and_signalstrength>
 80092ec:	9b02      	ldr	r3, [sp, #8]
 80092ee:	9300      	str	r3, [sp, #0]
 80092f0:	462a      	mov	r2, r5
 80092f2:	466b      	mov	r3, sp
 80092f4:	210a      	movs	r1, #10
 80092f6:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 80092fa:	9e01      	ldr	r6, [sp, #4]
 80092fc:	f010 f864 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%.2f", fft.signal_strength);
	CALIBRATION_HSL_S.invalidate();
 8009300:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8009304:	f00d fdec 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009308:	466b      	mov	r3, sp
 800930a:	462a      	mov	r2, r5
 800930c:	210a      	movs	r1, #10
 800930e:	f504 7060 	add.w	r0, r4, #896	; 0x380
 8009312:	9600      	str	r6, [sp, #0]
 8009314:	f010 f858 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%.2f", fft.main_freq);
	CALIBRATION_HSL_F.invalidate();
 8009318:	f104 00e4 	add.w	r0, r4, #228	; 0xe4

#endif
}
 800931c:	b005      	add	sp, #20
 800931e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	CALIBRATION_HSL_F.invalidate();
 8009322:	f00d bddd 	b.w	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009326:	bf00      	nop
 8009328:	0802e6a0 	.word	0x0802e6a0

0800932c <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800932c:	4770      	bx	lr

0800932e <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800932e:	3804      	subs	r0, #4
 8009330:	4770      	bx	lr

08009332 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8009332:	4770      	bx	lr

08009334 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8009334:	4770      	bx	lr

08009336 <_ZN24Calibration_PadPresenterD0Ev>:
 8009336:	b510      	push	{r4, lr}
 8009338:	2110      	movs	r1, #16
 800933a:	4604      	mov	r4, r0
 800933c:	f020 fd5f 	bl	8029dfe <_ZdlPvj>
 8009340:	4620      	mov	r0, r4
 8009342:	bd10      	pop	{r4, pc}

08009344 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8009344:	f1a0 0004 	sub.w	r0, r0, #4
 8009348:	e7f5      	b.n	8009336 <_ZN24Calibration_PadPresenterD0Ev>

0800934a <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800934a:	4770      	bx	lr

0800934c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800934c:	b510      	push	{r4, lr}
 800934e:	2200      	movs	r2, #0
 8009350:	6082      	str	r2, [r0, #8]
    : view(v)
 8009352:	4a04      	ldr	r2, [pc, #16]	; (8009364 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8009354:	60c1      	str	r1, [r0, #12]
 8009356:	f102 0408 	add.w	r4, r2, #8
 800935a:	3224      	adds	r2, #36	; 0x24
 800935c:	6004      	str	r4, [r0, #0]
 800935e:	6042      	str	r2, [r0, #4]
}
 8009360:	bd10      	pop	{r4, pc}
 8009362:	bf00      	nop
 8009364:	0802e6e4 	.word	0x0802e6e4

08009368 <_ZN19Calibration_PadView14tearDownScreenEv>:
    Calibration_PadViewBase::setupScreen();
}

void Calibration_PadView::tearDownScreen() {
    Calibration_PadViewBase::tearDownScreen();
}
 8009368:	4770      	bx	lr

0800936a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value) {}
 800936a:	4770      	bx	lr

0800936c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800936c:	b510      	push	{r4, lr}
 800936e:	4b03      	ldr	r3, [pc, #12]	; (800937c <_ZN19Calibration_PadViewD1Ev+0x10>)
 8009370:	6003      	str	r3, [r0, #0]
 8009372:	4604      	mov	r4, r0
 8009374:	f7fa fcde 	bl	8003d34 <_ZN23Calibration_PadViewBaseD1Ev>
 8009378:	4620      	mov	r0, r4
 800937a:	bd10      	pop	{r4, pc}
 800937c:	0802e71c 	.word	0x0802e71c

08009380 <_ZN19Calibration_PadViewD0Ev>:
 8009380:	b510      	push	{r4, lr}
 8009382:	4604      	mov	r4, r0
 8009384:	f7ff fff2 	bl	800936c <_ZN19Calibration_PadViewD1Ev>
 8009388:	4620      	mov	r0, r4
 800938a:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 800938e:	f020 fd36 	bl	8029dfe <_ZdlPvj>
 8009392:	4620      	mov	r0, r4
 8009394:	bd10      	pop	{r4, pc}
	...

08009398 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView() {}
 8009398:	b510      	push	{r4, lr}
 800939a:	4604      	mov	r4, r0
 800939c:	f7fa fd04 	bl	8003da8 <_ZN23Calibration_PadViewBaseC1Ev>
 80093a0:	4b01      	ldr	r3, [pc, #4]	; (80093a8 <_ZN19Calibration_PadViewC1Ev+0x10>)
 80093a2:	6023      	str	r3, [r4, #0]
 80093a4:	4620      	mov	r0, r4
 80093a6:	bd10      	pop	{r4, pc}
 80093a8:	0802e71c 	.word	0x0802e71c

080093ac <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80093ac:	f7fa bc9d 	b.w	8003cea <_ZN23Calibration_PadViewBase11setupScreenEv>

080093b0 <_ZN19Calibration_PadView17function_cali_padEv>:

void Calibration_PadView::function_cali_pad() {
 80093b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093b2:	b085      	sub	sp, #20
 80093b4:	4604      	mov	r4, r0
#ifndef SIMULATOR
	
	uint32_t* Samples = MEAS_start_measure();
 80093b6:	f7f9 f9ff 	bl	80027b8 <MEAS_start_measure>
 80093ba:	4d21      	ldr	r5, [pc, #132]	; (8009440 <_ZN19Calibration_PadView17function_cali_padEv+0x90>)
 80093bc:	4606      	mov	r6, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80093be:	4602      	mov	r2, r0
 80093c0:	2101      	movs	r1, #1
 80093c2:	a801      	add	r0, sp, #4
 80093c4:	f7f8 fb02 	bl	80019cc <calculate_freq_and_signalstrength>
 80093c8:	9b02      	ldr	r3, [sp, #8]
 80093ca:	9300      	str	r3, [sp, #0]
 80093cc:	462a      	mov	r2, r5
 80093ce:	466b      	mov	r3, sp
 80093d0:	210a      	movs	r1, #10
 80093d2:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 80093d6:	9f01      	ldr	r7, [sp, #4]
 80093d8:	f00f fff6 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE,
                           "%.2f", fft.signal_strength);
    CALIBRATION_PADR_S.invalidate();
 80093dc:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80093e0:	f00d fd7e 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80093e4:	466b      	mov	r3, sp
 80093e6:	462a      	mov	r2, r5
 80093e8:	210a      	movs	r1, #10
 80093ea:	f504 7060 	add.w	r0, r4, #896	; 0x380
 80093ee:	9700      	str	r7, [sp, #0]
 80093f0:	f00f ffea 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE,
                           "%.2f", fft.main_freq);
    CALIBRATION_PADR_F.invalidate();
 80093f4:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 80093f8:	f00d fd72 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

    fft = calculate_freq_and_signalstrength(2, Samples);
 80093fc:	4632      	mov	r2, r6
 80093fe:	a801      	add	r0, sp, #4
 8009400:	2102      	movs	r1, #2
 8009402:	f7f8 fae3 	bl	80019cc <calculate_freq_and_signalstrength>
 8009406:	9b02      	ldr	r3, [sp, #8]
 8009408:	9300      	str	r3, [sp, #0]
 800940a:	462a      	mov	r2, r5
 800940c:	466b      	mov	r3, sp
 800940e:	210a      	movs	r1, #10
 8009410:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 8009414:	9e01      	ldr	r6, [sp, #4]
 8009416:	f00f ffd7 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

    Unicode::snprintfFloat(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE,
                           "%.2f", fft.signal_strength);
    CALIBRATION_PADL_S.invalidate();
 800941a:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800941e:	f00d fd5f 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009422:	466b      	mov	r3, sp
 8009424:	462a      	mov	r2, r5
 8009426:	210a      	movs	r1, #10
 8009428:	f504 7065 	add.w	r0, r4, #916	; 0x394
 800942c:	9600      	str	r6, [sp, #0]
 800942e:	f00f ffcb 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE,
                           "%.2f", fft.main_freq);
    CALIBRATION_PADL_F.invalidate();
 8009432:	f504 7098 	add.w	r0, r4, #304	; 0x130

#endif
}
 8009436:	b005      	add	sp, #20
 8009438:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    CALIBRATION_PADL_F.invalidate();
 800943c:	f00d bd50 	b.w	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009440:	0802e6a0 	.word	0x0802e6a0

08009444 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009444:	4770      	bx	lr

08009446 <_ZN19FrontendApplicationD0Ev>:
 8009446:	b510      	push	{r4, lr}
 8009448:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800944c:	4604      	mov	r4, r0
 800944e:	f020 fcd6 	bl	8029dfe <_ZdlPvj>
 8009452:	4620      	mov	r0, r4
 8009454:	bd10      	pop	{r4, pc}

08009456 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009456:	b510      	push	{r4, lr}
 8009458:	4604      	mov	r4, r0
    {
        model.tick();
 800945a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800945e:	f000 fb07 	bl	8009a70 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009462:	4620      	mov	r0, r4
    }
 8009464:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8009468:	f00c bd16 	b.w	8015e98 <_ZN8touchgfx11Application15handleTickEventEv>

0800946c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800946c:	b510      	push	{r4, lr}
 800946e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8009470:	f7fb f9fc 	bl	800486c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009474:	4b01      	ldr	r3, [pc, #4]	; (800947c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8009476:	6023      	str	r3, [r4, #0]
{

}
 8009478:	4620      	mov	r0, r4
 800947a:	bd10      	pop	{r4, pc}
 800947c:	0802e758 	.word	0x0802e758

08009480 <_ZN17Gauge_with_ValuesD1Ev>:
 8009480:	b510      	push	{r4, lr}
 8009482:	4b03      	ldr	r3, [pc, #12]	; (8009490 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8009484:	6003      	str	r3, [r0, #0]
 8009486:	4604      	mov	r4, r0
 8009488:	f7fc fcf6 	bl	8005e78 <_ZN21Gauge_with_ValuesBaseD1Ev>
 800948c:	4620      	mov	r0, r4
 800948e:	bd10      	pop	{r4, pc}
 8009490:	0802e7ac 	.word	0x0802e7ac

08009494 <_ZN17Gauge_with_ValuesD0Ev>:
 8009494:	b510      	push	{r4, lr}
 8009496:	4604      	mov	r4, r0
 8009498:	f7ff fff2 	bl	8009480 <_ZN17Gauge_with_ValuesD1Ev>
 800949c:	4620      	mov	r0, r4
 800949e:	f44f 7162 	mov.w	r1, #904	; 0x388
 80094a2:	f020 fcac 	bl	8029dfe <_ZdlPvj>
 80094a6:	4620      	mov	r0, r4
 80094a8:	bd10      	pop	{r4, pc}
	...

080094ac <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80094ac:	b510      	push	{r4, lr}
 80094ae:	4604      	mov	r4, r0
 80094b0:	f7fc fcec 	bl	8005e8c <_ZN21Gauge_with_ValuesBaseC1Ev>
 80094b4:	4b01      	ldr	r3, [pc, #4]	; (80094bc <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80094b6:	6023      	str	r3, [r4, #0]
{

}
 80094b8:	4620      	mov	r0, r4
 80094ba:	bd10      	pop	{r4, pc}
 80094bc:	0802e7ac 	.word	0x0802e7ac

080094c0 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 80094c0:	f7fc bcdb 	b.w	8005e7a <_ZN21Gauge_with_ValuesBase10initializeEv>

080094c4 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 80094c4:	4770      	bx	lr

080094c6 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 80094c6:	3804      	subs	r0, #4
 80094c8:	4770      	bx	lr

080094ca <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 80094ca:	4770      	bx	lr

080094cc <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80094cc:	68c0      	ldr	r0, [r0, #12]
 80094ce:	6803      	ldr	r3, [r0, #0]
 80094d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80094d2:	4718      	bx	r3

080094d4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80094d4:	f1a0 0004 	sub.w	r0, r0, #4
 80094d8:	f7ff bff8 	b.w	80094cc <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080094dc <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80094dc:	b510      	push	{r4, lr}
 80094de:	2110      	movs	r1, #16
 80094e0:	4604      	mov	r4, r0
 80094e2:	f020 fc8c 	bl	8029dfe <_ZdlPvj>
 80094e6:	4620      	mov	r0, r4
 80094e8:	bd10      	pop	{r4, pc}

080094ea <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80094ea:	f1a0 0004 	sub.w	r0, r0, #4
 80094ee:	e7f5      	b.n	80094dc <_ZN18Main_MenuPresenterD0Ev>

080094f0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80094f0:	b510      	push	{r4, lr}
 80094f2:	2200      	movs	r2, #0
 80094f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80094f6:	4a04      	ldr	r2, [pc, #16]	; (8009508 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80094f8:	60c1      	str	r1, [r0, #12]
 80094fa:	f102 0408 	add.w	r4, r2, #8
 80094fe:	3224      	adds	r2, #36	; 0x24
 8009500:	6004      	str	r4, [r0, #0]
 8009502:	6042      	str	r2, [r0, #4]
}
 8009504:	bd10      	pop	{r4, pc}
 8009506:	bf00      	nop
 8009508:	0802e838 	.word	0x0802e838

0800950c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800950c:	4770      	bx	lr
	...

08009510 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8009510:	b510      	push	{r4, lr}
 8009512:	4b03      	ldr	r3, [pc, #12]	; (8009520 <_ZN13Main_MenuViewD1Ev+0x10>)
 8009514:	6003      	str	r3, [r0, #0]
 8009516:	4604      	mov	r4, r0
 8009518:	f7fc feb4 	bl	8006284 <_ZN17Main_MenuViewBaseD1Ev>
 800951c:	4620      	mov	r0, r4
 800951e:	bd10      	pop	{r4, pc}
 8009520:	0802e870 	.word	0x0802e870

08009524 <_ZN13Main_MenuViewD0Ev>:
 8009524:	b510      	push	{r4, lr}
 8009526:	4604      	mov	r4, r0
 8009528:	f7ff fff2 	bl	8009510 <_ZN13Main_MenuViewD1Ev>
 800952c:	4620      	mov	r0, r4
 800952e:	f241 117c 	movw	r1, #4476	; 0x117c
 8009532:	f020 fc64 	bl	8029dfe <_ZdlPvj>
 8009536:	4620      	mov	r0, r4
 8009538:	bd10      	pop	{r4, pc}
	...

0800953c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800953c:	b510      	push	{r4, lr}
 800953e:	4604      	mov	r4, r0
 8009540:	f7fc feea 	bl	8006318 <_ZN17Main_MenuViewBaseC1Ev>
 8009544:	4b01      	ldr	r3, [pc, #4]	; (800954c <_ZN13Main_MenuViewC1Ev+0x10>)
 8009546:	6023      	str	r3, [r4, #0]
}
 8009548:	4620      	mov	r0, r4
 800954a:	bd10      	pop	{r4, pc}
 800954c:	0802e870 	.word	0x0802e870

08009550 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8009550:	f7fc be74 	b.w	800623c <_ZN17Main_MenuViewBase11setupScreenEv>

08009554 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8009554:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8009556:	4a0a      	ldr	r2, [pc, #40]	; (8009580 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8009558:	4605      	mov	r5, r0
 800955a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800955c:	460b      	mov	r3, r1
 800955e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8009562:	2104      	movs	r1, #4
 8009564:	f00f fd44 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8009568:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800956c:	f00d fcb8 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009570:	b92c      	cbnz	r4, 800957e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8009572:	f00c fbcd 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009576:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800957a:	f7fb baa7 	b.w	8004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800957e:	bd38      	pop	{r3, r4, r5, pc}
 8009580:	0802e634 	.word	0x0802e634

08009584 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8009584:	4770      	bx	lr

08009586 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8009586:	3804      	subs	r0, #4
 8009588:	4770      	bx	lr

0800958a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800958a:	4770      	bx	lr

0800958c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800958c:	68c0      	ldr	r0, [r0, #12]
 800958e:	6803      	ldr	r3, [r0, #0]
 8009590:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009592:	4718      	bx	r3

08009594 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009594:	f1a0 0004 	sub.w	r0, r0, #4
 8009598:	f7ff bff8 	b.w	800958c <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800959c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800959c:	b510      	push	{r4, lr}
 800959e:	2110      	movs	r1, #16
 80095a0:	4604      	mov	r4, r0
 80095a2:	f020 fc2c 	bl	8029dfe <_ZdlPvj>
 80095a6:	4620      	mov	r0, r4
 80095a8:	bd10      	pop	{r4, pc}

080095aa <_ZThn4_N20MeasurementPresenterD0Ev>:
 80095aa:	f1a0 0004 	sub.w	r0, r0, #4
 80095ae:	e7f5      	b.n	800959c <_ZN20MeasurementPresenterD0Ev>

080095b0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80095b0:	b510      	push	{r4, lr}
 80095b2:	2200      	movs	r2, #0
 80095b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80095b6:	4a04      	ldr	r2, [pc, #16]	; (80095c8 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80095b8:	60c1      	str	r1, [r0, #12]
 80095ba:	f102 0408 	add.w	r4, r2, #8
 80095be:	3224      	adds	r2, #36	; 0x24
 80095c0:	6004      	str	r4, [r0, #0]
 80095c2:	6042      	str	r2, [r0, #4]
}
 80095c4:	bd10      	pop	{r4, pc}
 80095c6:	bf00      	nop
 80095c8:	0802e8a0 	.word	0x0802e8a0

080095cc <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 80095cc:	4770      	bx	lr
	...

080095d0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 80095d0:	b510      	push	{r4, lr}
 80095d2:	4b03      	ldr	r3, [pc, #12]	; (80095e0 <_ZN15MeasurementViewD1Ev+0x10>)
 80095d4:	6003      	str	r3, [r0, #0]
 80095d6:	4604      	mov	r4, r0
 80095d8:	f7fd f90e 	bl	80067f8 <_ZN19MeasurementViewBaseD1Ev>
 80095dc:	4620      	mov	r0, r4
 80095de:	bd10      	pop	{r4, pc}
 80095e0:	0802e8d8 	.word	0x0802e8d8

080095e4 <_ZN15MeasurementViewD0Ev>:
 80095e4:	b510      	push	{r4, lr}
 80095e6:	4604      	mov	r4, r0
 80095e8:	f7ff fff2 	bl	80095d0 <_ZN15MeasurementViewD1Ev>
 80095ec:	4620      	mov	r0, r4
 80095ee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80095f2:	f020 fc04 	bl	8029dfe <_ZdlPvj>
 80095f6:	4620      	mov	r0, r4
 80095f8:	bd10      	pop	{r4, pc}
	...

080095fc <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 80095fc:	b510      	push	{r4, lr}
 80095fe:	4604      	mov	r4, r0
 8009600:	f7fd f934 	bl	800686c <_ZN19MeasurementViewBaseC1Ev>
 8009604:	4b01      	ldr	r3, [pc, #4]	; (800960c <_ZN15MeasurementViewC1Ev+0x10>)
 8009606:	6023      	str	r3, [r4, #0]
}
 8009608:	4620      	mov	r0, r4
 800960a:	bd10      	pop	{r4, pc}
 800960c:	0802e8d8 	.word	0x0802e8d8

08009610 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8009610:	f7fd b8ce 	b.w	80067b0 <_ZN19MeasurementViewBase11setupScreenEv>

08009614 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8009614:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009616:	4a0a      	ldr	r2, [pc, #40]	; (8009640 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8009618:	4605      	mov	r5, r0
 800961a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800961c:	460b      	mov	r3, r1
 800961e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009622:	2104      	movs	r1, #4
 8009624:	f00f fce4 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009628:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800962c:	f00d fc58 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009630:	b92c      	cbnz	r4, 800963e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8009632:	f00c fb6d 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009636:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800963a:	f7fb ba47 	b.w	8004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800963e:	bd38      	pop	{r3, r4, r5, pc}
 8009640:	0802e634 	.word	0x0802e634

08009644 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8009644:	4770      	bx	lr

08009646 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8009646:	3804      	subs	r0, #4
 8009648:	4770      	bx	lr

0800964a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800964a:	4770      	bx	lr

0800964c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800964c:	68c0      	ldr	r0, [r0, #12]
 800964e:	6803      	ldr	r3, [r0, #0]
 8009650:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009652:	4718      	bx	r3

08009654 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009654:	f1a0 0004 	sub.w	r0, r0, #4
 8009658:	f7ff bff8 	b.w	800964c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800965c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800965c:	b510      	push	{r4, lr}
 800965e:	2110      	movs	r1, #16
 8009660:	4604      	mov	r4, r0
 8009662:	f020 fbcc 	bl	8029dfe <_ZdlPvj>
 8009666:	4620      	mov	r0, r4
 8009668:	bd10      	pop	{r4, pc}

0800966a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800966a:	f1a0 0004 	sub.w	r0, r0, #4
 800966e:	e7f5      	b.n	800965c <_ZN29Measurement_AccuratePresenterD0Ev>

08009670 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8009670:	b510      	push	{r4, lr}
 8009672:	2200      	movs	r2, #0
 8009674:	6082      	str	r2, [r0, #8]
    : view(v)
 8009676:	4a04      	ldr	r2, [pc, #16]	; (8009688 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8009678:	60c1      	str	r1, [r0, #12]
 800967a:	f102 0408 	add.w	r4, r2, #8
 800967e:	3224      	adds	r2, #36	; 0x24
 8009680:	6004      	str	r4, [r0, #0]
 8009682:	6042      	str	r2, [r0, #4]
}
 8009684:	bd10      	pop	{r4, pc}
 8009686:	bf00      	nop
 8009688:	0802e908 	.word	0x0802e908

0800968c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800968c:	4770      	bx	lr
	...

08009690 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8009690:	b510      	push	{r4, lr}
 8009692:	4b03      	ldr	r3, [pc, #12]	; (80096a0 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8009694:	6003      	str	r3, [r0, #0]
 8009696:	4604      	mov	r4, r0
 8009698:	f7fd fb30 	bl	8006cfc <_ZN28Measurement_AccurateViewBaseD1Ev>
 800969c:	4620      	mov	r0, r4
 800969e:	bd10      	pop	{r4, pc}
 80096a0:	0802e940 	.word	0x0802e940

080096a4 <_ZN24Measurement_AccurateViewD0Ev>:
 80096a4:	b510      	push	{r4, lr}
 80096a6:	4604      	mov	r4, r0
 80096a8:	f7ff fff2 	bl	8009690 <_ZN24Measurement_AccurateViewD1Ev>
 80096ac:	4620      	mov	r0, r4
 80096ae:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80096b2:	f020 fba4 	bl	8029dfe <_ZdlPvj>
 80096b6:	4620      	mov	r0, r4
 80096b8:	bd10      	pop	{r4, pc}
	...

080096bc <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80096bc:	b510      	push	{r4, lr}
 80096be:	4604      	mov	r4, r0
 80096c0:	f7fd fb56 	bl	8006d70 <_ZN28Measurement_AccurateViewBaseC1Ev>
 80096c4:	4b01      	ldr	r3, [pc, #4]	; (80096cc <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 80096c6:	6023      	str	r3, [r4, #0]
}
 80096c8:	4620      	mov	r0, r4
 80096ca:	bd10      	pop	{r4, pc}
 80096cc:	0802e940 	.word	0x0802e940

080096d0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 80096d0:	f7fd baf0 	b.w	8006cb4 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

080096d4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 80096d4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80096d6:	4a0a      	ldr	r2, [pc, #40]	; (8009700 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 80096d8:	4605      	mov	r5, r0
 80096da:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80096dc:	460b      	mov	r3, r1
 80096de:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80096e2:	2104      	movs	r1, #4
 80096e4:	f00f fc84 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80096e8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80096ec:	f00d fbf8 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80096f0:	b92c      	cbnz	r4, 80096fe <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 80096f2:	f00c fb0d 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80096f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80096fa:	f7fb b9e7 	b.w	8004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80096fe:	bd38      	pop	{r3, r4, r5, pc}
 8009700:	0802e634 	.word	0x0802e634

08009704 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8009704:	4770      	bx	lr

08009706 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8009706:	3804      	subs	r0, #4
 8009708:	4770      	bx	lr

0800970a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800970a:	4770      	bx	lr

0800970c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800970c:	4770      	bx	lr

0800970e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800970e:	b510      	push	{r4, lr}
 8009710:	2110      	movs	r1, #16
 8009712:	4604      	mov	r4, r0
 8009714:	f020 fb73 	bl	8029dfe <_ZdlPvj>
 8009718:	4620      	mov	r0, r4
 800971a:	bd10      	pop	{r4, pc}

0800971c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800971c:	f1a0 0004 	sub.w	r0, r0, #4
 8009720:	e7f5      	b.n	800970e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08009722 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8009722:	4770      	bx	lr

08009724 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8009724:	b510      	push	{r4, lr}
 8009726:	2200      	movs	r2, #0
 8009728:	6082      	str	r2, [r0, #8]
    : view(v)
 800972a:	4a04      	ldr	r2, [pc, #16]	; (800973c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800972c:	60c1      	str	r1, [r0, #12]
 800972e:	f102 0408 	add.w	r4, r2, #8
 8009732:	3224      	adds	r2, #36	; 0x24
 8009734:	6004      	str	r4, [r0, #0]
 8009736:	6042      	str	r2, [r0, #4]
}
 8009738:	bd10      	pop	{r4, pc}
 800973a:	bf00      	nop
 800973c:	0802e970 	.word	0x0802e970

08009740 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8009740:	4770      	bx	lr
	...

08009744 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8009744:	b510      	push	{r4, lr}
 8009746:	4b03      	ldr	r3, [pc, #12]	; (8009754 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8009748:	6003      	str	r3, [r0, #0]
 800974a:	4604      	mov	r4, r0
 800974c:	f7fd fd62 	bl	8007214 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8009750:	4620      	mov	r0, r4
 8009752:	bd10      	pop	{r4, pc}
 8009754:	0802e9a8 	.word	0x0802e9a8

08009758 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8009758:	b510      	push	{r4, lr}
 800975a:	4604      	mov	r4, r0
 800975c:	f7ff fff2 	bl	8009744 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8009760:	4620      	mov	r0, r4
 8009762:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009766:	f020 fb4a 	bl	8029dfe <_ZdlPvj>
 800976a:	4620      	mov	r0, r4
 800976c:	bd10      	pop	{r4, pc}
	...

08009770 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8009770:	b510      	push	{r4, lr}
 8009772:	4604      	mov	r4, r0
 8009774:	f7fd fd6e 	bl	8007254 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8009778:	4b01      	ldr	r3, [pc, #4]	; (8009780 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800977a:	6023      	str	r3, [r4, #0]
}
 800977c:	4620      	mov	r0, r4
 800977e:	bd10      	pop	{r4, pc}
 8009780:	0802e9a8 	.word	0x0802e9a8

08009784 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8009784:	f7fd bd37 	b.w	80071f6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08009788 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8009788:	4770      	bx	lr

0800978a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800978a:	3804      	subs	r0, #4
 800978c:	4770      	bx	lr

0800978e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800978e:	4770      	bx	lr

08009790 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8009790:	4770      	bx	lr

08009792 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009792:	b510      	push	{r4, lr}
 8009794:	2110      	movs	r1, #16
 8009796:	4604      	mov	r4, r0
 8009798:	f020 fb31 	bl	8029dfe <_ZdlPvj>
 800979c:	4620      	mov	r0, r4
 800979e:	bd10      	pop	{r4, pc}

080097a0 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80097a0:	f1a0 0004 	sub.w	r0, r0, #4
 80097a4:	e7f5      	b.n	8009792 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080097a6 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80097a6:	4770      	bx	lr

080097a8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80097a8:	b510      	push	{r4, lr}
 80097aa:	2200      	movs	r2, #0
 80097ac:	6082      	str	r2, [r0, #8]
    : view(v)
 80097ae:	4a04      	ldr	r2, [pc, #16]	; (80097c0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80097b0:	60c1      	str	r1, [r0, #12]
 80097b2:	f102 0408 	add.w	r4, r2, #8
 80097b6:	3224      	adds	r2, #36	; 0x24
 80097b8:	6004      	str	r4, [r0, #0]
 80097ba:	6042      	str	r2, [r0, #4]
}
 80097bc:	bd10      	pop	{r4, pc}
 80097be:	bf00      	nop
 80097c0:	0802e9d4 	.word	0x0802e9d4

080097c4 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80097c4:	4770      	bx	lr
	...

080097c8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80097c8:	b510      	push	{r4, lr}
 80097ca:	4b03      	ldr	r3, [pc, #12]	; (80097d8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80097cc:	6003      	str	r3, [r0, #0]
 80097ce:	4604      	mov	r4, r0
 80097d0:	f7fd fee6 	bl	80075a0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80097d4:	4620      	mov	r0, r4
 80097d6:	bd10      	pop	{r4, pc}
 80097d8:	0802ea0c 	.word	0x0802ea0c

080097dc <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80097dc:	b510      	push	{r4, lr}
 80097de:	4604      	mov	r4, r0
 80097e0:	f7ff fff2 	bl	80097c8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80097e4:	4620      	mov	r0, r4
 80097e6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80097ea:	f020 fb08 	bl	8029dfe <_ZdlPvj>
 80097ee:	4620      	mov	r0, r4
 80097f0:	bd10      	pop	{r4, pc}
	...

080097f4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80097f4:	b510      	push	{r4, lr}
 80097f6:	4604      	mov	r4, r0
 80097f8:	f7fd fef2 	bl	80075e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 80097fc:	4b01      	ldr	r3, [pc, #4]	; (8009804 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 80097fe:	6023      	str	r3, [r4, #0]
}
 8009800:	4620      	mov	r0, r4
 8009802:	bd10      	pop	{r4, pc}
 8009804:	0802ea0c 	.word	0x0802ea0c

08009808 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009808:	f7fd bebb 	b.w	8007582 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800980c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800980c:	4770      	bx	lr

0800980e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800980e:	3804      	subs	r0, #4
 8009810:	4770      	bx	lr

08009812 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8009812:	4770      	bx	lr

08009814 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009814:	68c0      	ldr	r0, [r0, #12]
 8009816:	6803      	ldr	r3, [r0, #0]
 8009818:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800981a:	4718      	bx	r3

0800981c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800981c:	f1a0 0004 	sub.w	r0, r0, #4
 8009820:	f7ff bff8 	b.w	8009814 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009824 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009824:	b510      	push	{r4, lr}
 8009826:	2110      	movs	r1, #16
 8009828:	4604      	mov	r4, r0
 800982a:	f020 fae8 	bl	8029dfe <_ZdlPvj>
 800982e:	4620      	mov	r0, r4
 8009830:	bd10      	pop	{r4, pc}

08009832 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8009832:	f1a0 0004 	sub.w	r0, r0, #4
 8009836:	e7f5      	b.n	8009824 <_ZN27Measurement_SinglePresenterD0Ev>

08009838 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009838:	b510      	push	{r4, lr}
 800983a:	2200      	movs	r2, #0
 800983c:	6082      	str	r2, [r0, #8]
    : view(v)
 800983e:	4a04      	ldr	r2, [pc, #16]	; (8009850 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009840:	60c1      	str	r1, [r0, #12]
 8009842:	f102 0408 	add.w	r4, r2, #8
 8009846:	3224      	adds	r2, #36	; 0x24
 8009848:	6004      	str	r4, [r0, #0]
 800984a:	6042      	str	r2, [r0, #4]
}
 800984c:	bd10      	pop	{r4, pc}
 800984e:	bf00      	nop
 8009850:	0802ea38 	.word	0x0802ea38

08009854 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009854:	4770      	bx	lr
	...

08009858 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009858:	b510      	push	{r4, lr}
 800985a:	4b03      	ldr	r3, [pc, #12]	; (8009868 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800985c:	6003      	str	r3, [r0, #0]
 800985e:	4604      	mov	r4, r0
 8009860:	f7fe f854 	bl	800790c <_ZN26Measurement_SingleViewBaseD1Ev>
 8009864:	4620      	mov	r0, r4
 8009866:	bd10      	pop	{r4, pc}
 8009868:	0802ea70 	.word	0x0802ea70

0800986c <_ZN22Measurement_SingleViewD0Ev>:
 800986c:	b510      	push	{r4, lr}
 800986e:	4604      	mov	r4, r0
 8009870:	f7ff fff2 	bl	8009858 <_ZN22Measurement_SingleViewD1Ev>
 8009874:	4620      	mov	r0, r4
 8009876:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800987a:	f020 fac0 	bl	8029dfe <_ZdlPvj>
 800987e:	4620      	mov	r0, r4
 8009880:	bd10      	pop	{r4, pc}
	...

08009884 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009884:	b510      	push	{r4, lr}
 8009886:	4604      	mov	r4, r0
 8009888:	f7fe f87a 	bl	8007980 <_ZN26Measurement_SingleViewBaseC1Ev>
 800988c:	4b01      	ldr	r3, [pc, #4]	; (8009894 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800988e:	6023      	str	r3, [r4, #0]
}
 8009890:	4620      	mov	r0, r4
 8009892:	bd10      	pop	{r4, pc}
 8009894:	0802ea70 	.word	0x0802ea70

08009898 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009898:	f7fe b814 	b.w	80078c4 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800989c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800989c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800989e:	4a0a      	ldr	r2, [pc, #40]	; (80098c8 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80098a0:	4605      	mov	r5, r0
 80098a2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80098a4:	460b      	mov	r3, r1
 80098a6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80098aa:	2104      	movs	r1, #4
 80098ac:	f00f fba0 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80098b0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80098b4:	f00d fb14 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80098b8:	b92c      	cbnz	r4, 80098c6 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80098ba:	f00c fa29 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80098be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80098c2:	f7fb b903 	b.w	8004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80098c6:	bd38      	pop	{r3, r4, r5, pc}
 80098c8:	0802e634 	.word	0x0802e634

080098cc <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80098cc:	4770      	bx	lr

080098ce <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80098ce:	3804      	subs	r0, #4
 80098d0:	4770      	bx	lr

080098d2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80098d2:	4770      	bx	lr

080098d4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80098d4:	4770      	bx	lr

080098d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80098d6:	b510      	push	{r4, lr}
 80098d8:	2110      	movs	r1, #16
 80098da:	4604      	mov	r4, r0
 80098dc:	f020 fa8f 	bl	8029dfe <_ZdlPvj>
 80098e0:	4620      	mov	r0, r4
 80098e2:	bd10      	pop	{r4, pc}

080098e4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80098e4:	f1a0 0004 	sub.w	r0, r0, #4
 80098e8:	e7f5      	b.n	80098d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080098ea <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80098ea:	4770      	bx	lr

080098ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80098ec:	b510      	push	{r4, lr}
 80098ee:	2200      	movs	r2, #0
 80098f0:	6082      	str	r2, [r0, #8]
    : view(v)
 80098f2:	4a04      	ldr	r2, [pc, #16]	; (8009904 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80098f4:	60c1      	str	r1, [r0, #12]
 80098f6:	f102 0408 	add.w	r4, r2, #8
 80098fa:	3224      	adds	r2, #36	; 0x24
 80098fc:	6004      	str	r4, [r0, #0]
 80098fe:	6042      	str	r2, [r0, #4]
}
 8009900:	bd10      	pop	{r4, pc}
 8009902:	bf00      	nop
 8009904:	0802eaa0 	.word	0x0802eaa0

08009908 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009908:	4770      	bx	lr
	...

0800990c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800990c:	b510      	push	{r4, lr}
 800990e:	4b03      	ldr	r3, [pc, #12]	; (800991c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009910:	6003      	str	r3, [r0, #0]
 8009912:	4604      	mov	r4, r0
 8009914:	f7fe fa7e 	bl	8007e14 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009918:	4620      	mov	r0, r4
 800991a:	bd10      	pop	{r4, pc}
 800991c:	0802ead8 	.word	0x0802ead8

08009920 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009920:	b510      	push	{r4, lr}
 8009922:	4604      	mov	r4, r0
 8009924:	f7ff fff2 	bl	800990c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009928:	4620      	mov	r0, r4
 800992a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800992e:	f020 fa66 	bl	8029dfe <_ZdlPvj>
 8009932:	4620      	mov	r0, r4
 8009934:	bd10      	pop	{r4, pc}
	...

08009938 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009938:	b510      	push	{r4, lr}
 800993a:	4604      	mov	r4, r0
 800993c:	f7fe faa4 	bl	8007e88 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009940:	4b01      	ldr	r3, [pc, #4]	; (8009948 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009942:	6023      	str	r3, [r4, #0]
}
 8009944:	4620      	mov	r0, r4
 8009946:	bd10      	pop	{r4, pc}
 8009948:	0802ead8 	.word	0x0802ead8

0800994c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800994c:	f7fe ba3d 	b.w	8007dca <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009950 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009950:	b530      	push	{r4, r5, lr}
 8009952:	4d20      	ldr	r5, [pc, #128]	; (80099d4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 8009954:	4604      	mov	r4, r0
 8009956:	6828      	ldr	r0, [r5, #0]
#ifndef SIMULATOR
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009958:	6803      	ldr	r3, [r0, #0]
{
 800995a:	b08b      	sub	sp, #44	; 0x2c
	touchgfx::HAL::getInstance()->disableInterrupts();
 800995c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800995e:	4798      	blx	r3

	int test = 	0;

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);

	test = updateGUI_test();
 8009960:	f7f8 fa3c 	bl	8001ddc <updateGUI_test>
 8009964:	9001      	str	r0, [sp, #4]

	uint32_t* Samples = MEAS_start_measure();
 8009966:	f7f8 ff27 	bl	80027b8 <MEAS_start_measure>


	//callback to fft
	//FFT fft = calculate_freq_and_signalstrength(1, Samples);
	DISTANCE_ANGLE distance_angle = calculate_distance_and_angle();
 800996a:	a804      	add	r0, sp, #16
 800996c:	f7f8 f964 	bl	8001c38 <calculate_distance_and_angle>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(distance_angle.angle);
 8009970:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 8009974:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009978:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800997c:	ee17 1a90 	vmov	r1, s15
 8009980:	9000      	str	r0, [sp, #0]
 8009982:	f009 fa59 	bl	8012e38 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009986:	9800      	ldr	r0, [sp, #0]
 8009988:	f00d faaa 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800998c:	9b01      	ldr	r3, [sp, #4]
 800998e:	4a12      	ldr	r2, [pc, #72]	; (80099d8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 8009990:	210a      	movs	r1, #10
 8009992:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8009996:	f00f fb2b 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 800999a:	f504 7020 	add.w	r0, r4, #640	; 0x280
 800999e:	f00d fa9f 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	//Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
	SMD1_Frequency.invalidate();
 80099a2:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80099a6:	f00d fa9b 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	//if(fft.error == CALC_ERROR_NONE)
	//{
		Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", distance_angle.distance);
 80099aa:	9b08      	ldr	r3, [sp, #32]
 80099ac:	4a0b      	ldr	r2, [pc, #44]	; (80099dc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x8c>)
 80099ae:	9303      	str	r3, [sp, #12]
 80099b0:	210a      	movs	r1, #10
 80099b2:	ab03      	add	r3, sp, #12
 80099b4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80099b8:	f00f fd06 	bl	80193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	//} else Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "Error");
	
	SMD1_Distance.invalidate();
 80099bc:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80099c0:	f00d fa8e 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80099c4:	6828      	ldr	r0, [r5, #0]

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80099c6:	6803      	ldr	r3, [r0, #0]
 80099c8:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80099ca:	b00b      	add	sp, #44	; 0x2c
 80099cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80099d0:	4718      	bx	r3
 80099d2:	bf00      	nop
 80099d4:	20012db4 	.word	0x20012db4
 80099d8:	0802e634 	.word	0x0802e634
 80099dc:	0802e6a0 	.word	0x0802e6a0

080099e0 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80099e0:	4770      	bx	lr

080099e2 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80099e2:	3804      	subs	r0, #4
 80099e4:	4770      	bx	lr

080099e6 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80099e6:	4770      	bx	lr

080099e8 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80099e8:	4770      	bx	lr

080099ea <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80099ea:	b510      	push	{r4, lr}
 80099ec:	2110      	movs	r1, #16
 80099ee:	4604      	mov	r4, r0
 80099f0:	f020 fa05 	bl	8029dfe <_ZdlPvj>
 80099f4:	4620      	mov	r0, r4
 80099f6:	bd10      	pop	{r4, pc}

080099f8 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80099f8:	f1a0 0004 	sub.w	r0, r0, #4
 80099fc:	e7f5      	b.n	80099ea <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080099fe <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80099fe:	4770      	bx	lr

08009a00 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009a00:	b510      	push	{r4, lr}
 8009a02:	2200      	movs	r2, #0
 8009a04:	6082      	str	r2, [r0, #8]
    : view(v)
 8009a06:	4a04      	ldr	r2, [pc, #16]	; (8009a18 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009a08:	60c1      	str	r1, [r0, #12]
 8009a0a:	f102 0408 	add.w	r4, r2, #8
 8009a0e:	3224      	adds	r2, #36	; 0x24
 8009a10:	6004      	str	r4, [r0, #0]
 8009a12:	6042      	str	r2, [r0, #4]
}
 8009a14:	bd10      	pop	{r4, pc}
 8009a16:	bf00      	nop
 8009a18:	0802eb08 	.word	0x0802eb08

08009a1c <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009a1c:	4770      	bx	lr
	...

08009a20 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009a20:	b510      	push	{r4, lr}
 8009a22:	4b03      	ldr	r3, [pc, #12]	; (8009a30 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009a24:	6003      	str	r3, [r0, #0]
 8009a26:	4604      	mov	r4, r0
 8009a28:	f7fe fda0 	bl	800856c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009a2c:	4620      	mov	r0, r4
 8009a2e:	bd10      	pop	{r4, pc}
 8009a30:	0802eb40 	.word	0x0802eb40

08009a34 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009a34:	b510      	push	{r4, lr}
 8009a36:	4604      	mov	r4, r0
 8009a38:	f7ff fff2 	bl	8009a20 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009a3c:	4620      	mov	r0, r4
 8009a3e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009a42:	f020 f9dc 	bl	8029dfe <_ZdlPvj>
 8009a46:	4620      	mov	r0, r4
 8009a48:	bd10      	pop	{r4, pc}
	...

08009a4c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009a4c:	b510      	push	{r4, lr}
 8009a4e:	4604      	mov	r4, r0
 8009a50:	f7fe fdac 	bl	80085ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009a54:	4b01      	ldr	r3, [pc, #4]	; (8009a5c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009a56:	6023      	str	r3, [r4, #0]
}
 8009a58:	4620      	mov	r0, r4
 8009a5a:	bd10      	pop	{r4, pc}
 8009a5c:	0802eb40 	.word	0x0802eb40

08009a60 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8009a60:	f7fe bd73 	b.w	800854a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009a64 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009a64:	2100      	movs	r1, #0
 8009a66:	223c      	movs	r2, #60	; 0x3c
 8009a68:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009a6c:	4770      	bx	lr
	...

08009a70 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009a70:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009a72:	4d0a      	ldr	r5, [pc, #40]	; (8009a9c <_ZN5Model4tickEv+0x2c>)
{
 8009a74:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009a76:	6828      	ldr	r0, [r5, #0]
 8009a78:	f004 f8ac 	bl	800dbd4 <osMessageQueueGetCount>
 8009a7c:	b168      	cbz	r0, 8009a9a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8009a7e:	2300      	movs	r3, #0
 8009a80:	6828      	ldr	r0, [r5, #0]
 8009a82:	461a      	mov	r2, r3
 8009a84:	1d21      	adds	r1, r4, #4
 8009a86:	f004 f871 	bl	800db6c <osMessageQueueGet>
 8009a8a:	b930      	cbnz	r0, 8009a9a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8009a8c:	6820      	ldr	r0, [r4, #0]
 8009a8e:	6861      	ldr	r1, [r4, #4]
 8009a90:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8009a92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8009a96:	689b      	ldr	r3, [r3, #8]
 8009a98:	4718      	bx	r3
}
 8009a9a:	bd70      	pop	{r4, r5, r6, pc}
 8009a9c:	200018e4 	.word	0x200018e4

08009aa0 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8009aa0:	4770      	bx	lr

08009aa2 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8009aa2:	3804      	subs	r0, #4
 8009aa4:	4770      	bx	lr

08009aa6 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8009aa6:	4770      	bx	lr

08009aa8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009aa8:	68c0      	ldr	r0, [r0, #12]
 8009aaa:	6803      	ldr	r3, [r0, #0]
 8009aac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009aae:	4718      	bx	r3

08009ab0 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009ab0:	f1a0 0004 	sub.w	r0, r0, #4
 8009ab4:	f7ff bff8 	b.w	8009aa8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08009ab8 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8009ab8:	b510      	push	{r4, lr}
 8009aba:	2110      	movs	r1, #16
 8009abc:	4604      	mov	r4, r0
 8009abe:	f020 f99e 	bl	8029dfe <_ZdlPvj>
 8009ac2:	4620      	mov	r0, r4
 8009ac4:	bd10      	pop	{r4, pc}

08009ac6 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8009ac6:	f1a0 0004 	sub.w	r0, r0, #4
 8009aca:	e7f5      	b.n	8009ab8 <_ZN21Project_InfoPresenterD0Ev>

08009acc <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009acc:	b510      	push	{r4, lr}
 8009ace:	2200      	movs	r2, #0
 8009ad0:	6082      	str	r2, [r0, #8]
    : view(v)
 8009ad2:	4a04      	ldr	r2, [pc, #16]	; (8009ae4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009ad4:	60c1      	str	r1, [r0, #12]
 8009ad6:	f102 0408 	add.w	r4, r2, #8
 8009ada:	3224      	adds	r2, #36	; 0x24
 8009adc:	6004      	str	r4, [r0, #0]
 8009ade:	6042      	str	r2, [r0, #4]
}
 8009ae0:	bd10      	pop	{r4, pc}
 8009ae2:	bf00      	nop
 8009ae4:	0802eb6c 	.word	0x0802eb6c

08009ae8 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009ae8:	4770      	bx	lr
	...

08009aec <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009aec:	b510      	push	{r4, lr}
 8009aee:	4b03      	ldr	r3, [pc, #12]	; (8009afc <_ZN16Project_InfoViewD1Ev+0x10>)
 8009af0:	6003      	str	r3, [r0, #0]
 8009af2:	4604      	mov	r4, r0
 8009af4:	f7fe fef4 	bl	80088e0 <_ZN20Project_InfoViewBaseD1Ev>
 8009af8:	4620      	mov	r0, r4
 8009afa:	bd10      	pop	{r4, pc}
 8009afc:	0802eba4 	.word	0x0802eba4

08009b00 <_ZN16Project_InfoViewD0Ev>:
 8009b00:	b510      	push	{r4, lr}
 8009b02:	4604      	mov	r4, r0
 8009b04:	f7ff fff2 	bl	8009aec <_ZN16Project_InfoViewD1Ev>
 8009b08:	4620      	mov	r0, r4
 8009b0a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009b0e:	f020 f976 	bl	8029dfe <_ZdlPvj>
 8009b12:	4620      	mov	r0, r4
 8009b14:	bd10      	pop	{r4, pc}
	...

08009b18 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009b18:	b510      	push	{r4, lr}
 8009b1a:	4604      	mov	r4, r0
 8009b1c:	f7fe ff08 	bl	8008930 <_ZN20Project_InfoViewBaseC1Ev>
 8009b20:	4b01      	ldr	r3, [pc, #4]	; (8009b28 <_ZN16Project_InfoViewC1Ev+0x10>)
 8009b22:	6023      	str	r3, [r4, #0]
}
 8009b24:	4620      	mov	r0, r4
 8009b26:	bd10      	pop	{r4, pc}
 8009b28:	0802eba4 	.word	0x0802eba4

08009b2c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009b2c:	f7fe beb4 	b.w	8008898 <_ZN20Project_InfoViewBase11setupScreenEv>

08009b30 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009b30:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009b32:	4a0a      	ldr	r2, [pc, #40]	; (8009b5c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009b34:	4605      	mov	r5, r0
 8009b36:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009b38:	460b      	mov	r3, r1
 8009b3a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009b3e:	2104      	movs	r1, #4
 8009b40:	f00f fa56 	bl	8018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009b44:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009b48:	f00d f9ca 	bl	8016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009b4c:	b92c      	cbnz	r4, 8009b5a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8009b4e:	f00c f8df 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009b52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009b56:	f7fa bfb9 	b.w	8004acc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009b5a:	bd38      	pop	{r3, r4, r5, pc}
 8009b5c:	0802e634 	.word	0x0802e634

08009b60 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8009b60:	4770      	bx	lr

08009b62 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8009b62:	3804      	subs	r0, #4
 8009b64:	4770      	bx	lr

08009b66 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009b66:	4770      	bx	lr

08009b68 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009b68:	4770      	bx	lr

08009b6a <_ZN21Shutting_OffPresenterD0Ev>:
 8009b6a:	b510      	push	{r4, lr}
 8009b6c:	2110      	movs	r1, #16
 8009b6e:	4604      	mov	r4, r0
 8009b70:	f020 f945 	bl	8029dfe <_ZdlPvj>
 8009b74:	4620      	mov	r0, r4
 8009b76:	bd10      	pop	{r4, pc}

08009b78 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009b78:	f1a0 0004 	sub.w	r0, r0, #4
 8009b7c:	e7f5      	b.n	8009b6a <_ZN21Shutting_OffPresenterD0Ev>

08009b7e <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8009b7e:	4770      	bx	lr

08009b80 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8009b80:	b510      	push	{r4, lr}
 8009b82:	2200      	movs	r2, #0
 8009b84:	6082      	str	r2, [r0, #8]
    : view(v)
 8009b86:	4a04      	ldr	r2, [pc, #16]	; (8009b98 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8009b88:	60c1      	str	r1, [r0, #12]
 8009b8a:	f102 0408 	add.w	r4, r2, #8
 8009b8e:	3224      	adds	r2, #36	; 0x24
 8009b90:	6004      	str	r4, [r0, #0]
 8009b92:	6042      	str	r2, [r0, #4]
}
 8009b94:	bd10      	pop	{r4, pc}
 8009b96:	bf00      	nop
 8009b98:	0802ebd4 	.word	0x0802ebd4

08009b9c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8009b9c:	4770      	bx	lr
	...

08009ba0 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8009ba0:	b510      	push	{r4, lr}
 8009ba2:	4b03      	ldr	r3, [pc, #12]	; (8009bb0 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8009ba4:	6003      	str	r3, [r0, #0]
 8009ba6:	4604      	mov	r4, r0
 8009ba8:	f7ff f890 	bl	8008ccc <_ZN20Shutting_OffViewBaseD1Ev>
 8009bac:	4620      	mov	r0, r4
 8009bae:	bd10      	pop	{r4, pc}
 8009bb0:	0802ec0c 	.word	0x0802ec0c

08009bb4 <_ZN16Shutting_OffViewD0Ev>:
 8009bb4:	b510      	push	{r4, lr}
 8009bb6:	4604      	mov	r4, r0
 8009bb8:	f7ff fff2 	bl	8009ba0 <_ZN16Shutting_OffViewD1Ev>
 8009bbc:	4620      	mov	r0, r4
 8009bbe:	2198      	movs	r1, #152	; 0x98
 8009bc0:	f020 f91d 	bl	8029dfe <_ZdlPvj>
 8009bc4:	4620      	mov	r0, r4
 8009bc6:	bd10      	pop	{r4, pc}

08009bc8 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009bc8:	b510      	push	{r4, lr}
 8009bca:	4604      	mov	r4, r0
 8009bcc:	f7ff f888 	bl	8008ce0 <_ZN20Shutting_OffViewBaseC1Ev>
 8009bd0:	4b01      	ldr	r3, [pc, #4]	; (8009bd8 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8009bd2:	6023      	str	r3, [r4, #0]
}
 8009bd4:	4620      	mov	r0, r4
 8009bd6:	bd10      	pop	{r4, pc}
 8009bd8:	0802ec0c 	.word	0x0802ec0c

08009bdc <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009bdc:	f7ff b877 	b.w	8008cce <_ZN20Shutting_OffViewBase11setupScreenEv>

08009be0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009be0:	20f0      	movs	r0, #240	; 0xf0
 8009be2:	4770      	bx	lr

08009be4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009be4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009be8:	4770      	bx	lr
 8009bea:	bf00      	nop

08009bec <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009bec:	2029      	movs	r0, #41	; 0x29
 8009bee:	f7f8 bc5b 	b.w	80024a8 <LCD_IO_WriteReg>
 8009bf2:	bf00      	nop

08009bf4 <ili9341_DisplayOff>:
 8009bf4:	2028      	movs	r0, #40	; 0x28
 8009bf6:	f7f8 bc57 	b.w	80024a8 <LCD_IO_WriteReg>
 8009bfa:	bf00      	nop

08009bfc <ili9341_Init>:
{
 8009bfc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009bfe:	f7f8 fc19 	bl	8002434 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009c02:	20ca      	movs	r0, #202	; 0xca
 8009c04:	f7f8 fc50 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c08:	20c3      	movs	r0, #195	; 0xc3
 8009c0a:	f7f8 fc23 	bl	8002454 <LCD_IO_WriteData>
 8009c0e:	2008      	movs	r0, #8
 8009c10:	f7f8 fc20 	bl	8002454 <LCD_IO_WriteData>
 8009c14:	2050      	movs	r0, #80	; 0x50
 8009c16:	f7f8 fc1d 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c1a:	20cf      	movs	r0, #207	; 0xcf
 8009c1c:	f7f8 fc44 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c20:	2000      	movs	r0, #0
 8009c22:	f7f8 fc17 	bl	8002454 <LCD_IO_WriteData>
 8009c26:	20c1      	movs	r0, #193	; 0xc1
 8009c28:	f7f8 fc14 	bl	8002454 <LCD_IO_WriteData>
 8009c2c:	2030      	movs	r0, #48	; 0x30
 8009c2e:	f7f8 fc11 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c32:	20ed      	movs	r0, #237	; 0xed
 8009c34:	f7f8 fc38 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c38:	2064      	movs	r0, #100	; 0x64
 8009c3a:	f7f8 fc0b 	bl	8002454 <LCD_IO_WriteData>
 8009c3e:	2003      	movs	r0, #3
 8009c40:	f7f8 fc08 	bl	8002454 <LCD_IO_WriteData>
 8009c44:	2012      	movs	r0, #18
 8009c46:	f7f8 fc05 	bl	8002454 <LCD_IO_WriteData>
 8009c4a:	2081      	movs	r0, #129	; 0x81
 8009c4c:	f7f8 fc02 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c50:	20e8      	movs	r0, #232	; 0xe8
 8009c52:	f7f8 fc29 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c56:	2085      	movs	r0, #133	; 0x85
 8009c58:	f7f8 fbfc 	bl	8002454 <LCD_IO_WriteData>
 8009c5c:	2000      	movs	r0, #0
 8009c5e:	f7f8 fbf9 	bl	8002454 <LCD_IO_WriteData>
 8009c62:	2078      	movs	r0, #120	; 0x78
 8009c64:	f7f8 fbf6 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c68:	20cb      	movs	r0, #203	; 0xcb
 8009c6a:	f7f8 fc1d 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c6e:	2039      	movs	r0, #57	; 0x39
 8009c70:	f7f8 fbf0 	bl	8002454 <LCD_IO_WriteData>
 8009c74:	202c      	movs	r0, #44	; 0x2c
 8009c76:	f7f8 fbed 	bl	8002454 <LCD_IO_WriteData>
 8009c7a:	2000      	movs	r0, #0
 8009c7c:	f7f8 fbea 	bl	8002454 <LCD_IO_WriteData>
 8009c80:	2034      	movs	r0, #52	; 0x34
 8009c82:	f7f8 fbe7 	bl	8002454 <LCD_IO_WriteData>
 8009c86:	2002      	movs	r0, #2
 8009c88:	f7f8 fbe4 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c8c:	20f7      	movs	r0, #247	; 0xf7
 8009c8e:	f7f8 fc0b 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c92:	2020      	movs	r0, #32
 8009c94:	f7f8 fbde 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c98:	20ea      	movs	r0, #234	; 0xea
 8009c9a:	f7f8 fc05 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c9e:	2000      	movs	r0, #0
 8009ca0:	f7f8 fbd8 	bl	8002454 <LCD_IO_WriteData>
 8009ca4:	2000      	movs	r0, #0
 8009ca6:	f7f8 fbd5 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009caa:	20b1      	movs	r0, #177	; 0xb1
 8009cac:	f7f8 fbfc 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cb0:	2000      	movs	r0, #0
 8009cb2:	f7f8 fbcf 	bl	8002454 <LCD_IO_WriteData>
 8009cb6:	201b      	movs	r0, #27
 8009cb8:	f7f8 fbcc 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cbc:	20b6      	movs	r0, #182	; 0xb6
 8009cbe:	f7f8 fbf3 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cc2:	200a      	movs	r0, #10
 8009cc4:	f7f8 fbc6 	bl	8002454 <LCD_IO_WriteData>
 8009cc8:	20a2      	movs	r0, #162	; 0xa2
 8009cca:	f7f8 fbc3 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cce:	20c0      	movs	r0, #192	; 0xc0
 8009cd0:	f7f8 fbea 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cd4:	2010      	movs	r0, #16
 8009cd6:	f7f8 fbbd 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cda:	20c1      	movs	r0, #193	; 0xc1
 8009cdc:	f7f8 fbe4 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ce0:	2010      	movs	r0, #16
 8009ce2:	f7f8 fbb7 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009ce6:	20c5      	movs	r0, #197	; 0xc5
 8009ce8:	f7f8 fbde 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cec:	2045      	movs	r0, #69	; 0x45
 8009cee:	f7f8 fbb1 	bl	8002454 <LCD_IO_WriteData>
 8009cf2:	2015      	movs	r0, #21
 8009cf4:	f7f8 fbae 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cf8:	20c7      	movs	r0, #199	; 0xc7
 8009cfa:	f7f8 fbd5 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009cfe:	2090      	movs	r0, #144	; 0x90
 8009d00:	f7f8 fba8 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d04:	2036      	movs	r0, #54	; 0x36
 8009d06:	f7f8 fbcf 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d0a:	20c8      	movs	r0, #200	; 0xc8
 8009d0c:	f7f8 fba2 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d10:	20f2      	movs	r0, #242	; 0xf2
 8009d12:	f7f8 fbc9 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d16:	2000      	movs	r0, #0
 8009d18:	f7f8 fb9c 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d1c:	20b0      	movs	r0, #176	; 0xb0
 8009d1e:	f7f8 fbc3 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d22:	20c2      	movs	r0, #194	; 0xc2
 8009d24:	f7f8 fb96 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d28:	20b6      	movs	r0, #182	; 0xb6
 8009d2a:	f7f8 fbbd 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d2e:	200a      	movs	r0, #10
 8009d30:	f7f8 fb90 	bl	8002454 <LCD_IO_WriteData>
 8009d34:	20a7      	movs	r0, #167	; 0xa7
 8009d36:	f7f8 fb8d 	bl	8002454 <LCD_IO_WriteData>
 8009d3a:	2027      	movs	r0, #39	; 0x27
 8009d3c:	f7f8 fb8a 	bl	8002454 <LCD_IO_WriteData>
 8009d40:	2004      	movs	r0, #4
 8009d42:	f7f8 fb87 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d46:	202a      	movs	r0, #42	; 0x2a
 8009d48:	f7f8 fbae 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d4c:	2000      	movs	r0, #0
 8009d4e:	f7f8 fb81 	bl	8002454 <LCD_IO_WriteData>
 8009d52:	2000      	movs	r0, #0
 8009d54:	f7f8 fb7e 	bl	8002454 <LCD_IO_WriteData>
 8009d58:	2000      	movs	r0, #0
 8009d5a:	f7f8 fb7b 	bl	8002454 <LCD_IO_WriteData>
 8009d5e:	20ef      	movs	r0, #239	; 0xef
 8009d60:	f7f8 fb78 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d64:	202b      	movs	r0, #43	; 0x2b
 8009d66:	f7f8 fb9f 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d6a:	2000      	movs	r0, #0
 8009d6c:	f7f8 fb72 	bl	8002454 <LCD_IO_WriteData>
 8009d70:	2000      	movs	r0, #0
 8009d72:	f7f8 fb6f 	bl	8002454 <LCD_IO_WriteData>
 8009d76:	2001      	movs	r0, #1
 8009d78:	f7f8 fb6c 	bl	8002454 <LCD_IO_WriteData>
 8009d7c:	203f      	movs	r0, #63	; 0x3f
 8009d7e:	f7f8 fb69 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d82:	20f6      	movs	r0, #246	; 0xf6
 8009d84:	f7f8 fb90 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009d88:	2001      	movs	r0, #1
 8009d8a:	f7f8 fb63 	bl	8002454 <LCD_IO_WriteData>
 8009d8e:	2000      	movs	r0, #0
 8009d90:	f7f8 fb60 	bl	8002454 <LCD_IO_WriteData>
 8009d94:	2006      	movs	r0, #6
 8009d96:	f7f8 fb5d 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009d9a:	202c      	movs	r0, #44	; 0x2c
 8009d9c:	f7f8 fb84 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009da0:	20c8      	movs	r0, #200	; 0xc8
 8009da2:	f7f8 fbe9 	bl	8002578 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009da6:	2026      	movs	r0, #38	; 0x26
 8009da8:	f7f8 fb7e 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009dac:	2001      	movs	r0, #1
 8009dae:	f7f8 fb51 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009db2:	20e0      	movs	r0, #224	; 0xe0
 8009db4:	f7f8 fb78 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009db8:	200f      	movs	r0, #15
 8009dba:	f7f8 fb4b 	bl	8002454 <LCD_IO_WriteData>
 8009dbe:	2029      	movs	r0, #41	; 0x29
 8009dc0:	f7f8 fb48 	bl	8002454 <LCD_IO_WriteData>
 8009dc4:	2024      	movs	r0, #36	; 0x24
 8009dc6:	f7f8 fb45 	bl	8002454 <LCD_IO_WriteData>
 8009dca:	200c      	movs	r0, #12
 8009dcc:	f7f8 fb42 	bl	8002454 <LCD_IO_WriteData>
 8009dd0:	200e      	movs	r0, #14
 8009dd2:	f7f8 fb3f 	bl	8002454 <LCD_IO_WriteData>
 8009dd6:	2009      	movs	r0, #9
 8009dd8:	f7f8 fb3c 	bl	8002454 <LCD_IO_WriteData>
 8009ddc:	204e      	movs	r0, #78	; 0x4e
 8009dde:	f7f8 fb39 	bl	8002454 <LCD_IO_WriteData>
 8009de2:	2078      	movs	r0, #120	; 0x78
 8009de4:	f7f8 fb36 	bl	8002454 <LCD_IO_WriteData>
 8009de8:	203c      	movs	r0, #60	; 0x3c
 8009dea:	f7f8 fb33 	bl	8002454 <LCD_IO_WriteData>
 8009dee:	2009      	movs	r0, #9
 8009df0:	f7f8 fb30 	bl	8002454 <LCD_IO_WriteData>
 8009df4:	2013      	movs	r0, #19
 8009df6:	f7f8 fb2d 	bl	8002454 <LCD_IO_WriteData>
 8009dfa:	2005      	movs	r0, #5
 8009dfc:	f7f8 fb2a 	bl	8002454 <LCD_IO_WriteData>
 8009e00:	2017      	movs	r0, #23
 8009e02:	f7f8 fb27 	bl	8002454 <LCD_IO_WriteData>
 8009e06:	2011      	movs	r0, #17
 8009e08:	f7f8 fb24 	bl	8002454 <LCD_IO_WriteData>
 8009e0c:	2000      	movs	r0, #0
 8009e0e:	f7f8 fb21 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e12:	20e1      	movs	r0, #225	; 0xe1
 8009e14:	f7f8 fb48 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009e18:	2000      	movs	r0, #0
 8009e1a:	f7f8 fb1b 	bl	8002454 <LCD_IO_WriteData>
 8009e1e:	2016      	movs	r0, #22
 8009e20:	f7f8 fb18 	bl	8002454 <LCD_IO_WriteData>
 8009e24:	201b      	movs	r0, #27
 8009e26:	f7f8 fb15 	bl	8002454 <LCD_IO_WriteData>
 8009e2a:	2004      	movs	r0, #4
 8009e2c:	f7f8 fb12 	bl	8002454 <LCD_IO_WriteData>
 8009e30:	2011      	movs	r0, #17
 8009e32:	f7f8 fb0f 	bl	8002454 <LCD_IO_WriteData>
 8009e36:	2007      	movs	r0, #7
 8009e38:	f7f8 fb0c 	bl	8002454 <LCD_IO_WriteData>
 8009e3c:	2031      	movs	r0, #49	; 0x31
 8009e3e:	f7f8 fb09 	bl	8002454 <LCD_IO_WriteData>
 8009e42:	2033      	movs	r0, #51	; 0x33
 8009e44:	f7f8 fb06 	bl	8002454 <LCD_IO_WriteData>
 8009e48:	2042      	movs	r0, #66	; 0x42
 8009e4a:	f7f8 fb03 	bl	8002454 <LCD_IO_WriteData>
 8009e4e:	2005      	movs	r0, #5
 8009e50:	f7f8 fb00 	bl	8002454 <LCD_IO_WriteData>
 8009e54:	200c      	movs	r0, #12
 8009e56:	f7f8 fafd 	bl	8002454 <LCD_IO_WriteData>
 8009e5a:	200a      	movs	r0, #10
 8009e5c:	f7f8 fafa 	bl	8002454 <LCD_IO_WriteData>
 8009e60:	2028      	movs	r0, #40	; 0x28
 8009e62:	f7f8 faf7 	bl	8002454 <LCD_IO_WriteData>
 8009e66:	202f      	movs	r0, #47	; 0x2f
 8009e68:	f7f8 faf4 	bl	8002454 <LCD_IO_WriteData>
 8009e6c:	200f      	movs	r0, #15
 8009e6e:	f7f8 faf1 	bl	8002454 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009e72:	2011      	movs	r0, #17
 8009e74:	f7f8 fb18 	bl	80024a8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009e78:	20c8      	movs	r0, #200	; 0xc8
 8009e7a:	f7f8 fb7d 	bl	8002578 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009e7e:	2029      	movs	r0, #41	; 0x29
 8009e80:	f7f8 fb12 	bl	80024a8 <LCD_IO_WriteReg>
}
 8009e84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009e88:	202c      	movs	r0, #44	; 0x2c
 8009e8a:	f7f8 bb0d 	b.w	80024a8 <LCD_IO_WriteReg>
 8009e8e:	bf00      	nop

08009e90 <ili9341_ReadID>:
{
 8009e90:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009e92:	f7f8 facf 	bl	8002434 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009e96:	2103      	movs	r1, #3
 8009e98:	20d3      	movs	r0, #211	; 0xd3
 8009e9a:	f7f8 fb2f 	bl	80024fc <LCD_IO_ReadData>
}
 8009e9e:	b280      	uxth	r0, r0
 8009ea0:	bd08      	pop	{r3, pc}
 8009ea2:	bf00      	nop

08009ea4 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009ea4:	221f      	movs	r2, #31
 8009ea6:	210b      	movs	r1, #11
 8009ea8:	b2c0      	uxtb	r0, r0
 8009eaa:	f7f8 ba75 	b.w	8002398 <IOE_Write>
 8009eae:	bf00      	nop

08009eb0 <stmpe811_Reset>:
{
 8009eb0:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009eb2:	b2c4      	uxtb	r4, r0
 8009eb4:	2202      	movs	r2, #2
 8009eb6:	2103      	movs	r1, #3
 8009eb8:	4620      	mov	r0, r4
 8009eba:	f7f8 fa6d 	bl	8002398 <IOE_Write>
  IOE_Delay(10); 
 8009ebe:	200a      	movs	r0, #10
 8009ec0:	f7f8 fab6 	bl	8002430 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009ec4:	4620      	mov	r0, r4
 8009ec6:	2200      	movs	r2, #0
 8009ec8:	2103      	movs	r1, #3
 8009eca:	f7f8 fa65 	bl	8002398 <IOE_Write>
}
 8009ece:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009ed2:	2002      	movs	r0, #2
 8009ed4:	f7f8 baac 	b.w	8002430 <IOE_Delay>

08009ed8 <stmpe811_ReadID>:
{
 8009ed8:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009eda:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009edc:	f7f8 fa58 	bl	8002390 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009ee0:	2100      	movs	r1, #0
 8009ee2:	4620      	mov	r0, r4
 8009ee4:	f7f8 fa70 	bl	80023c8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009ee8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009eea:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009eec:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009eee:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009ef0:	f7f8 fa6a 	bl	80023c8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009ef4:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009ef8:	b280      	uxth	r0, r0
 8009efa:	bd10      	pop	{r4, pc}

08009efc <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009efc:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009efe:	b2c4      	uxtb	r4, r0
 8009f00:	2140      	movs	r1, #64	; 0x40
 8009f02:	4620      	mov	r0, r4
 8009f04:	f7f8 fa60 	bl	80023c8 <IOE_Read>
  
  if(state > 0)
 8009f08:	0603      	lsls	r3, r0, #24
 8009f0a:	d40b      	bmi.n	8009f24 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009f0c:	4620      	mov	r0, r4
 8009f0e:	2201      	movs	r2, #1
 8009f10:	214b      	movs	r1, #75	; 0x4b
 8009f12:	f7f8 fa41 	bl	8002398 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009f16:	4620      	mov	r0, r4
 8009f18:	2200      	movs	r2, #0
 8009f1a:	214b      	movs	r1, #75	; 0x4b
 8009f1c:	f7f8 fa3c 	bl	8002398 <IOE_Write>
  uint8_t ret = 0;
 8009f20:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009f22:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009f24:	214c      	movs	r1, #76	; 0x4c
 8009f26:	4620      	mov	r0, r4
 8009f28:	f7f8 fa4e 	bl	80023c8 <IOE_Read>
      ret = 1;
 8009f2c:	3800      	subs	r0, #0
 8009f2e:	bf18      	it	ne
 8009f30:	2001      	movne	r0, #1
}
 8009f32:	bd10      	pop	{r4, pc}

08009f34 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009f34:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009f36:	210b      	movs	r1, #11
 8009f38:	b2c0      	uxtb	r0, r0
 8009f3a:	f7f8 fa45 	bl	80023c8 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009f3e:	f000 001f 	and.w	r0, r0, #31
 8009f42:	bd08      	pop	{r3, pc}

08009f44 <stmpe811_TS_GetXY>:
{
 8009f44:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009f46:	2304      	movs	r3, #4
{
 8009f48:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009f4a:	b2c4      	uxtb	r4, r0
{
 8009f4c:	4615      	mov	r5, r2
 8009f4e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009f50:	eb0d 0203 	add.w	r2, sp, r3
 8009f54:	21d7      	movs	r1, #215	; 0xd7
 8009f56:	4620      	mov	r0, r4
 8009f58:	f7f8 fa52 	bl	8002400 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009f5c:	9b01      	ldr	r3, [sp, #4]
 8009f5e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009f60:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009f62:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009f66:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009f68:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009f6a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009f6c:	2201      	movs	r2, #1
 8009f6e:	214b      	movs	r1, #75	; 0x4b
 8009f70:	f7f8 fa12 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009f74:	2200      	movs	r2, #0
 8009f76:	214b      	movs	r1, #75	; 0x4b
 8009f78:	4620      	mov	r0, r4
 8009f7a:	f7f8 fa0d 	bl	8002398 <IOE_Write>
}
 8009f7e:	b002      	add	sp, #8
 8009f80:	bd70      	pop	{r4, r5, r6, pc}
 8009f82:	bf00      	nop

08009f84 <stmpe811_TS_Start>:
{
 8009f84:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009f86:	b2c4      	uxtb	r4, r0
 8009f88:	2104      	movs	r1, #4
 8009f8a:	4620      	mov	r0, r4
 8009f8c:	f7f8 fa1c 	bl	80023c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009f90:	2104      	movs	r1, #4
 8009f92:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009f96:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009f98:	4620      	mov	r0, r4
 8009f9a:	f7f8 f9fd 	bl	8002398 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8009f9e:	2117      	movs	r1, #23
 8009fa0:	4620      	mov	r0, r4
 8009fa2:	f7f8 fa11 	bl	80023c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8009fa6:	2117      	movs	r1, #23
 8009fa8:	f000 020f 	and.w	r2, r0, #15
 8009fac:	4620      	mov	r0, r4
 8009fae:	f7f8 f9f3 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009fb2:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8009fb6:	4620      	mov	r0, r4
 8009fb8:	2104      	movs	r1, #4
 8009fba:	f7f8 f9ed 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009fbe:	2249      	movs	r2, #73	; 0x49
 8009fc0:	2120      	movs	r1, #32
 8009fc2:	4620      	mov	r0, r4
 8009fc4:	f7f8 f9e8 	bl	8002398 <IOE_Write>
  IOE_Delay(2); 
 8009fc8:	2002      	movs	r0, #2
 8009fca:	f7f8 fa31 	bl	8002430 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009fce:	4620      	mov	r0, r4
 8009fd0:	2201      	movs	r2, #1
 8009fd2:	2121      	movs	r1, #33	; 0x21
 8009fd4:	f7f8 f9e0 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009fd8:	4620      	mov	r0, r4
 8009fda:	229a      	movs	r2, #154	; 0x9a
 8009fdc:	2141      	movs	r1, #65	; 0x41
 8009fde:	f7f8 f9db 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009fe2:	4620      	mov	r0, r4
 8009fe4:	2201      	movs	r2, #1
 8009fe6:	214a      	movs	r1, #74	; 0x4a
 8009fe8:	f7f8 f9d6 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009fec:	4620      	mov	r0, r4
 8009fee:	2201      	movs	r2, #1
 8009ff0:	214b      	movs	r1, #75	; 0x4b
 8009ff2:	f7f8 f9d1 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009ff6:	4620      	mov	r0, r4
 8009ff8:	2200      	movs	r2, #0
 8009ffa:	214b      	movs	r1, #75	; 0x4b
 8009ffc:	f7f8 f9cc 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800a000:	4620      	mov	r0, r4
 800a002:	2201      	movs	r2, #1
 800a004:	2156      	movs	r1, #86	; 0x56
 800a006:	f7f8 f9c7 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800a00a:	4620      	mov	r0, r4
 800a00c:	2201      	movs	r2, #1
 800a00e:	2158      	movs	r1, #88	; 0x58
 800a010:	f7f8 f9c2 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800a014:	4620      	mov	r0, r4
 800a016:	2201      	movs	r2, #1
 800a018:	2140      	movs	r1, #64	; 0x40
 800a01a:	f7f8 f9bd 	bl	8002398 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800a01e:	4620      	mov	r0, r4
 800a020:	22ff      	movs	r2, #255	; 0xff
 800a022:	210b      	movs	r1, #11
 800a024:	f7f8 f9b8 	bl	8002398 <IOE_Write>
}
 800a028:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800a02c:	2002      	movs	r0, #2
 800a02e:	f7f8 b9ff 	b.w	8002430 <IOE_Delay>
 800a032:	bf00      	nop

0800a034 <stmpe811_TS_DisableIT>:
{
 800a034:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a036:	b2c4      	uxtb	r4, r0
 800a038:	2109      	movs	r1, #9
 800a03a:	4620      	mov	r0, r4
 800a03c:	f7f8 f9c4 	bl	80023c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800a040:	2109      	movs	r1, #9
 800a042:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800a046:	4620      	mov	r0, r4
 800a048:	f7f8 f9a6 	bl	8002398 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a04c:	210a      	movs	r1, #10
 800a04e:	4620      	mov	r0, r4
 800a050:	f7f8 f9ba 	bl	80023c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a054:	210a      	movs	r1, #10
 800a056:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800a05a:	4620      	mov	r0, r4
}
 800a05c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a060:	f7f8 b99a 	b.w	8002398 <IOE_Write>

0800a064 <stmpe811_TS_EnableIT>:
{
 800a064:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a066:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800a068:	f7f8 f994 	bl	8002394 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800a06c:	210a      	movs	r1, #10
 800a06e:	4620      	mov	r0, r4
 800a070:	f7f8 f9aa 	bl	80023c8 <IOE_Read>
  tmp |= Source; 
 800a074:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800a078:	b2c2      	uxtb	r2, r0
 800a07a:	210a      	movs	r1, #10
 800a07c:	4620      	mov	r0, r4
 800a07e:	f7f8 f98b 	bl	8002398 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800a082:	2109      	movs	r1, #9
 800a084:	4620      	mov	r0, r4
 800a086:	f7f8 f99f 	bl	80023c8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800a08a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a08e:	b2c2      	uxtb	r2, r0
 800a090:	2109      	movs	r1, #9
 800a092:	4620      	mov	r0, r4
}
 800a094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800a098:	f7f8 b97e 	b.w	8002398 <IOE_Write>

0800a09c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800a09c:	4a10      	ldr	r2, [pc, #64]	; (800a0e0 <stmpe811_Init+0x44>)
 800a09e:	7813      	ldrb	r3, [r2, #0]
 800a0a0:	4298      	cmp	r0, r3
 800a0a2:	d004      	beq.n	800a0ae <stmpe811_Init+0x12>
 800a0a4:	7851      	ldrb	r1, [r2, #1]
 800a0a6:	4288      	cmp	r0, r1
 800a0a8:	d001      	beq.n	800a0ae <stmpe811_Init+0x12>
 800a0aa:	b113      	cbz	r3, 800a0b2 <stmpe811_Init+0x16>
 800a0ac:	b101      	cbz	r1, 800a0b0 <stmpe811_Init+0x14>
 800a0ae:	4770      	bx	lr
 800a0b0:	2301      	movs	r3, #1
{
 800a0b2:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800a0b4:	b2c4      	uxtb	r4, r0
 800a0b6:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800a0b8:	f7f8 f96a 	bl	8002390 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800a0bc:	2202      	movs	r2, #2
 800a0be:	2103      	movs	r1, #3
 800a0c0:	4620      	mov	r0, r4
 800a0c2:	f7f8 f969 	bl	8002398 <IOE_Write>
  IOE_Delay(10); 
 800a0c6:	200a      	movs	r0, #10
 800a0c8:	f7f8 f9b2 	bl	8002430 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800a0cc:	4620      	mov	r0, r4
 800a0ce:	2200      	movs	r2, #0
 800a0d0:	2103      	movs	r1, #3
 800a0d2:	f7f8 f961 	bl	8002398 <IOE_Write>
}
 800a0d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800a0da:	2002      	movs	r0, #2
 800a0dc:	f7f8 b9a8 	b.w	8002430 <IOE_Delay>
 800a0e0:	20001fb0 	.word	0x20001fb0

0800a0e4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a0e4:	4b05      	ldr	r3, [pc, #20]	; (800a0fc <SystemInit+0x18>)
 800a0e6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a0ea:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a0ee:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800a0f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a0f6:	6099      	str	r1, [r3, #8]
#endif
}
 800a0f8:	4770      	bx	lr
 800a0fa:	bf00      	nop
 800a0fc:	e000ed00 	.word	0xe000ed00

0800a100 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a100:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a102:	4b0b      	ldr	r3, [pc, #44]	; (800a130 <HAL_Init+0x30>)
 800a104:	681a      	ldr	r2, [r3, #0]
 800a106:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a10a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a10c:	681a      	ldr	r2, [r3, #0]
 800a10e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a112:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a114:	681a      	ldr	r2, [r3, #0]
 800a116:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a11a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a11c:	2003      	movs	r0, #3
 800a11e:	f000 f82d 	bl	800a17c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a122:	2000      	movs	r0, #0
 800a124:	f7f8 fdfa 	bl	8002d1c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a128:	f7f8 fb7a 	bl	8002820 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a12c:	2000      	movs	r0, #0
 800a12e:	bd08      	pop	{r3, pc}
 800a130:	40023c00 	.word	0x40023c00

0800a134 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a134:	4a03      	ldr	r2, [pc, #12]	; (800a144 <HAL_IncTick+0x10>)
 800a136:	4b04      	ldr	r3, [pc, #16]	; (800a148 <HAL_IncTick+0x14>)
 800a138:	6811      	ldr	r1, [r2, #0]
 800a13a:	781b      	ldrb	r3, [r3, #0]
 800a13c:	440b      	add	r3, r1
 800a13e:	6013      	str	r3, [r2, #0]
}
 800a140:	4770      	bx	lr
 800a142:	bf00      	nop
 800a144:	20001fb4 	.word	0x20001fb4
 800a148:	2000007c 	.word	0x2000007c

0800a14c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a14c:	4b01      	ldr	r3, [pc, #4]	; (800a154 <HAL_GetTick+0x8>)
 800a14e:	6818      	ldr	r0, [r3, #0]
}
 800a150:	4770      	bx	lr
 800a152:	bf00      	nop
 800a154:	20001fb4 	.word	0x20001fb4

0800a158 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a158:	b538      	push	{r3, r4, r5, lr}
 800a15a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a15c:	f7ff fff6 	bl	800a14c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a160:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800a162:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800a164:	d002      	beq.n	800a16c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800a166:	4b04      	ldr	r3, [pc, #16]	; (800a178 <HAL_Delay+0x20>)
 800a168:	781b      	ldrb	r3, [r3, #0]
 800a16a:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a16c:	f7ff ffee 	bl	800a14c <HAL_GetTick>
 800a170:	1b43      	subs	r3, r0, r5
 800a172:	42a3      	cmp	r3, r4
 800a174:	d3fa      	bcc.n	800a16c <HAL_Delay+0x14>
  {
  }
}
 800a176:	bd38      	pop	{r3, r4, r5, pc}
 800a178:	2000007c 	.word	0x2000007c

0800a17c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a17c:	4907      	ldr	r1, [pc, #28]	; (800a19c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800a17e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a180:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a182:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a186:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a18a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a18c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a18e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800a192:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800a196:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800a198:	4770      	bx	lr
 800a19a:	bf00      	nop
 800a19c:	e000ed00 	.word	0xe000ed00

0800a1a0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a1a0:	4b1c      	ldr	r3, [pc, #112]	; (800a214 <HAL_NVIC_SetPriority+0x74>)
 800a1a2:	68db      	ldr	r3, [r3, #12]
 800a1a4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a1a8:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a1aa:	f1c3 0e07 	rsb	lr, r3, #7
 800a1ae:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a1b2:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a1b6:	bf28      	it	cs
 800a1b8:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a1bc:	f1bc 0f06 	cmp.w	ip, #6
 800a1c0:	d91b      	bls.n	800a1fa <HAL_NVIC_SetPriority+0x5a>
 800a1c2:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a1c4:	f04f 3cff 	mov.w	ip, #4294967295
 800a1c8:	fa0c fc03 	lsl.w	ip, ip, r3
 800a1cc:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a1d0:	f04f 3cff 	mov.w	ip, #4294967295
 800a1d4:	fa0c fc0e 	lsl.w	ip, ip, lr
 800a1d8:	ea21 010c 	bic.w	r1, r1, ip
 800a1dc:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800a1de:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a1e0:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800a1e4:	db0c      	blt.n	800a200 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a1e6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800a1ea:	0109      	lsls	r1, r1, #4
 800a1ec:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800a1f0:	b2c9      	uxtb	r1, r1
 800a1f2:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a1f6:	f85d fb04 	ldr.w	pc, [sp], #4
 800a1fa:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a1fc:	4613      	mov	r3, r2
 800a1fe:	e7e7      	b.n	800a1d0 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a200:	4b05      	ldr	r3, [pc, #20]	; (800a218 <HAL_NVIC_SetPriority+0x78>)
 800a202:	f000 000f 	and.w	r0, r0, #15
 800a206:	0109      	lsls	r1, r1, #4
 800a208:	4403      	add	r3, r0
 800a20a:	b2c9      	uxtb	r1, r1
 800a20c:	7619      	strb	r1, [r3, #24]
 800a20e:	f85d fb04 	ldr.w	pc, [sp], #4
 800a212:	bf00      	nop
 800a214:	e000ed00 	.word	0xe000ed00
 800a218:	e000ecfc 	.word	0xe000ecfc

0800a21c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a21c:	2800      	cmp	r0, #0
 800a21e:	db07      	blt.n	800a230 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a220:	0941      	lsrs	r1, r0, #5
 800a222:	4a04      	ldr	r2, [pc, #16]	; (800a234 <HAL_NVIC_EnableIRQ+0x18>)
 800a224:	f000 001f 	and.w	r0, r0, #31
 800a228:	2301      	movs	r3, #1
 800a22a:	4083      	lsls	r3, r0
 800a22c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a230:	4770      	bx	lr
 800a232:	bf00      	nop
 800a234:	e000e100 	.word	0xe000e100

0800a238 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a238:	b180      	cbz	r0, 800a25c <HAL_CRC_Init+0x24>
{
 800a23a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a23c:	7943      	ldrb	r3, [r0, #5]
 800a23e:	4604      	mov	r4, r0
 800a240:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a244:	b11b      	cbz	r3, 800a24e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a246:	2301      	movs	r3, #1
 800a248:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a24a:	2000      	movs	r0, #0
}
 800a24c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800a24e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800a250:	f7f8 fb06 	bl	8002860 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800a254:	2301      	movs	r3, #1
 800a256:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800a258:	2000      	movs	r0, #0
}
 800a25a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a25c:	2001      	movs	r0, #1
}
 800a25e:	4770      	bx	lr

0800a260 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a260:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a264:	2b02      	cmp	r3, #2
 800a266:	d003      	beq.n	800a270 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a268:	2380      	movs	r3, #128	; 0x80
 800a26a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800a26c:	2001      	movs	r0, #1
 800a26e:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800a270:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800a272:	2305      	movs	r3, #5
 800a274:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800a278:	6813      	ldr	r3, [r2, #0]
 800a27a:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800a27e:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800a280:	6013      	str	r3, [r2, #0]
}
 800a282:	4770      	bx	lr

0800a284 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800a284:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800a288:	4770      	bx	lr
 800a28a:	bf00      	nop

0800a28c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a290:	2200      	movs	r2, #0
 800a292:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a294:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a4f8 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a298:	4e90      	ldr	r6, [pc, #576]	; (800a4dc <HAL_GPIO_Init+0x250>)
{
 800a29a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a29c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a29e:	4689      	mov	r9, r1
 800a2a0:	e005      	b.n	800a2ae <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a2a2:	3301      	adds	r3, #1
 800a2a4:	2b10      	cmp	r3, #16
 800a2a6:	f102 0202 	add.w	r2, r2, #2
 800a2aa:	f000 8095 	beq.w	800a3d8 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800a2ae:	2101      	movs	r1, #1
 800a2b0:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a2b2:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800a2b6:	43a1      	bics	r1, r4
 800a2b8:	d1f3      	bne.n	800a2a2 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a2ba:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800a2be:	f00c 0103 	and.w	r1, ip, #3
 800a2c2:	1e4d      	subs	r5, r1, #1
 800a2c4:	2d01      	cmp	r5, #1
 800a2c6:	f240 808a 	bls.w	800a3de <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a2ca:	2903      	cmp	r1, #3
 800a2cc:	f040 80ca 	bne.w	800a464 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a2d0:	4091      	lsls	r1, r2
 800a2d2:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800a2d4:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a2d6:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a2d8:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a2da:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a2de:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a2e0:	d0df      	beq.n	800a2a2 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a2e2:	2100      	movs	r1, #0
 800a2e4:	9103      	str	r1, [sp, #12]
 800a2e6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a2ea:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800a2ee:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800a2f2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a2f6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800a2fa:	9103      	str	r1, [sp, #12]
 800a2fc:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a2fe:	f023 0103 	bic.w	r1, r3, #3
 800a302:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800a306:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a30a:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a30e:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a310:	00bf      	lsls	r7, r7, #2
 800a312:	f04f 0e0f 	mov.w	lr, #15
 800a316:	fa0e fe07 	lsl.w	lr, lr, r7
 800a31a:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a31e:	4d70      	ldr	r5, [pc, #448]	; (800a4e0 <HAL_GPIO_Init+0x254>)
 800a320:	42a8      	cmp	r0, r5
 800a322:	d02e      	beq.n	800a382 <HAL_GPIO_Init+0xf6>
 800a324:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800a328:	42a8      	cmp	r0, r5
 800a32a:	f000 809f 	beq.w	800a46c <HAL_GPIO_Init+0x1e0>
 800a32e:	4d6d      	ldr	r5, [pc, #436]	; (800a4e4 <HAL_GPIO_Init+0x258>)
 800a330:	42a8      	cmp	r0, r5
 800a332:	f000 80a2 	beq.w	800a47a <HAL_GPIO_Init+0x1ee>
 800a336:	4d6c      	ldr	r5, [pc, #432]	; (800a4e8 <HAL_GPIO_Init+0x25c>)
 800a338:	42a8      	cmp	r0, r5
 800a33a:	f000 80a5 	beq.w	800a488 <HAL_GPIO_Init+0x1fc>
 800a33e:	4d6b      	ldr	r5, [pc, #428]	; (800a4ec <HAL_GPIO_Init+0x260>)
 800a340:	42a8      	cmp	r0, r5
 800a342:	f000 80a8 	beq.w	800a496 <HAL_GPIO_Init+0x20a>
 800a346:	4d6a      	ldr	r5, [pc, #424]	; (800a4f0 <HAL_GPIO_Init+0x264>)
 800a348:	42a8      	cmp	r0, r5
 800a34a:	f000 80b2 	beq.w	800a4b2 <HAL_GPIO_Init+0x226>
 800a34e:	4d69      	ldr	r5, [pc, #420]	; (800a4f4 <HAL_GPIO_Init+0x268>)
 800a350:	42a8      	cmp	r0, r5
 800a352:	f000 80b5 	beq.w	800a4c0 <HAL_GPIO_Init+0x234>
 800a356:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a4fc <HAL_GPIO_Init+0x270>
 800a35a:	4570      	cmp	r0, lr
 800a35c:	f000 80a2 	beq.w	800a4a4 <HAL_GPIO_Init+0x218>
 800a360:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a500 <HAL_GPIO_Init+0x274>
 800a364:	4570      	cmp	r0, lr
 800a366:	f000 80b2 	beq.w	800a4ce <HAL_GPIO_Init+0x242>
 800a36a:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a504 <HAL_GPIO_Init+0x278>
 800a36e:	4570      	cmp	r0, lr
 800a370:	bf0c      	ite	eq
 800a372:	f04f 0e09 	moveq.w	lr, #9
 800a376:	f04f 0e0a 	movne.w	lr, #10
 800a37a:	fa0e f707 	lsl.w	r7, lr, r7
 800a37e:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a382:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800a386:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800a388:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a38c:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800a390:	bf0c      	ite	eq
 800a392:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a394:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800a398:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800a39a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a39c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800a3a0:	bf0c      	ite	eq
 800a3a2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a3a4:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800a3a8:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800a3aa:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a3ac:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800a3b0:	bf0c      	ite	eq
 800a3b2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a3b4:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800a3b8:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a3ba:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a3bc:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a3c0:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800a3c4:	bf0c      	ite	eq
 800a3c6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a3c8:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a3cc:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800a3ce:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a3d0:	f102 0202 	add.w	r2, r2, #2
 800a3d4:	f47f af6b 	bne.w	800a2ae <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800a3d8:	b005      	add	sp, #20
 800a3da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a3de:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a3e2:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a3e6:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a3ea:	2503      	movs	r5, #3
 800a3ec:	fa05 f802 	lsl.w	r8, r5, r2
 800a3f0:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a3f4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a3f8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a3fa:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a3fc:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a400:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a404:	409f      	lsls	r7, r3
 800a406:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a40a:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a40e:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a410:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a412:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a416:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a41a:	4097      	lsls	r7, r2
 800a41c:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a420:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a422:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a424:	fa01 f102 	lsl.w	r1, r1, r2
 800a428:	f47f af54 	bne.w	800a2d4 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a42c:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a430:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a434:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a438:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a43c:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a43e:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a442:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a446:	fa07 f708 	lsl.w	r7, r7, r8
 800a44a:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a44c:	270f      	movs	r7, #15
 800a44e:	fa07 f808 	lsl.w	r8, r7, r8
 800a452:	9f00      	ldr	r7, [sp, #0]
 800a454:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a458:	9f01      	ldr	r7, [sp, #4]
 800a45a:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a45e:	f8ce 7020 	str.w	r7, [lr, #32]
 800a462:	e737      	b.n	800a2d4 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a464:	2503      	movs	r5, #3
 800a466:	4095      	lsls	r5, r2
 800a468:	43ed      	mvns	r5, r5
 800a46a:	e7d1      	b.n	800a410 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a46c:	f04f 0e01 	mov.w	lr, #1
 800a470:	fa0e f707 	lsl.w	r7, lr, r7
 800a474:	ea48 0807 	orr.w	r8, r8, r7
 800a478:	e783      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a47a:	f04f 0e02 	mov.w	lr, #2
 800a47e:	fa0e f707 	lsl.w	r7, lr, r7
 800a482:	ea48 0807 	orr.w	r8, r8, r7
 800a486:	e77c      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a488:	f04f 0e03 	mov.w	lr, #3
 800a48c:	fa0e f707 	lsl.w	r7, lr, r7
 800a490:	ea48 0807 	orr.w	r8, r8, r7
 800a494:	e775      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a496:	f04f 0e04 	mov.w	lr, #4
 800a49a:	fa0e f707 	lsl.w	r7, lr, r7
 800a49e:	ea48 0807 	orr.w	r8, r8, r7
 800a4a2:	e76e      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a4a4:	f04f 0e07 	mov.w	lr, #7
 800a4a8:	fa0e f707 	lsl.w	r7, lr, r7
 800a4ac:	ea48 0807 	orr.w	r8, r8, r7
 800a4b0:	e767      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a4b2:	f04f 0e05 	mov.w	lr, #5
 800a4b6:	fa0e f707 	lsl.w	r7, lr, r7
 800a4ba:	ea48 0807 	orr.w	r8, r8, r7
 800a4be:	e760      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a4c0:	f04f 0e06 	mov.w	lr, #6
 800a4c4:	fa0e f707 	lsl.w	r7, lr, r7
 800a4c8:	ea48 0807 	orr.w	r8, r8, r7
 800a4cc:	e759      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a4ce:	f04f 0e08 	mov.w	lr, #8
 800a4d2:	fa0e f707 	lsl.w	r7, lr, r7
 800a4d6:	ea48 0807 	orr.w	r8, r8, r7
 800a4da:	e752      	b.n	800a382 <HAL_GPIO_Init+0xf6>
 800a4dc:	40013c00 	.word	0x40013c00
 800a4e0:	40020000 	.word	0x40020000
 800a4e4:	40020800 	.word	0x40020800
 800a4e8:	40020c00 	.word	0x40020c00
 800a4ec:	40021000 	.word	0x40021000
 800a4f0:	40021400 	.word	0x40021400
 800a4f4:	40021800 	.word	0x40021800
 800a4f8:	40023800 	.word	0x40023800
 800a4fc:	40021c00 	.word	0x40021c00
 800a500:	40022000 	.word	0x40022000
 800a504:	40022400 	.word	0x40022400

0800a508 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a508:	6903      	ldr	r3, [r0, #16]
 800a50a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a50c:	bf14      	ite	ne
 800a50e:	2001      	movne	r0, #1
 800a510:	2000      	moveq	r0, #0
 800a512:	4770      	bx	lr

0800a514 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a514:	b902      	cbnz	r2, 800a518 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a516:	0409      	lsls	r1, r1, #16
 800a518:	6181      	str	r1, [r0, #24]
  }
}
 800a51a:	4770      	bx	lr

0800a51c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a51c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a51e:	ea01 0203 	and.w	r2, r1, r3
 800a522:	ea21 0103 	bic.w	r1, r1, r3
 800a526:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a52a:	6181      	str	r1, [r0, #24]
}
 800a52c:	4770      	bx	lr
 800a52e:	bf00      	nop

0800a530 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a530:	4770      	bx	lr
 800a532:	bf00      	nop

0800a534 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a534:	4a04      	ldr	r2, [pc, #16]	; (800a548 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a536:	6951      	ldr	r1, [r2, #20]
 800a538:	4201      	tst	r1, r0
 800a53a:	d100      	bne.n	800a53e <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a53c:	4770      	bx	lr
{
 800a53e:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a540:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a542:	f7ff fff5 	bl	800a530 <HAL_GPIO_EXTI_Callback>
}
 800a546:	bd08      	pop	{r3, pc}
 800a548:	40013c00 	.word	0x40013c00

0800a54c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a550:	6804      	ldr	r4, [r0, #0]
{
 800a552:	b083      	sub	sp, #12
 800a554:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a556:	6823      	ldr	r3, [r4, #0]
{
 800a558:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a55c:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a560:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a564:	4606      	mov	r6, r0
 800a566:	468a      	mov	sl, r1
 800a568:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a56a:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a56c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a570:	d136      	bne.n	800a5e0 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a572:	6965      	ldr	r5, [r4, #20]
 800a574:	07e8      	lsls	r0, r5, #31
 800a576:	d5fc      	bpl.n	800a572 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a578:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a57c:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a57e:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a582:	d003      	beq.n	800a58c <I2C_RequestMemoryWrite+0x40>
 800a584:	e04f      	b.n	800a626 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a586:	6961      	ldr	r1, [r4, #20]
 800a588:	054d      	lsls	r5, r1, #21
 800a58a:	d45d      	bmi.n	800a648 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a58c:	6961      	ldr	r1, [r4, #20]
 800a58e:	078b      	lsls	r3, r1, #30
 800a590:	d5f9      	bpl.n	800a586 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a592:	2300      	movs	r3, #0
 800a594:	9301      	str	r3, [sp, #4]
 800a596:	6963      	ldr	r3, [r4, #20]
 800a598:	9301      	str	r3, [sp, #4]
 800a59a:	69a3      	ldr	r3, [r4, #24]
 800a59c:	9301      	str	r3, [sp, #4]
 800a59e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5a0:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a5a4:	f040 8088 	bne.w	800a6b8 <I2C_RequestMemoryWrite+0x16c>
 800a5a8:	6963      	ldr	r3, [r4, #20]
 800a5aa:	061a      	lsls	r2, r3, #24
 800a5ac:	d464      	bmi.n	800a678 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5ae:	6963      	ldr	r3, [r4, #20]
 800a5b0:	055b      	lsls	r3, r3, #21
 800a5b2:	d5f9      	bpl.n	800a5a8 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a5b4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a5b6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a5ba:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a5bc:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a5be:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a5c0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a5c4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a5c8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a5ca:	f043 0304 	orr.w	r3, r3, #4
 800a5ce:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a5d0:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a5d2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a5d4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a5d6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a5da:	d066      	beq.n	800a6aa <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a5dc:	2001      	movs	r0, #1
 800a5de:	e01f      	b.n	800a620 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a5e0:	6963      	ldr	r3, [r4, #20]
 800a5e2:	07d9      	lsls	r1, r3, #31
 800a5e4:	d4c8      	bmi.n	800a578 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5e6:	f7ff fdb1 	bl	800a14c <HAL_GetTick>
 800a5ea:	eba0 000b 	sub.w	r0, r0, fp
 800a5ee:	4581      	cmp	r9, r0
 800a5f0:	d304      	bcc.n	800a5fc <I2C_RequestMemoryWrite+0xb0>
 800a5f2:	f1b9 0f00 	cmp.w	r9, #0
 800a5f6:	d001      	beq.n	800a5fc <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a5f8:	6834      	ldr	r4, [r6, #0]
 800a5fa:	e7b7      	b.n	800a56c <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5fc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5fe:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a600:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a602:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a606:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a60a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a60c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a60e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a612:	f042 0220 	orr.w	r2, r2, #32
 800a616:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a618:	680b      	ldr	r3, [r1, #0]
 800a61a:	05dc      	lsls	r4, r3, #23
 800a61c:	d435      	bmi.n	800a68a <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a61e:	2003      	movs	r0, #3
}
 800a620:	b003      	add	sp, #12
 800a622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a626:	6963      	ldr	r3, [r4, #20]
 800a628:	0798      	lsls	r0, r3, #30
 800a62a:	d4b2      	bmi.n	800a592 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a62c:	6963      	ldr	r3, [r4, #20]
 800a62e:	055a      	lsls	r2, r3, #21
 800a630:	d40a      	bmi.n	800a648 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a632:	f7ff fd8b 	bl	800a14c <HAL_GetTick>
 800a636:	eba0 000b 	sub.w	r0, r0, fp
 800a63a:	4581      	cmp	r9, r0
 800a63c:	d34e      	bcc.n	800a6dc <I2C_RequestMemoryWrite+0x190>
 800a63e:	f1b9 0f00 	cmp.w	r9, #0
 800a642:	d04b      	beq.n	800a6dc <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a644:	6834      	ldr	r4, [r6, #0]
 800a646:	e79a      	b.n	800a57e <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a648:	6823      	ldr	r3, [r4, #0]
 800a64a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a64e:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a650:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a652:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a656:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a658:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a65a:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a65c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a660:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a664:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a666:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a66a:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a66e:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a670:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a672:	b003      	add	sp, #12
 800a674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a678:	f1b8 0f01 	cmp.w	r8, #1
 800a67c:	d109      	bne.n	800a692 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a67e:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a680:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a682:	6127      	str	r7, [r4, #16]
}
 800a684:	b003      	add	sp, #12
 800a686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a68a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a68e:	6433      	str	r3, [r6, #64]	; 0x40
 800a690:	e7c5      	b.n	800a61e <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a692:	0a3b      	lsrs	r3, r7, #8
 800a694:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a696:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a69a:	d12e      	bne.n	800a6fa <I2C_RequestMemoryWrite+0x1ae>
 800a69c:	6963      	ldr	r3, [r4, #20]
 800a69e:	0619      	lsls	r1, r3, #24
 800a6a0:	d4ed      	bmi.n	800a67e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6a2:	6963      	ldr	r3, [r4, #20]
 800a6a4:	055a      	lsls	r2, r3, #21
 800a6a6:	d5f9      	bpl.n	800a69c <I2C_RequestMemoryWrite+0x150>
 800a6a8:	e784      	b.n	800a5b4 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a6aa:	6832      	ldr	r2, [r6, #0]
 800a6ac:	6813      	ldr	r3, [r2, #0]
 800a6ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a6b2:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a6b4:	6013      	str	r3, [r2, #0]
 800a6b6:	e7b3      	b.n	800a620 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a6b8:	6963      	ldr	r3, [r4, #20]
 800a6ba:	061d      	lsls	r5, r3, #24
 800a6bc:	d4dc      	bmi.n	800a678 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6be:	6963      	ldr	r3, [r4, #20]
 800a6c0:	0559      	lsls	r1, r3, #21
 800a6c2:	f53f af77 	bmi.w	800a5b4 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a6c6:	f7ff fd41 	bl	800a14c <HAL_GetTick>
 800a6ca:	eba0 000b 	sub.w	r0, r0, fp
 800a6ce:	4581      	cmp	r9, r0
 800a6d0:	d325      	bcc.n	800a71e <I2C_RequestMemoryWrite+0x1d2>
 800a6d2:	f1b9 0f00 	cmp.w	r9, #0
 800a6d6:	d022      	beq.n	800a71e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a6d8:	6834      	ldr	r4, [r6, #0]
 800a6da:	e761      	b.n	800a5a0 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a6dc:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a6de:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a6e0:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a6e2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a6e6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a6ea:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a6ec:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a6f0:	f043 0320 	orr.w	r3, r3, #32
 800a6f4:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a6f6:	2001      	movs	r0, #1
 800a6f8:	e792      	b.n	800a620 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a6fa:	6963      	ldr	r3, [r4, #20]
 800a6fc:	061b      	lsls	r3, r3, #24
 800a6fe:	d4be      	bmi.n	800a67e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a700:	6963      	ldr	r3, [r4, #20]
 800a702:	0558      	lsls	r0, r3, #21
 800a704:	f53f af56 	bmi.w	800a5b4 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a708:	f7ff fd20 	bl	800a14c <HAL_GetTick>
 800a70c:	eba0 000b 	sub.w	r0, r0, fp
 800a710:	4581      	cmp	r9, r0
 800a712:	d304      	bcc.n	800a71e <I2C_RequestMemoryWrite+0x1d2>
 800a714:	f1b9 0f00 	cmp.w	r9, #0
 800a718:	d001      	beq.n	800a71e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a71a:	6834      	ldr	r4, [r6, #0]
 800a71c:	e7bb      	b.n	800a696 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a71e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a720:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a722:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a724:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a728:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a72c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a72e:	4313      	orrs	r3, r2
 800a730:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a732:	e74d      	b.n	800a5d0 <I2C_RequestMemoryWrite+0x84>

0800a734 <I2C_RequestMemoryRead>:
{
 800a734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a738:	6804      	ldr	r4, [r0, #0]
{
 800a73a:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a73c:	6823      	ldr	r3, [r4, #0]
 800a73e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a742:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a744:	6823      	ldr	r3, [r4, #0]
{
 800a746:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a748:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a74c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a750:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a754:	6023      	str	r3, [r4, #0]
{
 800a756:	4606      	mov	r6, r0
 800a758:	468b      	mov	fp, r1
 800a75a:	4617      	mov	r7, r2
 800a75c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a760:	d13a      	bne.n	800a7d8 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a762:	6965      	ldr	r5, [r4, #20]
 800a764:	07eb      	lsls	r3, r5, #31
 800a766:	d5fc      	bpl.n	800a762 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a768:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a76c:	6123      	str	r3, [r4, #16]
 800a76e:	fa5f fb8b 	uxtb.w	fp, fp
 800a772:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a776:	d003      	beq.n	800a780 <I2C_RequestMemoryRead+0x4c>
 800a778:	e069      	b.n	800a84e <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a77a:	6965      	ldr	r5, [r4, #20]
 800a77c:	056a      	lsls	r2, r5, #21
 800a77e:	d44e      	bmi.n	800a81e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a780:	6965      	ldr	r5, [r4, #20]
 800a782:	07a9      	lsls	r1, r5, #30
 800a784:	d5f9      	bpl.n	800a77a <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a786:	2300      	movs	r3, #0
 800a788:	9301      	str	r3, [sp, #4]
 800a78a:	6963      	ldr	r3, [r4, #20]
 800a78c:	9301      	str	r3, [sp, #4]
 800a78e:	69a3      	ldr	r3, [r4, #24]
 800a790:	9301      	str	r3, [sp, #4]
 800a792:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a794:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a798:	f040 80bd 	bne.w	800a916 <I2C_RequestMemoryRead+0x1e2>
 800a79c:	6963      	ldr	r3, [r4, #20]
 800a79e:	0618      	lsls	r0, r3, #24
 800a7a0:	d468      	bmi.n	800a874 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7a2:	6963      	ldr	r3, [r4, #20]
 800a7a4:	0559      	lsls	r1, r3, #21
 800a7a6:	d5f9      	bpl.n	800a79c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a7a8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a7aa:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a7ae:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a7b0:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a7b2:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a7b4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a7b8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a7bc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a7be:	f043 0304 	orr.w	r3, r3, #4
 800a7c2:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a7c4:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a7c6:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a7c8:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a7ca:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a7ce:	d070      	beq.n	800a8b2 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a7d0:	2001      	movs	r0, #1
}
 800a7d2:	b003      	add	sp, #12
 800a7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7d8:	6963      	ldr	r3, [r4, #20]
 800a7da:	07dd      	lsls	r5, r3, #31
 800a7dc:	d4c4      	bmi.n	800a768 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7de:	f7ff fcb5 	bl	800a14c <HAL_GetTick>
 800a7e2:	eba0 0009 	sub.w	r0, r0, r9
 800a7e6:	4582      	cmp	sl, r0
 800a7e8:	d304      	bcc.n	800a7f4 <I2C_RequestMemoryRead+0xc0>
 800a7ea:	f1ba 0f00 	cmp.w	sl, #0
 800a7ee:	d001      	beq.n	800a7f4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a7f0:	6834      	ldr	r4, [r6, #0]
 800a7f2:	e7b3      	b.n	800a75c <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7f4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7f6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7f8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7fa:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a7fe:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a802:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a804:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a806:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a80a:	f042 0220 	orr.w	r2, r2, #32
 800a80e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a810:	680b      	ldr	r3, [r1, #0]
 800a812:	05dc      	lsls	r4, r3, #23
 800a814:	d43d      	bmi.n	800a892 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a816:	2003      	movs	r0, #3
}
 800a818:	b003      	add	sp, #12
 800a81a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a81e:	6823      	ldr	r3, [r4, #0]
 800a820:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a824:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a826:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a828:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a82c:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a82e:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a830:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a832:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a836:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a83a:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a83c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a840:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a844:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a846:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a848:	b003      	add	sp, #12
 800a84a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a84e:	6963      	ldr	r3, [r4, #20]
 800a850:	079b      	lsls	r3, r3, #30
 800a852:	d498      	bmi.n	800a786 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a854:	6963      	ldr	r3, [r4, #20]
 800a856:	0558      	lsls	r0, r3, #21
 800a858:	d4e1      	bmi.n	800a81e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a85a:	f7ff fc77 	bl	800a14c <HAL_GetTick>
 800a85e:	eba0 0009 	sub.w	r0, r0, r9
 800a862:	4582      	cmp	sl, r0
 800a864:	f0c0 808f 	bcc.w	800a986 <I2C_RequestMemoryRead+0x252>
 800a868:	f1ba 0f00 	cmp.w	sl, #0
 800a86c:	f000 808b 	beq.w	800a986 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a870:	6834      	ldr	r4, [r6, #0]
 800a872:	e77e      	b.n	800a772 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a874:	f1b8 0f01 	cmp.w	r8, #1
 800a878:	d10f      	bne.n	800a89a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a87a:	b2ff      	uxtb	r7, r7
 800a87c:	6127      	str	r7, [r4, #16]
 800a87e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a882:	d16e      	bne.n	800a962 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a884:	6963      	ldr	r3, [r4, #20]
 800a886:	061b      	lsls	r3, r3, #24
 800a888:	d41a      	bmi.n	800a8c0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a88a:	6963      	ldr	r3, [r4, #20]
 800a88c:	055f      	lsls	r7, r3, #21
 800a88e:	d5f9      	bpl.n	800a884 <I2C_RequestMemoryRead+0x150>
 800a890:	e78a      	b.n	800a7a8 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a892:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a896:	6433      	str	r3, [r6, #64]	; 0x40
 800a898:	e7bd      	b.n	800a816 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a89a:	0a3b      	lsrs	r3, r7, #8
 800a89c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a89e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a8a2:	d17e      	bne.n	800a9a2 <I2C_RequestMemoryRead+0x26e>
 800a8a4:	6963      	ldr	r3, [r4, #20]
 800a8a6:	061d      	lsls	r5, r3, #24
 800a8a8:	d4e7      	bmi.n	800a87a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8aa:	6963      	ldr	r3, [r4, #20]
 800a8ac:	0558      	lsls	r0, r3, #21
 800a8ae:	d5f9      	bpl.n	800a8a4 <I2C_RequestMemoryRead+0x170>
 800a8b0:	e77a      	b.n	800a7a8 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8b2:	6832      	ldr	r2, [r6, #0]
 800a8b4:	6813      	ldr	r3, [r2, #0]
 800a8b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a8ba:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8bc:	6013      	str	r3, [r2, #0]
 800a8be:	e7ab      	b.n	800a818 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a8c0:	6823      	ldr	r3, [r4, #0]
 800a8c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a8c6:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a8c8:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a8cc:	d113      	bne.n	800a8f6 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a8ce:	6963      	ldr	r3, [r4, #20]
 800a8d0:	07d8      	lsls	r0, r3, #31
 800a8d2:	d5fc      	bpl.n	800a8ce <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a8d4:	f04b 0301 	orr.w	r3, fp, #1
 800a8d8:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a8da:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a8de:	d003      	beq.n	800a8e8 <I2C_RequestMemoryRead+0x1b4>
 800a8e0:	e02b      	b.n	800a93a <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8e2:	6963      	ldr	r3, [r4, #20]
 800a8e4:	055b      	lsls	r3, r3, #21
 800a8e6:	d49a      	bmi.n	800a81e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a8e8:	6963      	ldr	r3, [r4, #20]
 800a8ea:	43db      	mvns	r3, r3
 800a8ec:	f013 0302 	ands.w	r3, r3, #2
 800a8f0:	d1f7      	bne.n	800a8e2 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a8f2:	4618      	mov	r0, r3
 800a8f4:	e790      	b.n	800a818 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a8f6:	6963      	ldr	r3, [r4, #20]
 800a8f8:	07d9      	lsls	r1, r3, #31
 800a8fa:	d4eb      	bmi.n	800a8d4 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8fc:	f7ff fc26 	bl	800a14c <HAL_GetTick>
 800a900:	eba0 0009 	sub.w	r0, r0, r9
 800a904:	4582      	cmp	sl, r0
 800a906:	f4ff af75 	bcc.w	800a7f4 <I2C_RequestMemoryRead+0xc0>
 800a90a:	f1ba 0f00 	cmp.w	sl, #0
 800a90e:	f43f af71 	beq.w	800a7f4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a912:	6834      	ldr	r4, [r6, #0]
 800a914:	e7d8      	b.n	800a8c8 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a916:	6963      	ldr	r3, [r4, #20]
 800a918:	061a      	lsls	r2, r3, #24
 800a91a:	d4ab      	bmi.n	800a874 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a91c:	6963      	ldr	r3, [r4, #20]
 800a91e:	055d      	lsls	r5, r3, #21
 800a920:	f53f af42 	bmi.w	800a7a8 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a924:	f7ff fc12 	bl	800a14c <HAL_GetTick>
 800a928:	eba0 0009 	sub.w	r0, r0, r9
 800a92c:	4582      	cmp	sl, r0
 800a92e:	d34b      	bcc.n	800a9c8 <I2C_RequestMemoryRead+0x294>
 800a930:	f1ba 0f00 	cmp.w	sl, #0
 800a934:	d048      	beq.n	800a9c8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a936:	6834      	ldr	r4, [r6, #0]
 800a938:	e72c      	b.n	800a794 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a93a:	6963      	ldr	r3, [r4, #20]
 800a93c:	43db      	mvns	r3, r3
 800a93e:	f013 0302 	ands.w	r3, r3, #2
 800a942:	d0d6      	beq.n	800a8f2 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a944:	6963      	ldr	r3, [r4, #20]
 800a946:	055a      	lsls	r2, r3, #21
 800a948:	f53f af69 	bmi.w	800a81e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a94c:	f7ff fbfe 	bl	800a14c <HAL_GetTick>
 800a950:	eba0 0009 	sub.w	r0, r0, r9
 800a954:	4582      	cmp	sl, r0
 800a956:	d316      	bcc.n	800a986 <I2C_RequestMemoryRead+0x252>
 800a958:	f1ba 0f00 	cmp.w	sl, #0
 800a95c:	d013      	beq.n	800a986 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a95e:	6834      	ldr	r4, [r6, #0]
 800a960:	e7bb      	b.n	800a8da <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a962:	6963      	ldr	r3, [r4, #20]
 800a964:	061d      	lsls	r5, r3, #24
 800a966:	d4ab      	bmi.n	800a8c0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a968:	6963      	ldr	r3, [r4, #20]
 800a96a:	055a      	lsls	r2, r3, #21
 800a96c:	f53f af1c 	bmi.w	800a7a8 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a970:	f7ff fbec 	bl	800a14c <HAL_GetTick>
 800a974:	eba0 0009 	sub.w	r0, r0, r9
 800a978:	4582      	cmp	sl, r0
 800a97a:	d325      	bcc.n	800a9c8 <I2C_RequestMemoryRead+0x294>
 800a97c:	f1ba 0f00 	cmp.w	sl, #0
 800a980:	d022      	beq.n	800a9c8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a982:	6834      	ldr	r4, [r6, #0]
 800a984:	e77b      	b.n	800a87e <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a986:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a988:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a98a:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a98c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a990:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a994:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a996:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a99a:	f043 0320 	orr.w	r3, r3, #32
 800a99e:	6433      	str	r3, [r6, #64]	; 0x40
 800a9a0:	e716      	b.n	800a7d0 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a9a2:	6963      	ldr	r3, [r4, #20]
 800a9a4:	0619      	lsls	r1, r3, #24
 800a9a6:	f53f af68 	bmi.w	800a87a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a9aa:	6963      	ldr	r3, [r4, #20]
 800a9ac:	055b      	lsls	r3, r3, #21
 800a9ae:	f53f aefb 	bmi.w	800a7a8 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9b2:	f7ff fbcb 	bl	800a14c <HAL_GetTick>
 800a9b6:	eba0 0009 	sub.w	r0, r0, r9
 800a9ba:	4582      	cmp	sl, r0
 800a9bc:	d304      	bcc.n	800a9c8 <I2C_RequestMemoryRead+0x294>
 800a9be:	f1ba 0f00 	cmp.w	sl, #0
 800a9c2:	d001      	beq.n	800a9c8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a9c4:	6834      	ldr	r4, [r6, #0]
 800a9c6:	e76a      	b.n	800a89e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a9c8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a9ca:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a9cc:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a9ce:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a9d2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a9d6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a9d8:	4313      	orrs	r3, r2
 800a9da:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a9dc:	e6f2      	b.n	800a7c4 <I2C_RequestMemoryRead+0x90>
 800a9de:	bf00      	nop

0800a9e0 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a9e0:	2800      	cmp	r0, #0
 800a9e2:	f000 80b9 	beq.w	800ab58 <HAL_I2C_Init+0x178>
{
 800a9e6:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a9e8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a9ec:	4604      	mov	r4, r0
 800a9ee:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a9f2:	2b00      	cmp	r3, #0
 800a9f4:	f000 8098 	beq.w	800ab28 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a9f8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a9fa:	2224      	movs	r2, #36	; 0x24
 800a9fc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800aa00:	681a      	ldr	r2, [r3, #0]
 800aa02:	f022 0201 	bic.w	r2, r2, #1
 800aa06:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800aa08:	681a      	ldr	r2, [r3, #0]
 800aa0a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800aa0e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800aa10:	681a      	ldr	r2, [r3, #0]
 800aa12:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800aa16:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800aa18:	f001 fe70 	bl	800c6fc <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800aa1c:	6865      	ldr	r5, [r4, #4]
 800aa1e:	4b4f      	ldr	r3, [pc, #316]	; (800ab5c <HAL_I2C_Init+0x17c>)
 800aa20:	429d      	cmp	r5, r3
 800aa22:	d84f      	bhi.n	800aac4 <HAL_I2C_Init+0xe4>
 800aa24:	4b4e      	ldr	r3, [pc, #312]	; (800ab60 <HAL_I2C_Init+0x180>)
 800aa26:	4298      	cmp	r0, r3
 800aa28:	d97c      	bls.n	800ab24 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800aa2a:	4b4e      	ldr	r3, [pc, #312]	; (800ab64 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aa2c:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800aa2e:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aa32:	1e43      	subs	r3, r0, #1
 800aa34:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aa38:	6822      	ldr	r2, [r4, #0]
 800aa3a:	6851      	ldr	r1, [r2, #4]
 800aa3c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aa40:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800aa44:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aa46:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800aa48:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aa4c:	f10c 0c01 	add.w	ip, ip, #1
 800aa50:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aa54:	ea41 010c 	orr.w	r1, r1, ip
 800aa58:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aa5a:	69d1      	ldr	r1, [r2, #28]
 800aa5c:	f640 70fc 	movw	r0, #4092	; 0xffc
 800aa60:	3301      	adds	r3, #1
 800aa62:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800aa66:	4203      	tst	r3, r0
 800aa68:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800aa6c:	d161      	bne.n	800ab32 <HAL_I2C_Init+0x152>
 800aa6e:	2304      	movs	r3, #4
 800aa70:	430b      	orrs	r3, r1
 800aa72:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800aa74:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800aa78:	6811      	ldr	r1, [r2, #0]
 800aa7a:	4303      	orrs	r3, r0
 800aa7c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800aa80:	430b      	orrs	r3, r1
 800aa82:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800aa84:	6891      	ldr	r1, [r2, #8]
 800aa86:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800aa8a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800aa8e:	4303      	orrs	r3, r0
 800aa90:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800aa94:	430b      	orrs	r3, r1
 800aa96:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800aa98:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800aa9c:	68d1      	ldr	r1, [r2, #12]
 800aa9e:	4303      	orrs	r3, r0
 800aaa0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800aaa4:	430b      	orrs	r3, r1
 800aaa6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800aaa8:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800aaaa:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800aaac:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800aab0:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800aab2:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800aab4:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800aab6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800aaba:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800aabc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800aac0:	4618      	mov	r0, r3
}
 800aac2:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800aac4:	4b28      	ldr	r3, [pc, #160]	; (800ab68 <HAL_I2C_Init+0x188>)
 800aac6:	4298      	cmp	r0, r3
 800aac8:	d92c      	bls.n	800ab24 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aaca:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800aacc:	4b25      	ldr	r3, [pc, #148]	; (800ab64 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aace:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aad0:	4e26      	ldr	r6, [pc, #152]	; (800ab6c <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800aad2:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aad6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aada:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800aade:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800aae0:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800aae4:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800aae8:	fb01 f303 	mul.w	r3, r1, r3
 800aaec:	fba6 6303 	umull	r6, r3, r6, r3
 800aaf0:	6a11      	ldr	r1, [r2, #32]
 800aaf2:	099b      	lsrs	r3, r3, #6
 800aaf4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800aaf8:	3301      	adds	r3, #1
 800aafa:	430b      	orrs	r3, r1
 800aafc:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800aafe:	69d1      	ldr	r1, [r2, #28]
 800ab00:	68a3      	ldr	r3, [r4, #8]
 800ab02:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800ab06:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800ab0a:	b9ab      	cbnz	r3, 800ab38 <HAL_I2C_Init+0x158>
 800ab0c:	1e43      	subs	r3, r0, #1
 800ab0e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ab12:	fbb3 f3f5 	udiv	r3, r3, r5
 800ab16:	3301      	adds	r3, #1
 800ab18:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ab1c:	b1d3      	cbz	r3, 800ab54 <HAL_I2C_Init+0x174>
 800ab1e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800ab22:	e7a5      	b.n	800aa70 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800ab24:	2001      	movs	r0, #1
}
 800ab26:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800ab28:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800ab2c:	f7f7 feb2 	bl	8002894 <HAL_I2C_MspInit>
 800ab30:	e762      	b.n	800a9f8 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800ab32:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ab36:	e79b      	b.n	800aa70 <HAL_I2C_Init+0x90>
 800ab38:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800ab3c:	1e43      	subs	r3, r0, #1
 800ab3e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800ab42:	fbb3 f3f5 	udiv	r3, r3, r5
 800ab46:	3301      	adds	r3, #1
 800ab48:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ab4c:	b113      	cbz	r3, 800ab54 <HAL_I2C_Init+0x174>
 800ab4e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800ab52:	e78d      	b.n	800aa70 <HAL_I2C_Init+0x90>
 800ab54:	2301      	movs	r3, #1
 800ab56:	e78b      	b.n	800aa70 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800ab58:	2001      	movs	r0, #1
}
 800ab5a:	4770      	bx	lr
 800ab5c:	000186a0 	.word	0x000186a0
 800ab60:	001e847f 	.word	0x001e847f
 800ab64:	431bde83 	.word	0x431bde83
 800ab68:	003d08ff 	.word	0x003d08ff
 800ab6c:	10624dd3 	.word	0x10624dd3

0800ab70 <HAL_I2C_Mem_Write>:
{
 800ab70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab74:	4604      	mov	r4, r0
 800ab76:	b083      	sub	sp, #12
 800ab78:	4699      	mov	r9, r3
 800ab7a:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800ab7e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ab80:	460f      	mov	r7, r1
 800ab82:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800ab84:	f7ff fae2 	bl	800a14c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ab88:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ab8c:	2b20      	cmp	r3, #32
 800ab8e:	d004      	beq.n	800ab9a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800ab90:	2702      	movs	r7, #2
}
 800ab92:	4638      	mov	r0, r7
 800ab94:	b003      	add	sp, #12
 800ab96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab9a:	4605      	mov	r5, r0
 800ab9c:	e005      	b.n	800abaa <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab9e:	f7ff fad5 	bl	800a14c <HAL_GetTick>
 800aba2:	1b40      	subs	r0, r0, r5
 800aba4:	2819      	cmp	r0, #25
 800aba6:	f200 80a8 	bhi.w	800acfa <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abaa:	6820      	ldr	r0, [r4, #0]
 800abac:	6983      	ldr	r3, [r0, #24]
 800abae:	ea6f 0c03 	mvn.w	ip, r3
 800abb2:	f01c 0b02 	ands.w	fp, ip, #2
 800abb6:	d0f2      	beq.n	800ab9e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800abb8:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800abbc:	2b01      	cmp	r3, #1
 800abbe:	d0e7      	beq.n	800ab90 <HAL_I2C_Mem_Write+0x20>
 800abc0:	2301      	movs	r3, #1
 800abc2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800abc6:	6803      	ldr	r3, [r0, #0]
 800abc8:	07db      	lsls	r3, r3, #31
 800abca:	d572      	bpl.n	800acb2 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800abcc:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abce:	6807      	ldr	r7, [r0, #0]
 800abd0:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800abd4:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800abd6:	980c      	ldr	r0, [sp, #48]	; 0x30
 800abd8:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800abda:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800abdc:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800abe0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800abe4:	2040      	movs	r0, #64	; 0x40
 800abe6:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800abea:	2000      	movs	r0, #0
 800abec:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800abee:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800abf2:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800abf4:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800abf6:	4856      	ldr	r0, [pc, #344]	; (800ad50 <HAL_I2C_Mem_Write+0x1e0>)
 800abf8:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800abfa:	464b      	mov	r3, r9
 800abfc:	4642      	mov	r2, r8
 800abfe:	4620      	mov	r0, r4
 800ac00:	f7ff fca4 	bl	800a54c <I2C_RequestMemoryWrite>
 800ac04:	4607      	mov	r7, r0
 800ac06:	bb00      	cbnz	r0, 800ac4a <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800ac08:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ac0a:	2b00      	cmp	r3, #0
 800ac0c:	f000 809e 	beq.w	800ad4c <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ac10:	6823      	ldr	r3, [r4, #0]
 800ac12:	1c72      	adds	r2, r6, #1
 800ac14:	d159      	bne.n	800acca <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ac16:	695a      	ldr	r2, [r3, #20]
 800ac18:	0610      	lsls	r0, r2, #24
 800ac1a:	d41b      	bmi.n	800ac54 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ac1c:	695a      	ldr	r2, [r3, #20]
 800ac1e:	0551      	lsls	r1, r2, #21
 800ac20:	d5f9      	bpl.n	800ac16 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ac22:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ac24:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800ac28:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ac2a:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ac2c:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800ac2e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac32:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800ac36:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ac38:	f043 0304 	orr.w	r3, r3, #4
 800ac3c:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ac3e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800ac40:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ac42:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800ac44:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ac48:	d038      	beq.n	800acbc <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800ac4a:	2701      	movs	r7, #1
}
 800ac4c:	4638      	mov	r0, r7
 800ac4e:	b003      	add	sp, #12
 800ac50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ac54:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800ac58:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ac5c:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800ac5e:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ac62:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ac66:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800ac68:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ac6a:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ac6c:	3a01      	subs	r2, #1
 800ac6e:	b292      	uxth	r2, r2
 800ac70:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800ac72:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ac74:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800ac76:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ac78:	0740      	lsls	r0, r0, #29
 800ac7a:	d517      	bpl.n	800acac <HAL_I2C_Mem_Write+0x13c>
 800ac7c:	b942      	cbnz	r2, 800ac90 <HAL_I2C_Mem_Write+0x120>
 800ac7e:	1c72      	adds	r2, r6, #1
 800ac80:	d156      	bne.n	800ad30 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ac82:	695a      	ldr	r2, [r3, #20]
 800ac84:	0750      	lsls	r0, r2, #29
 800ac86:	d446      	bmi.n	800ad16 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ac88:	695a      	ldr	r2, [r3, #20]
 800ac8a:	0551      	lsls	r1, r2, #21
 800ac8c:	d5f9      	bpl.n	800ac82 <HAL_I2C_Mem_Write+0x112>
 800ac8e:	e7c8      	b.n	800ac22 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ac90:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800ac94:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800ac96:	f10c 0102 	add.w	r1, ip, #2
 800ac9a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ac9c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800ac9e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800aca2:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800aca4:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800aca6:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800aca8:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800acaa:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800acac:	2a00      	cmp	r2, #0
 800acae:	d1b0      	bne.n	800ac12 <HAL_I2C_Mem_Write+0xa2>
 800acb0:	e7e5      	b.n	800ac7e <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800acb2:	6803      	ldr	r3, [r0, #0]
 800acb4:	f043 0301 	orr.w	r3, r3, #1
 800acb8:	6003      	str	r3, [r0, #0]
 800acba:	e787      	b.n	800abcc <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acbc:	6822      	ldr	r2, [r4, #0]
 800acbe:	6813      	ldr	r3, [r2, #0]
 800acc0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800acc4:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acc6:	6013      	str	r3, [r2, #0]
 800acc8:	e763      	b.n	800ab92 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800acca:	695a      	ldr	r2, [r3, #20]
 800accc:	0612      	lsls	r2, r2, #24
 800acce:	d4c1      	bmi.n	800ac54 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800acd0:	695a      	ldr	r2, [r3, #20]
 800acd2:	0551      	lsls	r1, r2, #21
 800acd4:	d4a5      	bmi.n	800ac22 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800acd6:	f7ff fa39 	bl	800a14c <HAL_GetTick>
 800acda:	1b40      	subs	r0, r0, r5
 800acdc:	4286      	cmp	r6, r0
 800acde:	d301      	bcc.n	800ace4 <HAL_I2C_Mem_Write+0x174>
 800ace0:	2e00      	cmp	r6, #0
 800ace2:	d195      	bne.n	800ac10 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ace4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ace6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ace8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800acea:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800acee:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800acf2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800acf4:	4313      	orrs	r3, r2
 800acf6:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800acf8:	e7a1      	b.n	800ac3e <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800acfa:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800acfc:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad00:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ad04:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad08:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad0a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad0e:	f043 0320 	orr.w	r3, r3, #32
 800ad12:	6423      	str	r3, [r4, #64]	; 0x40
 800ad14:	e73c      	b.n	800ab90 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad16:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad18:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800ad1e:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad20:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ad22:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ad26:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad2a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800ad2e:	e730      	b.n	800ab92 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ad30:	695a      	ldr	r2, [r3, #20]
 800ad32:	0752      	lsls	r2, r2, #29
 800ad34:	d4ef      	bmi.n	800ad16 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ad36:	695a      	ldr	r2, [r3, #20]
 800ad38:	0551      	lsls	r1, r2, #21
 800ad3a:	f53f af72 	bmi.w	800ac22 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad3e:	f7ff fa05 	bl	800a14c <HAL_GetTick>
 800ad42:	1b40      	subs	r0, r0, r5
 800ad44:	4286      	cmp	r6, r0
 800ad46:	d3cd      	bcc.n	800ace4 <HAL_I2C_Mem_Write+0x174>
 800ad48:	2e00      	cmp	r6, #0
 800ad4a:	d0cb      	beq.n	800ace4 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ad4c:	6823      	ldr	r3, [r4, #0]
 800ad4e:	e796      	b.n	800ac7e <HAL_I2C_Mem_Write+0x10e>
 800ad50:	ffff0000 	.word	0xffff0000

0800ad54 <HAL_I2C_Mem_Read>:
{
 800ad54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad58:	4604      	mov	r4, r0
 800ad5a:	b087      	sub	sp, #28
 800ad5c:	4699      	mov	r9, r3
 800ad5e:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800ad62:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ad64:	460f      	mov	r7, r1
 800ad66:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800ad68:	f7ff f9f0 	bl	800a14c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ad6c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ad70:	2b20      	cmp	r3, #32
 800ad72:	d004      	beq.n	800ad7e <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800ad74:	2702      	movs	r7, #2
}
 800ad76:	4638      	mov	r0, r7
 800ad78:	b007      	add	sp, #28
 800ad7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad7e:	4606      	mov	r6, r0
 800ad80:	e005      	b.n	800ad8e <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad82:	f7ff f9e3 	bl	800a14c <HAL_GetTick>
 800ad86:	1b80      	subs	r0, r0, r6
 800ad88:	2819      	cmp	r0, #25
 800ad8a:	f200 80d2 	bhi.w	800af32 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ad8e:	f8d4 c000 	ldr.w	ip, [r4]
 800ad92:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800ad96:	43c0      	mvns	r0, r0
 800ad98:	f010 0b02 	ands.w	fp, r0, #2
 800ad9c:	d0f1      	beq.n	800ad82 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800ad9e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ada2:	2b01      	cmp	r3, #1
 800ada4:	d0e6      	beq.n	800ad74 <HAL_I2C_Mem_Read+0x20>
 800ada6:	2301      	movs	r3, #1
 800ada8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800adac:	f8dc 3000 	ldr.w	r3, [ip]
 800adb0:	07d9      	lsls	r1, r3, #31
 800adb2:	d537      	bpl.n	800ae24 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800adb4:	f8dc 0000 	ldr.w	r0, [ip]
 800adb8:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800adbc:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800adc0:	9810      	ldr	r0, [sp, #64]	; 0x40
 800adc2:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800adc4:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800adc6:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800adca:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800adce:	2040      	movs	r0, #64	; 0x40
 800add0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800add4:	2000      	movs	r0, #0
 800add6:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800add8:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800addc:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800adde:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ade0:	4893      	ldr	r0, [pc, #588]	; (800b030 <HAL_I2C_Mem_Read+0x2dc>)
 800ade2:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ade4:	4639      	mov	r1, r7
 800ade6:	464b      	mov	r3, r9
 800ade8:	4642      	mov	r2, r8
 800adea:	4620      	mov	r0, r4
 800adec:	f7ff fca2 	bl	800a734 <I2C_RequestMemoryRead>
 800adf0:	4607      	mov	r7, r0
 800adf2:	2800      	cmp	r0, #0
 800adf4:	f040 80ab 	bne.w	800af4e <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800adf8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800adfa:	b9d2      	cbnz	r2, 800ae32 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adfc:	6823      	ldr	r3, [r4, #0]
 800adfe:	9002      	str	r0, [sp, #8]
 800ae00:	695a      	ldr	r2, [r3, #20]
 800ae02:	9202      	str	r2, [sp, #8]
 800ae04:	699a      	ldr	r2, [r3, #24]
 800ae06:	9202      	str	r2, [sp, #8]
 800ae08:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae0a:	681a      	ldr	r2, [r3, #0]
 800ae0c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ae10:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae12:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ae14:	2220      	movs	r2, #32
 800ae16:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ae1a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae1e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800ae22:	e7a8      	b.n	800ad76 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800ae24:	f8dc 3000 	ldr.w	r3, [ip]
 800ae28:	f043 0301 	orr.w	r3, r3, #1
 800ae2c:	f8cc 3000 	str.w	r3, [ip]
 800ae30:	e7c0      	b.n	800adb4 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800ae32:	2a01      	cmp	r2, #1
 800ae34:	f000 812c 	beq.w	800b090 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800ae38:	2a02      	cmp	r2, #2
 800ae3a:	f000 80bd 	beq.w	800afb8 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae3e:	6823      	ldr	r3, [r4, #0]
 800ae40:	9005      	str	r0, [sp, #20]
 800ae42:	6959      	ldr	r1, [r3, #20]
 800ae44:	9105      	str	r1, [sp, #20]
 800ae46:	6999      	ldr	r1, [r3, #24]
 800ae48:	9105      	str	r1, [sp, #20]
 800ae4a:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800ae4c:	2a03      	cmp	r2, #3
 800ae4e:	d849      	bhi.n	800aee4 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800ae50:	2a01      	cmp	r2, #1
 800ae52:	f000 80eb 	beq.w	800b02c <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800ae56:	2a02      	cmp	r2, #2
 800ae58:	f000 8089 	beq.w	800af6e <HAL_I2C_Mem_Read+0x21a>
 800ae5c:	1c69      	adds	r1, r5, #1
 800ae5e:	f040 80bb 	bne.w	800afd8 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae62:	695a      	ldr	r2, [r3, #20]
 800ae64:	0752      	lsls	r2, r2, #29
 800ae66:	d5fc      	bpl.n	800ae62 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae68:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae6c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae70:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae72:	691b      	ldr	r3, [r3, #16]
 800ae74:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ae76:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ae78:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ae7a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ae7c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800ae7e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ae80:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ae82:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ae84:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ae86:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ae88:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800ae8a:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae8c:	6822      	ldr	r2, [r4, #0]
 800ae8e:	f040 80af 	bne.w	800aff0 <HAL_I2C_Mem_Read+0x29c>
 800ae92:	6953      	ldr	r3, [r2, #20]
 800ae94:	075b      	lsls	r3, r3, #29
 800ae96:	d5fc      	bpl.n	800ae92 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae98:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae9a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae9c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800aea0:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aea2:	6913      	ldr	r3, [r2, #16]
 800aea4:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aea6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aea8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aeaa:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aeac:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800aeae:	3b01      	subs	r3, #1
 800aeb0:	b29b      	uxth	r3, r3
 800aeb2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aeb4:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800aeb6:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aeb8:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aebc:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aebe:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aec2:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800aec4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aec6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aec8:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aeca:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aecc:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aece:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aed0:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aed2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aed4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aed6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aed8:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aeda:	2a00      	cmp	r2, #0
 800aedc:	d099      	beq.n	800ae12 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800aede:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aee0:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800aee2:	d9b5      	bls.n	800ae50 <HAL_I2C_Mem_Read+0xfc>
 800aee4:	b95d      	cbnz	r5, 800aefe <HAL_I2C_Mem_Read+0x1aa>
 800aee6:	e0c5      	b.n	800b074 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800aee8:	695a      	ldr	r2, [r3, #20]
 800aeea:	06d0      	lsls	r0, r2, #27
 800aeec:	f100 80b2 	bmi.w	800b054 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aef0:	f7ff f92c 	bl	800a14c <HAL_GetTick>
 800aef4:	1b80      	subs	r0, r0, r6
 800aef6:	4285      	cmp	r5, r0
 800aef8:	f0c0 8086 	bcc.w	800b008 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aefc:	6823      	ldr	r3, [r4, #0]
 800aefe:	695a      	ldr	r2, [r3, #20]
 800af00:	0652      	lsls	r2, r2, #25
 800af02:	d5f1      	bpl.n	800aee8 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af04:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af06:	691b      	ldr	r3, [r3, #16]
 800af08:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800af0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800af0c:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800af0e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800af10:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800af12:	3b01      	subs	r3, #1
 800af14:	b29b      	uxth	r3, r3
 800af16:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800af18:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800af1a:	3a01      	subs	r2, #1
 800af1c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800af1e:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800af22:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800af24:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800af26:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800af2a:	d5d6      	bpl.n	800aeda <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af2c:	6903      	ldr	r3, [r0, #16]
 800af2e:	704b      	strb	r3, [r1, #1]
 800af30:	e036      	b.n	800afa0 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800af32:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800af34:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800af38:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800af3c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af40:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800af42:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af46:	f043 0320 	orr.w	r3, r3, #32
 800af4a:	6423      	str	r3, [r4, #64]	; 0x40
 800af4c:	e712      	b.n	800ad74 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800af4e:	2701      	movs	r7, #1
}
 800af50:	4638      	mov	r0, r7
 800af52:	b007      	add	sp, #28
 800af54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800af58:	695a      	ldr	r2, [r3, #20]
 800af5a:	0750      	lsls	r0, r2, #29
 800af5c:	d40c      	bmi.n	800af78 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af5e:	f7ff f8f5 	bl	800a14c <HAL_GetTick>
 800af62:	1b80      	subs	r0, r0, r6
 800af64:	4285      	cmp	r5, r0
 800af66:	d34f      	bcc.n	800b008 <HAL_I2C_Mem_Read+0x2b4>
 800af68:	2d00      	cmp	r5, #0
 800af6a:	d04d      	beq.n	800b008 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800af6c:	6823      	ldr	r3, [r4, #0]
 800af6e:	1c69      	adds	r1, r5, #1
 800af70:	d1f2      	bne.n	800af58 <HAL_I2C_Mem_Read+0x204>
 800af72:	695a      	ldr	r2, [r3, #20]
 800af74:	0752      	lsls	r2, r2, #29
 800af76:	d5fc      	bpl.n	800af72 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af78:	681a      	ldr	r2, [r3, #0]
 800af7a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af7e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af80:	691a      	ldr	r2, [r3, #16]
 800af82:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800af84:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800af86:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800af88:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800af8a:	3b01      	subs	r3, #1
 800af8c:	b29b      	uxth	r3, r3
 800af8e:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800af90:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800af92:	3b01      	subs	r3, #1
 800af94:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af96:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800af98:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af9a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800af9c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af9e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800afa0:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800afa2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800afa4:	3301      	adds	r3, #1
 800afa6:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800afa8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800afaa:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800afac:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800afae:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800afb0:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800afb2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800afb4:	8563      	strh	r3, [r4, #42]	; 0x2a
 800afb6:	e790      	b.n	800aeda <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afb8:	6823      	ldr	r3, [r4, #0]
 800afba:	6819      	ldr	r1, [r3, #0]
 800afbc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800afc0:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800afc2:	6819      	ldr	r1, [r3, #0]
 800afc4:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800afc8:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800afca:	9004      	str	r0, [sp, #16]
 800afcc:	6959      	ldr	r1, [r3, #20]
 800afce:	9104      	str	r1, [sp, #16]
 800afd0:	6999      	ldr	r1, [r3, #24]
 800afd2:	9104      	str	r1, [sp, #16]
 800afd4:	9904      	ldr	r1, [sp, #16]
 800afd6:	e739      	b.n	800ae4c <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800afd8:	695a      	ldr	r2, [r3, #20]
 800afda:	0750      	lsls	r0, r2, #29
 800afdc:	f53f af44 	bmi.w	800ae68 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800afe0:	f7ff f8b4 	bl	800a14c <HAL_GetTick>
 800afe4:	1b80      	subs	r0, r0, r6
 800afe6:	4285      	cmp	r5, r0
 800afe8:	d30e      	bcc.n	800b008 <HAL_I2C_Mem_Read+0x2b4>
 800afea:	b16d      	cbz	r5, 800b008 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800afec:	6823      	ldr	r3, [r4, #0]
 800afee:	e735      	b.n	800ae5c <HAL_I2C_Mem_Read+0x108>
 800aff0:	6953      	ldr	r3, [r2, #20]
 800aff2:	0758      	lsls	r0, r3, #29
 800aff4:	f53f af50 	bmi.w	800ae98 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aff8:	f7ff f8a8 	bl	800a14c <HAL_GetTick>
 800affc:	1b80      	subs	r0, r0, r6
 800affe:	4285      	cmp	r5, r0
 800b000:	d302      	bcc.n	800b008 <HAL_I2C_Mem_Read+0x2b4>
 800b002:	2d00      	cmp	r5, #0
 800b004:	f47f af41 	bne.w	800ae8a <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b008:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b00a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b00c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b00e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b012:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b016:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b018:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800b01c:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b01e:	f043 0320 	orr.w	r3, r3, #32
}
 800b022:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b024:	6423      	str	r3, [r4, #64]	; 0x40
}
 800b026:	b007      	add	sp, #28
 800b028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b02c:	b95d      	cbnz	r5, 800b046 <HAL_I2C_Mem_Read+0x2f2>
 800b02e:	e02b      	b.n	800b088 <HAL_I2C_Mem_Read+0x334>
 800b030:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b034:	695a      	ldr	r2, [r3, #20]
 800b036:	06d2      	lsls	r2, r2, #27
 800b038:	d40c      	bmi.n	800b054 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b03a:	f7ff f887 	bl	800a14c <HAL_GetTick>
 800b03e:	1b80      	subs	r0, r0, r6
 800b040:	4285      	cmp	r5, r0
 800b042:	d3e1      	bcc.n	800b008 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b044:	6823      	ldr	r3, [r4, #0]
 800b046:	695a      	ldr	r2, [r3, #20]
 800b048:	0651      	lsls	r1, r2, #25
 800b04a:	d5f3      	bpl.n	800b034 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b04c:	691a      	ldr	r2, [r3, #16]
 800b04e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b050:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b052:	e7a5      	b.n	800afa0 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b054:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800b056:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800b05a:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800b05c:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b05e:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800b060:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b064:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800b068:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b06a:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800b06c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800b070:	2701      	movs	r7, #1
 800b072:	e680      	b.n	800ad76 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b074:	695a      	ldr	r2, [r3, #20]
 800b076:	0652      	lsls	r2, r2, #25
 800b078:	f53f af44 	bmi.w	800af04 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b07c:	695a      	ldr	r2, [r3, #20]
 800b07e:	06d1      	lsls	r1, r2, #27
 800b080:	d4e8      	bmi.n	800b054 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b082:	f7ff f863 	bl	800a14c <HAL_GetTick>
 800b086:	e7bf      	b.n	800b008 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b088:	695a      	ldr	r2, [r3, #20]
 800b08a:	0650      	lsls	r0, r2, #25
 800b08c:	d5f6      	bpl.n	800b07c <HAL_I2C_Mem_Read+0x328>
 800b08e:	e7dd      	b.n	800b04c <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b090:	6823      	ldr	r3, [r4, #0]
 800b092:	6819      	ldr	r1, [r3, #0]
 800b094:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b098:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b09a:	9003      	str	r0, [sp, #12]
 800b09c:	6959      	ldr	r1, [r3, #20]
 800b09e:	9103      	str	r1, [sp, #12]
 800b0a0:	6999      	ldr	r1, [r3, #24]
 800b0a2:	9103      	str	r1, [sp, #12]
 800b0a4:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b0a6:	6819      	ldr	r1, [r3, #0]
 800b0a8:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b0ac:	6019      	str	r1, [r3, #0]
 800b0ae:	e6cd      	b.n	800ae4c <HAL_I2C_Mem_Read+0xf8>

0800b0b0 <HAL_I2C_MasterTxCpltCallback>:
 800b0b0:	4770      	bx	lr
 800b0b2:	bf00      	nop

0800b0b4 <HAL_I2C_MasterRxCpltCallback>:
 800b0b4:	4770      	bx	lr
 800b0b6:	bf00      	nop

0800b0b8 <HAL_I2C_SlaveTxCpltCallback>:
 800b0b8:	4770      	bx	lr
 800b0ba:	bf00      	nop

0800b0bc <HAL_I2C_SlaveRxCpltCallback>:
 800b0bc:	4770      	bx	lr
 800b0be:	bf00      	nop

0800b0c0 <HAL_I2C_AddrCallback>:
}
 800b0c0:	4770      	bx	lr
 800b0c2:	bf00      	nop

0800b0c4 <HAL_I2C_ListenCpltCallback>:
 800b0c4:	4770      	bx	lr
 800b0c6:	bf00      	nop

0800b0c8 <HAL_I2C_MemTxCpltCallback>:
 800b0c8:	4770      	bx	lr
 800b0ca:	bf00      	nop

0800b0cc <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0cc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800b0d0:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800b0d2:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800b0d4:	b959      	cbnz	r1, 800b0ee <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b0d6:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b0d8:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b0da:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b0dc:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800b0de:	d00d      	beq.n	800b0fc <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800b0e0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800b0e4:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800b0e6:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b0e8:	3201      	adds	r2, #1
 800b0ea:	6502      	str	r2, [r0, #80]	; 0x50
 800b0ec:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800b0ee:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b0f0:	2901      	cmp	r1, #1
 800b0f2:	d009      	beq.n	800b108 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800b0f4:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800b0f6:	2902      	cmp	r1, #2
 800b0f8:	d00e      	beq.n	800b118 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800b0fa:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b0fc:	b2d2      	uxtb	r2, r2
 800b0fe:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800b100:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b102:	3202      	adds	r2, #2
 800b104:	6502      	str	r2, [r0, #80]	; 0x50
 800b106:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800b108:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800b10a:	6801      	ldr	r1, [r0, #0]
 800b10c:	b2d2      	uxtb	r2, r2
 800b10e:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800b110:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b112:	3201      	adds	r2, #1
 800b114:	6502      	str	r2, [r0, #80]	; 0x50
 800b116:	4770      	bx	lr
 800b118:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800b11a:	2a22      	cmp	r2, #34	; 0x22
 800b11c:	d01f      	beq.n	800b15e <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b11e:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b120:	b289      	uxth	r1, r1
 800b122:	b9c1      	cbnz	r1, 800b156 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b124:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800b126:	b289      	uxth	r1, r1
 800b128:	2900      	cmp	r1, #0
 800b12a:	d1e6      	bne.n	800b0fa <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800b12c:	2a21      	cmp	r2, #33	; 0x21
 800b12e:	d1e4      	bne.n	800b0fa <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b130:	6802      	ldr	r2, [r0, #0]
{
 800b132:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b134:	6854      	ldr	r4, [r2, #4]
 800b136:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800b13a:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b13c:	6814      	ldr	r4, [r2, #0]
 800b13e:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800b142:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800b144:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b146:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800b148:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b14c:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800b150:	f7ff ffba 	bl	800b0c8 <HAL_I2C_MemTxCpltCallback>
}
 800b154:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b156:	2a21      	cmp	r2, #33	; 0x21
 800b158:	d00a      	beq.n	800b170 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b15a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800b15c:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800b15e:	6801      	ldr	r1, [r0, #0]
 800b160:	680a      	ldr	r2, [r1, #0]
 800b162:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b166:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800b168:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b16a:	3201      	adds	r2, #1
 800b16c:	6502      	str	r2, [r0, #80]	; 0x50
 800b16e:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b170:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800b172:	6802      	ldr	r2, [r0, #0]
 800b174:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b178:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800b17a:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b17c:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800b17e:	3a01      	subs	r2, #1
 800b180:	b292      	uxth	r2, r2
 800b182:	855a      	strh	r2, [r3, #42]	; 0x2a
 800b184:	4770      	bx	lr
 800b186:	bf00      	nop

0800b188 <HAL_I2C_MemRxCpltCallback>:
 800b188:	4770      	bx	lr
 800b18a:	bf00      	nop

0800b18c <HAL_I2C_ErrorCallback>:
 800b18c:	4770      	bx	lr
 800b18e:	bf00      	nop

0800b190 <HAL_I2C_AbortCpltCallback>:
 800b190:	4770      	bx	lr
 800b192:	bf00      	nop

0800b194 <I2C_DMAAbort>:
{
 800b194:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b196:	4b3a      	ldr	r3, [pc, #232]	; (800b280 <I2C_DMAAbort+0xec>)
 800b198:	4a3a      	ldr	r2, [pc, #232]	; (800b284 <I2C_DMAAbort+0xf0>)
 800b19a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800b19c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800b19e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b1a0:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800b1a2:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b1a4:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800b1a8:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b1aa:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1ac:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b1b0:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b1b2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800b1b6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1ba:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b1bc:	9301      	str	r3, [sp, #4]
 800b1be:	e005      	b.n	800b1cc <I2C_DMAAbort+0x38>
    count--;
 800b1c0:	9b01      	ldr	r3, [sp, #4]
 800b1c2:	3b01      	subs	r3, #1
 800b1c4:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b1c6:	6813      	ldr	r3, [r2, #0]
 800b1c8:	059b      	lsls	r3, r3, #22
 800b1ca:	d506      	bpl.n	800b1da <I2C_DMAAbort+0x46>
    if (count == 0U)
 800b1cc:	9b01      	ldr	r3, [sp, #4]
 800b1ce:	2b00      	cmp	r3, #0
 800b1d0:	d1f6      	bne.n	800b1c0 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800b1d2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b1d4:	f043 0320 	orr.w	r3, r3, #32
 800b1d8:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800b1da:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800b1dc:	b34c      	cbz	r4, 800b232 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800b1de:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800b1e0:	2500      	movs	r5, #0
 800b1e2:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800b1e4:	b1f3      	cbz	r3, 800b224 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1e6:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b1e8:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1ea:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800b1ee:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800b1f0:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b1f2:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800b1f4:	2400      	movs	r4, #0
 800b1f6:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800b1f8:	6813      	ldr	r3, [r2, #0]
 800b1fa:	f023 0301 	bic.w	r3, r3, #1
 800b1fe:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b200:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b204:	2b60      	cmp	r3, #96	; 0x60
 800b206:	d02a      	beq.n	800b25e <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b208:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800b20c:	2928      	cmp	r1, #40	; 0x28
 800b20e:	d019      	beq.n	800b244 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800b210:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b212:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b214:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b218:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800b21c:	f7ff ffb6 	bl	800b18c <HAL_I2C_ErrorCallback>
}
 800b220:	b002      	add	sp, #8
 800b222:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b224:	6815      	ldr	r5, [r2, #0]
 800b226:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b22a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b22c:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b22e:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800b230:	e7e2      	b.n	800b1f8 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800b232:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800b234:	b1f3      	cbz	r3, 800b274 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b236:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b238:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b23a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b23e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b240:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b242:	e7d7      	b.n	800b1f4 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800b244:	6813      	ldr	r3, [r2, #0]
 800b246:	f043 0301 	orr.w	r3, r3, #1
 800b24a:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b24c:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b24e:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b250:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b254:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b256:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b258:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800b25c:	e7de      	b.n	800b21c <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b25e:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800b260:	2220      	movs	r2, #32
 800b262:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b266:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b26a:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800b26c:	f7ff ff90 	bl	800b190 <HAL_I2C_AbortCpltCallback>
}
 800b270:	b002      	add	sp, #8
 800b272:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b274:	6814      	ldr	r4, [r2, #0]
 800b276:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800b27a:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800b27c:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b27e:	e7bb      	b.n	800b1f8 <I2C_DMAAbort+0x64>
 800b280:	20000078 	.word	0x20000078
 800b284:	14f8b589 	.word	0x14f8b589

0800b288 <I2C_ITError>:
{
 800b288:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b28a:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800b28e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b292:	2b10      	cmp	r3, #16
{
 800b294:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b296:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b298:	d039      	beq.n	800b30e <I2C_ITError+0x86>
 800b29a:	b2d9      	uxtb	r1, r3
 800b29c:	2940      	cmp	r1, #64	; 0x40
 800b29e:	d036      	beq.n	800b30e <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b2a0:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800b2a4:	2928      	cmp	r1, #40	; 0x28
 800b2a6:	d03d      	beq.n	800b324 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b2a8:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b2aa:	6859      	ldr	r1, [r3, #4]
 800b2ac:	0508      	lsls	r0, r1, #20
 800b2ae:	d407      	bmi.n	800b2c0 <I2C_ITError+0x38>
 800b2b0:	2a60      	cmp	r2, #96	; 0x60
 800b2b2:	d005      	beq.n	800b2c0 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800b2b4:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2b6:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b2b8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2bc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800b2c0:	2200      	movs	r2, #0
 800b2c2:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b2c4:	685a      	ldr	r2, [r3, #4]
 800b2c6:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b2ca:	d134      	bne.n	800b336 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b2cc:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b2d0:	2960      	cmp	r1, #96	; 0x60
 800b2d2:	d075      	beq.n	800b3c0 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b2d4:	695a      	ldr	r2, [r3, #20]
 800b2d6:	0650      	lsls	r0, r2, #25
 800b2d8:	d505      	bpl.n	800b2e6 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b2da:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b2dc:	691b      	ldr	r3, [r3, #16]
 800b2de:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b2e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b2e2:	3301      	adds	r3, #1
 800b2e4:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800b2e6:	4620      	mov	r0, r4
 800b2e8:	f7ff ff50 	bl	800b18c <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800b2ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800b2ee:	0719      	lsls	r1, r3, #28
 800b2f0:	d004      	beq.n	800b2fc <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b2f2:	6822      	ldr	r2, [r4, #0]
 800b2f4:	6853      	ldr	r3, [r2, #4]
 800b2f6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b2fa:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800b2fc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b300:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b302:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800b304:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b306:	d501      	bpl.n	800b30c <I2C_ITError+0x84>
 800b308:	2b28      	cmp	r3, #40	; 0x28
 800b30a:	d02f      	beq.n	800b36c <I2C_ITError+0xe4>
}
 800b30c:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b30e:	2a22      	cmp	r2, #34	; 0x22
 800b310:	d1c6      	bne.n	800b2a0 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b312:	6823      	ldr	r3, [r4, #0]
 800b314:	681a      	ldr	r2, [r3, #0]
 800b316:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b31a:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b31c:	685a      	ldr	r2, [r3, #4]
 800b31e:	0512      	lsls	r2, r2, #20
 800b320:	d5c8      	bpl.n	800b2b4 <I2C_ITError+0x2c>
 800b322:	e7cd      	b.n	800b2c0 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b324:	2300      	movs	r3, #0
 800b326:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b328:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800b32a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b32e:	685a      	ldr	r2, [r3, #4]
 800b330:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b334:	d0ca      	beq.n	800b2cc <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b336:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b338:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b33a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b33e:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b340:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b344:	2b01      	cmp	r3, #1
 800b346:	d01e      	beq.n	800b386 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b348:	4b28      	ldr	r3, [pc, #160]	; (800b3ec <I2C_ITError+0x164>)
 800b34a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b34c:	f7fe ff88 	bl	800a260 <HAL_DMA_Abort_IT>
 800b350:	2800      	cmp	r0, #0
 800b352:	d0cb      	beq.n	800b2ec <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800b354:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b356:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800b358:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b35a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b35c:	f023 0301 	bic.w	r3, r3, #1
 800b360:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b362:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b366:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b368:	4798      	blx	r3
 800b36a:	e7bf      	b.n	800b2ec <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b36c:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800b36e:	4920      	ldr	r1, [pc, #128]	; (800b3f0 <I2C_ITError+0x168>)
 800b370:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800b372:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800b374:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800b376:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800b378:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b37c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800b380:	f7ff fea0 	bl	800b0c4 <HAL_I2C_ListenCpltCallback>
}
 800b384:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b386:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b388:	4b18      	ldr	r3, [pc, #96]	; (800b3ec <I2C_ITError+0x164>)
 800b38a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b38c:	f7fe ff68 	bl	800a260 <HAL_DMA_Abort_IT>
 800b390:	2800      	cmp	r0, #0
 800b392:	d0ab      	beq.n	800b2ec <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b394:	6823      	ldr	r3, [r4, #0]
 800b396:	695a      	ldr	r2, [r3, #20]
 800b398:	0651      	lsls	r1, r2, #25
 800b39a:	d506      	bpl.n	800b3aa <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b39c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b39e:	691b      	ldr	r3, [r3, #16]
 800b3a0:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800b3a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b3a4:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b3a6:	3201      	adds	r2, #1
 800b3a8:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b3aa:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b3ac:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800b3ae:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b3b2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b3b4:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b3b6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b3ba:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b3bc:	4798      	blx	r3
 800b3be:	e795      	b.n	800b2ec <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800b3c0:	2120      	movs	r1, #32
 800b3c2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b3c6:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b3c8:	695a      	ldr	r2, [r3, #20]
 800b3ca:	0652      	lsls	r2, r2, #25
 800b3cc:	d506      	bpl.n	800b3dc <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3ce:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3d0:	691b      	ldr	r3, [r3, #16]
 800b3d2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b3d4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b3d6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b3d8:	3201      	adds	r2, #1
 800b3da:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b3dc:	681a      	ldr	r2, [r3, #0]
 800b3de:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b3e2:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b3e4:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b3e6:	f7ff fed3 	bl	800b190 <HAL_I2C_AbortCpltCallback>
 800b3ea:	e77f      	b.n	800b2ec <I2C_ITError+0x64>
 800b3ec:	0800b195 	.word	0x0800b195
 800b3f0:	ffff0000 	.word	0xffff0000

0800b3f4 <HAL_I2C_EV_IRQHandler>:
{
 800b3f4:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b3f6:	6803      	ldr	r3, [r0, #0]
{
 800b3f8:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b3fa:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b3fc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b3fe:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b402:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b406:	2910      	cmp	r1, #16
{
 800b408:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b40a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b40c:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b410:	d022      	beq.n	800b458 <HAL_I2C_EV_IRQHandler+0x64>
 800b412:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b416:	d01f      	beq.n	800b458 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b418:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b41a:	2900      	cmp	r1, #0
 800b41c:	f000 8094 	beq.w	800b548 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b420:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b422:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b424:	f011 0602 	ands.w	r6, r1, #2
 800b428:	d059      	beq.n	800b4de <HAL_I2C_EV_IRQHandler+0xea>
 800b42a:	0586      	lsls	r6, r0, #22
 800b42c:	d559      	bpl.n	800b4e2 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b42e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b430:	b102      	cbz	r2, 800b434 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b432:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b434:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b438:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b43c:	2a28      	cmp	r2, #40	; 0x28
 800b43e:	f000 821e 	beq.w	800b87e <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b442:	2200      	movs	r2, #0
 800b444:	920c      	str	r2, [sp, #48]	; 0x30
 800b446:	6959      	ldr	r1, [r3, #20]
 800b448:	910c      	str	r1, [sp, #48]	; 0x30
 800b44a:	699b      	ldr	r3, [r3, #24]
 800b44c:	930c      	str	r3, [sp, #48]	; 0x30
 800b44e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b450:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b454:	b00e      	add	sp, #56	; 0x38
 800b456:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b458:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b45a:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b45c:	f011 0f01 	tst.w	r1, #1
 800b460:	d11a      	bne.n	800b498 <HAL_I2C_EV_IRQHandler+0xa4>
 800b462:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b466:	d0f5      	beq.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b468:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b46c:	d0f2      	beq.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b46e:	070d      	lsls	r5, r1, #28
 800b470:	d56d      	bpl.n	800b54e <HAL_I2C_EV_IRQHandler+0x15a>
 800b472:	0585      	lsls	r5, r0, #22
 800b474:	f140 8083 	bpl.w	800b57e <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b478:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b47a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b47c:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b47e:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b480:	2900      	cmp	r1, #0
 800b482:	f000 81e3 	beq.w	800b84c <HAL_I2C_EV_IRQHandler+0x458>
 800b486:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b488:	2a00      	cmp	r2, #0
 800b48a:	f000 81df 	beq.w	800b84c <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b48e:	685a      	ldr	r2, [r3, #4]
 800b490:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b494:	605a      	str	r2, [r3, #4]
 800b496:	e7dd      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b498:	0585      	lsls	r5, r0, #22
 800b49a:	d56e      	bpl.n	800b57a <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b49c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b49e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b4a2:	f000 81e9 	beq.w	800b878 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b4a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b4a8:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b4ac:	bf04      	itt	eq
 800b4ae:	2208      	moveq	r2, #8
 800b4b0:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b4b2:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b4b6:	2a40      	cmp	r2, #64	; 0x40
 800b4b8:	f000 81d7 	beq.w	800b86a <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b4bc:	6922      	ldr	r2, [r4, #16]
 800b4be:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b4c2:	f000 81b2 	beq.w	800b82a <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b4c6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4c8:	2a00      	cmp	r2, #0
 800b4ca:	f040 81ef 	bne.w	800b8ac <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b4ce:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4d0:	11d2      	asrs	r2, r2, #7
 800b4d2:	f002 0206 	and.w	r2, r2, #6
 800b4d6:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b4da:	611a      	str	r2, [r3, #16]
 800b4dc:	e7ba      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b4de:	06cd      	lsls	r5, r1, #27
 800b4e0:	d47c      	bmi.n	800b5dc <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b4e2:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b4e6:	2a21      	cmp	r2, #33	; 0x21
 800b4e8:	f000 80f5 	beq.w	800b6d6 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b4ec:	064e      	lsls	r6, r1, #25
 800b4ee:	f140 8132 	bpl.w	800b756 <HAL_I2C_EV_IRQHandler+0x362>
 800b4f2:	0545      	lsls	r5, r0, #21
 800b4f4:	f140 812f 	bpl.w	800b756 <HAL_I2C_EV_IRQHandler+0x362>
 800b4f8:	0749      	lsls	r1, r1, #29
 800b4fa:	f100 812f 	bmi.w	800b75c <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b4fe:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b502:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b504:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b506:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b508:	2a00      	cmp	r2, #0
 800b50a:	d0a3      	beq.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b50c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b50e:	691b      	ldr	r3, [r3, #16]
 800b510:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b512:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b514:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b516:	3b01      	subs	r3, #1
 800b518:	b29b      	uxth	r3, r3
 800b51a:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b51c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b51e:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b520:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b522:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b524:	2b00      	cmp	r3, #0
 800b526:	d195      	bne.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b528:	292a      	cmp	r1, #42	; 0x2a
 800b52a:	d193      	bne.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b52c:	6822      	ldr	r2, [r4, #0]
 800b52e:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b530:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b532:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b534:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b538:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b53a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b53c:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b53e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b542:	f7ff fdbb 	bl	800b0bc <HAL_I2C_SlaveRxCpltCallback>
 800b546:	e785      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b548:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b54a:	6959      	ldr	r1, [r3, #20]
 800b54c:	e76a      	b.n	800b424 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b54e:	078d      	lsls	r5, r1, #30
 800b550:	d515      	bpl.n	800b57e <HAL_I2C_EV_IRQHandler+0x18a>
 800b552:	0585      	lsls	r5, r0, #22
 800b554:	d513      	bpl.n	800b57e <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b556:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b55a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b55c:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b55e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b562:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b564:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b566:	f000 81b3 	beq.w	800b8d0 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b56a:	2200      	movs	r2, #0
 800b56c:	920a      	str	r2, [sp, #40]	; 0x28
 800b56e:	695a      	ldr	r2, [r3, #20]
 800b570:	920a      	str	r2, [sp, #40]	; 0x28
 800b572:	699b      	ldr	r3, [r3, #24]
 800b574:	930a      	str	r3, [sp, #40]	; 0x28
 800b576:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b578:	e76c      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b57a:	070d      	lsls	r5, r1, #28
 800b57c:	d5e7      	bpl.n	800b54e <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b57e:	0776      	lsls	r6, r6, #29
 800b580:	f140 80f5 	bpl.w	800b76e <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b584:	685d      	ldr	r5, [r3, #4]
 800b586:	052d      	lsls	r5, r5, #20
 800b588:	f53f af64 	bmi.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b58c:	060e      	lsls	r6, r1, #24
 800b58e:	f140 8115 	bpl.w	800b7bc <HAL_I2C_EV_IRQHandler+0x3c8>
 800b592:	0545      	lsls	r5, r0, #21
 800b594:	f140 8112 	bpl.w	800b7bc <HAL_I2C_EV_IRQHandler+0x3c8>
 800b598:	074e      	lsls	r6, r1, #29
 800b59a:	f100 8112 	bmi.w	800b7c2 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b59e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b5a2:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b5a4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b5a8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b5aa:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b5ac:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b5ae:	2800      	cmp	r0, #0
 800b5b0:	f040 8235 	bne.w	800ba1e <HAL_I2C_EV_IRQHandler+0x62a>
 800b5b4:	2a21      	cmp	r2, #33	; 0x21
 800b5b6:	f000 8347 	beq.w	800bc48 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b5ba:	2940      	cmp	r1, #64	; 0x40
 800b5bc:	f47f af4a 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b5c0:	2a22      	cmp	r2, #34	; 0x22
 800b5c2:	f47f af47 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b5c6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5c8:	b292      	uxth	r2, r2
 800b5ca:	2a00      	cmp	r2, #0
 800b5cc:	f000 8268 	beq.w	800baa0 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b5d0:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b5d4:	2a40      	cmp	r2, #64	; 0x40
 800b5d6:	f040 80b4 	bne.w	800b742 <HAL_I2C_EV_IRQHandler+0x34e>
 800b5da:	e0fc      	b.n	800b7d6 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b5dc:	0585      	lsls	r5, r0, #22
 800b5de:	d580      	bpl.n	800b4e2 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b5e0:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b5e4:	685a      	ldr	r2, [r3, #4]
 800b5e6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b5ea:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b5ec:	960d      	str	r6, [sp, #52]	; 0x34
 800b5ee:	695a      	ldr	r2, [r3, #20]
 800b5f0:	920d      	str	r2, [sp, #52]	; 0x34
 800b5f2:	681a      	ldr	r2, [r3, #0]
 800b5f4:	f042 0201 	orr.w	r2, r2, #1
 800b5f8:	601a      	str	r2, [r3, #0]
 800b5fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5fc:	681a      	ldr	r2, [r3, #0]
 800b5fe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b602:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b604:	685a      	ldr	r2, [r3, #4]
 800b606:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b608:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b60a:	d521      	bpl.n	800b650 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b60c:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b610:	2a22      	cmp	r2, #34	; 0x22
 800b612:	f000 817a 	beq.w	800b90a <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b616:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b618:	6802      	ldr	r2, [r0, #0]
 800b61a:	6852      	ldr	r2, [r2, #4]
 800b61c:	b292      	uxth	r2, r2
 800b61e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b620:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b622:	b292      	uxth	r2, r2
 800b624:	b11a      	cbz	r2, 800b62e <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b626:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b628:	f042 0204 	orr.w	r2, r2, #4
 800b62c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b62e:	685a      	ldr	r2, [r3, #4]
 800b630:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b634:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b636:	f7fe fe25 	bl	800a284 <HAL_DMA_GetState>
 800b63a:	2801      	cmp	r0, #1
 800b63c:	d008      	beq.n	800b650 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b63e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b640:	4b99      	ldr	r3, [pc, #612]	; (800b8a8 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b642:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b644:	f7fe fe0c 	bl	800a260 <HAL_DMA_Abort_IT>
 800b648:	b110      	cbz	r0, 800b650 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b64a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b64c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b64e:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b650:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b652:	b29b      	uxth	r3, r3
 800b654:	b313      	cbz	r3, 800b69c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b656:	6823      	ldr	r3, [r4, #0]
 800b658:	695a      	ldr	r2, [r3, #20]
 800b65a:	0752      	lsls	r2, r2, #29
 800b65c:	d50a      	bpl.n	800b674 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b65e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b660:	691b      	ldr	r3, [r3, #16]
 800b662:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b664:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b666:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b668:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b66a:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b66c:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b66e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b670:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b672:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b674:	695a      	ldr	r2, [r3, #20]
 800b676:	0656      	lsls	r6, r2, #25
 800b678:	d509      	bpl.n	800b68e <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b67a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b67c:	691b      	ldr	r3, [r3, #16]
 800b67e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b680:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b682:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b684:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b686:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b688:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b68a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b68c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b68e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b690:	b29b      	uxth	r3, r3
 800b692:	b11b      	cbz	r3, 800b69c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b694:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b696:	f043 0304 	orr.w	r3, r3, #4
 800b69a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b69c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b69e:	2b00      	cmp	r3, #0
 800b6a0:	f040 80dd 	bne.w	800b85e <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b6a4:	2d2a      	cmp	r5, #42	; 0x2a
 800b6a6:	f000 8151 	beq.w	800b94c <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b6aa:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b6ae:	2b28      	cmp	r3, #40	; 0x28
 800b6b0:	f000 8154 	beq.w	800b95c <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b6b4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b6b6:	2b22      	cmp	r3, #34	; 0x22
 800b6b8:	d002      	beq.n	800b6c0 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b6ba:	2d22      	cmp	r5, #34	; 0x22
 800b6bc:	f47f aeca 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b6c0:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b6c2:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b6c4:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b6c6:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b6c8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b6cc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b6d0:	f7ff fcf4 	bl	800b0bc <HAL_I2C_SlaveRxCpltCallback>
 800b6d4:	e6be      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b6d6:	060d      	lsls	r5, r1, #24
 800b6d8:	d528      	bpl.n	800b72c <HAL_I2C_EV_IRQHandler+0x338>
 800b6da:	0546      	lsls	r6, r0, #21
 800b6dc:	d526      	bpl.n	800b72c <HAL_I2C_EV_IRQHandler+0x338>
 800b6de:	074d      	lsls	r5, r1, #29
 800b6e0:	d427      	bmi.n	800b732 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b6e2:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b6e6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b6e8:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b6ea:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b6ec:	2900      	cmp	r1, #0
 800b6ee:	f43f aeb1 	beq.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b6f2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b6f4:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b6f8:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b6fa:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b6fc:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b6fe:	3901      	subs	r1, #1
 800b700:	b289      	uxth	r1, r1
 800b702:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b704:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b706:	b289      	uxth	r1, r1
 800b708:	2900      	cmp	r1, #0
 800b70a:	f47f aea3 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b70e:	2829      	cmp	r0, #41	; 0x29
 800b710:	f47f aea0 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b714:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b716:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b718:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b71c:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b71e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b720:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b722:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b726:	f7ff fcc7 	bl	800b0b8 <HAL_I2C_SlaveTxCpltCallback>
 800b72a:	e693      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b72c:	0749      	lsls	r1, r1, #29
 800b72e:	f57f ae91 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b732:	0582      	lsls	r2, r0, #22
 800b734:	f57f ae8e 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b738:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b73a:	b292      	uxth	r2, r2
 800b73c:	2a00      	cmp	r2, #0
 800b73e:	f43f ae89 	beq.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b742:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b744:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b748:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b74a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b74c:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b74e:	3b01      	subs	r3, #1
 800b750:	b29b      	uxth	r3, r3
 800b752:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b754:	e67e      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b756:	074a      	lsls	r2, r1, #29
 800b758:	f57f ae7c 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b75c:	0586      	lsls	r6, r0, #22
 800b75e:	f57f ae79 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b762:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b764:	b292      	uxth	r2, r2
 800b766:	2a00      	cmp	r2, #0
 800b768:	f43f ae74 	beq.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b76c:	e01b      	b.n	800b7a6 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b76e:	685a      	ldr	r2, [r3, #4]
 800b770:	0512      	lsls	r2, r2, #20
 800b772:	f53f ae6f 	bmi.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b776:	064e      	lsls	r6, r1, #25
 800b778:	d433      	bmi.n	800b7e2 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b77a:	0749      	lsls	r1, r1, #29
 800b77c:	f57f ae6a 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b780:	0582      	lsls	r2, r0, #22
 800b782:	f57f ae67 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b786:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b788:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b78a:	b292      	uxth	r2, r2
 800b78c:	2a04      	cmp	r2, #4
 800b78e:	f000 8113 	beq.w	800b9b8 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b792:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b794:	b292      	uxth	r2, r2
 800b796:	2a03      	cmp	r2, #3
 800b798:	f000 8153 	beq.w	800ba42 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b79c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b79e:	b292      	uxth	r2, r2
 800b7a0:	2a02      	cmp	r2, #2
 800b7a2:	f000 8182 	beq.w	800baaa <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b7a8:	691b      	ldr	r3, [r3, #16]
 800b7aa:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b7ac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b7ae:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b7b0:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b7b2:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b7b4:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b7b6:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b7b8:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b7ba:	e64b      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b7bc:	074d      	lsls	r5, r1, #29
 800b7be:	f57f ae49 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b7c2:	0581      	lsls	r1, r0, #22
 800b7c4:	f57f ae46 	bpl.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b7c8:	2a21      	cmp	r2, #33	; 0x21
 800b7ca:	f000 80fd 	beq.w	800b9c8 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b7ce:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b7d2:	f47f ae3f 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b7d6:	4620      	mov	r0, r4
}
 800b7d8:	b00e      	add	sp, #56	; 0x38
 800b7da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b7de:	f7ff bc75 	b.w	800b0cc <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b7e2:	0545      	lsls	r5, r0, #21
 800b7e4:	d5c9      	bpl.n	800b77a <HAL_I2C_EV_IRQHandler+0x386>
 800b7e6:	f011 0104 	ands.w	r1, r1, #4
 800b7ea:	d1c9      	bne.n	800b780 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b7ec:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b7f0:	2a22      	cmp	r2, #34	; 0x22
 800b7f2:	f47f ae2f 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b7f6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7f8:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b7fa:	2a03      	cmp	r2, #3
 800b7fc:	f240 81ec 	bls.w	800bbd8 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b800:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b802:	691b      	ldr	r3, [r3, #16]
 800b804:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b806:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b808:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b80a:	3b01      	subs	r3, #1
 800b80c:	b29b      	uxth	r3, r3
 800b80e:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b810:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b812:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b814:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b816:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b818:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b81a:	f47f ae1b 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b81e:	6822      	ldr	r2, [r4, #0]
 800b820:	6853      	ldr	r3, [r2, #4]
 800b822:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b826:	6053      	str	r3, [r2, #4]
 800b828:	e614      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b82a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b82e:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b830:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b832:	bf16      	itet	ne
 800b834:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b838:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b83c:	b2d2      	uxtbne	r2, r2
 800b83e:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b840:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b842:	b11a      	cbz	r2, 800b84c <HAL_I2C_EV_IRQHandler+0x458>
 800b844:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b846:	2a00      	cmp	r2, #0
 800b848:	f47f ae21 	bne.w	800b48e <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b84c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b84e:	2a00      	cmp	r2, #0
 800b850:	f43f ae00 	beq.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b854:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b856:	2a00      	cmp	r2, #0
 800b858:	f47f ae19 	bne.w	800b48e <HAL_I2C_EV_IRQHandler+0x9a>
 800b85c:	e5fa      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b85e:	4620      	mov	r0, r4
}
 800b860:	b00e      	add	sp, #56	; 0x38
 800b862:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b866:	f7ff bd0f 	b.w	800b288 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b86a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b86c:	bb52      	cbnz	r2, 800b8c4 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b86e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b870:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b874:	611a      	str	r2, [r3, #16]
 800b876:	e5ed      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b878:	2201      	movs	r2, #1
 800b87a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b87c:	e619      	b.n	800b4b2 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b87e:	685a      	ldr	r2, [r3, #4]
 800b880:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b884:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b886:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b888:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b88c:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b890:	bf54      	ite	pl
 800b892:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b894:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b896:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b89a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b89e:	4620      	mov	r0, r4
 800b8a0:	f7ff fc0e 	bl	800b0c0 <HAL_I2C_AddrCallback>
 800b8a4:	e5d6      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800b8a6:	bf00      	nop
 800b8a8:	0800b195 	.word	0x0800b195
      else if (hi2c->EventCount == 1U)
 800b8ac:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b8ae:	2a01      	cmp	r2, #1
 800b8b0:	f47f add0 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b8b4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b8b6:	11d2      	asrs	r2, r2, #7
 800b8b8:	f002 0206 	and.w	r2, r2, #6
 800b8bc:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b8c0:	611a      	str	r2, [r3, #16]
 800b8c2:	e5c7      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b8c4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b8c6:	f042 0201 	orr.w	r2, r2, #1
 800b8ca:	b2d2      	uxtb	r2, r2
 800b8cc:	611a      	str	r2, [r3, #16]
 800b8ce:	e5c1      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b8d0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b8d2:	b911      	cbnz	r1, 800b8da <HAL_I2C_EV_IRQHandler+0x4e6>
 800b8d4:	2a40      	cmp	r2, #64	; 0x40
 800b8d6:	f000 809b 	beq.w	800ba10 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b8da:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b8dc:	b922      	cbnz	r2, 800b8e8 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b8de:	6921      	ldr	r1, [r4, #16]
 800b8e0:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b8e4:	f000 809f 	beq.w	800ba26 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b8e8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b8ea:	b292      	uxth	r2, r2
 800b8ec:	2a00      	cmp	r2, #0
 800b8ee:	d142      	bne.n	800b976 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8f0:	9203      	str	r2, [sp, #12]
 800b8f2:	695a      	ldr	r2, [r3, #20]
 800b8f4:	9203      	str	r2, [sp, #12]
 800b8f6:	699a      	ldr	r2, [r3, #24]
 800b8f8:	9203      	str	r2, [sp, #12]
 800b8fa:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8fc:	681a      	ldr	r2, [r3, #0]
 800b8fe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b902:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b904:	2300      	movs	r3, #0
 800b906:	6523      	str	r3, [r4, #80]	; 0x50
 800b908:	e5a4      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b90a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b90c:	6802      	ldr	r2, [r0, #0]
 800b90e:	6852      	ldr	r2, [r2, #4]
 800b910:	b292      	uxth	r2, r2
 800b912:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b914:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b916:	b292      	uxth	r2, r2
 800b918:	b11a      	cbz	r2, 800b922 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b91a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b91c:	f042 0204 	orr.w	r2, r2, #4
 800b920:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b922:	685a      	ldr	r2, [r3, #4]
 800b924:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b928:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b92a:	f7fe fcab 	bl	800a284 <HAL_DMA_GetState>
 800b92e:	2801      	cmp	r0, #1
 800b930:	f43f ae8e 	beq.w	800b650 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b934:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b936:	4b98      	ldr	r3, [pc, #608]	; (800bb98 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b938:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b93a:	f7fe fc91 	bl	800a260 <HAL_DMA_Abort_IT>
 800b93e:	2800      	cmp	r0, #0
 800b940:	f43f ae86 	beq.w	800b650 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b944:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b946:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b948:	4798      	blx	r3
 800b94a:	e681      	b.n	800b650 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b94c:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b94e:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b950:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b952:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b956:	f7ff fbb1 	bl	800b0bc <HAL_I2C_SlaveRxCpltCallback>
 800b95a:	e6a6      	b.n	800b6aa <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b95c:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b95e:	498f      	ldr	r1, [pc, #572]	; (800bb9c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b960:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b962:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b964:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b966:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b968:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b96c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b970:	f7ff fba8 	bl	800b0c4 <HAL_I2C_ListenCpltCallback>
 800b974:	e56e      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b976:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b978:	b292      	uxth	r2, r2
 800b97a:	2a01      	cmp	r2, #1
 800b97c:	d070      	beq.n	800ba60 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b97e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b980:	b292      	uxth	r2, r2
 800b982:	2a02      	cmp	r2, #2
 800b984:	f000 80d6 	beq.w	800bb34 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b988:	681a      	ldr	r2, [r3, #0]
 800b98a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b98e:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b990:	685a      	ldr	r2, [r3, #4]
 800b992:	0511      	lsls	r1, r2, #20
 800b994:	d508      	bpl.n	800b9a8 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b996:	2820      	cmp	r0, #32
 800b998:	f200 80f8 	bhi.w	800bb8c <HAL_I2C_EV_IRQHandler+0x798>
 800b99c:	2807      	cmp	r0, #7
 800b99e:	f200 80ea 	bhi.w	800bb76 <HAL_I2C_EV_IRQHandler+0x782>
 800b9a2:	2801      	cmp	r0, #1
 800b9a4:	f000 80ed 	beq.w	800bb82 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b9a8:	2200      	movs	r2, #0
 800b9aa:	9209      	str	r2, [sp, #36]	; 0x24
 800b9ac:	695a      	ldr	r2, [r3, #20]
 800b9ae:	9209      	str	r2, [sp, #36]	; 0x24
 800b9b0:	699b      	ldr	r3, [r3, #24]
 800b9b2:	9309      	str	r3, [sp, #36]	; 0x24
 800b9b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b9b6:	e7a5      	b.n	800b904 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b9b8:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9ba:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b9bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9c0:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9c2:	691b      	ldr	r3, [r3, #16]
 800b9c4:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b9c6:	e6f1      	b.n	800b7ac <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b9c8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b9ca:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b9ce:	2a21      	cmp	r2, #33	; 0x21
 800b9d0:	f47f ad40 	bne.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b9d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b9d6:	b292      	uxth	r2, r2
 800b9d8:	2a00      	cmp	r2, #0
 800b9da:	f47f aeb2 	bne.w	800b742 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b9de:	2908      	cmp	r1, #8
 800b9e0:	f000 80e2 	beq.w	800bba8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b9e4:	2920      	cmp	r1, #32
 800b9e6:	f000 80df 	beq.w	800bba8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b9ea:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b9ee:	f000 80db 	beq.w	800bba8 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b9f2:	6859      	ldr	r1, [r3, #4]
 800b9f4:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b9f8:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b9fa:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b9fc:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b9fe:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba00:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ba04:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ba06:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ba0a:	f7ff fb51 	bl	800b0b0 <HAL_I2C_MasterTxCpltCallback>
 800ba0e:	e521      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba10:	9101      	str	r1, [sp, #4]
 800ba12:	695a      	ldr	r2, [r3, #20]
 800ba14:	9201      	str	r2, [sp, #4]
 800ba16:	699b      	ldr	r3, [r3, #24]
 800ba18:	9301      	str	r3, [sp, #4]
 800ba1a:	9b01      	ldr	r3, [sp, #4]
 800ba1c:	e51a      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ba1e:	2a21      	cmp	r2, #33	; 0x21
 800ba20:	f43f add1 	beq.w	800b5c6 <HAL_I2C_EV_IRQHandler+0x1d2>
 800ba24:	e5c9      	b.n	800b5ba <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba26:	9202      	str	r2, [sp, #8]
 800ba28:	695a      	ldr	r2, [r3, #20]
 800ba2a:	9202      	str	r2, [sp, #8]
 800ba2c:	699a      	ldr	r2, [r3, #24]
 800ba2e:	9202      	str	r2, [sp, #8]
 800ba30:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ba32:	681a      	ldr	r2, [r3, #0]
 800ba34:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ba38:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800ba3a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ba3c:	3301      	adds	r3, #1
 800ba3e:	6523      	str	r3, [r4, #80]	; 0x50
 800ba40:	e508      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ba42:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800ba44:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ba46:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba4a:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800ba4c:	f43f aeab 	beq.w	800b7a6 <HAL_I2C_EV_IRQHandler+0x3b2>
 800ba50:	2902      	cmp	r1, #2
 800ba52:	f43f aea8 	beq.w	800b7a6 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba56:	681a      	ldr	r2, [r3, #0]
 800ba58:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba5c:	601a      	str	r2, [r3, #0]
 800ba5e:	e6a2      	b.n	800b7a6 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800ba60:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ba64:	f000 811b 	beq.w	800bc9e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800ba68:	2808      	cmp	r0, #8
 800ba6a:	f000 8108 	beq.w	800bc7e <HAL_I2C_EV_IRQHandler+0x88a>
 800ba6e:	2820      	cmp	r0, #32
 800ba70:	f000 8105 	beq.w	800bc7e <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ba74:	2d12      	cmp	r5, #18
 800ba76:	f000 80ff 	beq.w	800bc78 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ba7a:	2810      	cmp	r0, #16
 800ba7c:	d804      	bhi.n	800ba88 <HAL_I2C_EV_IRQHandler+0x694>
 800ba7e:	4a48      	ldr	r2, [pc, #288]	; (800bba0 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ba80:	40c2      	lsrs	r2, r0
 800ba82:	07d1      	lsls	r1, r2, #31
 800ba84:	f100 814c 	bmi.w	800bd20 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba88:	681a      	ldr	r2, [r3, #0]
 800ba8a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba8e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba90:	2200      	movs	r2, #0
 800ba92:	9206      	str	r2, [sp, #24]
 800ba94:	695a      	ldr	r2, [r3, #20]
 800ba96:	9206      	str	r2, [sp, #24]
 800ba98:	699b      	ldr	r3, [r3, #24]
 800ba9a:	9306      	str	r3, [sp, #24]
 800ba9c:	9b06      	ldr	r3, [sp, #24]
 800ba9e:	e731      	b.n	800b904 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800baa0:	685a      	ldr	r2, [r3, #4]
 800baa2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800baa6:	605a      	str	r2, [r3, #4]
 800baa8:	e4d4      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800baaa:	3901      	subs	r1, #1
 800baac:	290f      	cmp	r1, #15
 800baae:	d809      	bhi.n	800bac4 <HAL_I2C_EV_IRQHandler+0x6d0>
 800bab0:	e8df f001 	tbb	[pc, r1]
 800bab4:	3608363b 	.word	0x3608363b
 800bab8:	08080808 	.word	0x08080808
 800babc:	08080808 	.word	0x08080808
 800bac0:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bac4:	681a      	ldr	r2, [r3, #0]
 800bac6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800baca:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bacc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bace:	691b      	ldr	r3, [r3, #16]
 800bad0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800bad2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800bad4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bad6:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800bad8:	3b01      	subs	r3, #1
 800bada:	b29b      	uxth	r3, r3
 800badc:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bade:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800bae0:	1c51      	adds	r1, r2, #1
 800bae2:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bae4:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800bae6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800bae8:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800baea:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800baec:	3b01      	subs	r3, #1
 800baee:	b29b      	uxth	r3, r3
 800baf0:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800baf2:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800baf4:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800baf6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800bafa:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800bafc:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800bafe:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800bb00:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb04:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800bb08:	2b40      	cmp	r3, #64	; 0x40
 800bb0a:	f000 80f5 	beq.w	800bcf8 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb0e:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800bb10:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb12:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800bb16:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800bb18:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800bb1a:	f7ff facb 	bl	800b0b4 <HAL_I2C_MasterRxCpltCallback>
 800bb1e:	e499      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb20:	681a      	ldr	r2, [r3, #0]
 800bb22:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bb26:	601a      	str	r2, [r3, #0]
 800bb28:	e7d0      	b.n	800bacc <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb2a:	681a      	ldr	r2, [r3, #0]
 800bb2c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb30:	601a      	str	r2, [r3, #0]
 800bb32:	e7cb      	b.n	800bacc <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800bb34:	2810      	cmp	r0, #16
 800bb36:	d804      	bhi.n	800bb42 <HAL_I2C_EV_IRQHandler+0x74e>
 800bb38:	4a19      	ldr	r2, [pc, #100]	; (800bba0 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800bb3a:	40c2      	lsrs	r2, r0
 800bb3c:	07d2      	lsls	r2, r2, #31
 800bb3e:	f100 80c2 	bmi.w	800bcc6 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb42:	681a      	ldr	r2, [r3, #0]
 800bb44:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb48:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800bb4a:	681a      	ldr	r2, [r3, #0]
 800bb4c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bb50:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bb52:	685a      	ldr	r2, [r3, #4]
 800bb54:	0516      	lsls	r6, r2, #20
 800bb56:	d506      	bpl.n	800bb66 <HAL_I2C_EV_IRQHandler+0x772>
 800bb58:	2820      	cmp	r0, #32
 800bb5a:	f240 80bc 	bls.w	800bcd6 <HAL_I2C_EV_IRQHandler+0x8e2>
 800bb5e:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800bb62:	f000 80bd 	beq.w	800bce0 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb66:	2200      	movs	r2, #0
 800bb68:	9208      	str	r2, [sp, #32]
 800bb6a:	695a      	ldr	r2, [r3, #20]
 800bb6c:	9208      	str	r2, [sp, #32]
 800bb6e:	699b      	ldr	r3, [r3, #24]
 800bb70:	9308      	str	r3, [sp, #32]
 800bb72:	9b08      	ldr	r3, [sp, #32]
 800bb74:	e6c6      	b.n	800b904 <HAL_I2C_EV_IRQHandler+0x510>
 800bb76:	4a0b      	ldr	r2, [pc, #44]	; (800bba4 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800bb78:	3808      	subs	r0, #8
 800bb7a:	40c2      	lsrs	r2, r0
 800bb7c:	07d2      	lsls	r2, r2, #31
 800bb7e:	f57f af13 	bpl.w	800b9a8 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800bb82:	685a      	ldr	r2, [r3, #4]
 800bb84:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bb88:	605a      	str	r2, [r3, #4]
 800bb8a:	e70d      	b.n	800b9a8 <HAL_I2C_EV_IRQHandler+0x5b4>
 800bb8c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800bb90:	f47f af0a 	bne.w	800b9a8 <HAL_I2C_EV_IRQHandler+0x5b4>
 800bb94:	e7f5      	b.n	800bb82 <HAL_I2C_EV_IRQHandler+0x78e>
 800bb96:	bf00      	nop
 800bb98:	0800b195 	.word	0x0800b195
 800bb9c:	ffff0000 	.word	0xffff0000
 800bba0:	00010014 	.word	0x00010014
 800bba4:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bba8:	6859      	ldr	r1, [r3, #4]
 800bbaa:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bbae:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bbb0:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800bbb2:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800bbb4:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bbb6:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800bbba:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800bbbc:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800bbbe:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bbc2:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbc6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bbca:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800bbcc:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bbce:	f47f af1c 	bne.w	800ba0a <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800bbd2:	f7ff fa79 	bl	800b0c8 <HAL_I2C_MemTxCpltCallback>
 800bbd6:	e43d      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800bbd8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800bbda:	2802      	cmp	r0, #2
 800bbdc:	f43f af60 	beq.w	800baa0 <HAL_I2C_EV_IRQHandler+0x6ac>
 800bbe0:	2a01      	cmp	r2, #1
 800bbe2:	f63f af5d 	bhi.w	800baa0 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800bbe6:	4a62      	ldr	r2, [pc, #392]	; (800bd70 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800bbe8:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800bbea:	6812      	ldr	r2, [r2, #0]
 800bbec:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800bbf0:	fbb2 f2f0 	udiv	r2, r2, r0
 800bbf4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800bbf8:	920b      	str	r2, [sp, #44]	; 0x2c
 800bbfa:	e004      	b.n	800bc06 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800bbfc:	681a      	ldr	r2, [r3, #0]
 800bbfe:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800bc02:	f000 8092 	beq.w	800bd2a <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800bc06:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc08:	3a01      	subs	r2, #1
 800bc0a:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800bc0c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bc0e:	2900      	cmp	r1, #0
 800bc10:	d1f4      	bne.n	800bbfc <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc12:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bc14:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bc16:	f042 0220 	orr.w	r2, r2, #32
 800bc1a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bc1c:	685a      	ldr	r2, [r3, #4]
 800bc1e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bc22:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bc24:	691b      	ldr	r3, [r3, #16]
 800bc26:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bc28:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bc2a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800bc2c:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800bc2e:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800bc30:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800bc32:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800bc34:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800bc36:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800bc38:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800bc3c:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800bc3e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800bc42:	f7ff faa3 	bl	800b18c <HAL_I2C_ErrorCallback>
 800bc46:	e405      	b.n	800b454 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800bc48:	2d08      	cmp	r5, #8
 800bc4a:	d0ad      	beq.n	800bba8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bc4c:	2d20      	cmp	r5, #32
 800bc4e:	d0ab      	beq.n	800bba8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800bc50:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800bc54:	d0a8      	beq.n	800bba8 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bc56:	685a      	ldr	r2, [r3, #4]
 800bc58:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bc5c:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bc5e:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bc60:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800bc62:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bc64:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bc66:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bc6a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800bc6c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bc70:	f7ff fa1e 	bl	800b0b0 <HAL_I2C_MasterTxCpltCallback>
 800bc74:	f7ff bbee 	b.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800bc78:	2801      	cmp	r0, #1
 800bc7a:	f43f af05 	beq.w	800ba88 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc7e:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bc80:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc82:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bc86:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bc88:	9107      	str	r1, [sp, #28]
 800bc8a:	695a      	ldr	r2, [r3, #20]
 800bc8c:	9207      	str	r2, [sp, #28]
 800bc8e:	699a      	ldr	r2, [r3, #24]
 800bc90:	9207      	str	r2, [sp, #28]
 800bc92:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bc94:	681a      	ldr	r2, [r3, #0]
 800bc96:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bc9a:	601a      	str	r2, [r3, #0]
 800bc9c:	e632      	b.n	800b904 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bc9e:	681a      	ldr	r2, [r3, #0]
 800bca0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bca4:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bca6:	685a      	ldr	r2, [r3, #4]
 800bca8:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800bcac:	d02d      	beq.n	800bd0a <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bcae:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bcb0:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bcb2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bcb6:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bcb8:	9104      	str	r1, [sp, #16]
 800bcba:	695a      	ldr	r2, [r3, #20]
 800bcbc:	9204      	str	r2, [sp, #16]
 800bcbe:	699b      	ldr	r3, [r3, #24]
 800bcc0:	9304      	str	r3, [sp, #16]
 800bcc2:	9b04      	ldr	r3, [sp, #16]
 800bcc4:	e61e      	b.n	800b904 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bcc6:	681a      	ldr	r2, [r3, #0]
 800bcc8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bccc:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bcce:	685a      	ldr	r2, [r3, #4]
 800bcd0:	0515      	lsls	r5, r2, #20
 800bcd2:	f57f af48 	bpl.w	800bb66 <HAL_I2C_EV_IRQHandler+0x772>
 800bcd6:	2807      	cmp	r0, #7
 800bcd8:	d807      	bhi.n	800bcea <HAL_I2C_EV_IRQHandler+0x8f6>
 800bcda:	2801      	cmp	r0, #1
 800bcdc:	f47f af43 	bne.w	800bb66 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800bce0:	685a      	ldr	r2, [r3, #4]
 800bce2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bce6:	605a      	str	r2, [r3, #4]
 800bce8:	e73d      	b.n	800bb66 <HAL_I2C_EV_IRQHandler+0x772>
 800bcea:	4a22      	ldr	r2, [pc, #136]	; (800bd74 <HAL_I2C_EV_IRQHandler+0x980>)
 800bcec:	3808      	subs	r0, #8
 800bcee:	40c2      	lsrs	r2, r0
 800bcf0:	07d0      	lsls	r0, r2, #31
 800bcf2:	f57f af38 	bpl.w	800bb66 <HAL_I2C_EV_IRQHandler+0x772>
 800bcf6:	e7f3      	b.n	800bce0 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bcf8:	2300      	movs	r3, #0
 800bcfa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bcfe:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800bd00:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bd02:	f7ff fa41 	bl	800b188 <HAL_I2C_MemRxCpltCallback>
 800bd06:	f7ff bba5 	b.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bd0a:	9205      	str	r2, [sp, #20]
 800bd0c:	695a      	ldr	r2, [r3, #20]
 800bd0e:	9205      	str	r2, [sp, #20]
 800bd10:	699a      	ldr	r2, [r3, #24]
 800bd12:	9205      	str	r2, [sp, #20]
 800bd14:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bd16:	681a      	ldr	r2, [r3, #0]
 800bd18:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bd1c:	601a      	str	r2, [r3, #0]
 800bd1e:	e5f1      	b.n	800b904 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd20:	681a      	ldr	r2, [r3, #0]
 800bd22:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bd26:	601a      	str	r2, [r3, #0]
 800bd28:	e6b2      	b.n	800ba90 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd2a:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bd2c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bd2e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800bd32:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bd34:	6859      	ldr	r1, [r3, #4]
 800bd36:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bd3a:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bd3c:	691b      	ldr	r3, [r3, #16]
 800bd3e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bd40:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bd42:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800bd44:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800bd46:	b29b      	uxth	r3, r3
 800bd48:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800bd4a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800bd4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bd50:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800bd54:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bd56:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800bd58:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bd5a:	f47f aed9 	bne.w	800bb10 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bd5e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bd62:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800bd64:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bd66:	f7ff fa0f 	bl	800b188 <HAL_I2C_MemRxCpltCallback>
 800bd6a:	f7ff bb73 	b.w	800b454 <HAL_I2C_EV_IRQHandler+0x60>
 800bd6e:	bf00      	nop
 800bd70:	20000078 	.word	0x20000078
 800bd74:	01000101 	.word	0x01000101

0800bd78 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bd78:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bd7c:	2a20      	cmp	r2, #32
{
 800bd7e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800bd80:	fa5f fc82 	uxtb.w	ip, r2
 800bd84:	d001      	beq.n	800bd8a <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bd86:	2002      	movs	r0, #2
  }
}
 800bd88:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800bd8a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bd8c:	2024      	movs	r0, #36	; 0x24
 800bd8e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bd92:	6810      	ldr	r0, [r2, #0]
 800bd94:	f020 0001 	bic.w	r0, r0, #1
 800bd98:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800bd9a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bd9c:	f020 0010 	bic.w	r0, r0, #16
 800bda0:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800bda2:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bda4:	4301      	orrs	r1, r0
 800bda6:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bda8:	6811      	ldr	r1, [r2, #0]
 800bdaa:	f041 0101 	orr.w	r1, r1, #1
 800bdae:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800bdb0:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800bdb2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bdb6:	4770      	bx	lr

0800bdb8 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bdb8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bdbc:	2a20      	cmp	r2, #32
 800bdbe:	d001      	beq.n	800bdc4 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bdc0:	2002      	movs	r0, #2
  }
}
 800bdc2:	4770      	bx	lr
{
 800bdc4:	b410      	push	{r4}
 800bdc6:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800bdca:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bdcc:	2224      	movs	r2, #36	; 0x24
 800bdce:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bdd2:	6822      	ldr	r2, [r4, #0]
 800bdd4:	f022 0201 	bic.w	r2, r2, #1
 800bdd8:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800bdda:	4603      	mov	r3, r0
 800bddc:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800bdde:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800bde2:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800bde4:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800bde6:	b289      	uxth	r1, r1
 800bde8:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bdea:	6822      	ldr	r2, [r4, #0]
 800bdec:	f042 0201 	orr.w	r2, r2, #1
 800bdf0:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800bdf2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bdf6:	2000      	movs	r0, #0
}
 800bdf8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bdfc:	4770      	bx	lr
 800bdfe:	bf00      	nop

0800be00 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800be00:	2800      	cmp	r0, #0
 800be02:	d069      	beq.n	800bed8 <HAL_LTDC_Init+0xd8>
{
 800be04:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800be06:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800be0a:	4604      	mov	r4, r0
 800be0c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800be10:	2b00      	cmp	r3, #0
 800be12:	d05c      	beq.n	800bece <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800be14:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800be16:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800be18:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800be1c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800be20:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800be22:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800be24:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800be28:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800be2c:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800be2e:	6999      	ldr	r1, [r3, #24]
 800be30:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800be32:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800be34:	430a      	orrs	r2, r1
 800be36:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800be38:	689a      	ldr	r2, [r3, #8]
 800be3a:	4928      	ldr	r1, [pc, #160]	; (800bedc <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800be3c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800be3e:	400a      	ands	r2, r1
 800be40:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800be42:	689a      	ldr	r2, [r3, #8]
 800be44:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800be48:	69a0      	ldr	r0, [r4, #24]
 800be4a:	4302      	orrs	r2, r0
 800be4c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800be4e:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800be50:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800be52:	400a      	ands	r2, r1
 800be54:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800be56:	68da      	ldr	r2, [r3, #12]
 800be58:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800be5c:	6a20      	ldr	r0, [r4, #32]
 800be5e:	4302      	orrs	r2, r0
 800be60:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800be62:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800be64:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800be66:	400a      	ands	r2, r1
 800be68:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800be6a:	691a      	ldr	r2, [r3, #16]
 800be6c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800be70:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800be72:	4302      	orrs	r2, r0
 800be74:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800be76:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800be78:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800be7a:	400a      	ands	r2, r1
 800be7c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800be7e:	695a      	ldr	r2, [r3, #20]
 800be80:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800be82:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800be86:	430a      	orrs	r2, r1
 800be88:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800be8a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800be8c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800be90:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800be94:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800be98:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800be9a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800be9c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bea0:	432a      	orrs	r2, r5
 800bea2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bea6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800beaa:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800beac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800beae:	f042 0206 	orr.w	r2, r2, #6
 800beb2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800beb4:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800beb6:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800beba:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bebc:	ea42 020c 	orr.w	r2, r2, ip
 800bec0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bec2:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bec6:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800beca:	4608      	mov	r0, r1
}
 800becc:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bece:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bed2:	f7f6 fd47 	bl	8002964 <HAL_LTDC_MspInit>
 800bed6:	e79d      	b.n	800be14 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bed8:	2001      	movs	r0, #1
}
 800beda:	4770      	bx	lr
 800bedc:	f000f800 	.word	0xf000f800

0800bee0 <HAL_LTDC_ErrorCallback>:
 800bee0:	4770      	bx	lr
 800bee2:	bf00      	nop

0800bee4 <HAL_LTDC_ReloadEventCallback>:
 800bee4:	4770      	bx	lr
 800bee6:	bf00      	nop

0800bee8 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bee8:	6803      	ldr	r3, [r0, #0]
{
 800beea:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800beec:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800beee:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bef0:	076a      	lsls	r2, r5, #29
{
 800bef2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bef4:	d501      	bpl.n	800befa <HAL_LTDC_IRQHandler+0x12>
 800bef6:	0771      	lsls	r1, r6, #29
 800bef8:	d41d      	bmi.n	800bf36 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800befa:	07aa      	lsls	r2, r5, #30
 800befc:	d501      	bpl.n	800bf02 <HAL_LTDC_IRQHandler+0x1a>
 800befe:	07b3      	lsls	r3, r6, #30
 800bf00:	d42d      	bmi.n	800bf5e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bf02:	07e8      	lsls	r0, r5, #31
 800bf04:	d501      	bpl.n	800bf0a <HAL_LTDC_IRQHandler+0x22>
 800bf06:	07f1      	lsls	r1, r6, #31
 800bf08:	d440      	bmi.n	800bf8c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bf0a:	072a      	lsls	r2, r5, #28
 800bf0c:	d501      	bpl.n	800bf12 <HAL_LTDC_IRQHandler+0x2a>
 800bf0e:	0733      	lsls	r3, r6, #28
 800bf10:	d400      	bmi.n	800bf14 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bf12:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bf14:	6823      	ldr	r3, [r4, #0]
 800bf16:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bf18:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bf1a:	f022 0208 	bic.w	r2, r2, #8
 800bf1e:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bf20:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bf22:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bf24:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bf26:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bf2a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bf2e:	4620      	mov	r0, r4
 800bf30:	f7ff ffd8 	bl	800bee4 <HAL_LTDC_ReloadEventCallback>
}
 800bf34:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bf36:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bf38:	f022 0204 	bic.w	r2, r2, #4
 800bf3c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bf3e:	2204      	movs	r2, #4
 800bf40:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bf42:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bf46:	f043 0301 	orr.w	r3, r3, #1
 800bf4a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bf4e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bf50:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bf54:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bf58:	f7ff ffc2 	bl	800bee0 <HAL_LTDC_ErrorCallback>
 800bf5c:	e7cd      	b.n	800befa <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bf5e:	6823      	ldr	r3, [r4, #0]
 800bf60:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bf62:	f022 0202 	bic.w	r2, r2, #2
 800bf66:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bf68:	2202      	movs	r2, #2
 800bf6a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bf6c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bf70:	f043 0302 	orr.w	r3, r3, #2
 800bf74:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bf78:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bf7a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bf7c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bf80:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bf84:	4620      	mov	r0, r4
 800bf86:	f7ff ffab 	bl	800bee0 <HAL_LTDC_ErrorCallback>
 800bf8a:	e7ba      	b.n	800bf02 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bf8c:	6823      	ldr	r3, [r4, #0]
 800bf8e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bf90:	f022 0201 	bic.w	r2, r2, #1
 800bf94:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bf96:	2201      	movs	r2, #1
 800bf98:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bf9a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bf9c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bfa0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bfa4:	4620      	mov	r0, r4
 800bfa6:	f7f5 fcdf 	bl	8001968 <HAL_LTDC_LineEventCallback>
 800bfaa:	e7ae      	b.n	800bf0a <HAL_LTDC_IRQHandler+0x22>

0800bfac <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bfac:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bfb0:	2b01      	cmp	r3, #1
 800bfb2:	f000 80c2 	beq.w	800c13a <HAL_LTDC_ConfigLayer+0x18e>
{
 800bfb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bfba:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bfbe:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bfc2:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bfc6:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bfc8:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bfca:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bfce:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bfd2:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bfd6:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bfda:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bfde:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bfe2:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bfe4:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bfe8:	460c      	mov	r4, r1
 800bfea:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bfec:	9301      	str	r3, [sp, #4]
 800bfee:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bff0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bff2:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bff6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bffa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bffc:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bffe:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c002:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c004:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800c008:	6823      	ldr	r3, [r4, #0]
 800c00a:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c00e:	9b01      	ldr	r3, [sp, #4]
 800c010:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c014:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c018:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c01a:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800c01c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c020:	1c51      	adds	r1, r2, #1
 800c022:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800c026:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c028:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c02a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c02e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c032:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800c036:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800c03a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800c03e:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c042:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c046:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c048:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c04a:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800c04e:	3301      	adds	r3, #1
 800c050:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800c054:	4403      	add	r3, r0
 800c056:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c05a:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c05e:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c062:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c064:	f023 0307 	bic.w	r3, r3, #7
 800c068:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c06c:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c070:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c074:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800c078:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800c07c:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c080:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800c084:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800c088:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800c08c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c090:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800c094:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800c098:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800c09c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800c0a0:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800c0a4:	696b      	ldr	r3, [r5, #20]
 800c0a6:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800c0aa:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800c0ae:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800c0b2:	f023 0307 	bic.w	r3, r3, #7
 800c0b6:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800c0ba:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800c0be:	4303      	orrs	r3, r0
 800c0c0:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c0c4:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c0c8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c0ca:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c0ce:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c0d2:	bb69      	cbnz	r1, 800c130 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800c0d4:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c0d6:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c0d8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c0da:	fb03 f707 	mul.w	r7, r3, r7
 800c0de:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c0e0:	fb02 f303 	mul.w	r3, r2, r3
 800c0e4:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c0e8:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c0ec:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c0ee:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800c0f2:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c0f6:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800c0fa:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800c0fe:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800c102:	f023 0307 	bic.w	r3, r3, #7
 800c106:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c10a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c10e:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c112:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c114:	4313      	orrs	r3, r2
 800c116:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800c11a:	2300      	movs	r3, #0
  return HAL_OK;
 800c11c:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c11e:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800c122:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c126:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800c12a:	b003      	add	sp, #12
 800c12c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800c130:	3901      	subs	r1, #1
 800c132:	2906      	cmp	r1, #6
 800c134:	d903      	bls.n	800c13e <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c136:	2301      	movs	r3, #1
 800c138:	e7cd      	b.n	800c0d6 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800c13a:	2002      	movs	r0, #2
}
 800c13c:	4770      	bx	lr
 800c13e:	4b02      	ldr	r3, [pc, #8]	; (800c148 <HAL_LTDC_ConfigLayer+0x19c>)
 800c140:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800c144:	e7c7      	b.n	800c0d6 <HAL_LTDC_ConfigLayer+0x12a>
 800c146:	bf00      	nop
 800c148:	0802ec50 	.word	0x0802ec50

0800c14c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800c14c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800c150:	2b01      	cmp	r3, #1
 800c152:	d019      	beq.n	800c188 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c154:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c156:	2302      	movs	r3, #2
{
 800c158:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c15a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c15e:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c160:	4c0a      	ldr	r4, [pc, #40]	; (800c18c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c162:	f023 0301 	bic.w	r3, r3, #1
 800c166:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c168:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c16a:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800c16c:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c16e:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800c172:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c176:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800c178:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800c17c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800c180:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800c184:	4618      	mov	r0, r3
}
 800c186:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800c188:	2002      	movs	r0, #2
}
 800c18a:	4770      	bx	lr
 800c18c:	40016800 	.word	0x40016800

0800c190 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c190:	2800      	cmp	r0, #0
 800c192:	f000 81a2 	beq.w	800c4da <HAL_RCC_OscConfig+0x34a>
{
 800c196:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c19a:	6803      	ldr	r3, [r0, #0]
 800c19c:	07dd      	lsls	r5, r3, #31
{
 800c19e:	b082      	sub	sp, #8
 800c1a0:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c1a2:	d52f      	bpl.n	800c204 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c1a4:	499e      	ldr	r1, [pc, #632]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c1a6:	688a      	ldr	r2, [r1, #8]
 800c1a8:	f002 020c 	and.w	r2, r2, #12
 800c1ac:	2a04      	cmp	r2, #4
 800c1ae:	f000 80ed 	beq.w	800c38c <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c1b2:	688a      	ldr	r2, [r1, #8]
 800c1b4:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c1b8:	2a08      	cmp	r2, #8
 800c1ba:	f000 80e3 	beq.w	800c384 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c1be:	6863      	ldr	r3, [r4, #4]
 800c1c0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c1c4:	f000 80ec 	beq.w	800c3a0 <HAL_RCC_OscConfig+0x210>
 800c1c8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800c1cc:	f000 8175 	beq.w	800c4ba <HAL_RCC_OscConfig+0x32a>
 800c1d0:	4d93      	ldr	r5, [pc, #588]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c1d2:	682a      	ldr	r2, [r5, #0]
 800c1d4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800c1d8:	602a      	str	r2, [r5, #0]
 800c1da:	682a      	ldr	r2, [r5, #0]
 800c1dc:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800c1e0:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c1e2:	2b00      	cmp	r3, #0
 800c1e4:	f040 80e1 	bne.w	800c3aa <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c1e8:	f7fd ffb0 	bl	800a14c <HAL_GetTick>
 800c1ec:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c1ee:	e005      	b.n	800c1fc <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c1f0:	f7fd ffac 	bl	800a14c <HAL_GetTick>
 800c1f4:	1b80      	subs	r0, r0, r6
 800c1f6:	2864      	cmp	r0, #100	; 0x64
 800c1f8:	f200 8101 	bhi.w	800c3fe <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c1fc:	682b      	ldr	r3, [r5, #0]
 800c1fe:	039b      	lsls	r3, r3, #14
 800c200:	d4f6      	bmi.n	800c1f0 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c202:	6823      	ldr	r3, [r4, #0]
 800c204:	079f      	lsls	r7, r3, #30
 800c206:	d528      	bpl.n	800c25a <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c208:	4a85      	ldr	r2, [pc, #532]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c20a:	6891      	ldr	r1, [r2, #8]
 800c20c:	f011 0f0c 	tst.w	r1, #12
 800c210:	f000 8090 	beq.w	800c334 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c214:	6891      	ldr	r1, [r2, #8]
 800c216:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c21a:	2908      	cmp	r1, #8
 800c21c:	f000 8086 	beq.w	800c32c <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c220:	68e3      	ldr	r3, [r4, #12]
 800c222:	2b00      	cmp	r3, #0
 800c224:	f000 810e 	beq.w	800c444 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800c228:	4b7e      	ldr	r3, [pc, #504]	; (800c424 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c22a:	4e7d      	ldr	r6, [pc, #500]	; (800c420 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800c22c:	2201      	movs	r2, #1
 800c22e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c230:	f7fd ff8c 	bl	800a14c <HAL_GetTick>
 800c234:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c236:	e005      	b.n	800c244 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c238:	f7fd ff88 	bl	800a14c <HAL_GetTick>
 800c23c:	1b40      	subs	r0, r0, r5
 800c23e:	2802      	cmp	r0, #2
 800c240:	f200 80dd 	bhi.w	800c3fe <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c244:	6833      	ldr	r3, [r6, #0]
 800c246:	0798      	lsls	r0, r3, #30
 800c248:	d5f6      	bpl.n	800c238 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c24a:	6833      	ldr	r3, [r6, #0]
 800c24c:	6922      	ldr	r2, [r4, #16]
 800c24e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c252:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c256:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c258:	6823      	ldr	r3, [r4, #0]
 800c25a:	071a      	lsls	r2, r3, #28
 800c25c:	d451      	bmi.n	800c302 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c25e:	0758      	lsls	r0, r3, #29
 800c260:	d52f      	bpl.n	800c2c2 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c262:	4a6f      	ldr	r2, [pc, #444]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c264:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c266:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800c26a:	d07f      	beq.n	800c36c <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800c26c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c26e:	4e6e      	ldr	r6, [pc, #440]	; (800c428 <HAL_RCC_OscConfig+0x298>)
 800c270:	6833      	ldr	r3, [r6, #0]
 800c272:	05d9      	lsls	r1, r3, #23
 800c274:	f140 80b3 	bpl.w	800c3de <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c278:	68a3      	ldr	r3, [r4, #8]
 800c27a:	2b01      	cmp	r3, #1
 800c27c:	f000 80c3 	beq.w	800c406 <HAL_RCC_OscConfig+0x276>
 800c280:	2b05      	cmp	r3, #5
 800c282:	f000 812c 	beq.w	800c4de <HAL_RCC_OscConfig+0x34e>
 800c286:	4e66      	ldr	r6, [pc, #408]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c288:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c28a:	f022 0201 	bic.w	r2, r2, #1
 800c28e:	6732      	str	r2, [r6, #112]	; 0x70
 800c290:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c292:	f022 0204 	bic.w	r2, r2, #4
 800c296:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c298:	2b00      	cmp	r3, #0
 800c29a:	f040 80b9 	bne.w	800c410 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800c29e:	f7fd ff55 	bl	800a14c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c2a2:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c2a6:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c2a8:	e005      	b.n	800c2b6 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c2aa:	f7fd ff4f 	bl	800a14c <HAL_GetTick>
 800c2ae:	1bc0      	subs	r0, r0, r7
 800c2b0:	4540      	cmp	r0, r8
 800c2b2:	f200 80a4 	bhi.w	800c3fe <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c2b6:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c2b8:	0798      	lsls	r0, r3, #30
 800c2ba:	d4f6      	bmi.n	800c2aa <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800c2bc:	2d00      	cmp	r5, #0
 800c2be:	f040 8106 	bne.w	800c4ce <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c2c2:	69a0      	ldr	r0, [r4, #24]
 800c2c4:	b1c8      	cbz	r0, 800c2fa <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c2c6:	4d56      	ldr	r5, [pc, #344]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c2c8:	68ab      	ldr	r3, [r5, #8]
 800c2ca:	f003 030c 	and.w	r3, r3, #12
 800c2ce:	2b08      	cmp	r3, #8
 800c2d0:	f000 80c9 	beq.w	800c466 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800c2d4:	4b53      	ldr	r3, [pc, #332]	; (800c424 <HAL_RCC_OscConfig+0x294>)
 800c2d6:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c2d8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c2da:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c2dc:	f000 8109 	beq.w	800c4f2 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c2e0:	f7fd ff34 	bl	800a14c <HAL_GetTick>
 800c2e4:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c2e6:	e005      	b.n	800c2f4 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c2e8:	f7fd ff30 	bl	800a14c <HAL_GetTick>
 800c2ec:	1b00      	subs	r0, r0, r4
 800c2ee:	2802      	cmp	r0, #2
 800c2f0:	f200 8085 	bhi.w	800c3fe <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c2f4:	682b      	ldr	r3, [r5, #0]
 800c2f6:	019b      	lsls	r3, r3, #6
 800c2f8:	d4f6      	bmi.n	800c2e8 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c2fa:	2000      	movs	r0, #0
}
 800c2fc:	b002      	add	sp, #8
 800c2fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c302:	6963      	ldr	r3, [r4, #20]
 800c304:	b30b      	cbz	r3, 800c34a <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800c306:	4b47      	ldr	r3, [pc, #284]	; (800c424 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c308:	4e45      	ldr	r6, [pc, #276]	; (800c420 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800c30a:	2201      	movs	r2, #1
 800c30c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c310:	f7fd ff1c 	bl	800a14c <HAL_GetTick>
 800c314:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c316:	e004      	b.n	800c322 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c318:	f7fd ff18 	bl	800a14c <HAL_GetTick>
 800c31c:	1b40      	subs	r0, r0, r5
 800c31e:	2802      	cmp	r0, #2
 800c320:	d86d      	bhi.n	800c3fe <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c322:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c324:	079b      	lsls	r3, r3, #30
 800c326:	d5f7      	bpl.n	800c318 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c328:	6823      	ldr	r3, [r4, #0]
 800c32a:	e798      	b.n	800c25e <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c32c:	6852      	ldr	r2, [r2, #4]
 800c32e:	0256      	lsls	r6, r2, #9
 800c330:	f53f af76 	bmi.w	800c220 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c334:	4a3a      	ldr	r2, [pc, #232]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c336:	6812      	ldr	r2, [r2, #0]
 800c338:	0795      	lsls	r5, r2, #30
 800c33a:	d544      	bpl.n	800c3c6 <HAL_RCC_OscConfig+0x236>
 800c33c:	68e2      	ldr	r2, [r4, #12]
 800c33e:	2a01      	cmp	r2, #1
 800c340:	d041      	beq.n	800c3c6 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800c342:	2001      	movs	r0, #1
}
 800c344:	b002      	add	sp, #8
 800c346:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800c34a:	4a36      	ldr	r2, [pc, #216]	; (800c424 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c34c:	4e34      	ldr	r6, [pc, #208]	; (800c420 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800c34e:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c352:	f7fd fefb 	bl	800a14c <HAL_GetTick>
 800c356:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c358:	e004      	b.n	800c364 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c35a:	f7fd fef7 	bl	800a14c <HAL_GetTick>
 800c35e:	1b40      	subs	r0, r0, r5
 800c360:	2802      	cmp	r0, #2
 800c362:	d84c      	bhi.n	800c3fe <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c364:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c366:	079f      	lsls	r7, r3, #30
 800c368:	d4f7      	bmi.n	800c35a <HAL_RCC_OscConfig+0x1ca>
 800c36a:	e7dd      	b.n	800c328 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c36c:	9301      	str	r3, [sp, #4]
 800c36e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c370:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c374:	6413      	str	r3, [r2, #64]	; 0x40
 800c376:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c378:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c37c:	9301      	str	r3, [sp, #4]
 800c37e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c380:	2501      	movs	r5, #1
 800c382:	e774      	b.n	800c26e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c384:	684a      	ldr	r2, [r1, #4]
 800c386:	0250      	lsls	r0, r2, #9
 800c388:	f57f af19 	bpl.w	800c1be <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c38c:	4a24      	ldr	r2, [pc, #144]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c38e:	6812      	ldr	r2, [r2, #0]
 800c390:	0391      	lsls	r1, r2, #14
 800c392:	f57f af37 	bpl.w	800c204 <HAL_RCC_OscConfig+0x74>
 800c396:	6862      	ldr	r2, [r4, #4]
 800c398:	2a00      	cmp	r2, #0
 800c39a:	f47f af33 	bne.w	800c204 <HAL_RCC_OscConfig+0x74>
 800c39e:	e7d0      	b.n	800c342 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c3a0:	4a1f      	ldr	r2, [pc, #124]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c3a2:	6813      	ldr	r3, [r2, #0]
 800c3a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c3a8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c3aa:	f7fd fecf 	bl	800a14c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c3ae:	4e1c      	ldr	r6, [pc, #112]	; (800c420 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800c3b0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c3b2:	e004      	b.n	800c3be <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c3b4:	f7fd feca 	bl	800a14c <HAL_GetTick>
 800c3b8:	1b40      	subs	r0, r0, r5
 800c3ba:	2864      	cmp	r0, #100	; 0x64
 800c3bc:	d81f      	bhi.n	800c3fe <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c3be:	6833      	ldr	r3, [r6, #0]
 800c3c0:	039a      	lsls	r2, r3, #14
 800c3c2:	d5f7      	bpl.n	800c3b4 <HAL_RCC_OscConfig+0x224>
 800c3c4:	e71d      	b.n	800c202 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c3c6:	4916      	ldr	r1, [pc, #88]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c3c8:	6920      	ldr	r0, [r4, #16]
 800c3ca:	680a      	ldr	r2, [r1, #0]
 800c3cc:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c3d0:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800c3d4:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c3d6:	071a      	lsls	r2, r3, #28
 800c3d8:	f57f af41 	bpl.w	800c25e <HAL_RCC_OscConfig+0xce>
 800c3dc:	e791      	b.n	800c302 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c3de:	6833      	ldr	r3, [r6, #0]
 800c3e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c3e4:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c3e6:	f7fd feb1 	bl	800a14c <HAL_GetTick>
 800c3ea:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c3ec:	6833      	ldr	r3, [r6, #0]
 800c3ee:	05da      	lsls	r2, r3, #23
 800c3f0:	f53f af42 	bmi.w	800c278 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c3f4:	f7fd feaa 	bl	800a14c <HAL_GetTick>
 800c3f8:	1bc0      	subs	r0, r0, r7
 800c3fa:	2802      	cmp	r0, #2
 800c3fc:	d9f6      	bls.n	800c3ec <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c3fe:	2003      	movs	r0, #3
}
 800c400:	b002      	add	sp, #8
 800c402:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c406:	4a06      	ldr	r2, [pc, #24]	; (800c420 <HAL_RCC_OscConfig+0x290>)
 800c408:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c40a:	f043 0301 	orr.w	r3, r3, #1
 800c40e:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c410:	f7fd fe9c 	bl	800a14c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c414:	4f02      	ldr	r7, [pc, #8]	; (800c420 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c416:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c418:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c41c:	e00b      	b.n	800c436 <HAL_RCC_OscConfig+0x2a6>
 800c41e:	bf00      	nop
 800c420:	40023800 	.word	0x40023800
 800c424:	42470000 	.word	0x42470000
 800c428:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c42c:	f7fd fe8e 	bl	800a14c <HAL_GetTick>
 800c430:	1b80      	subs	r0, r0, r6
 800c432:	4540      	cmp	r0, r8
 800c434:	d8e3      	bhi.n	800c3fe <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c436:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c438:	079b      	lsls	r3, r3, #30
 800c43a:	d5f7      	bpl.n	800c42c <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c43c:	2d00      	cmp	r5, #0
 800c43e:	f43f af40 	beq.w	800c2c2 <HAL_RCC_OscConfig+0x132>
 800c442:	e044      	b.n	800c4ce <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c444:	4a42      	ldr	r2, [pc, #264]	; (800c550 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c446:	4e43      	ldr	r6, [pc, #268]	; (800c554 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c448:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c44a:	f7fd fe7f 	bl	800a14c <HAL_GetTick>
 800c44e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c450:	e004      	b.n	800c45c <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c452:	f7fd fe7b 	bl	800a14c <HAL_GetTick>
 800c456:	1b40      	subs	r0, r0, r5
 800c458:	2802      	cmp	r0, #2
 800c45a:	d8d0      	bhi.n	800c3fe <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c45c:	6833      	ldr	r3, [r6, #0]
 800c45e:	0799      	lsls	r1, r3, #30
 800c460:	d4f7      	bmi.n	800c452 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c462:	6823      	ldr	r3, [r4, #0]
 800c464:	e6f9      	b.n	800c25a <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c466:	2801      	cmp	r0, #1
 800c468:	f43f af48 	beq.w	800c2fc <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c46c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c46e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c470:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c474:	4291      	cmp	r1, r2
 800c476:	f47f af64 	bne.w	800c342 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c47a:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c47c:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c480:	4291      	cmp	r1, r2
 800c482:	f47f af5e 	bne.w	800c342 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c486:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c488:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c48c:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c48e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c492:	f47f af56 	bne.w	800c342 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c496:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c498:	0852      	lsrs	r2, r2, #1
 800c49a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c49e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c4a0:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c4a4:	f47f af4d 	bne.w	800c342 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c4a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c4aa:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c4ae:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c4b2:	bf14      	ite	ne
 800c4b4:	2001      	movne	r0, #1
 800c4b6:	2000      	moveq	r0, #0
 800c4b8:	e720      	b.n	800c2fc <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c4ba:	4b26      	ldr	r3, [pc, #152]	; (800c554 <HAL_RCC_OscConfig+0x3c4>)
 800c4bc:	681a      	ldr	r2, [r3, #0]
 800c4be:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c4c2:	601a      	str	r2, [r3, #0]
 800c4c4:	681a      	ldr	r2, [r3, #0]
 800c4c6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c4ca:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c4cc:	e76d      	b.n	800c3aa <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c4ce:	4a21      	ldr	r2, [pc, #132]	; (800c554 <HAL_RCC_OscConfig+0x3c4>)
 800c4d0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c4d2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c4d6:	6413      	str	r3, [r2, #64]	; 0x40
 800c4d8:	e6f3      	b.n	800c2c2 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c4da:	2001      	movs	r0, #1
}
 800c4dc:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c4de:	4b1d      	ldr	r3, [pc, #116]	; (800c554 <HAL_RCC_OscConfig+0x3c4>)
 800c4e0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c4e2:	f042 0204 	orr.w	r2, r2, #4
 800c4e6:	671a      	str	r2, [r3, #112]	; 0x70
 800c4e8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c4ea:	f042 0201 	orr.w	r2, r2, #1
 800c4ee:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c4f0:	e78e      	b.n	800c410 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c4f2:	f7fd fe2b 	bl	800a14c <HAL_GetTick>
 800c4f6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c4f8:	e005      	b.n	800c506 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c4fa:	f7fd fe27 	bl	800a14c <HAL_GetTick>
 800c4fe:	1b80      	subs	r0, r0, r6
 800c500:	2802      	cmp	r0, #2
 800c502:	f63f af7c 	bhi.w	800c3fe <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c506:	682b      	ldr	r3, [r5, #0]
 800c508:	0199      	lsls	r1, r3, #6
 800c50a:	d4f6      	bmi.n	800c4fa <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c50c:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c510:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c512:	430b      	orrs	r3, r1
 800c514:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c518:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c51c:	0852      	lsrs	r2, r2, #1
 800c51e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c522:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c524:	490a      	ldr	r1, [pc, #40]	; (800c550 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c526:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c52a:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c52c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c52e:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c530:	f7fd fe0c 	bl	800a14c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c534:	4d07      	ldr	r5, [pc, #28]	; (800c554 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c536:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c538:	e005      	b.n	800c546 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c53a:	f7fd fe07 	bl	800a14c <HAL_GetTick>
 800c53e:	1b00      	subs	r0, r0, r4
 800c540:	2802      	cmp	r0, #2
 800c542:	f63f af5c 	bhi.w	800c3fe <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c546:	682b      	ldr	r3, [r5, #0]
 800c548:	019a      	lsls	r2, r3, #6
 800c54a:	d5f6      	bpl.n	800c53a <HAL_RCC_OscConfig+0x3aa>
 800c54c:	e6d5      	b.n	800c2fa <HAL_RCC_OscConfig+0x16a>
 800c54e:	bf00      	nop
 800c550:	42470000 	.word	0x42470000
 800c554:	40023800 	.word	0x40023800

0800c558 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c558:	4916      	ldr	r1, [pc, #88]	; (800c5b4 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c55a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c55c:	688b      	ldr	r3, [r1, #8]
 800c55e:	f003 030c 	and.w	r3, r3, #12
 800c562:	2b04      	cmp	r3, #4
 800c564:	d01b      	beq.n	800c59e <HAL_RCC_GetSysClockFreq+0x46>
 800c566:	2b08      	cmp	r3, #8
 800c568:	d117      	bne.n	800c59a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c56a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c56c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c56e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c570:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c574:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c578:	d113      	bne.n	800c5a2 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c57a:	480f      	ldr	r0, [pc, #60]	; (800c5b8 <HAL_RCC_GetSysClockFreq+0x60>)
 800c57c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c580:	fba1 0100 	umull	r0, r1, r1, r0
 800c584:	f7f4 fb02 	bl	8000b8c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c588:	4b0a      	ldr	r3, [pc, #40]	; (800c5b4 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c58a:	685b      	ldr	r3, [r3, #4]
 800c58c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c590:	3301      	adds	r3, #1
 800c592:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c594:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c598:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c59a:	4807      	ldr	r0, [pc, #28]	; (800c5b8 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c59c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c59e:	4807      	ldr	r0, [pc, #28]	; (800c5bc <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c5a0:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c5a2:	4806      	ldr	r0, [pc, #24]	; (800c5bc <HAL_RCC_GetSysClockFreq+0x64>)
 800c5a4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c5a8:	2300      	movs	r3, #0
 800c5aa:	fba1 0100 	umull	r0, r1, r1, r0
 800c5ae:	f7f4 faed 	bl	8000b8c <__aeabi_uldivmod>
 800c5b2:	e7e9      	b.n	800c588 <HAL_RCC_GetSysClockFreq+0x30>
 800c5b4:	40023800 	.word	0x40023800
 800c5b8:	00f42400 	.word	0x00f42400
 800c5bc:	007a1200 	.word	0x007a1200

0800c5c0 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c5c0:	2800      	cmp	r0, #0
 800c5c2:	f000 8087 	beq.w	800c6d4 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c5c6:	4a48      	ldr	r2, [pc, #288]	; (800c6e8 <HAL_RCC_ClockConfig+0x128>)
 800c5c8:	6813      	ldr	r3, [r2, #0]
 800c5ca:	f003 030f 	and.w	r3, r3, #15
 800c5ce:	428b      	cmp	r3, r1
{
 800c5d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5d4:	460d      	mov	r5, r1
 800c5d6:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c5d8:	d209      	bcs.n	800c5ee <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c5da:	b2cb      	uxtb	r3, r1
 800c5dc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c5de:	6813      	ldr	r3, [r2, #0]
 800c5e0:	f003 030f 	and.w	r3, r3, #15
 800c5e4:	428b      	cmp	r3, r1
 800c5e6:	d002      	beq.n	800c5ee <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c5e8:	2001      	movs	r0, #1
}
 800c5ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c5ee:	6823      	ldr	r3, [r4, #0]
 800c5f0:	0798      	lsls	r0, r3, #30
 800c5f2:	d514      	bpl.n	800c61e <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c5f4:	0759      	lsls	r1, r3, #29
 800c5f6:	d504      	bpl.n	800c602 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c5f8:	493c      	ldr	r1, [pc, #240]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c5fa:	688a      	ldr	r2, [r1, #8]
 800c5fc:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c600:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c602:	071a      	lsls	r2, r3, #28
 800c604:	d504      	bpl.n	800c610 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c606:	4939      	ldr	r1, [pc, #228]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c608:	688a      	ldr	r2, [r1, #8]
 800c60a:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c60e:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c610:	4936      	ldr	r1, [pc, #216]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c612:	68a0      	ldr	r0, [r4, #8]
 800c614:	688a      	ldr	r2, [r1, #8]
 800c616:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c61a:	4302      	orrs	r2, r0
 800c61c:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c61e:	07df      	lsls	r7, r3, #31
 800c620:	d521      	bpl.n	800c666 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c622:	6862      	ldr	r2, [r4, #4]
 800c624:	2a01      	cmp	r2, #1
 800c626:	d057      	beq.n	800c6d8 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c628:	1e93      	subs	r3, r2, #2
 800c62a:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c62c:	4b2f      	ldr	r3, [pc, #188]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c62e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c630:	d94d      	bls.n	800c6ce <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c632:	0799      	lsls	r1, r3, #30
 800c634:	d5d8      	bpl.n	800c5e8 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c636:	4e2d      	ldr	r6, [pc, #180]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c638:	68b3      	ldr	r3, [r6, #8]
 800c63a:	f023 0303 	bic.w	r3, r3, #3
 800c63e:	4313      	orrs	r3, r2
 800c640:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c642:	f7fd fd83 	bl	800a14c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c646:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c64a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c64c:	e004      	b.n	800c658 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c64e:	f7fd fd7d 	bl	800a14c <HAL_GetTick>
 800c652:	1bc0      	subs	r0, r0, r7
 800c654:	4540      	cmp	r0, r8
 800c656:	d844      	bhi.n	800c6e2 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c658:	68b3      	ldr	r3, [r6, #8]
 800c65a:	6862      	ldr	r2, [r4, #4]
 800c65c:	f003 030c 	and.w	r3, r3, #12
 800c660:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c664:	d1f3      	bne.n	800c64e <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c666:	4a20      	ldr	r2, [pc, #128]	; (800c6e8 <HAL_RCC_ClockConfig+0x128>)
 800c668:	6813      	ldr	r3, [r2, #0]
 800c66a:	f003 030f 	and.w	r3, r3, #15
 800c66e:	42ab      	cmp	r3, r5
 800c670:	d906      	bls.n	800c680 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c672:	b2eb      	uxtb	r3, r5
 800c674:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c676:	6813      	ldr	r3, [r2, #0]
 800c678:	f003 030f 	and.w	r3, r3, #15
 800c67c:	42ab      	cmp	r3, r5
 800c67e:	d1b3      	bne.n	800c5e8 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c680:	6823      	ldr	r3, [r4, #0]
 800c682:	075a      	lsls	r2, r3, #29
 800c684:	d506      	bpl.n	800c694 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c686:	4919      	ldr	r1, [pc, #100]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c688:	68e0      	ldr	r0, [r4, #12]
 800c68a:	688a      	ldr	r2, [r1, #8]
 800c68c:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c690:	4302      	orrs	r2, r0
 800c692:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c694:	071b      	lsls	r3, r3, #28
 800c696:	d507      	bpl.n	800c6a8 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c698:	4a14      	ldr	r2, [pc, #80]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c69a:	6921      	ldr	r1, [r4, #16]
 800c69c:	6893      	ldr	r3, [r2, #8]
 800c69e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c6a2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c6a6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c6a8:	f7ff ff56 	bl	800c558 <HAL_RCC_GetSysClockFreq>
 800c6ac:	4a0f      	ldr	r2, [pc, #60]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c6ae:	4c10      	ldr	r4, [pc, #64]	; (800c6f0 <HAL_RCC_ClockConfig+0x130>)
 800c6b0:	6892      	ldr	r2, [r2, #8]
 800c6b2:	4910      	ldr	r1, [pc, #64]	; (800c6f4 <HAL_RCC_ClockConfig+0x134>)
 800c6b4:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c6b8:	4603      	mov	r3, r0
 800c6ba:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c6bc:	480e      	ldr	r0, [pc, #56]	; (800c6f8 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c6be:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c6c0:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c6c2:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c6c4:	f7f6 fb2a 	bl	8002d1c <HAL_InitTick>
  return HAL_OK;
 800c6c8:	2000      	movs	r0, #0
}
 800c6ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c6ce:	0198      	lsls	r0, r3, #6
 800c6d0:	d4b1      	bmi.n	800c636 <HAL_RCC_ClockConfig+0x76>
 800c6d2:	e789      	b.n	800c5e8 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c6d4:	2001      	movs	r0, #1
}
 800c6d6:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c6d8:	4b04      	ldr	r3, [pc, #16]	; (800c6ec <HAL_RCC_ClockConfig+0x12c>)
 800c6da:	681b      	ldr	r3, [r3, #0]
 800c6dc:	039e      	lsls	r6, r3, #14
 800c6de:	d4aa      	bmi.n	800c636 <HAL_RCC_ClockConfig+0x76>
 800c6e0:	e782      	b.n	800c5e8 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c6e2:	2003      	movs	r0, #3
 800c6e4:	e781      	b.n	800c5ea <HAL_RCC_ClockConfig+0x2a>
 800c6e6:	bf00      	nop
 800c6e8:	40023c00 	.word	0x40023c00
 800c6ec:	40023800 	.word	0x40023800
 800c6f0:	0802ec38 	.word	0x0802ec38
 800c6f4:	20000078 	.word	0x20000078
 800c6f8:	20000080 	.word	0x20000080

0800c6fc <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c6fc:	4b04      	ldr	r3, [pc, #16]	; (800c710 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c6fe:	4905      	ldr	r1, [pc, #20]	; (800c714 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c700:	689b      	ldr	r3, [r3, #8]
 800c702:	4a05      	ldr	r2, [pc, #20]	; (800c718 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c704:	6808      	ldr	r0, [r1, #0]
 800c706:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c70a:	5cd3      	ldrb	r3, [r2, r3]
}
 800c70c:	40d8      	lsrs	r0, r3
 800c70e:	4770      	bx	lr
 800c710:	40023800 	.word	0x40023800
 800c714:	20000078 	.word	0x20000078
 800c718:	0802ec48 	.word	0x0802ec48

0800c71c <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c71c:	4b0e      	ldr	r3, [pc, #56]	; (800c758 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c71e:	220f      	movs	r2, #15
 800c720:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c722:	689a      	ldr	r2, [r3, #8]
 800c724:	f002 0203 	and.w	r2, r2, #3
 800c728:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c72a:	689a      	ldr	r2, [r3, #8]
 800c72c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c730:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c732:	689a      	ldr	r2, [r3, #8]
 800c734:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c738:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c73a:	689b      	ldr	r3, [r3, #8]
 800c73c:	08db      	lsrs	r3, r3, #3
{
 800c73e:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c740:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c744:	4c05      	ldr	r4, [pc, #20]	; (800c75c <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c746:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c748:	6823      	ldr	r3, [r4, #0]
}
 800c74a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c74e:	f003 030f 	and.w	r3, r3, #15
 800c752:	600b      	str	r3, [r1, #0]
}
 800c754:	4770      	bx	lr
 800c756:	bf00      	nop
 800c758:	40023800 	.word	0x40023800
 800c75c:	40023c00 	.word	0x40023c00

0800c760 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c760:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c762:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c764:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c768:	b083      	sub	sp, #12
 800c76a:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c76c:	d111      	bne.n	800c792 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c76e:	f013 0f0c 	tst.w	r3, #12
 800c772:	d16f      	bne.n	800c854 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c774:	0698      	lsls	r0, r3, #26
 800c776:	f100 80c2 	bmi.w	800c8fe <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c77a:	f013 0310 	ands.w	r3, r3, #16
 800c77e:	f000 80bb 	beq.w	800c8f8 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c782:	4b89      	ldr	r3, [pc, #548]	; (800c9a8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c784:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c788:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c78c:	2000      	movs	r0, #0
}
 800c78e:	b003      	add	sp, #12
 800c790:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c792:	4b86      	ldr	r3, [pc, #536]	; (800c9ac <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c794:	4e86      	ldr	r6, [pc, #536]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c796:	2200      	movs	r2, #0
 800c798:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c79a:	f7fd fcd7 	bl	800a14c <HAL_GetTick>
 800c79e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c7a0:	e004      	b.n	800c7ac <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c7a2:	f7fd fcd3 	bl	800a14c <HAL_GetTick>
 800c7a6:	1b43      	subs	r3, r0, r5
 800c7a8:	2b02      	cmp	r3, #2
 800c7aa:	d850      	bhi.n	800c84e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c7ac:	6833      	ldr	r3, [r6, #0]
 800c7ae:	0118      	lsls	r0, r3, #4
 800c7b0:	d4f7      	bmi.n	800c7a2 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c7b2:	6823      	ldr	r3, [r4, #0]
 800c7b4:	07d9      	lsls	r1, r3, #31
 800c7b6:	d506      	bpl.n	800c7c6 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c7b8:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c7bc:	0712      	lsls	r2, r2, #28
 800c7be:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c7c2:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c7c6:	079a      	lsls	r2, r3, #30
 800c7c8:	d515      	bpl.n	800c7f6 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c7ca:	4979      	ldr	r1, [pc, #484]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c7cc:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c7ce:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c7d2:	6865      	ldr	r5, [r4, #4]
 800c7d4:	0612      	lsls	r2, r2, #24
 800c7d6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c7da:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c7de:	4302      	orrs	r2, r0
 800c7e0:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c7e4:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c7e8:	69e2      	ldr	r2, [r4, #28]
 800c7ea:	f020 001f 	bic.w	r0, r0, #31
 800c7ee:	3a01      	subs	r2, #1
 800c7f0:	4302      	orrs	r2, r0
 800c7f2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c7f6:	065b      	lsls	r3, r3, #25
 800c7f8:	d509      	bpl.n	800c80e <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c7fa:	1d20      	adds	r0, r4, #4
 800c7fc:	c80b      	ldmia	r0, {r0, r1, r3}
 800c7fe:	061b      	lsls	r3, r3, #24
 800c800:	4a6b      	ldr	r2, [pc, #428]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c802:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c806:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c80a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c80e:	4b67      	ldr	r3, [pc, #412]	; (800c9ac <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c810:	4e67      	ldr	r6, [pc, #412]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c812:	2201      	movs	r2, #1
 800c814:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c816:	f7fd fc99 	bl	800a14c <HAL_GetTick>
 800c81a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c81c:	e004      	b.n	800c828 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c81e:	f7fd fc95 	bl	800a14c <HAL_GetTick>
 800c822:	1b40      	subs	r0, r0, r5
 800c824:	2802      	cmp	r0, #2
 800c826:	d812      	bhi.n	800c84e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c828:	6833      	ldr	r3, [r6, #0]
 800c82a:	011f      	lsls	r7, r3, #4
 800c82c:	d5f7      	bpl.n	800c81e <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c82e:	6823      	ldr	r3, [r4, #0]
 800c830:	e79d      	b.n	800c76e <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c832:	f7fd fc8b 	bl	800a14c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c836:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c83a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c83c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c83e:	079b      	lsls	r3, r3, #30
 800c840:	f100 80a5 	bmi.w	800c98e <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c844:	f7fd fc82 	bl	800a14c <HAL_GetTick>
 800c848:	1b80      	subs	r0, r0, r6
 800c84a:	42b8      	cmp	r0, r7
 800c84c:	d9f6      	bls.n	800c83c <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c84e:	2003      	movs	r0, #3
}
 800c850:	b003      	add	sp, #12
 800c852:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c854:	4b55      	ldr	r3, [pc, #340]	; (800c9ac <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c856:	4e56      	ldr	r6, [pc, #344]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c858:	2200      	movs	r2, #0
 800c85a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c85c:	f7fd fc76 	bl	800a14c <HAL_GetTick>
 800c860:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c862:	e004      	b.n	800c86e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c864:	f7fd fc72 	bl	800a14c <HAL_GetTick>
 800c868:	1b43      	subs	r3, r0, r5
 800c86a:	2b02      	cmp	r3, #2
 800c86c:	d8ef      	bhi.n	800c84e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c86e:	6833      	ldr	r3, [r6, #0]
 800c870:	0098      	lsls	r0, r3, #2
 800c872:	d4f7      	bmi.n	800c864 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c874:	6822      	ldr	r2, [r4, #0]
 800c876:	0751      	lsls	r1, r2, #29
 800c878:	d515      	bpl.n	800c8a6 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c87a:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c87c:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c880:	6920      	ldr	r0, [r4, #16]
 800c882:	061b      	lsls	r3, r3, #24
 800c884:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c888:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c88c:	430b      	orrs	r3, r1
 800c88e:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c892:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c896:	6a21      	ldr	r1, [r4, #32]
 800c898:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c89c:	3901      	subs	r1, #1
 800c89e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c8a2:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c8a6:	0713      	lsls	r3, r2, #28
 800c8a8:	d514      	bpl.n	800c8d4 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c8aa:	4a41      	ldr	r2, [pc, #260]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c8ac:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c8ae:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c8b2:	6920      	ldr	r0, [r4, #16]
 800c8b4:	071b      	lsls	r3, r3, #28
 800c8b6:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c8ba:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c8be:	430b      	orrs	r3, r1
 800c8c0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c8c4:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c8c8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c8ca:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c8ce:	430b      	orrs	r3, r1
 800c8d0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c8d4:	4b35      	ldr	r3, [pc, #212]	; (800c9ac <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c8d6:	4e36      	ldr	r6, [pc, #216]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c8d8:	2201      	movs	r2, #1
 800c8da:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c8dc:	f7fd fc36 	bl	800a14c <HAL_GetTick>
 800c8e0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c8e2:	e004      	b.n	800c8ee <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c8e4:	f7fd fc32 	bl	800a14c <HAL_GetTick>
 800c8e8:	1b40      	subs	r0, r0, r5
 800c8ea:	2802      	cmp	r0, #2
 800c8ec:	d8af      	bhi.n	800c84e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c8ee:	6833      	ldr	r3, [r6, #0]
 800c8f0:	009f      	lsls	r7, r3, #2
 800c8f2:	d5f7      	bpl.n	800c8e4 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c8f4:	6823      	ldr	r3, [r4, #0]
 800c8f6:	e73d      	b.n	800c774 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c8f8:	4618      	mov	r0, r3
}
 800c8fa:	b003      	add	sp, #12
 800c8fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c8fe:	4b2c      	ldr	r3, [pc, #176]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c900:	4d2c      	ldr	r5, [pc, #176]	; (800c9b4 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c902:	2200      	movs	r2, #0
 800c904:	9201      	str	r2, [sp, #4]
 800c906:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c908:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c90c:	641a      	str	r2, [r3, #64]	; 0x40
 800c90e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c910:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c914:	9301      	str	r3, [sp, #4]
 800c916:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c918:	682b      	ldr	r3, [r5, #0]
 800c91a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c91e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c920:	f7fd fc14 	bl	800a14c <HAL_GetTick>
 800c924:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c926:	e004      	b.n	800c932 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c928:	f7fd fc10 	bl	800a14c <HAL_GetTick>
 800c92c:	1b83      	subs	r3, r0, r6
 800c92e:	2b02      	cmp	r3, #2
 800c930:	d88d      	bhi.n	800c84e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c932:	682b      	ldr	r3, [r5, #0]
 800c934:	05d9      	lsls	r1, r3, #23
 800c936:	d5f7      	bpl.n	800c928 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c938:	4d1d      	ldr	r5, [pc, #116]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c93a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c93c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c93e:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c942:	d111      	bne.n	800c968 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c944:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c948:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c94c:	d021      	beq.n	800c992 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c94e:	4918      	ldr	r1, [pc, #96]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c950:	688a      	ldr	r2, [r1, #8]
 800c952:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c956:	608a      	str	r2, [r1, #8]
 800c958:	4a15      	ldr	r2, [pc, #84]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c95a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c95c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c960:	430b      	orrs	r3, r1
 800c962:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c964:	6823      	ldr	r3, [r4, #0]
 800c966:	e708      	b.n	800c77a <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c968:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c96c:	4291      	cmp	r1, r2
 800c96e:	d0eb      	beq.n	800c948 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c970:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c972:	4a0e      	ldr	r2, [pc, #56]	; (800c9ac <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c974:	2101      	movs	r1, #1
 800c976:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c97a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c97e:	2100      	movs	r1, #0
 800c980:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c984:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c986:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c988:	07da      	lsls	r2, r3, #31
 800c98a:	f53f af52 	bmi.w	800c832 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c98e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c990:	e7d8      	b.n	800c944 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c992:	4807      	ldr	r0, [pc, #28]	; (800c9b0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c994:	6882      	ldr	r2, [r0, #8]
 800c996:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c99a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c99e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c9a2:	430a      	orrs	r2, r1
 800c9a4:	6082      	str	r2, [r0, #8]
 800c9a6:	e7d7      	b.n	800c958 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c9a8:	42471000 	.word	0x42471000
 800c9ac:	42470000 	.word	0x42470000
 800c9b0:	40023800 	.word	0x40023800
 800c9b4:	40007000 	.word	0x40007000

0800c9b8 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c9b8:	b1f0      	cbz	r0, 800c9f8 <HAL_SDRAM_Init+0x40>
{
 800c9ba:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c9bc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c9c0:	460d      	mov	r5, r1
 800c9c2:	4604      	mov	r4, r0
 800c9c4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c9c8:	b18b      	cbz	r3, 800c9ee <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c9ca:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c9cc:	2302      	movs	r3, #2
 800c9ce:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c9d2:	f851 0b04 	ldr.w	r0, [r1], #4
 800c9d6:	f000 fe51 	bl	800d67c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c9da:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c9de:	4629      	mov	r1, r5
 800c9e0:	f000 fe8a 	bl	800d6f8 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c9e4:	2301      	movs	r3, #1
 800c9e6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c9ea:	2000      	movs	r0, #0
}
 800c9ec:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c9ee:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c9f2:	f7f6 f92b 	bl	8002c4c <HAL_SDRAM_MspInit>
 800c9f6:	e7e8      	b.n	800c9ca <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c9f8:	2001      	movs	r0, #1
}
 800c9fa:	4770      	bx	lr

0800c9fc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c9fc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c9fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800ca02:	2b02      	cmp	r3, #2
{
 800ca04:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ca06:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800ca08:	d004      	beq.n	800ca14 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800ca0a:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800ca0e:	2c01      	cmp	r4, #1
 800ca10:	d001      	beq.n	800ca16 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800ca12:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800ca14:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ca16:	460e      	mov	r6, r1
 800ca18:	2302      	movs	r3, #2
 800ca1a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800ca1e:	6828      	ldr	r0, [r5, #0]
 800ca20:	f000 feb6 	bl	800d790 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800ca24:	6833      	ldr	r3, [r6, #0]
 800ca26:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800ca28:	bf06      	itte	eq
 800ca2a:	2305      	moveq	r3, #5
 800ca2c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800ca30:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800ca34:	2000      	movs	r0, #0
}
 800ca36:	bd70      	pop	{r4, r5, r6, pc}

0800ca38 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800ca38:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ca3a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ca3e:	2b02      	cmp	r3, #2
{
 800ca40:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ca42:	b2d8      	uxtb	r0, r3
 800ca44:	d005      	beq.n	800ca52 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800ca46:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800ca4a:	2b01      	cmp	r3, #1
 800ca4c:	b2dd      	uxtb	r5, r3
 800ca4e:	d001      	beq.n	800ca54 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800ca50:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800ca52:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ca54:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ca56:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ca58:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ca5c:	f000 fec2 	bl	800d7e4 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800ca60:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800ca64:	2000      	movs	r0, #0
}
 800ca66:	bd38      	pop	{r3, r4, r5, pc}

0800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800ca68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca6c:	b082      	sub	sp, #8
 800ca6e:	461d      	mov	r5, r3
 800ca70:	4616      	mov	r6, r2
 800ca72:	460c      	mov	r4, r1
 800ca74:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800ca76:	f7fd fb69 	bl	800a14c <HAL_GetTick>
 800ca7a:	4435      	add	r5, r6
 800ca7c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800ca7e:	f7fd fb65 	bl	800a14c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800ca82:	4b27      	ldr	r3, [pc, #156]	; (800cb20 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800ca84:	681b      	ldr	r3, [r3, #0]
 800ca86:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800ca8a:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800ca8e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800ca90:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800ca92:	1c73      	adds	r3, r6, #1
 800ca94:	6839      	ldr	r1, [r7, #0]
 800ca96:	d107      	bne.n	800caa8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800ca98:	688b      	ldr	r3, [r1, #8]
 800ca9a:	ea34 0303 	bics.w	r3, r4, r3
 800ca9e:	d0fb      	beq.n	800ca98 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800caa0:	2000      	movs	r0, #0
}
 800caa2:	b002      	add	sp, #8
 800caa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800caa8:	688b      	ldr	r3, [r1, #8]
 800caaa:	ea34 0303 	bics.w	r3, r4, r3
 800caae:	d1f7      	bne.n	800caa0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800cab0:	f7fd fb4c 	bl	800a14c <HAL_GetTick>
 800cab4:	eba0 0008 	sub.w	r0, r0, r8
 800cab8:	42a8      	cmp	r0, r5
 800caba:	d208      	bcs.n	800cace <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800cabc:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800cabe:	2b00      	cmp	r3, #0
      count--;
 800cac0:	9b01      	ldr	r3, [sp, #4]
 800cac2:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800cac6:	bf08      	it	eq
 800cac8:	2500      	moveq	r5, #0
      count--;
 800caca:	9301      	str	r3, [sp, #4]
 800cacc:	e7e1      	b.n	800ca92 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cace:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800cad2:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cad4:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800cad8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800cadc:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cade:	d013      	beq.n	800cb08 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800cae0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800cae2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800cae6:	d107      	bne.n	800caf8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800cae8:	681a      	ldr	r2, [r3, #0]
 800caea:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800caee:	601a      	str	r2, [r3, #0]
 800caf0:	681a      	ldr	r2, [r3, #0]
 800caf2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800caf6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800caf8:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800cafa:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800cafc:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800cb00:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800cb04:	2003      	movs	r0, #3
 800cb06:	e7cc      	b.n	800caa2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb08:	68ba      	ldr	r2, [r7, #8]
 800cb0a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800cb0e:	d002      	beq.n	800cb16 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800cb10:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800cb14:	d1e4      	bne.n	800cae0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800cb16:	681a      	ldr	r2, [r3, #0]
 800cb18:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cb1c:	601a      	str	r2, [r3, #0]
 800cb1e:	e7df      	b.n	800cae0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800cb20:	20000078 	.word	0x20000078

0800cb24 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800cb24:	b538      	push	{r3, r4, r5, lr}
 800cb26:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb28:	6842      	ldr	r2, [r0, #4]
 800cb2a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800cb2e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb30:	d006      	beq.n	800cb40 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cb32:	460a      	mov	r2, r1
 800cb34:	2101      	movs	r1, #1
 800cb36:	f7ff ff97 	bl	800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cb3a:	b978      	cbnz	r0, 800cb5c <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800cb3c:	2000      	movs	r0, #0
}
 800cb3e:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb40:	6882      	ldr	r2, [r0, #8]
 800cb42:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800cb46:	d01c      	beq.n	800cb82 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800cb48:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800cb4c:	d00c      	beq.n	800cb68 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cb4e:	460a      	mov	r2, r1
 800cb50:	4620      	mov	r0, r4
 800cb52:	2180      	movs	r1, #128	; 0x80
 800cb54:	f7ff ff88 	bl	800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cb58:	2800      	cmp	r0, #0
 800cb5a:	d0ef      	beq.n	800cb3c <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cb5c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800cb5e:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800cb62:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cb64:	6563      	str	r3, [r4, #84]	; 0x54
}
 800cb66:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800cb68:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cb6a:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800cb6c:	6829      	ldr	r1, [r5, #0]
 800cb6e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800cb72:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800cb74:	2101      	movs	r1, #1
 800cb76:	f7ff ff77 	bl	800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cb7a:	2800      	cmp	r0, #0
 800cb7c:	d1ee      	bne.n	800cb5c <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800cb7e:	2000      	movs	r0, #0
 800cb80:	e7dd      	b.n	800cb3e <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800cb82:	6800      	ldr	r0, [r0, #0]
 800cb84:	6802      	ldr	r2, [r0, #0]
 800cb86:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cb8a:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cb8c:	460a      	mov	r2, r1
 800cb8e:	4620      	mov	r0, r4
 800cb90:	2180      	movs	r1, #128	; 0x80
 800cb92:	f7ff ff69 	bl	800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cb96:	2800      	cmp	r0, #0
 800cb98:	d0d0      	beq.n	800cb3c <SPI_EndRxTransaction+0x18>
 800cb9a:	e7df      	b.n	800cb5c <SPI_EndRxTransaction+0x38>

0800cb9c <HAL_SPI_Init>:
  if (hspi == NULL)
 800cb9c:	2800      	cmp	r0, #0
 800cb9e:	d05c      	beq.n	800cc5a <HAL_SPI_Init+0xbe>
{
 800cba0:	b570      	push	{r4, r5, r6, lr}
 800cba2:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800cba4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800cba6:	2800      	cmp	r0, #0
 800cba8:	d047      	beq.n	800cc3a <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800cbaa:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800cbac:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800cbb0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800cbb4:	2200      	movs	r2, #0
 800cbb6:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800cbb8:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800cbbc:	2b00      	cmp	r3, #0
 800cbbe:	d042      	beq.n	800cc46 <HAL_SPI_Init+0xaa>
 800cbc0:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800cbc2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cbc4:	68a5      	ldr	r5, [r4, #8]
 800cbc6:	69a2      	ldr	r2, [r4, #24]
 800cbc8:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800cbca:	2302      	movs	r3, #2
 800cbcc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800cbd0:	680b      	ldr	r3, [r1, #0]
 800cbd2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cbd6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cbd8:	6863      	ldr	r3, [r4, #4]
 800cbda:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800cbde:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800cbe2:	432b      	orrs	r3, r5
 800cbe4:	68e5      	ldr	r5, [r4, #12]
 800cbe6:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800cbea:	432b      	orrs	r3, r5
 800cbec:	6925      	ldr	r5, [r4, #16]
 800cbee:	f005 0502 	and.w	r5, r5, #2
 800cbf2:	432b      	orrs	r3, r5
 800cbf4:	6965      	ldr	r5, [r4, #20]
 800cbf6:	f005 0501 	and.w	r5, r5, #1
 800cbfa:	432b      	orrs	r3, r5
 800cbfc:	69e5      	ldr	r5, [r4, #28]
 800cbfe:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800cc02:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800cc06:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800cc0a:	4333      	orrs	r3, r6
 800cc0c:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cc0e:	0c12      	lsrs	r2, r2, #16
 800cc10:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cc14:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cc18:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cc1c:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cc20:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cc22:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cc24:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cc26:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cc28:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cc2a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800cc2e:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cc30:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cc32:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800cc34:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800cc38:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cc3a:	6863      	ldr	r3, [r4, #4]
 800cc3c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cc40:	d0b6      	beq.n	800cbb0 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800cc42:	61e0      	str	r0, [r4, #28]
 800cc44:	e7b4      	b.n	800cbb0 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800cc46:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800cc48:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800cc4c:	f7f5 ff78 	bl	8002b40 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cc50:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cc54:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800cc58:	e7b3      	b.n	800cbc2 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800cc5a:	2001      	movs	r0, #1
}
 800cc5c:	4770      	bx	lr
 800cc5e:	bf00      	nop

0800cc60 <HAL_SPI_Transmit>:
{
 800cc60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc64:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cc66:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cc6a:	2801      	cmp	r0, #1
{
 800cc6c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cc6e:	f000 8085 	beq.w	800cd7c <HAL_SPI_Transmit+0x11c>
 800cc72:	461d      	mov	r5, r3
 800cc74:	2301      	movs	r3, #1
 800cc76:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cc7a:	4688      	mov	r8, r1
 800cc7c:	4617      	mov	r7, r2
 800cc7e:	f7fd fa65 	bl	800a14c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cc82:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800cc86:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800cc88:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cc8a:	b2d8      	uxtb	r0, r3
 800cc8c:	d009      	beq.n	800cca2 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800cc8e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cc90:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cc92:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cc94:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cc98:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cc9c:	b002      	add	sp, #8
 800cc9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cca2:	f1b8 0f00 	cmp.w	r8, #0
 800cca6:	d0f3      	beq.n	800cc90 <HAL_SPI_Transmit+0x30>
 800cca8:	2f00      	cmp	r7, #0
 800ccaa:	d0f1      	beq.n	800cc90 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ccac:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800ccae:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800ccb0:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ccb4:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800ccb6:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ccb8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800ccbc:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800ccc0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ccc4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800ccc6:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800ccc8:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800ccca:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800cccc:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800ccce:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ccd0:	f000 8085 	beq.w	800cdde <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ccd4:	6803      	ldr	r3, [r0, #0]
 800ccd6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800ccd8:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ccda:	d403      	bmi.n	800cce4 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800ccdc:	6803      	ldr	r3, [r0, #0]
 800ccde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cce2:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cce4:	68e3      	ldr	r3, [r4, #12]
 800cce6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800ccea:	d04b      	beq.n	800cd84 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ccec:	6863      	ldr	r3, [r4, #4]
 800ccee:	2b00      	cmp	r3, #0
 800ccf0:	f000 8097 	beq.w	800ce22 <HAL_SPI_Transmit+0x1c2>
 800ccf4:	2f01      	cmp	r7, #1
 800ccf6:	f000 8094 	beq.w	800ce22 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800ccfa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ccfc:	b29b      	uxth	r3, r3
 800ccfe:	b1ab      	cbz	r3, 800cd2c <HAL_SPI_Transmit+0xcc>
 800cd00:	1c68      	adds	r0, r5, #1
 800cd02:	f040 8083 	bne.w	800ce0c <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cd06:	6823      	ldr	r3, [r4, #0]
 800cd08:	689a      	ldr	r2, [r3, #8]
 800cd0a:	0791      	lsls	r1, r2, #30
 800cd0c:	f140 8094 	bpl.w	800ce38 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cd10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cd12:	7812      	ldrb	r2, [r2, #0]
 800cd14:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cd16:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd18:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd1a:	3901      	subs	r1, #1
 800cd1c:	b289      	uxth	r1, r1
 800cd1e:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cd20:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd22:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800cd24:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd26:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800cd28:	2900      	cmp	r1, #0
 800cd2a:	d1ec      	bne.n	800cd06 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cd2c:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cd2e:	4b5b      	ldr	r3, [pc, #364]	; (800ce9c <HAL_SPI_Transmit+0x23c>)
 800cd30:	4a5b      	ldr	r2, [pc, #364]	; (800cea0 <HAL_SPI_Transmit+0x240>)
 800cd32:	681b      	ldr	r3, [r3, #0]
 800cd34:	fba2 2303 	umull	r2, r3, r2, r3
 800cd38:	0d5b      	lsrs	r3, r3, #21
 800cd3a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800cd3e:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cd42:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cd46:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cd48:	d107      	bne.n	800cd5a <HAL_SPI_Transmit+0xfa>
 800cd4a:	e098      	b.n	800ce7e <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800cd4c:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cd4e:	6822      	ldr	r2, [r4, #0]
      count--;
 800cd50:	3b01      	subs	r3, #1
 800cd52:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cd54:	6893      	ldr	r3, [r2, #8]
 800cd56:	061b      	lsls	r3, r3, #24
 800cd58:	d502      	bpl.n	800cd60 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800cd5a:	9b01      	ldr	r3, [sp, #4]
 800cd5c:	2b00      	cmp	r3, #0
 800cd5e:	d1f5      	bne.n	800cd4c <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cd60:	68a3      	ldr	r3, [r4, #8]
 800cd62:	b933      	cbnz	r3, 800cd72 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cd64:	6822      	ldr	r2, [r4, #0]
 800cd66:	9300      	str	r3, [sp, #0]
 800cd68:	68d3      	ldr	r3, [r2, #12]
 800cd6a:	9300      	str	r3, [sp, #0]
 800cd6c:	6893      	ldr	r3, [r2, #8]
 800cd6e:	9300      	str	r3, [sp, #0]
 800cd70:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cd72:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cd74:	3800      	subs	r0, #0
 800cd76:	bf18      	it	ne
 800cd78:	2001      	movne	r0, #1
error:
 800cd7a:	e789      	b.n	800cc90 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800cd7c:	2002      	movs	r0, #2
}
 800cd7e:	b002      	add	sp, #8
 800cd80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd84:	6861      	ldr	r1, [r4, #4]
 800cd86:	2900      	cmp	r1, #0
 800cd88:	d176      	bne.n	800ce78 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd8a:	4643      	mov	r3, r8
 800cd8c:	f833 7b02 	ldrh.w	r7, [r3], #2
 800cd90:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd92:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd94:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd96:	3b01      	subs	r3, #1
 800cd98:	b29b      	uxth	r3, r3
 800cd9a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cd9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd9e:	b29b      	uxth	r3, r3
 800cda0:	2b00      	cmp	r3, #0
 800cda2:	d0c4      	beq.n	800cd2e <HAL_SPI_Transmit+0xce>
 800cda4:	1c6b      	adds	r3, r5, #1
 800cda6:	d15e      	bne.n	800ce66 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cda8:	6883      	ldr	r3, [r0, #8]
 800cdaa:	079f      	lsls	r7, r3, #30
 800cdac:	d50f      	bpl.n	800cdce <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cdae:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cdb0:	f832 3b02 	ldrh.w	r3, [r2], #2
 800cdb4:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800cdb6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cdb8:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cdba:	3b01      	subs	r3, #1
 800cdbc:	b29b      	uxth	r3, r3
 800cdbe:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cdc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cdc2:	b29b      	uxth	r3, r3
 800cdc4:	2b00      	cmp	r3, #0
 800cdc6:	d0b1      	beq.n	800cd2c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cdc8:	6883      	ldr	r3, [r0, #8]
 800cdca:	079f      	lsls	r7, r3, #30
 800cdcc:	d4ef      	bmi.n	800cdae <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cdce:	f7fd f9bd 	bl	800a14c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cdd2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cdd4:	b29b      	uxth	r3, r3
 800cdd6:	2b00      	cmp	r3, #0
 800cdd8:	d0a8      	beq.n	800cd2c <HAL_SPI_Transmit+0xcc>
 800cdda:	6820      	ldr	r0, [r4, #0]
 800cddc:	e7e4      	b.n	800cda8 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800cdde:	6803      	ldr	r3, [r0, #0]
 800cde0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cde4:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800cde6:	6803      	ldr	r3, [r0, #0]
 800cde8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800cdec:	6003      	str	r3, [r0, #0]
 800cdee:	e771      	b.n	800ccd4 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cdf0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cdf2:	7812      	ldrb	r2, [r2, #0]
 800cdf4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cdf6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cdf8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cdfa:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cdfc:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cdfe:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce00:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ce02:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ce04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce06:	b29b      	uxth	r3, r3
 800ce08:	2b00      	cmp	r3, #0
 800ce0a:	d08f      	beq.n	800cd2c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ce0c:	6823      	ldr	r3, [r4, #0]
 800ce0e:	689a      	ldr	r2, [r3, #8]
 800ce10:	0792      	lsls	r2, r2, #30
 800ce12:	d4ed      	bmi.n	800cdf0 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ce14:	f7fd f99a 	bl	800a14c <HAL_GetTick>
 800ce18:	1b80      	subs	r0, r0, r6
 800ce1a:	42a8      	cmp	r0, r5
 800ce1c:	d3f2      	bcc.n	800ce04 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ce1e:	2003      	movs	r0, #3
 800ce20:	e736      	b.n	800cc90 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ce22:	f898 3000 	ldrb.w	r3, [r8]
 800ce26:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ce28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce2a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ce2c:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce2e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ce30:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce32:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ce34:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ce36:	e760      	b.n	800ccfa <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ce38:	f7fd f988 	bl	800a14c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ce3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce3e:	b29b      	uxth	r3, r3
 800ce40:	2b00      	cmp	r3, #0
 800ce42:	f47f af60 	bne.w	800cd06 <HAL_SPI_Transmit+0xa6>
 800ce46:	e771      	b.n	800cd2c <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ce48:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ce4a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ce4e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ce50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ce52:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ce54:	3b01      	subs	r3, #1
 800ce56:	b29b      	uxth	r3, r3
 800ce58:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ce5a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce5c:	b29b      	uxth	r3, r3
 800ce5e:	2b00      	cmp	r3, #0
 800ce60:	f43f af64 	beq.w	800cd2c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ce64:	6822      	ldr	r2, [r4, #0]
 800ce66:	6893      	ldr	r3, [r2, #8]
 800ce68:	0799      	lsls	r1, r3, #30
 800ce6a:	d4ed      	bmi.n	800ce48 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ce6c:	f7fd f96e 	bl	800a14c <HAL_GetTick>
 800ce70:	1b80      	subs	r0, r0, r6
 800ce72:	42a8      	cmp	r0, r5
 800ce74:	d3f1      	bcc.n	800ce5a <HAL_SPI_Transmit+0x1fa>
 800ce76:	e7d2      	b.n	800ce1e <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ce78:	2f01      	cmp	r7, #1
 800ce7a:	d18f      	bne.n	800cd9c <HAL_SPI_Transmit+0x13c>
 800ce7c:	e785      	b.n	800cd8a <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ce7e:	4633      	mov	r3, r6
 800ce80:	462a      	mov	r2, r5
 800ce82:	2180      	movs	r1, #128	; 0x80
 800ce84:	4620      	mov	r0, r4
 800ce86:	f7ff fdef 	bl	800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ce8a:	2800      	cmp	r0, #0
 800ce8c:	f43f af68 	beq.w	800cd60 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ce90:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ce92:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ce94:	4313      	orrs	r3, r2
 800ce96:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ce98:	6562      	str	r2, [r4, #84]	; 0x54
 800ce9a:	e761      	b.n	800cd60 <HAL_SPI_Transmit+0x100>
 800ce9c:	20000078 	.word	0x20000078
 800cea0:	165e9f81 	.word	0x165e9f81

0800cea4 <HAL_SPI_TransmitReceive>:
{
 800cea4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cea8:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ceaa:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800ceae:	2801      	cmp	r0, #1
{
 800ceb0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800ceb2:	f000 80ac 	beq.w	800d00e <HAL_SPI_TransmitReceive+0x16a>
 800ceb6:	461e      	mov	r6, r3
 800ceb8:	2301      	movs	r3, #1
 800ceba:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cebe:	4690      	mov	r8, r2
 800cec0:	460f      	mov	r7, r1
 800cec2:	f7fd f943 	bl	800a14c <HAL_GetTick>
 800cec6:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cec8:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cecc:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cece:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800ced0:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ced2:	d011      	beq.n	800cef8 <HAL_SPI_TransmitReceive+0x54>
 800ced4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800ced8:	d009      	beq.n	800ceee <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800ceda:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cedc:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cede:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cee0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cee4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cee8:	b002      	add	sp, #8
 800ceea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800ceee:	68a1      	ldr	r1, [r4, #8]
 800cef0:	2900      	cmp	r1, #0
 800cef2:	d1f2      	bne.n	800ceda <HAL_SPI_TransmitReceive+0x36>
 800cef4:	2a04      	cmp	r2, #4
 800cef6:	d1f0      	bne.n	800ceda <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cef8:	2f00      	cmp	r7, #0
 800cefa:	f000 808c 	beq.w	800d016 <HAL_SPI_TransmitReceive+0x172>
 800cefe:	f1b8 0f00 	cmp.w	r8, #0
 800cf02:	f000 8088 	beq.w	800d016 <HAL_SPI_TransmitReceive+0x172>
 800cf06:	2e00      	cmp	r6, #0
 800cf08:	f000 8085 	beq.w	800d016 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cf0c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cf10:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cf14:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cf16:	bf1c      	itt	ne
 800cf18:	2205      	movne	r2, #5
 800cf1a:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cf1e:	2200      	movs	r2, #0
 800cf20:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cf22:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cf26:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cf28:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cf2a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cf2c:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cf2e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cf30:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cf32:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cf34:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cf36:	d403      	bmi.n	800cf40 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cf38:	6811      	ldr	r1, [r2, #0]
 800cf3a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cf3e:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cf40:	68e1      	ldr	r1, [r4, #12]
 800cf42:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cf46:	f000 809e 	beq.w	800d086 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cf4a:	2b00      	cmp	r3, #0
 800cf4c:	f000 8091 	beq.w	800d072 <HAL_SPI_TransmitReceive+0x1ce>
 800cf50:	2e01      	cmp	r6, #1
 800cf52:	f000 808e 	beq.w	800d072 <HAL_SPI_TransmitReceive+0x1ce>
 800cf56:	9b08      	ldr	r3, [sp, #32]
 800cf58:	3301      	adds	r3, #1
        txallowed = 1U;
 800cf5a:	f04f 0601 	mov.w	r6, #1
 800cf5e:	d028      	beq.n	800cfb2 <HAL_SPI_TransmitReceive+0x10e>
 800cf60:	e05b      	b.n	800d01a <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cf62:	6821      	ldr	r1, [r4, #0]
 800cf64:	688b      	ldr	r3, [r1, #8]
 800cf66:	0798      	lsls	r0, r3, #30
 800cf68:	d50f      	bpl.n	800cf8a <HAL_SPI_TransmitReceive+0xe6>
 800cf6a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf6c:	b29b      	uxth	r3, r3
 800cf6e:	b163      	cbz	r3, 800cf8a <HAL_SPI_TransmitReceive+0xe6>
 800cf70:	b15e      	cbz	r6, 800cf8a <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cf72:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cf74:	781b      	ldrb	r3, [r3, #0]
 800cf76:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cf78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cf7a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cf7c:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cf7e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cf80:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cf82:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cf84:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cf86:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cf88:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cf8a:	688a      	ldr	r2, [r1, #8]
 800cf8c:	f012 0201 	ands.w	r2, r2, #1
 800cf90:	d00d      	beq.n	800cfae <HAL_SPI_TransmitReceive+0x10a>
 800cf92:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf94:	b29b      	uxth	r3, r3
 800cf96:	b153      	cbz	r3, 800cfae <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cf98:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cf9a:	68c9      	ldr	r1, [r1, #12]
 800cf9c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cf9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cfa0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cfa2:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cfa4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cfa6:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cfa8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cfaa:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cfac:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cfae:	f7fd f8cd 	bl	800a14c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cfb2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cfb4:	b292      	uxth	r2, r2
 800cfb6:	2a00      	cmp	r2, #0
 800cfb8:	d1d3      	bne.n	800cf62 <HAL_SPI_TransmitReceive+0xbe>
 800cfba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cfbc:	b29b      	uxth	r3, r3
 800cfbe:	2b00      	cmp	r3, #0
 800cfc0:	d1cf      	bne.n	800cf62 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cfc2:	4b79      	ldr	r3, [pc, #484]	; (800d1a8 <HAL_SPI_TransmitReceive+0x304>)
 800cfc4:	4a79      	ldr	r2, [pc, #484]	; (800d1ac <HAL_SPI_TransmitReceive+0x308>)
 800cfc6:	681b      	ldr	r3, [r3, #0]
 800cfc8:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cfcc:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cfce:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cfd2:	0d5b      	lsrs	r3, r3, #21
 800cfd4:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cfd8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cfdc:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cfde:	d107      	bne.n	800cff0 <HAL_SPI_TransmitReceive+0x14c>
 800cfe0:	e0d2      	b.n	800d188 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cfe2:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cfe4:	6822      	ldr	r2, [r4, #0]
      count--;
 800cfe6:	3b01      	subs	r3, #1
 800cfe8:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cfea:	6893      	ldr	r3, [r2, #8]
 800cfec:	061b      	lsls	r3, r3, #24
 800cfee:	d502      	bpl.n	800cff6 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cff0:	9b01      	ldr	r3, [sp, #4]
 800cff2:	2b00      	cmp	r3, #0
 800cff4:	d1f5      	bne.n	800cfe2 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cff6:	68a0      	ldr	r0, [r4, #8]
 800cff8:	2800      	cmp	r0, #0
 800cffa:	f040 8082 	bne.w	800d102 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cffe:	6823      	ldr	r3, [r4, #0]
 800d000:	9000      	str	r0, [sp, #0]
 800d002:	68da      	ldr	r2, [r3, #12]
 800d004:	9200      	str	r2, [sp, #0]
 800d006:	689b      	ldr	r3, [r3, #8]
 800d008:	9300      	str	r3, [sp, #0]
 800d00a:	9b00      	ldr	r3, [sp, #0]
 800d00c:	e766      	b.n	800cedc <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800d00e:	2002      	movs	r0, #2
}
 800d010:	b002      	add	sp, #8
 800d012:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800d016:	2001      	movs	r0, #1
 800d018:	e760      	b.n	800cedc <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d01a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d01c:	b29b      	uxth	r3, r3
 800d01e:	b91b      	cbnz	r3, 800d028 <HAL_SPI_TransmitReceive+0x184>
 800d020:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d022:	b29b      	uxth	r3, r3
 800d024:	2b00      	cmp	r3, #0
 800d026:	d0cc      	beq.n	800cfc2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d028:	6822      	ldr	r2, [r4, #0]
 800d02a:	6893      	ldr	r3, [r2, #8]
 800d02c:	0799      	lsls	r1, r3, #30
 800d02e:	d50f      	bpl.n	800d050 <HAL_SPI_TransmitReceive+0x1ac>
 800d030:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d032:	b29b      	uxth	r3, r3
 800d034:	b163      	cbz	r3, 800d050 <HAL_SPI_TransmitReceive+0x1ac>
 800d036:	b15e      	cbz	r6, 800d050 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800d038:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d03a:	781b      	ldrb	r3, [r3, #0]
 800d03c:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800d03e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800d040:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d042:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800d044:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800d046:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800d048:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d04a:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800d04c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800d04e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d050:	6893      	ldr	r3, [r2, #8]
 800d052:	f013 0301 	ands.w	r3, r3, #1
 800d056:	d004      	beq.n	800d062 <HAL_SPI_TransmitReceive+0x1be>
 800d058:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d05a:	b289      	uxth	r1, r1
 800d05c:	2900      	cmp	r1, #0
 800d05e:	f040 8087 	bne.w	800d170 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800d062:	f7fd f873 	bl	800a14c <HAL_GetTick>
 800d066:	9b08      	ldr	r3, [sp, #32]
 800d068:	1b40      	subs	r0, r0, r5
 800d06a:	4298      	cmp	r0, r3
 800d06c:	d3d5      	bcc.n	800d01a <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800d06e:	2003      	movs	r0, #3
 800d070:	e734      	b.n	800cedc <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800d072:	783b      	ldrb	r3, [r7, #0]
 800d074:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800d076:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d078:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d07a:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d07c:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800d07e:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d080:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d082:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d084:	e767      	b.n	800cf56 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d086:	2b00      	cmp	r3, #0
 800d088:	d13d      	bne.n	800d106 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d08a:	f837 3b02 	ldrh.w	r3, [r7], #2
 800d08e:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800d090:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800d092:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800d094:	3b01      	subs	r3, #1
 800d096:	b29b      	uxth	r3, r3
 800d098:	86e3      	strh	r3, [r4, #54]	; 0x36
 800d09a:	9b08      	ldr	r3, [sp, #32]
 800d09c:	3301      	adds	r3, #1
{
 800d09e:	f04f 0601 	mov.w	r6, #1
 800d0a2:	d025      	beq.n	800d0f0 <HAL_SPI_TransmitReceive+0x24c>
 800d0a4:	e032      	b.n	800d10c <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d0a6:	6823      	ldr	r3, [r4, #0]
 800d0a8:	689a      	ldr	r2, [r3, #8]
 800d0aa:	0792      	lsls	r2, r2, #30
 800d0ac:	d50d      	bpl.n	800d0ca <HAL_SPI_TransmitReceive+0x226>
 800d0ae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d0b0:	b292      	uxth	r2, r2
 800d0b2:	b152      	cbz	r2, 800d0ca <HAL_SPI_TransmitReceive+0x226>
 800d0b4:	b14e      	cbz	r6, 800d0ca <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d0b6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d0b8:	f831 2b02 	ldrh.w	r2, [r1], #2
 800d0bc:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800d0be:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d0c0:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d0c2:	3a01      	subs	r2, #1
 800d0c4:	b292      	uxth	r2, r2
        txallowed = 0U;
 800d0c6:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800d0c8:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d0ca:	689a      	ldr	r2, [r3, #8]
 800d0cc:	f012 0201 	ands.w	r2, r2, #1
 800d0d0:	d00c      	beq.n	800d0ec <HAL_SPI_TransmitReceive+0x248>
 800d0d2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d0d4:	b289      	uxth	r1, r1
 800d0d6:	b149      	cbz	r1, 800d0ec <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d0d8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d0da:	68db      	ldr	r3, [r3, #12]
 800d0dc:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800d0e0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d0e2:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d0e4:	3b01      	subs	r3, #1
 800d0e6:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800d0e8:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800d0ea:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d0ec:	f7fd f82e 	bl	800a14c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d0f0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d0f2:	b29b      	uxth	r3, r3
 800d0f4:	2b00      	cmp	r3, #0
 800d0f6:	d1d6      	bne.n	800d0a6 <HAL_SPI_TransmitReceive+0x202>
 800d0f8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d0fa:	b29b      	uxth	r3, r3
 800d0fc:	2b00      	cmp	r3, #0
 800d0fe:	d1d2      	bne.n	800d0a6 <HAL_SPI_TransmitReceive+0x202>
 800d100:	e75f      	b.n	800cfc2 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800d102:	2000      	movs	r0, #0
 800d104:	e6ea      	b.n	800cedc <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d106:	2e01      	cmp	r6, #1
 800d108:	d1c7      	bne.n	800d09a <HAL_SPI_TransmitReceive+0x1f6>
 800d10a:	e7be      	b.n	800d08a <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d10c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d10e:	b29b      	uxth	r3, r3
 800d110:	b923      	cbnz	r3, 800d11c <HAL_SPI_TransmitReceive+0x278>
 800d112:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d114:	b29b      	uxth	r3, r3
 800d116:	2b00      	cmp	r3, #0
 800d118:	f43f af53 	beq.w	800cfc2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d11c:	6822      	ldr	r2, [r4, #0]
 800d11e:	6893      	ldr	r3, [r2, #8]
 800d120:	079f      	lsls	r7, r3, #30
 800d122:	d50d      	bpl.n	800d140 <HAL_SPI_TransmitReceive+0x29c>
 800d124:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d126:	b29b      	uxth	r3, r3
 800d128:	b153      	cbz	r3, 800d140 <HAL_SPI_TransmitReceive+0x29c>
 800d12a:	b14e      	cbz	r6, 800d140 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800d12c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d12e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800d132:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800d134:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d136:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800d138:	3b01      	subs	r3, #1
 800d13a:	b29b      	uxth	r3, r3
 800d13c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800d13e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d140:	6893      	ldr	r3, [r2, #8]
 800d142:	f013 0301 	ands.w	r3, r3, #1
 800d146:	d00c      	beq.n	800d162 <HAL_SPI_TransmitReceive+0x2be>
 800d148:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d14a:	b289      	uxth	r1, r1
 800d14c:	b149      	cbz	r1, 800d162 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d14e:	68d1      	ldr	r1, [r2, #12]
 800d150:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d152:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800d156:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800d158:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d15a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d15c:	3b01      	subs	r3, #1
 800d15e:	b29b      	uxth	r3, r3
 800d160:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d162:	f7fc fff3 	bl	800a14c <HAL_GetTick>
 800d166:	9b08      	ldr	r3, [sp, #32]
 800d168:	1b40      	subs	r0, r0, r5
 800d16a:	4298      	cmp	r0, r3
 800d16c:	d3ce      	bcc.n	800d10c <HAL_SPI_TransmitReceive+0x268>
 800d16e:	e77e      	b.n	800d06e <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800d170:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d172:	68d2      	ldr	r2, [r2, #12]
 800d174:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800d176:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800d178:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d17a:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800d17c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800d17e:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800d180:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d182:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800d184:	461e      	mov	r6, r3
 800d186:	e76c      	b.n	800d062 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d188:	9a08      	ldr	r2, [sp, #32]
 800d18a:	462b      	mov	r3, r5
 800d18c:	2180      	movs	r1, #128	; 0x80
 800d18e:	4620      	mov	r0, r4
 800d190:	f7ff fc6a 	bl	800ca68 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800d194:	2800      	cmp	r0, #0
 800d196:	f43f af2e 	beq.w	800cff6 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d19a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d19c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d19e:	4313      	orrs	r3, r2
 800d1a0:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800d1a2:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d1a4:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800d1a6:	e699      	b.n	800cedc <HAL_SPI_TransmitReceive+0x38>
 800d1a8:	20000078 	.word	0x20000078
 800d1ac:	165e9f81 	.word	0x165e9f81

0800d1b0 <HAL_SPI_Receive>:
{
 800d1b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d1b4:	6846      	ldr	r6, [r0, #4]
 800d1b6:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800d1ba:	b082      	sub	sp, #8
 800d1bc:	4604      	mov	r4, r0
 800d1be:	4690      	mov	r8, r2
 800d1c0:	461d      	mov	r5, r3
 800d1c2:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d1c4:	d06e      	beq.n	800d2a4 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800d1c6:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800d1ca:	2b01      	cmp	r3, #1
 800d1cc:	d076      	beq.n	800d2bc <HAL_SPI_Receive+0x10c>
 800d1ce:	2301      	movs	r3, #1
 800d1d0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800d1d4:	f7fc ffba 	bl	800a14c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800d1d8:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800d1dc:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800d1e0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800d1e2:	fa5f f08c 	uxtb.w	r0, ip
 800d1e6:	d009      	beq.n	800d1fc <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800d1e8:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800d1ea:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800d1ec:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800d1ee:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d1f2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d1f6:	b002      	add	sp, #8
 800d1f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800d1fc:	2f00      	cmp	r7, #0
 800d1fe:	d0f4      	beq.n	800d1ea <HAL_SPI_Receive+0x3a>
 800d200:	f1b8 0f00 	cmp.w	r8, #0
 800d204:	d0f1      	beq.n	800d1ea <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d206:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800d208:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d20a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800d20e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800d210:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d214:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800d218:	f04f 0104 	mov.w	r1, #4
 800d21c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800d220:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d224:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800d226:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800d228:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800d22a:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800d22e:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800d230:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d232:	d107      	bne.n	800d244 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800d234:	6811      	ldr	r1, [r2, #0]
 800d236:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800d23a:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800d23c:	6811      	ldr	r1, [r2, #0]
 800d23e:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800d242:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d244:	6811      	ldr	r1, [r2, #0]
 800d246:	0648      	lsls	r0, r1, #25
 800d248:	d403      	bmi.n	800d252 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800d24a:	6811      	ldr	r1, [r2, #0]
 800d24c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800d250:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800d252:	68e1      	ldr	r1, [r4, #12]
 800d254:	2900      	cmp	r1, #0
 800d256:	d054      	beq.n	800d302 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800d258:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d25a:	b289      	uxth	r1, r1
 800d25c:	b1a9      	cbz	r1, 800d28a <HAL_SPI_Receive+0xda>
 800d25e:	1c69      	adds	r1, r5, #1
 800d260:	d13e      	bne.n	800d2e0 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d262:	6893      	ldr	r3, [r2, #8]
 800d264:	07db      	lsls	r3, r3, #31
 800d266:	d544      	bpl.n	800d2f2 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d268:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d26a:	68d1      	ldr	r1, [r2, #12]
 800d26c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800d270:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d274:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d276:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d27a:	fa1f fc8c 	uxth.w	ip, ip
 800d27e:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d282:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d284:	b29b      	uxth	r3, r3
 800d286:	2b00      	cmp	r3, #0
 800d288:	d1eb      	bne.n	800d262 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d28a:	4632      	mov	r2, r6
 800d28c:	4629      	mov	r1, r5
 800d28e:	4620      	mov	r0, r4
 800d290:	f7ff fc48 	bl	800cb24 <SPI_EndRxTransaction>
 800d294:	b108      	cbz	r0, 800d29a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d296:	2320      	movs	r3, #32
 800d298:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d29a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800d29c:	3800      	subs	r0, #0
 800d29e:	bf18      	it	ne
 800d2a0:	2001      	movne	r0, #1
error :
 800d2a2:	e7a2      	b.n	800d1ea <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d2a4:	6883      	ldr	r3, [r0, #8]
 800d2a6:	2b00      	cmp	r3, #0
 800d2a8:	d18d      	bne.n	800d1c6 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d2aa:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d2ac:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d2ae:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d2b0:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d2b4:	460a      	mov	r2, r1
 800d2b6:	f7ff fdf5 	bl	800cea4 <HAL_SPI_TransmitReceive>
 800d2ba:	e79c      	b.n	800d1f6 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800d2bc:	2002      	movs	r0, #2
}
 800d2be:	b002      	add	sp, #8
 800d2c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d2c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d2c6:	68db      	ldr	r3, [r3, #12]
 800d2c8:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800d2cc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d2ce:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d2d0:	3b01      	subs	r3, #1
 800d2d2:	b29b      	uxth	r3, r3
 800d2d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d2d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d2d8:	b29b      	uxth	r3, r3
 800d2da:	2b00      	cmp	r3, #0
 800d2dc:	d0d5      	beq.n	800d28a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d2de:	6823      	ldr	r3, [r4, #0]
 800d2e0:	689a      	ldr	r2, [r3, #8]
 800d2e2:	07d2      	lsls	r2, r2, #31
 800d2e4:	d4ee      	bmi.n	800d2c4 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d2e6:	f7fc ff31 	bl	800a14c <HAL_GetTick>
 800d2ea:	1b80      	subs	r0, r0, r6
 800d2ec:	42a8      	cmp	r0, r5
 800d2ee:	d243      	bcs.n	800d378 <HAL_SPI_Receive+0x1c8>
 800d2f0:	e7f1      	b.n	800d2d6 <HAL_SPI_Receive+0x126>
 800d2f2:	f7fc ff2b 	bl	800a14c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d2f6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d2f8:	b29b      	uxth	r3, r3
 800d2fa:	2b00      	cmp	r3, #0
 800d2fc:	d0c5      	beq.n	800d28a <HAL_SPI_Receive+0xda>
 800d2fe:	6822      	ldr	r2, [r4, #0]
 800d300:	e7af      	b.n	800d262 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800d302:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d304:	b292      	uxth	r2, r2
 800d306:	2a00      	cmp	r2, #0
 800d308:	d0bf      	beq.n	800d28a <HAL_SPI_Receive+0xda>
 800d30a:	1c6f      	adds	r7, r5, #1
 800d30c:	d013      	beq.n	800d336 <HAL_SPI_Receive+0x186>
 800d30e:	e02b      	b.n	800d368 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d310:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d312:	7b1b      	ldrb	r3, [r3, #12]
 800d314:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d316:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d31a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d31c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d320:	fa1f fc8c 	uxth.w	ip, ip
 800d324:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d328:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d32a:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800d32c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d32e:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800d330:	2b00      	cmp	r3, #0
 800d332:	d0aa      	beq.n	800d28a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d334:	6823      	ldr	r3, [r4, #0]
 800d336:	689a      	ldr	r2, [r3, #8]
 800d338:	07d0      	lsls	r0, r2, #31
 800d33a:	d4e9      	bmi.n	800d310 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d33c:	f7fc ff06 	bl	800a14c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d340:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d342:	b29b      	uxth	r3, r3
 800d344:	2b00      	cmp	r3, #0
 800d346:	d1f5      	bne.n	800d334 <HAL_SPI_Receive+0x184>
 800d348:	e79f      	b.n	800d28a <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d34a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d34c:	7b1b      	ldrb	r3, [r3, #12]
 800d34e:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d350:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d352:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d354:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d356:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800d358:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d35a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d35c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d35e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d360:	b29b      	uxth	r3, r3
 800d362:	2b00      	cmp	r3, #0
 800d364:	d091      	beq.n	800d28a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d366:	6823      	ldr	r3, [r4, #0]
 800d368:	689a      	ldr	r2, [r3, #8]
 800d36a:	07d1      	lsls	r1, r2, #31
 800d36c:	d4ed      	bmi.n	800d34a <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d36e:	f7fc feed 	bl	800a14c <HAL_GetTick>
 800d372:	1b80      	subs	r0, r0, r6
 800d374:	42a8      	cmp	r0, r5
 800d376:	d3f2      	bcc.n	800d35e <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800d378:	2003      	movs	r0, #3
 800d37a:	e736      	b.n	800d1ea <HAL_SPI_Receive+0x3a>

0800d37c <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800d37c:	2800      	cmp	r0, #0
 800d37e:	f000 8087 	beq.w	800d490 <HAL_TIM_Base_Init+0x114>
{
 800d382:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800d384:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d388:	4604      	mov	r4, r0
 800d38a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d38e:	2b00      	cmp	r3, #0
 800d390:	d079      	beq.n	800d486 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d392:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d394:	493f      	ldr	r1, [pc, #252]	; (800d494 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d396:	2302      	movs	r3, #2
 800d398:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d39c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d39e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d3a0:	d05d      	beq.n	800d45e <HAL_TIM_Base_Init+0xe2>
 800d3a2:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d3a6:	d031      	beq.n	800d40c <HAL_TIM_Base_Init+0x90>
 800d3a8:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d3ac:	428a      	cmp	r2, r1
 800d3ae:	d02d      	beq.n	800d40c <HAL_TIM_Base_Init+0x90>
 800d3b0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d3b4:	428a      	cmp	r2, r1
 800d3b6:	d029      	beq.n	800d40c <HAL_TIM_Base_Init+0x90>
 800d3b8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d3bc:	428a      	cmp	r2, r1
 800d3be:	d025      	beq.n	800d40c <HAL_TIM_Base_Init+0x90>
 800d3c0:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d3c4:	428a      	cmp	r2, r1
 800d3c6:	d04a      	beq.n	800d45e <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d3c8:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d3cc:	428a      	cmp	r2, r1
 800d3ce:	d021      	beq.n	800d414 <HAL_TIM_Base_Init+0x98>
 800d3d0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d3d4:	428a      	cmp	r2, r1
 800d3d6:	d01d      	beq.n	800d414 <HAL_TIM_Base_Init+0x98>
 800d3d8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d3dc:	428a      	cmp	r2, r1
 800d3de:	d019      	beq.n	800d414 <HAL_TIM_Base_Init+0x98>
 800d3e0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d3e4:	428a      	cmp	r2, r1
 800d3e6:	d015      	beq.n	800d414 <HAL_TIM_Base_Init+0x98>
 800d3e8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d3ec:	428a      	cmp	r2, r1
 800d3ee:	d011      	beq.n	800d414 <HAL_TIM_Base_Init+0x98>
 800d3f0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d3f4:	428a      	cmp	r2, r1
 800d3f6:	d00d      	beq.n	800d414 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d3f8:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d3fa:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d3fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d400:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d402:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d404:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d406:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d408:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d40a:	e010      	b.n	800d42e <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d40c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d40e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d412:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d414:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d416:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d418:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d41c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d41e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d422:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d424:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d426:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d428:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d42a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d42c:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d42e:	2301      	movs	r3, #1
 800d430:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d432:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d436:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d43a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d43e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d442:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d446:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d44a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d44e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d452:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d456:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d45a:	2000      	movs	r0, #0
}
 800d45c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d45e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d460:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d462:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d466:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d468:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d46c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d46e:	69a1      	ldr	r1, [r4, #24]
 800d470:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d474:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d476:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d478:	68e3      	ldr	r3, [r4, #12]
 800d47a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d47c:	6863      	ldr	r3, [r4, #4]
 800d47e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d480:	6963      	ldr	r3, [r4, #20]
 800d482:	6313      	str	r3, [r2, #48]	; 0x30
 800d484:	e7d3      	b.n	800d42e <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d486:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d48a:	f7f5 fb95 	bl	8002bb8 <HAL_TIM_Base_MspInit>
 800d48e:	e780      	b.n	800d392 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d490:	2001      	movs	r0, #1
}
 800d492:	4770      	bx	lr
 800d494:	40010000 	.word	0x40010000

0800d498 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d498:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d49c:	2b01      	cmp	r3, #1
 800d49e:	d12f      	bne.n	800d500 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d4a0:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d4a2:	4919      	ldr	r1, [pc, #100]	; (800d508 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d4a4:	2202      	movs	r2, #2
 800d4a6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d4aa:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d4ac:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d4ae:	f042 0201 	orr.w	r2, r2, #1
 800d4b2:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d4b4:	d019      	beq.n	800d4ea <HAL_TIM_Base_Start_IT+0x52>
 800d4b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d4ba:	d016      	beq.n	800d4ea <HAL_TIM_Base_Start_IT+0x52>
 800d4bc:	4a13      	ldr	r2, [pc, #76]	; (800d50c <HAL_TIM_Base_Start_IT+0x74>)
 800d4be:	4293      	cmp	r3, r2
 800d4c0:	d013      	beq.n	800d4ea <HAL_TIM_Base_Start_IT+0x52>
 800d4c2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d4c6:	4293      	cmp	r3, r2
 800d4c8:	d00f      	beq.n	800d4ea <HAL_TIM_Base_Start_IT+0x52>
 800d4ca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d4ce:	4293      	cmp	r3, r2
 800d4d0:	d00b      	beq.n	800d4ea <HAL_TIM_Base_Start_IT+0x52>
 800d4d2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d4d6:	4293      	cmp	r3, r2
 800d4d8:	d007      	beq.n	800d4ea <HAL_TIM_Base_Start_IT+0x52>
 800d4da:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d4de:	4293      	cmp	r3, r2
 800d4e0:	d003      	beq.n	800d4ea <HAL_TIM_Base_Start_IT+0x52>
 800d4e2:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d4e6:	4293      	cmp	r3, r2
 800d4e8:	d104      	bne.n	800d4f4 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d4ea:	689a      	ldr	r2, [r3, #8]
 800d4ec:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d4f0:	2a06      	cmp	r2, #6
 800d4f2:	d007      	beq.n	800d504 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d4f4:	681a      	ldr	r2, [r3, #0]
 800d4f6:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d4fa:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d4fc:	601a      	str	r2, [r3, #0]
 800d4fe:	4770      	bx	lr
    return HAL_ERROR;
 800d500:	2001      	movs	r0, #1
 800d502:	4770      	bx	lr
  return HAL_OK;
 800d504:	2000      	movs	r0, #0
}
 800d506:	4770      	bx	lr
 800d508:	40010000 	.word	0x40010000
 800d50c:	40000400 	.word	0x40000400

0800d510 <HAL_TIM_OC_DelayElapsedCallback>:
 800d510:	4770      	bx	lr
 800d512:	bf00      	nop

0800d514 <HAL_TIM_IC_CaptureCallback>:
 800d514:	4770      	bx	lr
 800d516:	bf00      	nop

0800d518 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d518:	4770      	bx	lr
 800d51a:	bf00      	nop

0800d51c <HAL_TIM_TriggerCallback>:
 800d51c:	4770      	bx	lr
 800d51e:	bf00      	nop

0800d520 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d520:	6803      	ldr	r3, [r0, #0]
 800d522:	691a      	ldr	r2, [r3, #16]
 800d524:	0791      	lsls	r1, r2, #30
{
 800d526:	b510      	push	{r4, lr}
 800d528:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d52a:	d502      	bpl.n	800d532 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d52c:	68da      	ldr	r2, [r3, #12]
 800d52e:	0792      	lsls	r2, r2, #30
 800d530:	d45f      	bmi.n	800d5f2 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d532:	691a      	ldr	r2, [r3, #16]
 800d534:	0750      	lsls	r0, r2, #29
 800d536:	d502      	bpl.n	800d53e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d538:	68da      	ldr	r2, [r3, #12]
 800d53a:	0751      	lsls	r1, r2, #29
 800d53c:	d446      	bmi.n	800d5cc <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d53e:	691a      	ldr	r2, [r3, #16]
 800d540:	0712      	lsls	r2, r2, #28
 800d542:	d502      	bpl.n	800d54a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d544:	68da      	ldr	r2, [r3, #12]
 800d546:	0710      	lsls	r0, r2, #28
 800d548:	d42e      	bmi.n	800d5a8 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d54a:	691a      	ldr	r2, [r3, #16]
 800d54c:	06d2      	lsls	r2, r2, #27
 800d54e:	d502      	bpl.n	800d556 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d550:	68da      	ldr	r2, [r3, #12]
 800d552:	06d0      	lsls	r0, r2, #27
 800d554:	d418      	bmi.n	800d588 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d556:	691a      	ldr	r2, [r3, #16]
 800d558:	07d1      	lsls	r1, r2, #31
 800d55a:	d502      	bpl.n	800d562 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d55c:	68da      	ldr	r2, [r3, #12]
 800d55e:	07d2      	lsls	r2, r2, #31
 800d560:	d45d      	bmi.n	800d61e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d562:	691a      	ldr	r2, [r3, #16]
 800d564:	0610      	lsls	r0, r2, #24
 800d566:	d502      	bpl.n	800d56e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d568:	68da      	ldr	r2, [r3, #12]
 800d56a:	0611      	lsls	r1, r2, #24
 800d56c:	d45f      	bmi.n	800d62e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d56e:	691a      	ldr	r2, [r3, #16]
 800d570:	0652      	lsls	r2, r2, #25
 800d572:	d502      	bpl.n	800d57a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d574:	68da      	ldr	r2, [r3, #12]
 800d576:	0650      	lsls	r0, r2, #25
 800d578:	d461      	bmi.n	800d63e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d57a:	691a      	ldr	r2, [r3, #16]
 800d57c:	0691      	lsls	r1, r2, #26
 800d57e:	d502      	bpl.n	800d586 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d580:	68da      	ldr	r2, [r3, #12]
 800d582:	0692      	lsls	r2, r2, #26
 800d584:	d443      	bmi.n	800d60e <HAL_TIM_IRQHandler+0xee>
}
 800d586:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d588:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d58c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d58e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d590:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d592:	69db      	ldr	r3, [r3, #28]
 800d594:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d598:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d59a:	d064      	beq.n	800d666 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d59c:	f7ff ffba 	bl	800d514 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d5a0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d5a2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d5a4:	7722      	strb	r2, [r4, #28]
 800d5a6:	e7d6      	b.n	800d556 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d5a8:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d5ac:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d5ae:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d5b0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d5b2:	69db      	ldr	r3, [r3, #28]
 800d5b4:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d5b6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d5b8:	d152      	bne.n	800d660 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d5ba:	f7ff ffa9 	bl	800d510 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d5be:	4620      	mov	r0, r4
 800d5c0:	f7ff ffaa 	bl	800d518 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d5c4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d5c6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d5c8:	7722      	strb	r2, [r4, #28]
 800d5ca:	e7be      	b.n	800d54a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d5cc:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d5d0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d5d2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d5d4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d5d6:	699b      	ldr	r3, [r3, #24]
 800d5d8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d5dc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d5de:	d13c      	bne.n	800d65a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d5e0:	f7ff ff96 	bl	800d510 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d5e4:	4620      	mov	r0, r4
 800d5e6:	f7ff ff97 	bl	800d518 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d5ea:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d5ec:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d5ee:	7722      	strb	r2, [r4, #28]
 800d5f0:	e7a5      	b.n	800d53e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d5f2:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d5f6:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d5f8:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d5fa:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d5fc:	699b      	ldr	r3, [r3, #24]
 800d5fe:	079b      	lsls	r3, r3, #30
 800d600:	d025      	beq.n	800d64e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d602:	f7ff ff87 	bl	800d514 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d606:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d608:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d60a:	7722      	strb	r2, [r4, #28]
 800d60c:	e791      	b.n	800d532 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d60e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d612:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d614:	611a      	str	r2, [r3, #16]
}
 800d616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d61a:	f000 b82b 	b.w	800d674 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d61e:	f06f 0201 	mvn.w	r2, #1
 800d622:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d624:	4620      	mov	r0, r4
 800d626:	f7f4 ffa9 	bl	800257c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d62a:	6823      	ldr	r3, [r4, #0]
 800d62c:	e799      	b.n	800d562 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d62e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d632:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d634:	4620      	mov	r0, r4
 800d636:	f000 f81f 	bl	800d678 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d63a:	6823      	ldr	r3, [r4, #0]
 800d63c:	e797      	b.n	800d56e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d63e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d642:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d644:	4620      	mov	r0, r4
 800d646:	f7ff ff69 	bl	800d51c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d64a:	6823      	ldr	r3, [r4, #0]
 800d64c:	e795      	b.n	800d57a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d64e:	f7ff ff5f 	bl	800d510 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d652:	4620      	mov	r0, r4
 800d654:	f7ff ff60 	bl	800d518 <HAL_TIM_PWM_PulseFinishedCallback>
 800d658:	e7d5      	b.n	800d606 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d65a:	f7ff ff5b 	bl	800d514 <HAL_TIM_IC_CaptureCallback>
 800d65e:	e7c4      	b.n	800d5ea <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d660:	f7ff ff58 	bl	800d514 <HAL_TIM_IC_CaptureCallback>
 800d664:	e7ae      	b.n	800d5c4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d666:	f7ff ff53 	bl	800d510 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d66a:	4620      	mov	r0, r4
 800d66c:	f7ff ff54 	bl	800d518 <HAL_TIM_PWM_PulseFinishedCallback>
 800d670:	e796      	b.n	800d5a0 <HAL_TIM_IRQHandler+0x80>
 800d672:	bf00      	nop

0800d674 <HAL_TIMEx_CommutCallback>:
 800d674:	4770      	bx	lr
 800d676:	bf00      	nop

0800d678 <HAL_TIMEx_BreakCallback>:
 800d678:	4770      	bx	lr
 800d67a:	bf00      	nop

0800d67c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d67c:	680b      	ldr	r3, [r1, #0]
{
 800d67e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d680:	b9d3      	cbnz	r3, 800d6b8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d682:	6803      	ldr	r3, [r0, #0]
 800d684:	684c      	ldr	r4, [r1, #4]
 800d686:	688a      	ldr	r2, [r1, #8]
 800d688:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d68c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d690:	4323      	orrs	r3, r4
 800d692:	4313      	orrs	r3, r2
 800d694:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d698:	4323      	orrs	r3, r4
 800d69a:	4313      	orrs	r3, r2
 800d69c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d6a0:	4323      	orrs	r3, r4
 800d6a2:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d6a6:	4313      	orrs	r3, r2
 800d6a8:	432b      	orrs	r3, r5
 800d6aa:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d6ac:	4323      	orrs	r3, r4
 800d6ae:	4313      	orrs	r3, r2
 800d6b0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d6b2:	bc30      	pop	{r4, r5}
 800d6b4:	2000      	movs	r0, #0
 800d6b6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d6b8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d6bc:	6803      	ldr	r3, [r0, #0]
 800d6be:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d6c2:	4323      	orrs	r3, r4
 800d6c4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d6c6:	4313      	orrs	r3, r2
 800d6c8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d6ca:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d6cc:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d6ce:	6843      	ldr	r3, [r0, #4]
 800d6d0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d6d4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d6d8:	4313      	orrs	r3, r2
 800d6da:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d6de:	4323      	orrs	r3, r4
 800d6e0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d6e4:	4313      	orrs	r3, r2
 800d6e6:	432b      	orrs	r3, r5
 800d6e8:	698a      	ldr	r2, [r1, #24]
 800d6ea:	4323      	orrs	r3, r4
 800d6ec:	4313      	orrs	r3, r2
 800d6ee:	6043      	str	r3, [r0, #4]
}
 800d6f0:	bc30      	pop	{r4, r5}
 800d6f2:	2000      	movs	r0, #0
 800d6f4:	4770      	bx	lr
 800d6f6:	bf00      	nop

0800d6f8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d6f8:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d6fa:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d6fc:	bb02      	cbnz	r2, 800d740 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d6fe:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d702:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d706:	3c01      	subs	r4, #1
 800d708:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d70c:	3a01      	subs	r2, #1
 800d70e:	4313      	orrs	r3, r2
 800d710:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d714:	3c01      	subs	r4, #1
 800d716:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d71a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d71e:	3a01      	subs	r2, #1
 800d720:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d724:	698a      	ldr	r2, [r1, #24]
 800d726:	1e69      	subs	r1, r5, #1
 800d728:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d72c:	1e61      	subs	r1, r4, #1
 800d72e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d732:	3a01      	subs	r2, #1
 800d734:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d738:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d73a:	bc30      	pop	{r4, r5}
 800d73c:	2000      	movs	r0, #0
 800d73e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d740:	68cc      	ldr	r4, [r1, #12]
 800d742:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d744:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d746:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d74a:	3c01      	subs	r4, #1
 800d74c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d750:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d754:	3a01      	subs	r2, #1
 800d756:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d75a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d75c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d760:	68c3      	ldr	r3, [r0, #12]
 800d762:	3c01      	subs	r4, #1
 800d764:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d768:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d76c:	3a01      	subs	r2, #1
 800d76e:	690c      	ldr	r4, [r1, #16]
 800d770:	4313      	orrs	r3, r2
 800d772:	698a      	ldr	r2, [r1, #24]
 800d774:	1e69      	subs	r1, r5, #1
 800d776:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d77a:	1e61      	subs	r1, r4, #1
 800d77c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d780:	3a01      	subs	r2, #1
 800d782:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d786:	60c3      	str	r3, [r0, #12]
}
 800d788:	bc30      	pop	{r4, r5}
 800d78a:	2000      	movs	r0, #0
 800d78c:	4770      	bx	lr
 800d78e:	bf00      	nop

0800d790 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d790:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d792:	680b      	ldr	r3, [r1, #0]
{
 800d794:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d796:	684a      	ldr	r2, [r1, #4]
{
 800d798:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d79a:	4313      	orrs	r3, r2
 800d79c:	6900      	ldr	r0, [r0, #16]
 800d79e:	68ca      	ldr	r2, [r1, #12]
 800d7a0:	0d80      	lsrs	r0, r0, #22
 800d7a2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d7a6:	688a      	ldr	r2, [r1, #8]
 800d7a8:	0580      	lsls	r0, r0, #22
 800d7aa:	4303      	orrs	r3, r0
 800d7ac:	3a01      	subs	r2, #1
 800d7ae:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d7b2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d7b4:	f7fc fcca 	bl	800a14c <HAL_GetTick>
 800d7b8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d7ba:	1c6b      	adds	r3, r5, #1
 800d7bc:	d105      	bne.n	800d7ca <FMC_SDRAM_SendCommand+0x3a>
 800d7be:	69a3      	ldr	r3, [r4, #24]
 800d7c0:	f013 0320 	ands.w	r3, r3, #32
 800d7c4:	d1fb      	bne.n	800d7be <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d7c6:	4618      	mov	r0, r3
}
 800d7c8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d7ca:	69a3      	ldr	r3, [r4, #24]
 800d7cc:	f013 0320 	ands.w	r3, r3, #32
 800d7d0:	d0f9      	beq.n	800d7c6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d7d2:	b125      	cbz	r5, 800d7de <FMC_SDRAM_SendCommand+0x4e>
 800d7d4:	f7fc fcba 	bl	800a14c <HAL_GetTick>
 800d7d8:	1b80      	subs	r0, r0, r6
 800d7da:	42a8      	cmp	r0, r5
 800d7dc:	d9ed      	bls.n	800d7ba <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d7de:	2003      	movs	r0, #3
}
 800d7e0:	bd70      	pop	{r4, r5, r6, pc}
 800d7e2:	bf00      	nop

0800d7e4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d7e4:	6943      	ldr	r3, [r0, #20]
 800d7e6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d7ea:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d7ec:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d7f0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d7f4:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d7f6:	6151      	str	r1, [r2, #20]
}
 800d7f8:	4770      	bx	lr
 800d7fa:	bf00      	nop

0800d7fc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d7fc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d7fe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d802:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d804:	f002 fafe 	bl	800fe04 <xTaskGetSchedulerState>
 800d808:	2801      	cmp	r0, #1
 800d80a:	d100      	bne.n	800d80e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d80c:	bd08      	pop	{r3, pc}
 800d80e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d812:	f000 bc3f 	b.w	800e094 <xPortSysTickHandler>
 800d816:	bf00      	nop

0800d818 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d818:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d81c:	b92b      	cbnz	r3, 800d82a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d81e:	4b06      	ldr	r3, [pc, #24]	; (800d838 <osKernelInitialize+0x20>)
 800d820:	6818      	ldr	r0, [r3, #0]
 800d822:	b928      	cbnz	r0, 800d830 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d824:	2201      	movs	r2, #1
 800d826:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d828:	4770      	bx	lr
    stat = osErrorISR;
 800d82a:	f06f 0005 	mvn.w	r0, #5
 800d82e:	4770      	bx	lr
    } else {
      stat = osError;
 800d830:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d834:	4770      	bx	lr
 800d836:	bf00      	nop
 800d838:	20002264 	.word	0x20002264

0800d83c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d83c:	b510      	push	{r4, lr}
 800d83e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d842:	b974      	cbnz	r4, 800d862 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d844:	4b08      	ldr	r3, [pc, #32]	; (800d868 <osKernelStart+0x2c>)
 800d846:	681a      	ldr	r2, [r3, #0]
 800d848:	2a01      	cmp	r2, #1
 800d84a:	d107      	bne.n	800d85c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d84c:	4907      	ldr	r1, [pc, #28]	; (800d86c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d84e:	2202      	movs	r2, #2
 800d850:	77cc      	strb	r4, [r1, #31]
 800d852:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d854:	f002 f8b0 	bl	800f9b8 <vTaskStartScheduler>
      stat = osOK;
 800d858:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d85a:	bd10      	pop	{r4, pc}
      stat = osError;
 800d85c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d860:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d862:	f06f 0005 	mvn.w	r0, #5
}
 800d866:	bd10      	pop	{r4, pc}
 800d868:	20002264 	.word	0x20002264
 800d86c:	e000ed00 	.word	0xe000ed00

0800d870 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d870:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d872:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d874:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d876:	4615      	mov	r5, r2
  hTask = NULL;
 800d878:	9405      	str	r4, [sp, #20]
 800d87a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d87e:	b9ea      	cbnz	r2, 800d8bc <osThreadNew+0x4c>
 800d880:	b350      	cbz	r0, 800d8d8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d882:	b1f5      	cbz	r5, 800d8c2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d884:	69ab      	ldr	r3, [r5, #24]
 800d886:	bb5b      	cbnz	r3, 800d8e0 <osThreadNew+0x70>
 800d888:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d88a:	686a      	ldr	r2, [r5, #4]
 800d88c:	07d2      	lsls	r2, r2, #31
 800d88e:	d423      	bmi.n	800d8d8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d890:	696e      	ldr	r6, [r5, #20]
 800d892:	b34e      	cbz	r6, 800d8e8 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d894:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d898:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d89a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d89c:	b34c      	cbz	r4, 800d8f2 <osThreadNew+0x82>
 800d89e:	68ea      	ldr	r2, [r5, #12]
 800d8a0:	2aab      	cmp	r2, #171	; 0xab
 800d8a2:	d919      	bls.n	800d8d8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d8a4:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d8a6:	b1bd      	cbz	r5, 800d8d8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d8a8:	b1b6      	cbz	r6, 800d8d8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d8aa:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d8ae:	9300      	str	r3, [sp, #0]
 800d8b0:	4662      	mov	r2, ip
 800d8b2:	460b      	mov	r3, r1
 800d8b4:	4639      	mov	r1, r7
 800d8b6:	f001 ffbd 	bl	800f834 <xTaskCreateStatic>
 800d8ba:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d8bc:	4620      	mov	r0, r4
 800d8be:	b007      	add	sp, #28
 800d8c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8c2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d8c4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d8c6:	ac05      	add	r4, sp, #20
 800d8c8:	9300      	str	r3, [sp, #0]
 800d8ca:	9401      	str	r4, [sp, #4]
 800d8cc:	460b      	mov	r3, r1
 800d8ce:	4629      	mov	r1, r5
 800d8d0:	f001 ffea 	bl	800f8a8 <xTaskCreate>
 800d8d4:	2801      	cmp	r0, #1
 800d8d6:	d00a      	beq.n	800d8ee <osThreadNew+0x7e>
        return (NULL);
 800d8d8:	2400      	movs	r4, #0
}
 800d8da:	4620      	mov	r0, r4
 800d8dc:	b007      	add	sp, #28
 800d8de:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d8e0:	1e5c      	subs	r4, r3, #1
 800d8e2:	2c37      	cmp	r4, #55	; 0x37
 800d8e4:	d9d1      	bls.n	800d88a <osThreadNew+0x1a>
 800d8e6:	e7f7      	b.n	800d8d8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d8e8:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d8ec:	e7d4      	b.n	800d898 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d8ee:	9c05      	ldr	r4, [sp, #20]
 800d8f0:	e7e4      	b.n	800d8bc <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d8f2:	68ee      	ldr	r6, [r5, #12]
 800d8f4:	2e00      	cmp	r6, #0
 800d8f6:	d1e1      	bne.n	800d8bc <osThreadNew+0x4c>
 800d8f8:	692d      	ldr	r5, [r5, #16]
 800d8fa:	2d00      	cmp	r5, #0
 800d8fc:	d1de      	bne.n	800d8bc <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d8fe:	fa1f f28c 	uxth.w	r2, ip
 800d902:	463d      	mov	r5, r7
 800d904:	e7df      	b.n	800d8c6 <osThreadNew+0x56>
 800d906:	bf00      	nop

0800d908 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d908:	b510      	push	{r4, lr}
 800d90a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d90e:	b92c      	cbnz	r4, 800d91c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d910:	b900      	cbnz	r0, 800d914 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d912:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d914:	f001 fffa 	bl	800f90c <vTaskDelay>
    stat = osOK;
 800d918:	4620      	mov	r0, r4
}
 800d91a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d91c:	f06f 0005 	mvn.w	r0, #5
}
 800d920:	bd10      	pop	{r4, pc}
 800d922:	bf00      	nop

0800d924 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d924:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d926:	b083      	sub	sp, #12
 800d928:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d92c:	b9fe      	cbnz	r6, 800d96e <osSemaphoreNew+0x4a>
 800d92e:	b1f0      	cbz	r0, 800d96e <osSemaphoreNew+0x4a>
 800d930:	4288      	cmp	r0, r1
 800d932:	460f      	mov	r7, r1
 800d934:	d31b      	bcc.n	800d96e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d936:	4615      	mov	r5, r2
 800d938:	b192      	cbz	r2, 800d960 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d93a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d93e:	b1d2      	cbz	r2, 800d976 <osSemaphoreNew+0x52>
 800d940:	2b4f      	cmp	r3, #79	; 0x4f
 800d942:	d914      	bls.n	800d96e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d944:	2801      	cmp	r0, #1
 800d946:	d038      	beq.n	800d9ba <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d948:	f000 fd8a 	bl	800e460 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d94c:	4604      	mov	r4, r0
 800d94e:	b170      	cbz	r0, 800d96e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d950:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d952:	4620      	mov	r0, r4
 800d954:	4629      	mov	r1, r5
 800d956:	f001 fc35 	bl	800f1c4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d95a:	4620      	mov	r0, r4
 800d95c:	b003      	add	sp, #12
 800d95e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d960:	2801      	cmp	r0, #1
 800d962:	d012      	beq.n	800d98a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d964:	f000 fddc 	bl	800e520 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d968:	4604      	mov	r4, r0
 800d96a:	2800      	cmp	r0, #0
 800d96c:	d1f1      	bne.n	800d952 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d96e:	2400      	movs	r4, #0
}
 800d970:	4620      	mov	r0, r4
 800d972:	b003      	add	sp, #12
 800d974:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d976:	2b00      	cmp	r3, #0
 800d978:	d1f9      	bne.n	800d96e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d97a:	2801      	cmp	r0, #1
 800d97c:	d005      	beq.n	800d98a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d97e:	f000 fdcf 	bl	800e520 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d982:	4604      	mov	r4, r0
 800d984:	2800      	cmp	r0, #0
 800d986:	d1e3      	bne.n	800d950 <osSemaphoreNew+0x2c>
 800d988:	e7f1      	b.n	800d96e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d98a:	2203      	movs	r2, #3
 800d98c:	2100      	movs	r1, #0
 800d98e:	2001      	movs	r0, #1
 800d990:	f000 fd24 	bl	800e3dc <xQueueGenericCreate>
 800d994:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d996:	2c00      	cmp	r4, #0
 800d998:	d0e9      	beq.n	800d96e <osSemaphoreNew+0x4a>
 800d99a:	b917      	cbnz	r7, 800d9a2 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d99c:	2d00      	cmp	r5, #0
 800d99e:	d1d7      	bne.n	800d950 <osSemaphoreNew+0x2c>
 800d9a0:	e7d7      	b.n	800d952 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d9a2:	2300      	movs	r3, #0
 800d9a4:	461a      	mov	r2, r3
 800d9a6:	4619      	mov	r1, r3
 800d9a8:	4620      	mov	r0, r4
 800d9aa:	f000 fdff 	bl	800e5ac <xQueueGenericSend>
 800d9ae:	2801      	cmp	r0, #1
 800d9b0:	d0f4      	beq.n	800d99c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d9b2:	4620      	mov	r0, r4
 800d9b4:	f001 fbc0 	bl	800f138 <vQueueDelete>
 800d9b8:	e7d9      	b.n	800d96e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d9ba:	4613      	mov	r3, r2
 800d9bc:	2203      	movs	r2, #3
 800d9be:	9200      	str	r2, [sp, #0]
 800d9c0:	4631      	mov	r1, r6
 800d9c2:	4632      	mov	r2, r6
 800d9c4:	f000 fc9c 	bl	800e300 <xQueueGenericCreateStatic>
 800d9c8:	4604      	mov	r4, r0
 800d9ca:	e7e4      	b.n	800d996 <osSemaphoreNew+0x72>

0800d9cc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d9cc:	b370      	cbz	r0, 800da2c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d9ce:	b510      	push	{r4, lr}
 800d9d0:	460c      	mov	r4, r1
 800d9d2:	b082      	sub	sp, #8
 800d9d4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d9d8:	b1c3      	cbz	r3, 800da0c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d9da:	bb21      	cbnz	r1, 800da26 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d9dc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d9de:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d9e0:	f001 fb28 	bl	800f034 <xQueueReceiveFromISR>
 800d9e4:	2801      	cmp	r0, #1
 800d9e6:	d11a      	bne.n	800da1e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d9e8:	9b01      	ldr	r3, [sp, #4]
 800d9ea:	b913      	cbnz	r3, 800d9f2 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d9ec:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d9ee:	b002      	add	sp, #8
 800d9f0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d9f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d9f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d9fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d9fe:	f3bf 8f4f 	dsb	sy
 800da02:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800da06:	4620      	mov	r0, r4
}
 800da08:	b002      	add	sp, #8
 800da0a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800da0c:	f001 f988 	bl	800ed20 <xQueueSemaphoreTake>
 800da10:	2801      	cmp	r0, #1
 800da12:	d0eb      	beq.n	800d9ec <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800da14:	b11c      	cbz	r4, 800da1e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800da16:	f06f 0001 	mvn.w	r0, #1
}
 800da1a:	b002      	add	sp, #8
 800da1c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800da1e:	f06f 0002 	mvn.w	r0, #2
}
 800da22:	b002      	add	sp, #8
 800da24:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800da26:	f06f 0003 	mvn.w	r0, #3
 800da2a:	e7e0      	b.n	800d9ee <osSemaphoreAcquire+0x22>
 800da2c:	f06f 0003 	mvn.w	r0, #3
}
 800da30:	4770      	bx	lr
 800da32:	bf00      	nop

0800da34 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800da34:	b330      	cbz	r0, 800da84 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800da36:	b510      	push	{r4, lr}
 800da38:	b082      	sub	sp, #8
 800da3a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800da3e:	b1ab      	cbz	r3, 800da6c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800da40:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800da42:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800da44:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800da46:	f000 ff95 	bl	800e974 <xQueueGiveFromISR>
 800da4a:	2801      	cmp	r0, #1
 800da4c:	d117      	bne.n	800da7e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800da4e:	9b01      	ldr	r3, [sp, #4]
 800da50:	b193      	cbz	r3, 800da78 <osSemaphoreRelease+0x44>
 800da52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da5e:	f3bf 8f4f 	dsb	sy
 800da62:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800da66:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800da68:	b002      	add	sp, #8
 800da6a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800da6c:	461a      	mov	r2, r3
 800da6e:	4619      	mov	r1, r3
 800da70:	f000 fd9c 	bl	800e5ac <xQueueGenericSend>
 800da74:	2801      	cmp	r0, #1
 800da76:	d102      	bne.n	800da7e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800da78:	2000      	movs	r0, #0
}
 800da7a:	b002      	add	sp, #8
 800da7c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800da7e:	f06f 0002 	mvn.w	r0, #2
 800da82:	e7fa      	b.n	800da7a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800da84:	f06f 0003 	mvn.w	r0, #3
}
 800da88:	4770      	bx	lr
 800da8a:	bf00      	nop

0800da8c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800da8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da8e:	b085      	sub	sp, #20
 800da90:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800da94:	b987      	cbnz	r7, 800dab8 <osMessageQueueNew+0x2c>
 800da96:	4605      	mov	r5, r0
 800da98:	b170      	cbz	r0, 800dab8 <osMessageQueueNew+0x2c>
 800da9a:	b169      	cbz	r1, 800dab8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800da9c:	4614      	mov	r4, r2
 800da9e:	b1ea      	cbz	r2, 800dadc <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800daa0:	6893      	ldr	r3, [r2, #8]
 800daa2:	b163      	cbz	r3, 800dabe <osMessageQueueNew+0x32>
 800daa4:	68d2      	ldr	r2, [r2, #12]
 800daa6:	2a4f      	cmp	r2, #79	; 0x4f
 800daa8:	d906      	bls.n	800dab8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800daaa:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800daac:	b122      	cbz	r2, 800dab8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800daae:	6966      	ldr	r6, [r4, #20]
 800dab0:	fb01 f505 	mul.w	r5, r1, r5
 800dab4:	42ae      	cmp	r6, r5
 800dab6:	d21c      	bcs.n	800daf2 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800dab8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800daba:	b005      	add	sp, #20
 800dabc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800dabe:	68d3      	ldr	r3, [r2, #12]
 800dac0:	2b00      	cmp	r3, #0
 800dac2:	d1f9      	bne.n	800dab8 <osMessageQueueNew+0x2c>
 800dac4:	6913      	ldr	r3, [r2, #16]
 800dac6:	2b00      	cmp	r3, #0
 800dac8:	d1f6      	bne.n	800dab8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800daca:	6952      	ldr	r2, [r2, #20]
 800dacc:	2a00      	cmp	r2, #0
 800dace:	d1f3      	bne.n	800dab8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800dad0:	f000 fc84 	bl	800e3dc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800dad4:	2800      	cmp	r0, #0
 800dad6:	d0ef      	beq.n	800dab8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800dad8:	6824      	ldr	r4, [r4, #0]
 800dada:	e003      	b.n	800dae4 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800dadc:	f000 fc7e 	bl	800e3dc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800dae0:	2800      	cmp	r0, #0
 800dae2:	d0e9      	beq.n	800dab8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800dae4:	4621      	mov	r1, r4
 800dae6:	9003      	str	r0, [sp, #12]
 800dae8:	f001 fb6c 	bl	800f1c4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800daec:	9803      	ldr	r0, [sp, #12]
}
 800daee:	b005      	add	sp, #20
 800daf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800daf2:	9700      	str	r7, [sp, #0]
 800daf4:	f000 fc04 	bl	800e300 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800daf8:	2800      	cmp	r0, #0
 800dafa:	d1ed      	bne.n	800dad8 <osMessageQueueNew+0x4c>
 800dafc:	e7dc      	b.n	800dab8 <osMessageQueueNew+0x2c>
 800dafe:	bf00      	nop

0800db00 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800db00:	b570      	push	{r4, r5, r6, lr}
 800db02:	461c      	mov	r4, r3
 800db04:	b082      	sub	sp, #8
 800db06:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800db0a:	b1be      	cbz	r6, 800db3c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800db0c:	b350      	cbz	r0, 800db64 <osMessageQueuePut+0x64>
 800db0e:	b349      	cbz	r1, 800db64 <osMessageQueuePut+0x64>
 800db10:	bb43      	cbnz	r3, 800db64 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800db12:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800db14:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800db16:	f000 fec7 	bl	800e8a8 <xQueueGenericSendFromISR>
 800db1a:	2801      	cmp	r0, #1
 800db1c:	d11e      	bne.n	800db5c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800db1e:	9b01      	ldr	r3, [sp, #4]
 800db20:	b1cb      	cbz	r3, 800db56 <osMessageQueuePut+0x56>
 800db22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db2e:	f3bf 8f4f 	dsb	sy
 800db32:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800db36:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800db38:	b002      	add	sp, #8
 800db3a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800db3c:	b190      	cbz	r0, 800db64 <osMessageQueuePut+0x64>
 800db3e:	b189      	cbz	r1, 800db64 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800db40:	4633      	mov	r3, r6
 800db42:	4622      	mov	r2, r4
 800db44:	f000 fd32 	bl	800e5ac <xQueueGenericSend>
 800db48:	2801      	cmp	r0, #1
 800db4a:	d004      	beq.n	800db56 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800db4c:	b134      	cbz	r4, 800db5c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800db4e:	f06f 0001 	mvn.w	r0, #1
}
 800db52:	b002      	add	sp, #8
 800db54:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800db56:	2000      	movs	r0, #0
}
 800db58:	b002      	add	sp, #8
 800db5a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800db5c:	f06f 0002 	mvn.w	r0, #2
}
 800db60:	b002      	add	sp, #8
 800db62:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800db64:	f06f 0003 	mvn.w	r0, #3
 800db68:	e7e6      	b.n	800db38 <osMessageQueuePut+0x38>
 800db6a:	bf00      	nop

0800db6c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800db6c:	b530      	push	{r4, r5, lr}
 800db6e:	461c      	mov	r4, r3
 800db70:	b083      	sub	sp, #12
 800db72:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800db76:	b1bb      	cbz	r3, 800dba8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800db78:	b348      	cbz	r0, 800dbce <osMessageQueueGet+0x62>
 800db7a:	b341      	cbz	r1, 800dbce <osMessageQueueGet+0x62>
 800db7c:	bb3c      	cbnz	r4, 800dbce <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800db7e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800db80:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800db82:	f001 fa57 	bl	800f034 <xQueueReceiveFromISR>
 800db86:	2801      	cmp	r0, #1
 800db88:	d11d      	bne.n	800dbc6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800db8a:	9b01      	ldr	r3, [sp, #4]
 800db8c:	b1c3      	cbz	r3, 800dbc0 <osMessageQueueGet+0x54>
 800db8e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db92:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db96:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db9a:	f3bf 8f4f 	dsb	sy
 800db9e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dba2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800dba4:	b003      	add	sp, #12
 800dba6:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800dba8:	b188      	cbz	r0, 800dbce <osMessageQueueGet+0x62>
 800dbaa:	b181      	cbz	r1, 800dbce <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800dbac:	4622      	mov	r2, r4
 800dbae:	f000 ff39 	bl	800ea24 <xQueueReceive>
 800dbb2:	2801      	cmp	r0, #1
 800dbb4:	d004      	beq.n	800dbc0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800dbb6:	b134      	cbz	r4, 800dbc6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800dbb8:	f06f 0001 	mvn.w	r0, #1
}
 800dbbc:	b003      	add	sp, #12
 800dbbe:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800dbc0:	2000      	movs	r0, #0
}
 800dbc2:	b003      	add	sp, #12
 800dbc4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800dbc6:	f06f 0002 	mvn.w	r0, #2
}
 800dbca:	b003      	add	sp, #12
 800dbcc:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800dbce:	f06f 0003 	mvn.w	r0, #3
 800dbd2:	e7e7      	b.n	800dba4 <osMessageQueueGet+0x38>

0800dbd4 <osMessageQueueGetCount>:
 800dbd4:	b130      	cbz	r0, 800dbe4 <osMessageQueueGetCount+0x10>
 800dbd6:	f3ef 8305 	mrs	r3, IPSR
 800dbda:	b10b      	cbz	r3, 800dbe0 <osMessageQueueGetCount+0xc>
 800dbdc:	f001 ba9e 	b.w	800f11c <uxQueueMessagesWaitingFromISR>
 800dbe0:	f001 ba86 	b.w	800f0f0 <uxQueueMessagesWaiting>
 800dbe4:	4770      	bx	lr
 800dbe6:	bf00      	nop

0800dbe8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800dbe8:	4b04      	ldr	r3, [pc, #16]	; (800dbfc <vApplicationGetIdleTaskMemory+0x14>)
 800dbea:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800dbec:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800dbee:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800dbf0:	4c03      	ldr	r4, [pc, #12]	; (800dc00 <vApplicationGetIdleTaskMemory+0x18>)
 800dbf2:	600c      	str	r4, [r1, #0]
}
 800dbf4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800dbf8:	6013      	str	r3, [r2, #0]
}
 800dbfa:	4770      	bx	lr
 800dbfc:	200021b8 	.word	0x200021b8
 800dc00:	20001fb8 	.word	0x20001fb8

0800dc04 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800dc04:	4b05      	ldr	r3, [pc, #20]	; (800dc1c <vApplicationGetTimerTaskMemory+0x18>)
 800dc06:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800dc08:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800dc0a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800dc0e:	4c04      	ldr	r4, [pc, #16]	; (800dc20 <vApplicationGetTimerTaskMemory+0x1c>)
 800dc10:	600c      	str	r4, [r1, #0]
}
 800dc12:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800dc16:	6013      	str	r3, [r2, #0]
}
 800dc18:	4770      	bx	lr
 800dc1a:	bf00      	nop
 800dc1c:	20002668 	.word	0x20002668
 800dc20:	20002268 	.word	0x20002268

0800dc24 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800dc24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc28:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800dc2a:	f001 ff41 	bl	800fab0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800dc2e:	4a54      	ldr	r2, [pc, #336]	; (800dd80 <pvPortMalloc+0x15c>)
 800dc30:	6816      	ldr	r6, [r2, #0]
 800dc32:	2e00      	cmp	r6, #0
 800dc34:	d06e      	beq.n	800dd14 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800dc36:	4b53      	ldr	r3, [pc, #332]	; (800dd84 <pvPortMalloc+0x160>)
 800dc38:	681f      	ldr	r7, [r3, #0]
 800dc3a:	423d      	tst	r5, r7
 800dc3c:	d12e      	bne.n	800dc9c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800dc3e:	b36d      	cbz	r5, 800dc9c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800dc40:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800dc44:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800dc46:	bf1c      	itt	ne
 800dc48:	f024 0407 	bicne.w	r4, r4, #7
 800dc4c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800dc4e:	b32c      	cbz	r4, 800dc9c <pvPortMalloc+0x78>
 800dc50:	f8df c144 	ldr.w	ip, [pc, #324]	; 800dd98 <pvPortMalloc+0x174>
 800dc54:	f8dc 5000 	ldr.w	r5, [ip]
 800dc58:	42a5      	cmp	r5, r4
 800dc5a:	d31f      	bcc.n	800dc9c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800dc5c:	484a      	ldr	r0, [pc, #296]	; (800dd88 <pvPortMalloc+0x164>)
 800dc5e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800dc60:	e003      	b.n	800dc6a <pvPortMalloc+0x46>
 800dc62:	681a      	ldr	r2, [r3, #0]
 800dc64:	b122      	cbz	r2, 800dc70 <pvPortMalloc+0x4c>
 800dc66:	4618      	mov	r0, r3
 800dc68:	4613      	mov	r3, r2
 800dc6a:	6859      	ldr	r1, [r3, #4]
 800dc6c:	42a1      	cmp	r1, r4
 800dc6e:	d3f8      	bcc.n	800dc62 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800dc70:	42b3      	cmp	r3, r6
 800dc72:	d013      	beq.n	800dc9c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800dc74:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dc76:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800dc78:	f858 eb08 	ldr.w	lr, [r8], #8
 800dc7c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dc80:	2a10      	cmp	r2, #16
 800dc82:	d929      	bls.n	800dcd8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dc84:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800dc86:	0748      	lsls	r0, r1, #29
 800dc88:	d00f      	beq.n	800dcaa <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800dc8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc8e:	f383 8811 	msr	BASEPRI, r3
 800dc92:	f3bf 8f6f 	isb	sy
 800dc96:	f3bf 8f4f 	dsb	sy
 800dc9a:	e7fe      	b.n	800dc9a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dc9c:	f001 ff10 	bl	800fac0 <xTaskResumeAll>
 800dca0:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dca4:	4640      	mov	r0, r8
 800dca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800dcaa:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dcac:	4a36      	ldr	r2, [pc, #216]	; (800dd88 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dcae:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dcb0:	4614      	mov	r4, r2
 800dcb2:	6812      	ldr	r2, [r2, #0]
 800dcb4:	4291      	cmp	r1, r2
 800dcb6:	d8fb      	bhi.n	800dcb0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dcb8:	6860      	ldr	r0, [r4, #4]
 800dcba:	eb04 0e00 	add.w	lr, r4, r0
 800dcbe:	4571      	cmp	r1, lr
 800dcc0:	d04b      	beq.n	800dd5a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dcc2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dcc6:	eb01 000e 	add.w	r0, r1, lr
 800dcca:	4282      	cmp	r2, r0
 800dccc:	d051      	beq.n	800dd72 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dcce:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dcd0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dcd2:	bf18      	it	ne
 800dcd4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dcd6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dcd8:	4a2c      	ldr	r2, [pc, #176]	; (800dd8c <pvPortMalloc+0x168>)
 800dcda:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dcdc:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dcde:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800dce0:	bf38      	it	cc
 800dce2:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800dce4:	4a2a      	ldr	r2, [pc, #168]	; (800dd90 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dce6:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800dcea:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800dcec:	2000      	movs	r0, #0
 800dcee:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800dcf2:	6813      	ldr	r3, [r2, #0]
 800dcf4:	3301      	adds	r3, #1
 800dcf6:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800dcf8:	f001 fee2 	bl	800fac0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800dcfc:	f018 0f07 	tst.w	r8, #7
 800dd00:	d0d0      	beq.n	800dca4 <pvPortMalloc+0x80>
 800dd02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd06:	f383 8811 	msr	BASEPRI, r3
 800dd0a:	f3bf 8f6f 	isb	sy
 800dd0e:	f3bf 8f4f 	dsb	sy
 800dd12:	e7fe      	b.n	800dd12 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800dd14:	4b1f      	ldr	r3, [pc, #124]	; (800dd94 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800dd16:	075e      	lsls	r6, r3, #29
 800dd18:	d118      	bne.n	800dd4c <pvPortMalloc+0x128>
 800dd1a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800dd1e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800dd20:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dd22:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800dd26:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dd28:	4a18      	ldr	r2, [pc, #96]	; (800dd8c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dd2a:	4817      	ldr	r0, [pc, #92]	; (800dd88 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dd2c:	4c15      	ldr	r4, [pc, #84]	; (800dd84 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800dd2e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800dd30:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dd32:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dd34:	4a18      	ldr	r2, [pc, #96]	; (800dd98 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dd36:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800dd3a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800dd3c:	2200      	movs	r2, #0
 800dd3e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dd40:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800dd42:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800dd46:	e9c1 6300 	strd	r6, r3, [r1]
}
 800dd4a:	e776      	b.n	800dc3a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800dd4c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800dd4e:	f021 0107 	bic.w	r1, r1, #7
 800dd52:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dd56:	460b      	mov	r3, r1
 800dd58:	e7e2      	b.n	800dd20 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd5a:	6849      	ldr	r1, [r1, #4]
 800dd5c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd60:	eb04 010e 	add.w	r1, r4, lr
 800dd64:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dd66:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd6a:	d001      	beq.n	800dd70 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd6c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800dd6e:	e7b2      	b.n	800dcd6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dd70:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dd72:	42b2      	cmp	r2, r6
 800dd74:	d0ab      	beq.n	800dcce <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dd76:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd78:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dd7a:	4470      	add	r0, lr
 800dd7c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dd7e:	e7a6      	b.n	800dcce <pvPortMalloc+0xaa>
 800dd80:	20002714 	.word	0x20002714
 800dd84:	20012718 	.word	0x20012718
 800dd88:	2001272c 	.word	0x2001272c
 800dd8c:	20012720 	.word	0x20012720
 800dd90:	20012724 	.word	0x20012724
 800dd94:	20002718 	.word	0x20002718
 800dd98:	2001271c 	.word	0x2001271c

0800dd9c <vPortFree>:
	if( pv != NULL )
 800dd9c:	b1d0      	cbz	r0, 800ddd4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dd9e:	4a2c      	ldr	r2, [pc, #176]	; (800de50 <vPortFree+0xb4>)
 800dda0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dda4:	6812      	ldr	r2, [r2, #0]
 800dda6:	4213      	tst	r3, r2
 800dda8:	d00b      	beq.n	800ddc2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ddaa:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ddae:	b191      	cbz	r1, 800ddd6 <vPortFree+0x3a>
 800ddb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddb4:	f383 8811 	msr	BASEPRI, r3
 800ddb8:	f3bf 8f6f 	isb	sy
 800ddbc:	f3bf 8f4f 	dsb	sy
 800ddc0:	e7fe      	b.n	800ddc0 <vPortFree+0x24>
 800ddc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddc6:	f383 8811 	msr	BASEPRI, r3
 800ddca:	f3bf 8f6f 	isb	sy
 800ddce:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ddd2:	e7fe      	b.n	800ddd2 <vPortFree+0x36>
 800ddd4:	4770      	bx	lr
{
 800ddd6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ddd8:	ea23 0302 	bic.w	r3, r3, r2
{
 800dddc:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ddde:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dde2:	4c1c      	ldr	r4, [pc, #112]	; (800de54 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dde4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800dde6:	f001 fe63 	bl	800fab0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ddea:	9801      	ldr	r0, [sp, #4]
 800ddec:	6822      	ldr	r2, [r4, #0]
 800ddee:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ddf2:	4b19      	ldr	r3, [pc, #100]	; (800de58 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ddf4:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800ddf6:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ddf8:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ddfa:	461a      	mov	r2, r3
 800ddfc:	681b      	ldr	r3, [r3, #0]
 800ddfe:	4298      	cmp	r0, r3
 800de00:	d8fb      	bhi.n	800ddfa <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800de02:	6854      	ldr	r4, [r2, #4]
 800de04:	eb02 0e04 	add.w	lr, r2, r4
 800de08:	4570      	cmp	r0, lr
 800de0a:	d010      	beq.n	800de2e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800de0c:	eb00 0c01 	add.w	ip, r0, r1
 800de10:	4563      	cmp	r3, ip
 800de12:	d014      	beq.n	800de3e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800de14:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800de16:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800de18:	bf18      	it	ne
 800de1a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800de1c:	4a0f      	ldr	r2, [pc, #60]	; (800de5c <vPortFree+0xc0>)
 800de1e:	6813      	ldr	r3, [r2, #0]
 800de20:	3301      	adds	r3, #1
 800de22:	6013      	str	r3, [r2, #0]
}
 800de24:	b002      	add	sp, #8
 800de26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800de2a:	f001 be49 	b.w	800fac0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800de2e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800de30:	1850      	adds	r0, r2, r1
 800de32:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800de34:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800de36:	d001      	beq.n	800de3c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800de38:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800de3a:	e7ef      	b.n	800de1c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800de3c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800de3e:	4c08      	ldr	r4, [pc, #32]	; (800de60 <vPortFree+0xc4>)
 800de40:	6824      	ldr	r4, [r4, #0]
 800de42:	42a3      	cmp	r3, r4
 800de44:	d0e6      	beq.n	800de14 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800de46:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800de4a:	4421      	add	r1, r4
 800de4c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800de4e:	e7e1      	b.n	800de14 <vPortFree+0x78>
 800de50:	20012718 	.word	0x20012718
 800de54:	2001271c 	.word	0x2001271c
 800de58:	2001272c 	.word	0x2001272c
 800de5c:	20012728 	.word	0x20012728
 800de60:	20002714 	.word	0x20002714

0800de64 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800de64:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800de68:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800de6c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800de6e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800de72:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800de76:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800de78:	4770      	bx	lr
 800de7a:	bf00      	nop

0800de7c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800de7c:	2300      	movs	r3, #0
 800de7e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800de80:	4770      	bx	lr
 800de82:	bf00      	nop

0800de84 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800de84:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800de86:	689a      	ldr	r2, [r3, #8]
 800de88:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800de8a:	6802      	ldr	r2, [r0, #0]
{
 800de8c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800de8e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800de90:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800de92:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800de94:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800de96:	6099      	str	r1, [r3, #8]
}
 800de98:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800de9c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800de9e:	6002      	str	r2, [r0, #0]
}
 800dea0:	4770      	bx	lr
 800dea2:	bf00      	nop

0800dea4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800dea4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800dea6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800dea8:	1c6b      	adds	r3, r5, #1
 800deaa:	d010      	beq.n	800dece <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800deac:	f100 0308 	add.w	r3, r0, #8
 800deb0:	461c      	mov	r4, r3
 800deb2:	685b      	ldr	r3, [r3, #4]
 800deb4:	681a      	ldr	r2, [r3, #0]
 800deb6:	42aa      	cmp	r2, r5
 800deb8:	d9fa      	bls.n	800deb0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800deba:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800debc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800debe:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800dec0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800dec2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800dec4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800dec6:	6108      	str	r0, [r1, #16]
}
 800dec8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800deca:	6002      	str	r2, [r0, #0]
}
 800decc:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800dece:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ded0:	6863      	ldr	r3, [r4, #4]
 800ded2:	e7f2      	b.n	800deba <vListInsert+0x16>

0800ded4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800ded4:	6903      	ldr	r3, [r0, #16]
{
 800ded6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ded8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800dedc:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dede:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800dee0:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800dee2:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800dee4:	bf08      	it	eq
 800dee6:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800dee8:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800deea:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800deee:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800def0:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800def2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800def4:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800def6:	6818      	ldr	r0, [r3, #0]
}
 800def8:	4770      	bx	lr
 800defa:	bf00      	nop

0800defc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800defc:	4808      	ldr	r0, [pc, #32]	; (800df20 <prvPortStartFirstTask+0x24>)
 800defe:	6800      	ldr	r0, [r0, #0]
 800df00:	6800      	ldr	r0, [r0, #0]
 800df02:	f380 8808 	msr	MSP, r0
 800df06:	f04f 0000 	mov.w	r0, #0
 800df0a:	f380 8814 	msr	CONTROL, r0
 800df0e:	b662      	cpsie	i
 800df10:	b661      	cpsie	f
 800df12:	f3bf 8f4f 	dsb	sy
 800df16:	f3bf 8f6f 	isb	sy
 800df1a:	df00      	svc	0
 800df1c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800df1e:	0000      	.short	0x0000
 800df20:	e000ed08 	.word	0xe000ed08

0800df24 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800df24:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800df34 <vPortEnableVFP+0x10>
 800df28:	6801      	ldr	r1, [r0, #0]
 800df2a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800df2e:	6001      	str	r1, [r0, #0]
 800df30:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800df32:	0000      	.short	0x0000
 800df34:	e000ed88 	.word	0xe000ed88

0800df38 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800df38:	4b0e      	ldr	r3, [pc, #56]	; (800df74 <prvTaskExitError+0x3c>)
 800df3a:	681b      	ldr	r3, [r3, #0]
{
 800df3c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800df3e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800df40:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800df42:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800df44:	d008      	beq.n	800df58 <prvTaskExitError+0x20>
 800df46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df4a:	f383 8811 	msr	BASEPRI, r3
 800df4e:	f3bf 8f6f 	isb	sy
 800df52:	f3bf 8f4f 	dsb	sy
 800df56:	e7fe      	b.n	800df56 <prvTaskExitError+0x1e>
 800df58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df5c:	f383 8811 	msr	BASEPRI, r3
 800df60:	f3bf 8f6f 	isb	sy
 800df64:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800df68:	9b01      	ldr	r3, [sp, #4]
 800df6a:	2b00      	cmp	r3, #0
 800df6c:	d0fc      	beq.n	800df68 <prvTaskExitError+0x30>
}
 800df6e:	b002      	add	sp, #8
 800df70:	4770      	bx	lr
 800df72:	bf00      	nop
 800df74:	20000084 	.word	0x20000084

0800df78 <pxPortInitialiseStack>:
{
 800df78:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800df7a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800df7e:	4c07      	ldr	r4, [pc, #28]	; (800df9c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800df80:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800df84:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800df88:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800df8c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800df90:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800df94:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df98:	3844      	subs	r0, #68	; 0x44
 800df9a:	4770      	bx	lr
 800df9c:	0800df39 	.word	0x0800df39

0800dfa0 <SVC_Handler>:
	__asm volatile (
 800dfa0:	4b07      	ldr	r3, [pc, #28]	; (800dfc0 <pxCurrentTCBConst2>)
 800dfa2:	6819      	ldr	r1, [r3, #0]
 800dfa4:	6808      	ldr	r0, [r1, #0]
 800dfa6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfaa:	f380 8809 	msr	PSP, r0
 800dfae:	f3bf 8f6f 	isb	sy
 800dfb2:	f04f 0000 	mov.w	r0, #0
 800dfb6:	f380 8811 	msr	BASEPRI, r0
 800dfba:	4770      	bx	lr
 800dfbc:	f3af 8000 	nop.w

0800dfc0 <pxCurrentTCBConst2>:
 800dfc0:	20012780 	.word	0x20012780

0800dfc4 <vPortEnterCritical>:
 800dfc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfc8:	f383 8811 	msr	BASEPRI, r3
 800dfcc:	f3bf 8f6f 	isb	sy
 800dfd0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800dfd4:	4a0b      	ldr	r2, [pc, #44]	; (800e004 <vPortEnterCritical+0x40>)
 800dfd6:	6813      	ldr	r3, [r2, #0]
 800dfd8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800dfda:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800dfdc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800dfde:	d000      	beq.n	800dfe2 <vPortEnterCritical+0x1e>
}
 800dfe0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800dfe2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dfe6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800dfea:	b2db      	uxtb	r3, r3
 800dfec:	2b00      	cmp	r3, #0
 800dfee:	d0f7      	beq.n	800dfe0 <vPortEnterCritical+0x1c>
 800dff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dff4:	f383 8811 	msr	BASEPRI, r3
 800dff8:	f3bf 8f6f 	isb	sy
 800dffc:	f3bf 8f4f 	dsb	sy
 800e000:	e7fe      	b.n	800e000 <vPortEnterCritical+0x3c>
 800e002:	bf00      	nop
 800e004:	20000084 	.word	0x20000084

0800e008 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e008:	4a08      	ldr	r2, [pc, #32]	; (800e02c <vPortExitCritical+0x24>)
 800e00a:	6813      	ldr	r3, [r2, #0]
 800e00c:	b943      	cbnz	r3, 800e020 <vPortExitCritical+0x18>
 800e00e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e012:	f383 8811 	msr	BASEPRI, r3
 800e016:	f3bf 8f6f 	isb	sy
 800e01a:	f3bf 8f4f 	dsb	sy
 800e01e:	e7fe      	b.n	800e01e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e020:	3b01      	subs	r3, #1
 800e022:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e024:	b90b      	cbnz	r3, 800e02a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e026:	f383 8811 	msr	BASEPRI, r3
}
 800e02a:	4770      	bx	lr
 800e02c:	20000084 	.word	0x20000084

0800e030 <PendSV_Handler>:
	__asm volatile
 800e030:	f3ef 8009 	mrs	r0, PSP
 800e034:	f3bf 8f6f 	isb	sy
 800e038:	4b15      	ldr	r3, [pc, #84]	; (800e090 <pxCurrentTCBConst>)
 800e03a:	681a      	ldr	r2, [r3, #0]
 800e03c:	f01e 0f10 	tst.w	lr, #16
 800e040:	bf08      	it	eq
 800e042:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e046:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e04a:	6010      	str	r0, [r2, #0]
 800e04c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e050:	f04f 0050 	mov.w	r0, #80	; 0x50
 800e054:	f380 8811 	msr	BASEPRI, r0
 800e058:	f3bf 8f4f 	dsb	sy
 800e05c:	f3bf 8f6f 	isb	sy
 800e060:	f001 fd54 	bl	800fb0c <vTaskSwitchContext>
 800e064:	f04f 0000 	mov.w	r0, #0
 800e068:	f380 8811 	msr	BASEPRI, r0
 800e06c:	bc09      	pop	{r0, r3}
 800e06e:	6819      	ldr	r1, [r3, #0]
 800e070:	6808      	ldr	r0, [r1, #0]
 800e072:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e076:	f01e 0f10 	tst.w	lr, #16
 800e07a:	bf08      	it	eq
 800e07c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e080:	f380 8809 	msr	PSP, r0
 800e084:	f3bf 8f6f 	isb	sy
 800e088:	4770      	bx	lr
 800e08a:	bf00      	nop
 800e08c:	f3af 8000 	nop.w

0800e090 <pxCurrentTCBConst>:
 800e090:	20012780 	.word	0x20012780

0800e094 <xPortSysTickHandler>:
{
 800e094:	b508      	push	{r3, lr}
	__asm volatile
 800e096:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e09a:	f383 8811 	msr	BASEPRI, r3
 800e09e:	f3bf 8f6f 	isb	sy
 800e0a2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e0a6:	f001 fd21 	bl	800faec <xTaskIncrementTick>
 800e0aa:	b128      	cbz	r0, 800e0b8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e0ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e0b8:	2300      	movs	r3, #0
 800e0ba:	f383 8811 	msr	BASEPRI, r3
}
 800e0be:	bd08      	pop	{r3, pc}

0800e0c0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e0c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e0c4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e0c6:	4906      	ldr	r1, [pc, #24]	; (800e0e0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e0c8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e0ca:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e0cc:	680b      	ldr	r3, [r1, #0]
 800e0ce:	4905      	ldr	r1, [pc, #20]	; (800e0e4 <vPortSetupTimerInterrupt+0x24>)
 800e0d0:	fba1 1303 	umull	r1, r3, r1, r3
 800e0d4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e0d6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e0d8:	3b01      	subs	r3, #1
 800e0da:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e0dc:	6110      	str	r0, [r2, #16]
}
 800e0de:	4770      	bx	lr
 800e0e0:	20000078 	.word	0x20000078
 800e0e4:	10624dd3 	.word	0x10624dd3

0800e0e8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e0e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0ec:	4a49      	ldr	r2, [pc, #292]	; (800e214 <xPortStartScheduler+0x12c>)
 800e0ee:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e0f2:	4291      	cmp	r1, r2
 800e0f4:	d043      	beq.n	800e17e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e0f6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e0fa:	4b47      	ldr	r3, [pc, #284]	; (800e218 <xPortStartScheduler+0x130>)
 800e0fc:	429a      	cmp	r2, r3
 800e0fe:	d035      	beq.n	800e16c <xPortStartScheduler+0x84>
{
 800e100:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e102:	4b46      	ldr	r3, [pc, #280]	; (800e21c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e104:	4846      	ldr	r0, [pc, #280]	; (800e220 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e106:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e108:	4c46      	ldr	r4, [pc, #280]	; (800e224 <xPortStartScheduler+0x13c>)
{
 800e10a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e10c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e10e:	b2d2      	uxtb	r2, r2
 800e110:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e112:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e114:	781b      	ldrb	r3, [r3, #0]
 800e116:	b2db      	uxtb	r3, r3
 800e118:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e11c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e120:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e124:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e128:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e12a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e12c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e12e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e130:	bf48      	it	mi
 800e132:	2206      	movmi	r2, #6
 800e134:	d511      	bpl.n	800e15a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e136:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e13a:	005b      	lsls	r3, r3, #1
 800e13c:	b2db      	uxtb	r3, r3
 800e13e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e142:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e146:	0609      	lsls	r1, r1, #24
 800e148:	4610      	mov	r0, r2
 800e14a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e14e:	d4f2      	bmi.n	800e136 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e150:	2803      	cmp	r0, #3
 800e152:	6020      	str	r0, [r4, #0]
 800e154:	f88d 3007 	strb.w	r3, [sp, #7]
 800e158:	d01a      	beq.n	800e190 <xPortStartScheduler+0xa8>
	__asm volatile
 800e15a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e15e:	f383 8811 	msr	BASEPRI, r3
 800e162:	f3bf 8f6f 	isb	sy
 800e166:	f3bf 8f4f 	dsb	sy
 800e16a:	e7fe      	b.n	800e16a <xPortStartScheduler+0x82>
 800e16c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e170:	f383 8811 	msr	BASEPRI, r3
 800e174:	f3bf 8f6f 	isb	sy
 800e178:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e17c:	e7fe      	b.n	800e17c <xPortStartScheduler+0x94>
 800e17e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e182:	f383 8811 	msr	BASEPRI, r3
 800e186:	f3bf 8f6f 	isb	sy
 800e18a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e18e:	e7fe      	b.n	800e18e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e190:	9b02      	ldr	r3, [sp, #8]
 800e192:	4a22      	ldr	r2, [pc, #136]	; (800e21c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e194:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e198:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e19c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e19e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e1a0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e1a2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e1a6:	4c20      	ldr	r4, [pc, #128]	; (800e228 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e1a8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e1ac:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e1b0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e1b4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e1b8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e1bc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e1be:	f7ff ff7f 	bl	800e0c0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e1c2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e1c4:	f7ff feae 	bl	800df24 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e1c8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e1cc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e1d0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e1d4:	f7ff fe92 	bl	800defc <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e1d8:	f001 fc98 	bl	800fb0c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e1dc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e1de:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e1e0:	3301      	adds	r3, #1
 800e1e2:	d008      	beq.n	800e1f6 <xPortStartScheduler+0x10e>
 800e1e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1e8:	f383 8811 	msr	BASEPRI, r3
 800e1ec:	f3bf 8f6f 	isb	sy
 800e1f0:	f3bf 8f4f 	dsb	sy
 800e1f4:	e7fe      	b.n	800e1f4 <xPortStartScheduler+0x10c>
 800e1f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1fa:	f383 8811 	msr	BASEPRI, r3
 800e1fe:	f3bf 8f6f 	isb	sy
 800e202:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e206:	9b03      	ldr	r3, [sp, #12]
 800e208:	2b00      	cmp	r3, #0
 800e20a:	d0fc      	beq.n	800e206 <xPortStartScheduler+0x11e>
}
 800e20c:	2000      	movs	r0, #0
 800e20e:	b004      	add	sp, #16
 800e210:	bd70      	pop	{r4, r5, r6, pc}
 800e212:	bf00      	nop
 800e214:	410fc271 	.word	0x410fc271
 800e218:	410fc270 	.word	0x410fc270
 800e21c:	e000e400 	.word	0xe000e400
 800e220:	20012734 	.word	0x20012734
 800e224:	20012738 	.word	0x20012738
 800e228:	20000084 	.word	0x20000084

0800e22c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e22c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e230:	2b0f      	cmp	r3, #15
 800e232:	d90e      	bls.n	800e252 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e234:	4911      	ldr	r1, [pc, #68]	; (800e27c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e236:	4a12      	ldr	r2, [pc, #72]	; (800e280 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e238:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e23a:	7812      	ldrb	r2, [r2, #0]
 800e23c:	429a      	cmp	r2, r3
 800e23e:	d908      	bls.n	800e252 <vPortValidateInterruptPriority+0x26>
 800e240:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e244:	f383 8811 	msr	BASEPRI, r3
 800e248:	f3bf 8f6f 	isb	sy
 800e24c:	f3bf 8f4f 	dsb	sy
 800e250:	e7fe      	b.n	800e250 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e252:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e256:	4a0b      	ldr	r2, [pc, #44]	; (800e284 <vPortValidateInterruptPriority+0x58>)
 800e258:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e25c:	6812      	ldr	r2, [r2, #0]
 800e25e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e262:	4293      	cmp	r3, r2
 800e264:	d908      	bls.n	800e278 <vPortValidateInterruptPriority+0x4c>
 800e266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e26a:	f383 8811 	msr	BASEPRI, r3
 800e26e:	f3bf 8f6f 	isb	sy
 800e272:	f3bf 8f4f 	dsb	sy
 800e276:	e7fe      	b.n	800e276 <vPortValidateInterruptPriority+0x4a>
	}
 800e278:	4770      	bx	lr
 800e27a:	bf00      	nop
 800e27c:	e000e3f0 	.word	0xe000e3f0
 800e280:	20012734 	.word	0x20012734
 800e284:	20012738 	.word	0x20012738

0800e288 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e288:	b570      	push	{r4, r5, r6, lr}
 800e28a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e28c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e28e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e290:	b920      	cbnz	r0, 800e29c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e292:	6825      	ldr	r5, [r4, #0]
 800e294:	b34d      	cbz	r5, 800e2ea <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e296:	3601      	adds	r6, #1
 800e298:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e29a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e29c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e29e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e2a0:	b97d      	cbnz	r5, 800e2c2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e2a2:	6860      	ldr	r0, [r4, #4]
 800e2a4:	f01c ffbd 	bl	802b222 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2a8:	6863      	ldr	r3, [r4, #4]
 800e2aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e2ac:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e2ae:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2b0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e2b2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e2b4:	bf24      	itt	cs
 800e2b6:	6823      	ldrcs	r3, [r4, #0]
 800e2b8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e2ba:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e2bc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e2be:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e2c0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e2c2:	68e0      	ldr	r0, [r4, #12]
 800e2c4:	f01c ffad 	bl	802b222 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e2c8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e2ca:	68e3      	ldr	r3, [r4, #12]
 800e2cc:	4251      	negs	r1, r2
 800e2ce:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e2d0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e2d2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e2d4:	4293      	cmp	r3, r2
 800e2d6:	d202      	bcs.n	800e2de <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e2d8:	68a3      	ldr	r3, [r4, #8]
 800e2da:	440b      	add	r3, r1
 800e2dc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e2de:	2d02      	cmp	r5, #2
 800e2e0:	d008      	beq.n	800e2f4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e2e2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e2e4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e2e6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e2e8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e2ea:	68a0      	ldr	r0, [r4, #8]
 800e2ec:	f001 fde0 	bl	800feb0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e2f0:	60a5      	str	r5, [r4, #8]
 800e2f2:	e7d0      	b.n	800e296 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e2f4:	2e01      	cmp	r6, #1
 800e2f6:	bf38      	it	cc
 800e2f8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e2fa:	2000      	movs	r0, #0
 800e2fc:	e7cc      	b.n	800e298 <prvCopyDataToQueue+0x10>
 800e2fe:	bf00      	nop

0800e300 <xQueueGenericCreateStatic>:
	{
 800e300:	b530      	push	{r4, r5, lr}
 800e302:	b083      	sub	sp, #12
 800e304:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e308:	b940      	cbnz	r0, 800e31c <xQueueGenericCreateStatic+0x1c>
 800e30a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e30e:	f383 8811 	msr	BASEPRI, r3
 800e312:	f3bf 8f6f 	isb	sy
 800e316:	f3bf 8f4f 	dsb	sy
 800e31a:	e7fe      	b.n	800e31a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e31c:	461d      	mov	r5, r3
 800e31e:	b17b      	cbz	r3, 800e340 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e320:	b302      	cbz	r2, 800e364 <xQueueGenericCreateStatic+0x64>
 800e322:	b1b1      	cbz	r1, 800e352 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e324:	2350      	movs	r3, #80	; 0x50
 800e326:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e328:	9b01      	ldr	r3, [sp, #4]
 800e32a:	2b50      	cmp	r3, #80	; 0x50
 800e32c:	d023      	beq.n	800e376 <xQueueGenericCreateStatic+0x76>
 800e32e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e332:	f383 8811 	msr	BASEPRI, r3
 800e336:	f3bf 8f6f 	isb	sy
 800e33a:	f3bf 8f4f 	dsb	sy
 800e33e:	e7fe      	b.n	800e33e <xQueueGenericCreateStatic+0x3e>
 800e340:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e344:	f383 8811 	msr	BASEPRI, r3
 800e348:	f3bf 8f6f 	isb	sy
 800e34c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e350:	e7fe      	b.n	800e350 <xQueueGenericCreateStatic+0x50>
 800e352:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e356:	f383 8811 	msr	BASEPRI, r3
 800e35a:	f3bf 8f6f 	isb	sy
 800e35e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e362:	e7fe      	b.n	800e362 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e364:	bb89      	cbnz	r1, 800e3ca <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e366:	2250      	movs	r2, #80	; 0x50
 800e368:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e36a:	9a01      	ldr	r2, [sp, #4]
 800e36c:	2a50      	cmp	r2, #80	; 0x50
 800e36e:	d1de      	bne.n	800e32e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e370:	9a01      	ldr	r2, [sp, #4]
 800e372:	462a      	mov	r2, r5
 800e374:	e000      	b.n	800e378 <xQueueGenericCreateStatic+0x78>
 800e376:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e378:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e37a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e37c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e380:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e384:	f7ff fe1e 	bl	800dfc4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e388:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e38c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e38e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e390:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e394:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e396:	4401      	add	r1, r0
 800e398:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e39a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e39c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e39e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e3a0:	21ff      	movs	r1, #255	; 0xff
 800e3a2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3a6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e3a8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e3ac:	f105 0010 	add.w	r0, r5, #16
 800e3b0:	f7ff fd58 	bl	800de64 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e3b4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e3b8:	f7ff fd54 	bl	800de64 <vListInitialise>
	taskEXIT_CRITICAL();
 800e3bc:	f7ff fe24 	bl	800e008 <vPortExitCritical>
	}
 800e3c0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e3c2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e3c6:	b003      	add	sp, #12
 800e3c8:	bd30      	pop	{r4, r5, pc}
 800e3ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ce:	f383 8811 	msr	BASEPRI, r3
 800e3d2:	f3bf 8f6f 	isb	sy
 800e3d6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e3da:	e7fe      	b.n	800e3da <xQueueGenericCreateStatic+0xda>

0800e3dc <xQueueGenericCreate>:
	{
 800e3dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e3de:	b940      	cbnz	r0, 800e3f2 <xQueueGenericCreate+0x16>
 800e3e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3e4:	f383 8811 	msr	BASEPRI, r3
 800e3e8:	f3bf 8f6f 	isb	sy
 800e3ec:	f3bf 8f4f 	dsb	sy
 800e3f0:	e7fe      	b.n	800e3f0 <xQueueGenericCreate+0x14>
 800e3f2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e3f4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e3f8:	3050      	adds	r0, #80	; 0x50
 800e3fa:	460e      	mov	r6, r1
 800e3fc:	4617      	mov	r7, r2
 800e3fe:	f7ff fc11 	bl	800dc24 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e402:	4604      	mov	r4, r0
 800e404:	b340      	cbz	r0, 800e458 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e406:	2300      	movs	r3, #0
 800e408:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e40c:	b336      	cbz	r6, 800e45c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e40e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e412:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e414:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e418:	f7ff fdd4 	bl	800dfc4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e41c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e420:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e422:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e424:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e428:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e42a:	440a      	add	r2, r1
 800e42c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e42e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e430:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e432:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e434:	22ff      	movs	r2, #255	; 0xff
 800e436:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e43a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e43c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e440:	f104 0010 	add.w	r0, r4, #16
 800e444:	f7ff fd0e 	bl	800de64 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e448:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e44c:	f7ff fd0a 	bl	800de64 <vListInitialise>
	taskEXIT_CRITICAL();
 800e450:	f7ff fdda 	bl	800e008 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e454:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e458:	4620      	mov	r0, r4
 800e45a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e45c:	4603      	mov	r3, r0
 800e45e:	e7d8      	b.n	800e412 <xQueueGenericCreate+0x36>

0800e460 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e460:	b940      	cbnz	r0, 800e474 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e462:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e466:	f383 8811 	msr	BASEPRI, r3
 800e46a:	f3bf 8f6f 	isb	sy
 800e46e:	f3bf 8f4f 	dsb	sy
 800e472:	e7fe      	b.n	800e472 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e474:	4288      	cmp	r0, r1
 800e476:	d208      	bcs.n	800e48a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e478:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e47c:	f383 8811 	msr	BASEPRI, r3
 800e480:	f3bf 8f6f 	isb	sy
 800e484:	f3bf 8f4f 	dsb	sy
 800e488:	e7fe      	b.n	800e488 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e48a:	b530      	push	{r4, r5, lr}
 800e48c:	4615      	mov	r5, r2
 800e48e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e490:	2a00      	cmp	r2, #0
 800e492:	d03c      	beq.n	800e50e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e494:	2350      	movs	r3, #80	; 0x50
 800e496:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e498:	9b03      	ldr	r3, [sp, #12]
 800e49a:	2b50      	cmp	r3, #80	; 0x50
 800e49c:	d008      	beq.n	800e4b0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e49e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4a2:	f383 8811 	msr	BASEPRI, r3
 800e4a6:	f3bf 8f6f 	isb	sy
 800e4aa:	f3bf 8f4f 	dsb	sy
 800e4ae:	e7fe      	b.n	800e4ae <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e4b0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e4b2:	2301      	movs	r3, #1
 800e4b4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e4b8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e4ba:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e4be:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e4c0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e4c2:	f7ff fd7f 	bl	800dfc4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4c6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e4ca:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e4cc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4ce:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4d2:	1ac3      	subs	r3, r0, r3
 800e4d4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4d6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e4d8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e4dc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4e0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e4e2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e4e4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e4e8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e4ea:	f105 0010 	add.w	r0, r5, #16
 800e4ee:	f7ff fcb9 	bl	800de64 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e4f2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e4f6:	f7ff fcb5 	bl	800de64 <vListInitialise>
	taskEXIT_CRITICAL();
 800e4fa:	f7ff fd85 	bl	800e008 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e4fe:	9901      	ldr	r1, [sp, #4]
 800e500:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e502:	2302      	movs	r3, #2
	}
 800e504:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e506:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e50a:	b005      	add	sp, #20
 800e50c:	bd30      	pop	{r4, r5, pc}
 800e50e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e512:	f383 8811 	msr	BASEPRI, r3
 800e516:	f3bf 8f6f 	isb	sy
 800e51a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e51e:	e7fe      	b.n	800e51e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e520 <xQueueCreateCountingSemaphore>:
	{
 800e520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e522:	b940      	cbnz	r0, 800e536 <xQueueCreateCountingSemaphore+0x16>
 800e524:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e528:	f383 8811 	msr	BASEPRI, r3
 800e52c:	f3bf 8f6f 	isb	sy
 800e530:	f3bf 8f4f 	dsb	sy
 800e534:	e7fe      	b.n	800e534 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e536:	4288      	cmp	r0, r1
 800e538:	460e      	mov	r6, r1
 800e53a:	4604      	mov	r4, r0
 800e53c:	d208      	bcs.n	800e550 <xQueueCreateCountingSemaphore+0x30>
 800e53e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e542:	f383 8811 	msr	BASEPRI, r3
 800e546:	f3bf 8f6f 	isb	sy
 800e54a:	f3bf 8f4f 	dsb	sy
 800e54e:	e7fe      	b.n	800e54e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e550:	2050      	movs	r0, #80	; 0x50
 800e552:	f7ff fb67 	bl	800dc24 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e556:	4605      	mov	r5, r0
 800e558:	b330      	cbz	r0, 800e5a8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e55a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e55c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e560:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e564:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e566:	f7ff fd2d 	bl	800dfc4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e56a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e56e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e570:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e572:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e576:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e578:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e57a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e57c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e57e:	22ff      	movs	r2, #255	; 0xff
 800e580:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e584:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e586:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e588:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e58c:	f105 0010 	add.w	r0, r5, #16
 800e590:	f7ff fc68 	bl	800de64 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e594:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e598:	f7ff fc64 	bl	800de64 <vListInitialise>
	taskEXIT_CRITICAL();
 800e59c:	f7ff fd34 	bl	800e008 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e5a0:	2302      	movs	r3, #2
 800e5a2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e5a6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e5a8:	4628      	mov	r0, r5
 800e5aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e5ac <xQueueGenericSend>:
{
 800e5ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5b0:	b085      	sub	sp, #20
 800e5b2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e5b4:	2800      	cmp	r0, #0
 800e5b6:	f000 80a4 	beq.w	800e702 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e5ba:	4688      	mov	r8, r1
 800e5bc:	461f      	mov	r7, r3
 800e5be:	4604      	mov	r4, r0
 800e5c0:	2900      	cmp	r1, #0
 800e5c2:	f000 8091 	beq.w	800e6e8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e5c6:	2f02      	cmp	r7, #2
 800e5c8:	d10b      	bne.n	800e5e2 <xQueueGenericSend+0x36>
 800e5ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e5cc:	2b01      	cmp	r3, #1
 800e5ce:	d008      	beq.n	800e5e2 <xQueueGenericSend+0x36>
 800e5d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5d4:	f383 8811 	msr	BASEPRI, r3
 800e5d8:	f3bf 8f6f 	isb	sy
 800e5dc:	f3bf 8f4f 	dsb	sy
 800e5e0:	e7fe      	b.n	800e5e0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e5e2:	f001 fc0f 	bl	800fe04 <xTaskGetSchedulerState>
 800e5e6:	4605      	mov	r5, r0
 800e5e8:	2800      	cmp	r0, #0
 800e5ea:	f000 8093 	beq.w	800e714 <xQueueGenericSend+0x168>
 800e5ee:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5f0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e5f4:	f7ff fce6 	bl	800dfc4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e5f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e5fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e5fc:	429a      	cmp	r2, r3
 800e5fe:	f0c0 80ef 	bcc.w	800e7e0 <xQueueGenericSend+0x234>
 800e602:	2f02      	cmp	r7, #2
 800e604:	f000 80ec 	beq.w	800e7e0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e608:	9801      	ldr	r0, [sp, #4]
 800e60a:	2800      	cmp	r0, #0
 800e60c:	f000 8101 	beq.w	800e812 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e610:	2d00      	cmp	r5, #0
 800e612:	f000 80e1 	beq.w	800e7d8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e616:	f7ff fcf7 	bl	800e008 <vPortExitCritical>
		vTaskSuspendAll();
 800e61a:	f001 fa49 	bl	800fab0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e61e:	f7ff fcd1 	bl	800dfc4 <vPortEnterCritical>
 800e622:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e626:	2bff      	cmp	r3, #255	; 0xff
 800e628:	bf04      	itt	eq
 800e62a:	2300      	moveq	r3, #0
 800e62c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e630:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e634:	2bff      	cmp	r3, #255	; 0xff
 800e636:	bf04      	itt	eq
 800e638:	2300      	moveq	r3, #0
 800e63a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e63e:	f7ff fce3 	bl	800e008 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e642:	a901      	add	r1, sp, #4
 800e644:	a802      	add	r0, sp, #8
 800e646:	f001 fb8f 	bl	800fd68 <xTaskCheckForTimeOut>
 800e64a:	2800      	cmp	r0, #0
 800e64c:	f040 80e6 	bne.w	800e81c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e650:	f7ff fcb8 	bl	800dfc4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e654:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e656:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e658:	429a      	cmp	r2, r3
 800e65a:	d068      	beq.n	800e72e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e65c:	f7ff fcd4 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e660:	f7ff fcb0 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e664:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e668:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e66a:	2d00      	cmp	r5, #0
 800e66c:	dc04      	bgt.n	800e678 <xQueueGenericSend+0xcc>
 800e66e:	e011      	b.n	800e694 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e670:	1e6a      	subs	r2, r5, #1
 800e672:	b2d3      	uxtb	r3, r2
 800e674:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e676:	b16b      	cbz	r3, 800e694 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e678:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e67a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e67c:	b153      	cbz	r3, 800e694 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e67e:	f001 fb1f 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e682:	2800      	cmp	r0, #0
 800e684:	d0f4      	beq.n	800e670 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e686:	f001 fbb7 	bl	800fdf8 <vTaskMissedYield>
			--cTxLock;
 800e68a:	1e6a      	subs	r2, r5, #1
 800e68c:	b2d3      	uxtb	r3, r2
 800e68e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e690:	2b00      	cmp	r3, #0
 800e692:	d1f1      	bne.n	800e678 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e694:	23ff      	movs	r3, #255	; 0xff
 800e696:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e69a:	f7ff fcb5 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e69e:	f7ff fc91 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e6a2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e6a6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6a8:	2d00      	cmp	r5, #0
 800e6aa:	dd14      	ble.n	800e6d6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6ac:	f104 0910 	add.w	r9, r4, #16
 800e6b0:	e003      	b.n	800e6ba <xQueueGenericSend+0x10e>
				--cRxLock;
 800e6b2:	1e6a      	subs	r2, r5, #1
 800e6b4:	b2d3      	uxtb	r3, r2
 800e6b6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6b8:	b16b      	cbz	r3, 800e6d6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6ba:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6bc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6be:	b153      	cbz	r3, 800e6d6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6c0:	f001 fafe 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e6c4:	2800      	cmp	r0, #0
 800e6c6:	d0f4      	beq.n	800e6b2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e6c8:	f001 fb96 	bl	800fdf8 <vTaskMissedYield>
				--cRxLock;
 800e6cc:	1e6a      	subs	r2, r5, #1
 800e6ce:	b2d3      	uxtb	r3, r2
 800e6d0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6d2:	2b00      	cmp	r3, #0
 800e6d4:	d1f1      	bne.n	800e6ba <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e6d6:	23ff      	movs	r3, #255	; 0xff
 800e6d8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e6dc:	f7ff fc94 	bl	800e008 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e6e0:	f001 f9ee 	bl	800fac0 <xTaskResumeAll>
 800e6e4:	2501      	movs	r5, #1
 800e6e6:	e785      	b.n	800e5f4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e6e8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e6ea:	2b00      	cmp	r3, #0
 800e6ec:	f43f af6b 	beq.w	800e5c6 <xQueueGenericSend+0x1a>
 800e6f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6f4:	f383 8811 	msr	BASEPRI, r3
 800e6f8:	f3bf 8f6f 	isb	sy
 800e6fc:	f3bf 8f4f 	dsb	sy
 800e700:	e7fe      	b.n	800e700 <xQueueGenericSend+0x154>
 800e702:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e706:	f383 8811 	msr	BASEPRI, r3
 800e70a:	f3bf 8f6f 	isb	sy
 800e70e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e712:	e7fe      	b.n	800e712 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e714:	9b01      	ldr	r3, [sp, #4]
 800e716:	2b00      	cmp	r3, #0
 800e718:	f43f af6a 	beq.w	800e5f0 <xQueueGenericSend+0x44>
 800e71c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e720:	f383 8811 	msr	BASEPRI, r3
 800e724:	f3bf 8f6f 	isb	sy
 800e728:	f3bf 8f4f 	dsb	sy
 800e72c:	e7fe      	b.n	800e72c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e72e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e732:	f7ff fc69 	bl	800e008 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e736:	9901      	ldr	r1, [sp, #4]
 800e738:	4648      	mov	r0, r9
 800e73a:	f001 fa33 	bl	800fba4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e73e:	f7ff fc41 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e742:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e746:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e748:	2d00      	cmp	r5, #0
 800e74a:	dc04      	bgt.n	800e756 <xQueueGenericSend+0x1aa>
 800e74c:	e011      	b.n	800e772 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e74e:	1e6b      	subs	r3, r5, #1
 800e750:	b2da      	uxtb	r2, r3
 800e752:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e754:	b16a      	cbz	r2, 800e772 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e756:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e758:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e75a:	b153      	cbz	r3, 800e772 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e75c:	f001 fab0 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e760:	2800      	cmp	r0, #0
 800e762:	d0f4      	beq.n	800e74e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e764:	f001 fb48 	bl	800fdf8 <vTaskMissedYield>
			--cTxLock;
 800e768:	1e6b      	subs	r3, r5, #1
 800e76a:	b2da      	uxtb	r2, r3
 800e76c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e76e:	2a00      	cmp	r2, #0
 800e770:	d1f1      	bne.n	800e756 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e772:	23ff      	movs	r3, #255	; 0xff
 800e774:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e778:	f7ff fc46 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e77c:	f7ff fc22 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e780:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e784:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e786:	2d00      	cmp	r5, #0
 800e788:	dc04      	bgt.n	800e794 <xQueueGenericSend+0x1e8>
 800e78a:	e011      	b.n	800e7b0 <xQueueGenericSend+0x204>
				--cRxLock;
 800e78c:	1e6b      	subs	r3, r5, #1
 800e78e:	b2da      	uxtb	r2, r3
 800e790:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e792:	b16a      	cbz	r2, 800e7b0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e794:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e796:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e798:	b153      	cbz	r3, 800e7b0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e79a:	f001 fa91 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e79e:	2800      	cmp	r0, #0
 800e7a0:	d0f4      	beq.n	800e78c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e7a2:	f001 fb29 	bl	800fdf8 <vTaskMissedYield>
				--cRxLock;
 800e7a6:	1e6b      	subs	r3, r5, #1
 800e7a8:	b2da      	uxtb	r2, r3
 800e7aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e7ac:	2a00      	cmp	r2, #0
 800e7ae:	d1f1      	bne.n	800e794 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e7b0:	23ff      	movs	r3, #255	; 0xff
 800e7b2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e7b6:	f7ff fc27 	bl	800e008 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e7ba:	f001 f981 	bl	800fac0 <xTaskResumeAll>
 800e7be:	2800      	cmp	r0, #0
 800e7c0:	d190      	bne.n	800e6e4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e7c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e7c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e7ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e7ce:	f3bf 8f4f 	dsb	sy
 800e7d2:	f3bf 8f6f 	isb	sy
 800e7d6:	e785      	b.n	800e6e4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e7d8:	a802      	add	r0, sp, #8
 800e7da:	f001 fab9 	bl	800fd50 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e7de:	e71a      	b.n	800e616 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e7e0:	463a      	mov	r2, r7
 800e7e2:	4641      	mov	r1, r8
 800e7e4:	4620      	mov	r0, r4
 800e7e6:	f7ff fd4f 	bl	800e288 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e7ec:	2b00      	cmp	r3, #0
 800e7ee:	d153      	bne.n	800e898 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e7f0:	b148      	cbz	r0, 800e806 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e7f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e7f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e7fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e7fe:	f3bf 8f4f 	dsb	sy
 800e802:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e806:	f7ff fbff 	bl	800e008 <vPortExitCritical>
				return pdPASS;
 800e80a:	2001      	movs	r0, #1
}
 800e80c:	b005      	add	sp, #20
 800e80e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e812:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e814:	f7ff fbf8 	bl	800e008 <vPortExitCritical>
					return errQUEUE_FULL;
 800e818:	9800      	ldr	r0, [sp, #0]
 800e81a:	e7f7      	b.n	800e80c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e81c:	f7ff fbd2 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e820:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e824:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e826:	2d00      	cmp	r5, #0
 800e828:	dd10      	ble.n	800e84c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e82a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e82e:	e003      	b.n	800e838 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e830:	1e6b      	subs	r3, r5, #1
 800e832:	b2da      	uxtb	r2, r3
 800e834:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e836:	b14a      	cbz	r2, 800e84c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e838:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e83a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e83c:	b133      	cbz	r3, 800e84c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e83e:	f001 fa3f 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e842:	2800      	cmp	r0, #0
 800e844:	d0f4      	beq.n	800e830 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e846:	f001 fad7 	bl	800fdf8 <vTaskMissedYield>
 800e84a:	e7f1      	b.n	800e830 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e84c:	23ff      	movs	r3, #255	; 0xff
 800e84e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e852:	f7ff fbd9 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e856:	f7ff fbb5 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e85a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e85e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e860:	2d00      	cmp	r5, #0
 800e862:	dd10      	ble.n	800e886 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e864:	f104 0610 	add.w	r6, r4, #16
 800e868:	e003      	b.n	800e872 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e86a:	1e6b      	subs	r3, r5, #1
 800e86c:	b2da      	uxtb	r2, r3
 800e86e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e870:	b14a      	cbz	r2, 800e886 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e872:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e874:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e876:	b133      	cbz	r3, 800e886 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e878:	f001 fa22 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e87c:	2800      	cmp	r0, #0
 800e87e:	d0f4      	beq.n	800e86a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e880:	f001 faba 	bl	800fdf8 <vTaskMissedYield>
 800e884:	e7f1      	b.n	800e86a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e886:	23ff      	movs	r3, #255	; 0xff
 800e888:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e88c:	f7ff fbbc 	bl	800e008 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e890:	f001 f916 	bl	800fac0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e894:	2000      	movs	r0, #0
 800e896:	e7b9      	b.n	800e80c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e898:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e89c:	f001 fa10 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e8a0:	2800      	cmp	r0, #0
 800e8a2:	d0b0      	beq.n	800e806 <xQueueGenericSend+0x25a>
 800e8a4:	e7a5      	b.n	800e7f2 <xQueueGenericSend+0x246>
 800e8a6:	bf00      	nop

0800e8a8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e8a8:	2800      	cmp	r0, #0
 800e8aa:	d04b      	beq.n	800e944 <xQueueGenericSendFromISR+0x9c>
{
 800e8ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8b0:	460e      	mov	r6, r1
 800e8b2:	4617      	mov	r7, r2
 800e8b4:	461d      	mov	r5, r3
 800e8b6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e8b8:	b321      	cbz	r1, 800e904 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e8ba:	2d02      	cmp	r5, #2
 800e8bc:	d10b      	bne.n	800e8d6 <xQueueGenericSendFromISR+0x2e>
 800e8be:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e8c0:	2b01      	cmp	r3, #1
 800e8c2:	d008      	beq.n	800e8d6 <xQueueGenericSendFromISR+0x2e>
 800e8c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8c8:	f383 8811 	msr	BASEPRI, r3
 800e8cc:	f3bf 8f6f 	isb	sy
 800e8d0:	f3bf 8f4f 	dsb	sy
 800e8d4:	e7fe      	b.n	800e8d4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e8d6:	f7ff fca9 	bl	800e22c <vPortValidateInterruptPriority>
	__asm volatile
 800e8da:	f3ef 8811 	mrs	r8, BASEPRI
 800e8de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8e2:	f383 8811 	msr	BASEPRI, r3
 800e8e6:	f3bf 8f6f 	isb	sy
 800e8ea:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e8ee:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e8f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e8f2:	429a      	cmp	r2, r3
 800e8f4:	d312      	bcc.n	800e91c <xQueueGenericSendFromISR+0x74>
 800e8f6:	2d02      	cmp	r5, #2
 800e8f8:	d010      	beq.n	800e91c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e8fa:	2000      	movs	r0, #0
	__asm volatile
 800e8fc:	f388 8811 	msr	BASEPRI, r8
}
 800e900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e904:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e906:	2b00      	cmp	r3, #0
 800e908:	d0d7      	beq.n	800e8ba <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e90a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e90e:	f383 8811 	msr	BASEPRI, r3
 800e912:	f3bf 8f6f 	isb	sy
 800e916:	f3bf 8f4f 	dsb	sy
 800e91a:	e7fe      	b.n	800e91a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e91c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e91e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e922:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e924:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e926:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e928:	4620      	mov	r0, r4
 800e92a:	f7ff fcad 	bl	800e288 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e92e:	1c6b      	adds	r3, r5, #1
 800e930:	d011      	beq.n	800e956 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e932:	1c6b      	adds	r3, r5, #1
 800e934:	b25b      	sxtb	r3, r3
 800e936:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e93a:	2001      	movs	r0, #1
	__asm volatile
 800e93c:	f388 8811 	msr	BASEPRI, r8
}
 800e940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e944:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e948:	f383 8811 	msr	BASEPRI, r3
 800e94c:	f3bf 8f6f 	isb	sy
 800e950:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e954:	e7fe      	b.n	800e954 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e956:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e958:	2b00      	cmp	r3, #0
 800e95a:	d0ee      	beq.n	800e93a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e95c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e960:	f001 f9ae 	bl	800fcc0 <xTaskRemoveFromEventList>
 800e964:	2800      	cmp	r0, #0
 800e966:	d0e8      	beq.n	800e93a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e968:	2f00      	cmp	r7, #0
 800e96a:	d0e6      	beq.n	800e93a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e96c:	2001      	movs	r0, #1
 800e96e:	6038      	str	r0, [r7, #0]
 800e970:	e7c4      	b.n	800e8fc <xQueueGenericSendFromISR+0x54>
 800e972:	bf00      	nop

0800e974 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e974:	b370      	cbz	r0, 800e9d4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e976:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e978:	b570      	push	{r4, r5, r6, lr}
 800e97a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e97c:	b143      	cbz	r3, 800e990 <xQueueGiveFromISR+0x1c>
 800e97e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e982:	f383 8811 	msr	BASEPRI, r3
 800e986:	f3bf 8f6f 	isb	sy
 800e98a:	f3bf 8f4f 	dsb	sy
 800e98e:	e7fe      	b.n	800e98e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e990:	6803      	ldr	r3, [r0, #0]
 800e992:	460c      	mov	r4, r1
 800e994:	b33b      	cbz	r3, 800e9e6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e996:	f7ff fc49 	bl	800e22c <vPortValidateInterruptPriority>
	__asm volatile
 800e99a:	f3ef 8511 	mrs	r5, BASEPRI
 800e99e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9a2:	f383 8811 	msr	BASEPRI, r3
 800e9a6:	f3bf 8f6f 	isb	sy
 800e9aa:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e9ae:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e9b0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e9b2:	429a      	cmp	r2, r3
 800e9b4:	d923      	bls.n	800e9fe <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e9b6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e9ba:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e9bc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e9be:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e9c0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e9c2:	d020      	beq.n	800ea06 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e9c4:	3301      	adds	r3, #1
 800e9c6:	b25b      	sxtb	r3, r3
 800e9c8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e9cc:	2001      	movs	r0, #1
	__asm volatile
 800e9ce:	f385 8811 	msr	BASEPRI, r5
}
 800e9d2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e9d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9d8:	f383 8811 	msr	BASEPRI, r3
 800e9dc:	f3bf 8f6f 	isb	sy
 800e9e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e9e4:	e7fe      	b.n	800e9e4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e9e6:	6883      	ldr	r3, [r0, #8]
 800e9e8:	2b00      	cmp	r3, #0
 800e9ea:	d0d4      	beq.n	800e996 <xQueueGiveFromISR+0x22>
 800e9ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9f0:	f383 8811 	msr	BASEPRI, r3
 800e9f4:	f3bf 8f6f 	isb	sy
 800e9f8:	f3bf 8f4f 	dsb	sy
 800e9fc:	e7fe      	b.n	800e9fc <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e9fe:	2000      	movs	r0, #0
	__asm volatile
 800ea00:	f385 8811 	msr	BASEPRI, r5
}
 800ea04:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea06:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800ea08:	2b00      	cmp	r3, #0
 800ea0a:	d0df      	beq.n	800e9cc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea0c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800ea10:	f001 f956 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ea14:	2800      	cmp	r0, #0
 800ea16:	d0d9      	beq.n	800e9cc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800ea18:	2c00      	cmp	r4, #0
 800ea1a:	d0d7      	beq.n	800e9cc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ea1c:	2001      	movs	r0, #1
 800ea1e:	6020      	str	r0, [r4, #0]
 800ea20:	e7ee      	b.n	800ea00 <xQueueGiveFromISR+0x8c>
 800ea22:	bf00      	nop

0800ea24 <xQueueReceive>:
{
 800ea24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ea28:	b085      	sub	sp, #20
 800ea2a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ea2c:	2800      	cmp	r0, #0
 800ea2e:	f000 815c 	beq.w	800ecea <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ea32:	460f      	mov	r7, r1
 800ea34:	4604      	mov	r4, r0
 800ea36:	2900      	cmp	r1, #0
 800ea38:	d079      	beq.n	800eb2e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea3a:	f001 f9e3 	bl	800fe04 <xTaskGetSchedulerState>
 800ea3e:	2800      	cmp	r0, #0
 800ea40:	f000 8081 	beq.w	800eb46 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800ea44:	f7ff fabe 	bl	800dfc4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ea48:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ea4a:	2d00      	cmp	r5, #0
 800ea4c:	f040 8138 	bne.w	800ecc0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ea50:	9b01      	ldr	r3, [sp, #4]
 800ea52:	2b00      	cmp	r3, #0
 800ea54:	f000 80d5 	beq.w	800ec02 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ea58:	a802      	add	r0, sp, #8
 800ea5a:	f001 f979 	bl	800fd50 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800ea5e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800ea64:	f7ff fad0 	bl	800e008 <vPortExitCritical>
		vTaskSuspendAll();
 800ea68:	f001 f822 	bl	800fab0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ea6c:	f7ff faaa 	bl	800dfc4 <vPortEnterCritical>
 800ea70:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea74:	2bff      	cmp	r3, #255	; 0xff
 800ea76:	bf08      	it	eq
 800ea78:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800ea7c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea80:	2bff      	cmp	r3, #255	; 0xff
 800ea82:	bf08      	it	eq
 800ea84:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800ea88:	f7ff fabe 	bl	800e008 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ea8c:	a901      	add	r1, sp, #4
 800ea8e:	a802      	add	r0, sp, #8
 800ea90:	f001 f96a 	bl	800fd68 <xTaskCheckForTimeOut>
 800ea94:	2800      	cmp	r0, #0
 800ea96:	d163      	bne.n	800eb60 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800ea98:	f7ff fa94 	bl	800dfc4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ea9c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ea9e:	2b00      	cmp	r3, #0
 800eaa0:	f000 80b5 	beq.w	800ec0e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800eaa4:	f7ff fab0 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eaa8:	f7ff fa8c 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eaac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eab0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eab2:	2d00      	cmp	r5, #0
 800eab4:	dc04      	bgt.n	800eac0 <xQueueReceive+0x9c>
 800eab6:	e011      	b.n	800eadc <xQueueReceive+0xb8>
			--cTxLock;
 800eab8:	1e6b      	subs	r3, r5, #1
 800eaba:	b2da      	uxtb	r2, r3
 800eabc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eabe:	b16a      	cbz	r2, 800eadc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eac0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eac2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eac4:	b153      	cbz	r3, 800eadc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eac6:	f001 f8fb 	bl	800fcc0 <xTaskRemoveFromEventList>
 800eaca:	2800      	cmp	r0, #0
 800eacc:	d0f4      	beq.n	800eab8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800eace:	f001 f993 	bl	800fdf8 <vTaskMissedYield>
			--cTxLock;
 800ead2:	1e6b      	subs	r3, r5, #1
 800ead4:	b2da      	uxtb	r2, r3
 800ead6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ead8:	2a00      	cmp	r2, #0
 800eada:	d1f1      	bne.n	800eac0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800eadc:	23ff      	movs	r3, #255	; 0xff
 800eade:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eae2:	f7ff fa91 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eae6:	f7ff fa6d 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eaea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eaee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaf0:	2d00      	cmp	r5, #0
 800eaf2:	dd14      	ble.n	800eb1e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaf4:	f104 0910 	add.w	r9, r4, #16
 800eaf8:	e003      	b.n	800eb02 <xQueueReceive+0xde>
				--cRxLock;
 800eafa:	1e6b      	subs	r3, r5, #1
 800eafc:	b2da      	uxtb	r2, r3
 800eafe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb00:	b16a      	cbz	r2, 800eb1e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb02:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb04:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb06:	b153      	cbz	r3, 800eb1e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb08:	f001 f8da 	bl	800fcc0 <xTaskRemoveFromEventList>
 800eb0c:	2800      	cmp	r0, #0
 800eb0e:	d0f4      	beq.n	800eafa <xQueueReceive+0xd6>
					vTaskMissedYield();
 800eb10:	f001 f972 	bl	800fdf8 <vTaskMissedYield>
				--cRxLock;
 800eb14:	1e6b      	subs	r3, r5, #1
 800eb16:	b2da      	uxtb	r2, r3
 800eb18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb1a:	2a00      	cmp	r2, #0
 800eb1c:	d1f1      	bne.n	800eb02 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb1e:	23ff      	movs	r3, #255	; 0xff
 800eb20:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb24:	f7ff fa70 	bl	800e008 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800eb28:	f000 ffca 	bl	800fac0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800eb2c:	e060      	b.n	800ebf0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eb2e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800eb30:	2b00      	cmp	r3, #0
 800eb32:	d082      	beq.n	800ea3a <xQueueReceive+0x16>
	__asm volatile
 800eb34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb38:	f383 8811 	msr	BASEPRI, r3
 800eb3c:	f3bf 8f6f 	isb	sy
 800eb40:	f3bf 8f4f 	dsb	sy
 800eb44:	e7fe      	b.n	800eb44 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eb46:	9b01      	ldr	r3, [sp, #4]
 800eb48:	2b00      	cmp	r3, #0
 800eb4a:	f43f af7b 	beq.w	800ea44 <xQueueReceive+0x20>
 800eb4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb52:	f383 8811 	msr	BASEPRI, r3
 800eb56:	f3bf 8f6f 	isb	sy
 800eb5a:	f3bf 8f4f 	dsb	sy
 800eb5e:	e7fe      	b.n	800eb5e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800eb60:	f7ff fa30 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb64:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb68:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb6a:	2d00      	cmp	r5, #0
 800eb6c:	dc04      	bgt.n	800eb78 <xQueueReceive+0x154>
 800eb6e:	e011      	b.n	800eb94 <xQueueReceive+0x170>
			--cTxLock;
 800eb70:	1e6b      	subs	r3, r5, #1
 800eb72:	b2da      	uxtb	r2, r3
 800eb74:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb76:	b16a      	cbz	r2, 800eb94 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb78:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb7a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb7c:	b153      	cbz	r3, 800eb94 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb7e:	f001 f89f 	bl	800fcc0 <xTaskRemoveFromEventList>
 800eb82:	2800      	cmp	r0, #0
 800eb84:	d0f4      	beq.n	800eb70 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800eb86:	f001 f937 	bl	800fdf8 <vTaskMissedYield>
			--cTxLock;
 800eb8a:	1e6b      	subs	r3, r5, #1
 800eb8c:	b2da      	uxtb	r2, r3
 800eb8e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb90:	2a00      	cmp	r2, #0
 800eb92:	d1f1      	bne.n	800eb78 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb94:	23ff      	movs	r3, #255	; 0xff
 800eb96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb9a:	f7ff fa35 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb9e:	f7ff fa11 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eba2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eba6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eba8:	2d00      	cmp	r5, #0
 800ebaa:	dd14      	ble.n	800ebd6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebac:	f104 0910 	add.w	r9, r4, #16
 800ebb0:	e003      	b.n	800ebba <xQueueReceive+0x196>
				--cRxLock;
 800ebb2:	1e6b      	subs	r3, r5, #1
 800ebb4:	b2da      	uxtb	r2, r3
 800ebb6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebb8:	b16a      	cbz	r2, 800ebd6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebba:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebbc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ebbe:	b153      	cbz	r3, 800ebd6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ebc0:	f001 f87e 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ebc4:	2800      	cmp	r0, #0
 800ebc6:	d0f4      	beq.n	800ebb2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800ebc8:	f001 f916 	bl	800fdf8 <vTaskMissedYield>
				--cRxLock;
 800ebcc:	1e6b      	subs	r3, r5, #1
 800ebce:	b2da      	uxtb	r2, r3
 800ebd0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ebd2:	2a00      	cmp	r2, #0
 800ebd4:	d1f1      	bne.n	800ebba <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ebd6:	23ff      	movs	r3, #255	; 0xff
 800ebd8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ebdc:	f7ff fa14 	bl	800e008 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ebe0:	f000 ff6e 	bl	800fac0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ebe4:	f7ff f9ee 	bl	800dfc4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ebe8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ebea:	b153      	cbz	r3, 800ec02 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ebec:	f7ff fa0c 	bl	800e008 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ebf0:	f7ff f9e8 	bl	800dfc4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ebf4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ebf6:	2d00      	cmp	r5, #0
 800ebf8:	d162      	bne.n	800ecc0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ebfa:	9b01      	ldr	r3, [sp, #4]
 800ebfc:	2b00      	cmp	r3, #0
 800ebfe:	f47f af31 	bne.w	800ea64 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ec02:	f7ff fa01 	bl	800e008 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ec06:	2000      	movs	r0, #0
}
 800ec08:	b005      	add	sp, #20
 800ec0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ec0e:	f7ff f9fb 	bl	800e008 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ec12:	9901      	ldr	r1, [sp, #4]
 800ec14:	4630      	mov	r0, r6
 800ec16:	f000 ffc5 	bl	800fba4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ec1a:	f7ff f9d3 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ec1e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ec22:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec24:	2d00      	cmp	r5, #0
 800ec26:	dc04      	bgt.n	800ec32 <xQueueReceive+0x20e>
 800ec28:	e011      	b.n	800ec4e <xQueueReceive+0x22a>
			--cTxLock;
 800ec2a:	1e6b      	subs	r3, r5, #1
 800ec2c:	b2da      	uxtb	r2, r3
 800ec2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec30:	b16a      	cbz	r2, 800ec4e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec32:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec34:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec36:	b153      	cbz	r3, 800ec4e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec38:	f001 f842 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ec3c:	2800      	cmp	r0, #0
 800ec3e:	d0f4      	beq.n	800ec2a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ec40:	f001 f8da 	bl	800fdf8 <vTaskMissedYield>
			--cTxLock;
 800ec44:	1e6b      	subs	r3, r5, #1
 800ec46:	b2da      	uxtb	r2, r3
 800ec48:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec4a:	2a00      	cmp	r2, #0
 800ec4c:	d1f1      	bne.n	800ec32 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ec4e:	23ff      	movs	r3, #255	; 0xff
 800ec50:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ec54:	f7ff f9d8 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ec58:	f7ff f9b4 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ec5c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ec60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec62:	2d00      	cmp	r5, #0
 800ec64:	dd14      	ble.n	800ec90 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec66:	f104 0910 	add.w	r9, r4, #16
 800ec6a:	e003      	b.n	800ec74 <xQueueReceive+0x250>
				--cRxLock;
 800ec6c:	1e6b      	subs	r3, r5, #1
 800ec6e:	b2da      	uxtb	r2, r3
 800ec70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec72:	b16a      	cbz	r2, 800ec90 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec74:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec76:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec78:	b153      	cbz	r3, 800ec90 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec7a:	f001 f821 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ec7e:	2800      	cmp	r0, #0
 800ec80:	d0f4      	beq.n	800ec6c <xQueueReceive+0x248>
					vTaskMissedYield();
 800ec82:	f001 f8b9 	bl	800fdf8 <vTaskMissedYield>
				--cRxLock;
 800ec86:	1e6b      	subs	r3, r5, #1
 800ec88:	b2da      	uxtb	r2, r3
 800ec8a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec8c:	2a00      	cmp	r2, #0
 800ec8e:	d1f1      	bne.n	800ec74 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800ec90:	23ff      	movs	r3, #255	; 0xff
 800ec92:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ec96:	f7ff f9b7 	bl	800e008 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ec9a:	f000 ff11 	bl	800fac0 <xTaskResumeAll>
 800ec9e:	2800      	cmp	r0, #0
 800eca0:	d1a6      	bne.n	800ebf0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800eca2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eca6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ecaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ecae:	f3bf 8f4f 	dsb	sy
 800ecb2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800ecb6:	f7ff f985 	bl	800dfc4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ecba:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ecbc:	2d00      	cmp	r5, #0
 800ecbe:	d09c      	beq.n	800ebfa <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ecc0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ecc2:	b152      	cbz	r2, 800ecda <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ecc4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ecc6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ecc8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ecca:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eccc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ecce:	bf24      	itt	cs
 800ecd0:	6821      	ldrcs	r1, [r4, #0]
 800ecd2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ecd4:	4638      	mov	r0, r7
 800ecd6:	f01c faa4 	bl	802b222 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ecda:	3d01      	subs	r5, #1
 800ecdc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ecde:	6923      	ldr	r3, [r4, #16]
 800ece0:	b963      	cbnz	r3, 800ecfc <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800ece2:	f7ff f991 	bl	800e008 <vPortExitCritical>
				return pdPASS;
 800ece6:	2001      	movs	r0, #1
 800ece8:	e78e      	b.n	800ec08 <xQueueReceive+0x1e4>
 800ecea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecee:	f383 8811 	msr	BASEPRI, r3
 800ecf2:	f3bf 8f6f 	isb	sy
 800ecf6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ecfa:	e7fe      	b.n	800ecfa <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecfc:	f104 0010 	add.w	r0, r4, #16
 800ed00:	f000 ffde 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ed04:	2800      	cmp	r0, #0
 800ed06:	d0ec      	beq.n	800ece2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800ed08:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ed0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ed10:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ed14:	f3bf 8f4f 	dsb	sy
 800ed18:	f3bf 8f6f 	isb	sy
 800ed1c:	e7e1      	b.n	800ece2 <xQueueReceive+0x2be>
 800ed1e:	bf00      	nop

0800ed20 <xQueueSemaphoreTake>:
{
 800ed20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed24:	b084      	sub	sp, #16
 800ed26:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ed28:	2800      	cmp	r0, #0
 800ed2a:	d05c      	beq.n	800ede6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ed2c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800ed2e:	4604      	mov	r4, r0
 800ed30:	b147      	cbz	r7, 800ed44 <xQueueSemaphoreTake+0x24>
 800ed32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed36:	f383 8811 	msr	BASEPRI, r3
 800ed3a:	f3bf 8f6f 	isb	sy
 800ed3e:	f3bf 8f4f 	dsb	sy
 800ed42:	e7fe      	b.n	800ed42 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ed44:	f001 f85e 	bl	800fe04 <xTaskGetSchedulerState>
 800ed48:	4605      	mov	r5, r0
 800ed4a:	2800      	cmp	r0, #0
 800ed4c:	d054      	beq.n	800edf8 <xQueueSemaphoreTake+0xd8>
 800ed4e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed50:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ed54:	f7ff f936 	bl	800dfc4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ed58:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ed5a:	2b00      	cmp	r3, #0
 800ed5c:	f040 8148 	bne.w	800eff0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ed60:	9b01      	ldr	r3, [sp, #4]
 800ed62:	2b00      	cmp	r3, #0
 800ed64:	f000 813a 	beq.w	800efdc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800ed68:	2d00      	cmp	r5, #0
 800ed6a:	f000 809d 	beq.w	800eea8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ed6e:	f7ff f94b 	bl	800e008 <vPortExitCritical>
		vTaskSuspendAll();
 800ed72:	f000 fe9d 	bl	800fab0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ed76:	f7ff f925 	bl	800dfc4 <vPortEnterCritical>
 800ed7a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed7e:	2bff      	cmp	r3, #255	; 0xff
 800ed80:	bf04      	itt	eq
 800ed82:	2300      	moveq	r3, #0
 800ed84:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ed88:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed8c:	2bff      	cmp	r3, #255	; 0xff
 800ed8e:	bf04      	itt	eq
 800ed90:	2300      	moveq	r3, #0
 800ed92:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ed96:	f7ff f937 	bl	800e008 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ed9a:	a901      	add	r1, sp, #4
 800ed9c:	a802      	add	r0, sp, #8
 800ed9e:	f000 ffe3 	bl	800fd68 <xTaskCheckForTimeOut>
 800eda2:	2800      	cmp	r0, #0
 800eda4:	d135      	bne.n	800ee12 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800eda6:	f7ff f90d 	bl	800dfc4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800edaa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800edac:	2b00      	cmp	r3, #0
 800edae:	f000 80a4 	beq.w	800eefa <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800edb2:	f7ff f929 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800edb6:	f7ff f905 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800edba:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800edbe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edc0:	2d00      	cmp	r5, #0
 800edc2:	dc05      	bgt.n	800edd0 <xQueueSemaphoreTake+0xb0>
 800edc4:	e074      	b.n	800eeb0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800edc6:	1e6b      	subs	r3, r5, #1
 800edc8:	b2da      	uxtb	r2, r3
 800edca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edcc:	2a00      	cmp	r2, #0
 800edce:	d06f      	beq.n	800eeb0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800edd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800edd2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800edd4:	2b00      	cmp	r3, #0
 800edd6:	d06b      	beq.n	800eeb0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800edd8:	f000 ff72 	bl	800fcc0 <xTaskRemoveFromEventList>
 800eddc:	2800      	cmp	r0, #0
 800edde:	d0f2      	beq.n	800edc6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ede0:	f001 f80a 	bl	800fdf8 <vTaskMissedYield>
 800ede4:	e7ef      	b.n	800edc6 <xQueueSemaphoreTake+0xa6>
 800ede6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edea:	f383 8811 	msr	BASEPRI, r3
 800edee:	f3bf 8f6f 	isb	sy
 800edf2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800edf6:	e7fe      	b.n	800edf6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800edf8:	9b01      	ldr	r3, [sp, #4]
 800edfa:	2b00      	cmp	r3, #0
 800edfc:	f000 80d4 	beq.w	800efa8 <xQueueSemaphoreTake+0x288>
 800ee00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee04:	f383 8811 	msr	BASEPRI, r3
 800ee08:	f3bf 8f6f 	isb	sy
 800ee0c:	f3bf 8f4f 	dsb	sy
 800ee10:	e7fe      	b.n	800ee10 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ee12:	f7ff f8d7 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee16:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ee1a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee1c:	2d00      	cmp	r5, #0
 800ee1e:	dc04      	bgt.n	800ee2a <xQueueSemaphoreTake+0x10a>
 800ee20:	e011      	b.n	800ee46 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ee22:	1e6b      	subs	r3, r5, #1
 800ee24:	b2da      	uxtb	r2, r3
 800ee26:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee28:	b16a      	cbz	r2, 800ee46 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee2c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee2e:	b153      	cbz	r3, 800ee46 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee30:	f000 ff46 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ee34:	2800      	cmp	r0, #0
 800ee36:	d0f4      	beq.n	800ee22 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800ee38:	f000 ffde 	bl	800fdf8 <vTaskMissedYield>
			--cTxLock;
 800ee3c:	1e6b      	subs	r3, r5, #1
 800ee3e:	b2da      	uxtb	r2, r3
 800ee40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee42:	2a00      	cmp	r2, #0
 800ee44:	d1f1      	bne.n	800ee2a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ee46:	23ff      	movs	r3, #255	; 0xff
 800ee48:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ee4c:	f7ff f8dc 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ee50:	f7ff f8b8 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ee54:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ee58:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee5a:	2d00      	cmp	r5, #0
 800ee5c:	dd14      	ble.n	800ee88 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee5e:	f104 0810 	add.w	r8, r4, #16
 800ee62:	e003      	b.n	800ee6c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ee64:	1e6b      	subs	r3, r5, #1
 800ee66:	b2da      	uxtb	r2, r3
 800ee68:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee6a:	b16a      	cbz	r2, 800ee88 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee6c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee6e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee70:	b153      	cbz	r3, 800ee88 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee72:	f000 ff25 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ee76:	2800      	cmp	r0, #0
 800ee78:	d0f4      	beq.n	800ee64 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ee7a:	f000 ffbd 	bl	800fdf8 <vTaskMissedYield>
				--cRxLock;
 800ee7e:	1e6b      	subs	r3, r5, #1
 800ee80:	b2da      	uxtb	r2, r3
 800ee82:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee84:	2a00      	cmp	r2, #0
 800ee86:	d1f1      	bne.n	800ee6c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee88:	23ff      	movs	r3, #255	; 0xff
 800ee8a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee8e:	f7ff f8bb 	bl	800e008 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ee92:	f000 fe15 	bl	800fac0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ee96:	f7ff f895 	bl	800dfc4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ee9a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ee9c:	2b00      	cmp	r3, #0
 800ee9e:	d07c      	beq.n	800ef9a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800eea0:	f7ff f8b2 	bl	800e008 <vPortExitCritical>
	return xReturn;
 800eea4:	2501      	movs	r5, #1
 800eea6:	e755      	b.n	800ed54 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800eea8:	a802      	add	r0, sp, #8
 800eeaa:	f000 ff51 	bl	800fd50 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800eeae:	e75e      	b.n	800ed6e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800eeb0:	23ff      	movs	r3, #255	; 0xff
 800eeb2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eeb6:	f7ff f8a7 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eeba:	f7ff f883 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eebe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eec2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eec4:	2d00      	cmp	r5, #0
 800eec6:	dd10      	ble.n	800eeea <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eec8:	f104 0810 	add.w	r8, r4, #16
 800eecc:	e003      	b.n	800eed6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800eece:	1e6b      	subs	r3, r5, #1
 800eed0:	b2da      	uxtb	r2, r3
 800eed2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eed4:	b14a      	cbz	r2, 800eeea <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eed6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eed8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eeda:	b133      	cbz	r3, 800eeea <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eedc:	f000 fef0 	bl	800fcc0 <xTaskRemoveFromEventList>
 800eee0:	2800      	cmp	r0, #0
 800eee2:	d0f4      	beq.n	800eece <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800eee4:	f000 ff88 	bl	800fdf8 <vTaskMissedYield>
 800eee8:	e7f1      	b.n	800eece <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800eeea:	23ff      	movs	r3, #255	; 0xff
 800eeec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eef0:	f7ff f88a 	bl	800e008 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800eef4:	f000 fde4 	bl	800fac0 <xTaskResumeAll>
 800eef8:	e7d4      	b.n	800eea4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800eefa:	f7ff f885 	bl	800e008 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eefe:	6823      	ldr	r3, [r4, #0]
 800ef00:	2b00      	cmp	r3, #0
 800ef02:	d062      	beq.n	800efca <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ef04:	9901      	ldr	r1, [sp, #4]
 800ef06:	4630      	mov	r0, r6
 800ef08:	f000 fe4c 	bl	800fba4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ef0c:	f7ff f85a 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ef10:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ef14:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef16:	2d00      	cmp	r5, #0
 800ef18:	dc04      	bgt.n	800ef24 <xQueueSemaphoreTake+0x204>
 800ef1a:	e00d      	b.n	800ef38 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ef1c:	1e6b      	subs	r3, r5, #1
 800ef1e:	b2da      	uxtb	r2, r3
 800ef20:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef22:	b14a      	cbz	r2, 800ef38 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef24:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef26:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef28:	b133      	cbz	r3, 800ef38 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef2a:	f000 fec9 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ef2e:	2800      	cmp	r0, #0
 800ef30:	d0f4      	beq.n	800ef1c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800ef32:	f000 ff61 	bl	800fdf8 <vTaskMissedYield>
 800ef36:	e7f1      	b.n	800ef1c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef38:	23ff      	movs	r3, #255	; 0xff
 800ef3a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ef3e:	f7ff f863 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef42:	f7ff f83f 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef46:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ef4a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef4c:	2d00      	cmp	r5, #0
 800ef4e:	dd10      	ble.n	800ef72 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef50:	f104 0810 	add.w	r8, r4, #16
 800ef54:	e003      	b.n	800ef5e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800ef56:	1e6b      	subs	r3, r5, #1
 800ef58:	b2da      	uxtb	r2, r3
 800ef5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef5c:	b14a      	cbz	r2, 800ef72 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef5e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef60:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef62:	b133      	cbz	r3, 800ef72 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef64:	f000 feac 	bl	800fcc0 <xTaskRemoveFromEventList>
 800ef68:	2800      	cmp	r0, #0
 800ef6a:	d0f4      	beq.n	800ef56 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800ef6c:	f000 ff44 	bl	800fdf8 <vTaskMissedYield>
 800ef70:	e7f1      	b.n	800ef56 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef72:	23ff      	movs	r3, #255	; 0xff
 800ef74:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ef78:	f7ff f846 	bl	800e008 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ef7c:	f000 fda0 	bl	800fac0 <xTaskResumeAll>
 800ef80:	2800      	cmp	r0, #0
 800ef82:	d18f      	bne.n	800eea4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800ef84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef90:	f3bf 8f4f 	dsb	sy
 800ef94:	f3bf 8f6f 	isb	sy
 800ef98:	e784      	b.n	800eea4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ef9a:	f7ff f835 	bl	800e008 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800ef9e:	b92f      	cbnz	r7, 800efac <xQueueSemaphoreTake+0x28c>
}
 800efa0:	4638      	mov	r0, r7
 800efa2:	b004      	add	sp, #16
 800efa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800efa8:	4607      	mov	r7, r0
 800efaa:	e6d1      	b.n	800ed50 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800efac:	f7ff f80a 	bl	800dfc4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800efb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800efb2:	b119      	cbz	r1, 800efbc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800efb4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800efb6:	6819      	ldr	r1, [r3, #0]
 800efb8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800efbc:	68a0      	ldr	r0, [r4, #8]
 800efbe:	f000 ffbd 	bl	800ff3c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800efc2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800efc4:	f7ff f820 	bl	800e008 <vPortExitCritical>
 800efc8:	e7ea      	b.n	800efa0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800efca:	f7fe fffb 	bl	800dfc4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800efce:	68a0      	ldr	r0, [r4, #8]
 800efd0:	f000 ff28 	bl	800fe24 <xTaskPriorityInherit>
 800efd4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800efd6:	f7ff f817 	bl	800e008 <vPortExitCritical>
 800efda:	e793      	b.n	800ef04 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800efdc:	b197      	cbz	r7, 800f004 <xQueueSemaphoreTake+0x2e4>
 800efde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efe2:	f383 8811 	msr	BASEPRI, r3
 800efe6:	f3bf 8f6f 	isb	sy
 800efea:	f3bf 8f4f 	dsb	sy
 800efee:	e7fe      	b.n	800efee <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eff0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800eff2:	3b01      	subs	r3, #1
 800eff4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eff6:	b1ca      	cbz	r2, 800f02c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eff8:	6923      	ldr	r3, [r4, #16]
 800effa:	b933      	cbnz	r3, 800f00a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800effc:	f7ff f804 	bl	800e008 <vPortExitCritical>
				return pdPASS;
 800f000:	2701      	movs	r7, #1
 800f002:	e7cd      	b.n	800efa0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800f004:	f7ff f800 	bl	800e008 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f008:	e7ca      	b.n	800efa0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f00a:	f104 0010 	add.w	r0, r4, #16
 800f00e:	f000 fe57 	bl	800fcc0 <xTaskRemoveFromEventList>
 800f012:	2800      	cmp	r0, #0
 800f014:	d0f2      	beq.n	800effc <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800f016:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f01a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f01e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f022:	f3bf 8f4f 	dsb	sy
 800f026:	f3bf 8f6f 	isb	sy
 800f02a:	e7e7      	b.n	800effc <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f02c:	f000 ffda 	bl	800ffe4 <pvTaskIncrementMutexHeldCount>
 800f030:	60a0      	str	r0, [r4, #8]
 800f032:	e7e1      	b.n	800eff8 <xQueueSemaphoreTake+0x2d8>

0800f034 <xQueueReceiveFromISR>:
{
 800f034:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800f038:	b310      	cbz	r0, 800f080 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f03a:	460e      	mov	r6, r1
 800f03c:	4617      	mov	r7, r2
 800f03e:	4604      	mov	r4, r0
 800f040:	b191      	cbz	r1, 800f068 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f042:	f7ff f8f3 	bl	800e22c <vPortValidateInterruptPriority>
	__asm volatile
 800f046:	f3ef 8911 	mrs	r9, BASEPRI
 800f04a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f04e:	f383 8811 	msr	BASEPRI, r3
 800f052:	f3bf 8f6f 	isb	sy
 800f056:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f05a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f05c:	b9cd      	cbnz	r5, 800f092 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800f05e:	4628      	mov	r0, r5
	__asm volatile
 800f060:	f389 8811 	msr	BASEPRI, r9
}
 800f064:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f068:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f06a:	2b00      	cmp	r3, #0
 800f06c:	d0e9      	beq.n	800f042 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800f06e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f072:	f383 8811 	msr	BASEPRI, r3
 800f076:	f3bf 8f6f 	isb	sy
 800f07a:	f3bf 8f4f 	dsb	sy
 800f07e:	e7fe      	b.n	800f07e <xQueueReceiveFromISR+0x4a>
 800f080:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f084:	f383 8811 	msr	BASEPRI, r3
 800f088:	f3bf 8f6f 	isb	sy
 800f08c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f090:	e7fe      	b.n	800f090 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f092:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f096:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800f098:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f09c:	b152      	cbz	r2, 800f0b4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f09e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f0a0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f0a2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f0a4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f0a6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f0a8:	bf24      	itt	cs
 800f0aa:	6821      	ldrcs	r1, [r4, #0]
 800f0ac:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f0ae:	4630      	mov	r0, r6
 800f0b0:	f01c f8b7 	bl	802b222 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f0b4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f0b6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f0ba:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f0bc:	d009      	beq.n	800f0d2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f0be:	f108 0301 	add.w	r3, r8, #1
 800f0c2:	b25b      	sxtb	r3, r3
 800f0c4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800f0c8:	2001      	movs	r0, #1
	__asm volatile
 800f0ca:	f389 8811 	msr	BASEPRI, r9
}
 800f0ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f0d2:	6923      	ldr	r3, [r4, #16]
 800f0d4:	2b00      	cmp	r3, #0
 800f0d6:	d0f7      	beq.n	800f0c8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f0d8:	f104 0010 	add.w	r0, r4, #16
 800f0dc:	f000 fdf0 	bl	800fcc0 <xTaskRemoveFromEventList>
 800f0e0:	2800      	cmp	r0, #0
 800f0e2:	d0f1      	beq.n	800f0c8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f0e4:	2f00      	cmp	r7, #0
 800f0e6:	d0ef      	beq.n	800f0c8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f0e8:	2001      	movs	r0, #1
 800f0ea:	6038      	str	r0, [r7, #0]
 800f0ec:	e7b8      	b.n	800f060 <xQueueReceiveFromISR+0x2c>
 800f0ee:	bf00      	nop

0800f0f0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f0f0:	b158      	cbz	r0, 800f10a <uxQueueMessagesWaiting+0x1a>
{
 800f0f2:	b510      	push	{r4, lr}
 800f0f4:	4604      	mov	r4, r0
 800f0f6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f0f8:	f7fe ff64 	bl	800dfc4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f0fc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f0fe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f100:	f7fe ff82 	bl	800e008 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f104:	9801      	ldr	r0, [sp, #4]
 800f106:	b002      	add	sp, #8
 800f108:	bd10      	pop	{r4, pc}
	__asm volatile
 800f10a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f10e:	f383 8811 	msr	BASEPRI, r3
 800f112:	f3bf 8f6f 	isb	sy
 800f116:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f11a:	e7fe      	b.n	800f11a <uxQueueMessagesWaiting+0x2a>

0800f11c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f11c:	b108      	cbz	r0, 800f122 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f11e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f120:	4770      	bx	lr
 800f122:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f126:	f383 8811 	msr	BASEPRI, r3
 800f12a:	f3bf 8f6f 	isb	sy
 800f12e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f132:	e7fe      	b.n	800f132 <uxQueueMessagesWaitingFromISR+0x16>
 800f134:	0000      	movs	r0, r0
	...

0800f138 <vQueueDelete>:
	configASSERT( pxQueue );
 800f138:	b1f0      	cbz	r0, 800f178 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f13a:	4b21      	ldr	r3, [pc, #132]	; (800f1c0 <vQueueDelete+0x88>)
 800f13c:	685a      	ldr	r2, [r3, #4]
 800f13e:	4290      	cmp	r0, r2
 800f140:	d025      	beq.n	800f18e <vQueueDelete+0x56>
 800f142:	68da      	ldr	r2, [r3, #12]
 800f144:	4290      	cmp	r0, r2
 800f146:	d02c      	beq.n	800f1a2 <vQueueDelete+0x6a>
 800f148:	695a      	ldr	r2, [r3, #20]
 800f14a:	4290      	cmp	r0, r2
 800f14c:	d02b      	beq.n	800f1a6 <vQueueDelete+0x6e>
 800f14e:	69da      	ldr	r2, [r3, #28]
 800f150:	4290      	cmp	r0, r2
 800f152:	d02a      	beq.n	800f1aa <vQueueDelete+0x72>
 800f154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f156:	4290      	cmp	r0, r2
 800f158:	d029      	beq.n	800f1ae <vQueueDelete+0x76>
 800f15a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f15c:	4290      	cmp	r0, r2
 800f15e:	d01e      	beq.n	800f19e <vQueueDelete+0x66>
 800f160:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f162:	4290      	cmp	r0, r2
 800f164:	d025      	beq.n	800f1b2 <vQueueDelete+0x7a>
 800f166:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f168:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f16a:	bf08      	it	eq
 800f16c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f16e:	d00f      	beq.n	800f190 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f170:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f174:	b14b      	cbz	r3, 800f18a <vQueueDelete+0x52>
}
 800f176:	4770      	bx	lr
 800f178:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f17c:	f383 8811 	msr	BASEPRI, r3
 800f180:	f3bf 8f6f 	isb	sy
 800f184:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f188:	e7fe      	b.n	800f188 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f18a:	f7fe be07 	b.w	800dd9c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f18e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f190:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f1b8 <vQueueDelete+0x80>
 800f194:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f198:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f19c:	e7e8      	b.n	800f170 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f19e:	2205      	movs	r2, #5
 800f1a0:	e7f6      	b.n	800f190 <vQueueDelete+0x58>
 800f1a2:	2201      	movs	r2, #1
 800f1a4:	e7f4      	b.n	800f190 <vQueueDelete+0x58>
 800f1a6:	2202      	movs	r2, #2
 800f1a8:	e7f2      	b.n	800f190 <vQueueDelete+0x58>
 800f1aa:	2203      	movs	r2, #3
 800f1ac:	e7f0      	b.n	800f190 <vQueueDelete+0x58>
 800f1ae:	2204      	movs	r2, #4
 800f1b0:	e7ee      	b.n	800f190 <vQueueDelete+0x58>
 800f1b2:	2206      	movs	r2, #6
 800f1b4:	e7ec      	b.n	800f190 <vQueueDelete+0x58>
 800f1b6:	bf00      	nop
	...
 800f1c0:	20012740 	.word	0x20012740

0800f1c4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f1c4:	4b12      	ldr	r3, [pc, #72]	; (800f210 <vQueueAddToRegistry+0x4c>)
 800f1c6:	681a      	ldr	r2, [r3, #0]
 800f1c8:	b17a      	cbz	r2, 800f1ea <vQueueAddToRegistry+0x26>
 800f1ca:	689a      	ldr	r2, [r3, #8]
 800f1cc:	b162      	cbz	r2, 800f1e8 <vQueueAddToRegistry+0x24>
 800f1ce:	691a      	ldr	r2, [r3, #16]
 800f1d0:	b192      	cbz	r2, 800f1f8 <vQueueAddToRegistry+0x34>
 800f1d2:	699a      	ldr	r2, [r3, #24]
 800f1d4:	b192      	cbz	r2, 800f1fc <vQueueAddToRegistry+0x38>
 800f1d6:	6a1a      	ldr	r2, [r3, #32]
 800f1d8:	b192      	cbz	r2, 800f200 <vQueueAddToRegistry+0x3c>
 800f1da:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f1dc:	b192      	cbz	r2, 800f204 <vQueueAddToRegistry+0x40>
 800f1de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f1e0:	b192      	cbz	r2, 800f208 <vQueueAddToRegistry+0x44>
 800f1e2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f1e4:	b192      	cbz	r2, 800f20c <vQueueAddToRegistry+0x48>
	}
 800f1e6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f1e8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f1ea:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f1ee:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f1f2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f1f6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f1f8:	2202      	movs	r2, #2
 800f1fa:	e7f6      	b.n	800f1ea <vQueueAddToRegistry+0x26>
 800f1fc:	2203      	movs	r2, #3
 800f1fe:	e7f4      	b.n	800f1ea <vQueueAddToRegistry+0x26>
 800f200:	2204      	movs	r2, #4
 800f202:	e7f2      	b.n	800f1ea <vQueueAddToRegistry+0x26>
 800f204:	2205      	movs	r2, #5
 800f206:	e7f0      	b.n	800f1ea <vQueueAddToRegistry+0x26>
 800f208:	2206      	movs	r2, #6
 800f20a:	e7ee      	b.n	800f1ea <vQueueAddToRegistry+0x26>
 800f20c:	2207      	movs	r2, #7
 800f20e:	e7ec      	b.n	800f1ea <vQueueAddToRegistry+0x26>
 800f210:	20012740 	.word	0x20012740

0800f214 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f214:	b570      	push	{r4, r5, r6, lr}
 800f216:	4605      	mov	r5, r0
 800f218:	460e      	mov	r6, r1
 800f21a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f21c:	f7fe fed2 	bl	800dfc4 <vPortEnterCritical>
 800f220:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f224:	2bff      	cmp	r3, #255	; 0xff
 800f226:	bf04      	itt	eq
 800f228:	2300      	moveq	r3, #0
 800f22a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f22e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f232:	2bff      	cmp	r3, #255	; 0xff
 800f234:	bf04      	itt	eq
 800f236:	2300      	moveq	r3, #0
 800f238:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f23c:	f7fe fee4 	bl	800e008 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f240:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f242:	2b00      	cmp	r3, #0
 800f244:	d043      	beq.n	800f2ce <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f246:	f7fe febd 	bl	800dfc4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f24a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f24e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f250:	2c00      	cmp	r4, #0
 800f252:	dd14      	ble.n	800f27e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f254:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f258:	e003      	b.n	800f262 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f25a:	1e63      	subs	r3, r4, #1
 800f25c:	b2da      	uxtb	r2, r3
 800f25e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f260:	b16a      	cbz	r2, 800f27e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f262:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f264:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f266:	b153      	cbz	r3, 800f27e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f268:	f000 fd2a 	bl	800fcc0 <xTaskRemoveFromEventList>
 800f26c:	2800      	cmp	r0, #0
 800f26e:	d0f4      	beq.n	800f25a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f270:	f000 fdc2 	bl	800fdf8 <vTaskMissedYield>
			--cTxLock;
 800f274:	1e63      	subs	r3, r4, #1
 800f276:	b2da      	uxtb	r2, r3
 800f278:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f27a:	2a00      	cmp	r2, #0
 800f27c:	d1f1      	bne.n	800f262 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f27e:	23ff      	movs	r3, #255	; 0xff
 800f280:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f284:	f7fe fec0 	bl	800e008 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f288:	f7fe fe9c 	bl	800dfc4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f28c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f290:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f292:	2c00      	cmp	r4, #0
 800f294:	dd14      	ble.n	800f2c0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f296:	f105 0610 	add.w	r6, r5, #16
 800f29a:	e003      	b.n	800f2a4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f29c:	1e63      	subs	r3, r4, #1
 800f29e:	b2da      	uxtb	r2, r3
 800f2a0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f2a2:	b16a      	cbz	r2, 800f2c0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f2a4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f2a6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f2a8:	b153      	cbz	r3, 800f2c0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f2aa:	f000 fd09 	bl	800fcc0 <xTaskRemoveFromEventList>
 800f2ae:	2800      	cmp	r0, #0
 800f2b0:	d0f4      	beq.n	800f29c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f2b2:	f000 fda1 	bl	800fdf8 <vTaskMissedYield>
				--cRxLock;
 800f2b6:	1e63      	subs	r3, r4, #1
 800f2b8:	b2da      	uxtb	r2, r3
 800f2ba:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f2bc:	2a00      	cmp	r2, #0
 800f2be:	d1f1      	bne.n	800f2a4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f2c0:	23ff      	movs	r3, #255	; 0xff
 800f2c2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f2c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f2ca:	f7fe be9d 	b.w	800e008 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f2ce:	4622      	mov	r2, r4
 800f2d0:	4631      	mov	r1, r6
 800f2d2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f2d6:	f000 fca9 	bl	800fc2c <vTaskPlaceOnEventListRestricted>
 800f2da:	e7b4      	b.n	800f246 <vQueueWaitForMessageRestricted+0x32>

0800f2dc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f2dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f2e0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f2e2:	f7fe fe6f 	bl	800dfc4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f2e6:	4a34      	ldr	r2, [pc, #208]	; (800f3b8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f2e8:	4e34      	ldr	r6, [pc, #208]	; (800f3bc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f2ea:	6813      	ldr	r3, [r2, #0]
 800f2ec:	3301      	adds	r3, #1
 800f2ee:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f2f0:	6833      	ldr	r3, [r6, #0]
 800f2f2:	2b00      	cmp	r3, #0
 800f2f4:	d032      	beq.n	800f35c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f2f6:	4c32      	ldr	r4, [pc, #200]	; (800f3c0 <prvAddNewTaskToReadyList+0xe4>)
 800f2f8:	6823      	ldr	r3, [r4, #0]
 800f2fa:	b33b      	cbz	r3, 800f34c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f2fc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f2fe:	4f31      	ldr	r7, [pc, #196]	; (800f3c4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f300:	4a31      	ldr	r2, [pc, #196]	; (800f3c8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f302:	4932      	ldr	r1, [pc, #200]	; (800f3cc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f304:	6813      	ldr	r3, [r2, #0]
 800f306:	3301      	adds	r3, #1
 800f308:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f30a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f30c:	680b      	ldr	r3, [r1, #0]
 800f30e:	4283      	cmp	r3, r0
 800f310:	bf38      	it	cc
 800f312:	6008      	strcc	r0, [r1, #0]
 800f314:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f318:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f31c:	1d29      	adds	r1, r5, #4
 800f31e:	f7fe fdb1 	bl	800de84 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f322:	f7fe fe71 	bl	800e008 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f326:	6823      	ldr	r3, [r4, #0]
 800f328:	b173      	cbz	r3, 800f348 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f32a:	6832      	ldr	r2, [r6, #0]
 800f32c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f32e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f330:	429a      	cmp	r2, r3
 800f332:	d209      	bcs.n	800f348 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f334:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f338:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f33c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f340:	f3bf 8f4f 	dsb	sy
 800f344:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f348:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f34c:	6833      	ldr	r3, [r6, #0]
 800f34e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f350:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f352:	4f1c      	ldr	r7, [pc, #112]	; (800f3c4 <prvAddNewTaskToReadyList+0xe8>)
 800f354:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f356:	bf98      	it	ls
 800f358:	6035      	strls	r5, [r6, #0]
 800f35a:	e7d1      	b.n	800f300 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f35c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f35e:	6813      	ldr	r3, [r2, #0]
 800f360:	2b01      	cmp	r3, #1
 800f362:	d003      	beq.n	800f36c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f364:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f366:	4f17      	ldr	r7, [pc, #92]	; (800f3c4 <prvAddNewTaskToReadyList+0xe8>)
 800f368:	4c15      	ldr	r4, [pc, #84]	; (800f3c0 <prvAddNewTaskToReadyList+0xe4>)
 800f36a:	e7c9      	b.n	800f300 <prvAddNewTaskToReadyList+0x24>
 800f36c:	4f15      	ldr	r7, [pc, #84]	; (800f3c4 <prvAddNewTaskToReadyList+0xe8>)
 800f36e:	463c      	mov	r4, r7
 800f370:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f374:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f376:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f378:	f7fe fd74 	bl	800de64 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f37c:	45a0      	cmp	r8, r4
 800f37e:	d1f9      	bne.n	800f374 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f380:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f3e4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f384:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f3e8 <prvAddNewTaskToReadyList+0x10c>
 800f388:	4c0d      	ldr	r4, [pc, #52]	; (800f3c0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f38a:	4648      	mov	r0, r9
 800f38c:	f7fe fd6a 	bl	800de64 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f390:	4640      	mov	r0, r8
 800f392:	f7fe fd67 	bl	800de64 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f396:	480e      	ldr	r0, [pc, #56]	; (800f3d0 <prvAddNewTaskToReadyList+0xf4>)
 800f398:	f7fe fd64 	bl	800de64 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f39c:	480d      	ldr	r0, [pc, #52]	; (800f3d4 <prvAddNewTaskToReadyList+0xf8>)
 800f39e:	f7fe fd61 	bl	800de64 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f3a2:	480d      	ldr	r0, [pc, #52]	; (800f3d8 <prvAddNewTaskToReadyList+0xfc>)
 800f3a4:	f7fe fd5e 	bl	800de64 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f3a8:	4b0c      	ldr	r3, [pc, #48]	; (800f3dc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f3aa:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f3ac:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f3b0:	4b0b      	ldr	r3, [pc, #44]	; (800f3e0 <prvAddNewTaskToReadyList+0x104>)
 800f3b2:	f8c3 8000 	str.w	r8, [r3]
}
 800f3b6:	e7a3      	b.n	800f300 <prvAddNewTaskToReadyList+0x24>
 800f3b8:	20012bec 	.word	0x20012bec
 800f3bc:	20012780 	.word	0x20012780
 800f3c0:	20012c48 	.word	0x20012c48
 800f3c4:	2001278c 	.word	0x2001278c
 800f3c8:	20012bf8 	.word	0x20012bf8
 800f3cc:	20012bfc 	.word	0x20012bfc
 800f3d0:	20012c34 	.word	0x20012c34
 800f3d4:	20012c60 	.word	0x20012c60
 800f3d8:	20012c4c 	.word	0x20012c4c
 800f3dc:	20012784 	.word	0x20012784
 800f3e0:	20012788 	.word	0x20012788
 800f3e4:	20012c00 	.word	0x20012c00
 800f3e8:	20012c14 	.word	0x20012c14

0800f3ec <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f3ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f3f0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f3f2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f3f6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f3fa:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f3fc:	4606      	mov	r6, r0
 800f3fe:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f400:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f402:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f404:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f406:	f01b fde6 	bl	802afd6 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f40a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f40c:	f1a9 0904 	sub.w	r9, r9, #4
 800f410:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f412:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f416:	2d00      	cmp	r5, #0
 800f418:	d079      	beq.n	800f50e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f41a:	782b      	ldrb	r3, [r5, #0]
 800f41c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f420:	2b00      	cmp	r3, #0
 800f422:	d03b      	beq.n	800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f424:	786b      	ldrb	r3, [r5, #1]
 800f426:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f42a:	2b00      	cmp	r3, #0
 800f42c:	d036      	beq.n	800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f42e:	78ab      	ldrb	r3, [r5, #2]
 800f430:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f434:	b393      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f436:	78eb      	ldrb	r3, [r5, #3]
 800f438:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f43c:	b373      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f43e:	792b      	ldrb	r3, [r5, #4]
 800f440:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f444:	b353      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f446:	796b      	ldrb	r3, [r5, #5]
 800f448:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f44c:	b333      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f44e:	79ab      	ldrb	r3, [r5, #6]
 800f450:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f454:	b313      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f456:	79eb      	ldrb	r3, [r5, #7]
 800f458:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f45c:	b1f3      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f45e:	7a2b      	ldrb	r3, [r5, #8]
 800f460:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f464:	b1d3      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f466:	7a6b      	ldrb	r3, [r5, #9]
 800f468:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f46c:	b1b3      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f46e:	7aab      	ldrb	r3, [r5, #10]
 800f470:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f474:	b193      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f476:	7aeb      	ldrb	r3, [r5, #11]
 800f478:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f47c:	b173      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f47e:	7b2b      	ldrb	r3, [r5, #12]
 800f480:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f484:	b153      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f486:	7b6b      	ldrb	r3, [r5, #13]
 800f488:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f48c:	b133      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f48e:	7bab      	ldrb	r3, [r5, #14]
 800f490:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f494:	b113      	cbz	r3, 800f49c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f496:	7beb      	ldrb	r3, [r5, #15]
 800f498:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f49c:	2300      	movs	r3, #0
 800f49e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f4a2:	9d08      	ldr	r5, [sp, #32]
 800f4a4:	2d37      	cmp	r5, #55	; 0x37
 800f4a6:	bf28      	it	cs
 800f4a8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f4aa:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f4ae:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f4b0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f4b2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f4b4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f4b8:	f7fe fce0 	bl	800de7c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4bc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f4c0:	f104 0018 	add.w	r0, r4, #24
 800f4c4:	f7fe fcda 	bl	800de7c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4c8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f4ca:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f4ce:	4651      	mov	r1, sl
 800f4d0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f4d2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f4d4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f4d6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f4da:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f4de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f4e2:	f01b fd78 	bl	802afd6 <memset>
 800f4e6:	4b0b      	ldr	r3, [pc, #44]	; (800f514 <prvInitialiseNewTask.constprop.0+0x128>)
 800f4e8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f4ea:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f4ee:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f4f0:	463a      	mov	r2, r7
 800f4f2:	4631      	mov	r1, r6
 800f4f4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f4f6:	6625      	str	r5, [r4, #96]	; 0x60
 800f4f8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f4fa:	f7fe fd3d 	bl	800df78 <pxPortInitialiseStack>
 800f4fe:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f500:	f1b8 0f00 	cmp.w	r8, #0
 800f504:	d001      	beq.n	800f50a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f506:	f8c8 4000 	str.w	r4, [r8]
}
 800f50a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f50e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f512:	e7c6      	b.n	800f4a2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f514:	20013710 	.word	0x20013710

0800f518 <prvIdleTask>:
{
 800f518:	b580      	push	{r7, lr}
 800f51a:	4d23      	ldr	r5, [pc, #140]	; (800f5a8 <prvIdleTask+0x90>)
 800f51c:	4f23      	ldr	r7, [pc, #140]	; (800f5ac <prvIdleTask+0x94>)
 800f51e:	4e24      	ldr	r6, [pc, #144]	; (800f5b0 <prvIdleTask+0x98>)
 800f520:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f5b4 <prvIdleTask+0x9c>
				taskYIELD();
 800f524:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f528:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f52c:	682b      	ldr	r3, [r5, #0]
 800f52e:	b35b      	cbz	r3, 800f588 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f530:	f7fe fd48 	bl	800dfc4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f534:	68fb      	ldr	r3, [r7, #12]
 800f536:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f538:	1d20      	adds	r0, r4, #4
 800f53a:	f7fe fccb 	bl	800ded4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f53e:	6833      	ldr	r3, [r6, #0]
 800f540:	3b01      	subs	r3, #1
 800f542:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f544:	682b      	ldr	r3, [r5, #0]
 800f546:	3b01      	subs	r3, #1
 800f548:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f54a:	f7fe fd5d 	bl	800e008 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f54e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f552:	f01b fd89 	bl	802b068 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f556:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f55a:	b163      	cbz	r3, 800f576 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f55c:	2b01      	cmp	r3, #1
 800f55e:	d01e      	beq.n	800f59e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f560:	2b02      	cmp	r3, #2
 800f562:	d0e3      	beq.n	800f52c <prvIdleTask+0x14>
 800f564:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f568:	f383 8811 	msr	BASEPRI, r3
 800f56c:	f3bf 8f6f 	isb	sy
 800f570:	f3bf 8f4f 	dsb	sy
 800f574:	e7fe      	b.n	800f574 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f576:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f578:	f7fe fc10 	bl	800dd9c <vPortFree>
				vPortFree( pxTCB );
 800f57c:	4620      	mov	r0, r4
 800f57e:	f7fe fc0d 	bl	800dd9c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f582:	682b      	ldr	r3, [r5, #0]
 800f584:	2b00      	cmp	r3, #0
 800f586:	d1d3      	bne.n	800f530 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f588:	f8d8 3000 	ldr.w	r3, [r8]
 800f58c:	2b01      	cmp	r3, #1
 800f58e:	d9cd      	bls.n	800f52c <prvIdleTask+0x14>
				taskYIELD();
 800f590:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f594:	f3bf 8f4f 	dsb	sy
 800f598:	f3bf 8f6f 	isb	sy
 800f59c:	e7c6      	b.n	800f52c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f59e:	4620      	mov	r0, r4
 800f5a0:	f7fe fbfc 	bl	800dd9c <vPortFree>
 800f5a4:	e7c2      	b.n	800f52c <prvIdleTask+0x14>
 800f5a6:	bf00      	nop
 800f5a8:	20012bf0 	.word	0x20012bf0
 800f5ac:	20012c60 	.word	0x20012c60
 800f5b0:	20012bec 	.word	0x20012bec
 800f5b4:	2001278c 	.word	0x2001278c

0800f5b8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f5b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f5bc:	4b47      	ldr	r3, [pc, #284]	; (800f6dc <xTaskIncrementTick.part.0+0x124>)
 800f5be:	681e      	ldr	r6, [r3, #0]
 800f5c0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f5c2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f5c4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f5c6:	2e00      	cmp	r6, #0
 800f5c8:	d040      	beq.n	800f64c <xTaskIncrementTick.part.0+0x94>
 800f5ca:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f6f0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f5ce:	f8db 3000 	ldr.w	r3, [fp]
 800f5d2:	429e      	cmp	r6, r3
 800f5d4:	d347      	bcc.n	800f666 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f5d6:	4f42      	ldr	r7, [pc, #264]	; (800f6e0 <xTaskIncrementTick.part.0+0x128>)
 800f5d8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f6f4 <xTaskIncrementTick.part.0+0x13c>
 800f5dc:	683b      	ldr	r3, [r7, #0]
 800f5de:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f6f8 <xTaskIncrementTick.part.0+0x140>
 800f5e2:	681d      	ldr	r5, [r3, #0]
 800f5e4:	2d00      	cmp	r5, #0
 800f5e6:	d073      	beq.n	800f6d0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f5e8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f6fc <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f5ec:	2500      	movs	r5, #0
 800f5ee:	e022      	b.n	800f636 <xTaskIncrementTick.part.0+0x7e>
 800f5f0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f5f2:	f7fe fc6f 	bl	800ded4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f5f6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f5f8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f5fa:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f5fe:	b113      	cbz	r3, 800f606 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f600:	f7fe fc68 	bl	800ded4 <uxListRemove>
 800f604:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f606:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f608:	f8d8 2000 	ldr.w	r2, [r8]
 800f60c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f610:	4293      	cmp	r3, r2
 800f612:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f616:	bf88      	it	hi
 800f618:	f8c8 3000 	strhi.w	r3, [r8]
 800f61c:	f7fe fc32 	bl	800de84 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f620:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f624:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f626:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f628:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f62a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f62c:	4291      	cmp	r1, r2
 800f62e:	bf28      	it	cs
 800f630:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f632:	2b00      	cmp	r3, #0
 800f634:	d04c      	beq.n	800f6d0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f636:	683b      	ldr	r3, [r7, #0]
 800f638:	68db      	ldr	r3, [r3, #12]
 800f63a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f63c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f63e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f640:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f642:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f644:	d2d4      	bcs.n	800f5f0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f646:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f64a:	e011      	b.n	800f670 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f64c:	4b24      	ldr	r3, [pc, #144]	; (800f6e0 <xTaskIncrementTick.part.0+0x128>)
 800f64e:	681a      	ldr	r2, [r3, #0]
 800f650:	6812      	ldr	r2, [r2, #0]
 800f652:	b30a      	cbz	r2, 800f698 <xTaskIncrementTick.part.0+0xe0>
 800f654:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f658:	f383 8811 	msr	BASEPRI, r3
 800f65c:	f3bf 8f6f 	isb	sy
 800f660:	f3bf 8f4f 	dsb	sy
 800f664:	e7fe      	b.n	800f664 <xTaskIncrementTick.part.0+0xac>
 800f666:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f6f4 <xTaskIncrementTick.part.0+0x13c>
 800f66a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f6f8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f66e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f670:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f674:	491b      	ldr	r1, [pc, #108]	; (800f6e4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f676:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f678:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f67c:	009b      	lsls	r3, r3, #2
 800f67e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f682:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f684:	2a02      	cmp	r2, #2
 800f686:	bf28      	it	cs
 800f688:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f68a:	2b00      	cmp	r3, #0
}
 800f68c:	bf0c      	ite	eq
 800f68e:	4628      	moveq	r0, r5
 800f690:	2001      	movne	r0, #1
 800f692:	b003      	add	sp, #12
 800f694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f698:	4a13      	ldr	r2, [pc, #76]	; (800f6e8 <xTaskIncrementTick.part.0+0x130>)
 800f69a:	6818      	ldr	r0, [r3, #0]
 800f69c:	6811      	ldr	r1, [r2, #0]
 800f69e:	6019      	str	r1, [r3, #0]
 800f6a0:	4912      	ldr	r1, [pc, #72]	; (800f6ec <xTaskIncrementTick.part.0+0x134>)
 800f6a2:	6010      	str	r0, [r2, #0]
 800f6a4:	680a      	ldr	r2, [r1, #0]
 800f6a6:	3201      	adds	r2, #1
 800f6a8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f6aa:	681a      	ldr	r2, [r3, #0]
 800f6ac:	6812      	ldr	r2, [r2, #0]
 800f6ae:	b932      	cbnz	r2, 800f6be <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f6b0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f6f0 <xTaskIncrementTick.part.0+0x138>
 800f6b4:	f04f 33ff 	mov.w	r3, #4294967295
 800f6b8:	f8cb 3000 	str.w	r3, [fp]
 800f6bc:	e787      	b.n	800f5ce <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6be:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f6c0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f6f0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f6c4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f6c6:	68db      	ldr	r3, [r3, #12]
 800f6c8:	685b      	ldr	r3, [r3, #4]
 800f6ca:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f6ce:	e77e      	b.n	800f5ce <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f6d0:	f04f 33ff 	mov.w	r3, #4294967295
 800f6d4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f6d8:	e7ca      	b.n	800f670 <xTaskIncrementTick.part.0+0xb8>
 800f6da:	bf00      	nop
 800f6dc:	20012c74 	.word	0x20012c74
 800f6e0:	20012784 	.word	0x20012784
 800f6e4:	20012c78 	.word	0x20012c78
 800f6e8:	20012788 	.word	0x20012788
 800f6ec:	20012c2c 	.word	0x20012c2c
 800f6f0:	20012c28 	.word	0x20012c28
 800f6f4:	2001278c 	.word	0x2001278c
 800f6f8:	20012780 	.word	0x20012780
 800f6fc:	20012bfc 	.word	0x20012bfc

0800f700 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f704:	4d41      	ldr	r5, [pc, #260]	; (800f80c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f706:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f708:	f7fe fc5c 	bl	800dfc4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f70c:	682b      	ldr	r3, [r5, #0]
 800f70e:	3b01      	subs	r3, #1
 800f710:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f712:	682b      	ldr	r3, [r5, #0]
 800f714:	2b00      	cmp	r3, #0
 800f716:	d161      	bne.n	800f7dc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f718:	4b3d      	ldr	r3, [pc, #244]	; (800f810 <xTaskResumeAll.part.0+0x110>)
 800f71a:	681b      	ldr	r3, [r3, #0]
 800f71c:	2b00      	cmp	r3, #0
 800f71e:	d05d      	beq.n	800f7dc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f720:	4e3c      	ldr	r6, [pc, #240]	; (800f814 <xTaskResumeAll.part.0+0x114>)
 800f722:	6833      	ldr	r3, [r6, #0]
 800f724:	2b00      	cmp	r3, #0
 800f726:	d06e      	beq.n	800f806 <xTaskResumeAll.part.0+0x106>
 800f728:	4f3b      	ldr	r7, [pc, #236]	; (800f818 <xTaskResumeAll.part.0+0x118>)
 800f72a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f828 <xTaskResumeAll.part.0+0x128>
 800f72e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f82c <xTaskResumeAll.part.0+0x12c>
 800f732:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f830 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f736:	68f3      	ldr	r3, [r6, #12]
 800f738:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f73a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f73e:	f104 0018 	add.w	r0, r4, #24
 800f742:	f7fe fbc7 	bl	800ded4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f746:	4658      	mov	r0, fp
 800f748:	f7fe fbc4 	bl	800ded4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f74c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f74e:	683a      	ldr	r2, [r7, #0]
 800f750:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f754:	4293      	cmp	r3, r2
 800f756:	4659      	mov	r1, fp
 800f758:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f75c:	bf88      	it	hi
 800f75e:	603b      	strhi	r3, [r7, #0]
 800f760:	f7fe fb90 	bl	800de84 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f764:	f8d8 3000 	ldr.w	r3, [r8]
 800f768:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f76a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f76c:	429a      	cmp	r2, r3
 800f76e:	d33d      	bcc.n	800f7ec <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f770:	2301      	movs	r3, #1
 800f772:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f776:	6833      	ldr	r3, [r6, #0]
 800f778:	2b00      	cmp	r3, #0
 800f77a:	d1dc      	bne.n	800f736 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f77c:	4b27      	ldr	r3, [pc, #156]	; (800f81c <xTaskResumeAll.part.0+0x11c>)
 800f77e:	681a      	ldr	r2, [r3, #0]
 800f780:	6812      	ldr	r2, [r2, #0]
 800f782:	2a00      	cmp	r2, #0
 800f784:	d03a      	beq.n	800f7fc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f786:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f788:	4b25      	ldr	r3, [pc, #148]	; (800f820 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f78a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f78c:	68d2      	ldr	r2, [r2, #12]
 800f78e:	6852      	ldr	r2, [r2, #4]
 800f790:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f792:	4e24      	ldr	r6, [pc, #144]	; (800f824 <xTaskResumeAll.part.0+0x124>)
 800f794:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f796:	b194      	cbz	r4, 800f7be <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f798:	2701      	movs	r7, #1
 800f79a:	e006      	b.n	800f7aa <xTaskResumeAll.part.0+0xaa>
 800f79c:	f7ff ff0c 	bl	800f5b8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f7a0:	b108      	cbz	r0, 800f7a6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f7a2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f7a6:	3c01      	subs	r4, #1
 800f7a8:	d008      	beq.n	800f7bc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f7aa:	682b      	ldr	r3, [r5, #0]
 800f7ac:	2b00      	cmp	r3, #0
 800f7ae:	d0f5      	beq.n	800f79c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f7b0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f7b2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f7b4:	f103 0301 	add.w	r3, r3, #1
 800f7b8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f7ba:	d1f6      	bne.n	800f7aa <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f7bc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f7be:	f8da 3000 	ldr.w	r3, [sl]
 800f7c2:	b15b      	cbz	r3, 800f7dc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f7c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f7c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f7cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f7d0:	f3bf 8f4f 	dsb	sy
 800f7d4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f7d8:	2001      	movs	r0, #1
 800f7da:	e000      	b.n	800f7de <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f7dc:	2000      	movs	r0, #0
 800f7de:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f7e0:	f7fe fc12 	bl	800e008 <vPortExitCritical>
}
 800f7e4:	9801      	ldr	r0, [sp, #4]
 800f7e6:	b003      	add	sp, #12
 800f7e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f7ec:	6833      	ldr	r3, [r6, #0]
 800f7ee:	2b00      	cmp	r3, #0
 800f7f0:	d1a1      	bne.n	800f736 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f7f2:	4b0a      	ldr	r3, [pc, #40]	; (800f81c <xTaskResumeAll.part.0+0x11c>)
 800f7f4:	681a      	ldr	r2, [r3, #0]
 800f7f6:	6812      	ldr	r2, [r2, #0]
 800f7f8:	2a00      	cmp	r2, #0
 800f7fa:	d1c4      	bne.n	800f786 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f7fc:	4b08      	ldr	r3, [pc, #32]	; (800f820 <xTaskResumeAll.part.0+0x120>)
 800f7fe:	f04f 32ff 	mov.w	r2, #4294967295
 800f802:	601a      	str	r2, [r3, #0]
 800f804:	e7c5      	b.n	800f792 <xTaskResumeAll.part.0+0x92>
 800f806:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f830 <xTaskResumeAll.part.0+0x130>
 800f80a:	e7c2      	b.n	800f792 <xTaskResumeAll.part.0+0x92>
 800f80c:	20012bf4 	.word	0x20012bf4
 800f810:	20012bec 	.word	0x20012bec
 800f814:	20012c34 	.word	0x20012c34
 800f818:	20012bfc 	.word	0x20012bfc
 800f81c:	20012784 	.word	0x20012784
 800f820:	20012c28 	.word	0x20012c28
 800f824:	20012c30 	.word	0x20012c30
 800f828:	2001278c 	.word	0x2001278c
 800f82c:	20012780 	.word	0x20012780
 800f830:	20012c78 	.word	0x20012c78

0800f834 <xTaskCreateStatic>:
	{
 800f834:	b530      	push	{r4, r5, lr}
 800f836:	b087      	sub	sp, #28
 800f838:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f83a:	b1c4      	cbz	r4, 800f86e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f83c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f83e:	b16d      	cbz	r5, 800f85c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f840:	25ac      	movs	r5, #172	; 0xac
 800f842:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f844:	9d05      	ldr	r5, [sp, #20]
 800f846:	2dac      	cmp	r5, #172	; 0xac
 800f848:	d01a      	beq.n	800f880 <xTaskCreateStatic+0x4c>
 800f84a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f84e:	f383 8811 	msr	BASEPRI, r3
 800f852:	f3bf 8f6f 	isb	sy
 800f856:	f3bf 8f4f 	dsb	sy
 800f85a:	e7fe      	b.n	800f85a <xTaskCreateStatic+0x26>
 800f85c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f860:	f383 8811 	msr	BASEPRI, r3
 800f864:	f3bf 8f6f 	isb	sy
 800f868:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f86c:	e7fe      	b.n	800f86c <xTaskCreateStatic+0x38>
 800f86e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f872:	f383 8811 	msr	BASEPRI, r3
 800f876:	f3bf 8f6f 	isb	sy
 800f87a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f87e:	e7fe      	b.n	800f87e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f880:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f882:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f884:	2402      	movs	r4, #2
 800f886:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f88a:	ac04      	add	r4, sp, #16
 800f88c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f890:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f892:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f894:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f896:	f7ff fda9 	bl	800f3ec <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f89a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f89c:	f7ff fd1e 	bl	800f2dc <prvAddNewTaskToReadyList>
	}
 800f8a0:	9804      	ldr	r0, [sp, #16]
 800f8a2:	b007      	add	sp, #28
 800f8a4:	bd30      	pop	{r4, r5, pc}
 800f8a6:	bf00      	nop

0800f8a8 <xTaskCreate>:
	{
 800f8a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f8ac:	4607      	mov	r7, r0
 800f8ae:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f8b0:	0090      	lsls	r0, r2, #2
	{
 800f8b2:	4615      	mov	r5, r2
 800f8b4:	4688      	mov	r8, r1
 800f8b6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f8b8:	f7fe f9b4 	bl	800dc24 <pvPortMalloc>
			if( pxStack != NULL )
 800f8bc:	b1d8      	cbz	r0, 800f8f6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f8be:	4604      	mov	r4, r0
 800f8c0:	20ac      	movs	r0, #172	; 0xac
 800f8c2:	f7fe f9af 	bl	800dc24 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f8c6:	4606      	mov	r6, r0
 800f8c8:	b1d0      	cbz	r0, 800f900 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f8ca:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f8cc:	2400      	movs	r4, #0
 800f8ce:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f8d2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f8d4:	9401      	str	r4, [sp, #4]
 800f8d6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f8d8:	9602      	str	r6, [sp, #8]
 800f8da:	464b      	mov	r3, r9
 800f8dc:	462a      	mov	r2, r5
 800f8de:	4641      	mov	r1, r8
 800f8e0:	4638      	mov	r0, r7
 800f8e2:	9400      	str	r4, [sp, #0]
 800f8e4:	f7ff fd82 	bl	800f3ec <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f8e8:	4630      	mov	r0, r6
 800f8ea:	f7ff fcf7 	bl	800f2dc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f8ee:	2001      	movs	r0, #1
	}
 800f8f0:	b005      	add	sp, #20
 800f8f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f8f6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f8fa:	b005      	add	sp, #20
 800f8fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f900:	4620      	mov	r0, r4
 800f902:	f7fe fa4b 	bl	800dd9c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f906:	f04f 30ff 	mov.w	r0, #4294967295
 800f90a:	e7f1      	b.n	800f8f0 <xTaskCreate+0x48>

0800f90c <vTaskDelay>:
	{
 800f90c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f90e:	b950      	cbnz	r0, 800f926 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f910:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f914:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f918:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f91c:	f3bf 8f4f 	dsb	sy
 800f920:	f3bf 8f6f 	isb	sy
	}
 800f924:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f926:	4d1e      	ldr	r5, [pc, #120]	; (800f9a0 <vTaskDelay+0x94>)
 800f928:	682b      	ldr	r3, [r5, #0]
 800f92a:	b143      	cbz	r3, 800f93e <vTaskDelay+0x32>
 800f92c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f930:	f383 8811 	msr	BASEPRI, r3
 800f934:	f3bf 8f6f 	isb	sy
 800f938:	f3bf 8f4f 	dsb	sy
 800f93c:	e7fe      	b.n	800f93c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f93e:	682b      	ldr	r3, [r5, #0]
 800f940:	3301      	adds	r3, #1
 800f942:	4604      	mov	r4, r0
 800f944:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f946:	4b17      	ldr	r3, [pc, #92]	; (800f9a4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f948:	4e17      	ldr	r6, [pc, #92]	; (800f9a8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f94a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f94c:	6830      	ldr	r0, [r6, #0]
 800f94e:	3004      	adds	r0, #4
 800f950:	f7fe fac0 	bl	800ded4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f954:	6833      	ldr	r3, [r6, #0]
 800f956:	19e4      	adds	r4, r4, r7
 800f958:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f95a:	d310      	bcc.n	800f97e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f95c:	4b13      	ldr	r3, [pc, #76]	; (800f9ac <vTaskDelay+0xa0>)
 800f95e:	6818      	ldr	r0, [r3, #0]
 800f960:	6831      	ldr	r1, [r6, #0]
 800f962:	3104      	adds	r1, #4
 800f964:	f7fe fa9e 	bl	800dea4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f968:	682b      	ldr	r3, [r5, #0]
 800f96a:	b9a3      	cbnz	r3, 800f996 <vTaskDelay+0x8a>
 800f96c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f970:	f383 8811 	msr	BASEPRI, r3
 800f974:	f3bf 8f6f 	isb	sy
 800f978:	f3bf 8f4f 	dsb	sy
 800f97c:	e7fe      	b.n	800f97c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f97e:	4b0c      	ldr	r3, [pc, #48]	; (800f9b0 <vTaskDelay+0xa4>)
 800f980:	6818      	ldr	r0, [r3, #0]
 800f982:	6831      	ldr	r1, [r6, #0]
 800f984:	3104      	adds	r1, #4
 800f986:	f7fe fa8d 	bl	800dea4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f98a:	4b0a      	ldr	r3, [pc, #40]	; (800f9b4 <vTaskDelay+0xa8>)
 800f98c:	681a      	ldr	r2, [r3, #0]
 800f98e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f990:	bf38      	it	cc
 800f992:	601c      	strcc	r4, [r3, #0]
 800f994:	e7e8      	b.n	800f968 <vTaskDelay+0x5c>
 800f996:	f7ff feb3 	bl	800f700 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f99a:	2800      	cmp	r0, #0
 800f99c:	d0b8      	beq.n	800f910 <vTaskDelay+0x4>
	}
 800f99e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9a0:	20012bf4 	.word	0x20012bf4
 800f9a4:	20012c74 	.word	0x20012c74
 800f9a8:	20012780 	.word	0x20012780
 800f9ac:	20012788 	.word	0x20012788
 800f9b0:	20012784 	.word	0x20012784
 800f9b4:	20012c28 	.word	0x20012c28

0800f9b8 <vTaskStartScheduler>:
{
 800f9b8:	b530      	push	{r4, r5, lr}
 800f9ba:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f9bc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f9be:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f9c0:	a906      	add	r1, sp, #24
 800f9c2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f9c4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f9c8:	f7fe f90e 	bl	800dbe8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f9cc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f9d0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f9d2:	b1bb      	cbz	r3, 800fa04 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f9d4:	b16d      	cbz	r5, 800f9f2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f9d6:	21ac      	movs	r1, #172	; 0xac
 800f9d8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f9da:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f9dc:	29ac      	cmp	r1, #172	; 0xac
 800f9de:	d01a      	beq.n	800fa16 <vTaskStartScheduler+0x5e>
 800f9e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9e4:	f383 8811 	msr	BASEPRI, r3
 800f9e8:	f3bf 8f6f 	isb	sy
 800f9ec:	f3bf 8f4f 	dsb	sy
 800f9f0:	e7fe      	b.n	800f9f0 <vTaskStartScheduler+0x38>
 800f9f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9f6:	f383 8811 	msr	BASEPRI, r3
 800f9fa:	f3bf 8f6f 	isb	sy
 800f9fe:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fa02:	e7fe      	b.n	800fa02 <vTaskStartScheduler+0x4a>
 800fa04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa08:	f383 8811 	msr	BASEPRI, r3
 800fa0c:	f3bf 8f6f 	isb	sy
 800fa10:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fa14:	e7fe      	b.n	800fa14 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fa16:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fa18:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fa1a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fa1c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fa20:	4623      	mov	r3, r4
 800fa22:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800fa26:	491b      	ldr	r1, [pc, #108]	; (800fa94 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fa28:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fa2a:	9400      	str	r4, [sp, #0]
 800fa2c:	481a      	ldr	r0, [pc, #104]	; (800fa98 <vTaskStartScheduler+0xe0>)
 800fa2e:	f7ff fcdd 	bl	800f3ec <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fa32:	4628      	mov	r0, r5
 800fa34:	f7ff fc52 	bl	800f2dc <prvAddNewTaskToReadyList>
		return xReturn;
 800fa38:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800fa3a:	b1eb      	cbz	r3, 800fa78 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800fa3c:	f000 fc6e 	bl	801031c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800fa40:	2801      	cmp	r0, #1
 800fa42:	d11b      	bne.n	800fa7c <vTaskStartScheduler+0xc4>
 800fa44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa48:	f383 8811 	msr	BASEPRI, r3
 800fa4c:	f3bf 8f6f 	isb	sy
 800fa50:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fa54:	4b11      	ldr	r3, [pc, #68]	; (800fa9c <vTaskStartScheduler+0xe4>)
 800fa56:	4a12      	ldr	r2, [pc, #72]	; (800faa0 <vTaskStartScheduler+0xe8>)
 800fa58:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800fa5a:	4912      	ldr	r1, [pc, #72]	; (800faa4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fa5c:	3358      	adds	r3, #88	; 0x58
 800fa5e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800fa60:	4a11      	ldr	r2, [pc, #68]	; (800faa8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fa62:	4b12      	ldr	r3, [pc, #72]	; (800faac <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800fa64:	f04f 35ff 	mov.w	r5, #4294967295
 800fa68:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800fa6a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fa6c:	601c      	str	r4, [r3, #0]
}
 800fa6e:	b00b      	add	sp, #44	; 0x2c
 800fa70:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800fa74:	f7fe bb38 	b.w	800e0e8 <xPortStartScheduler>
}
 800fa78:	b00b      	add	sp, #44	; 0x2c
 800fa7a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800fa7c:	3001      	adds	r0, #1
 800fa7e:	d1fb      	bne.n	800fa78 <vTaskStartScheduler+0xc0>
 800fa80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa84:	f383 8811 	msr	BASEPRI, r3
 800fa88:	f3bf 8f6f 	isb	sy
 800fa8c:	f3bf 8f4f 	dsb	sy
 800fa90:	e7fe      	b.n	800fa90 <vTaskStartScheduler+0xd8>
 800fa92:	bf00      	nop
 800fa94:	0802ec6c 	.word	0x0802ec6c
 800fa98:	0800f519 	.word	0x0800f519
 800fa9c:	20012780 	.word	0x20012780
 800faa0:	20000160 	.word	0x20000160
 800faa4:	20012c28 	.word	0x20012c28
 800faa8:	20012c48 	.word	0x20012c48
 800faac:	20012c74 	.word	0x20012c74

0800fab0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fab0:	4a02      	ldr	r2, [pc, #8]	; (800fabc <vTaskSuspendAll+0xc>)
 800fab2:	6813      	ldr	r3, [r2, #0]
 800fab4:	3301      	adds	r3, #1
 800fab6:	6013      	str	r3, [r2, #0]
}
 800fab8:	4770      	bx	lr
 800faba:	bf00      	nop
 800fabc:	20012bf4 	.word	0x20012bf4

0800fac0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800fac0:	4b06      	ldr	r3, [pc, #24]	; (800fadc <xTaskResumeAll+0x1c>)
 800fac2:	681b      	ldr	r3, [r3, #0]
 800fac4:	b943      	cbnz	r3, 800fad8 <xTaskResumeAll+0x18>
 800fac6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800faca:	f383 8811 	msr	BASEPRI, r3
 800face:	f3bf 8f6f 	isb	sy
 800fad2:	f3bf 8f4f 	dsb	sy
 800fad6:	e7fe      	b.n	800fad6 <xTaskResumeAll+0x16>
 800fad8:	f7ff be12 	b.w	800f700 <xTaskResumeAll.part.0>
 800fadc:	20012bf4 	.word	0x20012bf4

0800fae0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fae0:	4b01      	ldr	r3, [pc, #4]	; (800fae8 <xTaskGetTickCount+0x8>)
 800fae2:	6818      	ldr	r0, [r3, #0]
}
 800fae4:	4770      	bx	lr
 800fae6:	bf00      	nop
 800fae8:	20012c74 	.word	0x20012c74

0800faec <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800faec:	4b05      	ldr	r3, [pc, #20]	; (800fb04 <xTaskIncrementTick+0x18>)
 800faee:	681b      	ldr	r3, [r3, #0]
 800faf0:	b90b      	cbnz	r3, 800faf6 <xTaskIncrementTick+0xa>
 800faf2:	f7ff bd61 	b.w	800f5b8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800faf6:	4a04      	ldr	r2, [pc, #16]	; (800fb08 <xTaskIncrementTick+0x1c>)
 800faf8:	6813      	ldr	r3, [r2, #0]
 800fafa:	3301      	adds	r3, #1
}
 800fafc:	2000      	movs	r0, #0
		++xPendedTicks;
 800fafe:	6013      	str	r3, [r2, #0]
}
 800fb00:	4770      	bx	lr
 800fb02:	bf00      	nop
 800fb04:	20012bf4 	.word	0x20012bf4
 800fb08:	20012c30 	.word	0x20012c30

0800fb0c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fb0c:	4b1f      	ldr	r3, [pc, #124]	; (800fb8c <vTaskSwitchContext+0x80>)
 800fb0e:	681b      	ldr	r3, [r3, #0]
 800fb10:	b11b      	cbz	r3, 800fb1a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800fb12:	4b1f      	ldr	r3, [pc, #124]	; (800fb90 <vTaskSwitchContext+0x84>)
 800fb14:	2201      	movs	r2, #1
 800fb16:	601a      	str	r2, [r3, #0]
 800fb18:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800fb1a:	4a1d      	ldr	r2, [pc, #116]	; (800fb90 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb1c:	491d      	ldr	r1, [pc, #116]	; (800fb94 <vTaskSwitchContext+0x88>)
{
 800fb1e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb20:	4c1d      	ldr	r4, [pc, #116]	; (800fb98 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fb22:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb24:	6823      	ldr	r3, [r4, #0]
 800fb26:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fb2a:	0092      	lsls	r2, r2, #2
 800fb2c:	0098      	lsls	r0, r3, #2
 800fb2e:	588a      	ldr	r2, [r1, r2]
 800fb30:	b942      	cbnz	r2, 800fb44 <vTaskSwitchContext+0x38>
 800fb32:	b313      	cbz	r3, 800fb7a <vTaskSwitchContext+0x6e>
 800fb34:	3b01      	subs	r3, #1
 800fb36:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fb3a:	0098      	lsls	r0, r3, #2
 800fb3c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fb40:	2a00      	cmp	r2, #0
 800fb42:	d0f6      	beq.n	800fb32 <vTaskSwitchContext+0x26>
 800fb44:	4418      	add	r0, r3
 800fb46:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fb4a:	4662      	mov	r2, ip
 800fb4c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fb50:	6849      	ldr	r1, [r1, #4]
 800fb52:	f8cc 1004 	str.w	r1, [ip, #4]
 800fb56:	3208      	adds	r2, #8
 800fb58:	4291      	cmp	r1, r2
 800fb5a:	bf08      	it	eq
 800fb5c:	6849      	ldreq	r1, [r1, #4]
 800fb5e:	4a0f      	ldr	r2, [pc, #60]	; (800fb9c <vTaskSwitchContext+0x90>)
 800fb60:	bf08      	it	eq
 800fb62:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fb66:	68c9      	ldr	r1, [r1, #12]
 800fb68:	6011      	str	r1, [r2, #0]
 800fb6a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fb6c:	6813      	ldr	r3, [r2, #0]
 800fb6e:	4a0c      	ldr	r2, [pc, #48]	; (800fba0 <vTaskSwitchContext+0x94>)
}
 800fb70:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fb74:	3358      	adds	r3, #88	; 0x58
 800fb76:	6013      	str	r3, [r2, #0]
}
 800fb78:	4770      	bx	lr
 800fb7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb7e:	f383 8811 	msr	BASEPRI, r3
 800fb82:	f3bf 8f6f 	isb	sy
 800fb86:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb8a:	e7fe      	b.n	800fb8a <vTaskSwitchContext+0x7e>
 800fb8c:	20012bf4 	.word	0x20012bf4
 800fb90:	20012c78 	.word	0x20012c78
 800fb94:	2001278c 	.word	0x2001278c
 800fb98:	20012bfc 	.word	0x20012bfc
 800fb9c:	20012780 	.word	0x20012780
 800fba0:	20000160 	.word	0x20000160

0800fba4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fba4:	b1d0      	cbz	r0, 800fbdc <vTaskPlaceOnEventList+0x38>
{
 800fba6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fba8:	4d1a      	ldr	r5, [pc, #104]	; (800fc14 <vTaskPlaceOnEventList+0x70>)
 800fbaa:	460c      	mov	r4, r1
 800fbac:	6829      	ldr	r1, [r5, #0]
 800fbae:	3118      	adds	r1, #24
 800fbb0:	f7fe f978 	bl	800dea4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fbb4:	4b18      	ldr	r3, [pc, #96]	; (800fc18 <vTaskPlaceOnEventList+0x74>)
 800fbb6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fbb8:	6828      	ldr	r0, [r5, #0]
 800fbba:	3004      	adds	r0, #4
 800fbbc:	f7fe f98a 	bl	800ded4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fbc0:	1c63      	adds	r3, r4, #1
 800fbc2:	d014      	beq.n	800fbee <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fbc4:	682b      	ldr	r3, [r5, #0]
 800fbc6:	19a4      	adds	r4, r4, r6
 800fbc8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fbca:	d317      	bcc.n	800fbfc <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbcc:	4b13      	ldr	r3, [pc, #76]	; (800fc1c <vTaskPlaceOnEventList+0x78>)
 800fbce:	6818      	ldr	r0, [r3, #0]
 800fbd0:	6829      	ldr	r1, [r5, #0]
}
 800fbd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbd6:	3104      	adds	r1, #4
 800fbd8:	f7fe b964 	b.w	800dea4 <vListInsert>
 800fbdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbe0:	f383 8811 	msr	BASEPRI, r3
 800fbe4:	f3bf 8f6f 	isb	sy
 800fbe8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800fbec:	e7fe      	b.n	800fbec <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbee:	6829      	ldr	r1, [r5, #0]
 800fbf0:	480b      	ldr	r0, [pc, #44]	; (800fc20 <vTaskPlaceOnEventList+0x7c>)
}
 800fbf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbf6:	3104      	adds	r1, #4
 800fbf8:	f7fe b944 	b.w	800de84 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fbfc:	4b09      	ldr	r3, [pc, #36]	; (800fc24 <vTaskPlaceOnEventList+0x80>)
 800fbfe:	6818      	ldr	r0, [r3, #0]
 800fc00:	6829      	ldr	r1, [r5, #0]
 800fc02:	3104      	adds	r1, #4
 800fc04:	f7fe f94e 	bl	800dea4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fc08:	4b07      	ldr	r3, [pc, #28]	; (800fc28 <vTaskPlaceOnEventList+0x84>)
 800fc0a:	681a      	ldr	r2, [r3, #0]
 800fc0c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fc0e:	bf38      	it	cc
 800fc10:	601c      	strcc	r4, [r3, #0]
}
 800fc12:	bd70      	pop	{r4, r5, r6, pc}
 800fc14:	20012780 	.word	0x20012780
 800fc18:	20012c74 	.word	0x20012c74
 800fc1c:	20012788 	.word	0x20012788
 800fc20:	20012c4c 	.word	0x20012c4c
 800fc24:	20012784 	.word	0x20012784
 800fc28:	20012c28 	.word	0x20012c28

0800fc2c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fc2c:	b330      	cbz	r0, 800fc7c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fc2e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fc30:	4e1d      	ldr	r6, [pc, #116]	; (800fca8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800fc32:	460c      	mov	r4, r1
 800fc34:	6831      	ldr	r1, [r6, #0]
 800fc36:	4615      	mov	r5, r2
 800fc38:	3118      	adds	r1, #24
 800fc3a:	f7fe f923 	bl	800de84 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800fc3e:	4b1b      	ldr	r3, [pc, #108]	; (800fcac <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fc40:	b985      	cbnz	r5, 800fc64 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fc42:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc44:	6830      	ldr	r0, [r6, #0]
 800fc46:	3004      	adds	r0, #4
 800fc48:	f7fe f944 	bl	800ded4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fc4c:	6833      	ldr	r3, [r6, #0]
 800fc4e:	1964      	adds	r4, r4, r5
 800fc50:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fc52:	d31c      	bcc.n	800fc8e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc54:	4b16      	ldr	r3, [pc, #88]	; (800fcb0 <vTaskPlaceOnEventListRestricted+0x84>)
 800fc56:	6818      	ldr	r0, [r3, #0]
 800fc58:	6831      	ldr	r1, [r6, #0]
	}
 800fc5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc5e:	3104      	adds	r1, #4
 800fc60:	f7fe b920 	b.w	800dea4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fc64:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc66:	6830      	ldr	r0, [r6, #0]
 800fc68:	3004      	adds	r0, #4
 800fc6a:	f7fe f933 	bl	800ded4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc6e:	6831      	ldr	r1, [r6, #0]
 800fc70:	4810      	ldr	r0, [pc, #64]	; (800fcb4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fc72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc76:	3104      	adds	r1, #4
 800fc78:	f7fe b904 	b.w	800de84 <vListInsertEnd>
 800fc7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc80:	f383 8811 	msr	BASEPRI, r3
 800fc84:	f3bf 8f6f 	isb	sy
 800fc88:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800fc8c:	e7fe      	b.n	800fc8c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc8e:	4b0a      	ldr	r3, [pc, #40]	; (800fcb8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800fc90:	6818      	ldr	r0, [r3, #0]
 800fc92:	6831      	ldr	r1, [r6, #0]
 800fc94:	3104      	adds	r1, #4
 800fc96:	f7fe f905 	bl	800dea4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fc9a:	4b08      	ldr	r3, [pc, #32]	; (800fcbc <vTaskPlaceOnEventListRestricted+0x90>)
 800fc9c:	681a      	ldr	r2, [r3, #0]
 800fc9e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fca0:	bf38      	it	cc
 800fca2:	601c      	strcc	r4, [r3, #0]
	}
 800fca4:	bd70      	pop	{r4, r5, r6, pc}
 800fca6:	bf00      	nop
 800fca8:	20012780 	.word	0x20012780
 800fcac:	20012c74 	.word	0x20012c74
 800fcb0:	20012788 	.word	0x20012788
 800fcb4:	20012c4c 	.word	0x20012c4c
 800fcb8:	20012784 	.word	0x20012784
 800fcbc:	20012c28 	.word	0x20012c28

0800fcc0 <xTaskRemoveFromEventList>:
{
 800fcc0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fcc2:	68c3      	ldr	r3, [r0, #12]
 800fcc4:	68dc      	ldr	r4, [r3, #12]
{
 800fcc6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fcc8:	2c00      	cmp	r4, #0
 800fcca:	d02b      	beq.n	800fd24 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fccc:	f104 0518 	add.w	r5, r4, #24
 800fcd0:	4628      	mov	r0, r5
 800fcd2:	f7fe f8ff 	bl	800ded4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fcd6:	4b18      	ldr	r3, [pc, #96]	; (800fd38 <xTaskRemoveFromEventList+0x78>)
 800fcd8:	681b      	ldr	r3, [r3, #0]
 800fcda:	b17b      	cbz	r3, 800fcfc <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fcdc:	4817      	ldr	r0, [pc, #92]	; (800fd3c <xTaskRemoveFromEventList+0x7c>)
 800fcde:	4629      	mov	r1, r5
 800fce0:	f7fe f8d0 	bl	800de84 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fce4:	4b16      	ldr	r3, [pc, #88]	; (800fd40 <xTaskRemoveFromEventList+0x80>)
 800fce6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fce8:	681b      	ldr	r3, [r3, #0]
 800fcea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fcec:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fcee:	bf85      	ittet	hi
 800fcf0:	4b14      	ldrhi	r3, [pc, #80]	; (800fd44 <xTaskRemoveFromEventList+0x84>)
 800fcf2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fcf4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fcf6:	6018      	strhi	r0, [r3, #0]
}
 800fcf8:	b003      	add	sp, #12
 800fcfa:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fcfc:	1d21      	adds	r1, r4, #4
 800fcfe:	4608      	mov	r0, r1
 800fd00:	9101      	str	r1, [sp, #4]
 800fd02:	f7fe f8e7 	bl	800ded4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fd06:	4a10      	ldr	r2, [pc, #64]	; (800fd48 <xTaskRemoveFromEventList+0x88>)
 800fd08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fd0a:	6810      	ldr	r0, [r2, #0]
 800fd0c:	9901      	ldr	r1, [sp, #4]
 800fd0e:	4283      	cmp	r3, r0
 800fd10:	480e      	ldr	r0, [pc, #56]	; (800fd4c <xTaskRemoveFromEventList+0x8c>)
 800fd12:	bf88      	it	hi
 800fd14:	6013      	strhi	r3, [r2, #0]
 800fd16:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fd1a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fd1e:	f7fe f8b1 	bl	800de84 <vListInsertEnd>
 800fd22:	e7df      	b.n	800fce4 <xTaskRemoveFromEventList+0x24>
 800fd24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd28:	f383 8811 	msr	BASEPRI, r3
 800fd2c:	f3bf 8f6f 	isb	sy
 800fd30:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fd34:	e7fe      	b.n	800fd34 <xTaskRemoveFromEventList+0x74>
 800fd36:	bf00      	nop
 800fd38:	20012bf4 	.word	0x20012bf4
 800fd3c:	20012c34 	.word	0x20012c34
 800fd40:	20012780 	.word	0x20012780
 800fd44:	20012c78 	.word	0x20012c78
 800fd48:	20012bfc 	.word	0x20012bfc
 800fd4c:	2001278c 	.word	0x2001278c

0800fd50 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fd50:	4a03      	ldr	r2, [pc, #12]	; (800fd60 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fd52:	4b04      	ldr	r3, [pc, #16]	; (800fd64 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fd54:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fd56:	681b      	ldr	r3, [r3, #0]
 800fd58:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fd5c:	4770      	bx	lr
 800fd5e:	bf00      	nop
 800fd60:	20012c2c 	.word	0x20012c2c
 800fd64:	20012c74 	.word	0x20012c74

0800fd68 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fd68:	b328      	cbz	r0, 800fdb6 <xTaskCheckForTimeOut+0x4e>
{
 800fd6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fd6c:	460d      	mov	r5, r1
 800fd6e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fd70:	b1c1      	cbz	r1, 800fda4 <xTaskCheckForTimeOut+0x3c>
 800fd72:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fd74:	f7fe f926 	bl	800dfc4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fd78:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fd7a:	4a1d      	ldr	r2, [pc, #116]	; (800fdf0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fd7c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fd7e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fd80:	d030      	beq.n	800fde4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fd82:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fdf4 <xTaskCheckForTimeOut+0x8c>
 800fd86:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fd8a:	f8dc 7000 	ldr.w	r7, [ip]
 800fd8e:	42be      	cmp	r6, r7
 800fd90:	d01a      	beq.n	800fdc8 <xTaskCheckForTimeOut+0x60>
 800fd92:	4288      	cmp	r0, r1
 800fd94:	d818      	bhi.n	800fdc8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fd96:	2001      	movs	r0, #1
 800fd98:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fd9a:	f7fe f935 	bl	800e008 <vPortExitCritical>
}
 800fd9e:	9801      	ldr	r0, [sp, #4]
 800fda0:	b003      	add	sp, #12
 800fda2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fda4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fda8:	f383 8811 	msr	BASEPRI, r3
 800fdac:	f3bf 8f6f 	isb	sy
 800fdb0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fdb4:	e7fe      	b.n	800fdb4 <xTaskCheckForTimeOut+0x4c>
 800fdb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdba:	f383 8811 	msr	BASEPRI, r3
 800fdbe:	f3bf 8f6f 	isb	sy
 800fdc2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fdc6:	e7fe      	b.n	800fdc6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fdc8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fdcc:	4573      	cmp	r3, lr
 800fdce:	d90b      	bls.n	800fde8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fdd0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fdd2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fdd6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fdd8:	4403      	add	r3, r0
 800fdda:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fddc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fdde:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fde2:	e7d9      	b.n	800fd98 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fde4:	2000      	movs	r0, #0
 800fde6:	e7d7      	b.n	800fd98 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fde8:	2300      	movs	r3, #0
 800fdea:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fdec:	2001      	movs	r0, #1
 800fdee:	e7d3      	b.n	800fd98 <xTaskCheckForTimeOut+0x30>
 800fdf0:	20012c74 	.word	0x20012c74
 800fdf4:	20012c2c 	.word	0x20012c2c

0800fdf8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fdf8:	4b01      	ldr	r3, [pc, #4]	; (800fe00 <vTaskMissedYield+0x8>)
 800fdfa:	2201      	movs	r2, #1
 800fdfc:	601a      	str	r2, [r3, #0]
}
 800fdfe:	4770      	bx	lr
 800fe00:	20012c78 	.word	0x20012c78

0800fe04 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fe04:	4b05      	ldr	r3, [pc, #20]	; (800fe1c <xTaskGetSchedulerState+0x18>)
 800fe06:	681b      	ldr	r3, [r3, #0]
 800fe08:	b133      	cbz	r3, 800fe18 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fe0a:	4b05      	ldr	r3, [pc, #20]	; (800fe20 <xTaskGetSchedulerState+0x1c>)
 800fe0c:	6818      	ldr	r0, [r3, #0]
 800fe0e:	fab0 f080 	clz	r0, r0
 800fe12:	0940      	lsrs	r0, r0, #5
 800fe14:	0040      	lsls	r0, r0, #1
 800fe16:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fe18:	2001      	movs	r0, #1
	}
 800fe1a:	4770      	bx	lr
 800fe1c:	20012c48 	.word	0x20012c48
 800fe20:	20012bf4 	.word	0x20012bf4

0800fe24 <xTaskPriorityInherit>:
	{
 800fe24:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fe26:	4604      	mov	r4, r0
	{
 800fe28:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fe2a:	b1c8      	cbz	r0, 800fe60 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fe2c:	4d1d      	ldr	r5, [pc, #116]	; (800fea4 <xTaskPriorityInherit+0x80>)
 800fe2e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fe30:	682a      	ldr	r2, [r5, #0]
 800fe32:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fe34:	4293      	cmp	r3, r2
 800fe36:	d215      	bcs.n	800fe64 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fe38:	6982      	ldr	r2, [r0, #24]
 800fe3a:	2a00      	cmp	r2, #0
 800fe3c:	db04      	blt.n	800fe48 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fe3e:	682a      	ldr	r2, [r5, #0]
 800fe40:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fe42:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fe46:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fe48:	4e17      	ldr	r6, [pc, #92]	; (800fea8 <xTaskPriorityInherit+0x84>)
 800fe4a:	6962      	ldr	r2, [r4, #20]
 800fe4c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fe50:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fe54:	429a      	cmp	r2, r3
 800fe56:	d00e      	beq.n	800fe76 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fe58:	682b      	ldr	r3, [r5, #0]
 800fe5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe5c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fe5e:	2001      	movs	r0, #1
	}
 800fe60:	b002      	add	sp, #8
 800fe62:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fe64:	682b      	ldr	r3, [r5, #0]
 800fe66:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fe68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe6a:	4298      	cmp	r0, r3
 800fe6c:	bf2c      	ite	cs
 800fe6e:	2000      	movcs	r0, #0
 800fe70:	2001      	movcc	r0, #1
	}
 800fe72:	b002      	add	sp, #8
 800fe74:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fe76:	1d21      	adds	r1, r4, #4
 800fe78:	4608      	mov	r0, r1
 800fe7a:	9101      	str	r1, [sp, #4]
 800fe7c:	f7fe f82a 	bl	800ded4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fe80:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fe82:	4b0a      	ldr	r3, [pc, #40]	; (800feac <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fe84:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fe86:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fe88:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fe8a:	4290      	cmp	r0, r2
 800fe8c:	bf88      	it	hi
 800fe8e:	6018      	strhi	r0, [r3, #0]
 800fe90:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fe94:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fe98:	9901      	ldr	r1, [sp, #4]
 800fe9a:	f7fd fff3 	bl	800de84 <vListInsertEnd>
				xReturn = pdTRUE;
 800fe9e:	2001      	movs	r0, #1
 800fea0:	e7de      	b.n	800fe60 <xTaskPriorityInherit+0x3c>
 800fea2:	bf00      	nop
 800fea4:	20012780 	.word	0x20012780
 800fea8:	2001278c 	.word	0x2001278c
 800feac:	20012bfc 	.word	0x20012bfc

0800feb0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800feb0:	b318      	cbz	r0, 800fefa <xTaskPriorityDisinherit+0x4a>
	{
 800feb2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800feb4:	4b1e      	ldr	r3, [pc, #120]	; (800ff30 <xTaskPriorityDisinherit+0x80>)
 800feb6:	681c      	ldr	r4, [r3, #0]
 800feb8:	4284      	cmp	r4, r0
	{
 800feba:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800febc:	d008      	beq.n	800fed0 <xTaskPriorityDisinherit+0x20>
 800febe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fec2:	f383 8811 	msr	BASEPRI, r3
 800fec6:	f3bf 8f6f 	isb	sy
 800feca:	f3bf 8f4f 	dsb	sy
 800fece:	e7fe      	b.n	800fece <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fed0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fed2:	b14b      	cbz	r3, 800fee8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fed4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fed6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fed8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800feda:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fedc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fede:	d000      	beq.n	800fee2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fee0:	b16b      	cbz	r3, 800fefe <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fee2:	2000      	movs	r0, #0
	}
 800fee4:	b002      	add	sp, #8
 800fee6:	bd10      	pop	{r4, pc}
 800fee8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800feec:	f383 8811 	msr	BASEPRI, r3
 800fef0:	f3bf 8f6f 	isb	sy
 800fef4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fef8:	e7fe      	b.n	800fef8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fefa:	2000      	movs	r0, #0
	}
 800fefc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fefe:	1d21      	adds	r1, r4, #4
 800ff00:	4608      	mov	r0, r1
 800ff02:	9101      	str	r1, [sp, #4]
 800ff04:	f7fd ffe6 	bl	800ded4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ff08:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ff0a:	4a0a      	ldr	r2, [pc, #40]	; (800ff34 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ff0c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ff0e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800ff12:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ff14:	6810      	ldr	r0, [r2, #0]
 800ff16:	9901      	ldr	r1, [sp, #4]
 800ff18:	4283      	cmp	r3, r0
 800ff1a:	4807      	ldr	r0, [pc, #28]	; (800ff38 <xTaskPriorityDisinherit+0x88>)
 800ff1c:	bf88      	it	hi
 800ff1e:	6013      	strhi	r3, [r2, #0]
 800ff20:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ff24:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ff28:	f7fd ffac 	bl	800de84 <vListInsertEnd>
					xReturn = pdTRUE;
 800ff2c:	2001      	movs	r0, #1
		return xReturn;
 800ff2e:	e7d9      	b.n	800fee4 <xTaskPriorityDisinherit+0x34>
 800ff30:	20012780 	.word	0x20012780
 800ff34:	20012bfc 	.word	0x20012bfc
 800ff38:	2001278c 	.word	0x2001278c

0800ff3c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800ff3c:	2800      	cmp	r0, #0
 800ff3e:	d041      	beq.n	800ffc4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800ff40:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800ff42:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800ff44:	b083      	sub	sp, #12
 800ff46:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800ff48:	b153      	cbz	r3, 800ff60 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ff4a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ff4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ff4e:	4281      	cmp	r1, r0
 800ff50:	bf38      	it	cc
 800ff52:	4601      	movcc	r1, r0
 800ff54:	428a      	cmp	r2, r1
 800ff56:	d001      	beq.n	800ff5c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ff58:	2b01      	cmp	r3, #1
 800ff5a:	d00a      	beq.n	800ff72 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800ff5c:	b003      	add	sp, #12
 800ff5e:	bd30      	pop	{r4, r5, pc}
 800ff60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff64:	f383 8811 	msr	BASEPRI, r3
 800ff68:	f3bf 8f6f 	isb	sy
 800ff6c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ff70:	e7fe      	b.n	800ff70 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800ff72:	4b19      	ldr	r3, [pc, #100]	; (800ffd8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800ff74:	681b      	ldr	r3, [r3, #0]
 800ff76:	42a3      	cmp	r3, r4
 800ff78:	d025      	beq.n	800ffc6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ff7a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800ff7c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ff7e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ff80:	bfa8      	it	ge
 800ff82:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ff86:	4d15      	ldr	r5, [pc, #84]	; (800ffdc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ff88:	bfa8      	it	ge
 800ff8a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ff8c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ff90:	6961      	ldr	r1, [r4, #20]
 800ff92:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800ff96:	4299      	cmp	r1, r3
 800ff98:	d1e0      	bne.n	800ff5c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff9a:	1d21      	adds	r1, r4, #4
 800ff9c:	4608      	mov	r0, r1
 800ff9e:	9101      	str	r1, [sp, #4]
 800ffa0:	f7fd ff98 	bl	800ded4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ffa4:	4b0e      	ldr	r3, [pc, #56]	; (800ffe0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800ffa6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ffa8:	681a      	ldr	r2, [r3, #0]
 800ffaa:	9901      	ldr	r1, [sp, #4]
 800ffac:	4290      	cmp	r0, r2
 800ffae:	bf88      	it	hi
 800ffb0:	6018      	strhi	r0, [r3, #0]
 800ffb2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ffb6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800ffba:	b003      	add	sp, #12
 800ffbc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800ffc0:	f7fd bf60 	b.w	800de84 <vListInsertEnd>
 800ffc4:	4770      	bx	lr
 800ffc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffca:	f383 8811 	msr	BASEPRI, r3
 800ffce:	f3bf 8f6f 	isb	sy
 800ffd2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800ffd6:	e7fe      	b.n	800ffd6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800ffd8:	20012780 	.word	0x20012780
 800ffdc:	2001278c 	.word	0x2001278c
 800ffe0:	20012bfc 	.word	0x20012bfc

0800ffe4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ffe4:	4b04      	ldr	r3, [pc, #16]	; (800fff8 <pvTaskIncrementMutexHeldCount+0x14>)
 800ffe6:	681a      	ldr	r2, [r3, #0]
 800ffe8:	b11a      	cbz	r2, 800fff2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ffea:	6819      	ldr	r1, [r3, #0]
 800ffec:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ffee:	3201      	adds	r2, #1
 800fff0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fff2:	6818      	ldr	r0, [r3, #0]
	}
 800fff4:	4770      	bx	lr
 800fff6:	bf00      	nop
 800fff8:	20012780 	.word	0x20012780

0800fffc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800fffc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010000:	4e22      	ldr	r6, [pc, #136]	; (801008c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8010002:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8010094 <prvSwitchTimerLists+0x98>
{
 8010006:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8010008:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801000c:	e00d      	b.n	801002a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801000e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010010:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010012:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010014:	1d25      	adds	r5, r4, #4
 8010016:	4628      	mov	r0, r5
 8010018:	f7fd ff5c 	bl	800ded4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801001c:	6a23      	ldr	r3, [r4, #32]
 801001e:	4620      	mov	r0, r4
 8010020:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010022:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8010026:	075b      	lsls	r3, r3, #29
 8010028:	d40a      	bmi.n	8010040 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801002a:	6833      	ldr	r3, [r6, #0]
 801002c:	681a      	ldr	r2, [r3, #0]
 801002e:	2a00      	cmp	r2, #0
 8010030:	d1ed      	bne.n	801000e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8010032:	4a17      	ldr	r2, [pc, #92]	; (8010090 <prvSwitchTimerLists+0x94>)
 8010034:	6811      	ldr	r1, [r2, #0]
 8010036:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8010038:	6013      	str	r3, [r2, #0]
}
 801003a:	b005      	add	sp, #20
 801003c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8010040:	69a3      	ldr	r3, [r4, #24]
 8010042:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8010044:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010046:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8010048:	d205      	bcs.n	8010056 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801004a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801004c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801004e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010050:	f7fd ff28 	bl	800dea4 <vListInsert>
 8010054:	e7e9      	b.n	801002a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8010056:	f8d9 3000 	ldr.w	r3, [r9]
 801005a:	b16b      	cbz	r3, 8010078 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801005c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010060:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010062:	f7ff fecf 	bl	800fe04 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010066:	2300      	movs	r3, #0
 8010068:	f8d9 0000 	ldr.w	r0, [r9]
 801006c:	461a      	mov	r2, r3
 801006e:	4669      	mov	r1, sp
 8010070:	f7fe fa9c 	bl	800e5ac <xQueueGenericSend>
				configASSERT( xResult );
 8010074:	2800      	cmp	r0, #0
 8010076:	d1d8      	bne.n	801002a <prvSwitchTimerLists+0x2e>
 8010078:	f04f 0350 	mov.w	r3, #80	; 0x50
 801007c:	f383 8811 	msr	BASEPRI, r3
 8010080:	f3bf 8f6f 	isb	sy
 8010084:	f3bf 8f4f 	dsb	sy
 8010088:	e7fe      	b.n	8010088 <prvSwitchTimerLists+0x8c>
 801008a:	bf00      	nop
 801008c:	20012c7c 	.word	0x20012c7c
 8010090:	20012c80 	.word	0x20012c80
 8010094:	20012da0 	.word	0x20012da0

08010098 <prvTimerTask>:
{
 8010098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801009c:	4e9b      	ldr	r6, [pc, #620]	; (801030c <prvTimerTask+0x274>)
 801009e:	4d9c      	ldr	r5, [pc, #624]	; (8010310 <prvTimerTask+0x278>)
 80100a0:	4c9c      	ldr	r4, [pc, #624]	; (8010314 <prvTimerTask+0x27c>)
 80100a2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 80100a4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 80100a8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80100ac:	6833      	ldr	r3, [r6, #0]
 80100ae:	681f      	ldr	r7, [r3, #0]
 80100b0:	2f00      	cmp	r7, #0
 80100b2:	f000 80a8 	beq.w	8010206 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80100b6:	68db      	ldr	r3, [r3, #12]
 80100b8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80100ba:	f7ff fcf9 	bl	800fab0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80100be:	f7ff fd0f 	bl	800fae0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80100c2:	682a      	ldr	r2, [r5, #0]
 80100c4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80100c6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80100c8:	f0c0 80ae 	bcc.w	8010228 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80100cc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80100ce:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80100d0:	f240 80b4 	bls.w	801023c <prvTimerTask+0x1a4>
 80100d4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80100d6:	6820      	ldr	r0, [r4, #0]
 80100d8:	eba7 010a 	sub.w	r1, r7, sl
 80100dc:	f7ff f89a 	bl	800f214 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80100e0:	f7ff fcee 	bl	800fac0 <xTaskResumeAll>
 80100e4:	b928      	cbnz	r0, 80100f2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 80100e6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 80100ea:	f3bf 8f4f 	dsb	sy
 80100ee:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80100f2:	6820      	ldr	r0, [r4, #0]
 80100f4:	2200      	movs	r2, #0
 80100f6:	a902      	add	r1, sp, #8
 80100f8:	f7fe fc94 	bl	800ea24 <xQueueReceive>
 80100fc:	2800      	cmp	r0, #0
 80100fe:	d0d5      	beq.n	80100ac <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010100:	9b02      	ldr	r3, [sp, #8]
 8010102:	2b00      	cmp	r3, #0
 8010104:	db76      	blt.n	80101f4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8010106:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010108:	697b      	ldr	r3, [r7, #20]
 801010a:	b113      	cbz	r3, 8010112 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801010c:	1d38      	adds	r0, r7, #4
 801010e:	f7fd fee1 	bl	800ded4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8010112:	f7ff fce5 	bl	800fae0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010116:	682b      	ldr	r3, [r5, #0]
 8010118:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801011a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801011c:	f0c0 808b 	bcc.w	8010236 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8010120:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8010122:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8010126:	2b09      	cmp	r3, #9
 8010128:	d8e3      	bhi.n	80100f2 <prvTimerTask+0x5a>
 801012a:	e8df f003 	tbb	[pc, r3]
 801012e:	0505      	.short	0x0505
 8010130:	5a3d5305 	.word	0x5a3d5305
 8010134:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010138:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801013c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801013e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010140:	f043 0301 	orr.w	r3, r3, #1
 8010144:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010148:	9b03      	ldr	r3, [sp, #12]
 801014a:	1899      	adds	r1, r3, r2
 801014c:	bf2c      	ite	cs
 801014e:	2001      	movcs	r0, #1
 8010150:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8010152:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010154:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010156:	f200 808c 	bhi.w	8010272 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801015a:	ebaa 0303 	sub.w	r3, sl, r3
 801015e:	429a      	cmp	r2, r3
 8010160:	d832      	bhi.n	80101c8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010162:	6a3b      	ldr	r3, [r7, #32]
 8010164:	4638      	mov	r0, r7
 8010166:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010168:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801016c:	075b      	lsls	r3, r3, #29
 801016e:	d5c0      	bpl.n	80100f2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8010170:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010172:	9903      	ldr	r1, [sp, #12]
 8010174:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8010176:	b172      	cbz	r2, 8010196 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010178:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801017a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801017e:	2300      	movs	r3, #0
 8010180:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010182:	f7ff fe3f 	bl	800fe04 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010186:	2300      	movs	r3, #0
 8010188:	6820      	ldr	r0, [r4, #0]
 801018a:	461a      	mov	r2, r3
 801018c:	a906      	add	r1, sp, #24
 801018e:	f7fe fa0d 	bl	800e5ac <xQueueGenericSend>
							configASSERT( xResult );
 8010192:	2800      	cmp	r0, #0
 8010194:	d1ad      	bne.n	80100f2 <prvTimerTask+0x5a>
 8010196:	f04f 0350 	mov.w	r3, #80	; 0x50
 801019a:	f383 8811 	msr	BASEPRI, r3
 801019e:	f3bf 8f6f 	isb	sy
 80101a2:	f3bf 8f4f 	dsb	sy
 80101a6:	e7fe      	b.n	80101a6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80101a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80101ac:	f043 0301 	orr.w	r3, r3, #1
 80101b0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80101b4:	9b03      	ldr	r3, [sp, #12]
 80101b6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80101b8:	2b00      	cmp	r3, #0
 80101ba:	f000 809d 	beq.w	80102f8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80101be:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80101c0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80101c2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80101c4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80101c6:	d85e      	bhi.n	8010286 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80101c8:	4b53      	ldr	r3, [pc, #332]	; (8010318 <prvTimerTask+0x280>)
 80101ca:	1d39      	adds	r1, r7, #4
 80101cc:	6818      	ldr	r0, [r3, #0]
 80101ce:	f7fd fe69 	bl	800dea4 <vListInsert>
	return xProcessTimerNow;
 80101d2:	e78e      	b.n	80100f2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80101d4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80101d8:	f023 0301 	bic.w	r3, r3, #1
 80101dc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 80101e0:	e787      	b.n	80100f2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80101e2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80101e6:	079a      	lsls	r2, r3, #30
 80101e8:	d552      	bpl.n	8010290 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80101ea:	f023 0301 	bic.w	r3, r3, #1
 80101ee:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80101f2:	e77e      	b.n	80100f2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80101f4:	9b03      	ldr	r3, [sp, #12]
 80101f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80101fa:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80101fc:	9b02      	ldr	r3, [sp, #8]
 80101fe:	2b00      	cmp	r3, #0
 8010200:	f6ff af77 	blt.w	80100f2 <prvTimerTask+0x5a>
 8010204:	e77f      	b.n	8010106 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010206:	f7ff fc53 	bl	800fab0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801020a:	f7ff fc69 	bl	800fae0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801020e:	682a      	ldr	r2, [r5, #0]
 8010210:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010212:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010214:	d808      	bhi.n	8010228 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010216:	4b40      	ldr	r3, [pc, #256]	; (8010318 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010218:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801021c:	681a      	ldr	r2, [r3, #0]
 801021e:	6812      	ldr	r2, [r2, #0]
 8010220:	fab2 f282 	clz	r2, r2
 8010224:	0952      	lsrs	r2, r2, #5
 8010226:	e756      	b.n	80100d6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010228:	f7ff fee8 	bl	800fffc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801022c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010230:	f7ff fc46 	bl	800fac0 <xTaskResumeAll>
 8010234:	e75d      	b.n	80100f2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010236:	f7ff fee1 	bl	800fffc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801023a:	e771      	b.n	8010120 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801023c:	f7ff fc40 	bl	800fac0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010240:	6832      	ldr	r2, [r6, #0]
 8010242:	68d2      	ldr	r2, [r2, #12]
 8010244:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010248:	f10b 0104 	add.w	r1, fp, #4
 801024c:	4608      	mov	r0, r1
 801024e:	9101      	str	r1, [sp, #4]
 8010250:	f7fd fe40 	bl	800ded4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010254:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010258:	9901      	ldr	r1, [sp, #4]
 801025a:	f010 0f04 	tst.w	r0, #4
 801025e:	d11b      	bne.n	8010298 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010260:	f020 0001 	bic.w	r0, r0, #1
 8010264:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010268:	f8db 3020 	ldr.w	r3, [fp, #32]
 801026c:	4658      	mov	r0, fp
 801026e:	4798      	blx	r3
}
 8010270:	e73f      	b.n	80100f2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010272:	4553      	cmp	r3, sl
 8010274:	d902      	bls.n	801027c <prvTimerTask+0x1e4>
 8010276:	2800      	cmp	r0, #0
 8010278:	f43f af73 	beq.w	8010162 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801027c:	6830      	ldr	r0, [r6, #0]
 801027e:	1d39      	adds	r1, r7, #4
 8010280:	f7fd fe10 	bl	800dea4 <vListInsert>
	return xProcessTimerNow;
 8010284:	e735      	b.n	80100f2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010286:	6830      	ldr	r0, [r6, #0]
 8010288:	1d39      	adds	r1, r7, #4
 801028a:	f7fd fe0b 	bl	800dea4 <vListInsert>
 801028e:	e730      	b.n	80100f2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8010290:	4638      	mov	r0, r7
 8010292:	f7fd fd83 	bl	800dd9c <vPortFree>
 8010296:	e72c      	b.n	80100f2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010298:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801029c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80102a0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80102a2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80102a4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80102a8:	d903      	bls.n	80102b2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80102aa:	6830      	ldr	r0, [r6, #0]
 80102ac:	f7fd fdfa 	bl	800dea4 <vListInsert>
	return xProcessTimerNow;
 80102b0:	e7da      	b.n	8010268 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102b2:	ebaa 0307 	sub.w	r3, sl, r7
 80102b6:	429a      	cmp	r2, r3
 80102b8:	d819      	bhi.n	80102ee <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80102ba:	6823      	ldr	r3, [r4, #0]
 80102bc:	b173      	cbz	r3, 80102dc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80102be:	2300      	movs	r3, #0
 80102c0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80102c2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80102c4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80102c8:	f7ff fd9c 	bl	800fe04 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80102cc:	2300      	movs	r3, #0
 80102ce:	6820      	ldr	r0, [r4, #0]
 80102d0:	461a      	mov	r2, r3
 80102d2:	a906      	add	r1, sp, #24
 80102d4:	f7fe f96a 	bl	800e5ac <xQueueGenericSend>
			configASSERT( xResult );
 80102d8:	2800      	cmp	r0, #0
 80102da:	d1c5      	bne.n	8010268 <prvTimerTask+0x1d0>
 80102dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102e0:	f383 8811 	msr	BASEPRI, r3
 80102e4:	f3bf 8f6f 	isb	sy
 80102e8:	f3bf 8f4f 	dsb	sy
 80102ec:	e7fe      	b.n	80102ec <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80102ee:	4b0a      	ldr	r3, [pc, #40]	; (8010318 <prvTimerTask+0x280>)
 80102f0:	6818      	ldr	r0, [r3, #0]
 80102f2:	f7fd fdd7 	bl	800dea4 <vListInsert>
	return xProcessTimerNow;
 80102f6:	e7b7      	b.n	8010268 <prvTimerTask+0x1d0>
 80102f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102fc:	f383 8811 	msr	BASEPRI, r3
 8010300:	f3bf 8f6f 	isb	sy
 8010304:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010308:	e7fe      	b.n	8010308 <prvTimerTask+0x270>
 801030a:	bf00      	nop
 801030c:	20012c7c 	.word	0x20012c7c
 8010310:	20012d4c 	.word	0x20012d4c
 8010314:	20012da0 	.word	0x20012da0
 8010318:	20012c80 	.word	0x20012c80

0801031c <xTimerCreateTimerTask>:
{
 801031c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801031e:	4c23      	ldr	r4, [pc, #140]	; (80103ac <xTimerCreateTimerTask+0x90>)
{
 8010320:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010322:	f7fd fe4f 	bl	800dfc4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010326:	6825      	ldr	r5, [r4, #0]
 8010328:	b335      	cbz	r5, 8010378 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801032a:	f7fd fe6d 	bl	800e008 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801032e:	6823      	ldr	r3, [r4, #0]
 8010330:	b1cb      	cbz	r3, 8010366 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010332:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010334:	aa07      	add	r2, sp, #28
 8010336:	a906      	add	r1, sp, #24
 8010338:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801033a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801033e:	f7fd fc61 	bl	800dc04 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010342:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010346:	2302      	movs	r3, #2
 8010348:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801034c:	9300      	str	r3, [sp, #0]
 801034e:	9a07      	ldr	r2, [sp, #28]
 8010350:	4917      	ldr	r1, [pc, #92]	; (80103b0 <xTimerCreateTimerTask+0x94>)
 8010352:	4818      	ldr	r0, [pc, #96]	; (80103b4 <xTimerCreateTimerTask+0x98>)
 8010354:	4623      	mov	r3, r4
 8010356:	f7ff fa6d 	bl	800f834 <xTaskCreateStatic>
 801035a:	4b17      	ldr	r3, [pc, #92]	; (80103b8 <xTimerCreateTimerTask+0x9c>)
 801035c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801035e:	b110      	cbz	r0, 8010366 <xTimerCreateTimerTask+0x4a>
}
 8010360:	2001      	movs	r0, #1
 8010362:	b009      	add	sp, #36	; 0x24
 8010364:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010366:	f04f 0350 	mov.w	r3, #80	; 0x50
 801036a:	f383 8811 	msr	BASEPRI, r3
 801036e:	f3bf 8f6f 	isb	sy
 8010372:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8010376:	e7fe      	b.n	8010376 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8010378:	4f10      	ldr	r7, [pc, #64]	; (80103bc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801037a:	4e11      	ldr	r6, [pc, #68]	; (80103c0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801037c:	4638      	mov	r0, r7
 801037e:	f7fd fd71 	bl	800de64 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8010382:	4630      	mov	r0, r6
 8010384:	f7fd fd6e 	bl	800de64 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8010388:	4a0e      	ldr	r2, [pc, #56]	; (80103c4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801038a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801038c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801038e:	4a0e      	ldr	r2, [pc, #56]	; (80103c8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010390:	4b0e      	ldr	r3, [pc, #56]	; (80103cc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8010392:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010394:	2110      	movs	r1, #16
 8010396:	4a0e      	ldr	r2, [pc, #56]	; (80103d0 <xTimerCreateTimerTask+0xb4>)
 8010398:	200a      	movs	r0, #10
 801039a:	f7fd ffb1 	bl	800e300 <xQueueGenericCreateStatic>
 801039e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80103a0:	2800      	cmp	r0, #0
 80103a2:	d0c2      	beq.n	801032a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80103a4:	490b      	ldr	r1, [pc, #44]	; (80103d4 <xTimerCreateTimerTask+0xb8>)
 80103a6:	f7fe ff0d 	bl	800f1c4 <vQueueAddToRegistry>
 80103aa:	e7be      	b.n	801032a <xTimerCreateTimerTask+0xe>
 80103ac:	20012da0 	.word	0x20012da0
 80103b0:	0802ec7c 	.word	0x0802ec7c
 80103b4:	08010099 	.word	0x08010099
 80103b8:	20012da4 	.word	0x20012da4
 80103bc:	20012d24 	.word	0x20012d24
 80103c0:	20012d38 	.word	0x20012d38
 80103c4:	20012c7c 	.word	0x20012c7c
 80103c8:	20012c80 	.word	0x20012c80
 80103cc:	20012d50 	.word	0x20012d50
 80103d0:	20012c84 	.word	0x20012c84
 80103d4:	0802ec74 	.word	0x0802ec74

080103d8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80103d8:	8880      	ldrh	r0, [r0, #4]
 80103da:	4770      	bx	lr

080103dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80103dc:	b570      	push	{r4, r5, r6, lr}
 80103de:	6803      	ldr	r3, [r0, #0]
 80103e0:	4605      	mov	r5, r0
 80103e2:	460c      	mov	r4, r1
 80103e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80103e6:	2100      	movs	r1, #0
 80103e8:	4798      	blx	r3
 80103ea:	682b      	ldr	r3, [r5, #0]
 80103ec:	4606      	mov	r6, r0
 80103ee:	6a1b      	ldr	r3, [r3, #32]
 80103f0:	4628      	mov	r0, r5
 80103f2:	4798      	blx	r3
 80103f4:	1ba4      	subs	r4, r4, r6
 80103f6:	b2a4      	uxth	r4, r4
 80103f8:	fbb4 f0f0 	udiv	r0, r4, r0
 80103fc:	bd70      	pop	{r4, r5, r6, pc}

080103fe <_ZN8touchgfx17AbstractPartition5clearEv>:
 80103fe:	2300      	movs	r3, #0
 8010400:	8083      	strh	r3, [r0, #4]
 8010402:	4770      	bx	lr

08010404 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010404:	b510      	push	{r4, lr}
 8010406:	6803      	ldr	r3, [r0, #0]
 8010408:	8881      	ldrh	r1, [r0, #4]
 801040a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801040c:	4604      	mov	r4, r0
 801040e:	4798      	blx	r3
 8010410:	88a3      	ldrh	r3, [r4, #4]
 8010412:	3301      	adds	r3, #1
 8010414:	80a3      	strh	r3, [r4, #4]
 8010416:	bd10      	pop	{r4, pc}

08010418 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010418:	6803      	ldr	r3, [r0, #0]
 801041a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801041c:	4718      	bx	r3

0801041e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801041e:	4770      	bx	lr

08010420 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010420:	4a02      	ldr	r2, [pc, #8]	; (801042c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010422:	6002      	str	r2, [r0, #0]
 8010424:	2200      	movs	r2, #0
 8010426:	8082      	strh	r2, [r0, #4]
 8010428:	4770      	bx	lr
 801042a:	bf00      	nop
 801042c:	0802ec8c 	.word	0x0802ec8c

08010430 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010430:	b510      	push	{r4, lr}
 8010432:	6803      	ldr	r3, [r0, #0]
 8010434:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010438:	4604      	mov	r4, r0
 801043a:	4798      	blx	r3
 801043c:	b110      	cbz	r0, 8010444 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801043e:	4620      	mov	r0, r4
 8010440:	f7f1 fa0a 	bl	8001858 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010444:	bd10      	pop	{r4, pc}

08010446 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010446:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801044a:	4770      	bx	lr

0801044c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801044c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010450:	4770      	bx	lr

08010452 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010452:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010456:	4770      	bx	lr

08010458 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010458:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801045c:	4770      	bx	lr

0801045e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801045e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010460:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010464:	461e      	mov	r6, r3
 8010466:	6803      	ldr	r3, [r0, #0]
 8010468:	460f      	mov	r7, r1
 801046a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801046e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010472:	4604      	mov	r4, r0
 8010474:	4615      	mov	r5, r2
 8010476:	4798      	blx	r3
 8010478:	b93e      	cbnz	r6, 801048a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801047a:	1bed      	subs	r5, r5, r7
 801047c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8010480:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010484:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8010488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801048a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801048e:	e7f7      	b.n	8010480 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08010490 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8010490:	b510      	push	{r4, lr}
 8010492:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010496:	600c      	str	r4, [r1, #0]
 8010498:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801049c:	6011      	str	r1, [r2, #0]
 801049e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80104a2:	801a      	strh	r2, [r3, #0]
 80104a4:	9b02      	ldr	r3, [sp, #8]
 80104a6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80104aa:	801a      	strh	r2, [r3, #0]
 80104ac:	bd10      	pop	{r4, pc}

080104ae <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80104ae:	b510      	push	{r4, lr}
 80104b0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80104b4:	600c      	str	r4, [r1, #0]
 80104b6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80104ba:	6011      	str	r1, [r2, #0]
 80104bc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80104c0:	801a      	strh	r2, [r3, #0]
 80104c2:	bd10      	pop	{r4, pc}

080104c4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80104c4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80104c8:	600b      	str	r3, [r1, #0]
 80104ca:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80104ce:	6013      	str	r3, [r2, #0]
 80104d0:	4770      	bx	lr

080104d2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80104d2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80104d6:	4770      	bx	lr

080104d8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80104d8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80104dc:	4770      	bx	lr

080104de <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80104de:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80104e2:	4770      	bx	lr

080104e4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80104e4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80104e8:	4770      	bx	lr

080104ea <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80104ea:	4770      	bx	lr

080104ec <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80104ec:	b510      	push	{r4, lr}
 80104ee:	21b4      	movs	r1, #180	; 0xb4
 80104f0:	4604      	mov	r4, r0
 80104f2:	f019 fc84 	bl	8029dfe <_ZdlPvj>
 80104f6:	4620      	mov	r0, r4
 80104f8:	bd10      	pop	{r4, pc}

080104fa <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80104fa:	b570      	push	{r4, r5, r6, lr}
 80104fc:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010500:	428d      	cmp	r5, r1
 8010502:	bfb8      	it	lt
 8010504:	460d      	movlt	r5, r1
 8010506:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801050a:	428d      	cmp	r5, r1
 801050c:	4604      	mov	r4, r0
 801050e:	bfa8      	it	ge
 8010510:	460d      	movge	r5, r1
 8010512:	4616      	mov	r6, r2
 8010514:	b99a      	cbnz	r2, 801053e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010516:	6803      	ldr	r3, [r0, #0]
 8010518:	4629      	mov	r1, r5
 801051a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801051e:	4798      	blx	r3
 8010520:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010524:	b368      	cbz	r0, 8010582 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010526:	6803      	ldr	r3, [r0, #0]
 8010528:	68db      	ldr	r3, [r3, #12]
 801052a:	4798      	blx	r3
 801052c:	b348      	cbz	r0, 8010582 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801052e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010532:	6803      	ldr	r3, [r0, #0]
 8010534:	4621      	mov	r1, r4
 8010536:	689b      	ldr	r3, [r3, #8]
 8010538:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801053c:	4718      	bx	r3
 801053e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010542:	2b00      	cmp	r3, #0
 8010544:	dd08      	ble.n	8010558 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010546:	f005 fbe3 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 801054a:	4621      	mov	r1, r4
 801054c:	3004      	adds	r0, #4
 801054e:	f005 fc2c 	bl	8015daa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010552:	2300      	movs	r3, #0
 8010554:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010558:	6823      	ldr	r3, [r4, #0]
 801055a:	4620      	mov	r0, r4
 801055c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010560:	4798      	blx	r3
 8010562:	2300      	movs	r3, #0
 8010564:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010568:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801056c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010570:	f005 fbce 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 8010574:	4621      	mov	r1, r4
 8010576:	3004      	adds	r0, #4
 8010578:	f005 fcc0 	bl	8015efc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801057c:	2301      	movs	r3, #1
 801057e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010582:	bd70      	pop	{r4, r5, r6, pc}

08010584 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010584:	b510      	push	{r4, lr}
 8010586:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801058a:	4299      	cmp	r1, r3
 801058c:	bfb8      	it	lt
 801058e:	4619      	movlt	r1, r3
 8010590:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010594:	4299      	cmp	r1, r3
 8010596:	bfa8      	it	ge
 8010598:	4619      	movge	r1, r3
 801059a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801059e:	428b      	cmp	r3, r1
 80105a0:	4604      	mov	r4, r0
 80105a2:	d010      	beq.n	80105c6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80105a4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80105a8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80105ac:	b158      	cbz	r0, 80105c6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80105ae:	6803      	ldr	r3, [r0, #0]
 80105b0:	68db      	ldr	r3, [r3, #12]
 80105b2:	4798      	blx	r3
 80105b4:	b138      	cbz	r0, 80105c6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80105b6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80105ba:	6803      	ldr	r3, [r0, #0]
 80105bc:	4621      	mov	r1, r4
 80105be:	689b      	ldr	r3, [r3, #8]
 80105c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80105c4:	4718      	bx	r3
 80105c6:	bd10      	pop	{r4, pc}

080105c8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80105c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80105ca:	4604      	mov	r4, r0
 80105cc:	460d      	mov	r5, r1
 80105ce:	b1a9      	cbz	r1, 80105fc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80105d0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80105d4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80105d8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80105dc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80105e0:	ab01      	add	r3, sp, #4
 80105e2:	1a12      	subs	r2, r2, r0
 80105e4:	1b89      	subs	r1, r1, r6
 80105e6:	1a38      	subs	r0, r7, r0
 80105e8:	f006 fe48 	bl	801727c <_ZN8touchgfx6muldivElllRl>
 80105ec:	4629      	mov	r1, r5
 80105ee:	ab01      	add	r3, sp, #4
 80105f0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80105f4:	4430      	add	r0, r6
 80105f6:	f006 fe41 	bl	801727c <_ZN8touchgfx6muldivElllRl>
 80105fa:	b285      	uxth	r5, r0
 80105fc:	4628      	mov	r0, r5
 80105fe:	b003      	add	sp, #12
 8010600:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010602 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010602:	b570      	push	{r4, r5, r6, lr}
 8010604:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010608:	4604      	mov	r4, r0
 801060a:	2b00      	cmp	r3, #0
 801060c:	d035      	beq.n	801067a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801060e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010612:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010616:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801061a:	3001      	adds	r0, #1
 801061c:	1ad2      	subs	r2, r2, r3
 801061e:	b212      	sxth	r2, r2
 8010620:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010624:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010628:	2100      	movs	r1, #0
 801062a:	b280      	uxth	r0, r0
 801062c:	47a8      	blx	r5
 801062e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010632:	6823      	ldr	r3, [r4, #0]
 8010634:	4401      	add	r1, r0
 8010636:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801063a:	4620      	mov	r0, r4
 801063c:	4798      	blx	r3
 801063e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010642:	429a      	cmp	r2, r3
 8010644:	db19      	blt.n	801067a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010646:	2500      	movs	r5, #0
 8010648:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801064c:	f005 fb60 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 8010650:	4621      	mov	r1, r4
 8010652:	3004      	adds	r0, #4
 8010654:	f005 fba9 	bl	8015daa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010658:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801065c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010660:	b158      	cbz	r0, 801067a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010662:	6803      	ldr	r3, [r0, #0]
 8010664:	68db      	ldr	r3, [r3, #12]
 8010666:	4798      	blx	r3
 8010668:	b138      	cbz	r0, 801067a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801066a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801066e:	6803      	ldr	r3, [r0, #0]
 8010670:	4621      	mov	r1, r4
 8010672:	689b      	ldr	r3, [r3, #8]
 8010674:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010678:	4718      	bx	r3
 801067a:	bd70      	pop	{r4, r5, r6, pc}

0801067c <_ZN8touchgfx8DrawableC1Ev>:
 801067c:	4a0a      	ldr	r2, [pc, #40]	; (80106a8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801067e:	6002      	str	r2, [r0, #0]
 8010680:	2200      	movs	r2, #0
 8010682:	8082      	strh	r2, [r0, #4]
 8010684:	80c2      	strh	r2, [r0, #6]
 8010686:	8102      	strh	r2, [r0, #8]
 8010688:	8142      	strh	r2, [r0, #10]
 801068a:	8182      	strh	r2, [r0, #12]
 801068c:	81c2      	strh	r2, [r0, #14]
 801068e:	8202      	strh	r2, [r0, #16]
 8010690:	8242      	strh	r2, [r0, #18]
 8010692:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010696:	61c2      	str	r2, [r0, #28]
 8010698:	8402      	strh	r2, [r0, #32]
 801069a:	8442      	strh	r2, [r0, #34]	; 0x22
 801069c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80106a0:	2201      	movs	r2, #1
 80106a2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80106a6:	4770      	bx	lr
 80106a8:	0802f42c 	.word	0x0802f42c

080106ac <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80106ac:	b570      	push	{r4, r5, r6, lr}
 80106ae:	6803      	ldr	r3, [r0, #0]
 80106b0:	4604      	mov	r4, r0
 80106b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80106b4:	4615      	mov	r5, r2
 80106b6:	4798      	blx	r3
 80106b8:	6823      	ldr	r3, [r4, #0]
 80106ba:	4629      	mov	r1, r5
 80106bc:	4620      	mov	r0, r4
 80106be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80106c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80106c4:	4718      	bx	r3

080106c6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80106c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106ca:	4604      	mov	r4, r0
 80106cc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80106d0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80106d4:	460e      	mov	r6, r1
 80106d6:	4615      	mov	r5, r2
 80106d8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80106dc:	4619      	mov	r1, r3
 80106de:	463a      	mov	r2, r7
 80106e0:	3058      	adds	r0, #88	; 0x58
 80106e2:	4698      	mov	r8, r3
 80106e4:	f7ff ffe2 	bl	80106ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80106e8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80106ec:	4446      	add	r6, r8
 80106ee:	42b3      	cmp	r3, r6
 80106f0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80106f4:	bfb8      	it	lt
 80106f6:	8126      	strhlt	r6, [r4, #8]
 80106f8:	443d      	add	r5, r7
 80106fa:	42ab      	cmp	r3, r5
 80106fc:	bfb8      	it	lt
 80106fe:	8165      	strhlt	r5, [r4, #10]
 8010700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010704 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010704:	b510      	push	{r4, lr}
 8010706:	4604      	mov	r4, r0
 8010708:	302c      	adds	r0, #44	; 0x2c
 801070a:	f002 fdf8 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801070e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010712:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010716:	4620      	mov	r0, r4
 8010718:	f7ff ffc8 	bl	80106ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801071c:	bd10      	pop	{r4, pc}
	...

08010720 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010720:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010722:	4604      	mov	r4, r0
 8010724:	4626      	mov	r6, r4
 8010726:	2500      	movs	r5, #0
 8010728:	f7ff ffa8 	bl	801067c <_ZN8touchgfx8DrawableC1Ev>
 801072c:	4b23      	ldr	r3, [pc, #140]	; (80107bc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801072e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010730:	f846 3b2c 	str.w	r3, [r6], #44
 8010734:	2226      	movs	r2, #38	; 0x26
 8010736:	4629      	mov	r1, r5
 8010738:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801073c:	4630      	mov	r0, r6
 801073e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010742:	f01a fc48 	bl	802afd6 <memset>
 8010746:	4630      	mov	r0, r6
 8010748:	f7ff ff98 	bl	801067c <_ZN8touchgfx8DrawableC1Ev>
 801074c:	a902      	add	r1, sp, #8
 801074e:	4b1c      	ldr	r3, [pc, #112]	; (80107c0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010750:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010752:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010756:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801075a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801075e:	4630      	mov	r0, r6
 8010760:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010764:	f002 fdcb 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010768:	4638      	mov	r0, r7
 801076a:	f7ff ff87 	bl	801067c <_ZN8touchgfx8DrawableC1Ev>
 801076e:	4b15      	ldr	r3, [pc, #84]	; (80107c4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010770:	65a3      	str	r3, [r4, #88]	; 0x58
 8010772:	2364      	movs	r3, #100	; 0x64
 8010774:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010778:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801077c:	4b12      	ldr	r3, [pc, #72]	; (80107c8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801077e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010782:	4629      	mov	r1, r5
 8010784:	4630      	mov	r0, r6
 8010786:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801078a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801078e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010792:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010796:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801079a:	f7f0 ffb9 	bl	8001710 <_ZN8touchgfx8Drawable4setXEs>
 801079e:	4629      	mov	r1, r5
 80107a0:	4630      	mov	r0, r6
 80107a2:	f7f0 ffb7 	bl	8001714 <_ZN8touchgfx8Drawable4setYEs>
 80107a6:	4631      	mov	r1, r6
 80107a8:	4620      	mov	r0, r4
 80107aa:	f000 f819 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80107ae:	4620      	mov	r0, r4
 80107b0:	4639      	mov	r1, r7
 80107b2:	f000 f815 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80107b6:	4620      	mov	r0, r4
 80107b8:	b003      	add	sp, #12
 80107ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107bc:	0802ecc0 	.word	0x0802ecc0
 80107c0:	0802f2e8 	.word	0x0802f2e8
 80107c4:	0802ed94 	.word	0x0802ed94
 80107c8:	080179db 	.word	0x080179db

080107cc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80107cc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80107ce:	2000      	movs	r0, #0
 80107d0:	b12b      	cbz	r3, 80107de <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80107d2:	b920      	cbnz	r0, 80107de <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80107d4:	1a5a      	subs	r2, r3, r1
 80107d6:	4250      	negs	r0, r2
 80107d8:	4150      	adcs	r0, r2
 80107da:	699b      	ldr	r3, [r3, #24]
 80107dc:	e7f8      	b.n	80107d0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80107de:	4770      	bx	lr

080107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80107e0:	2300      	movs	r3, #0
 80107e2:	6148      	str	r0, [r1, #20]
 80107e4:	618b      	str	r3, [r1, #24]
 80107e6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80107e8:	b913      	cbnz	r3, 80107f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80107ea:	6281      	str	r1, [r0, #40]	; 0x28
 80107ec:	4770      	bx	lr
 80107ee:	4613      	mov	r3, r2
 80107f0:	699a      	ldr	r2, [r3, #24]
 80107f2:	2a00      	cmp	r2, #0
 80107f4:	d1fb      	bne.n	80107ee <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80107f6:	6199      	str	r1, [r3, #24]
 80107f8:	4770      	bx	lr

080107fa <_ZN8touchgfx9Container9removeAllEv>:
 80107fa:	2200      	movs	r2, #0
 80107fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80107fe:	b123      	cbz	r3, 801080a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010800:	6999      	ldr	r1, [r3, #24]
 8010802:	6281      	str	r1, [r0, #40]	; 0x28
 8010804:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010808:	e7f8      	b.n	80107fc <_ZN8touchgfx9Container9removeAllEv+0x2>
 801080a:	4770      	bx	lr

0801080c <_ZN8touchgfx9Container6unlinkEv>:
 801080c:	2300      	movs	r3, #0
 801080e:	6283      	str	r3, [r0, #40]	; 0x28
 8010810:	4770      	bx	lr

08010812 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010812:	2200      	movs	r2, #0
 8010814:	8002      	strh	r2, [r0, #0]
 8010816:	8042      	strh	r2, [r0, #2]
 8010818:	8082      	strh	r2, [r0, #4]
 801081a:	80c2      	strh	r2, [r0, #6]
 801081c:	4770      	bx	lr

0801081e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801081e:	b570      	push	{r4, r5, r6, lr}
 8010820:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010822:	460d      	mov	r5, r1
 8010824:	4616      	mov	r6, r2
 8010826:	b13c      	cbz	r4, 8010838 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010828:	6823      	ldr	r3, [r4, #0]
 801082a:	4620      	mov	r0, r4
 801082c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801082e:	4632      	mov	r2, r6
 8010830:	4629      	mov	r1, r5
 8010832:	4798      	blx	r3
 8010834:	69a4      	ldr	r4, [r4, #24]
 8010836:	e7f6      	b.n	8010826 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010838:	bd70      	pop	{r4, r5, r6, pc}

0801083a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801083a:	b538      	push	{r3, r4, r5, lr}
 801083c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801083e:	460d      	mov	r5, r1
 8010840:	b134      	cbz	r4, 8010850 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010842:	682b      	ldr	r3, [r5, #0]
 8010844:	4621      	mov	r1, r4
 8010846:	689b      	ldr	r3, [r3, #8]
 8010848:	4628      	mov	r0, r5
 801084a:	4798      	blx	r3
 801084c:	69a4      	ldr	r4, [r4, #24]
 801084e:	e7f7      	b.n	8010840 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010850:	bd38      	pop	{r3, r4, r5, pc}

08010852 <_ZN8touchgfx9ContainerD1Ev>:
 8010852:	4770      	bx	lr

08010854 <_ZN8touchgfx9ContainerD0Ev>:
 8010854:	b510      	push	{r4, lr}
 8010856:	212c      	movs	r1, #44	; 0x2c
 8010858:	4604      	mov	r4, r0
 801085a:	f019 fad0 	bl	8029dfe <_ZdlPvj>
 801085e:	4620      	mov	r0, r4
 8010860:	bd10      	pop	{r4, pc}

08010862 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010862:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010864:	b19b      	cbz	r3, 801088e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010866:	428b      	cmp	r3, r1
 8010868:	d109      	bne.n	801087e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801086a:	699a      	ldr	r2, [r3, #24]
 801086c:	2100      	movs	r1, #0
 801086e:	6159      	str	r1, [r3, #20]
 8010870:	6282      	str	r2, [r0, #40]	; 0x28
 8010872:	b902      	cbnz	r2, 8010876 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010874:	4770      	bx	lr
 8010876:	6199      	str	r1, [r3, #24]
 8010878:	4770      	bx	lr
 801087a:	4613      	mov	r3, r2
 801087c:	b13a      	cbz	r2, 801088e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801087e:	699a      	ldr	r2, [r3, #24]
 8010880:	428a      	cmp	r2, r1
 8010882:	d1fa      	bne.n	801087a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010884:	698a      	ldr	r2, [r1, #24]
 8010886:	619a      	str	r2, [r3, #24]
 8010888:	2300      	movs	r3, #0
 801088a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801088e:	4770      	bx	lr

08010890 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010890:	b410      	push	{r4}
 8010892:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010894:	4604      	mov	r4, r0
 8010896:	b92b      	cbnz	r3, 80108a4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010898:	6803      	ldr	r3, [r0, #0]
 801089a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801089e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80108a0:	4611      	mov	r1, r2
 80108a2:	4718      	bx	r3
 80108a4:	b941      	cbnz	r1, 80108b8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80108a6:	6193      	str	r3, [r2, #24]
 80108a8:	6282      	str	r2, [r0, #40]	; 0x28
 80108aa:	6154      	str	r4, [r2, #20]
 80108ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80108b0:	4770      	bx	lr
 80108b2:	4603      	mov	r3, r0
 80108b4:	2800      	cmp	r0, #0
 80108b6:	d0f9      	beq.n	80108ac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80108b8:	4299      	cmp	r1, r3
 80108ba:	6998      	ldr	r0, [r3, #24]
 80108bc:	d1f9      	bne.n	80108b2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80108be:	6190      	str	r0, [r2, #24]
 80108c0:	618a      	str	r2, [r1, #24]
 80108c2:	e7f2      	b.n	80108aa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080108c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80108c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108c8:	461f      	mov	r7, r3
 80108ca:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80108ce:	460d      	mov	r5, r1
 80108d0:	4616      	mov	r6, r2
 80108d2:	b103      	cbz	r3, 80108d6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80108d4:	6038      	str	r0, [r7, #0]
 80108d6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80108d8:	b314      	cbz	r4, 8010920 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80108da:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80108de:	b1eb      	cbz	r3, 801091c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80108e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80108e4:	428d      	cmp	r5, r1
 80108e6:	db19      	blt.n	801091c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80108e8:	8923      	ldrh	r3, [r4, #8]
 80108ea:	b289      	uxth	r1, r1
 80108ec:	440b      	add	r3, r1
 80108ee:	b21b      	sxth	r3, r3
 80108f0:	429d      	cmp	r5, r3
 80108f2:	da13      	bge.n	801091c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80108f4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80108f8:	4296      	cmp	r6, r2
 80108fa:	db0f      	blt.n	801091c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80108fc:	8963      	ldrh	r3, [r4, #10]
 80108fe:	b292      	uxth	r2, r2
 8010900:	4413      	add	r3, r2
 8010902:	b21b      	sxth	r3, r3
 8010904:	429e      	cmp	r6, r3
 8010906:	da09      	bge.n	801091c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010908:	6823      	ldr	r3, [r4, #0]
 801090a:	1ab2      	subs	r2, r6, r2
 801090c:	1a69      	subs	r1, r5, r1
 801090e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010912:	b212      	sxth	r2, r2
 8010914:	463b      	mov	r3, r7
 8010916:	b209      	sxth	r1, r1
 8010918:	4620      	mov	r0, r4
 801091a:	47c0      	blx	r8
 801091c:	69a4      	ldr	r4, [r4, #24]
 801091e:	e7db      	b.n	80108d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010924 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010928:	4c6e      	ldr	r4, [pc, #440]	; (8010ae4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801092a:	b0a1      	sub	sp, #132	; 0x84
 801092c:	6824      	ldr	r4, [r4, #0]
 801092e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010930:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010934:	9303      	str	r3, [sp, #12]
 8010936:	2400      	movs	r4, #0
 8010938:	802c      	strh	r4, [r5, #0]
 801093a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801093c:	802c      	strh	r4, [r5, #0]
 801093e:	601c      	str	r4, [r3, #0]
 8010940:	4606      	mov	r6, r0
 8010942:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010946:	f7ff ffbd 	bl	80108c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801094a:	f1b9 0f03 	cmp.w	r9, #3
 801094e:	f340 80c2 	ble.w	8010ad6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010952:	4631      	mov	r1, r6
 8010954:	a80c      	add	r0, sp, #48	; 0x30
 8010956:	f006 fb5f 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801095a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801095e:	9306      	str	r3, [sp, #24]
 8010960:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010964:	9307      	str	r3, [sp, #28]
 8010966:	9b03      	ldr	r3, [sp, #12]
 8010968:	f8d3 a000 	ldr.w	sl, [r3]
 801096c:	f1ba 0f00 	cmp.w	sl, #0
 8010970:	f000 80b4 	beq.w	8010adc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010974:	4651      	mov	r1, sl
 8010976:	a810      	add	r0, sp, #64	; 0x40
 8010978:	f006 fb4e 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801097c:	9b01      	ldr	r3, [sp, #4]
 801097e:	9a06      	ldr	r2, [sp, #24]
 8010980:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010984:	189d      	adds	r5, r3, r2
 8010986:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801098a:	9a07      	ldr	r2, [sp, #28]
 801098c:	2002      	movs	r0, #2
 801098e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010992:	4419      	add	r1, r3
 8010994:	1a6d      	subs	r5, r5, r1
 8010996:	9b02      	ldr	r3, [sp, #8]
 8010998:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801099c:	4413      	add	r3, r2
 801099e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80109a2:	fb92 f2f0 	sdiv	r2, r2, r0
 80109a6:	440a      	add	r2, r1
 80109a8:	1a9b      	subs	r3, r3, r2
 80109aa:	435b      	muls	r3, r3
 80109ac:	fb05 3505 	mla	r5, r5, r5, r3
 80109b0:	4f4d      	ldr	r7, [pc, #308]	; (8010ae8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80109b2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80109b4:	ac10      	add	r4, sp, #64	; 0x40
 80109b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80109b8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80109ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80109bc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80109be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80109c0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80109c4:	f1b9 0f0c 	cmp.w	r9, #12
 80109c8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80109cc:	f04f 0303 	mov.w	r3, #3
 80109d0:	bfc8      	it	gt
 80109d2:	4698      	movgt	r8, r3
 80109d4:	f8cd 9000 	str.w	r9, [sp]
 80109d8:	f04f 0400 	mov.w	r4, #0
 80109dc:	bfdc      	itt	le
 80109de:	f109 32ff 	addle.w	r2, r9, #4294967295
 80109e2:	fb92 f8f3 	sdivle	r8, r2, r3
 80109e6:	1c63      	adds	r3, r4, #1
 80109e8:	aa10      	add	r2, sp, #64	; 0x40
 80109ea:	f004 0401 	and.w	r4, r4, #1
 80109ee:	9308      	str	r3, [sp, #32]
 80109f0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80109f4:	9b00      	ldr	r3, [sp, #0]
 80109f6:	fb93 f3f8 	sdiv	r3, r3, r8
 80109fa:	b29b      	uxth	r3, r3
 80109fc:	3404      	adds	r4, #4
 80109fe:	f04f 0b00 	mov.w	fp, #0
 8010a02:	9304      	str	r3, [sp, #16]
 8010a04:	9a04      	ldr	r2, [sp, #16]
 8010a06:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010a0a:	fb13 f302 	smulbb	r3, r3, r2
 8010a0e:	9a01      	ldr	r2, [sp, #4]
 8010a10:	b29b      	uxth	r3, r3
 8010a12:	1899      	adds	r1, r3, r2
 8010a14:	9305      	str	r3, [sp, #20]
 8010a16:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010a1a:	b209      	sxth	r1, r1
 8010a1c:	4299      	cmp	r1, r3
 8010a1e:	db4d      	blt.n	8010abc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010a20:	8932      	ldrh	r2, [r6, #8]
 8010a22:	4413      	add	r3, r2
 8010a24:	b21b      	sxth	r3, r3
 8010a26:	4299      	cmp	r1, r3
 8010a28:	da48      	bge.n	8010abc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010a2a:	9b04      	ldr	r3, [sp, #16]
 8010a2c:	6827      	ldr	r7, [r4, #0]
 8010a2e:	fb17 f703 	smulbb	r7, r7, r3
 8010a32:	9b02      	ldr	r3, [sp, #8]
 8010a34:	b2bf      	uxth	r7, r7
 8010a36:	18fa      	adds	r2, r7, r3
 8010a38:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010a3c:	b212      	sxth	r2, r2
 8010a3e:	429a      	cmp	r2, r3
 8010a40:	db3c      	blt.n	8010abc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010a42:	8970      	ldrh	r0, [r6, #10]
 8010a44:	4403      	add	r3, r0
 8010a46:	b21b      	sxth	r3, r3
 8010a48:	429a      	cmp	r2, r3
 8010a4a:	da37      	bge.n	8010abc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010a4c:	2300      	movs	r3, #0
 8010a4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010a50:	4630      	mov	r0, r6
 8010a52:	ab0b      	add	r3, sp, #44	; 0x2c
 8010a54:	f7ff ff36 	bl	80108c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010a58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010a5a:	b37a      	cbz	r2, 8010abc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010a5c:	4552      	cmp	r2, sl
 8010a5e:	d02d      	beq.n	8010abc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010a60:	4611      	mov	r1, r2
 8010a62:	a80e      	add	r0, sp, #56	; 0x38
 8010a64:	9209      	str	r2, [sp, #36]	; 0x24
 8010a66:	f006 fad7 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a6a:	9a06      	ldr	r2, [sp, #24]
 8010a6c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010a70:	9b01      	ldr	r3, [sp, #4]
 8010a72:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010a76:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010a7a:	4413      	add	r3, r2
 8010a7c:	f04f 0e02 	mov.w	lr, #2
 8010a80:	fb91 f1fe 	sdiv	r1, r1, lr
 8010a84:	4401      	add	r1, r0
 8010a86:	1a58      	subs	r0, r3, r1
 8010a88:	9a07      	ldr	r2, [sp, #28]
 8010a8a:	9b02      	ldr	r3, [sp, #8]
 8010a8c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010a90:	fb9c fcfe 	sdiv	ip, ip, lr
 8010a94:	4413      	add	r3, r2
 8010a96:	448c      	add	ip, r1
 8010a98:	eba3 030c 	sub.w	r3, r3, ip
 8010a9c:	435b      	muls	r3, r3
 8010a9e:	fb00 3300 	mla	r3, r0, r0, r3
 8010aa2:	42ab      	cmp	r3, r5
 8010aa4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010aa6:	d208      	bcs.n	8010aba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010aa8:	9803      	ldr	r0, [sp, #12]
 8010aaa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010aac:	6001      	str	r1, [r0, #0]
 8010aae:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010ab0:	9805      	ldr	r0, [sp, #20]
 8010ab2:	8008      	strh	r0, [r1, #0]
 8010ab4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010ab6:	461d      	mov	r5, r3
 8010ab8:	800f      	strh	r7, [r1, #0]
 8010aba:	4692      	mov	sl, r2
 8010abc:	f10b 0b01 	add.w	fp, fp, #1
 8010ac0:	f1bb 0f04 	cmp.w	fp, #4
 8010ac4:	f104 0408 	add.w	r4, r4, #8
 8010ac8:	d19c      	bne.n	8010a04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010aca:	9b00      	ldr	r3, [sp, #0]
 8010acc:	9c08      	ldr	r4, [sp, #32]
 8010ace:	444b      	add	r3, r9
 8010ad0:	4544      	cmp	r4, r8
 8010ad2:	9300      	str	r3, [sp, #0]
 8010ad4:	d187      	bne.n	80109e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010ad6:	b021      	add	sp, #132	; 0x84
 8010ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010adc:	f04f 35ff 	mov.w	r5, #4294967295
 8010ae0:	e766      	b.n	80109b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010ae2:	bf00      	nop
 8010ae4:	20012db4 	.word	0x20012db4
 8010ae8:	0802bd08 	.word	0x0802bd08

08010aec <_ZN8touchgfx4RectaNERKS0_>:
 8010aec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010af0:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010af4:	888c      	ldrh	r4, [r1, #4]
 8010af6:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010afa:	443c      	add	r4, r7
 8010afc:	b2a4      	uxth	r4, r4
 8010afe:	fa0f f884 	sxth.w	r8, r4
 8010b02:	45c1      	cmp	r9, r8
 8010b04:	da2f      	bge.n	8010b66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010b06:	8882      	ldrh	r2, [r0, #4]
 8010b08:	444a      	add	r2, r9
 8010b0a:	b292      	uxth	r2, r2
 8010b0c:	fa0f fe82 	sxth.w	lr, r2
 8010b10:	4577      	cmp	r7, lr
 8010b12:	da28      	bge.n	8010b66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010b14:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010b18:	88cb      	ldrh	r3, [r1, #6]
 8010b1a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010b1e:	442b      	add	r3, r5
 8010b20:	b21b      	sxth	r3, r3
 8010b22:	429e      	cmp	r6, r3
 8010b24:	da1f      	bge.n	8010b66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010b26:	88c3      	ldrh	r3, [r0, #6]
 8010b28:	4433      	add	r3, r6
 8010b2a:	b29b      	uxth	r3, r3
 8010b2c:	fa0f fc83 	sxth.w	ip, r3
 8010b30:	4565      	cmp	r5, ip
 8010b32:	da18      	bge.n	8010b66 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010b34:	454f      	cmp	r7, r9
 8010b36:	bfb8      	it	lt
 8010b38:	464f      	movlt	r7, r9
 8010b3a:	42b5      	cmp	r5, r6
 8010b3c:	bfb8      	it	lt
 8010b3e:	4635      	movlt	r5, r6
 8010b40:	45f0      	cmp	r8, lr
 8010b42:	bfd8      	it	le
 8010b44:	4622      	movle	r2, r4
 8010b46:	1bd2      	subs	r2, r2, r7
 8010b48:	8082      	strh	r2, [r0, #4]
 8010b4a:	884a      	ldrh	r2, [r1, #2]
 8010b4c:	88c9      	ldrh	r1, [r1, #6]
 8010b4e:	8007      	strh	r7, [r0, #0]
 8010b50:	440a      	add	r2, r1
 8010b52:	b292      	uxth	r2, r2
 8010b54:	b211      	sxth	r1, r2
 8010b56:	458c      	cmp	ip, r1
 8010b58:	bfa8      	it	ge
 8010b5a:	4613      	movge	r3, r2
 8010b5c:	1b5b      	subs	r3, r3, r5
 8010b5e:	80c3      	strh	r3, [r0, #6]
 8010b60:	8045      	strh	r5, [r0, #2]
 8010b62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b66:	2300      	movs	r3, #0
 8010b68:	8003      	strh	r3, [r0, #0]
 8010b6a:	8043      	strh	r3, [r0, #2]
 8010b6c:	8083      	strh	r3, [r0, #4]
 8010b6e:	80c3      	strh	r3, [r0, #6]
 8010b70:	e7f7      	b.n	8010b62 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010b72 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010b72:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010b76:	2b00      	cmp	r3, #0
 8010b78:	dd06      	ble.n	8010b88 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010b7a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010b7e:	2800      	cmp	r0, #0
 8010b80:	bfcc      	ite	gt
 8010b82:	2000      	movgt	r0, #0
 8010b84:	2001      	movle	r0, #1
 8010b86:	4770      	bx	lr
 8010b88:	2001      	movs	r0, #1
 8010b8a:	4770      	bx	lr

08010b8c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010b8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b90:	2300      	movs	r3, #0
 8010b92:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010b94:	8003      	strh	r3, [r0, #0]
 8010b96:	4604      	mov	r4, r0
 8010b98:	8043      	strh	r3, [r0, #2]
 8010b9a:	8083      	strh	r3, [r0, #4]
 8010b9c:	80c3      	strh	r3, [r0, #6]
 8010b9e:	2d00      	cmp	r5, #0
 8010ba0:	d040      	beq.n	8010c24 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010ba2:	1d28      	adds	r0, r5, #4
 8010ba4:	f7ff ffe5 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ba8:	b988      	cbnz	r0, 8010bce <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010baa:	4620      	mov	r0, r4
 8010bac:	f7ff ffe1 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010bb0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010bb4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010bb8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010bbc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010bc0:	b138      	cbz	r0, 8010bd2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010bc2:	8022      	strh	r2, [r4, #0]
 8010bc4:	8063      	strh	r3, [r4, #2]
 8010bc6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010bca:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010bce:	69ad      	ldr	r5, [r5, #24]
 8010bd0:	e7e5      	b.n	8010b9e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010bd2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010bd6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010bda:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010bde:	4290      	cmp	r0, r2
 8010be0:	4607      	mov	r7, r0
 8010be2:	bfa8      	it	ge
 8010be4:	4617      	movge	r7, r2
 8010be6:	4472      	add	r2, lr
 8010be8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010bec:	8027      	strh	r7, [r4, #0]
 8010bee:	4299      	cmp	r1, r3
 8010bf0:	460e      	mov	r6, r1
 8010bf2:	4440      	add	r0, r8
 8010bf4:	bfa8      	it	ge
 8010bf6:	461e      	movge	r6, r3
 8010bf8:	4471      	add	r1, lr
 8010bfa:	4463      	add	r3, ip
 8010bfc:	b200      	sxth	r0, r0
 8010bfe:	b212      	sxth	r2, r2
 8010c00:	b209      	sxth	r1, r1
 8010c02:	b21b      	sxth	r3, r3
 8010c04:	4290      	cmp	r0, r2
 8010c06:	bfac      	ite	ge
 8010c08:	ebc7 0200 	rsbge	r2, r7, r0
 8010c0c:	ebc7 0202 	rsblt	r2, r7, r2
 8010c10:	4299      	cmp	r1, r3
 8010c12:	bfac      	ite	ge
 8010c14:	ebc6 0301 	rsbge	r3, r6, r1
 8010c18:	ebc6 0303 	rsblt	r3, r6, r3
 8010c1c:	8066      	strh	r6, [r4, #2]
 8010c1e:	80a2      	strh	r2, [r4, #4]
 8010c20:	80e3      	strh	r3, [r4, #6]
 8010c22:	e7d4      	b.n	8010bce <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010c24:	4620      	mov	r0, r4
 8010c26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010c2a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010c2a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010c2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010c32:	b383      	cbz	r3, 8010c96 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010c34:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010c36:	b374      	cbz	r4, 8010c96 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010c38:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010c3c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010c40:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010c44:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010c48:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010c4c:	b303      	cbz	r3, 8010c90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010c4e:	4668      	mov	r0, sp
 8010c50:	1d21      	adds	r1, r4, #4
 8010c52:	f8ad 5000 	strh.w	r5, [sp]
 8010c56:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010c5a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010c5e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010c62:	f7ff ff43 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8010c66:	4668      	mov	r0, sp
 8010c68:	f7ff ff83 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c6c:	b980      	cbnz	r0, 8010c90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010c6e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010c72:	88a2      	ldrh	r2, [r4, #4]
 8010c74:	1a9b      	subs	r3, r3, r2
 8010c76:	f8ad 3000 	strh.w	r3, [sp]
 8010c7a:	88e2      	ldrh	r2, [r4, #6]
 8010c7c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010c80:	1a9b      	subs	r3, r3, r2
 8010c82:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010c86:	6823      	ldr	r3, [r4, #0]
 8010c88:	4669      	mov	r1, sp
 8010c8a:	689b      	ldr	r3, [r3, #8]
 8010c8c:	4620      	mov	r0, r4
 8010c8e:	4798      	blx	r3
 8010c90:	69a4      	ldr	r4, [r4, #24]
 8010c92:	2c00      	cmp	r4, #0
 8010c94:	d1d8      	bne.n	8010c48 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010c96:	b002      	add	sp, #8
 8010c98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010c9c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010c9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010c9e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010ca2:	460d      	mov	r5, r1
 8010ca4:	4616      	mov	r6, r2
 8010ca6:	b323      	cbz	r3, 8010cf2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010ca8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010caa:	b314      	cbz	r4, 8010cf2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010cac:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010cb0:	b1eb      	cbz	r3, 8010cee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010cb2:	6828      	ldr	r0, [r5, #0]
 8010cb4:	6869      	ldr	r1, [r5, #4]
 8010cb6:	466b      	mov	r3, sp
 8010cb8:	c303      	stmia	r3!, {r0, r1}
 8010cba:	4668      	mov	r0, sp
 8010cbc:	1d21      	adds	r1, r4, #4
 8010cbe:	f7ff ff15 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8010cc2:	4668      	mov	r0, sp
 8010cc4:	f7ff ff55 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cc8:	b988      	cbnz	r0, 8010cee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010cca:	f8bd 3000 	ldrh.w	r3, [sp]
 8010cce:	88a2      	ldrh	r2, [r4, #4]
 8010cd0:	1a9b      	subs	r3, r3, r2
 8010cd2:	f8ad 3000 	strh.w	r3, [sp]
 8010cd6:	88e2      	ldrh	r2, [r4, #6]
 8010cd8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010cdc:	1a9b      	subs	r3, r3, r2
 8010cde:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010ce2:	6823      	ldr	r3, [r4, #0]
 8010ce4:	4632      	mov	r2, r6
 8010ce6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010ce8:	4669      	mov	r1, sp
 8010cea:	4620      	mov	r0, r4
 8010cec:	4798      	blx	r3
 8010cee:	69a4      	ldr	r4, [r4, #24]
 8010cf0:	e7db      	b.n	8010caa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010cf2:	b002      	add	sp, #8
 8010cf4:	bd70      	pop	{r4, r5, r6, pc}

08010cf6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010cf6:	b513      	push	{r0, r1, r4, lr}
 8010cf8:	6803      	ldr	r3, [r0, #0]
 8010cfa:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010cfe:	2300      	movs	r3, #0
 8010d00:	e9cd 3300 	strd	r3, r3, [sp]
 8010d04:	466b      	mov	r3, sp
 8010d06:	47a0      	blx	r4
 8010d08:	b002      	add	sp, #8
 8010d0a:	bd10      	pop	{r4, pc}

08010d0c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010d0c:	2301      	movs	r3, #1
 8010d0e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010d12:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010d16:	4770      	bx	lr

08010d18 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010d18:	2301      	movs	r3, #1
 8010d1a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010d1e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010d22:	4770      	bx	lr

08010d24 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010d24:	6843      	ldr	r3, [r0, #4]
 8010d26:	2201      	movs	r2, #1
 8010d28:	725a      	strb	r2, [r3, #9]
 8010d2a:	6840      	ldr	r0, [r0, #4]
 8010d2c:	6803      	ldr	r3, [r0, #0]
 8010d2e:	691b      	ldr	r3, [r3, #16]
 8010d30:	4718      	bx	r3

08010d32 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010d32:	6840      	ldr	r0, [r0, #4]
 8010d34:	6803      	ldr	r3, [r0, #0]
 8010d36:	689b      	ldr	r3, [r3, #8]
 8010d38:	4718      	bx	r3

08010d3a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010d3a:	b530      	push	{r4, r5, lr}
 8010d3c:	b08b      	sub	sp, #44	; 0x2c
 8010d3e:	6804      	ldr	r4, [r0, #0]
 8010d40:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010d44:	9509      	str	r5, [sp, #36]	; 0x24
 8010d46:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010d4a:	9508      	str	r5, [sp, #32]
 8010d4c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010d50:	9507      	str	r5, [sp, #28]
 8010d52:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010d56:	9506      	str	r5, [sp, #24]
 8010d58:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010d5c:	9505      	str	r5, [sp, #20]
 8010d5e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010d62:	9504      	str	r5, [sp, #16]
 8010d64:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010d68:	9503      	str	r5, [sp, #12]
 8010d6a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010d6e:	9502      	str	r5, [sp, #8]
 8010d70:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010d74:	e9cd 3500 	strd	r3, r5, [sp]
 8010d78:	4613      	mov	r3, r2
 8010d7a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010d7c:	2200      	movs	r2, #0
 8010d7e:	47a0      	blx	r4
 8010d80:	b00b      	add	sp, #44	; 0x2c
 8010d82:	bd30      	pop	{r4, r5, pc}

08010d84 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010d84:	4b04      	ldr	r3, [pc, #16]	; (8010d98 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010d86:	781b      	ldrb	r3, [r3, #0]
 8010d88:	b123      	cbz	r3, 8010d94 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010d8a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010d8e:	f080 0001 	eor.w	r0, r0, #1
 8010d92:	4770      	bx	lr
 8010d94:	2001      	movs	r0, #1
 8010d96:	4770      	bx	lr
 8010d98:	20012db2 	.word	0x20012db2

08010d9c <_ZN8touchgfx3HAL8endFrameEv>:
 8010d9c:	b510      	push	{r4, lr}
 8010d9e:	4604      	mov	r4, r0
 8010da0:	6840      	ldr	r0, [r0, #4]
 8010da2:	6803      	ldr	r3, [r0, #0]
 8010da4:	689b      	ldr	r3, [r3, #8]
 8010da6:	4798      	blx	r3
 8010da8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010dac:	b113      	cbz	r3, 8010db4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010dae:	2301      	movs	r3, #1
 8010db0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010db4:	bd10      	pop	{r4, pc}

08010db6 <_ZN8touchgfx3HAL10initializeEv>:
 8010db6:	b510      	push	{r4, lr}
 8010db8:	4604      	mov	r4, r0
 8010dba:	f7f0 fa95 	bl	80012e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010dbe:	f7f0 f9a1 	bl	8001104 <_ZN8touchgfx4GPIO4initEv>
 8010dc2:	6860      	ldr	r0, [r4, #4]
 8010dc4:	6803      	ldr	r3, [r0, #0]
 8010dc6:	68db      	ldr	r3, [r3, #12]
 8010dc8:	4798      	blx	r3
 8010dca:	68e0      	ldr	r0, [r4, #12]
 8010dcc:	6803      	ldr	r3, [r0, #0]
 8010dce:	689b      	ldr	r3, [r3, #8]
 8010dd0:	4798      	blx	r3
 8010dd2:	6823      	ldr	r3, [r4, #0]
 8010dd4:	4620      	mov	r0, r4
 8010dd6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010dd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ddc:	4718      	bx	r3
	...

08010de0 <_ZN8touchgfx3HAL4tickEv>:
 8010de0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010de2:	6803      	ldr	r3, [r0, #0]
 8010de4:	4d5b      	ldr	r5, [pc, #364]	; (8010f54 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010de6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010dea:	4604      	mov	r4, r0
 8010dec:	4798      	blx	r3
 8010dee:	2800      	cmp	r0, #0
 8010df0:	f000 8095 	beq.w	8010f1e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010df4:	2001      	movs	r0, #1
 8010df6:	f7f0 f937 	bl	8001068 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010dfa:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010dfe:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010e02:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010e06:	2600      	movs	r6, #0
 8010e08:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010e0c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010e10:	b133      	cbz	r3, 8010e20 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010e12:	6823      	ldr	r3, [r4, #0]
 8010e14:	4620      	mov	r0, r4
 8010e16:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010e1a:	4798      	blx	r3
 8010e1c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010e20:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010e24:	6862      	ldr	r2, [r4, #4]
 8010e26:	f083 0301 	eor.w	r3, r3, #1
 8010e2a:	7253      	strb	r3, [r2, #9]
 8010e2c:	2601      	movs	r6, #1
 8010e2e:	702e      	strb	r6, [r5, #0]
 8010e30:	f004 ff6e 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 8010e34:	6803      	ldr	r3, [r0, #0]
 8010e36:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010e38:	4798      	blx	r3
 8010e3a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010e3e:	b90b      	cbnz	r3, 8010e44 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010e40:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010e44:	f004 ff64 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 8010e48:	6803      	ldr	r3, [r0, #0]
 8010e4a:	695b      	ldr	r3, [r3, #20]
 8010e4c:	4798      	blx	r3
 8010e4e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010e50:	6803      	ldr	r3, [r0, #0]
 8010e52:	691b      	ldr	r3, [r3, #16]
 8010e54:	4798      	blx	r3
 8010e56:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010e5a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010e5e:	3b01      	subs	r3, #1
 8010e60:	b2db      	uxtb	r3, r3
 8010e62:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010e66:	b10a      	cbz	r2, 8010e6c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010e68:	2b00      	cmp	r3, #0
 8010e6a:	d1eb      	bne.n	8010e44 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010e6c:	4a3a      	ldr	r2, [pc, #232]	; (8010f58 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010e6e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010e72:	7813      	ldrb	r3, [r2, #0]
 8010e74:	3301      	adds	r3, #1
 8010e76:	b25b      	sxtb	r3, r3
 8010e78:	4299      	cmp	r1, r3
 8010e7a:	7013      	strb	r3, [r2, #0]
 8010e7c:	dc10      	bgt.n	8010ea0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010e7e:	68e0      	ldr	r0, [r4, #12]
 8010e80:	2300      	movs	r3, #0
 8010e82:	7013      	strb	r3, [r2, #0]
 8010e84:	6803      	ldr	r3, [r0, #0]
 8010e86:	aa03      	add	r2, sp, #12
 8010e88:	68db      	ldr	r3, [r3, #12]
 8010e8a:	a902      	add	r1, sp, #8
 8010e8c:	4798      	blx	r3
 8010e8e:	6823      	ldr	r3, [r4, #0]
 8010e90:	2800      	cmp	r0, #0
 8010e92:	d050      	beq.n	8010f36 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010e94:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010e98:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010e9c:	4620      	mov	r0, r4
 8010e9e:	4798      	blx	r3
 8010ea0:	6960      	ldr	r0, [r4, #20]
 8010ea2:	2300      	movs	r3, #0
 8010ea4:	f88d 3007 	strb.w	r3, [sp, #7]
 8010ea8:	b158      	cbz	r0, 8010ec2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010eaa:	6803      	ldr	r3, [r0, #0]
 8010eac:	f10d 0107 	add.w	r1, sp, #7
 8010eb0:	68db      	ldr	r3, [r3, #12]
 8010eb2:	4798      	blx	r3
 8010eb4:	b128      	cbz	r0, 8010ec2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010eb6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010eb8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010ebc:	6803      	ldr	r3, [r0, #0]
 8010ebe:	68db      	ldr	r3, [r3, #12]
 8010ec0:	4798      	blx	r3
 8010ec2:	f104 001c 	add.w	r0, r4, #28
 8010ec6:	f015 feb9 	bl	8026c3c <_ZN8touchgfx8Gestures4tickEv>
 8010eca:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010ece:	b30b      	cbz	r3, 8010f14 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010ed0:	6920      	ldr	r0, [r4, #16]
 8010ed2:	6803      	ldr	r3, [r0, #0]
 8010ed4:	691b      	ldr	r3, [r3, #16]
 8010ed6:	4798      	blx	r3
 8010ed8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010eda:	4606      	mov	r6, r0
 8010edc:	b903      	cbnz	r3, 8010ee0 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010ede:	6760      	str	r0, [r4, #116]	; 0x74
 8010ee0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010ee2:	4a1e      	ldr	r2, [pc, #120]	; (8010f5c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010ee4:	1af3      	subs	r3, r6, r3
 8010ee6:	4293      	cmp	r3, r2
 8010ee8:	d914      	bls.n	8010f14 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010eea:	6920      	ldr	r0, [r4, #16]
 8010eec:	6803      	ldr	r3, [r0, #0]
 8010eee:	699b      	ldr	r3, [r3, #24]
 8010ef0:	4798      	blx	r3
 8010ef2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010ef4:	2264      	movs	r2, #100	; 0x64
 8010ef6:	1af3      	subs	r3, r6, r3
 8010ef8:	fbb3 f3f2 	udiv	r3, r3, r2
 8010efc:	fbb0 f0f3 	udiv	r0, r0, r3
 8010f00:	2800      	cmp	r0, #0
 8010f02:	dc1d      	bgt.n	8010f40 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010f04:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010f08:	6920      	ldr	r0, [r4, #16]
 8010f0a:	6803      	ldr	r3, [r0, #0]
 8010f0c:	2100      	movs	r1, #0
 8010f0e:	69db      	ldr	r3, [r3, #28]
 8010f10:	4798      	blx	r3
 8010f12:	6766      	str	r6, [r4, #116]	; 0x74
 8010f14:	f004 fefc 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 8010f18:	6803      	ldr	r3, [r0, #0]
 8010f1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f1c:	4798      	blx	r3
 8010f1e:	6823      	ldr	r3, [r4, #0]
 8010f20:	4620      	mov	r0, r4
 8010f22:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010f26:	4798      	blx	r3
 8010f28:	2001      	movs	r0, #1
 8010f2a:	f7f0 f8b5 	bl	8001098 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010f2e:	2300      	movs	r3, #0
 8010f30:	702b      	strb	r3, [r5, #0]
 8010f32:	b004      	add	sp, #16
 8010f34:	bd70      	pop	{r4, r5, r6, pc}
 8010f36:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010f3a:	4620      	mov	r0, r4
 8010f3c:	4798      	blx	r3
 8010f3e:	e7af      	b.n	8010ea0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010f40:	2863      	cmp	r0, #99	; 0x63
 8010f42:	bfcb      	itete	gt
 8010f44:	2300      	movgt	r3, #0
 8010f46:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010f4a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010f4e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010f52:	e7d9      	b.n	8010f08 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010f54:	20012db8 	.word	0x20012db8
 8010f58:	20012db9 	.word	0x20012db9
 8010f5c:	05f5e100 	.word	0x05f5e100

08010f60 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010f60:	b510      	push	{r4, lr}
 8010f62:	4604      	mov	r4, r0
 8010f64:	f7f0 f9f0 	bl	8001348 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010f68:	6863      	ldr	r3, [r4, #4]
 8010f6a:	2200      	movs	r2, #0
 8010f6c:	729a      	strb	r2, [r3, #10]
 8010f6e:	bd10      	pop	{r4, pc}

08010f70 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010f70:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010f72:	301c      	adds	r0, #28
 8010f74:	f015 be60 	b.w	8026c38 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010f78 <_ZN8touchgfx3HAL5touchEll>:
 8010f78:	b530      	push	{r4, r5, lr}
 8010f7a:	b087      	sub	sp, #28
 8010f7c:	4604      	mov	r4, r0
 8010f7e:	a804      	add	r0, sp, #16
 8010f80:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010f84:	f004 fc90 	bl	80158a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010f88:	9b04      	ldr	r3, [sp, #16]
 8010f8a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f8e:	a906      	add	r1, sp, #24
 8010f90:	9b05      	ldr	r3, [sp, #20]
 8010f92:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010f96:	a803      	add	r0, sp, #12
 8010f98:	f004 fcd8 	bl	801594c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010f9c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010fa0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010fa4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010fa8:	f104 001c 	add.w	r0, r4, #28
 8010fac:	b189      	cbz	r1, 8010fd2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010fae:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010fb2:	9300      	str	r3, [sp, #0]
 8010fb4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010fb8:	4613      	mov	r3, r2
 8010fba:	462a      	mov	r2, r5
 8010fbc:	f015 fe4c 	bl	8026c58 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010fc0:	b128      	cbz	r0, 8010fce <_ZN8touchgfx3HAL5touchEll+0x56>
 8010fc2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010fc6:	6623      	str	r3, [r4, #96]	; 0x60
 8010fc8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010fcc:	6663      	str	r3, [r4, #100]	; 0x64
 8010fce:	b007      	add	sp, #28
 8010fd0:	bd30      	pop	{r4, r5, pc}
 8010fd2:	f015 fe81 	bl	8026cd8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010fd6:	2301      	movs	r3, #1
 8010fd8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010fdc:	e7f1      	b.n	8010fc2 <_ZN8touchgfx3HAL5touchEll+0x4a>

08010fde <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010fde:	b510      	push	{r4, lr}
 8010fe0:	2b00      	cmp	r3, #0
 8010fe2:	d046      	beq.n	8011072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010fe4:	ea81 0002 	eor.w	r0, r1, r2
 8010fe8:	07c4      	lsls	r4, r0, #31
 8010fea:	d508      	bpl.n	8010ffe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010fec:	440b      	add	r3, r1
 8010fee:	3a01      	subs	r2, #1
 8010ff0:	428b      	cmp	r3, r1
 8010ff2:	d93e      	bls.n	8011072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010ff4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010ff8:	f801 0b01 	strb.w	r0, [r1], #1
 8010ffc:	e7f8      	b.n	8010ff0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010ffe:	07d0      	lsls	r0, r2, #31
 8011000:	bf42      	ittt	mi
 8011002:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011006:	f801 0b01 	strbmi.w	r0, [r1], #1
 801100a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801100e:	2b01      	cmp	r3, #1
 8011010:	d911      	bls.n	8011036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011012:	ea81 0402 	eor.w	r4, r1, r2
 8011016:	07a4      	lsls	r4, r4, #30
 8011018:	4610      	mov	r0, r2
 801101a:	d022      	beq.n	8011062 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801101c:	f023 0401 	bic.w	r4, r3, #1
 8011020:	440c      	add	r4, r1
 8011022:	428c      	cmp	r4, r1
 8011024:	4602      	mov	r2, r0
 8011026:	d904      	bls.n	8011032 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011028:	8812      	ldrh	r2, [r2, #0]
 801102a:	f821 2b02 	strh.w	r2, [r1], #2
 801102e:	3002      	adds	r0, #2
 8011030:	e7f7      	b.n	8011022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011032:	f003 0301 	and.w	r3, r3, #1
 8011036:	f023 0003 	bic.w	r0, r3, #3
 801103a:	4408      	add	r0, r1
 801103c:	4288      	cmp	r0, r1
 801103e:	4614      	mov	r4, r2
 8011040:	d904      	bls.n	801104c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011042:	6824      	ldr	r4, [r4, #0]
 8011044:	f841 4b04 	str.w	r4, [r1], #4
 8011048:	3204      	adds	r2, #4
 801104a:	e7f7      	b.n	801103c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 801104c:	f003 0303 	and.w	r3, r3, #3
 8011050:	440b      	add	r3, r1
 8011052:	3a01      	subs	r2, #1
 8011054:	428b      	cmp	r3, r1
 8011056:	d90c      	bls.n	8011072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011058:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801105c:	f801 0b01 	strb.w	r0, [r1], #1
 8011060:	e7f8      	b.n	8011054 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011062:	0790      	lsls	r0, r2, #30
 8011064:	d0e7      	beq.n	8011036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011066:	f832 0b02 	ldrh.w	r0, [r2], #2
 801106a:	f821 0b02 	strh.w	r0, [r1], #2
 801106e:	3b02      	subs	r3, #2
 8011070:	e7e1      	b.n	8011036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011072:	2001      	movs	r0, #1
 8011074:	bd10      	pop	{r4, pc}

08011076 <_ZN8touchgfx3HAL7noTouchEv>:
 8011076:	b510      	push	{r4, lr}
 8011078:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801107c:	4604      	mov	r4, r0
 801107e:	b153      	cbz	r3, 8011096 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011080:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8011084:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011088:	2101      	movs	r1, #1
 801108a:	301c      	adds	r0, #28
 801108c:	f015 fe24 	bl	8026cd8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011090:	2300      	movs	r3, #0
 8011092:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011096:	bd10      	pop	{r4, pc}

08011098 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011098:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801109c:	b085      	sub	sp, #20
 801109e:	ad04      	add	r5, sp, #16
 80110a0:	4604      	mov	r4, r0
 80110a2:	2000      	movs	r0, #0
 80110a4:	f845 0d04 	str.w	r0, [r5, #-4]!
 80110a8:	69a0      	ldr	r0, [r4, #24]
 80110aa:	6806      	ldr	r6, [r0, #0]
 80110ac:	9501      	str	r5, [sp, #4]
 80110ae:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80110b2:	9500      	str	r5, [sp, #0]
 80110b4:	6835      	ldr	r5, [r6, #0]
 80110b6:	4699      	mov	r9, r3
 80110b8:	460f      	mov	r7, r1
 80110ba:	4690      	mov	r8, r2
 80110bc:	47a8      	blx	r5
 80110be:	4d10      	ldr	r5, [pc, #64]	; (8011100 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80110c0:	4606      	mov	r6, r0
 80110c2:	f8a5 9000 	strh.w	r9, [r5]
 80110c6:	f7f3 fbc5 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 80110ca:	6803      	ldr	r3, [r0, #0]
 80110cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110ce:	4798      	blx	r3
 80110d0:	b128      	cbz	r0, 80110de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80110d2:	2801      	cmp	r0, #1
 80110d4:	d00b      	beq.n	80110ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80110d6:	4630      	mov	r0, r6
 80110d8:	b005      	add	sp, #20
 80110da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80110de:	882b      	ldrh	r3, [r5, #0]
 80110e0:	fb08 7203 	mla	r2, r8, r3, r7
 80110e4:	9b03      	ldr	r3, [sp, #12]
 80110e6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80110ea:	63e3      	str	r3, [r4, #60]	; 0x3c
 80110ec:	e7f3      	b.n	80110d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80110ee:	882a      	ldrh	r2, [r5, #0]
 80110f0:	9b03      	ldr	r3, [sp, #12]
 80110f2:	fb08 7202 	mla	r2, r8, r2, r7
 80110f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80110fa:	1a9a      	subs	r2, r3, r2
 80110fc:	63e2      	str	r2, [r4, #60]	; 0x3c
 80110fe:	e7ea      	b.n	80110d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011100:	20012dae 	.word	0x20012dae

08011104 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011104:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011106:	b08b      	sub	sp, #44	; 0x2c
 8011108:	4617      	mov	r7, r2
 801110a:	4604      	mov	r4, r0
 801110c:	460e      	mov	r6, r1
 801110e:	461d      	mov	r5, r3
 8011110:	f7f3 fba0 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 8011114:	6803      	ldr	r3, [r0, #0]
 8011116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011118:	4798      	blx	r3
 801111a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801111e:	9007      	str	r0, [sp, #28]
 8011120:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011124:	4b0d      	ldr	r3, [pc, #52]	; (801115c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011126:	6822      	ldr	r2, [r4, #0]
 8011128:	881b      	ldrh	r3, [r3, #0]
 801112a:	9306      	str	r3, [sp, #24]
 801112c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011130:	9305      	str	r3, [sp, #20]
 8011132:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8011136:	9304      	str	r3, [sp, #16]
 8011138:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801113c:	9303      	str	r3, [sp, #12]
 801113e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011142:	9302      	str	r3, [sp, #8]
 8011144:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011148:	e9cd 5300 	strd	r5, r3, [sp]
 801114c:	4631      	mov	r1, r6
 801114e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011150:	463b      	mov	r3, r7
 8011152:	2200      	movs	r2, #0
 8011154:	4620      	mov	r0, r4
 8011156:	47a8      	blx	r5
 8011158:	b00b      	add	sp, #44	; 0x2c
 801115a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801115c:	20012dae 	.word	0x20012dae

08011160 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011164:	4698      	mov	r8, r3
 8011166:	6803      	ldr	r3, [r0, #0]
 8011168:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801116a:	4b15      	ldr	r3, [pc, #84]	; (80111c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801116c:	b08b      	sub	sp, #44	; 0x2c
 801116e:	4617      	mov	r7, r2
 8011170:	f8b3 9000 	ldrh.w	r9, [r3]
 8011174:	460e      	mov	r6, r1
 8011176:	4604      	mov	r4, r0
 8011178:	f7f3 fb6c 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 801117c:	6803      	ldr	r3, [r0, #0]
 801117e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011180:	4798      	blx	r3
 8011182:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011186:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801118a:	2302      	movs	r3, #2
 801118c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011190:	2301      	movs	r3, #1
 8011192:	9305      	str	r3, [sp, #20]
 8011194:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011198:	9304      	str	r3, [sp, #16]
 801119a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801119e:	9303      	str	r3, [sp, #12]
 80111a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80111a4:	9302      	str	r3, [sp, #8]
 80111a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80111aa:	2200      	movs	r2, #0
 80111ac:	e9cd 8300 	strd	r8, r3, [sp]
 80111b0:	4631      	mov	r1, r6
 80111b2:	463b      	mov	r3, r7
 80111b4:	4620      	mov	r0, r4
 80111b6:	47a8      	blx	r5
 80111b8:	b00b      	add	sp, #44	; 0x2c
 80111ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111be:	bf00      	nop
 80111c0:	20012dae 	.word	0x20012dae

080111c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80111c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80111c8:	4698      	mov	r8, r3
 80111ca:	6803      	ldr	r3, [r0, #0]
 80111cc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80111ce:	4b11      	ldr	r3, [pc, #68]	; (8011214 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80111d0:	b087      	sub	sp, #28
 80111d2:	f8b3 9000 	ldrh.w	r9, [r3]
 80111d6:	460e      	mov	r6, r1
 80111d8:	4617      	mov	r7, r2
 80111da:	4604      	mov	r4, r0
 80111dc:	f7f3 fb3a 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 80111e0:	6803      	ldr	r3, [r0, #0]
 80111e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111e4:	4798      	blx	r3
 80111e6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80111ea:	f8cd 900c 	str.w	r9, [sp, #12]
 80111ee:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80111f2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80111f6:	9302      	str	r3, [sp, #8]
 80111f8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80111fc:	9301      	str	r3, [sp, #4]
 80111fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011202:	9300      	str	r3, [sp, #0]
 8011204:	463a      	mov	r2, r7
 8011206:	4643      	mov	r3, r8
 8011208:	4631      	mov	r1, r6
 801120a:	4620      	mov	r0, r4
 801120c:	47a8      	blx	r5
 801120e:	b007      	add	sp, #28
 8011210:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011214:	20012dae 	.word	0x20012dae

08011218 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801121c:	4604      	mov	r4, r0
 801121e:	b08f      	sub	sp, #60	; 0x3c
 8011220:	4610      	mov	r0, r2
 8011222:	460d      	mov	r5, r1
 8011224:	4691      	mov	r9, r2
 8011226:	461e      	mov	r6, r3
 8011228:	f008 f8f0 	bl	801940c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801122c:	2800      	cmp	r0, #0
 801122e:	f000 809d 	beq.w	801136c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011232:	6823      	ldr	r3, [r4, #0]
 8011234:	f8df b198 	ldr.w	fp, [pc, #408]	; 80113d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011238:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801123a:	f8df a198 	ldr.w	sl, [pc, #408]	; 80113d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801123e:	4f61      	ldr	r7, [pc, #388]	; (80113c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011240:	4620      	mov	r0, r4
 8011242:	4798      	blx	r3
 8011244:	6823      	ldr	r3, [r4, #0]
 8011246:	4620      	mov	r0, r4
 8011248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801124a:	4798      	blx	r3
 801124c:	f8bb 3000 	ldrh.w	r3, [fp]
 8011250:	9301      	str	r3, [sp, #4]
 8011252:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011256:	f8ba 3000 	ldrh.w	r3, [sl]
 801125a:	9302      	str	r3, [sp, #8]
 801125c:	883b      	ldrh	r3, [r7, #0]
 801125e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011262:	9303      	str	r3, [sp, #12]
 8011264:	4b58      	ldr	r3, [pc, #352]	; (80113c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011266:	9305      	str	r3, [sp, #20]
 8011268:	881a      	ldrh	r2, [r3, #0]
 801126a:	9204      	str	r2, [sp, #16]
 801126c:	4640      	mov	r0, r8
 801126e:	f008 f961 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011272:	8038      	strh	r0, [r7, #0]
 8011274:	4640      	mov	r0, r8
 8011276:	f008 f991 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801127a:	9b05      	ldr	r3, [sp, #20]
 801127c:	b280      	uxth	r0, r0
 801127e:	8018      	strh	r0, [r3, #0]
 8011280:	4b52      	ldr	r3, [pc, #328]	; (80113cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011282:	781b      	ldrb	r3, [r3, #0]
 8011284:	2b00      	cmp	r3, #0
 8011286:	d174      	bne.n	8011372 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011288:	883b      	ldrh	r3, [r7, #0]
 801128a:	f8ab 3000 	strh.w	r3, [fp]
 801128e:	f8aa 0000 	strh.w	r0, [sl]
 8011292:	4648      	mov	r0, r9
 8011294:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011298:	f008 f8b8 	bl	801940c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801129c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80112a0:	2200      	movs	r2, #0
 80112a2:	4611      	mov	r1, r2
 80112a4:	4628      	mov	r0, r5
 80112a6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80112aa:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80112ae:	f7f1 ff46 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 80112b2:	2301      	movs	r3, #1
 80112b4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80112b8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80112bc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80112c0:	2b00      	cmp	r3, #0
 80112c2:	dd5c      	ble.n	801137e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80112c4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80112c8:	2b00      	cmp	r3, #0
 80112ca:	dd58      	ble.n	801137e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80112cc:	462a      	mov	r2, r5
 80112ce:	ab0a      	add	r3, sp, #40	; 0x28
 80112d0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80112d4:	6851      	ldr	r1, [r2, #4]
 80112d6:	c303      	stmia	r3!, {r0, r1}
 80112d8:	4631      	mov	r1, r6
 80112da:	a80a      	add	r0, sp, #40	; 0x28
 80112dc:	f7ff fc06 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 80112e0:	4b38      	ldr	r3, [pc, #224]	; (80113c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80112e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80112e6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80112ea:	2100      	movs	r1, #0
 80112ec:	aa0a      	add	r2, sp, #40	; 0x28
 80112ee:	4b36      	ldr	r3, [pc, #216]	; (80113c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80112f0:	910c      	str	r1, [sp, #48]	; 0x30
 80112f2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80112f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80112fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80112fe:	ab08      	add	r3, sp, #32
 8011300:	e883 0003 	stmia.w	r3, {r0, r1}
 8011304:	4618      	mov	r0, r3
 8011306:	a90c      	add	r1, sp, #48	; 0x30
 8011308:	f7ff fbf0 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 801130c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801130e:	2b00      	cmp	r3, #0
 8011310:	d13c      	bne.n	801138c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011312:	2000      	movs	r0, #0
 8011314:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011318:	2600      	movs	r6, #0
 801131a:	682a      	ldr	r2, [r5, #0]
 801131c:	696b      	ldr	r3, [r5, #20]
 801131e:	616e      	str	r6, [r5, #20]
 8011320:	9305      	str	r3, [sp, #20]
 8011322:	6892      	ldr	r2, [r2, #8]
 8011324:	a908      	add	r1, sp, #32
 8011326:	4628      	mov	r0, r5
 8011328:	4790      	blx	r2
 801132a:	9b05      	ldr	r3, [sp, #20]
 801132c:	616b      	str	r3, [r5, #20]
 801132e:	4652      	mov	r2, sl
 8011330:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011334:	4649      	mov	r1, r9
 8011336:	4628      	mov	r0, r5
 8011338:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801133c:	f7f1 feff 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8011340:	4b23      	ldr	r3, [pc, #140]	; (80113d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011342:	9a01      	ldr	r2, [sp, #4]
 8011344:	801a      	strh	r2, [r3, #0]
 8011346:	4b23      	ldr	r3, [pc, #140]	; (80113d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011348:	9a02      	ldr	r2, [sp, #8]
 801134a:	801a      	strh	r2, [r3, #0]
 801134c:	4b1d      	ldr	r3, [pc, #116]	; (80113c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801134e:	9a03      	ldr	r2, [sp, #12]
 8011350:	801a      	strh	r2, [r3, #0]
 8011352:	4b1d      	ldr	r3, [pc, #116]	; (80113c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011354:	9a04      	ldr	r2, [sp, #16]
 8011356:	801a      	strh	r2, [r3, #0]
 8011358:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801135c:	6823      	ldr	r3, [r4, #0]
 801135e:	4620      	mov	r0, r4
 8011360:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011362:	4798      	blx	r3
 8011364:	6823      	ldr	r3, [r4, #0]
 8011366:	4620      	mov	r0, r4
 8011368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801136a:	4798      	blx	r3
 801136c:	b00f      	add	sp, #60	; 0x3c
 801136e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011372:	883b      	ldrh	r3, [r7, #0]
 8011374:	f8ab 0000 	strh.w	r0, [fp]
 8011378:	f8aa 3000 	strh.w	r3, [sl]
 801137c:	e789      	b.n	8011292 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801137e:	462a      	mov	r2, r5
 8011380:	ab0a      	add	r3, sp, #40	; 0x28
 8011382:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011386:	6851      	ldr	r1, [r2, #4]
 8011388:	c303      	stmia	r3!, {r0, r1}
 801138a:	e7a9      	b.n	80112e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801138c:	a807      	add	r0, sp, #28
 801138e:	f008 fa41 	bl	8019814 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011392:	4606      	mov	r6, r0
 8011394:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011396:	6803      	ldr	r3, [r0, #0]
 8011398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801139a:	4798      	blx	r3
 801139c:	4286      	cmp	r6, r0
 801139e:	d1b8      	bne.n	8011312 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80113a0:	f7f3 fa58 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 80113a4:	6803      	ldr	r3, [r0, #0]
 80113a6:	4606      	mov	r6, r0
 80113a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80113aa:	9305      	str	r3, [sp, #20]
 80113ac:	a807      	add	r0, sp, #28
 80113ae:	f008 fa31 	bl	8019814 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80113b2:	9b05      	ldr	r3, [sp, #20]
 80113b4:	4601      	mov	r1, r0
 80113b6:	4630      	mov	r0, r6
 80113b8:	4798      	blx	r3
 80113ba:	f080 0001 	eor.w	r0, r0, #1
 80113be:	b2c0      	uxtb	r0, r0
 80113c0:	e7a8      	b.n	8011314 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80113c2:	bf00      	nop
 80113c4:	20012da8 	.word	0x20012da8
 80113c8:	20012daa 	.word	0x20012daa
 80113cc:	20012dac 	.word	0x20012dac
 80113d0:	20012dae 	.word	0x20012dae
 80113d4:	20012db0 	.word	0x20012db0

080113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80113d8:	b510      	push	{r4, lr}
 80113da:	4b07      	ldr	r3, [pc, #28]	; (80113f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80113dc:	781b      	ldrb	r3, [r3, #0]
 80113de:	4604      	mov	r4, r0
 80113e0:	b13b      	cbz	r3, 80113f2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80113e2:	6803      	ldr	r3, [r0, #0]
 80113e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80113e6:	4798      	blx	r3
 80113e8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80113ea:	4283      	cmp	r3, r0
 80113ec:	d101      	bne.n	80113f2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80113ee:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80113f0:	bd10      	pop	{r4, pc}
 80113f2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80113f4:	e7fc      	b.n	80113f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80113f6:	bf00      	nop
 80113f8:	20012db2 	.word	0x20012db2

080113fc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80113fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011400:	b08a      	sub	sp, #40	; 0x28
 8011402:	461d      	mov	r5, r3
 8011404:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011408:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801140c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011410:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011414:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011418:	f8ad 301a 	strh.w	r3, [sp, #26]
 801141c:	2400      	movs	r4, #0
 801141e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011422:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011426:	f8ad 301c 	strh.w	r3, [sp, #28]
 801142a:	4690      	mov	r8, r2
 801142c:	4607      	mov	r7, r0
 801142e:	9404      	str	r4, [sp, #16]
 8011430:	f88d 4020 	strb.w	r4, [sp, #32]
 8011434:	f7ff ffd0 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011438:	fb06 8505 	mla	r5, r6, r5, r8
 801143c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011440:	6878      	ldr	r0, [r7, #4]
 8011442:	9505      	str	r5, [sp, #20]
 8011444:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011448:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801144c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011450:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011454:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011458:	6803      	ldr	r3, [r0, #0]
 801145a:	a901      	add	r1, sp, #4
 801145c:	685b      	ldr	r3, [r3, #4]
 801145e:	4798      	blx	r3
 8011460:	b00a      	add	sp, #40	; 0x28
 8011462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011466 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011466:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801146a:	b08b      	sub	sp, #44	; 0x2c
 801146c:	2400      	movs	r4, #0
 801146e:	461d      	mov	r5, r3
 8011470:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011474:	4688      	mov	r8, r1
 8011476:	4691      	mov	r9, r2
 8011478:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801147c:	9404      	str	r4, [sp, #16]
 801147e:	4607      	mov	r7, r0
 8011480:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011484:	f7ff ffa8 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011488:	fb06 9505 	mla	r5, r6, r5, r9
 801148c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011490:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011494:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011498:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801149c:	6878      	ldr	r0, [r7, #4]
 801149e:	9505      	str	r5, [sp, #20]
 80114a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114a4:	f8ad 401c 	strh.w	r4, [sp, #28]
 80114a8:	f8ad 601e 	strh.w	r6, [sp, #30]
 80114ac:	f8cd 8010 	str.w	r8, [sp, #16]
 80114b0:	f8ad 4020 	strh.w	r4, [sp, #32]
 80114b4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80114b8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80114bc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80114c0:	6803      	ldr	r3, [r0, #0]
 80114c2:	a901      	add	r1, sp, #4
 80114c4:	685b      	ldr	r3, [r3, #4]
 80114c6:	4798      	blx	r3
 80114c8:	b00b      	add	sp, #44	; 0x2c
 80114ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080114d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80114d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114d4:	b08a      	sub	sp, #40	; 0x28
 80114d6:	4698      	mov	r8, r3
 80114d8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80114dc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80114e0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80114e4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80114e8:	2300      	movs	r3, #0
 80114ea:	2d0b      	cmp	r5, #11
 80114ec:	4606      	mov	r6, r0
 80114ee:	9304      	str	r3, [sp, #16]
 80114f0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80114f4:	d138      	bne.n	8011568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80114f6:	2380      	movs	r3, #128	; 0x80
 80114f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80114fc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011500:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011504:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011508:	f8ad 301a 	strh.w	r3, [sp, #26]
 801150c:	f88d 0020 	strb.w	r0, [sp, #32]
 8011510:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011514:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011518:	4630      	mov	r0, r6
 801151a:	9203      	str	r2, [sp, #12]
 801151c:	f7ff ff5c 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011520:	2c0b      	cmp	r4, #11
 8011522:	bf98      	it	ls
 8011524:	4b1b      	ldrls	r3, [pc, #108]	; (8011594 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011526:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801152a:	bf98      	it	ls
 801152c:	5d19      	ldrbls	r1, [r3, r4]
 801152e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011532:	bf88      	it	hi
 8011534:	2100      	movhi	r1, #0
 8011536:	fb02 8307 	mla	r3, r2, r7, r8
 801153a:	10c9      	asrs	r1, r1, #3
 801153c:	fb01 0003 	mla	r0, r1, r3, r0
 8011540:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011544:	9005      	str	r0, [sp, #20]
 8011546:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801154a:	6870      	ldr	r0, [r6, #4]
 801154c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011550:	2300      	movs	r3, #0
 8011552:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011556:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801155a:	6803      	ldr	r3, [r0, #0]
 801155c:	a901      	add	r1, sp, #4
 801155e:	685b      	ldr	r3, [r3, #4]
 8011560:	4798      	blx	r3
 8011562:	b00a      	add	sp, #40	; 0x28
 8011564:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011568:	2d02      	cmp	r5, #2
 801156a:	d109      	bne.n	8011580 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 801156c:	28ff      	cmp	r0, #255	; 0xff
 801156e:	d105      	bne.n	801157c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011570:	f1bc 0f00 	cmp.w	ip, #0
 8011574:	bf14      	ite	ne
 8011576:	2340      	movne	r3, #64	; 0x40
 8011578:	2320      	moveq	r3, #32
 801157a:	e7bd      	b.n	80114f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801157c:	2340      	movs	r3, #64	; 0x40
 801157e:	e7bb      	b.n	80114f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011580:	28ff      	cmp	r0, #255	; 0xff
 8011582:	d105      	bne.n	8011590 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011584:	f1bc 0f00 	cmp.w	ip, #0
 8011588:	bf14      	ite	ne
 801158a:	2304      	movne	r3, #4
 801158c:	2301      	moveq	r3, #1
 801158e:	e7b3      	b.n	80114f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011590:	2304      	movs	r3, #4
 8011592:	e7b1      	b.n	80114f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011594:	0802ee1c 	.word	0x0802ee1c

08011598 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801159c:	b08b      	sub	sp, #44	; 0x2c
 801159e:	461d      	mov	r5, r3
 80115a0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80115a4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80115a8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80115ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80115b0:	bf14      	ite	ne
 80115b2:	2308      	movne	r3, #8
 80115b4:	2302      	moveq	r3, #2
 80115b6:	2400      	movs	r4, #0
 80115b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80115bc:	4688      	mov	r8, r1
 80115be:	4693      	mov	fp, r2
 80115c0:	9404      	str	r4, [sp, #16]
 80115c2:	4607      	mov	r7, r0
 80115c4:	f7ff ff08 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80115c8:	2e0b      	cmp	r6, #11
 80115ca:	bf98      	it	ls
 80115cc:	4b15      	ldrls	r3, [pc, #84]	; (8011624 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80115ce:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80115d2:	bf98      	it	ls
 80115d4:	5d9c      	ldrbls	r4, [r3, r6]
 80115d6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80115da:	f8ad 3018 	strh.w	r3, [sp, #24]
 80115de:	fb05 b50a 	mla	r5, r5, sl, fp
 80115e2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80115e6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80115ea:	10e4      	asrs	r4, r4, #3
 80115ec:	fb04 0405 	mla	r4, r4, r5, r0
 80115f0:	2300      	movs	r3, #0
 80115f2:	6878      	ldr	r0, [r7, #4]
 80115f4:	9405      	str	r4, [sp, #20]
 80115f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115fa:	f8ad a01e 	strh.w	sl, [sp, #30]
 80115fe:	f8cd 8010 	str.w	r8, [sp, #16]
 8011602:	f88d 9020 	strb.w	r9, [sp, #32]
 8011606:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801160a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801160e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8011612:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8011616:	6803      	ldr	r3, [r0, #0]
 8011618:	a901      	add	r1, sp, #4
 801161a:	685b      	ldr	r3, [r3, #4]
 801161c:	4798      	blx	r3
 801161e:	b00b      	add	sp, #44	; 0x2c
 8011620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011624:	0802ee1c 	.word	0x0802ee1c

08011628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801162c:	461e      	mov	r6, r3
 801162e:	4b0a      	ldr	r3, [pc, #40]	; (8011658 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011630:	460f      	mov	r7, r1
 8011632:	881d      	ldrh	r5, [r3, #0]
 8011634:	4690      	mov	r8, r2
 8011636:	f7f3 f90d 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 801163a:	6803      	ldr	r3, [r0, #0]
 801163c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801163e:	4798      	blx	r3
 8011640:	280b      	cmp	r0, #11
 8011642:	bf9a      	itte	ls
 8011644:	4b05      	ldrls	r3, [pc, #20]	; (801165c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011646:	5c1c      	ldrbls	r4, [r3, r0]
 8011648:	2400      	movhi	r4, #0
 801164a:	fb08 7005 	mla	r0, r8, r5, r7
 801164e:	10e4      	asrs	r4, r4, #3
 8011650:	fb04 6000 	mla	r0, r4, r0, r6
 8011654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011658:	20012dae 	.word	0x20012dae
 801165c:	0802ee1c 	.word	0x0802ee1c

08011660 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011660:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011662:	b08b      	sub	sp, #44	; 0x2c
 8011664:	461f      	mov	r7, r3
 8011666:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801166a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801166e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011672:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011676:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801167a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801167e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011682:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011686:	2500      	movs	r5, #0
 8011688:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801168c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011690:	4604      	mov	r4, r0
 8011692:	4616      	mov	r6, r2
 8011694:	9504      	str	r5, [sp, #16]
 8011696:	f7ff fe9f 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801169a:	463a      	mov	r2, r7
 801169c:	4631      	mov	r1, r6
 801169e:	4603      	mov	r3, r0
 80116a0:	4620      	mov	r0, r4
 80116a2:	f7ff ffc1 	bl	8011628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80116a6:	4b0e      	ldr	r3, [pc, #56]	; (80116e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80116a8:	9005      	str	r0, [sp, #20]
 80116aa:	881b      	ldrh	r3, [r3, #0]
 80116ac:	f8ad 301e 	strh.w	r3, [sp, #30]
 80116b0:	f7f3 f8d0 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 80116b4:	6803      	ldr	r3, [r0, #0]
 80116b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116b8:	4798      	blx	r3
 80116ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80116bc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80116c0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80116c4:	9304      	str	r3, [sp, #16]
 80116c6:	6860      	ldr	r0, [r4, #4]
 80116c8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80116cc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80116d0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80116d4:	6803      	ldr	r3, [r0, #0]
 80116d6:	a901      	add	r1, sp, #4
 80116d8:	685b      	ldr	r3, [r3, #4]
 80116da:	4798      	blx	r3
 80116dc:	b00b      	add	sp, #44	; 0x2c
 80116de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80116e0:	20012dae 	.word	0x20012dae

080116e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80116e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80116e6:	b08d      	sub	sp, #52	; 0x34
 80116e8:	466b      	mov	r3, sp
 80116ea:	e883 0006 	stmia.w	r3, {r1, r2}
 80116ee:	2300      	movs	r3, #0
 80116f0:	9306      	str	r3, [sp, #24]
 80116f2:	6803      	ldr	r3, [r0, #0]
 80116f4:	f8bd 6000 	ldrh.w	r6, [sp]
 80116f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116fa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80116fe:	2501      	movs	r5, #1
 8011700:	9503      	str	r5, [sp, #12]
 8011702:	4604      	mov	r4, r0
 8011704:	4798      	blx	r3
 8011706:	463a      	mov	r2, r7
 8011708:	4631      	mov	r1, r6
 801170a:	4603      	mov	r3, r0
 801170c:	4620      	mov	r0, r4
 801170e:	f7ff ff8b 	bl	8011628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011712:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011714:	9307      	str	r3, [sp, #28]
 8011716:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801171a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801171e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011722:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011726:	4b0f      	ldr	r3, [pc, #60]	; (8011764 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011728:	9004      	str	r0, [sp, #16]
 801172a:	881b      	ldrh	r3, [r3, #0]
 801172c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011730:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011734:	f7f3 f88e 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 8011738:	6803      	ldr	r3, [r0, #0]
 801173a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801173c:	4798      	blx	r3
 801173e:	23ff      	movs	r3, #255	; 0xff
 8011740:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011744:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011748:	6860      	ldr	r0, [r4, #4]
 801174a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801174e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011752:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011756:	6803      	ldr	r3, [r0, #0]
 8011758:	a903      	add	r1, sp, #12
 801175a:	685b      	ldr	r3, [r3, #4]
 801175c:	4798      	blx	r3
 801175e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011760:	b00d      	add	sp, #52	; 0x34
 8011762:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011764:	20012dae 	.word	0x20012dae

08011768 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801176c:	b08c      	sub	sp, #48	; 0x30
 801176e:	461e      	mov	r6, r3
 8011770:	466d      	mov	r5, sp
 8011772:	2300      	movs	r3, #0
 8011774:	e885 0006 	stmia.w	r5, {r1, r2}
 8011778:	9306      	str	r3, [sp, #24]
 801177a:	6803      	ldr	r3, [r0, #0]
 801177c:	f8bd 7000 	ldrh.w	r7, [sp]
 8011780:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011782:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011786:	2501      	movs	r5, #1
 8011788:	9503      	str	r5, [sp, #12]
 801178a:	4604      	mov	r4, r0
 801178c:	4798      	blx	r3
 801178e:	4642      	mov	r2, r8
 8011790:	4639      	mov	r1, r7
 8011792:	4603      	mov	r3, r0
 8011794:	4620      	mov	r0, r4
 8011796:	f7ff ff47 	bl	8011628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801179a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801179e:	f8ad 3020 	strh.w	r3, [sp, #32]
 80117a2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80117a6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80117aa:	4b11      	ldr	r3, [pc, #68]	; (80117f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80117ac:	9004      	str	r0, [sp, #16]
 80117ae:	881b      	ldrh	r3, [r3, #0]
 80117b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80117b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80117b6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80117ba:	9607      	str	r6, [sp, #28]
 80117bc:	f7f3 f84a 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 80117c0:	6803      	ldr	r3, [r0, #0]
 80117c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117c4:	4798      	blx	r3
 80117c6:	23ff      	movs	r3, #255	; 0xff
 80117c8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80117cc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80117d0:	6860      	ldr	r0, [r4, #4]
 80117d2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80117d6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80117da:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80117de:	6803      	ldr	r3, [r0, #0]
 80117e0:	a903      	add	r1, sp, #12
 80117e2:	685b      	ldr	r3, [r3, #4]
 80117e4:	4798      	blx	r3
 80117e6:	4630      	mov	r0, r6
 80117e8:	b00c      	add	sp, #48	; 0x30
 80117ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80117ee:	bf00      	nop
 80117f0:	20012dae 	.word	0x20012dae

080117f4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80117f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80117f6:	b085      	sub	sp, #20
 80117f8:	ac02      	add	r4, sp, #8
 80117fa:	e884 0006 	stmia.w	r4, {r1, r2}
 80117fe:	4605      	mov	r5, r0
 8011800:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011804:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011808:	f7ff fde6 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801180c:	463a      	mov	r2, r7
 801180e:	4603      	mov	r3, r0
 8011810:	4631      	mov	r1, r6
 8011812:	4628      	mov	r0, r5
 8011814:	f7ff ff08 	bl	8011628 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011818:	4a05      	ldr	r2, [pc, #20]	; (8011830 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801181a:	682b      	ldr	r3, [r5, #0]
 801181c:	8812      	ldrh	r2, [r2, #0]
 801181e:	9200      	str	r2, [sp, #0]
 8011820:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011822:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011826:	4603      	mov	r3, r0
 8011828:	4628      	mov	r0, r5
 801182a:	47b0      	blx	r6
 801182c:	b005      	add	sp, #20
 801182e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011830:	20012dae 	.word	0x20012dae

08011834 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011834:	b570      	push	{r4, r5, r6, lr}
 8011836:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801183a:	4604      	mov	r4, r0
 801183c:	b19b      	cbz	r3, 8011866 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801183e:	2002      	movs	r0, #2
 8011840:	f7ef fc42 	bl	80010c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011844:	2300      	movs	r3, #0
 8011846:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801184a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 801184e:	6823      	ldr	r3, [r4, #0]
 8011850:	4620      	mov	r0, r4
 8011852:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011856:	f7ff fdbf 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801185a:	462b      	mov	r3, r5
 801185c:	4601      	mov	r1, r0
 801185e:	4620      	mov	r0, r4
 8011860:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011864:	4718      	bx	r3
 8011866:	bd70      	pop	{r4, r5, r6, pc}

08011868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011868:	b538      	push	{r3, r4, r5, lr}
 801186a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801186e:	428b      	cmp	r3, r1
 8011870:	4604      	mov	r4, r0
 8011872:	460d      	mov	r5, r1
 8011874:	d006      	beq.n	8011884 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011876:	6803      	ldr	r3, [r0, #0]
 8011878:	b929      	cbnz	r1, 8011886 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801187a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801187e:	4798      	blx	r3
 8011880:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011884:	bd38      	pop	{r3, r4, r5, pc}
 8011886:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801188a:	e7f8      	b.n	801187e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801188c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801188c:	b510      	push	{r4, lr}
 801188e:	4b0d      	ldr	r3, [pc, #52]	; (80118c4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011890:	781b      	ldrb	r3, [r3, #0]
 8011892:	4604      	mov	r4, r0
 8011894:	b95b      	cbnz	r3, 80118ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011896:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801189a:	2b02      	cmp	r3, #2
 801189c:	d007      	beq.n	80118ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801189e:	6840      	ldr	r0, [r0, #4]
 80118a0:	f000 f92c 	bl	8011afc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80118a4:	b118      	cbz	r0, 80118ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80118a6:	6862      	ldr	r2, [r4, #4]
 80118a8:	7a53      	ldrb	r3, [r2, #9]
 80118aa:	2b00      	cmp	r3, #0
 80118ac:	d0fc      	beq.n	80118a8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80118ae:	f7ef fd43 	bl	8001338 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80118b2:	4620      	mov	r0, r4
 80118b4:	2100      	movs	r1, #0
 80118b6:	f7ff ffd7 	bl	8011868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80118ba:	4620      	mov	r0, r4
 80118bc:	f7ff fd8c 	bl	80113d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80118c0:	bd10      	pop	{r4, pc}
 80118c2:	bf00      	nop
 80118c4:	20012db2 	.word	0x20012db2

080118c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80118c8:	b570      	push	{r4, r5, r6, lr}
 80118ca:	4604      	mov	r4, r0
 80118cc:	6803      	ldr	r3, [r0, #0]
 80118ce:	b919      	cbnz	r1, 80118d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80118d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80118d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118d6:	4718      	bx	r3
 80118d8:	2200      	movs	r2, #0
 80118da:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80118de:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80118e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80118e4:	4798      	blx	r3
 80118e6:	6863      	ldr	r3, [r4, #4]
 80118e8:	2101      	movs	r1, #1
 80118ea:	4605      	mov	r5, r0
 80118ec:	7299      	strb	r1, [r3, #10]
 80118ee:	4620      	mov	r0, r4
 80118f0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80118f4:	f7ff ffb8 	bl	8011868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80118f8:	4628      	mov	r0, r5
 80118fa:	bd70      	pop	{r4, r5, r6, pc}

080118fc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80118fc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011900:	1a13      	subs	r3, r2, r0
 8011902:	4258      	negs	r0, r3
 8011904:	4158      	adcs	r0, r3
 8011906:	4770      	bx	lr

08011908 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011908:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801190c:	1a9b      	subs	r3, r3, r2
 801190e:	2b00      	cmp	r3, #0
 8011910:	bfdc      	itt	le
 8011912:	6882      	ldrle	r2, [r0, #8]
 8011914:	189b      	addle	r3, r3, r2
 8011916:	2b01      	cmp	r3, #1
 8011918:	bfcc      	ite	gt
 801191a:	2000      	movgt	r0, #0
 801191c:	2001      	movle	r0, #1
 801191e:	4770      	bx	lr

08011920 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011920:	6902      	ldr	r2, [r0, #16]
 8011922:	6843      	ldr	r3, [r0, #4]
 8011924:	2024      	movs	r0, #36	; 0x24
 8011926:	fb00 3002 	mla	r0, r0, r2, r3
 801192a:	4770      	bx	lr

0801192c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801192c:	6803      	ldr	r3, [r0, #0]
 801192e:	691b      	ldr	r3, [r3, #16]
 8011930:	4718      	bx	r3

08011932 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011932:	b570      	push	{r4, r5, r6, lr}
 8011934:	2301      	movs	r3, #1
 8011936:	7203      	strb	r3, [r0, #8]
 8011938:	4604      	mov	r4, r0
 801193a:	6840      	ldr	r0, [r0, #4]
 801193c:	6803      	ldr	r3, [r0, #0]
 801193e:	699b      	ldr	r3, [r3, #24]
 8011940:	4798      	blx	r3
 8011942:	6803      	ldr	r3, [r0, #0]
 8011944:	2b40      	cmp	r3, #64	; 0x40
 8011946:	4605      	mov	r5, r0
 8011948:	d00c      	beq.n	8011964 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801194a:	d810      	bhi.n	801196e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801194c:	2b04      	cmp	r3, #4
 801194e:	d01d      	beq.n	801198c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011950:	d804      	bhi.n	801195c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011952:	2b01      	cmp	r3, #1
 8011954:	d006      	beq.n	8011964 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011956:	2b02      	cmp	r3, #2
 8011958:	d02c      	beq.n	80119b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801195a:	bd70      	pop	{r4, r5, r6, pc}
 801195c:	2b08      	cmp	r3, #8
 801195e:	d01d      	beq.n	801199c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011960:	2b20      	cmp	r3, #32
 8011962:	d1fa      	bne.n	801195a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011964:	6823      	ldr	r3, [r4, #0]
 8011966:	4620      	mov	r0, r4
 8011968:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801196a:	4798      	blx	r3
 801196c:	e013      	b.n	8011996 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801196e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011972:	d0f7      	beq.n	8011964 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011974:	d804      	bhi.n	8011980 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011976:	2b80      	cmp	r3, #128	; 0x80
 8011978:	d0f4      	beq.n	8011964 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801197a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801197e:	e7f0      	b.n	8011962 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011980:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011984:	d0ee      	beq.n	8011964 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011986:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801198a:	e7e5      	b.n	8011958 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801198c:	6823      	ldr	r3, [r4, #0]
 801198e:	7f01      	ldrb	r1, [r0, #28]
 8011990:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011992:	4620      	mov	r0, r4
 8011994:	4798      	blx	r3
 8011996:	6823      	ldr	r3, [r4, #0]
 8011998:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801199a:	e006      	b.n	80119aa <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801199c:	6823      	ldr	r3, [r4, #0]
 801199e:	7f01      	ldrb	r1, [r0, #28]
 80119a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80119a2:	4620      	mov	r0, r4
 80119a4:	4798      	blx	r3
 80119a6:	6823      	ldr	r3, [r4, #0]
 80119a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80119aa:	4629      	mov	r1, r5
 80119ac:	4620      	mov	r0, r4
 80119ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119b2:	4718      	bx	r3
 80119b4:	6823      	ldr	r3, [r4, #0]
 80119b6:	4620      	mov	r0, r4
 80119b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80119ba:	4798      	blx	r3
 80119bc:	e7f3      	b.n	80119a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080119be <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80119be:	4770      	bx	lr

080119c0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80119c0:	4770      	bx	lr

080119c2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80119c2:	4770      	bx	lr

080119c4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80119c4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80119c8:	1ad2      	subs	r2, r2, r3
 80119ca:	2a00      	cmp	r2, #0
 80119cc:	b510      	push	{r4, lr}
 80119ce:	bfdc      	itt	le
 80119d0:	6884      	ldrle	r4, [r0, #8]
 80119d2:	1912      	addle	r2, r2, r4
 80119d4:	2a01      	cmp	r2, #1
 80119d6:	dd16      	ble.n	8011a06 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80119d8:	6842      	ldr	r2, [r0, #4]
 80119da:	2424      	movs	r4, #36	; 0x24
 80119dc:	fb04 2303 	mla	r3, r4, r3, r2
 80119e0:	f101 0220 	add.w	r2, r1, #32
 80119e4:	f851 4b04 	ldr.w	r4, [r1], #4
 80119e8:	f843 4b04 	str.w	r4, [r3], #4
 80119ec:	4291      	cmp	r1, r2
 80119ee:	d1f9      	bne.n	80119e4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80119f0:	780a      	ldrb	r2, [r1, #0]
 80119f2:	701a      	strb	r2, [r3, #0]
 80119f4:	68c3      	ldr	r3, [r0, #12]
 80119f6:	6882      	ldr	r2, [r0, #8]
 80119f8:	f3bf 8f5b 	dmb	ish
 80119fc:	3301      	adds	r3, #1
 80119fe:	429a      	cmp	r2, r3
 8011a00:	bfd8      	it	le
 8011a02:	1a9b      	suble	r3, r3, r2
 8011a04:	60c3      	str	r3, [r0, #12]
 8011a06:	bd10      	pop	{r4, pc}

08011a08 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011a08:	6903      	ldr	r3, [r0, #16]
 8011a0a:	6882      	ldr	r2, [r0, #8]
 8011a0c:	f3bf 8f5b 	dmb	ish
 8011a10:	3301      	adds	r3, #1
 8011a12:	429a      	cmp	r2, r3
 8011a14:	bfd8      	it	le
 8011a16:	1a9b      	suble	r3, r3, r2
 8011a18:	6103      	str	r3, [r0, #16]
 8011a1a:	4770      	bx	lr

08011a1c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011a1c:	b570      	push	{r4, r5, r6, lr}
 8011a1e:	4604      	mov	r4, r0
 8011a20:	460e      	mov	r6, r1
 8011a22:	6860      	ldr	r0, [r4, #4]
 8011a24:	6803      	ldr	r3, [r0, #0]
 8011a26:	685b      	ldr	r3, [r3, #4]
 8011a28:	4798      	blx	r3
 8011a2a:	2800      	cmp	r0, #0
 8011a2c:	d1f9      	bne.n	8011a22 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011a2e:	4d0d      	ldr	r5, [pc, #52]	; (8011a64 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011a30:	6828      	ldr	r0, [r5, #0]
 8011a32:	6803      	ldr	r3, [r0, #0]
 8011a34:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a36:	4798      	blx	r3
 8011a38:	f7ef fc8c 	bl	8001354 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011a3c:	6828      	ldr	r0, [r5, #0]
 8011a3e:	2101      	movs	r1, #1
 8011a40:	f7ff ff12 	bl	8011868 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011a44:	6860      	ldr	r0, [r4, #4]
 8011a46:	6803      	ldr	r3, [r0, #0]
 8011a48:	4631      	mov	r1, r6
 8011a4a:	689b      	ldr	r3, [r3, #8]
 8011a4c:	4798      	blx	r3
 8011a4e:	6823      	ldr	r3, [r4, #0]
 8011a50:	4620      	mov	r0, r4
 8011a52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a54:	4798      	blx	r3
 8011a56:	6828      	ldr	r0, [r5, #0]
 8011a58:	6803      	ldr	r3, [r0, #0]
 8011a5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a5e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011a60:	4718      	bx	r3
 8011a62:	bf00      	nop
 8011a64:	20012db4 	.word	0x20012db4

08011a68 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011a68:	b508      	push	{r3, lr}
 8011a6a:	f7ef fc65 	bl	8001338 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011a6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011a72:	f7ef bc69 	b.w	8001348 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011a76 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011a76:	b510      	push	{r4, lr}
 8011a78:	2114      	movs	r1, #20
 8011a7a:	4604      	mov	r4, r0
 8011a7c:	f018 f9bf 	bl	8029dfe <_ZdlPvj>
 8011a80:	4620      	mov	r0, r4
 8011a82:	bd10      	pop	{r4, pc}

08011a84 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011a84:	b510      	push	{r4, lr}
 8011a86:	4604      	mov	r4, r0
 8011a88:	6840      	ldr	r0, [r0, #4]
 8011a8a:	6803      	ldr	r3, [r0, #0]
 8011a8c:	681b      	ldr	r3, [r3, #0]
 8011a8e:	4798      	blx	r3
 8011a90:	b948      	cbnz	r0, 8011aa6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a92:	7a63      	ldrb	r3, [r4, #9]
 8011a94:	b13b      	cbz	r3, 8011aa6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a96:	7a23      	ldrb	r3, [r4, #8]
 8011a98:	b92b      	cbnz	r3, 8011aa6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a9a:	6823      	ldr	r3, [r4, #0]
 8011a9c:	4620      	mov	r0, r4
 8011a9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011aa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011aa4:	4718      	bx	r3
 8011aa6:	bd10      	pop	{r4, pc}

08011aa8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011aa8:	b570      	push	{r4, r5, r6, lr}
 8011aaa:	4604      	mov	r4, r0
 8011aac:	6840      	ldr	r0, [r0, #4]
 8011aae:	6803      	ldr	r3, [r0, #0]
 8011ab0:	681b      	ldr	r3, [r3, #0]
 8011ab2:	4798      	blx	r3
 8011ab4:	4605      	mov	r5, r0
 8011ab6:	b930      	cbnz	r0, 8011ac6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011ab8:	7a23      	ldrb	r3, [r4, #8]
 8011aba:	b123      	cbz	r3, 8011ac6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011abc:	6860      	ldr	r0, [r4, #4]
 8011abe:	6803      	ldr	r3, [r0, #0]
 8011ac0:	695b      	ldr	r3, [r3, #20]
 8011ac2:	4798      	blx	r3
 8011ac4:	7225      	strb	r5, [r4, #8]
 8011ac6:	6860      	ldr	r0, [r4, #4]
 8011ac8:	6803      	ldr	r3, [r0, #0]
 8011aca:	681b      	ldr	r3, [r3, #0]
 8011acc:	4798      	blx	r3
 8011ace:	b928      	cbnz	r0, 8011adc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011ad0:	6823      	ldr	r3, [r4, #0]
 8011ad2:	4620      	mov	r0, r4
 8011ad4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ada:	4718      	bx	r3
 8011adc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ae0:	f7ef bc40 	b.w	8001364 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011ae4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011ae4:	b510      	push	{r4, lr}
 8011ae6:	4c04      	ldr	r4, [pc, #16]	; (8011af8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011ae8:	6082      	str	r2, [r0, #8]
 8011aea:	2200      	movs	r2, #0
 8011aec:	e9c0 4100 	strd	r4, r1, [r0]
 8011af0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011af4:	bd10      	pop	{r4, pc}
 8011af6:	bf00      	nop
 8011af8:	0802ee30 	.word	0x0802ee30

08011afc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011afc:	6840      	ldr	r0, [r0, #4]
 8011afe:	6803      	ldr	r3, [r0, #0]
 8011b00:	681b      	ldr	r3, [r3, #0]
 8011b02:	4718      	bx	r3

08011b04 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011b04:	4b06      	ldr	r3, [pc, #24]	; (8011b20 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011b06:	60c1      	str	r1, [r0, #12]
 8011b08:	094a      	lsrs	r2, r1, #5
 8011b0a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011b0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011b12:	4313      	orrs	r3, r2
 8011b14:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011b18:	4319      	orrs	r1, r3
 8011b1a:	8201      	strh	r1, [r0, #16]
 8011b1c:	4770      	bx	lr
 8011b1e:	bf00      	nop
 8011b20:	fffff800 	.word	0xfffff800

08011b24 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011b24:	f1a0 0008 	sub.w	r0, r0, #8
 8011b28:	e7ec      	b.n	8011b04 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011b2a:	bf00      	nop

08011b2c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011b2c:	b508      	push	{r3, lr}
 8011b2e:	4b05      	ldr	r3, [pc, #20]	; (8011b44 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011b30:	6818      	ldr	r0, [r3, #0]
 8011b32:	6803      	ldr	r3, [r0, #0]
 8011b34:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011b38:	4798      	blx	r3
 8011b3a:	1e43      	subs	r3, r0, #1
 8011b3c:	4258      	negs	r0, r3
 8011b3e:	4158      	adcs	r0, r3
 8011b40:	bd08      	pop	{r3, pc}
 8011b42:	bf00      	nop
 8011b44:	20012db4 	.word	0x20012db4

08011b48 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011b48:	4770      	bx	lr

08011b4a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011b4a:	3808      	subs	r0, #8
 8011b4c:	4770      	bx	lr

08011b4e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011b4e:	b430      	push	{r4, r5}
 8011b50:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011b54:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011b58:	8a02      	ldrh	r2, [r0, #16]
 8011b5a:	9202      	str	r2, [sp, #8]
 8011b5c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011b60:	68c2      	ldr	r2, [r0, #12]
 8011b62:	4629      	mov	r1, r5
 8011b64:	4620      	mov	r0, r4
 8011b66:	bc30      	pop	{r4, r5}
 8011b68:	f7ef bebe 	b.w	80018e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011b6c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011b6c:	f7ef beba 	b.w	80018e4 <_ZN8touchgfx5paint8tearDownEv>

08011b70 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011b70:	b510      	push	{r4, lr}
 8011b72:	2114      	movs	r1, #20
 8011b74:	4604      	mov	r4, r0
 8011b76:	f018 f942 	bl	8029dfe <_ZdlPvj>
 8011b7a:	4620      	mov	r0, r4
 8011b7c:	bd10      	pop	{r4, pc}

08011b7e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011b7e:	f1a0 0008 	sub.w	r0, r0, #8
 8011b82:	e7f5      	b.n	8011b70 <_ZN8touchgfx13PainterRGB565D0Ev>

08011b84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011b84:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011b86:	6803      	ldr	r3, [r0, #0]
 8011b88:	460d      	mov	r5, r1
 8011b8a:	4604      	mov	r4, r0
 8011b8c:	4601      	mov	r1, r0
 8011b8e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011b90:	a802      	add	r0, sp, #8
 8011b92:	4798      	blx	r3
 8011b94:	6828      	ldr	r0, [r5, #0]
 8011b96:	6869      	ldr	r1, [r5, #4]
 8011b98:	466b      	mov	r3, sp
 8011b9a:	c303      	stmia	r3!, {r0, r1}
 8011b9c:	4668      	mov	r0, sp
 8011b9e:	4619      	mov	r1, r3
 8011ba0:	f7fe ffa4 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8011ba4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011ba6:	b188      	cbz	r0, 8011bcc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011ba8:	6803      	ldr	r3, [r0, #0]
 8011baa:	1d21      	adds	r1, r4, #4
 8011bac:	68db      	ldr	r3, [r3, #12]
 8011bae:	4798      	blx	r3
 8011bb0:	b160      	cbz	r0, 8011bcc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011bb2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011bb6:	2b00      	cmp	r3, #0
 8011bb8:	dd08      	ble.n	8011bcc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011bba:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011bbe:	2d00      	cmp	r5, #0
 8011bc0:	dd04      	ble.n	8011bcc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011bc2:	4a2b      	ldr	r2, [pc, #172]	; (8011c70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011bc4:	7812      	ldrb	r2, [r2, #0]
 8011bc6:	b11a      	cbz	r2, 8011bd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011bc8:	2a01      	cmp	r2, #1
 8011bca:	d029      	beq.n	8011c20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011bcc:	b004      	add	sp, #16
 8011bce:	bd70      	pop	{r4, r5, r6, pc}
 8011bd0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011bd4:	441d      	add	r5, r3
 8011bd6:	b2ad      	uxth	r5, r5
 8011bd8:	b22e      	sxth	r6, r5
 8011bda:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011bde:	42b3      	cmp	r3, r6
 8011be0:	daf4      	bge.n	8011bcc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011be2:	6823      	ldr	r3, [r4, #0]
 8011be4:	4669      	mov	r1, sp
 8011be6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011be8:	4620      	mov	r0, r4
 8011bea:	4798      	blx	r3
 8011bec:	b940      	cbnz	r0, 8011c00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011bee:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011bf2:	2b01      	cmp	r3, #1
 8011bf4:	d004      	beq.n	8011c00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011bf6:	3301      	adds	r3, #1
 8011bf8:	105b      	asrs	r3, r3, #1
 8011bfa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011bfe:	e7f0      	b.n	8011be2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011c00:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011c04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c08:	4413      	add	r3, r2
 8011c0a:	b29b      	uxth	r3, r3
 8011c0c:	441a      	add	r2, r3
 8011c0e:	b212      	sxth	r2, r2
 8011c10:	4296      	cmp	r6, r2
 8011c12:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011c16:	dae0      	bge.n	8011bda <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011c18:	1aeb      	subs	r3, r5, r3
 8011c1a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011c1e:	e7dc      	b.n	8011bda <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011c20:	f8bd 5000 	ldrh.w	r5, [sp]
 8011c24:	441d      	add	r5, r3
 8011c26:	b2ad      	uxth	r5, r5
 8011c28:	b22e      	sxth	r6, r5
 8011c2a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011c2e:	42b3      	cmp	r3, r6
 8011c30:	dacc      	bge.n	8011bcc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011c32:	6823      	ldr	r3, [r4, #0]
 8011c34:	4669      	mov	r1, sp
 8011c36:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011c38:	4620      	mov	r0, r4
 8011c3a:	4798      	blx	r3
 8011c3c:	b940      	cbnz	r0, 8011c50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011c3e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011c42:	2b01      	cmp	r3, #1
 8011c44:	d004      	beq.n	8011c50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011c46:	3301      	adds	r3, #1
 8011c48:	105b      	asrs	r3, r3, #1
 8011c4a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011c4e:	e7f0      	b.n	8011c32 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011c50:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011c54:	f8bd 3000 	ldrh.w	r3, [sp]
 8011c58:	4413      	add	r3, r2
 8011c5a:	b29b      	uxth	r3, r3
 8011c5c:	441a      	add	r2, r3
 8011c5e:	b212      	sxth	r2, r2
 8011c60:	4296      	cmp	r6, r2
 8011c62:	f8ad 3000 	strh.w	r3, [sp]
 8011c66:	dae0      	bge.n	8011c2a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011c68:	1aeb      	subs	r3, r5, r3
 8011c6a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011c6e:	e7dc      	b.n	8011c2a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011c70:	20012dac 	.word	0x20012dac

08011c74 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011c74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011c76:	6803      	ldr	r3, [r0, #0]
 8011c78:	4604      	mov	r4, r0
 8011c7a:	4601      	mov	r1, r0
 8011c7c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011c7e:	4668      	mov	r0, sp
 8011c80:	4798      	blx	r3
 8011c82:	2100      	movs	r1, #0
 8011c84:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011c88:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011c8c:	9102      	str	r1, [sp, #8]
 8011c8e:	4668      	mov	r0, sp
 8011c90:	a902      	add	r1, sp, #8
 8011c92:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011c96:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011c9a:	f7fe ff27 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8011c9e:	6823      	ldr	r3, [r4, #0]
 8011ca0:	4669      	mov	r1, sp
 8011ca2:	691b      	ldr	r3, [r3, #16]
 8011ca4:	4620      	mov	r0, r4
 8011ca6:	4798      	blx	r3
 8011ca8:	b004      	add	sp, #16
 8011caa:	bd10      	pop	{r4, pc}

08011cac <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011cac:	2101      	movs	r1, #1
 8011cae:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011cb2:	490b      	ldr	r1, [pc, #44]	; (8011ce0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011cb4:	6001      	str	r1, [r0, #0]
 8011cb6:	2200      	movs	r2, #0
 8011cb8:	21ff      	movs	r1, #255	; 0xff
 8011cba:	8082      	strh	r2, [r0, #4]
 8011cbc:	80c2      	strh	r2, [r0, #6]
 8011cbe:	8102      	strh	r2, [r0, #8]
 8011cc0:	8142      	strh	r2, [r0, #10]
 8011cc2:	8182      	strh	r2, [r0, #12]
 8011cc4:	81c2      	strh	r2, [r0, #14]
 8011cc6:	8202      	strh	r2, [r0, #16]
 8011cc8:	8242      	strh	r2, [r0, #18]
 8011cca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011cce:	61c2      	str	r2, [r0, #28]
 8011cd0:	8402      	strh	r2, [r0, #32]
 8011cd2:	8442      	strh	r2, [r0, #34]	; 0x22
 8011cd4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011cd8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011cdc:	6282      	str	r2, [r0, #40]	; 0x28
 8011cde:	4770      	bx	lr
 8011ce0:	0802ee8c 	.word	0x0802ee8c

08011ce4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011ce4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011ce8:	4602      	mov	r2, r0
 8011cea:	cb03      	ldmia	r3!, {r0, r1}
 8011cec:	6010      	str	r0, [r2, #0]
 8011cee:	6051      	str	r1, [r2, #4]
 8011cf0:	4610      	mov	r0, r2
 8011cf2:	4770      	bx	lr

08011cf4 <_ZN8touchgfx4LineD1Ev>:
 8011cf4:	4770      	bx	lr

08011cf6 <_ZN8touchgfx4LineD0Ev>:
 8011cf6:	b510      	push	{r4, lr}
 8011cf8:	2170      	movs	r1, #112	; 0x70
 8011cfa:	4604      	mov	r4, r0
 8011cfc:	f018 f87f 	bl	8029dfe <_ZdlPvj>
 8011d00:	4620      	mov	r0, r4
 8011d02:	bd10      	pop	{r4, pc}

08011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011d04:	b507      	push	{r0, r1, r2, lr}
 8011d06:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011d0a:	ab01      	add	r3, sp, #4
 8011d0c:	6809      	ldr	r1, [r1, #0]
 8011d0e:	6800      	ldr	r0, [r0, #0]
 8011d10:	f005 fab4 	bl	801727c <_ZN8touchgfx6muldivElllRl>
 8011d14:	b003      	add	sp, #12
 8011d16:	f85d fb04 	ldr.w	pc, [sp], #4

08011d1a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011d1a:	6800      	ldr	r0, [r0, #0]
 8011d1c:	2800      	cmp	r0, #0
 8011d1e:	bfb9      	ittee	lt
 8011d20:	2320      	movlt	r3, #32
 8011d22:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011d26:	301f      	addge	r0, #31
 8011d28:	1140      	asrge	r0, r0, #5
 8011d2a:	4770      	bx	lr

08011d2c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d30:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011d34:	b089      	sub	sp, #36	; 0x24
 8011d36:	4604      	mov	r4, r0
 8011d38:	b353      	cbz	r3, 8011d90 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011d3a:	6803      	ldr	r3, [r0, #0]
 8011d3c:	4601      	mov	r1, r0
 8011d3e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011d40:	a802      	add	r0, sp, #8
 8011d42:	4798      	blx	r3
 8011d44:	2220      	movs	r2, #32
 8011d46:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011d4a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011d4c:	fb9a f0f2 	sdiv	r0, sl, r2
 8011d50:	fb91 f5f2 	sdiv	r5, r1, r2
 8011d54:	1b40      	subs	r0, r0, r5
 8011d56:	2800      	cmp	r0, #0
 8011d58:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011d5a:	fb93 f6f2 	sdiv	r6, r3, r2
 8011d5e:	bfb8      	it	lt
 8011d60:	4240      	neglt	r0, r0
 8011d62:	0076      	lsls	r6, r6, #1
 8011d64:	4286      	cmp	r6, r0
 8011d66:	f8d4 b000 	ldr.w	fp, [r4]
 8011d6a:	dc0c      	bgt.n	8011d86 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011d6c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011d6e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011d72:	fb95 f0f2 	sdiv	r0, r5, r2
 8011d76:	fb98 f7f2 	sdiv	r7, r8, r2
 8011d7a:	1bc0      	subs	r0, r0, r7
 8011d7c:	2800      	cmp	r0, #0
 8011d7e:	bfb8      	it	lt
 8011d80:	4240      	neglt	r0, r0
 8011d82:	4286      	cmp	r6, r0
 8011d84:	dd07      	ble.n	8011d96 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011d86:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011d8a:	a902      	add	r1, sp, #8
 8011d8c:	4620      	mov	r0, r4
 8011d8e:	4798      	blx	r3
 8011d90:	b009      	add	sp, #36	; 0x24
 8011d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d96:	3301      	adds	r3, #1
 8011d98:	2002      	movs	r0, #2
 8011d9a:	f10d 0920 	add.w	r9, sp, #32
 8011d9e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011da2:	4103      	asrs	r3, r0
 8011da4:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011da8:	eb01 060a 	add.w	r6, r1, sl
 8011dac:	eb08 0705 	add.w	r7, r8, r5
 8011db0:	fb96 f6f0 	sdiv	r6, r6, r0
 8011db4:	fb97 f7f0 	sdiv	r7, r7, r0
 8011db8:	4648      	mov	r0, r9
 8011dba:	9101      	str	r1, [sp, #4]
 8011dbc:	b236      	sxth	r6, r6
 8011dbe:	b23f      	sxth	r7, r7
 8011dc0:	fb96 f6f2 	sdiv	r6, r6, r2
 8011dc4:	fb97 f7f2 	sdiv	r7, r7, r2
 8011dc8:	f7ff ffa7 	bl	8011d1a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011dcc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011dd0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011dd4:	9901      	ldr	r1, [sp, #4]
 8011dd6:	4293      	cmp	r3, r2
 8011dd8:	fa1f fe87 	uxth.w	lr, r7
 8011ddc:	fa1f fc86 	uxth.w	ip, r6
 8011de0:	eba1 0a0a 	sub.w	sl, r1, sl
 8011de4:	b280      	uxth	r0, r0
 8011de6:	da54      	bge.n	8011e92 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011de8:	ebac 0100 	sub.w	r1, ip, r0
 8011dec:	b289      	uxth	r1, r1
 8011dee:	4460      	add	r0, ip
 8011df0:	f1ba 0f00 	cmp.w	sl, #0
 8011df4:	b20e      	sxth	r6, r1
 8011df6:	b280      	uxth	r0, r0
 8011df8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011dfc:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011e00:	da29      	bge.n	8011e56 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011e02:	eba8 0505 	sub.w	r5, r8, r5
 8011e06:	2d00      	cmp	r5, #0
 8011e08:	da2a      	bge.n	8011e60 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011e0a:	fa1f f88a 	uxth.w	r8, sl
 8011e0e:	eba0 0008 	sub.w	r0, r0, r8
 8011e12:	fa1f f58c 	uxth.w	r5, ip
 8011e16:	4443      	add	r3, r8
 8011e18:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011e1c:	1a59      	subs	r1, r3, r1
 8011e1e:	ebae 0005 	sub.w	r0, lr, r5
 8011e22:	f8ad a010 	strh.w	sl, [sp, #16]
 8011e26:	f8ad c012 	strh.w	ip, [sp, #18]
 8011e2a:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011e2e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011e32:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011e36:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011e3a:	442a      	add	r2, r5
 8011e3c:	eba2 0e0e 	sub.w	lr, r2, lr
 8011e40:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011e44:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011e48:	a904      	add	r1, sp, #16
 8011e4a:	4620      	mov	r0, r4
 8011e4c:	4798      	blx	r3
 8011e4e:	6823      	ldr	r3, [r4, #0]
 8011e50:	4649      	mov	r1, r9
 8011e52:	691b      	ldr	r3, [r3, #16]
 8011e54:	e79a      	b.n	8011d8c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011e56:	d003      	beq.n	8011e60 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011e58:	eba8 0505 	sub.w	r5, r8, r5
 8011e5c:	2d00      	cmp	r5, #0
 8011e5e:	dcd4      	bgt.n	8011e0a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011e60:	fa1f f88a 	uxth.w	r8, sl
 8011e64:	4443      	add	r3, r8
 8011e66:	fa1f f58c 	uxth.w	r5, ip
 8011e6a:	1a59      	subs	r1, r3, r1
 8011e6c:	eba0 0008 	sub.w	r0, r0, r8
 8011e70:	ebae 0305 	sub.w	r3, lr, r5
 8011e74:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011e78:	f8ad c012 	strh.w	ip, [sp, #18]
 8011e7c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011e80:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011e84:	f8ad a018 	strh.w	sl, [sp, #24]
 8011e88:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011e8c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011e90:	e7d3      	b.n	8011e3a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011e92:	ebae 0100 	sub.w	r1, lr, r0
 8011e96:	b289      	uxth	r1, r1
 8011e98:	4470      	add	r0, lr
 8011e9a:	f1ba 0f00 	cmp.w	sl, #0
 8011e9e:	b20f      	sxth	r7, r1
 8011ea0:	b280      	uxth	r0, r0
 8011ea2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011ea6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011eaa:	da20      	bge.n	8011eee <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011eac:	eba8 0505 	sub.w	r5, r8, r5
 8011eb0:	2d00      	cmp	r5, #0
 8011eb2:	da21      	bge.n	8011ef8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011eb4:	fa1f f88e 	uxth.w	r8, lr
 8011eb8:	fa1f f58a 	uxth.w	r5, sl
 8011ebc:	4443      	add	r3, r8
 8011ebe:	442a      	add	r2, r5
 8011ec0:	f8ad e010 	strh.w	lr, [sp, #16]
 8011ec4:	1b40      	subs	r0, r0, r5
 8011ec6:	ebac 0e08 	sub.w	lr, ip, r8
 8011eca:	1a51      	subs	r1, r2, r1
 8011ecc:	eba3 0c0c 	sub.w	ip, r3, ip
 8011ed0:	f8ad a012 	strh.w	sl, [sp, #18]
 8011ed4:	f8ad e014 	strh.w	lr, [sp, #20]
 8011ed8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011edc:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011ee0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011ee4:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011ee8:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011eec:	e7aa      	b.n	8011e44 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011eee:	d003      	beq.n	8011ef8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011ef0:	eba8 0505 	sub.w	r5, r8, r5
 8011ef4:	2d00      	cmp	r5, #0
 8011ef6:	dcdd      	bgt.n	8011eb4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011ef8:	fa1f f58e 	uxth.w	r5, lr
 8011efc:	fa1f f88a 	uxth.w	r8, sl
 8011f00:	4442      	add	r2, r8
 8011f02:	442b      	add	r3, r5
 8011f04:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011f08:	1a51      	subs	r1, r2, r1
 8011f0a:	ebac 0705 	sub.w	r7, ip, r5
 8011f0e:	eba0 0008 	sub.w	r0, r0, r8
 8011f12:	eba3 0c0c 	sub.w	ip, r3, ip
 8011f16:	f8ad e010 	strh.w	lr, [sp, #16]
 8011f1a:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011f1e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011f22:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011f26:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011f2a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011f2e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011f32:	e787      	b.n	8011e44 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011f34 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011f34:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011f38:	fb90 f2f3 	sdiv	r2, r0, r3
 8011f3c:	fb02 0013 	mls	r0, r2, r3, r0
 8011f40:	2800      	cmp	r0, #0
 8011f42:	bfb8      	it	lt
 8011f44:	18c0      	addlt	r0, r0, r3
 8011f46:	285a      	cmp	r0, #90	; 0x5a
 8011f48:	4b09      	ldr	r3, [pc, #36]	; (8011f70 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011f4a:	dc02      	bgt.n	8011f52 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011f4c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011f50:	4770      	bx	lr
 8011f52:	28b4      	cmp	r0, #180	; 0xb4
 8011f54:	dc02      	bgt.n	8011f5c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011f56:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011f5a:	e7f7      	b.n	8011f4c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011f5c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011f60:	bfd4      	ite	le
 8011f62:	38b4      	suble	r0, #180	; 0xb4
 8011f64:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011f68:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011f6c:	4240      	negs	r0, r0
 8011f6e:	4770      	bx	lr
 8011f70:	0802ef58 	.word	0x0802ef58

08011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011f74:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011f78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011f7a:	fb90 f2f3 	sdiv	r2, r0, r3
 8011f7e:	fb02 0013 	mls	r0, r2, r3, r0
 8011f82:	2800      	cmp	r0, #0
 8011f84:	bfb8      	it	lt
 8011f86:	18c0      	addlt	r0, r0, r3
 8011f88:	1144      	asrs	r4, r0, #5
 8011f8a:	f000 061f 	and.w	r6, r0, #31
 8011f8e:	4620      	mov	r0, r4
 8011f90:	f7ff ffd0 	bl	8011f34 <_ZN8touchgfx7CWRUtil4sineEi>
 8011f94:	4605      	mov	r5, r0
 8011f96:	b90e      	cbnz	r6, 8011f9c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011f98:	b002      	add	sp, #8
 8011f9a:	bd70      	pop	{r4, r5, r6, pc}
 8011f9c:	1c60      	adds	r0, r4, #1
 8011f9e:	f7ff ffc9 	bl	8011f34 <_ZN8touchgfx7CWRUtil4sineEi>
 8011fa2:	ab01      	add	r3, sp, #4
 8011fa4:	2220      	movs	r2, #32
 8011fa6:	4631      	mov	r1, r6
 8011fa8:	1b40      	subs	r0, r0, r5
 8011faa:	f005 f967 	bl	801727c <_ZN8touchgfx6muldivElllRl>
 8011fae:	4428      	add	r0, r5
 8011fb0:	e7f2      	b.n	8011f98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011fb2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011fb2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011fb6:	bf2c      	ite	cs
 8011fb8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011fbc:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011fc0:	2300      	movs	r3, #0
 8011fc2:	1899      	adds	r1, r3, r2
 8011fc4:	4288      	cmp	r0, r1
 8011fc6:	bf24      	itt	cs
 8011fc8:	1853      	addcs	r3, r2, r1
 8011fca:	1a40      	subcs	r0, r0, r1
 8011fcc:	0892      	lsrs	r2, r2, #2
 8011fce:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011fd2:	d1f6      	bne.n	8011fc2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011fd4:	4618      	mov	r0, r3
 8011fd6:	4770      	bx	lr

08011fd8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011fd8:	b510      	push	{r4, lr}
 8011fda:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011fde:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011fe2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011fe6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011fea:	13a4      	asrs	r4, r4, #14
 8011fec:	139b      	asrs	r3, r3, #14
 8011fee:	429c      	cmp	r4, r3
 8011ff0:	bfb8      	it	lt
 8011ff2:	461c      	movlt	r4, r3
 8011ff4:	2c01      	cmp	r4, #1
 8011ff6:	dd07      	ble.n	8012008 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011ff8:	fb91 f1f4 	sdiv	r1, r1, r4
 8011ffc:	fb90 f0f4 	sdiv	r0, r0, r4
 8012000:	f7ff ffea 	bl	8011fd8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012004:	4360      	muls	r0, r4
 8012006:	bd10      	pop	{r4, pc}
 8012008:	4340      	muls	r0, r0
 801200a:	fb01 0001 	mla	r0, r1, r1, r0
 801200e:	f7ff ffd0 	bl	8011fb2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012012:	e7f8      	b.n	8012006 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08012014 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8012014:	2800      	cmp	r0, #0
 8012016:	b508      	push	{r3, lr}
 8012018:	da05      	bge.n	8012026 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801201a:	4240      	negs	r0, r0
 801201c:	f7ff fffa 	bl	8012014 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012020:	4240      	negs	r0, r0
 8012022:	b240      	sxtb	r0, r0
 8012024:	bd08      	pop	{r3, pc}
 8012026:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801202a:	dc11      	bgt.n	8012050 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801202c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012030:	dd09      	ble.n	8012046 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8012032:	4340      	muls	r0, r0
 8012034:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012038:	f7ff ffbb 	bl	8011fb2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801203c:	f7ff ffea 	bl	8012014 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012040:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012044:	e7ed      	b.n	8012022 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8012046:	3003      	adds	r0, #3
 8012048:	10c0      	asrs	r0, r0, #3
 801204a:	4b02      	ldr	r3, [pc, #8]	; (8012054 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801204c:	5618      	ldrsb	r0, [r3, r0]
 801204e:	e7e9      	b.n	8012024 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012050:	2000      	movs	r0, #0
 8012052:	e7e7      	b.n	8012024 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012054:	0802eefc 	.word	0x0802eefc

08012058 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012058:	4281      	cmp	r1, r0
 801205a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801205c:	460c      	mov	r4, r1
 801205e:	4615      	mov	r5, r2
 8012060:	dd07      	ble.n	8012072 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8012062:	4601      	mov	r1, r0
 8012064:	4620      	mov	r0, r4
 8012066:	f7ff fff7 	bl	8012058 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801206a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801206e:	b003      	add	sp, #12
 8012070:	bd30      	pop	{r4, r5, pc}
 8012072:	f7ff ffb1 	bl	8011fd8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012076:	6028      	str	r0, [r5, #0]
 8012078:	2800      	cmp	r0, #0
 801207a:	d0f8      	beq.n	801206e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 801207c:	4602      	mov	r2, r0
 801207e:	ab01      	add	r3, sp, #4
 8012080:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012084:	4620      	mov	r0, r4
 8012086:	f005 f8f9 	bl	801727c <_ZN8touchgfx6muldivElllRl>
 801208a:	f7ff ffc3 	bl	8012014 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801208e:	e7ee      	b.n	801206e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012090 <_ZN8touchgfx4LineC1Ev>:
 8012090:	b510      	push	{r4, lr}
 8012092:	4604      	mov	r4, r0
 8012094:	f7ff fe0a 	bl	8011cac <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012098:	4b0c      	ldr	r3, [pc, #48]	; (80120cc <_ZN8touchgfx4LineC1Ev+0x3c>)
 801209a:	6023      	str	r3, [r4, #0]
 801209c:	2220      	movs	r2, #32
 801209e:	2300      	movs	r3, #0
 80120a0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80120a2:	2212      	movs	r2, #18
 80120a4:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80120a8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80120ac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80120b0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80120b4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80120b8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80120bc:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80120c0:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80120c4:	66e2      	str	r2, [r4, #108]	; 0x6c
 80120c6:	60a3      	str	r3, [r4, #8]
 80120c8:	4620      	mov	r0, r4
 80120ca:	bd10      	pop	{r4, pc}
 80120cc:	0802f018 	.word	0x0802f018

080120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80120d0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80120d4:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80120d6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80120d8:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80120da:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80120dc:	1aff      	subs	r7, r7, r3
 80120de:	4604      	mov	r4, r0
 80120e0:	eba5 0502 	sub.w	r5, r5, r2
 80120e4:	d142      	bne.n	801216c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80120e6:	b955      	cbnz	r5, 80120fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80120e8:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80120ec:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80120f0:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80120f4:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 80120f8:	b002      	add	sp, #8
 80120fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80120fe:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012102:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012106:	4629      	mov	r1, r5
 8012108:	4642      	mov	r2, r8
 801210a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801210c:	f005 f8d5 	bl	80172ba <_ZN8touchgfx6muldivElll>
 8012110:	2502      	movs	r5, #2
 8012112:	4642      	mov	r2, r8
 8012114:	fb90 f6f5 	sdiv	r6, r0, r5
 8012118:	4639      	mov	r1, r7
 801211a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801211c:	f005 f8cd 	bl	80172ba <_ZN8touchgfx6muldivElll>
 8012120:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012124:	fb90 f5f5 	sdiv	r5, r0, r5
 8012128:	f1b9 0f00 	cmp.w	r9, #0
 801212c:	d067      	beq.n	80121fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801212e:	f1b9 0f02 	cmp.w	r9, #2
 8012132:	d878      	bhi.n	8012226 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012134:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012136:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012138:	1b93      	subs	r3, r2, r6
 801213a:	1b5b      	subs	r3, r3, r5
 801213c:	6463      	str	r3, [r4, #68]	; 0x44
 801213e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012140:	18e9      	adds	r1, r5, r3
 8012142:	1b89      	subs	r1, r1, r6
 8012144:	6561      	str	r1, [r4, #84]	; 0x54
 8012146:	1b81      	subs	r1, r0, r6
 8012148:	4429      	add	r1, r5
 801214a:	64a1      	str	r1, [r4, #72]	; 0x48
 801214c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801214e:	4430      	add	r0, r6
 8012150:	186f      	adds	r7, r5, r1
 8012152:	4432      	add	r2, r6
 8012154:	1b49      	subs	r1, r1, r5
 8012156:	4437      	add	r7, r6
 8012158:	4428      	add	r0, r5
 801215a:	4431      	add	r1, r6
 801215c:	1b52      	subs	r2, r2, r5
 801215e:	1b5b      	subs	r3, r3, r5
 8012160:	65a7      	str	r7, [r4, #88]	; 0x58
 8012162:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012164:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012166:	6522      	str	r2, [r4, #80]	; 0x50
 8012168:	1b9b      	subs	r3, r3, r6
 801216a:	e05b      	b.n	8012224 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 801216c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012170:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012174:	2d00      	cmp	r5, #0
 8012176:	d0c6      	beq.n	8012106 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012178:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801217c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012180:	fb93 f2f8 	sdiv	r2, r3, r8
 8012184:	fb08 3312 	mls	r3, r8, r2, r3
 8012188:	b353      	cbz	r3, 80121e0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801218a:	fb98 f2f3 	sdiv	r2, r8, r3
 801218e:	fb03 8812 	mls	r8, r3, r2, r8
 8012192:	f1b8 0f00 	cmp.w	r8, #0
 8012196:	d1f3      	bne.n	8012180 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012198:	2b01      	cmp	r3, #1
 801219a:	bf1c      	itt	ne
 801219c:	fb95 f5f3 	sdivne	r5, r5, r3
 80121a0:	fb97 f7f3 	sdivne	r7, r7, r3
 80121a4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80121a8:	f24b 5104 	movw	r1, #46340	; 0xb504
 80121ac:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80121b0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80121b4:	428b      	cmp	r3, r1
 80121b6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80121ba:	4608      	mov	r0, r1
 80121bc:	dd01      	ble.n	80121c2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80121be:	428a      	cmp	r2, r1
 80121c0:	dc10      	bgt.n	80121e4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80121c2:	fb90 f3f3 	sdiv	r3, r0, r3
 80121c6:	fb90 f2f2 	sdiv	r2, r0, r2
 80121ca:	4293      	cmp	r3, r2
 80121cc:	bfa8      	it	ge
 80121ce:	4613      	movge	r3, r2
 80121d0:	435f      	muls	r7, r3
 80121d2:	435d      	muls	r5, r3
 80121d4:	4629      	mov	r1, r5
 80121d6:	4638      	mov	r0, r7
 80121d8:	f7ff fefe 	bl	8011fd8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80121dc:	4680      	mov	r8, r0
 80121de:	e792      	b.n	8012106 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80121e0:	4643      	mov	r3, r8
 80121e2:	e7d9      	b.n	8012198 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 80121e4:	fb93 f3f1 	sdiv	r3, r3, r1
 80121e8:	fb92 f2f1 	sdiv	r2, r2, r1
 80121ec:	4293      	cmp	r3, r2
 80121ee:	bfcc      	ite	gt
 80121f0:	3301      	addgt	r3, #1
 80121f2:	1c53      	addle	r3, r2, #1
 80121f4:	fb97 f7f3 	sdiv	r7, r7, r3
 80121f8:	fb95 f5f3 	sdiv	r5, r5, r3
 80121fc:	e7ea      	b.n	80121d4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 80121fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012200:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012202:	1b93      	subs	r3, r2, r6
 8012204:	6463      	str	r3, [r4, #68]	; 0x44
 8012206:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012208:	18e9      	adds	r1, r5, r3
 801220a:	6561      	str	r1, [r4, #84]	; 0x54
 801220c:	1b81      	subs	r1, r0, r6
 801220e:	64a1      	str	r1, [r4, #72]	; 0x48
 8012210:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012212:	4430      	add	r0, r6
 8012214:	186f      	adds	r7, r5, r1
 8012216:	4432      	add	r2, r6
 8012218:	1b49      	subs	r1, r1, r5
 801221a:	65a7      	str	r7, [r4, #88]	; 0x58
 801221c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801221e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012220:	6522      	str	r2, [r4, #80]	; 0x50
 8012222:	1b5b      	subs	r3, r3, r5
 8012224:	6623      	str	r3, [r4, #96]	; 0x60
 8012226:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012228:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801222a:	9200      	str	r2, [sp, #0]
 801222c:	9301      	str	r3, [sp, #4]
 801222e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012232:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012236:	680f      	ldr	r7, [r1, #0]
 8012238:	9800      	ldr	r0, [sp, #0]
 801223a:	42ba      	cmp	r2, r7
 801223c:	bfa8      	it	ge
 801223e:	463a      	movge	r2, r7
 8012240:	4287      	cmp	r7, r0
 8012242:	bfc8      	it	gt
 8012244:	9700      	strgt	r7, [sp, #0]
 8012246:	690f      	ldr	r7, [r1, #16]
 8012248:	9801      	ldr	r0, [sp, #4]
 801224a:	42bb      	cmp	r3, r7
 801224c:	bfa8      	it	ge
 801224e:	463b      	movge	r3, r7
 8012250:	3104      	adds	r1, #4
 8012252:	4287      	cmp	r7, r0
 8012254:	bfc8      	it	gt
 8012256:	9701      	strgt	r7, [sp, #4]
 8012258:	458c      	cmp	ip, r1
 801225a:	d1ec      	bne.n	8012236 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801225c:	4668      	mov	r0, sp
 801225e:	2720      	movs	r7, #32
 8012260:	fb92 f8f7 	sdiv	r8, r2, r7
 8012264:	fb93 f7f7 	sdiv	r7, r3, r7
 8012268:	f7ff fd57 	bl	8011d1a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801226c:	4682      	mov	sl, r0
 801226e:	a801      	add	r0, sp, #4
 8012270:	f7ff fd53 	bl	8011d1a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012274:	ebaa 0208 	sub.w	r2, sl, r8
 8012278:	1bc0      	subs	r0, r0, r7
 801227a:	f1b9 0f01 	cmp.w	r9, #1
 801227e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012282:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012286:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801228a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801228e:	f47f af33 	bne.w	80120f8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012292:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012294:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012296:	1b83      	subs	r3, r0, r6
 8012298:	6463      	str	r3, [r4, #68]	; 0x44
 801229a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801229c:	18ea      	adds	r2, r5, r3
 801229e:	6562      	str	r2, [r4, #84]	; 0x54
 80122a0:	1b8a      	subs	r2, r1, r6
 80122a2:	64a2      	str	r2, [r4, #72]	; 0x48
 80122a4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80122a6:	4431      	add	r1, r6
 80122a8:	18af      	adds	r7, r5, r2
 80122aa:	4406      	add	r6, r0
 80122ac:	1b52      	subs	r2, r2, r5
 80122ae:	1b5d      	subs	r5, r3, r5
 80122b0:	65a7      	str	r7, [r4, #88]	; 0x58
 80122b2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80122b4:	65e2      	str	r2, [r4, #92]	; 0x5c
 80122b6:	6526      	str	r6, [r4, #80]	; 0x50
 80122b8:	6625      	str	r5, [r4, #96]	; 0x60
 80122ba:	e71d      	b.n	80120f8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080122bc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80122bc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80122be:	428b      	cmp	r3, r1
 80122c0:	d102      	bne.n	80122c8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80122c2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80122c4:	4293      	cmp	r3, r2
 80122c6:	d003      	beq.n	80122d0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80122c8:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80122cc:	f7ff bf00 	b.w	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80122d0:	4770      	bx	lr

080122d2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80122d2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80122d4:	428b      	cmp	r3, r1
 80122d6:	d102      	bne.n	80122de <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 80122d8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80122da:	4293      	cmp	r3, r2
 80122dc:	d003      	beq.n	80122e6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 80122de:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80122e2:	f7ff bef5 	b.w	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80122e6:	4770      	bx	lr

080122e8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 80122e8:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 80122ec:	f7ff bef0 	b.w	80120d0 <_ZN8touchgfx4Line17updateCachedShapeEv>

080122f0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 80122f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122f4:	b0a0      	sub	sp, #128	; 0x80
 80122f6:	4604      	mov	r4, r0
 80122f8:	460a      	mov	r2, r1
 80122fa:	4601      	mov	r1, r0
 80122fc:	a804      	add	r0, sp, #16
 80122fe:	f014 fe3b 	bl	8026f78 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012302:	2300      	movs	r3, #0
 8012304:	9301      	str	r3, [sp, #4]
 8012306:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801230a:	2b01      	cmp	r3, #1
 801230c:	d17c      	bne.n	8012408 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801230e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012310:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012312:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012314:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012316:	1ac0      	subs	r0, r0, r3
 8012318:	eba1 0102 	sub.w	r1, r1, r2
 801231c:	d437      	bmi.n	801238e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801231e:	2900      	cmp	r1, #0
 8012320:	aa01      	add	r2, sp, #4
 8012322:	db2e      	blt.n	8012382 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012324:	f7ff fe98 	bl	8012058 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012328:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801232c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801232e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012330:	a804      	add	r0, sp, #16
 8012332:	f014 ffa1 	bl	8027278 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012336:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012338:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801233a:	a804      	add	r0, sp, #16
 801233c:	f014 ffe9 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012340:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012342:	2db3      	cmp	r5, #179	; 0xb3
 8012344:	dc33      	bgt.n	80123ae <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012346:	eba6 0805 	sub.w	r8, r6, r5
 801234a:	4640      	mov	r0, r8
 801234c:	f7ff fdf2 	bl	8011f34 <_ZN8touchgfx7CWRUtil4sineEi>
 8012350:	a902      	add	r1, sp, #8
 8012352:	9002      	str	r0, [sp, #8]
 8012354:	a801      	add	r0, sp, #4
 8012356:	f7ff fcd5 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801235a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801235c:	1847      	adds	r7, r0, r1
 801235e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012362:	f7ff fde7 	bl	8011f34 <_ZN8touchgfx7CWRUtil4sineEi>
 8012366:	a903      	add	r1, sp, #12
 8012368:	9003      	str	r0, [sp, #12]
 801236a:	a801      	add	r0, sp, #4
 801236c:	f7ff fcca 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012370:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012372:	4639      	mov	r1, r7
 8012374:	1a12      	subs	r2, r2, r0
 8012376:	a804      	add	r0, sp, #16
 8012378:	f014 ffcb 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801237c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801237e:	441d      	add	r5, r3
 8012380:	e7df      	b.n	8012342 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012382:	4249      	negs	r1, r1
 8012384:	f7ff fe68 	bl	8012058 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012388:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801238c:	e7ce      	b.n	801232c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801238e:	2900      	cmp	r1, #0
 8012390:	f1c0 0000 	rsb	r0, r0, #0
 8012394:	aa01      	add	r2, sp, #4
 8012396:	db04      	blt.n	80123a2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012398:	f7ff fe5e 	bl	8012058 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801239c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80123a0:	e7c4      	b.n	801232c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80123a2:	4249      	negs	r1, r1
 80123a4:	f7ff fe58 	bl	8012058 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80123a8:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80123ac:	e7be      	b.n	801232c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80123ae:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80123b0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80123b2:	a804      	add	r0, sp, #16
 80123b4:	f014 ffad 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80123b8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80123ba:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80123bc:	a804      	add	r0, sp, #16
 80123be:	f014 ffa8 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80123c2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80123c4:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80123c8:	2d00      	cmp	r5, #0
 80123ca:	dd31      	ble.n	8012430 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80123cc:	eb05 0806 	add.w	r8, r5, r6
 80123d0:	4640      	mov	r0, r8
 80123d2:	f7ff fdaf 	bl	8011f34 <_ZN8touchgfx7CWRUtil4sineEi>
 80123d6:	a902      	add	r1, sp, #8
 80123d8:	9002      	str	r0, [sp, #8]
 80123da:	a801      	add	r0, sp, #4
 80123dc:	f7ff fc92 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80123e0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80123e2:	1847      	adds	r7, r0, r1
 80123e4:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80123e8:	f7ff fda4 	bl	8011f34 <_ZN8touchgfx7CWRUtil4sineEi>
 80123ec:	a903      	add	r1, sp, #12
 80123ee:	9003      	str	r0, [sp, #12]
 80123f0:	a801      	add	r0, sp, #4
 80123f2:	f7ff fc87 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80123f6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80123f8:	4639      	mov	r1, r7
 80123fa:	1a12      	subs	r2, r2, r0
 80123fc:	a804      	add	r0, sp, #16
 80123fe:	f014 ff88 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012402:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012404:	1aed      	subs	r5, r5, r3
 8012406:	e7df      	b.n	80123c8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012408:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801240a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801240c:	a804      	add	r0, sp, #16
 801240e:	f014 ff33 	bl	8027278 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012412:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012414:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012416:	a804      	add	r0, sp, #16
 8012418:	f014 ff7b 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801241c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801241e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012420:	a804      	add	r0, sp, #16
 8012422:	f014 ff76 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012426:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012428:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801242a:	a804      	add	r0, sp, #16
 801242c:	f014 ff71 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012430:	21ff      	movs	r1, #255	; 0xff
 8012432:	a804      	add	r0, sp, #16
 8012434:	f014 fe5c 	bl	80270f0 <_ZN8touchgfx6Canvas6renderEh>
 8012438:	4b04      	ldr	r3, [pc, #16]	; (801244c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801243a:	9304      	str	r3, [sp, #16]
 801243c:	4604      	mov	r4, r0
 801243e:	a80c      	add	r0, sp, #48	; 0x30
 8012440:	f001 f8cc 	bl	80135dc <_ZN8touchgfx7OutlineD1Ev>
 8012444:	4620      	mov	r0, r4
 8012446:	b020      	add	sp, #128	; 0x80
 8012448:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801244c:	0802f840 	.word	0x0802f840

08012450 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012450:	2000      	movs	r0, #0
 8012452:	4770      	bx	lr

08012454 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012454:	4b07      	ldr	r3, [pc, #28]	; (8012474 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012456:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012458:	881b      	ldrh	r3, [r3, #0]
 801245a:	4293      	cmp	r3, r2
 801245c:	bf81      	itttt	hi
 801245e:	4b06      	ldrhi	r3, [pc, #24]	; (8012478 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012460:	681b      	ldrhi	r3, [r3, #0]
 8012462:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012466:	7858      	ldrbhi	r0, [r3, #1]
 8012468:	bf8c      	ite	hi
 801246a:	f000 0003 	andhi.w	r0, r0, #3
 801246e:	2000      	movls	r0, #0
 8012470:	4770      	bx	lr
 8012472:	bf00      	nop
 8012474:	20012e10 	.word	0x20012e10
 8012478:	20012e0c 	.word	0x20012e0c

0801247c <_ZN8touchgfx8TextAreaD1Ev>:
 801247c:	4770      	bx	lr
	...

08012480 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012484:	4b10      	ldr	r3, [pc, #64]	; (80124c8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012486:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012488:	881b      	ldrh	r3, [r3, #0]
 801248a:	428b      	cmp	r3, r1
 801248c:	4604      	mov	r4, r0
 801248e:	d918      	bls.n	80124c2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012490:	6803      	ldr	r3, [r0, #0]
 8012492:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012494:	4b0d      	ldr	r3, [pc, #52]	; (80124cc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012496:	6818      	ldr	r0, [r3, #0]
 8012498:	f7f6 fe34 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 801249c:	6823      	ldr	r3, [r4, #0]
 801249e:	4606      	mov	r6, r0
 80124a0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80124a2:	4620      	mov	r0, r4
 80124a4:	4798      	blx	r3
 80124a6:	6823      	ldr	r3, [r4, #0]
 80124a8:	4607      	mov	r7, r0
 80124aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80124ae:	4620      	mov	r0, r4
 80124b0:	4798      	blx	r3
 80124b2:	463a      	mov	r2, r7
 80124b4:	4603      	mov	r3, r0
 80124b6:	4631      	mov	r1, r6
 80124b8:	4620      	mov	r0, r4
 80124ba:	46ac      	mov	ip, r5
 80124bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80124c0:	4760      	bx	ip
 80124c2:	2000      	movs	r0, #0
 80124c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124c8:	20012e10 	.word	0x20012e10
 80124cc:	20012e18 	.word	0x20012e18

080124d0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80124d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80124d4:	4b17      	ldr	r3, [pc, #92]	; (8012534 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80124d6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80124d8:	881b      	ldrh	r3, [r3, #0]
 80124da:	428b      	cmp	r3, r1
 80124dc:	4604      	mov	r4, r0
 80124de:	d926      	bls.n	801252e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80124e0:	4b15      	ldr	r3, [pc, #84]	; (8012538 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80124e2:	681b      	ldr	r3, [r3, #0]
 80124e4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80124e8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80124ec:	4b13      	ldr	r3, [pc, #76]	; (801253c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80124ee:	7855      	ldrb	r5, [r2, #1]
 80124f0:	681b      	ldr	r3, [r3, #0]
 80124f2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80124f6:	6833      	ldr	r3, [r6, #0]
 80124f8:	69df      	ldr	r7, [r3, #28]
 80124fa:	4b11      	ldr	r3, [pc, #68]	; (8012540 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80124fc:	6818      	ldr	r0, [r3, #0]
 80124fe:	f7f6 fe01 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8012502:	6823      	ldr	r3, [r4, #0]
 8012504:	4680      	mov	r8, r0
 8012506:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012508:	4620      	mov	r0, r4
 801250a:	4798      	blx	r3
 801250c:	6823      	ldr	r3, [r4, #0]
 801250e:	4681      	mov	r9, r0
 8012510:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012514:	4620      	mov	r0, r4
 8012516:	4798      	blx	r3
 8012518:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801251c:	9000      	str	r0, [sp, #0]
 801251e:	464b      	mov	r3, r9
 8012520:	4642      	mov	r2, r8
 8012522:	4629      	mov	r1, r5
 8012524:	4630      	mov	r0, r6
 8012526:	47b8      	blx	r7
 8012528:	b003      	add	sp, #12
 801252a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801252e:	2000      	movs	r0, #0
 8012530:	e7fa      	b.n	8012528 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012532:	bf00      	nop
 8012534:	20012e10 	.word	0x20012e10
 8012538:	20012e0c 	.word	0x20012e0c
 801253c:	20012e14 	.word	0x20012e14
 8012540:	20012e18 	.word	0x20012e18

08012544 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012544:	b40e      	push	{r1, r2, r3}
 8012546:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801254a:	4b2f      	ldr	r3, [pc, #188]	; (8012608 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801254c:	881a      	ldrh	r2, [r3, #0]
 801254e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012550:	429a      	cmp	r2, r3
 8012552:	b09d      	sub	sp, #116	; 0x74
 8012554:	4604      	mov	r4, r0
 8012556:	d954      	bls.n	8012602 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012558:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801260c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801255c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012610 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012560:	aa26      	add	r2, sp, #152	; 0x98
 8012562:	9202      	str	r2, [sp, #8]
 8012564:	f8d9 2000 	ldr.w	r2, [r9]
 8012568:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801256c:	f8d8 3000 	ldr.w	r3, [r8]
 8012570:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012574:	682b      	ldr	r3, [r5, #0]
 8012576:	4628      	mov	r0, r5
 8012578:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801257a:	4798      	blx	r3
 801257c:	b207      	sxth	r7, r0
 801257e:	4606      	mov	r6, r0
 8012580:	a803      	add	r0, sp, #12
 8012582:	f005 fa57 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 8012586:	682b      	ldr	r3, [r5, #0]
 8012588:	4628      	mov	r0, r5
 801258a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801258c:	4798      	blx	r3
 801258e:	682b      	ldr	r3, [r5, #0]
 8012590:	4682      	mov	sl, r0
 8012592:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012594:	4628      	mov	r0, r5
 8012596:	4798      	blx	r3
 8012598:	4653      	mov	r3, sl
 801259a:	9000      	str	r0, [sp, #0]
 801259c:	9a02      	ldr	r2, [sp, #8]
 801259e:	9925      	ldr	r1, [sp, #148]	; 0x94
 80125a0:	a803      	add	r0, sp, #12
 80125a2:	f005 faa2 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80125a6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80125a8:	f8d9 3000 	ldr.w	r3, [r9]
 80125ac:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80125b0:	8925      	ldrh	r5, [r4, #8]
 80125b2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80125b6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80125ba:	eba5 050c 	sub.w	r5, r5, ip
 80125be:	784a      	ldrb	r2, [r1, #1]
 80125c0:	f8d8 3000 	ldr.w	r3, [r8]
 80125c4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80125c8:	b22d      	sxth	r5, r5
 80125ca:	9500      	str	r5, [sp, #0]
 80125cc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80125d0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80125d4:	a803      	add	r0, sp, #12
 80125d6:	f002 feed 	bl	80153b4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80125da:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80125de:	18b9      	adds	r1, r7, r2
 80125e0:	2900      	cmp	r1, #0
 80125e2:	b203      	sxth	r3, r0
 80125e4:	dd0b      	ble.n	80125fe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80125e6:	3b01      	subs	r3, #1
 80125e8:	fb13 f302 	smulbb	r3, r3, r2
 80125ec:	fb16 3300 	smlabb	r3, r6, r0, r3
 80125f0:	b21f      	sxth	r7, r3
 80125f2:	4638      	mov	r0, r7
 80125f4:	b01d      	add	sp, #116	; 0x74
 80125f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80125fa:	b003      	add	sp, #12
 80125fc:	4770      	bx	lr
 80125fe:	2b00      	cmp	r3, #0
 8012600:	dcf7      	bgt.n	80125f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012602:	2700      	movs	r7, #0
 8012604:	e7f5      	b.n	80125f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012606:	bf00      	nop
 8012608:	20012e10 	.word	0x20012e10
 801260c:	20012e0c 	.word	0x20012e0c
 8012610:	20012e14 	.word	0x20012e14

08012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012618:	4bbc      	ldr	r3, [pc, #752]	; (801290c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801261a:	460c      	mov	r4, r1
 801261c:	881b      	ldrh	r3, [r3, #0]
 801261e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012620:	428b      	cmp	r3, r1
 8012622:	b0a9      	sub	sp, #164	; 0xa4
 8012624:	4680      	mov	r8, r0
 8012626:	d809      	bhi.n	801263c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012628:	2300      	movs	r3, #0
 801262a:	f04f 32ff 	mov.w	r2, #4294967295
 801262e:	e9c0 3200 	strd	r3, r2, [r0]
 8012632:	6083      	str	r3, [r0, #8]
 8012634:	4640      	mov	r0, r8
 8012636:	b029      	add	sp, #164	; 0xa4
 8012638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801263c:	4eb4      	ldr	r6, [pc, #720]	; (8012910 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801263e:	6833      	ldr	r3, [r6, #0]
 8012640:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012644:	4bb3      	ldr	r3, [pc, #716]	; (8012914 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8012646:	681b      	ldr	r3, [r3, #0]
 8012648:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801264c:	4bb2      	ldr	r3, [pc, #712]	; (8012918 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801264e:	6818      	ldr	r0, [r3, #0]
 8012650:	f7f6 fd58 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8012654:	682b      	ldr	r3, [r5, #0]
 8012656:	4681      	mov	r9, r0
 8012658:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801265a:	4628      	mov	r0, r5
 801265c:	4798      	blx	r3
 801265e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012660:	b203      	sxth	r3, r0
 8012662:	4407      	add	r7, r0
 8012664:	9304      	str	r3, [sp, #16]
 8012666:	b2bb      	uxth	r3, r7
 8012668:	9303      	str	r3, [sp, #12]
 801266a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801266e:	4682      	mov	sl, r0
 8012670:	a80f      	add	r0, sp, #60	; 0x3c
 8012672:	2b00      	cmp	r3, #0
 8012674:	f040 80a6 	bne.w	80127c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012678:	f005 f9dc 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 801267c:	682b      	ldr	r3, [r5, #0]
 801267e:	4628      	mov	r0, r5
 8012680:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012682:	4798      	blx	r3
 8012684:	682b      	ldr	r3, [r5, #0]
 8012686:	4606      	mov	r6, r0
 8012688:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801268a:	4628      	mov	r0, r5
 801268c:	4798      	blx	r3
 801268e:	6823      	ldr	r3, [r4, #0]
 8012690:	4607      	mov	r7, r0
 8012692:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012694:	4620      	mov	r0, r4
 8012696:	4798      	blx	r3
 8012698:	6823      	ldr	r3, [r4, #0]
 801269a:	4683      	mov	fp, r0
 801269c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80126a0:	4620      	mov	r0, r4
 80126a2:	4798      	blx	r3
 80126a4:	463b      	mov	r3, r7
 80126a6:	e9cd b000 	strd	fp, r0, [sp]
 80126aa:	4649      	mov	r1, r9
 80126ac:	4632      	mov	r2, r6
 80126ae:	a80f      	add	r0, sp, #60	; 0x3c
 80126b0:	f005 fa30 	bl	8017b14 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80126b4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80126b8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012910 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80126bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80126c0:	f04f 0600 	mov.w	r6, #0
 80126c4:	bf0c      	ite	eq
 80126c6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80126ca:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80126ce:	4637      	mov	r7, r6
 80126d0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80126d2:	f8db 3000 	ldr.w	r3, [fp]
 80126d6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80126da:	4629      	mov	r1, r5
 80126dc:	785b      	ldrb	r3, [r3, #1]
 80126de:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80126e2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80126e6:	a80f      	add	r0, sp, #60	; 0x3c
 80126e8:	f002 fb7f 	bl	8014dea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80126ec:	9b03      	ldr	r3, [sp, #12]
 80126ee:	4286      	cmp	r6, r0
 80126f0:	bfb8      	it	lt
 80126f2:	4606      	movlt	r6, r0
 80126f4:	3701      	adds	r7, #1
 80126f6:	eba9 0903 	sub.w	r9, r9, r3
 80126fa:	a80f      	add	r0, sp, #60	; 0x3c
 80126fc:	b236      	sxth	r6, r6
 80126fe:	b2bf      	uxth	r7, r7
 8012700:	fa0f f989 	sxth.w	r9, r9
 8012704:	f005 f9bd 	bl	8017a82 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012708:	b918      	cbnz	r0, 8012712 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801270a:	7a2b      	ldrb	r3, [r5, #8]
 801270c:	444b      	add	r3, r9
 801270e:	2b00      	cmp	r3, #0
 8012710:	dcde      	bgt.n	80126d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012712:	9b03      	ldr	r3, [sp, #12]
 8012714:	9a04      	ldr	r2, [sp, #16]
 8012716:	f895 9009 	ldrb.w	r9, [r5, #9]
 801271a:	fb13 f707 	smulbb	r7, r3, r7
 801271e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012720:	1aff      	subs	r7, r7, r3
 8012722:	b2bf      	uxth	r7, r7
 8012724:	b23b      	sxth	r3, r7
 8012726:	429a      	cmp	r2, r3
 8012728:	bfa8      	it	ge
 801272a:	4657      	movge	r7, sl
 801272c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012730:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012734:	6823      	ldr	r3, [r4, #0]
 8012736:	bf08      	it	eq
 8012738:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801273c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801273e:	bf18      	it	ne
 8012740:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012744:	4620      	mov	r0, r4
 8012746:	4798      	blx	r3
 8012748:	444f      	add	r7, r9
 801274a:	fa1f f987 	uxth.w	r9, r7
 801274e:	2801      	cmp	r0, #1
 8012750:	fa0f f789 	sxth.w	r7, r9
 8012754:	b2b3      	uxth	r3, r6
 8012756:	f000 80e1 	beq.w	801291c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801275a:	2802      	cmp	r0, #2
 801275c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012760:	f000 80e2 	beq.w	8012928 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012764:	7aea      	ldrb	r2, [r5, #11]
 8012766:	7b2d      	ldrb	r5, [r5, #12]
 8012768:	b236      	sxth	r6, r6
 801276a:	1ab6      	subs	r6, r6, r2
 801276c:	442a      	add	r2, r5
 801276e:	4413      	add	r3, r2
 8012770:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012774:	fa1f fa86 	uxth.w	sl, r6
 8012778:	b29b      	uxth	r3, r3
 801277a:	2a02      	cmp	r2, #2
 801277c:	fa0f fb8a 	sxth.w	fp, sl
 8012780:	b21e      	sxth	r6, r3
 8012782:	f000 80d5 	beq.w	8012930 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012786:	2a03      	cmp	r2, #3
 8012788:	f000 80dd 	beq.w	8012946 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801278c:	2a01      	cmp	r2, #1
 801278e:	f040 80e5 	bne.w	801295c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012792:	8925      	ldrh	r5, [r4, #8]
 8012794:	4633      	mov	r3, r6
 8012796:	eba5 0909 	sub.w	r9, r5, r9
 801279a:	463e      	mov	r6, r7
 801279c:	465d      	mov	r5, fp
 801279e:	461f      	mov	r7, r3
 80127a0:	fa0f fb89 	sxth.w	fp, r9
 80127a4:	4b5c      	ldr	r3, [pc, #368]	; (8012918 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80127a6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80127a8:	6818      	ldr	r0, [r3, #0]
 80127aa:	f7f6 fcab 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 80127ae:	f8a8 b000 	strh.w	fp, [r8]
 80127b2:	f8a8 5002 	strh.w	r5, [r8, #2]
 80127b6:	f8a8 6004 	strh.w	r6, [r8, #4]
 80127ba:	f8a8 7006 	strh.w	r7, [r8, #6]
 80127be:	f8c8 0008 	str.w	r0, [r8, #8]
 80127c2:	e737      	b.n	8012634 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80127c4:	f005 f936 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 80127c8:	682b      	ldr	r3, [r5, #0]
 80127ca:	4628      	mov	r0, r5
 80127cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80127ce:	4798      	blx	r3
 80127d0:	682b      	ldr	r3, [r5, #0]
 80127d2:	4607      	mov	r7, r0
 80127d4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80127d6:	4628      	mov	r0, r5
 80127d8:	4798      	blx	r3
 80127da:	6823      	ldr	r3, [r4, #0]
 80127dc:	4683      	mov	fp, r0
 80127de:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80127e0:	4620      	mov	r0, r4
 80127e2:	4798      	blx	r3
 80127e4:	6822      	ldr	r2, [r4, #0]
 80127e6:	9005      	str	r0, [sp, #20]
 80127e8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80127ec:	4620      	mov	r0, r4
 80127ee:	4790      	blx	r2
 80127f0:	9b05      	ldr	r3, [sp, #20]
 80127f2:	9001      	str	r0, [sp, #4]
 80127f4:	463a      	mov	r2, r7
 80127f6:	4649      	mov	r1, r9
 80127f8:	9300      	str	r3, [sp, #0]
 80127fa:	a80f      	add	r0, sp, #60	; 0x3c
 80127fc:	465b      	mov	r3, fp
 80127fe:	f005 f989 	bl	8017b14 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012802:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012806:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801280a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801280c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012810:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012814:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012818:	bf0a      	itet	eq
 801281a:	464a      	moveq	r2, r9
 801281c:	461a      	movne	r2, r3
 801281e:	4699      	moveq	r9, r3
 8012820:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012824:	1ad2      	subs	r2, r2, r3
 8012826:	6833      	ldr	r3, [r6, #0]
 8012828:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801282c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012830:	af0f      	add	r7, sp, #60	; 0x3c
 8012832:	7859      	ldrb	r1, [r3, #1]
 8012834:	9707      	str	r7, [sp, #28]
 8012836:	2300      	movs	r3, #0
 8012838:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801283c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012840:	f88d 1020 	strb.w	r1, [sp, #32]
 8012844:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012848:	9509      	str	r5, [sp, #36]	; 0x24
 801284a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801284e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012852:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012856:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801285a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801285e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012862:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012866:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801286a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801286e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012872:	b350      	cbz	r0, 80128ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012874:	682b      	ldr	r3, [r5, #0]
 8012876:	4628      	mov	r0, r5
 8012878:	695b      	ldr	r3, [r3, #20]
 801287a:	4798      	blx	r3
 801287c:	4607      	mov	r7, r0
 801287e:	b320      	cbz	r0, 80128ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012880:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012882:	6803      	ldr	r3, [r0, #0]
 8012884:	4639      	mov	r1, r7
 8012886:	68db      	ldr	r3, [r3, #12]
 8012888:	4798      	blx	r3
 801288a:	4606      	mov	r6, r0
 801288c:	b1e8      	cbz	r0, 80128ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801288e:	7b43      	ldrb	r3, [r0, #13]
 8012890:	7a82      	ldrb	r2, [r0, #10]
 8012892:	005b      	lsls	r3, r3, #1
 8012894:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012898:	4313      	orrs	r3, r2
 801289a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801289e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80128a2:	2b06      	cmp	r3, #6
 80128a4:	d111      	bne.n	80128ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80128a6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80128a8:	6803      	ldr	r3, [r0, #0]
 80128aa:	4632      	mov	r2, r6
 80128ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80128ae:	4639      	mov	r1, r7
 80128b0:	4798      	blx	r3
 80128b2:	7b73      	ldrb	r3, [r6, #13]
 80128b4:	005b      	lsls	r3, r3, #1
 80128b6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80128ba:	7ab3      	ldrb	r3, [r6, #10]
 80128bc:	4313      	orrs	r3, r2
 80128be:	4418      	add	r0, r3
 80128c0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80128c4:	4418      	add	r0, r3
 80128c6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80128ca:	2600      	movs	r6, #0
 80128cc:	4637      	mov	r7, r6
 80128ce:	a806      	add	r0, sp, #24
 80128d0:	f002 fc6c 	bl	80151ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80128d4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80128d8:	9b03      	ldr	r3, [sp, #12]
 80128da:	4286      	cmp	r6, r0
 80128dc:	eba9 0903 	sub.w	r9, r9, r3
 80128e0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80128e4:	bfb8      	it	lt
 80128e6:	4606      	movlt	r6, r0
 80128e8:	3701      	adds	r7, #1
 80128ea:	b236      	sxth	r6, r6
 80128ec:	b2bf      	uxth	r7, r7
 80128ee:	fa0f f989 	sxth.w	r9, r9
 80128f2:	2b00      	cmp	r3, #0
 80128f4:	f43f af0d 	beq.w	8012712 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80128f8:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80128fc:	2b00      	cmp	r3, #0
 80128fe:	f47f af08 	bne.w	8012712 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012902:	7a2b      	ldrb	r3, [r5, #8]
 8012904:	444b      	add	r3, r9
 8012906:	2b00      	cmp	r3, #0
 8012908:	dce1      	bgt.n	80128ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801290a:	e702      	b.n	8012712 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801290c:	20012e10 	.word	0x20012e10
 8012910:	20012e0c 	.word	0x20012e0c
 8012914:	20012e14 	.word	0x20012e14
 8012918:	20012e18 	.word	0x20012e18
 801291c:	ebaa 0606 	sub.w	r6, sl, r6
 8012920:	2002      	movs	r0, #2
 8012922:	fb96 f6f0 	sdiv	r6, r6, r0
 8012926:	e71d      	b.n	8012764 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012928:	441e      	add	r6, r3
 801292a:	ebaa 0606 	sub.w	r6, sl, r6
 801292e:	e719      	b.n	8012764 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012930:	8925      	ldrh	r5, [r4, #8]
 8012932:	1aed      	subs	r5, r5, r3
 8012934:	eba5 050a 	sub.w	r5, r5, sl
 8012938:	fa0f fb85 	sxth.w	fp, r5
 801293c:	8965      	ldrh	r5, [r4, #10]
 801293e:	eba5 0509 	sub.w	r5, r5, r9
 8012942:	b22d      	sxth	r5, r5
 8012944:	e72e      	b.n	80127a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012946:	8965      	ldrh	r5, [r4, #10]
 8012948:	1aed      	subs	r5, r5, r3
 801294a:	eba5 050a 	sub.w	r5, r5, sl
 801294e:	4633      	mov	r3, r6
 8012950:	b22d      	sxth	r5, r5
 8012952:	463e      	mov	r6, r7
 8012954:	f04f 0b00 	mov.w	fp, #0
 8012958:	461f      	mov	r7, r3
 801295a:	e723      	b.n	80127a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801295c:	2500      	movs	r5, #0
 801295e:	e721      	b.n	80127a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012960 <_ZN8touchgfx8TextAreaD0Ev>:
 8012960:	b510      	push	{r4, lr}
 8012962:	2148      	movs	r1, #72	; 0x48
 8012964:	4604      	mov	r4, r0
 8012966:	f017 fa4a 	bl	8029dfe <_ZdlPvj>
 801296a:	4620      	mov	r0, r4
 801296c:	bd10      	pop	{r4, pc}
	...

08012970 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012970:	b513      	push	{r0, r1, r4, lr}
 8012972:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012976:	4604      	mov	r4, r0
 8012978:	b1fb      	cbz	r3, 80129ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801297a:	4b16      	ldr	r3, [pc, #88]	; (80129d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801297c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801297e:	881b      	ldrh	r3, [r3, #0]
 8012980:	428b      	cmp	r3, r1
 8012982:	d91a      	bls.n	80129ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012984:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012988:	2b00      	cmp	r3, #0
 801298a:	dd16      	ble.n	80129ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801298c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012990:	2b00      	cmp	r3, #0
 8012992:	dd12      	ble.n	80129ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012994:	4b10      	ldr	r3, [pc, #64]	; (80129d8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012996:	6818      	ldr	r0, [r3, #0]
 8012998:	f7f6 fbb4 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 801299c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80129a0:	6822      	ldr	r2, [r4, #0]
 80129a2:	2b00      	cmp	r3, #0
 80129a4:	db06      	blt.n	80129b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80129a6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80129aa:	2b00      	cmp	r3, #0
 80129ac:	db02      	blt.n	80129b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80129ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80129b0:	4298      	cmp	r0, r3
 80129b2:	d004      	beq.n	80129be <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80129b4:	6953      	ldr	r3, [r2, #20]
 80129b6:	4620      	mov	r0, r4
 80129b8:	4798      	blx	r3
 80129ba:	b002      	add	sp, #8
 80129bc:	bd10      	pop	{r4, pc}
 80129be:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80129c2:	c903      	ldmia	r1, {r0, r1}
 80129c4:	466b      	mov	r3, sp
 80129c6:	e883 0003 	stmia.w	r3, {r0, r1}
 80129ca:	6912      	ldr	r2, [r2, #16]
 80129cc:	4619      	mov	r1, r3
 80129ce:	4620      	mov	r0, r4
 80129d0:	4790      	blx	r2
 80129d2:	e7f2      	b.n	80129ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80129d4:	20012e10 	.word	0x20012e10
 80129d8:	20012e18 	.word	0x20012e18

080129dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80129dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80129e0:	4b44      	ldr	r3, [pc, #272]	; (8012af4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80129e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80129e4:	881b      	ldrh	r3, [r3, #0]
 80129e6:	4293      	cmp	r3, r2
 80129e8:	b08e      	sub	sp, #56	; 0x38
 80129ea:	4604      	mov	r4, r0
 80129ec:	d97e      	bls.n	8012aec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80129ee:	6808      	ldr	r0, [r1, #0]
 80129f0:	4d41      	ldr	r5, [pc, #260]	; (8012af8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80129f2:	6849      	ldr	r1, [r1, #4]
 80129f4:	ab05      	add	r3, sp, #20
 80129f6:	c303      	stmia	r3!, {r0, r1}
 80129f8:	4611      	mov	r1, r2
 80129fa:	6828      	ldr	r0, [r5, #0]
 80129fc:	f7f6 fb82 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8012a00:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012a04:	2b00      	cmp	r3, #0
 8012a06:	db11      	blt.n	8012a2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012a08:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012a0c:	2b00      	cmp	r3, #0
 8012a0e:	db0d      	blt.n	8012a2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012a10:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012a12:	4298      	cmp	r0, r3
 8012a14:	d10a      	bne.n	8012a2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012a16:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8012a1a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012a1e:	ab09      	add	r3, sp, #36	; 0x24
 8012a20:	e883 0003 	stmia.w	r3, {r0, r1}
 8012a24:	4619      	mov	r1, r3
 8012a26:	a805      	add	r0, sp, #20
 8012a28:	f7fe f860 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8012a2c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012a30:	2b00      	cmp	r3, #0
 8012a32:	dd5b      	ble.n	8012aec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012a34:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012a38:	2b00      	cmp	r3, #0
 8012a3a:	dd57      	ble.n	8012aec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012a3c:	4f2f      	ldr	r7, [pc, #188]	; (8012afc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8012a3e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012a40:	683b      	ldr	r3, [r7, #0]
 8012a42:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012a46:	4b2e      	ldr	r3, [pc, #184]	; (8012b00 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012a48:	681b      	ldr	r3, [r3, #0]
 8012a4a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012a4e:	2e00      	cmp	r6, #0
 8012a50:	d04c      	beq.n	8012aec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012a52:	6823      	ldr	r3, [r4, #0]
 8012a54:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012a58:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012a5a:	4620      	mov	r0, r4
 8012a5c:	4798      	blx	r3
 8012a5e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012a60:	683b      	ldr	r3, [r7, #0]
 8012a62:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012a66:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8012a6a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8012a6e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012a70:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012a74:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012a78:	785b      	ldrb	r3, [r3, #1]
 8012a7a:	9609      	str	r6, [sp, #36]	; 0x24
 8012a7c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012a80:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012a84:	4b1f      	ldr	r3, [pc, #124]	; (8012b04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012a86:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012a8a:	681b      	ldr	r3, [r3, #0]
 8012a8c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012a90:	910b      	str	r1, [sp, #44]	; 0x2c
 8012a92:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012a96:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012a9a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012a9e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012aa2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012aa6:	b10a      	cbz	r2, 8012aac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012aa8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012aaa:	b906      	cbnz	r6, 8012aae <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012aac:	689e      	ldr	r6, [r3, #8]
 8012aae:	af07      	add	r7, sp, #28
 8012ab0:	4621      	mov	r1, r4
 8012ab2:	4638      	mov	r0, r7
 8012ab4:	f004 fab0 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ab8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012aba:	6828      	ldr	r0, [r5, #0]
 8012abc:	f7f6 fb22 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8012ac0:	6823      	ldr	r3, [r4, #0]
 8012ac2:	4605      	mov	r5, r0
 8012ac4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012ac6:	4620      	mov	r0, r4
 8012ac8:	4798      	blx	r3
 8012aca:	6823      	ldr	r3, [r4, #0]
 8012acc:	4680      	mov	r8, r0
 8012ace:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012ad2:	4620      	mov	r0, r4
 8012ad4:	4798      	blx	r3
 8012ad6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012ada:	ab09      	add	r3, sp, #36	; 0x24
 8012adc:	9300      	str	r3, [sp, #0]
 8012ade:	9501      	str	r5, [sp, #4]
 8012ae0:	ab05      	add	r3, sp, #20
 8012ae2:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012ae6:	4630      	mov	r0, r6
 8012ae8:	f7f6 fabe 	bl	8009068 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012aec:	b00e      	add	sp, #56	; 0x38
 8012aee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012af2:	bf00      	nop
 8012af4:	20012e10 	.word	0x20012e10
 8012af8:	20012e18 	.word	0x20012e18
 8012afc:	20012e0c 	.word	0x20012e0c
 8012b00:	20012e14 	.word	0x20012e14
 8012b04:	20012db4 	.word	0x20012db4

08012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012b08:	b538      	push	{r3, r4, r5, lr}
 8012b0a:	4b0e      	ldr	r3, [pc, #56]	; (8012b44 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012b0c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012b0e:	881b      	ldrh	r3, [r3, #0]
 8012b10:	429a      	cmp	r2, r3
 8012b12:	4604      	mov	r4, r0
 8012b14:	d214      	bcs.n	8012b40 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012b16:	6803      	ldr	r3, [r0, #0]
 8012b18:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012b1a:	4798      	blx	r3
 8012b1c:	6823      	ldr	r3, [r4, #0]
 8012b1e:	4605      	mov	r5, r0
 8012b20:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012b22:	4620      	mov	r0, r4
 8012b24:	4798      	blx	r3
 8012b26:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012b2a:	b22d      	sxth	r5, r5
 8012b2c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012b30:	4601      	mov	r1, r0
 8012b32:	bf06      	itte	eq
 8012b34:	4602      	moveq	r2, r0
 8012b36:	4629      	moveq	r1, r5
 8012b38:	462a      	movne	r2, r5
 8012b3a:	4620      	mov	r0, r4
 8012b3c:	f7fd fdb6 	bl	80106ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012b40:	bd38      	pop	{r3, r4, r5, pc}
 8012b42:	bf00      	nop
 8012b44:	20012e10 	.word	0x20012e10

08012b48 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012b48:	b530      	push	{r4, r5, lr}
 8012b4a:	888b      	ldrh	r3, [r1, #4]
 8012b4c:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012b4e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012b52:	b085      	sub	sp, #20
 8012b54:	4604      	mov	r4, r0
 8012b56:	b923      	cbnz	r3, 8012b62 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012b58:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012b5c:	b90b      	cbnz	r3, 8012b62 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012b5e:	f7ff ffd3 	bl	8012b08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012b62:	6823      	ldr	r3, [r4, #0]
 8012b64:	466d      	mov	r5, sp
 8012b66:	4621      	mov	r1, r4
 8012b68:	4628      	mov	r0, r5
 8012b6a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012b6e:	4798      	blx	r3
 8012b70:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012b74:	343c      	adds	r4, #60	; 0x3c
 8012b76:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012b7a:	b005      	add	sp, #20
 8012b7c:	bd30      	pop	{r4, r5, pc}

08012b7e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012b7e:	2300      	movs	r3, #0
 8012b80:	8083      	strh	r3, [r0, #4]
 8012b82:	80c3      	strh	r3, [r0, #6]
 8012b84:	8003      	strh	r3, [r0, #0]
 8012b86:	8043      	strh	r3, [r0, #2]
 8012b88:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012b8c:	2bff      	cmp	r3, #255	; 0xff
 8012b8e:	bf01      	itttt	eq
 8012b90:	890b      	ldrheq	r3, [r1, #8]
 8012b92:	8083      	strheq	r3, [r0, #4]
 8012b94:	894b      	ldrheq	r3, [r1, #10]
 8012b96:	80c3      	strheq	r3, [r0, #6]
 8012b98:	4770      	bx	lr
	...

08012b9c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012b9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012b9e:	4604      	mov	r4, r0
 8012ba0:	6808      	ldr	r0, [r1, #0]
 8012ba2:	6849      	ldr	r1, [r1, #4]
 8012ba4:	466b      	mov	r3, sp
 8012ba6:	c303      	stmia	r3!, {r0, r1}
 8012ba8:	6823      	ldr	r3, [r4, #0]
 8012baa:	4669      	mov	r1, sp
 8012bac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012bae:	4620      	mov	r0, r4
 8012bb0:	4798      	blx	r3
 8012bb2:	4b08      	ldr	r3, [pc, #32]	; (8012bd4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012bb4:	681b      	ldr	r3, [r3, #0]
 8012bb6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012bba:	b10a      	cbz	r2, 8012bc0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012bbc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012bbe:	b900      	cbnz	r0, 8012bc2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012bc0:	6898      	ldr	r0, [r3, #8]
 8012bc2:	6803      	ldr	r3, [r0, #0]
 8012bc4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012bc6:	6a1d      	ldr	r5, [r3, #32]
 8012bc8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012bcc:	4669      	mov	r1, sp
 8012bce:	47a8      	blx	r5
 8012bd0:	b003      	add	sp, #12
 8012bd2:	bd30      	pop	{r4, r5, pc}
 8012bd4:	20012db4 	.word	0x20012db4

08012bd8 <_ZN8touchgfx3BoxD1Ev>:
 8012bd8:	4770      	bx	lr

08012bda <_ZN8touchgfx3BoxD0Ev>:
 8012bda:	b510      	push	{r4, lr}
 8012bdc:	212c      	movs	r1, #44	; 0x2c
 8012bde:	4604      	mov	r4, r0
 8012be0:	f017 f90d 	bl	8029dfe <_ZdlPvj>
 8012be4:	4620      	mov	r0, r4
 8012be6:	bd10      	pop	{r4, pc}

08012be8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012be8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012bec:	b12a      	cbz	r2, 8012bfa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012bee:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012bf2:	b112      	cbz	r2, 8012bfa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012bf4:	6803      	ldr	r3, [r0, #0]
 8012bf6:	695b      	ldr	r3, [r3, #20]
 8012bf8:	4718      	bx	r3
 8012bfa:	4770      	bx	lr

08012bfc <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012bfc:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012c00:	600b      	str	r3, [r1, #0]
 8012c02:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012c06:	6013      	str	r3, [r2, #0]
 8012c08:	4770      	bx	lr

08012c0a <_ZN8touchgfx5Gauge8setWidthEs>:
 8012c0a:	8101      	strh	r1, [r0, #8]
 8012c0c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012c10:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012c14:	4770      	bx	lr

08012c16 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012c16:	8141      	strh	r1, [r0, #10]
 8012c18:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012c1c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012c20:	4770      	bx	lr

08012c22 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012c22:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012c26:	4770      	bx	lr

08012c28 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012c28:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012c2c:	4770      	bx	lr

08012c2e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012c2e:	4770      	bx	lr

08012c30 <_ZN8touchgfx5GaugeD1Ev>:
 8012c30:	4770      	bx	lr

08012c32 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012c32:	b538      	push	{r3, r4, r5, lr}
 8012c34:	4604      	mov	r4, r0
 8012c36:	460d      	mov	r5, r1
 8012c38:	f7fd fc51 	bl	80104de <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012c3c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012c40:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012c44:	bd38      	pop	{r3, r4, r5, pc}

08012c46 <_ZN8touchgfx5GaugeD0Ev>:
 8012c46:	b510      	push	{r4, lr}
 8012c48:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012c4c:	4604      	mov	r4, r0
 8012c4e:	f017 f8d6 	bl	8029dfe <_ZdlPvj>
 8012c52:	4620      	mov	r0, r4
 8012c54:	bd10      	pop	{r4, pc}

08012c56 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012c56:	b510      	push	{r4, lr}
 8012c58:	6803      	ldr	r3, [r0, #0]
 8012c5a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012c5e:	4604      	mov	r4, r0
 8012c60:	4798      	blx	r3
 8012c62:	b170      	cbz	r0, 8012c82 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012c64:	6823      	ldr	r3, [r4, #0]
 8012c66:	4620      	mov	r0, r4
 8012c68:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012c6c:	4798      	blx	r3
 8012c6e:	b140      	cbz	r0, 8012c82 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012c70:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012c74:	b12b      	cbz	r3, 8012c82 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012c76:	6823      	ldr	r3, [r4, #0]
 8012c78:	4620      	mov	r0, r4
 8012c7a:	695b      	ldr	r3, [r3, #20]
 8012c7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c80:	4718      	bx	r3
 8012c82:	bd10      	pop	{r4, pc}

08012c84 <_ZN8touchgfx5GaugeC1Ev>:
 8012c84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012c86:	4604      	mov	r4, r0
 8012c88:	4626      	mov	r6, r4
 8012c8a:	f7fd fd49 	bl	8010720 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012c8e:	4b18      	ldr	r3, [pc, #96]	; (8012cf0 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012c90:	f846 3bb4 	str.w	r3, [r6], #180
 8012c94:	a902      	add	r1, sp, #8
 8012c96:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012c9a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012c9e:	4630      	mov	r0, r6
 8012ca0:	f015 f970 	bl	8027f84 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012ca4:	2500      	movs	r5, #0
 8012ca6:	2301      	movs	r3, #1
 8012ca8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012cac:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012cb0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012cb4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012cb8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012cbc:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012cc0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012cc4:	4638      	mov	r0, r7
 8012cc6:	f014 fba1 	bl	802740c <_ZN8touchgfx6CircleC1Ev>
 8012cca:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012cce:	4620      	mov	r0, r4
 8012cd0:	f7fd fdc7 	bl	8010862 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012cd4:	4639      	mov	r1, r7
 8012cd6:	4620      	mov	r0, r4
 8012cd8:	f7fd fd82 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012cdc:	4620      	mov	r0, r4
 8012cde:	4631      	mov	r1, r6
 8012ce0:	f7fd fd7e 	bl	80107e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012ce4:	4620      	mov	r0, r4
 8012ce6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012cea:	b003      	add	sp, #12
 8012cec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012cee:	bf00      	nop
 8012cf0:	0802f188 	.word	0x0802f188

08012cf4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012cf4:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012cf8:	4770      	bx	lr

08012cfa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012cfa:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012cfe:	4770      	bx	lr

08012d00 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012d00:	b538      	push	{r3, r4, r5, lr}
 8012d02:	8902      	ldrh	r2, [r0, #8]
 8012d04:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012d08:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012d0c:	4604      	mov	r4, r0
 8012d0e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012d12:	2200      	movs	r2, #0
 8012d14:	4611      	mov	r1, r2
 8012d16:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012d1a:	4628      	mov	r0, r5
 8012d1c:	f7f0 fa0f 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 8012d20:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012d24:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012d28:	1a9b      	subs	r3, r3, r2
 8012d2a:	ee07 3a90 	vmov	s15, r3
 8012d2e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012d32:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012d36:	1a9b      	subs	r3, r3, r2
 8012d38:	ee07 3a10 	vmov	s14, r3
 8012d3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d40:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d44:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012d48:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012d4c:	4628      	mov	r0, r5
 8012d4e:	f015 f965 	bl	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d52:	4b16      	ldr	r3, [pc, #88]	; (8012dac <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012d54:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012d58:	4628      	mov	r0, r5
 8012d5a:	f015 f95f 	bl	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d5e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012d62:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012d66:	ee07 3a90 	vmov	s15, r3
 8012d6a:	ee07 2a10 	vmov	s14, r2
 8012d6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d76:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012d7a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012d7e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012d82:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012d86:	4628      	mov	r0, r5
 8012d88:	f015 f948 	bl	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012d8c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012d90:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012d94:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012d98:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012d9c:	4628      	mov	r0, r5
 8012d9e:	f015 f93d 	bl	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012da2:	2301      	movs	r3, #1
 8012da4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012da8:	bd38      	pop	{r3, r4, r5, pc}
 8012daa:	bf00      	nop
 8012dac:	43960000 	.word	0x43960000

08012db0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012db0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012db2:	4604      	mov	r4, r0
 8012db4:	a802      	add	r0, sp, #8
 8012db6:	4616      	mov	r6, r2
 8012db8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012dbc:	461d      	mov	r5, r3
 8012dbe:	4601      	mov	r1, r0
 8012dc0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012dc4:	f015 fa80 	bl	80282c8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012dc8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012dcc:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012dd0:	4620      	mov	r0, r4
 8012dd2:	f7ff ff95 	bl	8012d00 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012dd6:	b002      	add	sp, #8
 8012dd8:	bd70      	pop	{r4, r5, r6, pc}

08012dda <_ZN8touchgfx5Gauge9setCenterEii>:
 8012dda:	b570      	push	{r4, r5, r6, lr}
 8012ddc:	4606      	mov	r6, r0
 8012dde:	460d      	mov	r5, r1
 8012de0:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012de4:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012de8:	4614      	mov	r4, r2
 8012dea:	f7ff ff89 	bl	8012d00 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012dee:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012df2:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012df6:	1aa4      	subs	r4, r4, r2
 8012df8:	1a6d      	subs	r5, r5, r1
 8012dfa:	0164      	lsls	r4, r4, #5
 8012dfc:	016d      	lsls	r5, r5, #5
 8012dfe:	3410      	adds	r4, #16
 8012e00:	3510      	adds	r5, #16
 8012e02:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012e06:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012e0a:	bd70      	pop	{r4, r5, r6, pc}

08012e0c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012e0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012e0e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012e10:	0149      	lsls	r1, r1, #5
 8012e12:	4299      	cmp	r1, r3
 8012e14:	4604      	mov	r4, r0
 8012e16:	9101      	str	r1, [sp, #4]
 8012e18:	d00b      	beq.n	8012e32 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012e1a:	4601      	mov	r1, r0
 8012e1c:	aa01      	add	r2, sp, #4
 8012e1e:	a802      	add	r0, sp, #8
 8012e20:	f014 fcf2 	bl	8027808 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012e24:	9b01      	ldr	r3, [sp, #4]
 8012e26:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012e28:	6823      	ldr	r3, [r4, #0]
 8012e2a:	a902      	add	r1, sp, #8
 8012e2c:	691b      	ldr	r3, [r3, #16]
 8012e2e:	4620      	mov	r0, r4
 8012e30:	4798      	blx	r3
 8012e32:	b004      	add	sp, #16
 8012e34:	bd10      	pop	{r4, pc}
	...

08012e38 <_ZN8touchgfx5Gauge8setValueEi>:
 8012e38:	b570      	push	{r4, r5, r6, lr}
 8012e3a:	4604      	mov	r4, r0
 8012e3c:	f7fd fba2 	bl	8010584 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012e40:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012e44:	429a      	cmp	r2, r3
 8012e46:	bfac      	ite	ge
 8012e48:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012e4c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012e50:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012e54:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012e58:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012e5c:	1ac9      	subs	r1, r1, r3
 8012e5e:	2900      	cmp	r1, #0
 8012e60:	bfb8      	it	lt
 8012e62:	4249      	neglt	r1, r1
 8012e64:	b289      	uxth	r1, r1
 8012e66:	4620      	mov	r0, r4
 8012e68:	f7fd fbae 	bl	80105c8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012e6c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012e70:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012e74:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012edc <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012e78:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012ee0 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012e7c:	429a      	cmp	r2, r3
 8012e7e:	4605      	mov	r5, r0
 8012e80:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012e84:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012e88:	da15      	bge.n	8012eb6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012e8a:	1b5b      	subs	r3, r3, r5
 8012e8c:	ee07 3a90 	vmov	s15, r3
 8012e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e94:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012e98:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012e9c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012ea0:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012ea4:	f015 f829 	bl	8027efa <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012ea8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012eac:	1b49      	subs	r1, r1, r5
 8012eae:	4630      	mov	r0, r6
 8012eb0:	f7ff ffac 	bl	8012e0c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012eb4:	bd70      	pop	{r4, r5, r6, pc}
 8012eb6:	442b      	add	r3, r5
 8012eb8:	ee07 3a90 	vmov	s15, r3
 8012ebc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ec0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012ec4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012ec8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012ecc:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012ed0:	f015 f813 	bl	8027efa <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012ed4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012ed8:	4429      	add	r1, r5
 8012eda:	e7e8      	b.n	8012eae <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012edc:	43340000 	.word	0x43340000
 8012ee0:	40490fdb 	.word	0x40490fdb

08012ee4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012ee4:	b510      	push	{r4, lr}
 8012ee6:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012eea:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012eee:	0149      	lsls	r1, r1, #5
 8012ef0:	0152      	lsls	r2, r2, #5
 8012ef2:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012ef6:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012efa:	4604      	mov	r4, r0
 8012efc:	f7fd faec 	bl	80104d8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012f00:	4601      	mov	r1, r0
 8012f02:	4620      	mov	r0, r4
 8012f04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f08:	f7ff bf96 	b.w	8012e38 <_ZN8touchgfx5Gauge8setValueEi>

08012f0c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012f0c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012f10:	4770      	bx	lr

08012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012f12:	b570      	push	{r4, r5, r6, lr}
 8012f14:	880b      	ldrh	r3, [r1, #0]
 8012f16:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012f18:	4605      	mov	r5, r0
 8012f1a:	8813      	ldrh	r3, [r2, #0]
 8012f1c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012f20:	4604      	mov	r4, r0
 8012f22:	4628      	mov	r0, r5
 8012f24:	f006 fb06 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012f28:	4606      	mov	r6, r0
 8012f2a:	4628      	mov	r0, r5
 8012f2c:	f006 fb36 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012f30:	6823      	ldr	r3, [r4, #0]
 8012f32:	4605      	mov	r5, r0
 8012f34:	4631      	mov	r1, r6
 8012f36:	4620      	mov	r0, r4
 8012f38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012f3a:	4798      	blx	r3
 8012f3c:	6823      	ldr	r3, [r4, #0]
 8012f3e:	4629      	mov	r1, r5
 8012f40:	4620      	mov	r0, r4
 8012f42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012f44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f48:	4718      	bx	r3

08012f4a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012f4a:	b510      	push	{r4, lr}
 8012f4c:	4604      	mov	r4, r0
 8012f4e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012f50:	b150      	cbz	r0, 8012f68 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012f52:	6803      	ldr	r3, [r0, #0]
 8012f54:	68db      	ldr	r3, [r3, #12]
 8012f56:	4798      	blx	r3
 8012f58:	b130      	cbz	r0, 8012f68 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012f5a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012f5c:	6803      	ldr	r3, [r0, #0]
 8012f5e:	4621      	mov	r1, r4
 8012f60:	689b      	ldr	r3, [r3, #8]
 8012f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f66:	4718      	bx	r3
 8012f68:	bd10      	pop	{r4, pc}

08012f6a <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012f6a:	b510      	push	{r4, lr}
 8012f6c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012f70:	2bff      	cmp	r3, #255	; 0xff
 8012f72:	4604      	mov	r4, r0
 8012f74:	d006      	beq.n	8012f84 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012f76:	2300      	movs	r3, #0
 8012f78:	8003      	strh	r3, [r0, #0]
 8012f7a:	8043      	strh	r3, [r0, #2]
 8012f7c:	8083      	strh	r3, [r0, #4]
 8012f7e:	80c3      	strh	r3, [r0, #6]
 8012f80:	4620      	mov	r0, r4
 8012f82:	bd10      	pop	{r4, pc}
 8012f84:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012f88:	b11b      	cbz	r3, 8012f92 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012f8a:	3130      	adds	r1, #48	; 0x30
 8012f8c:	f006 fb3a 	bl	8019604 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012f90:	e7f6      	b.n	8012f80 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012f92:	312e      	adds	r1, #46	; 0x2e
 8012f94:	e7fa      	b.n	8012f8c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012f98 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012f98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f9c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012fa0:	b08a      	sub	sp, #40	; 0x28
 8012fa2:	4604      	mov	r4, r0
 8012fa4:	4688      	mov	r8, r1
 8012fa6:	2b00      	cmp	r3, #0
 8012fa8:	d066      	beq.n	8013078 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012faa:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012fac:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012fb0:	a805      	add	r0, sp, #20
 8012fb2:	f006 fabf 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012fb6:	4607      	mov	r7, r0
 8012fb8:	a805      	add	r0, sp, #20
 8012fba:	f006 faef 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012fbe:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012fc2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012fc6:	4432      	add	r2, r6
 8012fc8:	b292      	uxth	r2, r2
 8012fca:	2300      	movs	r3, #0
 8012fcc:	fa0f fc82 	sxth.w	ip, r2
 8012fd0:	459c      	cmp	ip, r3
 8012fd2:	9306      	str	r3, [sp, #24]
 8012fd4:	dd52      	ble.n	801307c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012fd6:	42b7      	cmp	r7, r6
 8012fd8:	dd50      	ble.n	801307c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012fda:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012fde:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012fe2:	442b      	add	r3, r5
 8012fe4:	b29b      	uxth	r3, r3
 8012fe6:	b219      	sxth	r1, r3
 8012fe8:	2900      	cmp	r1, #0
 8012fea:	dd47      	ble.n	801307c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012fec:	42a8      	cmp	r0, r5
 8012fee:	dd45      	ble.n	801307c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012ff0:	4567      	cmp	r7, ip
 8012ff2:	bfb8      	it	lt
 8012ff4:	b2ba      	uxthlt	r2, r7
 8012ff6:	4288      	cmp	r0, r1
 8012ff8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012ffc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013000:	bfb8      	it	lt
 8013002:	b283      	uxthlt	r3, r0
 8013004:	1b92      	subs	r2, r2, r6
 8013006:	1b5b      	subs	r3, r3, r5
 8013008:	f8ad 201c 	strh.w	r2, [sp, #28]
 801300c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013010:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013014:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013018:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801301c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013020:	429a      	cmp	r2, r3
 8013022:	d026      	beq.n	8013072 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013024:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013028:	2b00      	cmp	r3, #0
 801302a:	dd22      	ble.n	8013072 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801302c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013030:	2b00      	cmp	r3, #0
 8013032:	dd1e      	ble.n	8013072 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013034:	2300      	movs	r3, #0
 8013036:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801303a:	6823      	ldr	r3, [r4, #0]
 801303c:	a908      	add	r1, sp, #32
 801303e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013040:	4620      	mov	r0, r4
 8013042:	4798      	blx	r3
 8013044:	4b0f      	ldr	r3, [pc, #60]	; (8013084 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013046:	681b      	ldr	r3, [r3, #0]
 8013048:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801304c:	b10a      	cbz	r2, 8013052 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801304e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013050:	b900      	cbnz	r0, 8013054 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013052:	6898      	ldr	r0, [r3, #8]
 8013054:	6801      	ldr	r1, [r0, #0]
 8013056:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801305a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801305e:	2501      	movs	r5, #1
 8013060:	9502      	str	r5, [sp, #8]
 8013062:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013066:	9401      	str	r4, [sp, #4]
 8013068:	ac06      	add	r4, sp, #24
 801306a:	9400      	str	r4, [sp, #0]
 801306c:	688c      	ldr	r4, [r1, #8]
 801306e:	a905      	add	r1, sp, #20
 8013070:	47a0      	blx	r4
 8013072:	b00a      	add	sp, #40	; 0x28
 8013074:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013078:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801307a:	e797      	b.n	8012fac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801307c:	2300      	movs	r3, #0
 801307e:	9307      	str	r3, [sp, #28]
 8013080:	e7ca      	b.n	8013018 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013082:	bf00      	nop
 8013084:	20012db4 	.word	0x20012db4

08013088 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013088:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801308c:	b12a      	cbz	r2, 801309a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801308e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013092:	b112      	cbz	r2, 801309a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013094:	6803      	ldr	r3, [r0, #0]
 8013096:	695b      	ldr	r3, [r3, #20]
 8013098:	4718      	bx	r3
 801309a:	4770      	bx	lr

0801309c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801309c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80130a0:	4b2f      	ldr	r3, [pc, #188]	; (8013160 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80130a2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80130a4:	881b      	ldrh	r3, [r3, #0]
 80130a6:	4293      	cmp	r3, r2
 80130a8:	b08d      	sub	sp, #52	; 0x34
 80130aa:	4604      	mov	r4, r0
 80130ac:	460f      	mov	r7, r1
 80130ae:	d954      	bls.n	801315a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80130b0:	4b2c      	ldr	r3, [pc, #176]	; (8013164 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80130b2:	6819      	ldr	r1, [r3, #0]
 80130b4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80130b8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80130bc:	4a2a      	ldr	r2, [pc, #168]	; (8013168 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80130be:	6812      	ldr	r2, [r2, #0]
 80130c0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80130c4:	2900      	cmp	r1, #0
 80130c6:	d048      	beq.n	801315a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80130c8:	785a      	ldrb	r2, [r3, #1]
 80130ca:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80130ce:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80130d2:	4b26      	ldr	r3, [pc, #152]	; (801316c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80130d4:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80130d8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80130dc:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80130e0:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80130e2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80130e6:	9107      	str	r1, [sp, #28]
 80130e8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80130ec:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80130f0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80130f4:	681a      	ldr	r2, [r3, #0]
 80130f6:	f88d 8020 	strb.w	r8, [sp, #32]
 80130fa:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80130fe:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013102:	9609      	str	r6, [sp, #36]	; 0x24
 8013104:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013108:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801310c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013110:	b10b      	cbz	r3, 8013116 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013112:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013114:	b905      	cbnz	r5, 8013118 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013116:	6895      	ldr	r5, [r2, #8]
 8013118:	ae05      	add	r6, sp, #20
 801311a:	4621      	mov	r1, r4
 801311c:	4630      	mov	r0, r6
 801311e:	f003 ff7b 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013122:	4b13      	ldr	r3, [pc, #76]	; (8013170 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013124:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013126:	6818      	ldr	r0, [r3, #0]
 8013128:	f7f5 ffec 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 801312c:	6823      	ldr	r3, [r4, #0]
 801312e:	4680      	mov	r8, r0
 8013130:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013132:	4620      	mov	r0, r4
 8013134:	4798      	blx	r3
 8013136:	6823      	ldr	r3, [r4, #0]
 8013138:	4681      	mov	r9, r0
 801313a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801313e:	4620      	mov	r0, r4
 8013140:	4798      	blx	r3
 8013142:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013146:	ab07      	add	r3, sp, #28
 8013148:	9300      	str	r3, [sp, #0]
 801314a:	f8cd 8004 	str.w	r8, [sp, #4]
 801314e:	463b      	mov	r3, r7
 8013150:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013154:	4628      	mov	r0, r5
 8013156:	f7f5 ff87 	bl	8009068 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801315a:	b00d      	add	sp, #52	; 0x34
 801315c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013160:	20012e10 	.word	0x20012e10
 8013164:	20012e0c 	.word	0x20012e0c
 8013168:	20012e14 	.word	0x20012e14
 801316c:	20012db4 	.word	0x20012db4
 8013170:	20012e18 	.word	0x20012e18

08013174 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013174:	4770      	bx	lr

08013176 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8013176:	4770      	bx	lr

08013178 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013178:	b510      	push	{r4, lr}
 801317a:	213c      	movs	r1, #60	; 0x3c
 801317c:	4604      	mov	r4, r0
 801317e:	f016 fe3e 	bl	8029dfe <_ZdlPvj>
 8013182:	4620      	mov	r0, r4
 8013184:	bd10      	pop	{r4, pc}

08013186 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8013186:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801318a:	461c      	mov	r4, r3
 801318c:	4606      	mov	r6, r0
 801318e:	9f06      	ldr	r7, [sp, #24]
 8013190:	f7ff febf 	bl	8012f12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013194:	8823      	ldrh	r3, [r4, #0]
 8013196:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013198:	883b      	ldrh	r3, [r7, #0]
 801319a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801319c:	4638      	mov	r0, r7
 801319e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80131a2:	f006 f9c7 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131a6:	f04f 0802 	mov.w	r8, #2
 80131aa:	fb95 f5f8 	sdiv	r5, r5, r8
 80131ae:	b2ad      	uxth	r5, r5
 80131b0:	fb90 f0f8 	sdiv	r0, r0, r8
 80131b4:	1a2d      	subs	r5, r5, r0
 80131b6:	8735      	strh	r5, [r6, #56]	; 0x38
 80131b8:	4638      	mov	r0, r7
 80131ba:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80131be:	fb94 f4f8 	sdiv	r4, r4, r8
 80131c2:	f006 f9eb 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131c6:	b2a4      	uxth	r4, r4
 80131c8:	fb90 f0f8 	sdiv	r0, r0, r8
 80131cc:	1a24      	subs	r4, r4, r0
 80131ce:	8774      	strh	r4, [r6, #58]	; 0x3a
 80131d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080131d4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80131d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131d8:	4604      	mov	r4, r0
 80131da:	b08c      	sub	sp, #48	; 0x30
 80131dc:	460d      	mov	r5, r1
 80131de:	f7ff fedb 	bl	8012f98 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80131e2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80131e6:	2b00      	cmp	r3, #0
 80131e8:	d05d      	beq.n	80132a6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80131ea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80131ec:	f8ad 3014 	strh.w	r3, [sp, #20]
 80131f0:	a805      	add	r0, sp, #20
 80131f2:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80131f6:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80131fa:	f006 f99b 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131fe:	4606      	mov	r6, r0
 8013200:	a805      	add	r0, sp, #20
 8013202:	f006 f9cb 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013206:	6869      	ldr	r1, [r5, #4]
 8013208:	f8ad 001e 	strh.w	r0, [sp, #30]
 801320c:	6828      	ldr	r0, [r5, #0]
 801320e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013212:	ab08      	add	r3, sp, #32
 8013214:	ad08      	add	r5, sp, #32
 8013216:	c303      	stmia	r3!, {r0, r1}
 8013218:	a906      	add	r1, sp, #24
 801321a:	4628      	mov	r0, r5
 801321c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013220:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013224:	f7fd fc62 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8013228:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801322c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013230:	429a      	cmp	r2, r3
 8013232:	d035      	beq.n	80132a0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013234:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013238:	2b00      	cmp	r3, #0
 801323a:	dd31      	ble.n	80132a0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801323c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013240:	2b00      	cmp	r3, #0
 8013242:	dd2d      	ble.n	80132a0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013244:	2300      	movs	r3, #0
 8013246:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801324a:	6823      	ldr	r3, [r4, #0]
 801324c:	a90a      	add	r1, sp, #40	; 0x28
 801324e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013250:	4620      	mov	r0, r4
 8013252:	4798      	blx	r3
 8013254:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013258:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801325a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801325e:	1a9b      	subs	r3, r3, r2
 8013260:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013264:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8013266:	1ac9      	subs	r1, r1, r3
 8013268:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801326c:	490f      	ldr	r1, [pc, #60]	; (80132ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801326e:	6809      	ldr	r1, [r1, #0]
 8013270:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013274:	b108      	cbz	r0, 801327a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013276:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013278:	b900      	cbnz	r0, 801327c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801327a:	6888      	ldr	r0, [r1, #8]
 801327c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013280:	440b      	add	r3, r1
 8013282:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013286:	2601      	movs	r6, #1
 8013288:	440a      	add	r2, r1
 801328a:	6801      	ldr	r1, [r0, #0]
 801328c:	9602      	str	r6, [sp, #8]
 801328e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013292:	e9cd 5400 	strd	r5, r4, [sp]
 8013296:	b21b      	sxth	r3, r3
 8013298:	688c      	ldr	r4, [r1, #8]
 801329a:	b212      	sxth	r2, r2
 801329c:	a905      	add	r1, sp, #20
 801329e:	47a0      	blx	r4
 80132a0:	b00c      	add	sp, #48	; 0x30
 80132a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132a6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80132a8:	e7a0      	b.n	80131ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80132aa:	bf00      	nop
 80132ac:	20012db4 	.word	0x20012db4

080132b0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80132b0:	b510      	push	{r4, lr}
 80132b2:	2101      	movs	r1, #1
 80132b4:	2200      	movs	r2, #0
 80132b6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80132ba:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80132be:	4c0e      	ldr	r4, [pc, #56]	; (80132f8 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80132c0:	8082      	strh	r2, [r0, #4]
 80132c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80132c6:	80c2      	strh	r2, [r0, #6]
 80132c8:	8102      	strh	r2, [r0, #8]
 80132ca:	8142      	strh	r2, [r0, #10]
 80132cc:	8182      	strh	r2, [r0, #12]
 80132ce:	81c2      	strh	r2, [r0, #14]
 80132d0:	8202      	strh	r2, [r0, #16]
 80132d2:	8242      	strh	r2, [r0, #18]
 80132d4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80132d8:	61c2      	str	r2, [r0, #28]
 80132da:	8402      	strh	r2, [r0, #32]
 80132dc:	8442      	strh	r2, [r0, #34]	; 0x22
 80132de:	6282      	str	r2, [r0, #40]	; 0x28
 80132e0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80132e4:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80132e6:	8601      	strh	r1, [r0, #48]	; 0x30
 80132e8:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80132ec:	6004      	str	r4, [r0, #0]
 80132ee:	8681      	strh	r1, [r0, #52]	; 0x34
 80132f0:	86c1      	strh	r1, [r0, #54]	; 0x36
 80132f2:	8702      	strh	r2, [r0, #56]	; 0x38
 80132f4:	8742      	strh	r2, [r0, #58]	; 0x3a
 80132f6:	bd10      	pop	{r4, pc}
 80132f8:	0802f270 	.word	0x0802f270

080132fc <_ZN8touchgfx5ImageD1Ev>:
 80132fc:	4770      	bx	lr

080132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80132fe:	b570      	push	{r4, r5, r6, lr}
 8013300:	880b      	ldrh	r3, [r1, #0]
 8013302:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013304:	4604      	mov	r4, r0
 8013306:	4608      	mov	r0, r1
 8013308:	460d      	mov	r5, r1
 801330a:	f006 f913 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801330e:	4606      	mov	r6, r0
 8013310:	4628      	mov	r0, r5
 8013312:	f006 f943 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013316:	6823      	ldr	r3, [r4, #0]
 8013318:	4605      	mov	r5, r0
 801331a:	4631      	mov	r1, r6
 801331c:	4620      	mov	r0, r4
 801331e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013320:	4798      	blx	r3
 8013322:	6823      	ldr	r3, [r4, #0]
 8013324:	4629      	mov	r1, r5
 8013326:	4620      	mov	r0, r4
 8013328:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801332a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801332e:	4718      	bx	r3

08013330 <_ZN8touchgfx5ImageD0Ev>:
 8013330:	b510      	push	{r4, lr}
 8013332:	212c      	movs	r1, #44	; 0x2c
 8013334:	4604      	mov	r4, r0
 8013336:	f016 fd62 	bl	8029dfe <_ZdlPvj>
 801333a:	4620      	mov	r0, r4
 801333c:	bd10      	pop	{r4, pc}

0801333e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801333e:	b510      	push	{r4, lr}
 8013340:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013344:	2bff      	cmp	r3, #255	; 0xff
 8013346:	4604      	mov	r4, r0
 8013348:	d006      	beq.n	8013358 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801334a:	2300      	movs	r3, #0
 801334c:	8003      	strh	r3, [r0, #0]
 801334e:	8043      	strh	r3, [r0, #2]
 8013350:	8083      	strh	r3, [r0, #4]
 8013352:	80c3      	strh	r3, [r0, #6]
 8013354:	4620      	mov	r0, r4
 8013356:	bd10      	pop	{r4, pc}
 8013358:	3126      	adds	r1, #38	; 0x26
 801335a:	f006 f953 	bl	8019604 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801335e:	e7f9      	b.n	8013354 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013360 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013360:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013364:	b12a      	cbz	r2, 8013372 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013366:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801336a:	b112      	cbz	r2, 8013372 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801336c:	6803      	ldr	r3, [r0, #0]
 801336e:	695b      	ldr	r3, [r3, #20]
 8013370:	4718      	bx	r3
 8013372:	4770      	bx	lr

08013374 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013378:	4604      	mov	r4, r0
 801337a:	b088      	sub	sp, #32
 801337c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013380:	2500      	movs	r5, #0
 8013382:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013384:	460f      	mov	r7, r1
 8013386:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801338a:	a904      	add	r1, sp, #16
 801338c:	4606      	mov	r6, r0
 801338e:	4798      	blx	r3
 8013390:	4620      	mov	r0, r4
 8013392:	f006 f8cf 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013396:	4680      	mov	r8, r0
 8013398:	4620      	mov	r0, r4
 801339a:	f006 f8ff 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801339e:	9506      	str	r5, [sp, #24]
 80133a0:	ad06      	add	r5, sp, #24
 80133a2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80133a6:	4639      	mov	r1, r7
 80133a8:	4628      	mov	r0, r5
 80133aa:	f8ad 801c 	strh.w	r8, [sp, #28]
 80133ae:	f7fd fb9d 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 80133b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80133b6:	2b00      	cmp	r3, #0
 80133b8:	dd19      	ble.n	80133ee <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80133ba:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80133be:	2b00      	cmp	r3, #0
 80133c0:	dd15      	ble.n	80133ee <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80133c2:	4b0c      	ldr	r3, [pc, #48]	; (80133f4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80133c4:	681b      	ldr	r3, [r3, #0]
 80133c6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80133ca:	b10a      	cbz	r2, 80133d0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80133cc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80133ce:	b900      	cbnz	r0, 80133d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80133d0:	6898      	ldr	r0, [r3, #8]
 80133d2:	6801      	ldr	r1, [r0, #0]
 80133d4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80133d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80133dc:	2701      	movs	r7, #1
 80133de:	9702      	str	r7, [sp, #8]
 80133e0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80133e4:	e9cd 5600 	strd	r5, r6, [sp]
 80133e8:	688d      	ldr	r5, [r1, #8]
 80133ea:	4621      	mov	r1, r4
 80133ec:	47a8      	blx	r5
 80133ee:	b008      	add	sp, #32
 80133f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80133f4:	20012db4 	.word	0x20012db4

080133f8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80133f8:	4770      	bx	lr

080133fa <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80133fa:	b510      	push	{r4, lr}
 80133fc:	2148      	movs	r1, #72	; 0x48
 80133fe:	4604      	mov	r4, r0
 8013400:	f016 fcfd 	bl	8029dfe <_ZdlPvj>
 8013404:	4620      	mov	r0, r4
 8013406:	bd10      	pop	{r4, pc}

08013408 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013408:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801340c:	b08d      	sub	sp, #52	; 0x34
 801340e:	4604      	mov	r4, r0
 8013410:	460f      	mov	r7, r1
 8013412:	f7ff fdc1 	bl	8012f98 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013416:	4a55      	ldr	r2, [pc, #340]	; (801356c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013418:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801341a:	8812      	ldrh	r2, [r2, #0]
 801341c:	429a      	cmp	r2, r3
 801341e:	f240 8082 	bls.w	8013526 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013422:	4d53      	ldr	r5, [pc, #332]	; (8013570 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013424:	682a      	ldr	r2, [r5, #0]
 8013426:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801342a:	4b52      	ldr	r3, [pc, #328]	; (8013574 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801342c:	681b      	ldr	r3, [r3, #0]
 801342e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013432:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013436:	2200      	movs	r2, #0
 8013438:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801343c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013440:	2a03      	cmp	r2, #3
 8013442:	d811      	bhi.n	8013468 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013444:	e8df f002 	tbb	[pc, r2]
 8013448:	89727902 	.word	0x89727902
 801344c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013450:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013454:	1ad2      	subs	r2, r2, r3
 8013456:	2002      	movs	r0, #2
 8013458:	f8ad 1010 	strh.w	r1, [sp, #16]
 801345c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013460:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013464:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013468:	f10d 080c 	add.w	r8, sp, #12
 801346c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013470:	f10d 0914 	add.w	r9, sp, #20
 8013474:	e889 0003 	stmia.w	r9, {r0, r1}
 8013478:	4639      	mov	r1, r7
 801347a:	4648      	mov	r0, r9
 801347c:	f7fd fb36 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8013480:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013484:	2b00      	cmp	r3, #0
 8013486:	dd4e      	ble.n	8013526 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013488:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801348c:	2b00      	cmp	r3, #0
 801348e:	dd4a      	ble.n	8013526 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013490:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013494:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013498:	1a9b      	subs	r3, r3, r2
 801349a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801349e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80134a2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80134a6:	1a9b      	subs	r3, r3, r2
 80134a8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80134ac:	6823      	ldr	r3, [r4, #0]
 80134ae:	4641      	mov	r1, r8
 80134b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80134b2:	4620      	mov	r0, r4
 80134b4:	4798      	blx	r3
 80134b6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80134ba:	2b00      	cmp	r3, #0
 80134bc:	d053      	beq.n	8013566 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80134be:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80134c0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80134c2:	682b      	ldr	r3, [r5, #0]
 80134c4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80134c8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80134cc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80134d0:	785b      	ldrb	r3, [r3, #1]
 80134d2:	9209      	str	r2, [sp, #36]	; 0x24
 80134d4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80134d8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80134dc:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80134e0:	2300      	movs	r3, #0
 80134e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80134e6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80134ea:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80134ee:	4b22      	ldr	r3, [pc, #136]	; (8013578 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80134f0:	9607      	str	r6, [sp, #28]
 80134f2:	681b      	ldr	r3, [r3, #0]
 80134f4:	f88d 5020 	strb.w	r5, [sp, #32]
 80134f8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80134fc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013500:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013504:	b10a      	cbz	r2, 801350a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013506:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013508:	b904      	cbnz	r4, 801350c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801350a:	689c      	ldr	r4, [r3, #8]
 801350c:	4b1b      	ldr	r3, [pc, #108]	; (801357c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801350e:	6818      	ldr	r0, [r3, #0]
 8013510:	f7f5 fdf8 	bl	8009104 <_ZNK8touchgfx5Texts7getTextEt>
 8013514:	ab07      	add	r3, sp, #28
 8013516:	9001      	str	r0, [sp, #4]
 8013518:	9300      	str	r3, [sp, #0]
 801351a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801351e:	464b      	mov	r3, r9
 8013520:	4620      	mov	r0, r4
 8013522:	f7f5 fda1 	bl	8009068 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013526:	b00d      	add	sp, #52	; 0x34
 8013528:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801352c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013530:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013534:	1ad2      	subs	r2, r2, r3
 8013536:	3201      	adds	r2, #1
 8013538:	e78d      	b.n	8013456 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801353a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801353e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013542:	1ad2      	subs	r2, r2, r3
 8013544:	3201      	adds	r2, #1
 8013546:	2002      	movs	r0, #2
 8013548:	f8ad 3010 	strh.w	r3, [sp, #16]
 801354c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013550:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013554:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013558:	e786      	b.n	8013468 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801355a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801355e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013562:	1ad2      	subs	r2, r2, r3
 8013564:	e7ef      	b.n	8013546 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013566:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013568:	e7aa      	b.n	80134c0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801356a:	bf00      	nop
 801356c:	20012e10 	.word	0x20012e10
 8013570:	20012e0c 	.word	0x20012e0c
 8013574:	20012e14 	.word	0x20012e14
 8013578:	20012db4 	.word	0x20012db4
 801357c:	20012e18 	.word	0x20012e18

08013580 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013580:	b510      	push	{r4, lr}
 8013582:	2101      	movs	r1, #1
 8013584:	4c13      	ldr	r4, [pc, #76]	; (80135d4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013586:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801358a:	2200      	movs	r2, #0
 801358c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013590:	6004      	str	r4, [r0, #0]
 8013592:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013596:	4c10      	ldr	r4, [pc, #64]	; (80135d8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013598:	8082      	strh	r2, [r0, #4]
 801359a:	80c2      	strh	r2, [r0, #6]
 801359c:	8102      	strh	r2, [r0, #8]
 801359e:	8142      	strh	r2, [r0, #10]
 80135a0:	8182      	strh	r2, [r0, #12]
 80135a2:	81c2      	strh	r2, [r0, #14]
 80135a4:	8202      	strh	r2, [r0, #16]
 80135a6:	8242      	strh	r2, [r0, #18]
 80135a8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80135ac:	61c2      	str	r2, [r0, #28]
 80135ae:	8402      	strh	r2, [r0, #32]
 80135b0:	8442      	strh	r2, [r0, #34]	; 0x22
 80135b2:	6282      	str	r2, [r0, #40]	; 0x28
 80135b4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80135b8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80135ba:	8601      	strh	r1, [r0, #48]	; 0x30
 80135bc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80135c0:	6344      	str	r4, [r0, #52]	; 0x34
 80135c2:	8701      	strh	r1, [r0, #56]	; 0x38
 80135c4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80135c8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80135cc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80135d0:	bd10      	pop	{r4, pc}
 80135d2:	bf00      	nop
 80135d4:	0802f354 	.word	0x0802f354
 80135d8:	0802c7c0 	.word	0x0802c7c0

080135dc <_ZN8touchgfx7OutlineD1Ev>:
 80135dc:	4770      	bx	lr

080135de <_ZN8touchgfx7OutlineD0Ev>:
 80135de:	b510      	push	{r4, lr}
 80135e0:	2130      	movs	r1, #48	; 0x30
 80135e2:	4604      	mov	r4, r0
 80135e4:	f016 fc0b 	bl	8029dfe <_ZdlPvj>
 80135e8:	4620      	mov	r0, r4
 80135ea:	bd10      	pop	{r4, pc}

080135ec <_ZN8touchgfx7Outline5resetEv>:
 80135ec:	b510      	push	{r4, lr}
 80135ee:	4604      	mov	r4, r0
 80135f0:	f000 fe96 	bl	8014320 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80135f4:	60e0      	str	r0, [r4, #12]
 80135f6:	f000 fe99 	bl	801432c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80135fa:	68e3      	ldr	r3, [r4, #12]
 80135fc:	6123      	str	r3, [r4, #16]
 80135fe:	08c0      	lsrs	r0, r0, #3
 8013600:	2200      	movs	r2, #0
 8013602:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013606:	3801      	subs	r0, #1
 8013608:	6060      	str	r0, [r4, #4]
 801360a:	60a2      	str	r2, [r4, #8]
 801360c:	8019      	strh	r1, [r3, #0]
 801360e:	8059      	strh	r1, [r3, #2]
 8013610:	809a      	strh	r2, [r3, #4]
 8013612:	80da      	strh	r2, [r3, #6]
 8013614:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013616:	f023 0301 	bic.w	r3, r3, #1
 801361a:	f043 0302 	orr.w	r3, r3, #2
 801361e:	6263      	str	r3, [r4, #36]	; 0x24
 8013620:	bd10      	pop	{r4, pc}
	...

08013624 <_ZN8touchgfx7OutlineC1Ev>:
 8013624:	b510      	push	{r4, lr}
 8013626:	4b0a      	ldr	r3, [pc, #40]	; (8013650 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013628:	6003      	str	r3, [r0, #0]
 801362a:	2300      	movs	r3, #0
 801362c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013630:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013634:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013638:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801363c:	6243      	str	r3, [r0, #36]	; 0x24
 801363e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8013642:	4604      	mov	r4, r0
 8013644:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013648:	f7ff ffd0 	bl	80135ec <_ZN8touchgfx7Outline5resetEv>
 801364c:	4620      	mov	r0, r4
 801364e:	bd10      	pop	{r4, pc}
 8013650:	0802f3c8 	.word	0x0802f3c8

08013654 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013658:	b093      	sub	sp, #76	; 0x4c
 801365a:	1156      	asrs	r6, r2, #5
 801365c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801365e:	9305      	str	r3, [sp, #20]
 8013660:	f004 051f 	and.w	r5, r4, #31
 8013664:	1153      	asrs	r3, r2, #5
 8013666:	9504      	str	r5, [sp, #16]
 8013668:	1165      	asrs	r5, r4, #5
 801366a:	9303      	str	r3, [sp, #12]
 801366c:	42ae      	cmp	r6, r5
 801366e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013672:	9306      	str	r3, [sp, #24]
 8013674:	f002 031f 	and.w	r3, r2, #31
 8013678:	f040 80f8 	bne.w	801386c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801367c:	9c04      	ldr	r4, [sp, #16]
 801367e:	9a05      	ldr	r2, [sp, #20]
 8013680:	42a3      	cmp	r3, r4
 8013682:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013686:	6902      	ldr	r2, [r0, #16]
 8013688:	d125      	bne.n	80136d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801368a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801368e:	459e      	cmp	lr, r3
 8013690:	d103      	bne.n	801369a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013692:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013696:	429e      	cmp	r6, r3
 8013698:	d035      	beq.n	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801369a:	88d1      	ldrh	r1, [r2, #6]
 801369c:	8893      	ldrh	r3, [r2, #4]
 801369e:	430b      	orrs	r3, r1
 80136a0:	d010      	beq.n	80136c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80136a2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80136a6:	2b00      	cmp	r3, #0
 80136a8:	db0c      	blt.n	80136c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80136aa:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80136ac:	428b      	cmp	r3, r1
 80136ae:	da09      	bge.n	80136c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80136b0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80136b4:	428b      	cmp	r3, r1
 80136b6:	bf38      	it	cc
 80136b8:	3208      	addcc	r2, #8
 80136ba:	f103 0301 	add.w	r3, r3, #1
 80136be:	bf38      	it	cc
 80136c0:	6102      	strcc	r2, [r0, #16]
 80136c2:	6083      	str	r3, [r0, #8]
 80136c4:	6903      	ldr	r3, [r0, #16]
 80136c6:	9a03      	ldr	r2, [sp, #12]
 80136c8:	f8a3 e000 	strh.w	lr, [r3]
 80136cc:	805a      	strh	r2, [r3, #2]
 80136ce:	2200      	movs	r2, #0
 80136d0:	809a      	strh	r2, [r3, #4]
 80136d2:	80da      	strh	r2, [r3, #6]
 80136d4:	e017      	b.n	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80136d6:	9c05      	ldr	r4, [sp, #20]
 80136d8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80136dc:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80136e0:	f004 041f 	and.w	r4, r4, #31
 80136e4:	114e      	asrs	r6, r1, #5
 80136e6:	9402      	str	r4, [sp, #8]
 80136e8:	9c04      	ldr	r4, [sp, #16]
 80136ea:	4576      	cmp	r6, lr
 80136ec:	f001 0c1f 	and.w	ip, r1, #31
 80136f0:	eba4 0403 	sub.w	r4, r4, r3
 80136f4:	d10a      	bne.n	801370c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80136f6:	9b02      	ldr	r3, [sp, #8]
 80136f8:	449c      	add	ip, r3
 80136fa:	44a0      	add	r8, r4
 80136fc:	fb04 a40c 	mla	r4, r4, ip, sl
 8013700:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013704:	80d4      	strh	r4, [r2, #6]
 8013706:	b013      	add	sp, #76	; 0x4c
 8013708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801370c:	9d05      	ldr	r5, [sp, #20]
 801370e:	1a69      	subs	r1, r5, r1
 8013710:	bf5b      	ittet	pl
 8013712:	f1cc 0520 	rsbpl	r5, ip, #32
 8013716:	436c      	mulpl	r4, r5
 8013718:	2500      	movmi	r5, #0
 801371a:	2520      	movpl	r5, #32
 801371c:	bf44      	itt	mi
 801371e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013722:	4249      	negmi	r1, r1
 8013724:	9501      	str	r5, [sp, #4]
 8013726:	9f01      	ldr	r7, [sp, #4]
 8013728:	fb94 f5f1 	sdiv	r5, r4, r1
 801372c:	fb01 4415 	mls	r4, r1, r5, r4
 8013730:	bf54      	ite	pl
 8013732:	f04f 0901 	movpl.w	r9, #1
 8013736:	f04f 39ff 	movmi.w	r9, #4294967295
 801373a:	2c00      	cmp	r4, #0
 801373c:	bfb8      	it	lt
 801373e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013742:	44bc      	add	ip, r7
 8013744:	44a8      	add	r8, r5
 8013746:	fb05 ac0c 	mla	ip, r5, ip, sl
 801374a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801374e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013752:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013756:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801375a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801375e:	bfb8      	it	lt
 8013760:	1864      	addlt	r4, r4, r1
 8013762:	ea58 0202 	orrs.w	r2, r8, r2
 8013766:	444e      	add	r6, r9
 8013768:	d011      	beq.n	801378e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801376a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801376e:	f1b8 0f00 	cmp.w	r8, #0
 8013772:	db0c      	blt.n	801378e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013774:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013776:	4590      	cmp	r8, r2
 8013778:	da09      	bge.n	801378e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801377a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801377e:	4590      	cmp	r8, r2
 8013780:	bf3c      	itt	cc
 8013782:	f10c 0208 	addcc.w	r2, ip, #8
 8013786:	6102      	strcc	r2, [r0, #16]
 8013788:	f108 0201 	add.w	r2, r8, #1
 801378c:	6082      	str	r2, [r0, #8]
 801378e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013792:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013796:	f8ac 6000 	strh.w	r6, [ip]
 801379a:	2700      	movs	r7, #0
 801379c:	45b6      	cmp	lr, r6
 801379e:	f8ac 2002 	strh.w	r2, [ip, #2]
 80137a2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80137a6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80137aa:	442b      	add	r3, r5
 80137ac:	d04d      	beq.n	801384a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80137ae:	9f04      	ldr	r7, [sp, #16]
 80137b0:	1aff      	subs	r7, r7, r3
 80137b2:	443d      	add	r5, r7
 80137b4:	016d      	lsls	r5, r5, #5
 80137b6:	fb95 f8f1 	sdiv	r8, r5, r1
 80137ba:	fb01 5518 	mls	r5, r1, r8, r5
 80137be:	2d00      	cmp	r5, #0
 80137c0:	bfb8      	it	lt
 80137c2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80137c6:	f108 0701 	add.w	r7, r8, #1
 80137ca:	bfb8      	it	lt
 80137cc:	186d      	addlt	r5, r5, r1
 80137ce:	1a64      	subs	r4, r4, r1
 80137d0:	9703      	str	r7, [sp, #12]
 80137d2:	f04f 0a00 	mov.w	sl, #0
 80137d6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80137da:	1964      	adds	r4, r4, r5
 80137dc:	bf58      	it	pl
 80137de:	9f03      	ldrpl	r7, [sp, #12]
 80137e0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80137e4:	bf48      	it	mi
 80137e6:	4647      	movmi	r7, r8
 80137e8:	44bb      	add	fp, r7
 80137ea:	f8ac b004 	strh.w	fp, [ip, #4]
 80137ee:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80137f2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80137f6:	f8ac b006 	strh.w	fp, [ip, #6]
 80137fa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80137fe:	443b      	add	r3, r7
 8013800:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013804:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013808:	bf58      	it	pl
 801380a:	1a64      	subpl	r4, r4, r1
 801380c:	ea5b 0707 	orrs.w	r7, fp, r7
 8013810:	444e      	add	r6, r9
 8013812:	d011      	beq.n	8013838 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013814:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013818:	f1bb 0f00 	cmp.w	fp, #0
 801381c:	db0c      	blt.n	8013838 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801381e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013820:	45bb      	cmp	fp, r7
 8013822:	da09      	bge.n	8013838 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013824:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013828:	45bb      	cmp	fp, r7
 801382a:	bf3c      	itt	cc
 801382c:	f10c 0708 	addcc.w	r7, ip, #8
 8013830:	6107      	strcc	r7, [r0, #16]
 8013832:	f10b 0701 	add.w	r7, fp, #1
 8013836:	6087      	str	r7, [r0, #8]
 8013838:	6907      	ldr	r7, [r0, #16]
 801383a:	45b6      	cmp	lr, r6
 801383c:	803e      	strh	r6, [r7, #0]
 801383e:	807a      	strh	r2, [r7, #2]
 8013840:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013844:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013848:	d1c5      	bne.n	80137d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801384a:	9a04      	ldr	r2, [sp, #16]
 801384c:	1ad3      	subs	r3, r2, r3
 801384e:	6902      	ldr	r2, [r0, #16]
 8013850:	8891      	ldrh	r1, [r2, #4]
 8013852:	88d6      	ldrh	r6, [r2, #6]
 8013854:	4419      	add	r1, r3
 8013856:	8091      	strh	r1, [r2, #4]
 8013858:	9902      	ldr	r1, [sp, #8]
 801385a:	f101 0c20 	add.w	ip, r1, #32
 801385e:	9901      	ldr	r1, [sp, #4]
 8013860:	ebac 0c01 	sub.w	ip, ip, r1
 8013864:	fb03 630c 	mla	r3, r3, ip, r6
 8013868:	80d3      	strh	r3, [r2, #6]
 801386a:	e74c      	b.n	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801386c:	9d05      	ldr	r5, [sp, #20]
 801386e:	1aa2      	subs	r2, r4, r2
 8013870:	eba5 0501 	sub.w	r5, r5, r1
 8013874:	9508      	str	r5, [sp, #32]
 8013876:	9202      	str	r2, [sp, #8]
 8013878:	f140 8128 	bpl.w	8013acc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801387c:	9a03      	ldr	r2, [sp, #12]
 801387e:	2a00      	cmp	r2, #0
 8013880:	f6ff af41 	blt.w	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013884:	9a02      	ldr	r2, [sp, #8]
 8013886:	4252      	negs	r2, r2
 8013888:	9202      	str	r2, [sp, #8]
 801388a:	9a06      	ldr	r2, [sp, #24]
 801388c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013890:	f04f 34ff 	mov.w	r4, #4294967295
 8013894:	9206      	str	r2, [sp, #24]
 8013896:	462a      	mov	r2, r5
 8013898:	940b      	str	r4, [sp, #44]	; 0x2c
 801389a:	435a      	muls	r2, r3
 801389c:	2400      	movs	r4, #0
 801389e:	9d02      	ldr	r5, [sp, #8]
 80138a0:	9401      	str	r4, [sp, #4]
 80138a2:	9c02      	ldr	r4, [sp, #8]
 80138a4:	fb92 f4f4 	sdiv	r4, r2, r4
 80138a8:	fb05 2214 	mls	r2, r5, r4, r2
 80138ac:	2a00      	cmp	r2, #0
 80138ae:	9207      	str	r2, [sp, #28]
 80138b0:	bfbc      	itt	lt
 80138b2:	1952      	addlt	r2, r2, r5
 80138b4:	9207      	strlt	r2, [sp, #28]
 80138b6:	9a01      	ldr	r2, [sp, #4]
 80138b8:	6905      	ldr	r5, [r0, #16]
 80138ba:	bfb8      	it	lt
 80138bc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80138c0:	eb04 0901 	add.w	r9, r4, r1
 80138c4:	429a      	cmp	r2, r3
 80138c6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80138ca:	f040 8112 	bne.w	8013af2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80138ce:	f9b5 3000 	ldrsh.w	r3, [r5]
 80138d2:	429e      	cmp	r6, r3
 80138d4:	d104      	bne.n	80138e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80138d6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80138da:	9a03      	ldr	r2, [sp, #12]
 80138dc:	429a      	cmp	r2, r3
 80138de:	d01b      	beq.n	8013918 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80138e0:	88ea      	ldrh	r2, [r5, #6]
 80138e2:	88ab      	ldrh	r3, [r5, #4]
 80138e4:	4313      	orrs	r3, r2
 80138e6:	d010      	beq.n	801390a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80138e8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80138ec:	2a00      	cmp	r2, #0
 80138ee:	db0c      	blt.n	801390a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80138f0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80138f2:	429a      	cmp	r2, r3
 80138f4:	da09      	bge.n	801390a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80138f6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80138fa:	429a      	cmp	r2, r3
 80138fc:	bf38      	it	cc
 80138fe:	3508      	addcc	r5, #8
 8013900:	f102 0201 	add.w	r2, r2, #1
 8013904:	bf38      	it	cc
 8013906:	6105      	strcc	r5, [r0, #16]
 8013908:	6082      	str	r2, [r0, #8]
 801390a:	6903      	ldr	r3, [r0, #16]
 801390c:	9a03      	ldr	r2, [sp, #12]
 801390e:	805a      	strh	r2, [r3, #2]
 8013910:	2200      	movs	r2, #0
 8013912:	801e      	strh	r6, [r3, #0]
 8013914:	809a      	strh	r2, [r3, #4]
 8013916:	80da      	strh	r2, [r3, #6]
 8013918:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801391a:	9a03      	ldr	r2, [sp, #12]
 801391c:	6901      	ldr	r1, [r0, #16]
 801391e:	441a      	add	r2, r3
 8013920:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013924:	42b3      	cmp	r3, r6
 8013926:	d103      	bne.n	8013930 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013928:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801392c:	429a      	cmp	r2, r3
 801392e:	d01a      	beq.n	8013966 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8013930:	88cc      	ldrh	r4, [r1, #6]
 8013932:	888b      	ldrh	r3, [r1, #4]
 8013934:	4323      	orrs	r3, r4
 8013936:	d010      	beq.n	801395a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013938:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801393c:	2c00      	cmp	r4, #0
 801393e:	db0c      	blt.n	801395a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013940:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013942:	429c      	cmp	r4, r3
 8013944:	da09      	bge.n	801395a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013946:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801394a:	429c      	cmp	r4, r3
 801394c:	bf38      	it	cc
 801394e:	3108      	addcc	r1, #8
 8013950:	f104 0401 	add.w	r4, r4, #1
 8013954:	bf38      	it	cc
 8013956:	6101      	strcc	r1, [r0, #16]
 8013958:	6084      	str	r4, [r0, #8]
 801395a:	6903      	ldr	r3, [r0, #16]
 801395c:	2100      	movs	r1, #0
 801395e:	801e      	strh	r6, [r3, #0]
 8013960:	805a      	strh	r2, [r3, #2]
 8013962:	8099      	strh	r1, [r3, #4]
 8013964:	80d9      	strh	r1, [r3, #6]
 8013966:	9b06      	ldr	r3, [sp, #24]
 8013968:	4293      	cmp	r3, r2
 801396a:	f000 8082 	beq.w	8013a72 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801396e:	9b08      	ldr	r3, [sp, #32]
 8013970:	9c02      	ldr	r4, [sp, #8]
 8013972:	9902      	ldr	r1, [sp, #8]
 8013974:	015b      	lsls	r3, r3, #5
 8013976:	fb93 f1f1 	sdiv	r1, r3, r1
 801397a:	fb04 3311 	mls	r3, r4, r1, r3
 801397e:	2b00      	cmp	r3, #0
 8013980:	9103      	str	r1, [sp, #12]
 8013982:	9308      	str	r3, [sp, #32]
 8013984:	da04      	bge.n	8013990 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013986:	1e4b      	subs	r3, r1, #1
 8013988:	9303      	str	r3, [sp, #12]
 801398a:	9b08      	ldr	r3, [sp, #32]
 801398c:	4423      	add	r3, r4
 801398e:	9308      	str	r3, [sp, #32]
 8013990:	9b07      	ldr	r3, [sp, #28]
 8013992:	9902      	ldr	r1, [sp, #8]
 8013994:	1a5b      	subs	r3, r3, r1
 8013996:	9307      	str	r3, [sp, #28]
 8013998:	9b01      	ldr	r3, [sp, #4]
 801399a:	f1c3 0320 	rsb	r3, r3, #32
 801399e:	930e      	str	r3, [sp, #56]	; 0x38
 80139a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80139a2:	9b01      	ldr	r3, [sp, #4]
 80139a4:	1a5b      	subs	r3, r3, r1
 80139a6:	464f      	mov	r7, r9
 80139a8:	930a      	str	r3, [sp, #40]	; 0x28
 80139aa:	2600      	movs	r6, #0
 80139ac:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80139b0:	185b      	adds	r3, r3, r1
 80139b2:	bf58      	it	pl
 80139b4:	9902      	ldrpl	r1, [sp, #8]
 80139b6:	9307      	str	r3, [sp, #28]
 80139b8:	bf5d      	ittte	pl
 80139ba:	1a5b      	subpl	r3, r3, r1
 80139bc:	9307      	strpl	r3, [sp, #28]
 80139be:	9b03      	ldrpl	r3, [sp, #12]
 80139c0:	9903      	ldrmi	r1, [sp, #12]
 80139c2:	bf58      	it	pl
 80139c4:	1c59      	addpl	r1, r3, #1
 80139c6:	4489      	add	r9, r1
 80139c8:	2a00      	cmp	r2, #0
 80139ca:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80139ce:	db2e      	blt.n	8013a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80139d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80139d2:	4293      	cmp	r3, r2
 80139d4:	dd2b      	ble.n	8013a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80139d6:	9c01      	ldr	r4, [sp, #4]
 80139d8:	6905      	ldr	r5, [r0, #16]
 80139da:	46a0      	mov	r8, r4
 80139dc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80139de:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80139e2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80139e6:	45a0      	cmp	r8, r4
 80139e8:	f040 814f 	bne.w	8013c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80139ec:	f9b5 1000 	ldrsh.w	r1, [r5]
 80139f0:	4551      	cmp	r1, sl
 80139f2:	d103      	bne.n	80139fc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80139f4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80139f8:	4291      	cmp	r1, r2
 80139fa:	d018      	beq.n	8013a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80139fc:	ea5c 010e 	orrs.w	r1, ip, lr
 8013a00:	d00f      	beq.n	8013a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a02:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013a06:	2900      	cmp	r1, #0
 8013a08:	db0b      	blt.n	8013a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a0a:	428b      	cmp	r3, r1
 8013a0c:	dd09      	ble.n	8013a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013a0e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013a12:	4299      	cmp	r1, r3
 8013a14:	bf38      	it	cc
 8013a16:	3508      	addcc	r5, #8
 8013a18:	f101 0101 	add.w	r1, r1, #1
 8013a1c:	bf38      	it	cc
 8013a1e:	6105      	strcc	r5, [r0, #16]
 8013a20:	6081      	str	r1, [r0, #8]
 8013a22:	6903      	ldr	r3, [r0, #16]
 8013a24:	f8a3 a000 	strh.w	sl, [r3]
 8013a28:	805a      	strh	r2, [r3, #2]
 8013a2a:	809e      	strh	r6, [r3, #4]
 8013a2c:	80de      	strh	r6, [r3, #6]
 8013a2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a30:	6901      	ldr	r1, [r0, #16]
 8013a32:	441a      	add	r2, r3
 8013a34:	88cc      	ldrh	r4, [r1, #6]
 8013a36:	888b      	ldrh	r3, [r1, #4]
 8013a38:	4323      	orrs	r3, r4
 8013a3a:	d010      	beq.n	8013a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013a3c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013a40:	2c00      	cmp	r4, #0
 8013a42:	db0c      	blt.n	8013a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013a44:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013a46:	429c      	cmp	r4, r3
 8013a48:	da09      	bge.n	8013a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013a4a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013a4e:	429c      	cmp	r4, r3
 8013a50:	bf38      	it	cc
 8013a52:	3108      	addcc	r1, #8
 8013a54:	f104 0401 	add.w	r4, r4, #1
 8013a58:	bf38      	it	cc
 8013a5a:	6101      	strcc	r1, [r0, #16]
 8013a5c:	6084      	str	r4, [r0, #8]
 8013a5e:	6903      	ldr	r3, [r0, #16]
 8013a60:	f8a3 a000 	strh.w	sl, [r3]
 8013a64:	805a      	strh	r2, [r3, #2]
 8013a66:	809e      	strh	r6, [r3, #4]
 8013a68:	80de      	strh	r6, [r3, #6]
 8013a6a:	9b06      	ldr	r3, [sp, #24]
 8013a6c:	4293      	cmp	r3, r2
 8013a6e:	464f      	mov	r7, r9
 8013a70:	d19c      	bne.n	80139ac <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013a72:	9b01      	ldr	r3, [sp, #4]
 8013a74:	6907      	ldr	r7, [r0, #16]
 8013a76:	f1c3 0620 	rsb	r6, r3, #32
 8013a7a:	9b05      	ldr	r3, [sp, #20]
 8013a7c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013a80:	9b04      	ldr	r3, [sp, #16]
 8013a82:	429e      	cmp	r6, r3
 8013a84:	f040 81cc 	bne.w	8013e20 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013a88:	f9b7 3000 	ldrsh.w	r3, [r7]
 8013a8c:	459e      	cmp	lr, r3
 8013a8e:	d104      	bne.n	8013a9a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013a90:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013a94:	429a      	cmp	r2, r3
 8013a96:	f43f ae36 	beq.w	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013a9a:	88f9      	ldrh	r1, [r7, #6]
 8013a9c:	88bb      	ldrh	r3, [r7, #4]
 8013a9e:	430b      	orrs	r3, r1
 8013aa0:	d010      	beq.n	8013ac4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013aa2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013aa6:	2b00      	cmp	r3, #0
 8013aa8:	db0c      	blt.n	8013ac4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013aaa:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013aac:	428b      	cmp	r3, r1
 8013aae:	da09      	bge.n	8013ac4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013ab0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013ab4:	428b      	cmp	r3, r1
 8013ab6:	bf38      	it	cc
 8013ab8:	3708      	addcc	r7, #8
 8013aba:	f103 0301 	add.w	r3, r3, #1
 8013abe:	bf38      	it	cc
 8013ac0:	6107      	strcc	r7, [r0, #16]
 8013ac2:	6083      	str	r3, [r0, #8]
 8013ac4:	6903      	ldr	r3, [r0, #16]
 8013ac6:	f8a3 e000 	strh.w	lr, [r3]
 8013aca:	e5ff      	b.n	80136cc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013acc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013ace:	9c03      	ldr	r4, [sp, #12]
 8013ad0:	42a2      	cmp	r2, r4
 8013ad2:	f6ff ae18 	blt.w	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013ad6:	9c06      	ldr	r4, [sp, #24]
 8013ad8:	42a2      	cmp	r2, r4
 8013ada:	bfb8      	it	lt
 8013adc:	3201      	addlt	r2, #1
 8013ade:	9c08      	ldr	r4, [sp, #32]
 8013ae0:	bfb8      	it	lt
 8013ae2:	9206      	strlt	r2, [sp, #24]
 8013ae4:	f1c3 0220 	rsb	r2, r3, #32
 8013ae8:	4362      	muls	r2, r4
 8013aea:	2401      	movs	r4, #1
 8013aec:	940b      	str	r4, [sp, #44]	; 0x2c
 8013aee:	2420      	movs	r4, #32
 8013af0:	e6d5      	b.n	801389e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013af2:	f009 021f 	and.w	r2, r9, #31
 8013af6:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013afa:	920c      	str	r2, [sp, #48]	; 0x30
 8013afc:	9a01      	ldr	r2, [sp, #4]
 8013afe:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013b02:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013b06:	45b0      	cmp	r8, r6
 8013b08:	f001 011f 	and.w	r1, r1, #31
 8013b0c:	eba2 0203 	sub.w	r2, r2, r3
 8013b10:	d108      	bne.n	8013b24 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013b12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b14:	4419      	add	r1, r3
 8013b16:	4496      	add	lr, r2
 8013b18:	fb02 a101 	mla	r1, r2, r1, sl
 8013b1c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013b20:	80e9      	strh	r1, [r5, #6]
 8013b22:	e6f9      	b.n	8013918 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013b24:	2c00      	cmp	r4, #0
 8013b26:	f2c0 80a9 	blt.w	8013c7c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013b2a:	2701      	movs	r7, #1
 8013b2c:	f1c1 0c20 	rsb	ip, r1, #32
 8013b30:	970a      	str	r7, [sp, #40]	; 0x28
 8013b32:	fb02 f20c 	mul.w	r2, r2, ip
 8013b36:	2720      	movs	r7, #32
 8013b38:	9709      	str	r7, [sp, #36]	; 0x24
 8013b3a:	fb92 fcf4 	sdiv	ip, r2, r4
 8013b3e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013b40:	fb04 221c 	mls	r2, r4, ip, r2
 8013b44:	2a00      	cmp	r2, #0
 8013b46:	bfb8      	it	lt
 8013b48:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013b4c:	4439      	add	r1, r7
 8013b4e:	fb0c a101 	mla	r1, ip, r1, sl
 8013b52:	80e9      	strh	r1, [r5, #6]
 8013b54:	44e6      	add	lr, ip
 8013b56:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013b58:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013b5c:	eb08 0501 	add.w	r5, r8, r1
 8013b60:	6901      	ldr	r1, [r0, #16]
 8013b62:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013b66:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013b6a:	bfb8      	it	lt
 8013b6c:	1912      	addlt	r2, r2, r4
 8013b6e:	ea58 070e 	orrs.w	r7, r8, lr
 8013b72:	d010      	beq.n	8013b96 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013b74:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013b78:	f1be 0f00 	cmp.w	lr, #0
 8013b7c:	db0b      	blt.n	8013b96 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013b7e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013b80:	45be      	cmp	lr, r7
 8013b82:	da08      	bge.n	8013b96 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013b84:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013b88:	45be      	cmp	lr, r7
 8013b8a:	bf3c      	itt	cc
 8013b8c:	3108      	addcc	r1, #8
 8013b8e:	6101      	strcc	r1, [r0, #16]
 8013b90:	f10e 0101 	add.w	r1, lr, #1
 8013b94:	6081      	str	r1, [r0, #8]
 8013b96:	6901      	ldr	r1, [r0, #16]
 8013b98:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013b9c:	800d      	strh	r5, [r1, #0]
 8013b9e:	f04f 0e00 	mov.w	lr, #0
 8013ba2:	42ae      	cmp	r6, r5
 8013ba4:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013ba8:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013bac:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013bb0:	4463      	add	r3, ip
 8013bb2:	d054      	beq.n	8013c5e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013bb4:	9901      	ldr	r1, [sp, #4]
 8013bb6:	1ac9      	subs	r1, r1, r3
 8013bb8:	4461      	add	r1, ip
 8013bba:	0149      	lsls	r1, r1, #5
 8013bbc:	fb91 fef4 	sdiv	lr, r1, r4
 8013bc0:	fb04 111e 	mls	r1, r4, lr, r1
 8013bc4:	2900      	cmp	r1, #0
 8013bc6:	bfb8      	it	lt
 8013bc8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013bcc:	f10e 0701 	add.w	r7, lr, #1
 8013bd0:	bfb8      	it	lt
 8013bd2:	1909      	addlt	r1, r1, r4
 8013bd4:	1b12      	subs	r2, r2, r4
 8013bd6:	970d      	str	r7, [sp, #52]	; 0x34
 8013bd8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013bdc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013bde:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013be2:	1852      	adds	r2, r2, r1
 8013be4:	bf54      	ite	pl
 8013be6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013bea:	46f4      	movmi	ip, lr
 8013bec:	44e3      	add	fp, ip
 8013bee:	f8aa b004 	strh.w	fp, [sl, #4]
 8013bf2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013bf6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013bfa:	f8aa b006 	strh.w	fp, [sl, #6]
 8013bfe:	4463      	add	r3, ip
 8013c00:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c04:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013c08:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013c0c:	bf58      	it	pl
 8013c0e:	1b12      	subpl	r2, r2, r4
 8013c10:	443d      	add	r5, r7
 8013c12:	ea5b 070a 	orrs.w	r7, fp, sl
 8013c16:	d014      	beq.n	8013c42 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013c18:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013c1c:	f1ba 0f00 	cmp.w	sl, #0
 8013c20:	db0f      	blt.n	8013c42 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013c22:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013c24:	45ba      	cmp	sl, r7
 8013c26:	da0c      	bge.n	8013c42 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013c28:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013c2c:	45ba      	cmp	sl, r7
 8013c2e:	bf38      	it	cc
 8013c30:	f10c 0c08 	addcc.w	ip, ip, #8
 8013c34:	f10a 0a01 	add.w	sl, sl, #1
 8013c38:	bf38      	it	cc
 8013c3a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013c3e:	f8c0 a008 	str.w	sl, [r0, #8]
 8013c42:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013c46:	f04f 0700 	mov.w	r7, #0
 8013c4a:	42ae      	cmp	r6, r5
 8013c4c:	f8ac 5000 	strh.w	r5, [ip]
 8013c50:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013c54:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013c58:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013c5c:	d1bc      	bne.n	8013bd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013c5e:	6904      	ldr	r4, [r0, #16]
 8013c60:	9a01      	ldr	r2, [sp, #4]
 8013c62:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c64:	1ad3      	subs	r3, r2, r3
 8013c66:	88a2      	ldrh	r2, [r4, #4]
 8013c68:	441a      	add	r2, r3
 8013c6a:	80a2      	strh	r2, [r4, #4]
 8013c6c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013c6e:	3120      	adds	r1, #32
 8013c70:	1a89      	subs	r1, r1, r2
 8013c72:	88e2      	ldrh	r2, [r4, #6]
 8013c74:	fb03 2301 	mla	r3, r3, r1, r2
 8013c78:	80e3      	strh	r3, [r4, #6]
 8013c7a:	e64d      	b.n	8013918 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013c7c:	f04f 37ff 	mov.w	r7, #4294967295
 8013c80:	970a      	str	r7, [sp, #40]	; 0x28
 8013c82:	434a      	muls	r2, r1
 8013c84:	4264      	negs	r4, r4
 8013c86:	2700      	movs	r7, #0
 8013c88:	e756      	b.n	8013b38 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013c8a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013c8e:	f009 031f 	and.w	r3, r9, #31
 8013c92:	45d0      	cmp	r8, sl
 8013c94:	f007 071f 	and.w	r7, r7, #31
 8013c98:	930f      	str	r3, [sp, #60]	; 0x3c
 8013c9a:	fa1f fc8c 	uxth.w	ip, ip
 8013c9e:	fa1f fe8e 	uxth.w	lr, lr
 8013ca2:	d10a      	bne.n	8013cba <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013ca4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ca6:	449c      	add	ip, r3
 8013ca8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013caa:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013cae:	441f      	add	r7, r3
 8013cb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013cb2:	fb03 e707 	mla	r7, r3, r7, lr
 8013cb6:	80ef      	strh	r7, [r5, #6]
 8013cb8:	e6b9      	b.n	8013a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013cba:	2900      	cmp	r1, #0
 8013cbc:	f2c0 80a8 	blt.w	8013e10 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013cc0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013cc2:	f1c7 0320 	rsb	r3, r7, #32
 8013cc6:	4363      	muls	r3, r4
 8013cc8:	2401      	movs	r4, #1
 8013cca:	940d      	str	r4, [sp, #52]	; 0x34
 8013ccc:	2420      	movs	r4, #32
 8013cce:	940c      	str	r4, [sp, #48]	; 0x30
 8013cd0:	fb93 f4f1 	sdiv	r4, r3, r1
 8013cd4:	fb01 3b14 	mls	fp, r1, r4, r3
 8013cd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013cda:	f1bb 0f00 	cmp.w	fp, #0
 8013cde:	bfb8      	it	lt
 8013ce0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013ce4:	441f      	add	r7, r3
 8013ce6:	fb04 e707 	mla	r7, r4, r7, lr
 8013cea:	44a4      	add	ip, r4
 8013cec:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013cf0:	80ef      	strh	r7, [r5, #6]
 8013cf2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013cf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013cf8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013cfc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013d00:	bfb8      	it	lt
 8013d02:	448b      	addlt	fp, r1
 8013d04:	eb08 0503 	add.w	r5, r8, r3
 8013d08:	ea5e 0307 	orrs.w	r3, lr, r7
 8013d0c:	d011      	beq.n	8013d32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013d0e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013d12:	f1be 0f00 	cmp.w	lr, #0
 8013d16:	db0c      	blt.n	8013d32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013d18:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013d1a:	45be      	cmp	lr, r7
 8013d1c:	da09      	bge.n	8013d32 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013d1e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013d22:	45be      	cmp	lr, r7
 8013d24:	bf3c      	itt	cc
 8013d26:	f10c 0708 	addcc.w	r7, ip, #8
 8013d2a:	6107      	strcc	r7, [r0, #16]
 8013d2c:	f10e 0701 	add.w	r7, lr, #1
 8013d30:	6087      	str	r7, [r0, #8]
 8013d32:	6907      	ldr	r7, [r0, #16]
 8013d34:	b213      	sxth	r3, r2
 8013d36:	9310      	str	r3, [sp, #64]	; 0x40
 8013d38:	807b      	strh	r3, [r7, #2]
 8013d3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013d3c:	803d      	strh	r5, [r7, #0]
 8013d3e:	4555      	cmp	r5, sl
 8013d40:	80be      	strh	r6, [r7, #4]
 8013d42:	80fe      	strh	r6, [r7, #6]
 8013d44:	eb04 0c03 	add.w	ip, r4, r3
 8013d48:	d051      	beq.n	8013dee <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013d4a:	9b01      	ldr	r3, [sp, #4]
 8013d4c:	eba3 070c 	sub.w	r7, r3, ip
 8013d50:	443c      	add	r4, r7
 8013d52:	0164      	lsls	r4, r4, #5
 8013d54:	fb94 f8f1 	sdiv	r8, r4, r1
 8013d58:	fb01 4418 	mls	r4, r1, r8, r4
 8013d5c:	2c00      	cmp	r4, #0
 8013d5e:	bfb8      	it	lt
 8013d60:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013d64:	ebab 0301 	sub.w	r3, fp, r1
 8013d68:	f108 0701 	add.w	r7, r8, #1
 8013d6c:	bfb8      	it	lt
 8013d6e:	1864      	addlt	r4, r4, r1
 8013d70:	9309      	str	r3, [sp, #36]	; 0x24
 8013d72:	9711      	str	r7, [sp, #68]	; 0x44
 8013d74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d76:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013d7a:	191b      	adds	r3, r3, r4
 8013d7c:	bf58      	it	pl
 8013d7e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013d80:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013d84:	9309      	str	r3, [sp, #36]	; 0x24
 8013d86:	bf48      	it	mi
 8013d88:	4647      	movmi	r7, r8
 8013d8a:	44bb      	add	fp, r7
 8013d8c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013d90:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013d94:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013d98:	f8ae b006 	strh.w	fp, [lr, #6]
 8013d9c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013da0:	44bc      	add	ip, r7
 8013da2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013da4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013da8:	443d      	add	r5, r7
 8013daa:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013dae:	bf5c      	itt	pl
 8013db0:	1a5b      	subpl	r3, r3, r1
 8013db2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013db4:	ea5b 0307 	orrs.w	r3, fp, r7
 8013db8:	d011      	beq.n	8013dde <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013dba:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013dbe:	f1bb 0f00 	cmp.w	fp, #0
 8013dc2:	db0c      	blt.n	8013dde <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013dc4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013dc6:	45bb      	cmp	fp, r7
 8013dc8:	da09      	bge.n	8013dde <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013dca:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013dce:	45bb      	cmp	fp, r7
 8013dd0:	bf3c      	itt	cc
 8013dd2:	f10e 0708 	addcc.w	r7, lr, #8
 8013dd6:	6107      	strcc	r7, [r0, #16]
 8013dd8:	f10b 0701 	add.w	r7, fp, #1
 8013ddc:	6087      	str	r7, [r0, #8]
 8013dde:	6907      	ldr	r7, [r0, #16]
 8013de0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013de2:	803d      	strh	r5, [r7, #0]
 8013de4:	4555      	cmp	r5, sl
 8013de6:	807b      	strh	r3, [r7, #2]
 8013de8:	80be      	strh	r6, [r7, #4]
 8013dea:	80fe      	strh	r6, [r7, #6]
 8013dec:	d1c2      	bne.n	8013d74 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013dee:	9b01      	ldr	r3, [sp, #4]
 8013df0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013df2:	eba3 0c0c 	sub.w	ip, r3, ip
 8013df6:	6903      	ldr	r3, [r0, #16]
 8013df8:	8899      	ldrh	r1, [r3, #4]
 8013dfa:	4461      	add	r1, ip
 8013dfc:	8099      	strh	r1, [r3, #4]
 8013dfe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013e00:	3720      	adds	r7, #32
 8013e02:	1a7f      	subs	r7, r7, r1
 8013e04:	88d9      	ldrh	r1, [r3, #6]
 8013e06:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013e0a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013e0e:	e60e      	b.n	8013a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013e10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013e12:	f04f 34ff 	mov.w	r4, #4294967295
 8013e16:	940d      	str	r4, [sp, #52]	; 0x34
 8013e18:	437b      	muls	r3, r7
 8013e1a:	4249      	negs	r1, r1
 8013e1c:	2400      	movs	r4, #0
 8013e1e:	e756      	b.n	8013cce <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013e20:	9905      	ldr	r1, [sp, #20]
 8013e22:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013e26:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013e2a:	f001 011f 	and.w	r1, r1, #31
 8013e2e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013e32:	9102      	str	r1, [sp, #8]
 8013e34:	9904      	ldr	r1, [sp, #16]
 8013e36:	45f3      	cmp	fp, lr
 8013e38:	f009 0c1f 	and.w	ip, r9, #31
 8013e3c:	eba1 0406 	sub.w	r4, r1, r6
 8013e40:	d108      	bne.n	8013e54 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013e42:	9b02      	ldr	r3, [sp, #8]
 8013e44:	449c      	add	ip, r3
 8013e46:	44a0      	add	r8, r4
 8013e48:	fb04 a40c 	mla	r4, r4, ip, sl
 8013e4c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013e50:	80fc      	strh	r4, [r7, #6]
 8013e52:	e458      	b.n	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013e54:	9905      	ldr	r1, [sp, #20]
 8013e56:	ebb1 0109 	subs.w	r1, r1, r9
 8013e5a:	bf5b      	ittet	pl
 8013e5c:	f1cc 0520 	rsbpl	r5, ip, #32
 8013e60:	436c      	mulpl	r4, r5
 8013e62:	2500      	movmi	r5, #0
 8013e64:	2520      	movpl	r5, #32
 8013e66:	bf44      	itt	mi
 8013e68:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013e6c:	4249      	negmi	r1, r1
 8013e6e:	9501      	str	r5, [sp, #4]
 8013e70:	9b01      	ldr	r3, [sp, #4]
 8013e72:	fb94 f5f1 	sdiv	r5, r4, r1
 8013e76:	fb01 4415 	mls	r4, r1, r5, r4
 8013e7a:	bf54      	ite	pl
 8013e7c:	f04f 0901 	movpl.w	r9, #1
 8013e80:	f04f 39ff 	movmi.w	r9, #4294967295
 8013e84:	2c00      	cmp	r4, #0
 8013e86:	bfb8      	it	lt
 8013e88:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013e8c:	449c      	add	ip, r3
 8013e8e:	44a8      	add	r8, r5
 8013e90:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013e94:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013e98:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013e9c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ea0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013ea4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013ea8:	bfb8      	it	lt
 8013eaa:	1864      	addlt	r4, r4, r1
 8013eac:	ea58 0707 	orrs.w	r7, r8, r7
 8013eb0:	eb0b 0309 	add.w	r3, fp, r9
 8013eb4:	d011      	beq.n	8013eda <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013eb6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013eba:	f1b8 0f00 	cmp.w	r8, #0
 8013ebe:	db0c      	blt.n	8013eda <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013ec0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ec2:	45b8      	cmp	r8, r7
 8013ec4:	da09      	bge.n	8013eda <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013ec6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013eca:	45b8      	cmp	r8, r7
 8013ecc:	bf3c      	itt	cc
 8013ece:	f10c 0708 	addcc.w	r7, ip, #8
 8013ed2:	6107      	strcc	r7, [r0, #16]
 8013ed4:	f108 0701 	add.w	r7, r8, #1
 8013ed8:	6087      	str	r7, [r0, #8]
 8013eda:	6907      	ldr	r7, [r0, #16]
 8013edc:	f04f 0c00 	mov.w	ip, #0
 8013ee0:	b212      	sxth	r2, r2
 8013ee2:	459e      	cmp	lr, r3
 8013ee4:	803b      	strh	r3, [r7, #0]
 8013ee6:	807a      	strh	r2, [r7, #2]
 8013ee8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013eec:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013ef0:	442e      	add	r6, r5
 8013ef2:	d04d      	beq.n	8013f90 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013ef4:	9f04      	ldr	r7, [sp, #16]
 8013ef6:	1bbf      	subs	r7, r7, r6
 8013ef8:	443d      	add	r5, r7
 8013efa:	016d      	lsls	r5, r5, #5
 8013efc:	fb95 f8f1 	sdiv	r8, r5, r1
 8013f00:	fb01 5518 	mls	r5, r1, r8, r5
 8013f04:	4565      	cmp	r5, ip
 8013f06:	bfb8      	it	lt
 8013f08:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013f0c:	f108 0701 	add.w	r7, r8, #1
 8013f10:	bfb8      	it	lt
 8013f12:	186d      	addlt	r5, r5, r1
 8013f14:	1a64      	subs	r4, r4, r1
 8013f16:	9703      	str	r7, [sp, #12]
 8013f18:	f04f 0a00 	mov.w	sl, #0
 8013f1c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f20:	1964      	adds	r4, r4, r5
 8013f22:	bf58      	it	pl
 8013f24:	9f03      	ldrpl	r7, [sp, #12]
 8013f26:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013f2a:	bf48      	it	mi
 8013f2c:	4647      	movmi	r7, r8
 8013f2e:	44bb      	add	fp, r7
 8013f30:	f8ac b004 	strh.w	fp, [ip, #4]
 8013f34:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013f38:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013f3c:	f8ac b006 	strh.w	fp, [ip, #6]
 8013f40:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f44:	443e      	add	r6, r7
 8013f46:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013f4a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013f4e:	bf58      	it	pl
 8013f50:	1a64      	subpl	r4, r4, r1
 8013f52:	ea5b 0707 	orrs.w	r7, fp, r7
 8013f56:	444b      	add	r3, r9
 8013f58:	d011      	beq.n	8013f7e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013f5a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013f5e:	f1bb 0f00 	cmp.w	fp, #0
 8013f62:	db0c      	blt.n	8013f7e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013f64:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013f66:	45bb      	cmp	fp, r7
 8013f68:	da09      	bge.n	8013f7e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013f6a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013f6e:	45bb      	cmp	fp, r7
 8013f70:	bf3c      	itt	cc
 8013f72:	f10c 0708 	addcc.w	r7, ip, #8
 8013f76:	6107      	strcc	r7, [r0, #16]
 8013f78:	f10b 0701 	add.w	r7, fp, #1
 8013f7c:	6087      	str	r7, [r0, #8]
 8013f7e:	6907      	ldr	r7, [r0, #16]
 8013f80:	459e      	cmp	lr, r3
 8013f82:	803b      	strh	r3, [r7, #0]
 8013f84:	807a      	strh	r2, [r7, #2]
 8013f86:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013f8a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013f8e:	d1c5      	bne.n	8013f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013f90:	9b04      	ldr	r3, [sp, #16]
 8013f92:	1b9e      	subs	r6, r3, r6
 8013f94:	6903      	ldr	r3, [r0, #16]
 8013f96:	889a      	ldrh	r2, [r3, #4]
 8013f98:	4432      	add	r2, r6
 8013f9a:	809a      	strh	r2, [r3, #4]
 8013f9c:	9a02      	ldr	r2, [sp, #8]
 8013f9e:	f102 0c20 	add.w	ip, r2, #32
 8013fa2:	9a01      	ldr	r2, [sp, #4]
 8013fa4:	ebac 0c02 	sub.w	ip, ip, r2
 8013fa8:	88da      	ldrh	r2, [r3, #6]
 8013faa:	fb06 260c 	mla	r6, r6, ip, r2
 8013fae:	80de      	strh	r6, [r3, #6]
 8013fb0:	f7ff bba9 	b.w	8013706 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013fb4 <_ZN8touchgfx7Outline6lineToEii>:
 8013fb4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013fb6:	079b      	lsls	r3, r3, #30
 8013fb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013fba:	460e      	mov	r6, r1
 8013fbc:	4615      	mov	r5, r2
 8013fbe:	d511      	bpl.n	8013fe4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013fc0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013fc4:	ea86 0701 	eor.w	r7, r6, r1
 8013fc8:	ea85 0302 	eor.w	r3, r5, r2
 8013fcc:	433b      	orrs	r3, r7
 8013fce:	d009      	beq.n	8013fe4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013fd0:	4633      	mov	r3, r6
 8013fd2:	9500      	str	r5, [sp, #0]
 8013fd4:	f7ff fb3e 	bl	8013654 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013fd8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013fda:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013fde:	f043 0301 	orr.w	r3, r3, #1
 8013fe2:	6243      	str	r3, [r0, #36]	; 0x24
 8013fe4:	b003      	add	sp, #12
 8013fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013fe8 <_ZN8touchgfx7Outline6moveToEii>:
 8013fe8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013fea:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013fec:	4615      	mov	r5, r2
 8013fee:	079a      	lsls	r2, r3, #30
 8013ff0:	4604      	mov	r4, r0
 8013ff2:	460e      	mov	r6, r1
 8013ff4:	d401      	bmi.n	8013ffa <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013ff6:	f7ff faf9 	bl	80135ec <_ZN8touchgfx7Outline5resetEv>
 8013ffa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013ffc:	07db      	lsls	r3, r3, #31
 8013ffe:	d504      	bpl.n	801400a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014000:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014004:	4620      	mov	r0, r4
 8014006:	f7ff ffd5 	bl	8013fb4 <_ZN8touchgfx7Outline6lineToEii>
 801400a:	6923      	ldr	r3, [r4, #16]
 801400c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014010:	1170      	asrs	r0, r6, #5
 8014012:	4290      	cmp	r0, r2
 8014014:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014018:	d103      	bne.n	8014022 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801401a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801401e:	4291      	cmp	r1, r2
 8014020:	d01a      	beq.n	8014058 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014022:	88df      	ldrh	r7, [r3, #6]
 8014024:	889a      	ldrh	r2, [r3, #4]
 8014026:	433a      	orrs	r2, r7
 8014028:	d010      	beq.n	801404c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801402a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801402e:	2a00      	cmp	r2, #0
 8014030:	db0c      	blt.n	801404c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014032:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014034:	42ba      	cmp	r2, r7
 8014036:	da09      	bge.n	801404c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014038:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801403c:	42ba      	cmp	r2, r7
 801403e:	bf38      	it	cc
 8014040:	3308      	addcc	r3, #8
 8014042:	f102 0201 	add.w	r2, r2, #1
 8014046:	bf38      	it	cc
 8014048:	6123      	strcc	r3, [r4, #16]
 801404a:	60a2      	str	r2, [r4, #8]
 801404c:	6923      	ldr	r3, [r4, #16]
 801404e:	2200      	movs	r2, #0
 8014050:	8018      	strh	r0, [r3, #0]
 8014052:	8059      	strh	r1, [r3, #2]
 8014054:	809a      	strh	r2, [r3, #4]
 8014056:	80da      	strh	r2, [r3, #6]
 8014058:	6166      	str	r6, [r4, #20]
 801405a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801405e:	6225      	str	r5, [r4, #32]
 8014060:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014062 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014062:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014066:	b0d0      	sub	sp, #320	; 0x140
 8014068:	466c      	mov	r4, sp
 801406a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801406e:	4627      	mov	r7, r4
 8014070:	1a0d      	subs	r5, r1, r0
 8014072:	2d48      	cmp	r5, #72	; 0x48
 8014074:	f100 0308 	add.w	r3, r0, #8
 8014078:	f340 80d5 	ble.w	8014226 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801407c:	112d      	asrs	r5, r5, #4
 801407e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014082:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014086:	6816      	ldr	r6, [r2, #0]
 8014088:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801408c:	6006      	str	r6, [r0, #0]
 801408e:	6856      	ldr	r6, [r2, #4]
 8014090:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014094:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014098:	6046      	str	r6, [r0, #4]
 801409a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801409e:	f8a2 8002 	strh.w	r8, [r2, #2]
 80140a2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80140a6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80140aa:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80140ae:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80140b2:	4565      	cmp	r5, ip
 80140b4:	f1a1 0208 	sub.w	r2, r1, #8
 80140b8:	db06      	blt.n	80140c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80140ba:	d119      	bne.n	80140f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80140bc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80140c0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80140c4:	42ae      	cmp	r6, r5
 80140c6:	dd13      	ble.n	80140f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80140c8:	460e      	mov	r6, r1
 80140ca:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80140ce:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80140d2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80140d6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80140da:	601d      	str	r5, [r3, #0]
 80140dc:	6875      	ldr	r5, [r6, #4]
 80140de:	605d      	str	r5, [r3, #4]
 80140e0:	f821 9c08 	strh.w	r9, [r1, #-8]
 80140e4:	f821 cc06 	strh.w	ip, [r1, #-6]
 80140e8:	f821 8c04 	strh.w	r8, [r1, #-4]
 80140ec:	f821 ec02 	strh.w	lr, [r1, #-2]
 80140f0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80140f4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80140f8:	42ae      	cmp	r6, r5
 80140fa:	db06      	blt.n	801410a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80140fc:	d116      	bne.n	801412c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80140fe:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014102:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014106:	45ac      	cmp	ip, r5
 8014108:	da10      	bge.n	801412c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801410a:	681d      	ldr	r5, [r3, #0]
 801410c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014110:	6005      	str	r5, [r0, #0]
 8014112:	685d      	ldr	r5, [r3, #4]
 8014114:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014118:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801411c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014120:	6045      	str	r5, [r0, #4]
 8014122:	8146      	strh	r6, [r0, #10]
 8014124:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014128:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801412c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014130:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014134:	4565      	cmp	r5, ip
 8014136:	db06      	blt.n	8014146 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014138:	d119      	bne.n	801416e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801413a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801413e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014142:	42ae      	cmp	r6, r5
 8014144:	da13      	bge.n	801416e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014146:	460e      	mov	r6, r1
 8014148:	f9b0 9000 	ldrsh.w	r9, [r0]
 801414c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014150:	6005      	str	r5, [r0, #0]
 8014152:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014156:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801415a:	6875      	ldr	r5, [r6, #4]
 801415c:	6045      	str	r5, [r0, #4]
 801415e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014162:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014166:	f821 8c04 	strh.w	r8, [r1, #-4]
 801416a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801416e:	3308      	adds	r3, #8
 8014170:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014174:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014178:	45e6      	cmp	lr, ip
 801417a:	dbf8      	blt.n	801416e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801417c:	d105      	bne.n	801418a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801417e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014182:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014186:	42ae      	cmp	r6, r5
 8014188:	dbf1      	blt.n	801416e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801418a:	4615      	mov	r5, r2
 801418c:	3a08      	subs	r2, #8
 801418e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014192:	45b4      	cmp	ip, r6
 8014194:	dbf9      	blt.n	801418a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014196:	d105      	bne.n	80141a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014198:	f9b0 8000 	ldrsh.w	r8, [r0]
 801419c:	f9b2 6000 	ldrsh.w	r6, [r2]
 80141a0:	45b0      	cmp	r8, r6
 80141a2:	dbf2      	blt.n	801418a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80141a4:	4293      	cmp	r3, r2
 80141a6:	f1a5 0608 	sub.w	r6, r5, #8
 80141aa:	d816      	bhi.n	80141da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80141ac:	f8d6 c000 	ldr.w	ip, [r6]
 80141b0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80141b4:	f8c3 c000 	str.w	ip, [r3]
 80141b8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80141bc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80141c0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80141c4:	f8c3 c004 	str.w	ip, [r3, #4]
 80141c8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80141cc:	f825 ec06 	strh.w	lr, [r5, #-6]
 80141d0:	f825 9c04 	strh.w	r9, [r5, #-4]
 80141d4:	f825 8c02 	strh.w	r8, [r5, #-2]
 80141d8:	e7c9      	b.n	801416e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80141da:	f8d6 e000 	ldr.w	lr, [r6]
 80141de:	f9b0 a000 	ldrsh.w	sl, [r0]
 80141e2:	f8c0 e000 	str.w	lr, [r0]
 80141e6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80141ea:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80141ee:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80141f2:	f8c0 e004 	str.w	lr, [r0, #4]
 80141f6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80141fa:	f825 cc06 	strh.w	ip, [r5, #-6]
 80141fe:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014202:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014206:	1acd      	subs	r5, r1, r3
 8014208:	1a16      	subs	r6, r2, r0
 801420a:	10ed      	asrs	r5, r5, #3
 801420c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014210:	bfb5      	itete	lt
 8014212:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014216:	e9c4 3100 	strdge	r3, r1, [r4]
 801421a:	460a      	movlt	r2, r1
 801421c:	4603      	movge	r3, r0
 801421e:	3408      	adds	r4, #8
 8014220:	4618      	mov	r0, r3
 8014222:	4611      	mov	r1, r2
 8014224:	e724      	b.n	8014070 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014226:	4299      	cmp	r1, r3
 8014228:	d928      	bls.n	801427c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801422a:	f1a3 0210 	sub.w	r2, r3, #16
 801422e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014232:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014236:	45ac      	cmp	ip, r5
 8014238:	db06      	blt.n	8014248 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801423a:	d11d      	bne.n	8014278 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801423c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014240:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014244:	42ae      	cmp	r6, r5
 8014246:	da17      	bge.n	8014278 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014248:	4615      	mov	r5, r2
 801424a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801424e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014252:	6116      	str	r6, [r2, #16]
 8014254:	686e      	ldr	r6, [r5, #4]
 8014256:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801425a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801425e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014262:	42a8      	cmp	r0, r5
 8014264:	6156      	str	r6, [r2, #20]
 8014266:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801426a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801426e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014272:	f1a2 0208 	sub.w	r2, r2, #8
 8014276:	d1da      	bne.n	801422e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014278:	3308      	adds	r3, #8
 801427a:	e7d4      	b.n	8014226 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801427c:	42bc      	cmp	r4, r7
 801427e:	d903      	bls.n	8014288 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014280:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014284:	3c08      	subs	r4, #8
 8014286:	e6f3      	b.n	8014070 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014288:	b050      	add	sp, #320	; 0x140
 801428a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801428e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801428e:	b510      	push	{r4, lr}
 8014290:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014292:	07da      	lsls	r2, r3, #31
 8014294:	4604      	mov	r4, r0
 8014296:	d507      	bpl.n	80142a8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014298:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801429c:	f7ff fe8a 	bl	8013fb4 <_ZN8touchgfx7Outline6lineToEii>
 80142a0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80142a2:	f023 0301 	bic.w	r3, r3, #1
 80142a6:	6243      	str	r3, [r0, #36]	; 0x24
 80142a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80142aa:	079b      	lsls	r3, r3, #30
 80142ac:	d521      	bpl.n	80142f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80142ae:	6923      	ldr	r3, [r4, #16]
 80142b0:	88d9      	ldrh	r1, [r3, #6]
 80142b2:	889a      	ldrh	r2, [r3, #4]
 80142b4:	430a      	orrs	r2, r1
 80142b6:	d010      	beq.n	80142da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80142b8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80142bc:	2a00      	cmp	r2, #0
 80142be:	db0c      	blt.n	80142da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80142c0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80142c2:	428a      	cmp	r2, r1
 80142c4:	da09      	bge.n	80142da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80142c6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80142ca:	4291      	cmp	r1, r2
 80142cc:	bf88      	it	hi
 80142ce:	3308      	addhi	r3, #8
 80142d0:	f102 0201 	add.w	r2, r2, #1
 80142d4:	bf88      	it	hi
 80142d6:	6123      	strhi	r3, [r4, #16]
 80142d8:	60a2      	str	r2, [r4, #8]
 80142da:	68a1      	ldr	r1, [r4, #8]
 80142dc:	b129      	cbz	r1, 80142ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80142de:	6863      	ldr	r3, [r4, #4]
 80142e0:	4299      	cmp	r1, r3
 80142e2:	d802      	bhi.n	80142ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80142e4:	68e0      	ldr	r0, [r4, #12]
 80142e6:	f7ff febc 	bl	8014062 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80142ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80142ec:	f023 0302 	bic.w	r3, r3, #2
 80142f0:	6263      	str	r3, [r4, #36]	; 0x24
 80142f2:	68e0      	ldr	r0, [r4, #12]
 80142f4:	bd10      	pop	{r4, pc}
	...

080142f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80142f8:	4b02      	ldr	r3, [pc, #8]	; (8014304 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80142fa:	6018      	str	r0, [r3, #0]
 80142fc:	4b02      	ldr	r3, [pc, #8]	; (8014308 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80142fe:	6019      	str	r1, [r3, #0]
 8014300:	4770      	bx	lr
 8014302:	bf00      	nop
 8014304:	20012dbc 	.word	0x20012dbc
 8014308:	20012dc0 	.word	0x20012dc0

0801430c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801430c:	4a02      	ldr	r2, [pc, #8]	; (8014318 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801430e:	2300      	movs	r3, #0
 8014310:	6013      	str	r3, [r2, #0]
 8014312:	4a02      	ldr	r2, [pc, #8]	; (801431c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014314:	6013      	str	r3, [r2, #0]
 8014316:	4770      	bx	lr
 8014318:	20012dbc 	.word	0x20012dbc
 801431c:	20012dc0 	.word	0x20012dc0

08014320 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014320:	4b01      	ldr	r3, [pc, #4]	; (8014328 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014322:	6818      	ldr	r0, [r3, #0]
 8014324:	4770      	bx	lr
 8014326:	bf00      	nop
 8014328:	20012dbc 	.word	0x20012dbc

0801432c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801432c:	4b01      	ldr	r3, [pc, #4]	; (8014334 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801432e:	6818      	ldr	r0, [r3, #0]
 8014330:	4770      	bx	lr
 8014332:	bf00      	nop
 8014334:	20012dc0 	.word	0x20012dc0

08014338 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014338:	b510      	push	{r4, lr}
 801433a:	6803      	ldr	r3, [r0, #0]
 801433c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801433e:	460c      	mov	r4, r1
 8014340:	4798      	blx	r3
 8014342:	1b03      	subs	r3, r0, r4
 8014344:	4258      	negs	r0, r3
 8014346:	4158      	adcs	r0, r3
 8014348:	bd10      	pop	{r4, pc}
	...

0801434c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801434c:	4b01      	ldr	r3, [pc, #4]	; (8014354 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801434e:	6019      	str	r1, [r3, #0]
 8014350:	4770      	bx	lr
 8014352:	bf00      	nop
 8014354:	20012dc4 	.word	0x20012dc4

08014358 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801435c:	4696      	mov	lr, r2
 801435e:	4605      	mov	r5, r0
 8014360:	4614      	mov	r4, r2
 8014362:	460e      	mov	r6, r1
 8014364:	461f      	mov	r7, r3
 8014366:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801436a:	b097      	sub	sp, #92	; 0x5c
 801436c:	f10d 0c1c 	add.w	ip, sp, #28
 8014370:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014374:	f8de 3000 	ldr.w	r3, [lr]
 8014378:	f8cc 3000 	str.w	r3, [ip]
 801437c:	f104 0e14 	add.w	lr, r4, #20
 8014380:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014384:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014388:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801438c:	f8de 3000 	ldr.w	r3, [lr]
 8014390:	f8cc 3000 	str.w	r3, [ip]
 8014394:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014398:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801439c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80143a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80143a4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80143a8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80143ac:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80143b0:	f8de 3000 	ldr.w	r3, [lr]
 80143b4:	f8cc 3000 	str.w	r3, [ip]
 80143b8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80143ba:	682b      	ldr	r3, [r5, #0]
 80143bc:	9201      	str	r2, [sp, #4]
 80143be:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80143c2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80143c4:	9200      	str	r2, [sp, #0]
 80143c6:	f8cd 8008 	str.w	r8, [sp, #8]
 80143ca:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80143ce:	aa07      	add	r2, sp, #28
 80143d0:	463b      	mov	r3, r7
 80143d2:	4631      	mov	r1, r6
 80143d4:	4628      	mov	r0, r5
 80143d6:	47d8      	blx	fp
 80143d8:	46a6      	mov	lr, r4
 80143da:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80143de:	f10d 0c1c 	add.w	ip, sp, #28
 80143e2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80143e6:	f8de 3000 	ldr.w	r3, [lr]
 80143ea:	f8cc 3000 	str.w	r3, [ip]
 80143ee:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80143f2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80143f6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80143fa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80143fe:	343c      	adds	r4, #60	; 0x3c
 8014400:	f8de 3000 	ldr.w	r3, [lr]
 8014404:	f8cc 3000 	str.w	r3, [ip]
 8014408:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801440a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801440e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014412:	6823      	ldr	r3, [r4, #0]
 8014414:	f8cc 3000 	str.w	r3, [ip]
 8014418:	682b      	ldr	r3, [r5, #0]
 801441a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801441e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014420:	9201      	str	r2, [sp, #4]
 8014422:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014424:	9200      	str	r2, [sp, #0]
 8014426:	f8cd 8008 	str.w	r8, [sp, #8]
 801442a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801442c:	aa07      	add	r2, sp, #28
 801442e:	463b      	mov	r3, r7
 8014430:	4631      	mov	r1, r6
 8014432:	4628      	mov	r0, r5
 8014434:	47a0      	blx	r4
 8014436:	b017      	add	sp, #92	; 0x5c
 8014438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801443c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801443c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014440:	b08d      	sub	sp, #52	; 0x34
 8014442:	4688      	mov	r8, r1
 8014444:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014446:	f8d3 c000 	ldr.w	ip, [r3]
 801444a:	680f      	ldr	r7, [r1, #0]
 801444c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014450:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014454:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014458:	edd3 6a07 	vldr	s13, [r3, #28]
 801445c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801445e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014462:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014466:	f9ba 1000 	ldrsh.w	r1, [sl]
 801446a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801446e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014472:	eba7 070c 	sub.w	r7, r7, ip
 8014476:	42bc      	cmp	r4, r7
 8014478:	bfa8      	it	ge
 801447a:	463c      	movge	r4, r7
 801447c:	ee07 4a90 	vmov	s15, r4
 8014480:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014484:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014488:	ee25 4a04 	vmul.f32	s8, s10, s8
 801448c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014490:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014494:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014498:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801449c:	eb09 0e0c 	add.w	lr, r9, ip
 80144a0:	4571      	cmp	r1, lr
 80144a2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80144a6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80144aa:	ee36 0a84 	vadd.f32	s0, s13, s8
 80144ae:	ee61 1a87 	vmul.f32	s3, s3, s14
 80144b2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80144b6:	f340 808d 	ble.w	80145d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80144ba:	eba1 060e 	sub.w	r6, r1, lr
 80144be:	fb96 f5f4 	sdiv	r5, r6, r4
 80144c2:	ee07 5a10 	vmov	s14, r5
 80144c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80144ca:	2d00      	cmp	r5, #0
 80144cc:	fb04 6615 	mls	r6, r4, r5, r6
 80144d0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80144d4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80144d8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80144dc:	dd13      	ble.n	8014506 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80144de:	ee70 6a44 	vsub.f32	s13, s0, s8
 80144e2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80144e6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80144ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80144ee:	bf18      	it	ne
 80144f0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80144f4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80144f8:	bf08      	it	eq
 80144fa:	eeb0 7a67 	vmoveq.f32	s14, s15
 80144fe:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014502:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014506:	fb05 f204 	mul.w	r2, r5, r4
 801450a:	1abf      	subs	r7, r7, r2
 801450c:	4494      	add	ip, r2
 801450e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014512:	4411      	add	r1, r2
 8014514:	eb09 020c 	add.w	r2, r9, ip
 8014518:	443a      	add	r2, r7
 801451a:	b209      	sxth	r1, r1
 801451c:	428a      	cmp	r2, r1
 801451e:	bfc4      	itt	gt
 8014520:	eba1 0209 	subgt.w	r2, r1, r9
 8014524:	eba2 070c 	subgt.w	r7, r2, ip
 8014528:	2f00      	cmp	r7, #0
 801452a:	dd50      	ble.n	80145ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801452c:	fb97 f1f4 	sdiv	r1, r7, r4
 8014530:	fb04 7211 	mls	r2, r4, r1, r7
 8014534:	b90a      	cbnz	r2, 801453a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014536:	3901      	subs	r1, #1
 8014538:	4622      	mov	r2, r4
 801453a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801453e:	6840      	ldr	r0, [r0, #4]
 8014540:	900b      	str	r0, [sp, #44]	; 0x2c
 8014542:	f8d0 a000 	ldr.w	sl, [r0]
 8014546:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014548:	9008      	str	r0, [sp, #32]
 801454a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801454e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014550:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014554:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014558:	695b      	ldr	r3, [r3, #20]
 801455a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801455c:	445b      	add	r3, fp
 801455e:	eef0 6a42 	vmov.f32	s13, s4
 8014562:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014566:	ee21 3a23 	vmul.f32	s6, s2, s7
 801456a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801456e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014572:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014576:	9307      	str	r3, [sp, #28]
 8014578:	ee17 7a90 	vmov	r7, s15
 801457c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014580:	eeb0 7a61 	vmov.f32	s14, s3
 8014584:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014588:	ee16 3a90 	vmov	r3, s13
 801458c:	fb97 f7f4 	sdiv	r7, r7, r4
 8014590:	ee17 ca90 	vmov	ip, s15
 8014594:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014598:	fb9c fcf4 	sdiv	ip, ip, r4
 801459c:	fb0c 3306 	mla	r3, ip, r6, r3
 80145a0:	9302      	str	r3, [sp, #8]
 80145a2:	ee17 3a10 	vmov	r3, s14
 80145a6:	44b6      	add	lr, r6
 80145a8:	fb04 e505 	mla	r5, r4, r5, lr
 80145ac:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80145b0:	fb07 3706 	mla	r7, r7, r6, r3
 80145b4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80145b8:	e9cd 4700 	strd	r4, r7, [sp]
 80145bc:	2900      	cmp	r1, #0
 80145be:	bfcc      	ite	gt
 80145c0:	46a1      	movgt	r9, r4
 80145c2:	4691      	movle	r9, r2
 80145c4:	eba9 0306 	sub.w	r3, r9, r6
 80145c8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80145cc:	47a0      	blx	r4
 80145ce:	b00d      	add	sp, #52	; 0x34
 80145d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145d4:	2500      	movs	r5, #0
 80145d6:	462e      	mov	r6, r5
 80145d8:	e799      	b.n	801450e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080145dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80145dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145e0:	b0db      	sub	sp, #364	; 0x16c
 80145e2:	461d      	mov	r5, r3
 80145e4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80145e8:	930a      	str	r3, [sp, #40]	; 0x28
 80145ea:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80145ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80145f0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80145f4:	9310      	str	r3, [sp, #64]	; 0x40
 80145f6:	6803      	ldr	r3, [r0, #0]
 80145f8:	910f      	str	r1, [sp, #60]	; 0x3c
 80145fa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80145fc:	9009      	str	r0, [sp, #36]	; 0x24
 80145fe:	4614      	mov	r4, r2
 8014600:	4629      	mov	r1, r5
 8014602:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014606:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801460a:	47b8      	blx	r7
 801460c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801460e:	6058      	str	r0, [r3, #4]
 8014610:	2800      	cmp	r0, #0
 8014612:	f000 83a1 	beq.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014616:	682b      	ldr	r3, [r5, #0]
 8014618:	9314      	str	r3, [sp, #80]	; 0x50
 801461a:	686b      	ldr	r3, [r5, #4]
 801461c:	9315      	str	r3, [sp, #84]	; 0x54
 801461e:	4bc4      	ldr	r3, [pc, #784]	; (8014930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014620:	ed94 7a02 	vldr	s14, [r4, #8]
 8014624:	7819      	ldrb	r1, [r3, #0]
 8014626:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801462a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801462e:	2900      	cmp	r1, #0
 8014630:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014634:	bf16      	itet	ne
 8014636:	4619      	movne	r1, r3
 8014638:	4611      	moveq	r1, r2
 801463a:	4613      	movne	r3, r2
 801463c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014640:	9116      	str	r1, [sp, #88]	; 0x58
 8014642:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014646:	f240 8387 	bls.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801464a:	ed94 7a07 	vldr	s14, [r4, #28]
 801464e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014656:	f240 837f 	bls.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801465a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801465e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014666:	f240 8377 	bls.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801466a:	6822      	ldr	r2, [r4, #0]
 801466c:	4bb1      	ldr	r3, [pc, #708]	; (8014934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801466e:	429a      	cmp	r2, r3
 8014670:	f2c0 8372 	blt.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014674:	49b0      	ldr	r1, [pc, #704]	; (8014938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014676:	6963      	ldr	r3, [r4, #20]
 8014678:	428a      	cmp	r2, r1
 801467a:	f300 836d 	bgt.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801467e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014682:	48ae      	ldr	r0, [pc, #696]	; (801493c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014684:	33ff      	adds	r3, #255	; 0xff
 8014686:	4283      	cmp	r3, r0
 8014688:	f200 8366 	bhi.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801468c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801468e:	4dac      	ldr	r5, [pc, #688]	; (8014940 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014690:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014694:	33ff      	adds	r3, #255	; 0xff
 8014696:	42ab      	cmp	r3, r5
 8014698:	f200 835e 	bhi.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801469c:	6862      	ldr	r2, [r4, #4]
 801469e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80146a2:	33ff      	adds	r3, #255	; 0xff
 80146a4:	4283      	cmp	r3, r0
 80146a6:	f200 8357 	bhi.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146aa:	69a1      	ldr	r1, [r4, #24]
 80146ac:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80146b0:	33ff      	adds	r3, #255	; 0xff
 80146b2:	4283      	cmp	r3, r0
 80146b4:	f200 8350 	bhi.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80146ba:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80146be:	30ff      	adds	r0, #255	; 0xff
 80146c0:	42a8      	cmp	r0, r5
 80146c2:	f200 8349 	bhi.w	8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80146c6:	428a      	cmp	r2, r1
 80146c8:	f280 8110 	bge.w	80148ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80146cc:	429a      	cmp	r2, r3
 80146ce:	f300 8119 	bgt.w	8014904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80146d2:	4299      	cmp	r1, r3
 80146d4:	f280 811d 	bge.w	8014912 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80146d8:	2502      	movs	r5, #2
 80146da:	2701      	movs	r7, #1
 80146dc:	46a9      	mov	r9, r5
 80146de:	46b8      	mov	r8, r7
 80146e0:	f04f 0a00 	mov.w	sl, #0
 80146e4:	4621      	mov	r1, r4
 80146e6:	a849      	add	r0, sp, #292	; 0x124
 80146e8:	f003 feec 	bl	80184c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80146ec:	4622      	mov	r2, r4
 80146ee:	4653      	mov	r3, sl
 80146f0:	a949      	add	r1, sp, #292	; 0x124
 80146f2:	f8cd 9000 	str.w	r9, [sp]
 80146f6:	a819      	add	r0, sp, #100	; 0x64
 80146f8:	f004 f814 	bl	8018724 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80146fc:	4622      	mov	r2, r4
 80146fe:	4653      	mov	r3, sl
 8014700:	a949      	add	r1, sp, #292	; 0x124
 8014702:	f8cd 8000 	str.w	r8, [sp]
 8014706:	a829      	add	r0, sp, #164	; 0xa4
 8014708:	f004 f80c 	bl	8018724 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801470c:	4643      	mov	r3, r8
 801470e:	4622      	mov	r2, r4
 8014710:	a949      	add	r1, sp, #292	; 0x124
 8014712:	f8cd 9000 	str.w	r9, [sp]
 8014716:	a839      	add	r0, sp, #228	; 0xe4
 8014718:	f004 f804 	bl	8018724 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801471c:	42af      	cmp	r7, r5
 801471e:	bfb5      	itete	lt
 8014720:	2300      	movlt	r3, #0
 8014722:	2301      	movge	r3, #1
 8014724:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014726:	930e      	strge	r3, [sp, #56]	; 0x38
 8014728:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801472a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801472e:	af12      	add	r7, sp, #72	; 0x48
 8014730:	bfb9      	ittee	lt
 8014732:	ad29      	addlt	r5, sp, #164	; 0xa4
 8014734:	ac19      	addlt	r4, sp, #100	; 0x64
 8014736:	ad19      	addge	r5, sp, #100	; 0x64
 8014738:	ac29      	addge	r4, sp, #164	; 0xa4
 801473a:	e887 0003 	stmia.w	r7, {r0, r1}
 801473e:	b928      	cbnz	r0, 801474c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8014740:	4b80      	ldr	r3, [pc, #512]	; (8014944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8014742:	6818      	ldr	r0, [r3, #0]
 8014744:	6803      	ldr	r3, [r0, #0]
 8014746:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014748:	4798      	blx	r3
 801474a:	6038      	str	r0, [r7, #0]
 801474c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801474e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014752:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014756:	930c      	str	r3, [sp, #48]	; 0x30
 8014758:	990c      	ldr	r1, [sp, #48]	; 0x30
 801475a:	6963      	ldr	r3, [r4, #20]
 801475c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801475e:	440b      	add	r3, r1
 8014760:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014764:	4408      	add	r0, r1
 8014766:	b200      	sxth	r0, r0
 8014768:	4283      	cmp	r3, r0
 801476a:	900d      	str	r0, [sp, #52]	; 0x34
 801476c:	f280 80dd 	bge.w	801492a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014770:	428b      	cmp	r3, r1
 8014772:	da08      	bge.n	8014786 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014774:	2a00      	cmp	r2, #0
 8014776:	dd06      	ble.n	8014786 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014778:	1acb      	subs	r3, r1, r3
 801477a:	429a      	cmp	r2, r3
 801477c:	f2c0 80e4 	blt.w	8014948 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014780:	2b00      	cmp	r3, #0
 8014782:	f300 80e2 	bgt.w	801494a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014786:	6967      	ldr	r7, [r4, #20]
 8014788:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801478a:	443b      	add	r3, r7
 801478c:	461f      	mov	r7, r3
 801478e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014790:	1bdf      	subs	r7, r3, r7
 8014792:	4297      	cmp	r7, r2
 8014794:	bfa8      	it	ge
 8014796:	4617      	movge	r7, r2
 8014798:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801479c:	2f00      	cmp	r7, #0
 801479e:	f340 8166 	ble.w	8014a6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80147a2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80147a4:	6829      	ldr	r1, [r5, #0]
 80147a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80147aa:	f9bb 3000 	ldrsh.w	r3, [fp]
 80147ae:	6820      	ldr	r0, [r4, #0]
 80147b0:	4411      	add	r1, r2
 80147b2:	4299      	cmp	r1, r3
 80147b4:	dd1a      	ble.n	80147ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80147b6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80147ba:	440b      	add	r3, r1
 80147bc:	4402      	add	r2, r0
 80147be:	b21b      	sxth	r3, r3
 80147c0:	429a      	cmp	r2, r3
 80147c2:	dc13      	bgt.n	80147ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80147c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80147c8:	681b      	ldr	r3, [r3, #0]
 80147ca:	9206      	str	r2, [sp, #24]
 80147cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80147ce:	9205      	str	r2, [sp, #20]
 80147d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80147d2:	9500      	str	r5, [sp, #0]
 80147d4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80147d8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80147da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80147dc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80147e0:	a912      	add	r1, sp, #72	; 0x48
 80147e2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80147e6:	aa49      	add	r2, sp, #292	; 0x124
 80147e8:	4623      	mov	r3, r4
 80147ea:	47c8      	blx	r9
 80147ec:	e9d4 2300 	ldrd	r2, r3, [r4]
 80147f0:	441a      	add	r2, r3
 80147f2:	6963      	ldr	r3, [r4, #20]
 80147f4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80147f8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80147fc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014800:	68a1      	ldr	r1, [r4, #8]
 8014802:	ed94 6a08 	vldr	s12, [r4, #32]
 8014806:	6022      	str	r2, [r4, #0]
 8014808:	3301      	adds	r3, #1
 801480a:	6163      	str	r3, [r4, #20]
 801480c:	69a3      	ldr	r3, [r4, #24]
 801480e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014812:	3b01      	subs	r3, #1
 8014814:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014818:	61a3      	str	r3, [r4, #24]
 801481a:	6923      	ldr	r3, [r4, #16]
 801481c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014820:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014824:	edd4 6a07 	vldr	s13, [r4, #28]
 8014828:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801482c:	440b      	add	r3, r1
 801482e:	68e1      	ldr	r1, [r4, #12]
 8014830:	6123      	str	r3, [r4, #16]
 8014832:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014836:	428b      	cmp	r3, r1
 8014838:	edc4 6a07 	vstr	s13, [r4, #28]
 801483c:	db15      	blt.n	801486a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801483e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014842:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014846:	3201      	adds	r2, #1
 8014848:	edc4 6a07 	vstr	s13, [r4, #28]
 801484c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014850:	6022      	str	r2, [r4, #0]
 8014852:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014856:	1a5b      	subs	r3, r3, r1
 8014858:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801485c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014860:	6123      	str	r3, [r4, #16]
 8014862:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014866:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801486a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801486e:	441a      	add	r2, r3
 8014870:	696b      	ldr	r3, [r5, #20]
 8014872:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014876:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801487a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801487e:	68a9      	ldr	r1, [r5, #8]
 8014880:	ed95 6a08 	vldr	s12, [r5, #32]
 8014884:	602a      	str	r2, [r5, #0]
 8014886:	3301      	adds	r3, #1
 8014888:	616b      	str	r3, [r5, #20]
 801488a:	69ab      	ldr	r3, [r5, #24]
 801488c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014890:	3b01      	subs	r3, #1
 8014892:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014896:	61ab      	str	r3, [r5, #24]
 8014898:	692b      	ldr	r3, [r5, #16]
 801489a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801489e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80148a2:	edd5 6a07 	vldr	s13, [r5, #28]
 80148a6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80148aa:	440b      	add	r3, r1
 80148ac:	68e9      	ldr	r1, [r5, #12]
 80148ae:	612b      	str	r3, [r5, #16]
 80148b0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80148b4:	428b      	cmp	r3, r1
 80148b6:	edc5 6a07 	vstr	s13, [r5, #28]
 80148ba:	db15      	blt.n	80148e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80148bc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80148c0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80148c4:	3201      	adds	r2, #1
 80148c6:	edc5 6a07 	vstr	s13, [r5, #28]
 80148ca:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80148ce:	602a      	str	r2, [r5, #0]
 80148d0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80148d4:	1a5b      	subs	r3, r3, r1
 80148d6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80148da:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80148de:	612b      	str	r3, [r5, #16]
 80148e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80148e4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80148e8:	3f01      	subs	r7, #1
 80148ea:	e757      	b.n	801479c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80148ec:	4299      	cmp	r1, r3
 80148ee:	dc13      	bgt.n	8014918 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80148f0:	429a      	cmp	r2, r3
 80148f2:	da14      	bge.n	801491e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80148f4:	2502      	movs	r5, #2
 80148f6:	2703      	movs	r7, #3
 80148f8:	46a9      	mov	r9, r5
 80148fa:	f04f 0800 	mov.w	r8, #0
 80148fe:	f04f 0a01 	mov.w	sl, #1
 8014902:	e6ef      	b.n	80146e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014904:	2501      	movs	r5, #1
 8014906:	2700      	movs	r7, #0
 8014908:	46a9      	mov	r9, r5
 801490a:	46b8      	mov	r8, r7
 801490c:	f04f 0a02 	mov.w	sl, #2
 8014910:	e6e8      	b.n	80146e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014912:	2501      	movs	r5, #1
 8014914:	2702      	movs	r7, #2
 8014916:	e6e1      	b.n	80146dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014918:	2500      	movs	r5, #0
 801491a:	2701      	movs	r7, #1
 801491c:	e7f4      	b.n	8014908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801491e:	2702      	movs	r7, #2
 8014920:	2503      	movs	r5, #3
 8014922:	f04f 0900 	mov.w	r9, #0
 8014926:	46b8      	mov	r8, r7
 8014928:	e7e9      	b.n	80148fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801492a:	4613      	mov	r3, r2
 801492c:	e728      	b.n	8014780 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801492e:	bf00      	nop
 8014930:	20012dac 	.word	0x20012dac
 8014934:	fffd8f01 	.word	0xfffd8f01
 8014938:	00027100 	.word	0x00027100
 801493c:	0004e1ff 	.word	0x0004e1ff
 8014940:	0004e1fe 	.word	0x0004e1fe
 8014944:	20012db4 	.word	0x20012db4
 8014948:	4613      	mov	r3, r2
 801494a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801494c:	9111      	str	r1, [sp, #68]	; 0x44
 801494e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014952:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014956:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8014958:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801495c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014960:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014964:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014968:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801496c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014970:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014974:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014978:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801497c:	469e      	mov	lr, r3
 801497e:	469c      	mov	ip, r3
 8014980:	f04f 0900 	mov.w	r9, #0
 8014984:	f1bc 0f00 	cmp.w	ip, #0
 8014988:	d147      	bne.n	8014a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801498a:	eb03 0c07 	add.w	ip, r3, r7
 801498e:	1ad7      	subs	r7, r2, r3
 8014990:	f1b9 0f00 	cmp.w	r9, #0
 8014994:	d009      	beq.n	80149aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014996:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801499a:	9029      	str	r0, [sp, #164]	; 0xa4
 801499c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80149a0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80149a4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80149a8:	912d      	str	r1, [sp, #180]	; 0xb4
 80149aa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80149ac:	9111      	str	r1, [sp, #68]	; 0x44
 80149ae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80149b2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80149b6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80149ba:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80149be:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80149c2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80149c6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80149ca:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80149ce:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80149d2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80149d6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80149da:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80149de:	f04f 0800 	mov.w	r8, #0
 80149e2:	f1be 0f00 	cmp.w	lr, #0
 80149e6:	d031      	beq.n	8014a4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80149e8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80149ea:	4431      	add	r1, r6
 80149ec:	4549      	cmp	r1, r9
 80149ee:	4450      	add	r0, sl
 80149f0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80149f4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80149f8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80149fc:	db08      	blt.n	8014a10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80149fe:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014a02:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014a06:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014a0a:	3001      	adds	r0, #1
 8014a0c:	eba1 0109 	sub.w	r1, r1, r9
 8014a10:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014a14:	f04f 0801 	mov.w	r8, #1
 8014a18:	e7e3      	b.n	80149e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8014a1a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014a1c:	4431      	add	r1, r6
 8014a1e:	4541      	cmp	r1, r8
 8014a20:	4450      	add	r0, sl
 8014a22:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014a26:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014a2a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014a2e:	db08      	blt.n	8014a42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014a30:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014a34:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014a38:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014a3c:	3001      	adds	r0, #1
 8014a3e:	eba1 0108 	sub.w	r1, r1, r8
 8014a42:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014a46:	f04f 0901 	mov.w	r9, #1
 8014a4a:	e79b      	b.n	8014984 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014a4c:	449c      	add	ip, r3
 8014a4e:	1aff      	subs	r7, r7, r3
 8014a50:	f1b8 0f00 	cmp.w	r8, #0
 8014a54:	d009      	beq.n	8014a6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014a56:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014a5a:	9019      	str	r0, [sp, #100]	; 0x64
 8014a5c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014a60:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014a64:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014a68:	911d      	str	r1, [sp, #116]	; 0x74
 8014a6a:	1ad2      	subs	r2, r2, r3
 8014a6c:	e68b      	b.n	8014786 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014a6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a70:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014a72:	2b00      	cmp	r3, #0
 8014a74:	f000 80d1 	beq.w	8014c1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014a78:	ad19      	add	r5, sp, #100	; 0x64
 8014a7a:	ac39      	add	r4, sp, #228	; 0xe4
 8014a7c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014a7e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014a82:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014a86:	930c      	str	r3, [sp, #48]	; 0x30
 8014a88:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014a8a:	6963      	ldr	r3, [r4, #20]
 8014a8c:	440b      	add	r3, r1
 8014a8e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014a92:	4408      	add	r0, r1
 8014a94:	b200      	sxth	r0, r0
 8014a96:	4283      	cmp	r3, r0
 8014a98:	900d      	str	r0, [sp, #52]	; 0x34
 8014a9a:	f280 80c1 	bge.w	8014c20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014a9e:	428b      	cmp	r3, r1
 8014aa0:	da08      	bge.n	8014ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014aa2:	2a00      	cmp	r2, #0
 8014aa4:	dd06      	ble.n	8014ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014aa6:	1acb      	subs	r3, r1, r3
 8014aa8:	429a      	cmp	r2, r3
 8014aaa:	f2c0 80bb 	blt.w	8014c24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014aae:	2b00      	cmp	r3, #0
 8014ab0:	f300 80b9 	bgt.w	8014c26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014ab4:	6967      	ldr	r7, [r4, #20]
 8014ab6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ab8:	443b      	add	r3, r7
 8014aba:	461f      	mov	r7, r3
 8014abc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014abe:	1bdf      	subs	r7, r3, r7
 8014ac0:	4297      	cmp	r7, r2
 8014ac2:	bfa8      	it	ge
 8014ac4:	4617      	movge	r7, r2
 8014ac6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014aca:	2f00      	cmp	r7, #0
 8014acc:	f340 813c 	ble.w	8014d48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014ad0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014ad2:	6829      	ldr	r1, [r5, #0]
 8014ad4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ad8:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014adc:	6820      	ldr	r0, [r4, #0]
 8014ade:	4411      	add	r1, r2
 8014ae0:	4299      	cmp	r1, r3
 8014ae2:	dd1a      	ble.n	8014b1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014ae4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014ae8:	440b      	add	r3, r1
 8014aea:	4402      	add	r2, r0
 8014aec:	b21b      	sxth	r3, r3
 8014aee:	429a      	cmp	r2, r3
 8014af0:	dc13      	bgt.n	8014b1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014af2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014af4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014af6:	681b      	ldr	r3, [r3, #0]
 8014af8:	9206      	str	r2, [sp, #24]
 8014afa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014afc:	9205      	str	r2, [sp, #20]
 8014afe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014b00:	9500      	str	r5, [sp, #0]
 8014b02:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014b06:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014b08:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014b0a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014b0e:	a912      	add	r1, sp, #72	; 0x48
 8014b10:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014b14:	aa49      	add	r2, sp, #292	; 0x124
 8014b16:	4623      	mov	r3, r4
 8014b18:	47c8      	blx	r9
 8014b1a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014b1e:	441a      	add	r2, r3
 8014b20:	6963      	ldr	r3, [r4, #20]
 8014b22:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014b26:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014b2a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014b2e:	68a1      	ldr	r1, [r4, #8]
 8014b30:	ed94 6a08 	vldr	s12, [r4, #32]
 8014b34:	6022      	str	r2, [r4, #0]
 8014b36:	3301      	adds	r3, #1
 8014b38:	6163      	str	r3, [r4, #20]
 8014b3a:	69a3      	ldr	r3, [r4, #24]
 8014b3c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014b40:	3b01      	subs	r3, #1
 8014b42:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014b46:	61a3      	str	r3, [r4, #24]
 8014b48:	6923      	ldr	r3, [r4, #16]
 8014b4a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014b4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014b52:	edd4 6a07 	vldr	s13, [r4, #28]
 8014b56:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014b5a:	440b      	add	r3, r1
 8014b5c:	68e1      	ldr	r1, [r4, #12]
 8014b5e:	6123      	str	r3, [r4, #16]
 8014b60:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014b64:	428b      	cmp	r3, r1
 8014b66:	edc4 6a07 	vstr	s13, [r4, #28]
 8014b6a:	db15      	blt.n	8014b98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014b6c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014b70:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014b74:	3201      	adds	r2, #1
 8014b76:	edc4 6a07 	vstr	s13, [r4, #28]
 8014b7a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014b7e:	6022      	str	r2, [r4, #0]
 8014b80:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014b84:	1a5b      	subs	r3, r3, r1
 8014b86:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014b8a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014b8e:	6123      	str	r3, [r4, #16]
 8014b90:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014b94:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014b98:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014b9c:	441a      	add	r2, r3
 8014b9e:	696b      	ldr	r3, [r5, #20]
 8014ba0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014ba4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014ba8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014bac:	68a9      	ldr	r1, [r5, #8]
 8014bae:	ed95 6a08 	vldr	s12, [r5, #32]
 8014bb2:	602a      	str	r2, [r5, #0]
 8014bb4:	3301      	adds	r3, #1
 8014bb6:	616b      	str	r3, [r5, #20]
 8014bb8:	69ab      	ldr	r3, [r5, #24]
 8014bba:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014bbe:	3b01      	subs	r3, #1
 8014bc0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014bc4:	61ab      	str	r3, [r5, #24]
 8014bc6:	692b      	ldr	r3, [r5, #16]
 8014bc8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014bcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014bd0:	edd5 6a07 	vldr	s13, [r5, #28]
 8014bd4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014bd8:	440b      	add	r3, r1
 8014bda:	68e9      	ldr	r1, [r5, #12]
 8014bdc:	612b      	str	r3, [r5, #16]
 8014bde:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014be2:	428b      	cmp	r3, r1
 8014be4:	edc5 6a07 	vstr	s13, [r5, #28]
 8014be8:	db15      	blt.n	8014c16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014bea:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014bee:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014bf2:	3201      	adds	r2, #1
 8014bf4:	edc5 6a07 	vstr	s13, [r5, #28]
 8014bf8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014bfc:	602a      	str	r2, [r5, #0]
 8014bfe:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014c02:	1a5b      	subs	r3, r3, r1
 8014c04:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014c08:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014c0c:	612b      	str	r3, [r5, #16]
 8014c0e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014c12:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014c16:	3f01      	subs	r7, #1
 8014c18:	e757      	b.n	8014aca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014c1a:	ad39      	add	r5, sp, #228	; 0xe4
 8014c1c:	ac19      	add	r4, sp, #100	; 0x64
 8014c1e:	e72d      	b.n	8014a7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014c20:	4613      	mov	r3, r2
 8014c22:	e744      	b.n	8014aae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014c24:	4613      	mov	r3, r2
 8014c26:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014c2a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014c2c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014c30:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014c34:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014c38:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014c3c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014c40:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014c44:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014c48:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014c4a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014c4e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014c52:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014c56:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014c5a:	960e      	str	r6, [sp, #56]	; 0x38
 8014c5c:	469e      	mov	lr, r3
 8014c5e:	461f      	mov	r7, r3
 8014c60:	f04f 0900 	mov.w	r9, #0
 8014c64:	2f00      	cmp	r7, #0
 8014c66:	d146      	bne.n	8014cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014c68:	449c      	add	ip, r3
 8014c6a:	1ad7      	subs	r7, r2, r3
 8014c6c:	f1b9 0f00 	cmp.w	r9, #0
 8014c70:	d009      	beq.n	8014c86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014c72:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014c76:	9039      	str	r0, [sp, #228]	; 0xe4
 8014c78:	913d      	str	r1, [sp, #244]	; 0xf4
 8014c7a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014c7e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014c82:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014c86:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014c88:	910e      	str	r1, [sp, #56]	; 0x38
 8014c8a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014c8e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014c92:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014c96:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014c9a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014c9e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014ca2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014ca6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014caa:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014cae:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014cb2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014cb6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014cba:	f04f 0800 	mov.w	r8, #0
 8014cbe:	f1be 0f00 	cmp.w	lr, #0
 8014cc2:	d030      	beq.n	8014d26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014cc4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014cc6:	4431      	add	r1, r6
 8014cc8:	4549      	cmp	r1, r9
 8014cca:	4450      	add	r0, sl
 8014ccc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014cd0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014cd4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014cd8:	db08      	blt.n	8014cec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014cda:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014cde:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014ce2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014ce6:	3001      	adds	r0, #1
 8014ce8:	eba1 0109 	sub.w	r1, r1, r9
 8014cec:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014cf0:	f04f 0801 	mov.w	r8, #1
 8014cf4:	e7e3      	b.n	8014cbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014cf6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014cf8:	4431      	add	r1, r6
 8014cfa:	4541      	cmp	r1, r8
 8014cfc:	4450      	add	r0, sl
 8014cfe:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014d02:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014d06:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014d0a:	db08      	blt.n	8014d1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014d0c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014d10:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014d14:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014d18:	3001      	adds	r0, #1
 8014d1a:	eba1 0108 	sub.w	r1, r1, r8
 8014d1e:	3f01      	subs	r7, #1
 8014d20:	f04f 0901 	mov.w	r9, #1
 8014d24:	e79e      	b.n	8014c64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014d26:	449c      	add	ip, r3
 8014d28:	1aff      	subs	r7, r7, r3
 8014d2a:	f1b8 0f00 	cmp.w	r8, #0
 8014d2e:	d009      	beq.n	8014d44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014d30:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014d34:	9019      	str	r0, [sp, #100]	; 0x64
 8014d36:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014d3a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014d3e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014d42:	911d      	str	r1, [sp, #116]	; 0x74
 8014d44:	1ad2      	subs	r2, r2, r3
 8014d46:	e6b5      	b.n	8014ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014d48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014d4a:	681b      	ldr	r3, [r3, #0]
 8014d4c:	b923      	cbnz	r3, 8014d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014d4e:	4b04      	ldr	r3, [pc, #16]	; (8014d60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014d50:	6818      	ldr	r0, [r3, #0]
 8014d52:	6803      	ldr	r3, [r0, #0]
 8014d54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d56:	4798      	blx	r3
 8014d58:	b05b      	add	sp, #364	; 0x16c
 8014d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d5e:	bf00      	nop
 8014d60:	20012db4 	.word	0x20012db4

08014d64 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014d64:	b570      	push	{r4, r5, r6, lr}
 8014d66:	4604      	mov	r4, r0
 8014d68:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014d6c:	9805      	ldr	r0, [sp, #20]
 8014d6e:	6061      	str	r1, [r4, #4]
 8014d70:	2500      	movs	r5, #0
 8014d72:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014d76:	8263      	strh	r3, [r4, #18]
 8014d78:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014d7c:	8025      	strh	r5, [r4, #0]
 8014d7e:	7221      	strb	r1, [r4, #8]
 8014d80:	7266      	strb	r6, [r4, #9]
 8014d82:	60e0      	str	r0, [r4, #12]
 8014d84:	8222      	strh	r2, [r4, #16]
 8014d86:	82a3      	strh	r3, [r4, #20]
 8014d88:	82e5      	strh	r5, [r4, #22]
 8014d8a:	8325      	strh	r5, [r4, #24]
 8014d8c:	8365      	strh	r5, [r4, #26]
 8014d8e:	83a5      	strh	r5, [r4, #28]
 8014d90:	83e5      	strh	r5, [r4, #30]
 8014d92:	8425      	strh	r5, [r4, #32]
 8014d94:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014d98:	b32e      	cbz	r6, 8014de6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014d9a:	6803      	ldr	r3, [r0, #0]
 8014d9c:	695b      	ldr	r3, [r3, #20]
 8014d9e:	4798      	blx	r3
 8014da0:	4606      	mov	r6, r0
 8014da2:	b300      	cbz	r0, 8014de6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014da4:	68e0      	ldr	r0, [r4, #12]
 8014da6:	6803      	ldr	r3, [r0, #0]
 8014da8:	4631      	mov	r1, r6
 8014daa:	68db      	ldr	r3, [r3, #12]
 8014dac:	4798      	blx	r3
 8014dae:	4605      	mov	r5, r0
 8014db0:	b1c8      	cbz	r0, 8014de6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014db2:	7b43      	ldrb	r3, [r0, #13]
 8014db4:	7a82      	ldrb	r2, [r0, #10]
 8014db6:	005b      	lsls	r3, r3, #1
 8014db8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014dbc:	4313      	orrs	r3, r2
 8014dbe:	8423      	strh	r3, [r4, #32]
 8014dc0:	7a63      	ldrb	r3, [r4, #9]
 8014dc2:	2b06      	cmp	r3, #6
 8014dc4:	d10f      	bne.n	8014de6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014dc6:	68e0      	ldr	r0, [r4, #12]
 8014dc8:	6803      	ldr	r3, [r0, #0]
 8014dca:	462a      	mov	r2, r5
 8014dcc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014dce:	4631      	mov	r1, r6
 8014dd0:	4798      	blx	r3
 8014dd2:	7b6b      	ldrb	r3, [r5, #13]
 8014dd4:	005b      	lsls	r3, r3, #1
 8014dd6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014dda:	7aab      	ldrb	r3, [r5, #10]
 8014ddc:	4313      	orrs	r3, r2
 8014dde:	4418      	add	r0, r3
 8014de0:	8c23      	ldrh	r3, [r4, #32]
 8014de2:	4418      	add	r0, r3
 8014de4:	8420      	strh	r0, [r4, #32]
 8014de6:	4620      	mov	r0, r4
 8014de8:	bd70      	pop	{r4, r5, r6, pc}

08014dea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014dea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dee:	2400      	movs	r4, #0
 8014df0:	b085      	sub	sp, #20
 8014df2:	4681      	mov	r9, r0
 8014df4:	4688      	mov	r8, r1
 8014df6:	4692      	mov	sl, r2
 8014df8:	469b      	mov	fp, r3
 8014dfa:	4627      	mov	r7, r4
 8014dfc:	4625      	mov	r5, r4
 8014dfe:	4626      	mov	r6, r4
 8014e00:	4554      	cmp	r4, sl
 8014e02:	da2a      	bge.n	8014e5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014e04:	2300      	movs	r3, #0
 8014e06:	9303      	str	r3, [sp, #12]
 8014e08:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014e0c:	429d      	cmp	r5, r3
 8014e0e:	d004      	beq.n	8014e1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014e10:	f242 030b 	movw	r3, #8203	; 0x200b
 8014e14:	429d      	cmp	r5, r3
 8014e16:	bf18      	it	ne
 8014e18:	462f      	movne	r7, r5
 8014e1a:	ab03      	add	r3, sp, #12
 8014e1c:	4642      	mov	r2, r8
 8014e1e:	4659      	mov	r1, fp
 8014e20:	4648      	mov	r0, r9
 8014e22:	f003 f965 	bl	80180f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014e26:	4605      	mov	r5, r0
 8014e28:	b1b8      	cbz	r0, 8014e5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014e2a:	280a      	cmp	r0, #10
 8014e2c:	d015      	beq.n	8014e5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014e2e:	9a03      	ldr	r2, [sp, #12]
 8014e30:	b18a      	cbz	r2, 8014e56 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014e32:	7b50      	ldrb	r0, [r2, #13]
 8014e34:	7a93      	ldrb	r3, [r2, #10]
 8014e36:	8895      	ldrh	r5, [r2, #4]
 8014e38:	0040      	lsls	r0, r0, #1
 8014e3a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014e3e:	4303      	orrs	r3, r0
 8014e40:	9301      	str	r3, [sp, #4]
 8014e42:	f8d8 3000 	ldr.w	r3, [r8]
 8014e46:	4639      	mov	r1, r7
 8014e48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014e4a:	4640      	mov	r0, r8
 8014e4c:	4798      	blx	r3
 8014e4e:	9b01      	ldr	r3, [sp, #4]
 8014e50:	4418      	add	r0, r3
 8014e52:	4406      	add	r6, r0
 8014e54:	b2b6      	uxth	r6, r6
 8014e56:	3401      	adds	r4, #1
 8014e58:	e7d2      	b.n	8014e00 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014e5a:	4630      	mov	r0, r6
 8014e5c:	b005      	add	sp, #20
 8014e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e62 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014e62:	2a02      	cmp	r2, #2
 8014e64:	b530      	push	{r4, r5, lr}
 8014e66:	d011      	beq.n	8014e8c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014e68:	2a03      	cmp	r2, #3
 8014e6a:	d01c      	beq.n	8014ea6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014e6c:	2a01      	cmp	r2, #1
 8014e6e:	d10c      	bne.n	8014e8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014e70:	888b      	ldrh	r3, [r1, #4]
 8014e72:	8801      	ldrh	r1, [r0, #0]
 8014e74:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014e78:	8844      	ldrh	r4, [r0, #2]
 8014e7a:	8004      	strh	r4, [r0, #0]
 8014e7c:	1a5b      	subs	r3, r3, r1
 8014e7e:	1a9b      	subs	r3, r3, r2
 8014e80:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014e84:	8043      	strh	r3, [r0, #2]
 8014e86:	8081      	strh	r1, [r0, #4]
 8014e88:	80c2      	strh	r2, [r0, #6]
 8014e8a:	bd30      	pop	{r4, r5, pc}
 8014e8c:	88cb      	ldrh	r3, [r1, #6]
 8014e8e:	8842      	ldrh	r2, [r0, #2]
 8014e90:	1a9b      	subs	r3, r3, r2
 8014e92:	88c2      	ldrh	r2, [r0, #6]
 8014e94:	1a9b      	subs	r3, r3, r2
 8014e96:	888a      	ldrh	r2, [r1, #4]
 8014e98:	8801      	ldrh	r1, [r0, #0]
 8014e9a:	8043      	strh	r3, [r0, #2]
 8014e9c:	1a52      	subs	r2, r2, r1
 8014e9e:	8881      	ldrh	r1, [r0, #4]
 8014ea0:	1a52      	subs	r2, r2, r1
 8014ea2:	8002      	strh	r2, [r0, #0]
 8014ea4:	e7f1      	b.n	8014e8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014ea6:	88cb      	ldrh	r3, [r1, #6]
 8014ea8:	8841      	ldrh	r1, [r0, #2]
 8014eaa:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014eae:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014eb2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014eb6:	8045      	strh	r5, [r0, #2]
 8014eb8:	1a5b      	subs	r3, r3, r1
 8014eba:	1a9b      	subs	r3, r3, r2
 8014ebc:	8003      	strh	r3, [r0, #0]
 8014ebe:	8082      	strh	r2, [r0, #4]
 8014ec0:	80c4      	strh	r4, [r0, #6]
 8014ec2:	e7e2      	b.n	8014e8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014ec4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec8:	b09f      	sub	sp, #124	; 0x7c
 8014eca:	9116      	str	r1, [sp, #88]	; 0x58
 8014ecc:	9317      	str	r3, [sp, #92]	; 0x5c
 8014ece:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014ed0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ed2:	8809      	ldrh	r1, [r1, #0]
 8014ed4:	889b      	ldrh	r3, [r3, #4]
 8014ed6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014eda:	9212      	str	r2, [sp, #72]	; 0x48
 8014edc:	440b      	add	r3, r1
 8014ede:	b21b      	sxth	r3, r3
 8014ee0:	9310      	str	r3, [sp, #64]	; 0x40
 8014ee2:	f8d8 3000 	ldr.w	r3, [r8]
 8014ee6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014eea:	7b19      	ldrb	r1, [r3, #12]
 8014eec:	7adb      	ldrb	r3, [r3, #11]
 8014eee:	9011      	str	r0, [sp, #68]	; 0x44
 8014ef0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014ef4:	9114      	str	r1, [sp, #80]	; 0x50
 8014ef6:	9315      	str	r3, [sp, #84]	; 0x54
 8014ef8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014efc:	2a00      	cmp	r2, #0
 8014efe:	d06a      	beq.n	8014fd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014f00:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014f04:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014f06:	2b06      	cmp	r3, #6
 8014f08:	bf14      	ite	ne
 8014f0a:	2301      	movne	r3, #1
 8014f0c:	2302      	moveq	r3, #2
 8014f0e:	4413      	add	r3, r2
 8014f10:	f04f 0900 	mov.w	r9, #0
 8014f14:	930f      	str	r3, [sp, #60]	; 0x3c
 8014f16:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014f1a:	464c      	mov	r4, r9
 8014f1c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014f20:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014f24:	4293      	cmp	r3, r2
 8014f26:	f280 808f 	bge.w	8015048 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014f2a:	2300      	movs	r3, #0
 8014f2c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014f30:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014f34:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014f38:	429c      	cmp	r4, r3
 8014f3a:	d006      	beq.n	8014f4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014f3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f3e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014f42:	4294      	cmp	r4, r2
 8014f44:	bf18      	it	ne
 8014f46:	4623      	movne	r3, r4
 8014f48:	930d      	str	r3, [sp, #52]	; 0x34
 8014f4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f4c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014f4e:	f8d8 2000 	ldr.w	r2, [r8]
 8014f52:	428b      	cmp	r3, r1
 8014f54:	db41      	blt.n	8014fda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014f56:	6813      	ldr	r3, [r2, #0]
 8014f58:	4610      	mov	r0, r2
 8014f5a:	695b      	ldr	r3, [r3, #20]
 8014f5c:	4798      	blx	r3
 8014f5e:	4604      	mov	r4, r0
 8014f60:	f8d8 0000 	ldr.w	r0, [r8]
 8014f64:	6803      	ldr	r3, [r0, #0]
 8014f66:	aa1d      	add	r2, sp, #116	; 0x74
 8014f68:	689d      	ldr	r5, [r3, #8]
 8014f6a:	4621      	mov	r1, r4
 8014f6c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014f70:	47a8      	blx	r5
 8014f72:	901c      	str	r0, [sp, #112]	; 0x70
 8014f74:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014f78:	429c      	cmp	r4, r3
 8014f7a:	f000 80eb 	beq.w	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f7e:	f242 030b 	movw	r3, #8203	; 0x200b
 8014f82:	429c      	cmp	r4, r3
 8014f84:	f000 80e6 	beq.w	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f88:	2c00      	cmp	r4, #0
 8014f8a:	f000 80f8 	beq.w	801517e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014f8e:	2c0a      	cmp	r4, #10
 8014f90:	d060      	beq.n	8015054 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014f92:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014f94:	b36a      	cbz	r2, 8014ff2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014f96:	8894      	ldrh	r4, [r2, #4]
 8014f98:	f1bb 0f00 	cmp.w	fp, #0
 8014f9c:	d03b      	beq.n	8015016 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014f9e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014fa2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014fa6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014faa:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014fae:	f1bb 0f01 	cmp.w	fp, #1
 8014fb2:	ea49 0903 	orr.w	r9, r9, r3
 8014fb6:	d134      	bne.n	8015022 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014fb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014fba:	eba6 0609 	sub.w	r6, r6, r9
 8014fbe:	2b00      	cmp	r3, #0
 8014fc0:	d14f      	bne.n	8015062 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014fc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014fc4:	eb09 0306 	add.w	r3, r9, r6
 8014fc8:	4413      	add	r3, r2
 8014fca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014fcc:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014fd0:	4293      	cmp	r3, r2
 8014fd2:	da51      	bge.n	8015078 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014fd4:	e038      	b.n	8015048 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014fd6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014fd8:	e79a      	b.n	8014f10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014fda:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014fde:	9301      	str	r3, [sp, #4]
 8014fe0:	ab1d      	add	r3, sp, #116	; 0x74
 8014fe2:	9300      	str	r3, [sp, #0]
 8014fe4:	4659      	mov	r1, fp
 8014fe6:	ab1c      	add	r3, sp, #112	; 0x70
 8014fe8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014fea:	f003 f8ca 	bl	8018182 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014fee:	4604      	mov	r4, r0
 8014ff0:	e7c0      	b.n	8014f74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014ff2:	f8d8 0000 	ldr.w	r0, [r8]
 8014ff6:	6803      	ldr	r3, [r0, #0]
 8014ff8:	691b      	ldr	r3, [r3, #16]
 8014ffa:	4798      	blx	r3
 8014ffc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015000:	4298      	cmp	r0, r3
 8015002:	f000 80a7 	beq.w	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015006:	f242 030b 	movw	r3, #8203	; 0x200b
 801500a:	4298      	cmp	r0, r3
 801500c:	f000 80a2 	beq.w	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015010:	f1bb 0f00 	cmp.w	fp, #0
 8015014:	d100      	bne.n	8015018 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015016:	444e      	add	r6, r9
 8015018:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801501a:	2a00      	cmp	r2, #0
 801501c:	d1bf      	bne.n	8014f9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801501e:	4691      	mov	r9, r2
 8015020:	e098      	b.n	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015022:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015024:	2b00      	cmp	r3, #0
 8015026:	f000 80ac 	beq.w	8015182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801502a:	f1bb 0f00 	cmp.w	fp, #0
 801502e:	d118      	bne.n	8015062 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015030:	f8d8 0000 	ldr.w	r0, [r8]
 8015034:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015036:	6803      	ldr	r3, [r0, #0]
 8015038:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801503a:	4798      	blx	r3
 801503c:	4406      	add	r6, r0
 801503e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015040:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015042:	1af3      	subs	r3, r6, r3
 8015044:	4293      	cmp	r3, r2
 8015046:	dd17      	ble.n	8015078 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015048:	2c00      	cmp	r4, #0
 801504a:	f000 8098 	beq.w	801517e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801504e:	2c0a      	cmp	r4, #10
 8015050:	f040 8086 	bne.w	8015160 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015054:	240a      	movs	r4, #10
 8015056:	fab4 f084 	clz	r0, r4
 801505a:	0940      	lsrs	r0, r0, #5
 801505c:	b01f      	add	sp, #124	; 0x7c
 801505e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015062:	f8d8 0000 	ldr.w	r0, [r8]
 8015066:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015068:	6803      	ldr	r3, [r0, #0]
 801506a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801506c:	4798      	blx	r3
 801506e:	f1bb 0f01 	cmp.w	fp, #1
 8015072:	eba6 0600 	sub.w	r6, r6, r0
 8015076:	d0a4      	beq.n	8014fc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015078:	981c      	ldr	r0, [sp, #112]	; 0x70
 801507a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801507c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015080:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015084:	7b43      	ldrb	r3, [r0, #13]
 8015086:	015b      	lsls	r3, r3, #5
 8015088:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801508c:	7983      	ldrb	r3, [r0, #6]
 801508e:	4431      	add	r1, r6
 8015090:	4313      	orrs	r3, r2
 8015092:	440b      	add	r3, r1
 8015094:	42bb      	cmp	r3, r7
 8015096:	db5d      	blt.n	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015098:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801509a:	4299      	cmp	r1, r3
 801509c:	da5a      	bge.n	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801509e:	f8d8 0000 	ldr.w	r0, [r8]
 80150a2:	6803      	ldr	r3, [r0, #0]
 80150a4:	42b7      	cmp	r7, r6
 80150a6:	bfc8      	it	gt
 80150a8:	1bbf      	subgt	r7, r7, r6
 80150aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80150ac:	bfcc      	ite	gt
 80150ae:	b2bf      	uxthgt	r7, r7
 80150b0:	2700      	movle	r7, #0
 80150b2:	4798      	blx	r3
 80150b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80150b6:	7b5a      	ldrb	r2, [r3, #13]
 80150b8:	00d1      	lsls	r1, r2, #3
 80150ba:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80150be:	7a19      	ldrb	r1, [r3, #8]
 80150c0:	4329      	orrs	r1, r5
 80150c2:	0655      	lsls	r5, r2, #25
 80150c4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80150c6:	bf44      	itt	mi
 80150c8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80150cc:	b209      	sxthmi	r1, r1
 80150ce:	1945      	adds	r5, r0, r5
 80150d0:	1a6d      	subs	r5, r5, r1
 80150d2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80150d4:	b2ad      	uxth	r5, r5
 80150d6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80150da:	fa0f fa85 	sxth.w	sl, r5
 80150de:	4551      	cmp	r1, sl
 80150e0:	dd3c      	ble.n	801515c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80150e2:	0112      	lsls	r2, r2, #4
 80150e4:	79d8      	ldrb	r0, [r3, #7]
 80150e6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80150ea:	4302      	orrs	r2, r0
 80150ec:	4492      	add	sl, r2
 80150ee:	4551      	cmp	r1, sl
 80150f0:	dc30      	bgt.n	8015154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80150f2:	1b4d      	subs	r5, r1, r5
 80150f4:	b22d      	sxth	r5, r5
 80150f6:	468a      	mov	sl, r1
 80150f8:	9319      	str	r3, [sp, #100]	; 0x64
 80150fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80150fc:	f8d8 0000 	ldr.w	r0, [r8]
 8015100:	681a      	ldr	r2, [r3, #0]
 8015102:	6801      	ldr	r1, [r0, #0]
 8015104:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015106:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015108:	9313      	str	r3, [sp, #76]	; 0x4c
 801510a:	9218      	str	r2, [sp, #96]	; 0x60
 801510c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801510e:	4788      	blx	r1
 8015110:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015114:	910b      	str	r1, [sp, #44]	; 0x2c
 8015116:	f898 100e 	ldrb.w	r1, [r8, #14]
 801511a:	910a      	str	r1, [sp, #40]	; 0x28
 801511c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015120:	9109      	str	r1, [sp, #36]	; 0x24
 8015122:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015126:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015128:	9305      	str	r3, [sp, #20]
 801512a:	b2ad      	uxth	r5, r5
 801512c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015130:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015134:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015136:	9304      	str	r3, [sp, #16]
 8015138:	4437      	add	r7, r6
 801513a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801513c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801513e:	9206      	str	r2, [sp, #24]
 8015140:	b23f      	sxth	r7, r7
 8015142:	f8cd a004 	str.w	sl, [sp, #4]
 8015146:	9700      	str	r7, [sp, #0]
 8015148:	681a      	ldr	r2, [r3, #0]
 801514a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801514c:	685b      	ldr	r3, [r3, #4]
 801514e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015150:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015152:	47a8      	blx	r5
 8015154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015156:	3301      	adds	r3, #1
 8015158:	930e      	str	r3, [sp, #56]	; 0x38
 801515a:	e6e1      	b.n	8014f20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801515c:	2500      	movs	r5, #0
 801515e:	e7cb      	b.n	80150f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015160:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015162:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015164:	3501      	adds	r5, #1
 8015166:	429d      	cmp	r5, r3
 8015168:	f6bf af75 	bge.w	8015056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801516c:	4659      	mov	r1, fp
 801516e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015170:	f7f3 ff36 	bl	8008fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015174:	4604      	mov	r4, r0
 8015176:	b110      	cbz	r0, 801517e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015178:	280a      	cmp	r0, #10
 801517a:	d1f2      	bne.n	8015162 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801517c:	e76a      	b.n	8015054 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801517e:	2400      	movs	r4, #0
 8015180:	e769      	b.n	8015056 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015182:	f1bb 0f00 	cmp.w	fp, #0
 8015186:	f43f af5a 	beq.w	801503e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801518a:	e775      	b.n	8015078 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801518c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801518c:	b530      	push	{r4, r5, lr}
 801518e:	8ac4      	ldrh	r4, [r0, #22]
 8015190:	8b45      	ldrh	r5, [r0, #26]
 8015192:	8343      	strh	r3, [r0, #26]
 8015194:	442c      	add	r4, r5
 8015196:	1ae4      	subs	r4, r4, r3
 8015198:	82c4      	strh	r4, [r0, #22]
 801519a:	8b83      	ldrh	r3, [r0, #28]
 801519c:	8b04      	ldrh	r4, [r0, #24]
 801519e:	4422      	add	r2, r4
 80151a0:	440c      	add	r4, r1
 80151a2:	1a59      	subs	r1, r3, r1
 80151a4:	83c2      	strh	r2, [r0, #30]
 80151a6:	8304      	strh	r4, [r0, #24]
 80151a8:	8381      	strh	r1, [r0, #28]
 80151aa:	bd30      	pop	{r4, r5, pc}

080151ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80151ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151b0:	4604      	mov	r4, r0
 80151b2:	8a47      	ldrh	r7, [r0, #18]
 80151b4:	68c0      	ldr	r0, [r0, #12]
 80151b6:	6803      	ldr	r3, [r0, #0]
 80151b8:	b085      	sub	sp, #20
 80151ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80151bc:	4798      	blx	r3
 80151be:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80151c2:	7a63      	ldrb	r3, [r4, #9]
 80151c4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80151c8:	42b7      	cmp	r7, r6
 80151ca:	f103 33ff 	add.w	r3, r3, #4294967295
 80151ce:	bfac      	ite	ge
 80151d0:	f04f 0900 	movge.w	r9, #0
 80151d4:	f04f 0901 	movlt.w	r9, #1
 80151d8:	2b05      	cmp	r3, #5
 80151da:	d804      	bhi.n	80151e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80151dc:	e8df f003 	tbb	[pc, r3]
 80151e0:	470e0854 	.word	0x470e0854
 80151e4:	4c4c      	.short	0x4c4c
 80151e6:	2500      	movs	r5, #0
 80151e8:	46a9      	mov	r9, r5
 80151ea:	462e      	mov	r6, r5
 80151ec:	462f      	mov	r7, r5
 80151ee:	e00d      	b.n	801520c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80151f0:	42b7      	cmp	r7, r6
 80151f2:	bfb4      	ite	lt
 80151f4:	2600      	movlt	r6, #0
 80151f6:	2601      	movge	r6, #1
 80151f8:	2500      	movs	r5, #0
 80151fa:	e7f7      	b.n	80151ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80151fc:	42b7      	cmp	r7, r6
 80151fe:	464d      	mov	r5, r9
 8015200:	f04f 0900 	mov.w	r9, #0
 8015204:	bfb4      	ite	lt
 8015206:	2600      	movlt	r6, #0
 8015208:	2601      	movge	r6, #1
 801520a:	464f      	mov	r7, r9
 801520c:	f04f 0800 	mov.w	r8, #0
 8015210:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015214:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015218:	f8cd 8004 	str.w	r8, [sp, #4]
 801521c:	2300      	movs	r3, #0
 801521e:	9303      	str	r3, [sp, #12]
 8015220:	8823      	ldrh	r3, [r4, #0]
 8015222:	2b20      	cmp	r3, #32
 8015224:	d034      	beq.n	8015290 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015226:	f242 010b 	movw	r1, #8203	; 0x200b
 801522a:	1a5a      	subs	r2, r3, r1
 801522c:	f1d2 0a00 	rsbs	sl, r2, #0
 8015230:	eb4a 0a02 	adc.w	sl, sl, r2
 8015234:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015238:	4293      	cmp	r3, r2
 801523a:	d009      	beq.n	8015250 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801523c:	428b      	cmp	r3, r1
 801523e:	9a01      	ldr	r2, [sp, #4]
 8015240:	bf18      	it	ne
 8015242:	461a      	movne	r2, r3
 8015244:	9201      	str	r2, [sp, #4]
 8015246:	bf0c      	ite	eq
 8015248:	f04f 0a01 	moveq.w	sl, #1
 801524c:	f04f 0a00 	movne.w	sl, #0
 8015250:	ab03      	add	r3, sp, #12
 8015252:	68e2      	ldr	r2, [r4, #12]
 8015254:	7a21      	ldrb	r1, [r4, #8]
 8015256:	6860      	ldr	r0, [r4, #4]
 8015258:	f002 ff4a 	bl	80180f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801525c:	8020      	strh	r0, [r4, #0]
 801525e:	b9d8      	cbnz	r0, 8015298 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015260:	8ba2      	ldrh	r2, [r4, #28]
 8015262:	2300      	movs	r3, #0
 8015264:	4611      	mov	r1, r2
 8015266:	4620      	mov	r0, r4
 8015268:	f7ff ff90 	bl	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801526c:	e06e      	b.n	801534c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801526e:	2500      	movs	r5, #0
 8015270:	46a9      	mov	r9, r5
 8015272:	462e      	mov	r6, r5
 8015274:	2701      	movs	r7, #1
 8015276:	e7c9      	b.n	801520c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015278:	42b7      	cmp	r7, r6
 801527a:	f04f 0500 	mov.w	r5, #0
 801527e:	bfb4      	ite	lt
 8015280:	2700      	movlt	r7, #0
 8015282:	2701      	movge	r7, #1
 8015284:	462e      	mov	r6, r5
 8015286:	e7c1      	b.n	801520c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015288:	2500      	movs	r5, #0
 801528a:	46a9      	mov	r9, r5
 801528c:	2601      	movs	r6, #1
 801528e:	e7ad      	b.n	80151ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015290:	9301      	str	r3, [sp, #4]
 8015292:	f04f 0a01 	mov.w	sl, #1
 8015296:	e7db      	b.n	8015250 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015298:	8b63      	ldrh	r3, [r4, #26]
 801529a:	280a      	cmp	r0, #10
 801529c:	f103 0301 	add.w	r3, r3, #1
 80152a0:	8363      	strh	r3, [r4, #26]
 80152a2:	d0dd      	beq.n	8015260 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80152a4:	9a03      	ldr	r2, [sp, #12]
 80152a6:	bb62      	cbnz	r2, 8015302 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80152a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80152ac:	4298      	cmp	r0, r3
 80152ae:	d003      	beq.n	80152b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80152b0:	f242 030b 	movw	r3, #8203	; 0x200b
 80152b4:	4298      	cmp	r0, r3
 80152b6:	d1b1      	bne.n	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80152b8:	8823      	ldrh	r3, [r4, #0]
 80152ba:	8ba1      	ldrh	r1, [r4, #28]
 80152bc:	2b20      	cmp	r3, #32
 80152be:	d003      	beq.n	80152c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80152c0:	f242 000b 	movw	r0, #8203	; 0x200b
 80152c4:	4283      	cmp	r3, r0
 80152c6:	d131      	bne.n	801532c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80152c8:	f1ba 0f00 	cmp.w	sl, #0
 80152cc:	bf0a      	itet	eq
 80152ce:	4688      	moveq	r8, r1
 80152d0:	4650      	movne	r0, sl
 80152d2:	2001      	moveq	r0, #1
 80152d4:	440a      	add	r2, r1
 80152d6:	8b23      	ldrh	r3, [r4, #24]
 80152d8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80152dc:	b292      	uxth	r2, r2
 80152de:	83a2      	strh	r2, [r4, #28]
 80152e0:	4413      	add	r3, r2
 80152e2:	f1b9 0f00 	cmp.w	r9, #0
 80152e6:	d102      	bne.n	80152ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80152e8:	2d00      	cmp	r5, #0
 80152ea:	d042      	beq.n	8015372 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80152ec:	b300      	cbz	r0, 8015330 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80152ee:	8c21      	ldrh	r1, [r4, #32]
 80152f0:	4419      	add	r1, r3
 80152f2:	458c      	cmp	ip, r1
 80152f4:	da37      	bge.n	8015366 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80152f6:	8ae1      	ldrh	r1, [r4, #22]
 80152f8:	2900      	cmp	r1, #0
 80152fa:	d034      	beq.n	8015366 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80152fc:	4563      	cmp	r3, ip
 80152fe:	dd8d      	ble.n	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015300:	e01d      	b.n	801533e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015302:	8893      	ldrh	r3, [r2, #4]
 8015304:	8023      	strh	r3, [r4, #0]
 8015306:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801530a:	9901      	ldr	r1, [sp, #4]
 801530c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015310:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015314:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015318:	ea4b 0b00 	orr.w	fp, fp, r0
 801531c:	68e0      	ldr	r0, [r4, #12]
 801531e:	6803      	ldr	r3, [r0, #0]
 8015320:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015322:	4798      	blx	r3
 8015324:	eb0b 0200 	add.w	r2, fp, r0
 8015328:	b292      	uxth	r2, r2
 801532a:	e7c5      	b.n	80152b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801532c:	2000      	movs	r0, #0
 801532e:	e7d1      	b.n	80152d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015330:	4563      	cmp	r3, ip
 8015332:	f77f af73 	ble.w	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015336:	8ae3      	ldrh	r3, [r4, #22]
 8015338:	2b00      	cmp	r3, #0
 801533a:	f43f af6f 	beq.w	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801533e:	2301      	movs	r3, #1
 8015340:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015344:	8c22      	ldrh	r2, [r4, #32]
 8015346:	8be3      	ldrh	r3, [r4, #30]
 8015348:	4413      	add	r3, r2
 801534a:	83e3      	strh	r3, [r4, #30]
 801534c:	68e0      	ldr	r0, [r4, #12]
 801534e:	6803      	ldr	r3, [r0, #0]
 8015350:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015352:	4798      	blx	r3
 8015354:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015358:	4418      	add	r0, r3
 801535a:	8a63      	ldrh	r3, [r4, #18]
 801535c:	1a18      	subs	r0, r3, r0
 801535e:	8260      	strh	r0, [r4, #18]
 8015360:	b005      	add	sp, #20
 8015362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015366:	2300      	movs	r3, #0
 8015368:	4611      	mov	r1, r2
 801536a:	4620      	mov	r0, r4
 801536c:	f7ff ff0e 	bl	801518c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015370:	e754      	b.n	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015372:	4563      	cmp	r3, ip
 8015374:	dd14      	ble.n	80153a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015376:	b117      	cbz	r7, 801537e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015378:	2301      	movs	r3, #1
 801537a:	460a      	mov	r2, r1
 801537c:	e772      	b.n	8015264 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801537e:	2e00      	cmp	r6, #0
 8015380:	f43f af4c 	beq.w	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015384:	2800      	cmp	r0, #0
 8015386:	f47f af49 	bne.w	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801538a:	f1ba 0f00 	cmp.w	sl, #0
 801538e:	d002      	beq.n	8015396 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015390:	2301      	movs	r3, #1
 8015392:	4642      	mov	r2, r8
 8015394:	e767      	b.n	8015266 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015396:	8ae3      	ldrh	r3, [r4, #22]
 8015398:	2b00      	cmp	r3, #0
 801539a:	f43f af3f 	beq.w	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801539e:	e7d5      	b.n	801534c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80153a0:	2800      	cmp	r0, #0
 80153a2:	f47f af3b 	bne.w	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153a6:	f1ba 0f00 	cmp.w	sl, #0
 80153aa:	f43f af37 	beq.w	801521c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153ae:	2301      	movs	r3, #1
 80153b0:	4642      	mov	r2, r8
 80153b2:	e7da      	b.n	801536a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080153b4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80153b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80153b6:	4605      	mov	r5, r0
 80153b8:	b08f      	sub	sp, #60	; 0x3c
 80153ba:	4617      	mov	r7, r2
 80153bc:	461c      	mov	r4, r3
 80153be:	460e      	mov	r6, r1
 80153c0:	b1d1      	cbz	r1, 80153f8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80153c2:	681b      	ldr	r3, [r3, #0]
 80153c4:	4620      	mov	r0, r4
 80153c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80153c8:	4798      	blx	r3
 80153ca:	4240      	negs	r0, r0
 80153cc:	b200      	sxth	r0, r0
 80153ce:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80153d2:	9603      	str	r6, [sp, #12]
 80153d4:	9700      	str	r7, [sp, #0]
 80153d6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80153da:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80153de:	4629      	mov	r1, r5
 80153e0:	a805      	add	r0, sp, #20
 80153e2:	f7ff fcbf 	bl	8014d64 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80153e6:	2401      	movs	r4, #1
 80153e8:	a805      	add	r0, sp, #20
 80153ea:	f7ff fedf 	bl	80151ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80153ee:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80153f2:	b163      	cbz	r3, 801540e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80153f4:	3401      	adds	r4, #1
 80153f6:	e7f7      	b.n	80153e8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80153f8:	f002 ff48 	bl	801828c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80153fc:	2401      	movs	r4, #1
 80153fe:	280a      	cmp	r0, #10
 8015400:	4628      	mov	r0, r5
 8015402:	bf08      	it	eq
 8015404:	3401      	addeq	r4, #1
 8015406:	f002 ff41 	bl	801828c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801540a:	2800      	cmp	r0, #0
 801540c:	d1f7      	bne.n	80153fe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801540e:	b2a0      	uxth	r0, r4
 8015410:	b00f      	add	sp, #60	; 0x3c
 8015412:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015414 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015418:	b0e3      	sub	sp, #396	; 0x18c
 801541a:	461c      	mov	r4, r3
 801541c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801541e:	4683      	mov	fp, r0
 8015420:	4688      	mov	r8, r1
 8015422:	2b00      	cmp	r3, #0
 8015424:	f000 8112 	beq.w	801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015428:	6823      	ldr	r3, [r4, #0]
 801542a:	2b00      	cmp	r3, #0
 801542c:	f000 810e 	beq.w	801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015430:	7ba3      	ldrb	r3, [r4, #14]
 8015432:	2b00      	cmp	r3, #0
 8015434:	f000 810a 	beq.w	801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015438:	6810      	ldr	r0, [r2, #0]
 801543a:	6851      	ldr	r1, [r2, #4]
 801543c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015440:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015444:	ad0a      	add	r5, sp, #40	; 0x28
 8015446:	462b      	mov	r3, r5
 8015448:	c303      	stmia	r3!, {r0, r1}
 801544a:	2100      	movs	r1, #0
 801544c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015450:	910c      	str	r1, [sp, #48]	; 0x30
 8015452:	79a2      	ldrb	r2, [r4, #6]
 8015454:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015458:	a90c      	add	r1, sp, #48	; 0x30
 801545a:	4628      	mov	r0, r5
 801545c:	f7ff fd01 	bl	8014e62 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015460:	a90c      	add	r1, sp, #48	; 0x30
 8015462:	4608      	mov	r0, r1
 8015464:	79a2      	ldrb	r2, [r4, #6]
 8015466:	f7ff fcfc 	bl	8014e62 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801546a:	a817      	add	r0, sp, #92	; 0x5c
 801546c:	f002 fae2 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 8015470:	6820      	ldr	r0, [r4, #0]
 8015472:	6803      	ldr	r3, [r0, #0]
 8015474:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015476:	4798      	blx	r3
 8015478:	4606      	mov	r6, r0
 801547a:	6820      	ldr	r0, [r4, #0]
 801547c:	6803      	ldr	r3, [r0, #0]
 801547e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015480:	4798      	blx	r3
 8015482:	4633      	mov	r3, r6
 8015484:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015486:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015488:	9000      	str	r0, [sp, #0]
 801548a:	a817      	add	r0, sp, #92	; 0x5c
 801548c:	f002 fb2d 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015490:	6820      	ldr	r0, [r4, #0]
 8015492:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015496:	6803      	ldr	r3, [r0, #0]
 8015498:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801549a:	4798      	blx	r3
 801549c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80154a0:	6823      	ldr	r3, [r4, #0]
 80154a2:	4607      	mov	r7, r0
 80154a4:	4406      	add	r6, r0
 80154a6:	a830      	add	r0, sp, #192	; 0xc0
 80154a8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80154ac:	f002 fac2 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 80154b0:	7c23      	ldrb	r3, [r4, #16]
 80154b2:	b17b      	cbz	r3, 80154d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80154b4:	6820      	ldr	r0, [r4, #0]
 80154b6:	6803      	ldr	r3, [r0, #0]
 80154b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80154ba:	4798      	blx	r3
 80154bc:	9009      	str	r0, [sp, #36]	; 0x24
 80154be:	6820      	ldr	r0, [r4, #0]
 80154c0:	6802      	ldr	r2, [r0, #0]
 80154c2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80154c4:	4790      	blx	r2
 80154c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154c8:	9000      	str	r0, [sp, #0]
 80154ca:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80154cc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80154ce:	a830      	add	r0, sp, #192	; 0xc0
 80154d0:	f002 fb0b 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80154d4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80154d8:	7be2      	ldrb	r2, [r4, #15]
 80154da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80154de:	1a8a      	subs	r2, r1, r2
 80154e0:	7c21      	ldrb	r1, [r4, #16]
 80154e2:	9103      	str	r1, [sp, #12]
 80154e4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80154e8:	9102      	str	r1, [sp, #8]
 80154ea:	6821      	ldr	r1, [r4, #0]
 80154ec:	9101      	str	r1, [sp, #4]
 80154ee:	7961      	ldrb	r1, [r4, #5]
 80154f0:	9100      	str	r1, [sp, #0]
 80154f2:	b292      	uxth	r2, r2
 80154f4:	a930      	add	r1, sp, #192	; 0xc0
 80154f6:	a80e      	add	r0, sp, #56	; 0x38
 80154f8:	f7ff fc34 	bl	8014d64 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80154fc:	2e00      	cmp	r6, #0
 80154fe:	dc5b      	bgt.n	80155b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015500:	af17      	add	r7, sp, #92	; 0x5c
 8015502:	f04f 0900 	mov.w	r9, #0
 8015506:	7c23      	ldrb	r3, [r4, #16]
 8015508:	2b00      	cmp	r3, #0
 801550a:	f000 80b1 	beq.w	8015670 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801550e:	a80e      	add	r0, sp, #56	; 0x38
 8015510:	f7ff fe4c 	bl	80151ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015514:	f1ba 0f00 	cmp.w	sl, #0
 8015518:	f000 80a5 	beq.w	8015666 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801551c:	7c23      	ldrb	r3, [r4, #16]
 801551e:	9309      	str	r3, [sp, #36]	; 0x24
 8015520:	2264      	movs	r2, #100	; 0x64
 8015522:	4639      	mov	r1, r7
 8015524:	a849      	add	r0, sp, #292	; 0x124
 8015526:	f015 fe7c 	bl	802b222 <memcpy>
 801552a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801552c:	2b00      	cmp	r3, #0
 801552e:	f000 80a7 	beq.w	8015680 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015532:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015536:	7922      	ldrb	r2, [r4, #4]
 8015538:	2a01      	cmp	r2, #1
 801553a:	f040 808a 	bne.w	8015652 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801553e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015542:	1ac0      	subs	r0, r0, r3
 8015544:	2302      	movs	r3, #2
 8015546:	fb90 f0f3 	sdiv	r0, r0, r3
 801554a:	b200      	sxth	r0, r0
 801554c:	7c23      	ldrb	r3, [r4, #16]
 801554e:	2b00      	cmp	r3, #0
 8015550:	f000 808b 	beq.w	801566a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015554:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015558:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801555c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015560:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015564:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015568:	4410      	add	r0, r2
 801556a:	b200      	sxth	r0, r0
 801556c:	9000      	str	r0, [sp, #0]
 801556e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015572:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015576:	4642      	mov	r2, r8
 8015578:	2100      	movs	r1, #0
 801557a:	4658      	mov	r0, fp
 801557c:	f7ff fca2 	bl	8014ec4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015580:	2800      	cmp	r0, #0
 8015582:	d163      	bne.n	801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015584:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015588:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801558c:	b2b2      	uxth	r2, r6
 801558e:	4413      	add	r3, r2
 8015590:	1a8a      	subs	r2, r1, r2
 8015592:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015596:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801559a:	b21b      	sxth	r3, r3
 801559c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80155a0:	2a00      	cmp	r2, #0
 80155a2:	d153      	bne.n	801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80155a4:	6822      	ldr	r2, [r4, #0]
 80155a6:	8869      	ldrh	r1, [r5, #2]
 80155a8:	7a12      	ldrb	r2, [r2, #8]
 80155aa:	1a9b      	subs	r3, r3, r2
 80155ac:	88ea      	ldrh	r2, [r5, #6]
 80155ae:	440a      	add	r2, r1
 80155b0:	b212      	sxth	r2, r2
 80155b2:	4293      	cmp	r3, r2
 80155b4:	dda7      	ble.n	8015506 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80155b6:	e049      	b.n	801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80155b8:	7c23      	ldrb	r3, [r4, #16]
 80155ba:	444f      	add	r7, r9
 80155bc:	b1c3      	cbz	r3, 80155f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80155be:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80155c2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80155c6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80155ca:	443b      	add	r3, r7
 80155cc:	4293      	cmp	r3, r2
 80155ce:	da97      	bge.n	8015500 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80155d0:	a80e      	add	r0, sp, #56	; 0x38
 80155d2:	f7ff fdeb 	bl	80151ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80155d6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80155da:	3b01      	subs	r3, #1
 80155dc:	b29b      	uxth	r3, r3
 80155de:	454b      	cmp	r3, r9
 80155e0:	9309      	str	r3, [sp, #36]	; 0x24
 80155e2:	d021      	beq.n	8015628 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80155e4:	7961      	ldrb	r1, [r4, #5]
 80155e6:	a817      	add	r0, sp, #92	; 0x5c
 80155e8:	f7f3 fcfa 	bl	8008fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80155ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155ee:	e7f4      	b.n	80155da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80155f0:	fa1f f986 	uxth.w	r9, r6
 80155f4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80155f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80155fc:	443b      	add	r3, r7
 80155fe:	4293      	cmp	r3, r2
 8015600:	f6bf af7e 	bge.w	8015500 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015604:	a817      	add	r0, sp, #92	; 0x5c
 8015606:	f002 fe41 	bl	801828c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801560a:	b1f8      	cbz	r0, 801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801560c:	280a      	cmp	r0, #10
 801560e:	d1f1      	bne.n	80155f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015610:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015614:	444b      	add	r3, r9
 8015616:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801561a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801561e:	eba3 0309 	sub.w	r3, r3, r9
 8015622:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015626:	e7e5      	b.n	80155f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015628:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801562c:	b2b3      	uxth	r3, r6
 801562e:	441a      	add	r2, r3
 8015630:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015634:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015638:	1ad3      	subs	r3, r2, r3
 801563a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801563e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015642:	b11b      	cbz	r3, 801564c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015644:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015648:	2b00      	cmp	r3, #0
 801564a:	d0ba      	beq.n	80155c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801564c:	b063      	add	sp, #396	; 0x18c
 801564e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015652:	2a02      	cmp	r2, #2
 8015654:	d105      	bne.n	8015662 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015656:	7be2      	ldrb	r2, [r4, #15]
 8015658:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801565c:	1a80      	subs	r0, r0, r2
 801565e:	1ac0      	subs	r0, r0, r3
 8015660:	e773      	b.n	801554a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015662:	2000      	movs	r0, #0
 8015664:	e772      	b.n	801554c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015666:	7be0      	ldrb	r0, [r4, #15]
 8015668:	e770      	b.n	801554c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801566a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801566e:	e773      	b.n	8015558 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015670:	f1ba 0f00 	cmp.w	sl, #0
 8015674:	d0f7      	beq.n	8015666 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015676:	2264      	movs	r2, #100	; 0x64
 8015678:	4639      	mov	r1, r7
 801567a:	a849      	add	r0, sp, #292	; 0x124
 801567c:	f015 fdd1 	bl	802b222 <memcpy>
 8015680:	2300      	movs	r3, #0
 8015682:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015686:	6821      	ldr	r1, [r4, #0]
 8015688:	a849      	add	r0, sp, #292	; 0x124
 801568a:	f7ff fbae 	bl	8014dea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801568e:	b203      	sxth	r3, r0
 8015690:	e751      	b.n	8015536 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015692 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015692:	2b03      	cmp	r3, #3
 8015694:	d818      	bhi.n	80156c8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015696:	e8df f003 	tbb	[pc, r3]
 801569a:	0602      	.short	0x0602
 801569c:	130d      	.short	0x130d
 801569e:	f9b0 2000 	ldrsh.w	r2, [r0]
 80156a2:	1850      	adds	r0, r2, r1
 80156a4:	4770      	bx	lr
 80156a6:	8803      	ldrh	r3, [r0, #0]
 80156a8:	8880      	ldrh	r0, [r0, #4]
 80156aa:	4418      	add	r0, r3
 80156ac:	b200      	sxth	r0, r0
 80156ae:	1a80      	subs	r0, r0, r2
 80156b0:	3801      	subs	r0, #1
 80156b2:	4770      	bx	lr
 80156b4:	8803      	ldrh	r3, [r0, #0]
 80156b6:	8880      	ldrh	r0, [r0, #4]
 80156b8:	4418      	add	r0, r3
 80156ba:	b200      	sxth	r0, r0
 80156bc:	1a40      	subs	r0, r0, r1
 80156be:	e7f7      	b.n	80156b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80156c0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80156c4:	4410      	add	r0, r2
 80156c6:	4770      	bx	lr
 80156c8:	2000      	movs	r0, #0
 80156ca:	4770      	bx	lr

080156cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80156cc:	2b03      	cmp	r3, #3
 80156ce:	d817      	bhi.n	8015700 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80156d0:	e8df f003 	tbb	[pc, r3]
 80156d4:	10090602 	.word	0x10090602
 80156d8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80156dc:	1850      	adds	r0, r2, r1
 80156de:	4770      	bx	lr
 80156e0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80156e4:	e7fa      	b.n	80156dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80156e6:	8843      	ldrh	r3, [r0, #2]
 80156e8:	88c0      	ldrh	r0, [r0, #6]
 80156ea:	4418      	add	r0, r3
 80156ec:	b200      	sxth	r0, r0
 80156ee:	1a80      	subs	r0, r0, r2
 80156f0:	3801      	subs	r0, #1
 80156f2:	4770      	bx	lr
 80156f4:	8843      	ldrh	r3, [r0, #2]
 80156f6:	88c0      	ldrh	r0, [r0, #6]
 80156f8:	4418      	add	r0, r3
 80156fa:	b200      	sxth	r0, r0
 80156fc:	1a40      	subs	r0, r0, r1
 80156fe:	e7f7      	b.n	80156f0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015700:	2000      	movs	r0, #0
 8015702:	4770      	bx	lr

08015704 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015704:	4b01      	ldr	r3, [pc, #4]	; (801570c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015706:	2200      	movs	r2, #0
 8015708:	601a      	str	r2, [r3, #0]
 801570a:	4770      	bx	lr
 801570c:	20012dc4 	.word	0x20012dc4

08015710 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015710:	4603      	mov	r3, r0
 8015712:	b1c8      	cbz	r0, 8015748 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015714:	0c02      	lsrs	r2, r0, #16
 8015716:	0412      	lsls	r2, r2, #16
 8015718:	b9a2      	cbnz	r2, 8015744 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801571a:	0403      	lsls	r3, r0, #16
 801571c:	2010      	movs	r0, #16
 801571e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015722:	bf04      	itt	eq
 8015724:	021b      	lsleq	r3, r3, #8
 8015726:	3008      	addeq	r0, #8
 8015728:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801572c:	bf04      	itt	eq
 801572e:	011b      	lsleq	r3, r3, #4
 8015730:	3004      	addeq	r0, #4
 8015732:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015736:	bf04      	itt	eq
 8015738:	009b      	lsleq	r3, r3, #2
 801573a:	3002      	addeq	r0, #2
 801573c:	2b00      	cmp	r3, #0
 801573e:	db04      	blt.n	801574a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015740:	3001      	adds	r0, #1
 8015742:	4770      	bx	lr
 8015744:	2000      	movs	r0, #0
 8015746:	e7ea      	b.n	801571e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015748:	2020      	movs	r0, #32
 801574a:	4770      	bx	lr

0801574c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801574c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015750:	b087      	sub	sp, #28
 8015752:	460d      	mov	r5, r1
 8015754:	4616      	mov	r6, r2
 8015756:	4698      	mov	r8, r3
 8015758:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801575c:	4601      	mov	r1, r0
 801575e:	b120      	cbz	r0, 801576a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015760:	b11a      	cbz	r2, 801576a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015762:	2d1f      	cmp	r5, #31
 8015764:	d801      	bhi.n	801576a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015766:	2b1f      	cmp	r3, #31
 8015768:	d904      	bls.n	8015774 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801576a:	2000      	movs	r0, #0
 801576c:	6038      	str	r0, [r7, #0]
 801576e:	b007      	add	sp, #28
 8015770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015774:	b97d      	cbnz	r5, 8015796 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015776:	b143      	cbz	r3, 801578a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015778:	4602      	mov	r2, r0
 801577a:	e9cd 4700 	strd	r4, r7, [sp]
 801577e:	462b      	mov	r3, r5
 8015780:	4641      	mov	r1, r8
 8015782:	4630      	mov	r0, r6
 8015784:	f7ff ffe2 	bl	801574c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015788:	e7f1      	b.n	801576e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801578a:	f04f 33ff 	mov.w	r3, #4294967295
 801578e:	603b      	str	r3, [r7, #0]
 8015790:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015794:	e7eb      	b.n	801576e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015796:	fa32 fa05 	lsrs.w	sl, r2, r5
 801579a:	d106      	bne.n	80157aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801579c:	4346      	muls	r6, r0
 801579e:	fbb6 f0f4 	udiv	r0, r6, r4
 80157a2:	fb04 6610 	mls	r6, r4, r0, r6
 80157a6:	603e      	str	r6, [r7, #0]
 80157a8:	e7e1      	b.n	801576e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80157aa:	2201      	movs	r2, #1
 80157ac:	40aa      	lsls	r2, r5
 80157ae:	3a01      	subs	r2, #1
 80157b0:	4016      	ands	r6, r2
 80157b2:	fa00 fb05 	lsl.w	fp, r0, r5
 80157b6:	4630      	mov	r0, r6
 80157b8:	fbbb f9f4 	udiv	r9, fp, r4
 80157bc:	fb0a f309 	mul.w	r3, sl, r9
 80157c0:	9303      	str	r3, [sp, #12]
 80157c2:	f7ff ffa5 	bl	8015710 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80157c6:	462b      	mov	r3, r5
 80157c8:	460a      	mov	r2, r1
 80157ca:	e9cd 4700 	strd	r4, r7, [sp]
 80157ce:	4601      	mov	r1, r0
 80157d0:	4630      	mov	r0, r6
 80157d2:	f7ff ffbb 	bl	801574c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80157d6:	fb04 b919 	mls	r9, r4, r9, fp
 80157da:	4606      	mov	r6, r0
 80157dc:	4648      	mov	r0, r9
 80157de:	eb05 0108 	add.w	r1, r5, r8
 80157e2:	f7ff ff95 	bl	8015710 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80157e6:	ab05      	add	r3, sp, #20
 80157e8:	e9cd 4300 	strd	r4, r3, [sp]
 80157ec:	464a      	mov	r2, r9
 80157ee:	4603      	mov	r3, r0
 80157f0:	4650      	mov	r0, sl
 80157f2:	f7ff ffab 	bl	801574c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80157f6:	6839      	ldr	r1, [r7, #0]
 80157f8:	9a05      	ldr	r2, [sp, #20]
 80157fa:	9b03      	ldr	r3, [sp, #12]
 80157fc:	4411      	add	r1, r2
 80157fe:	fbb1 f2f4 	udiv	r2, r1, r4
 8015802:	18d3      	adds	r3, r2, r3
 8015804:	441e      	add	r6, r3
 8015806:	fb04 1412 	mls	r4, r4, r2, r1
 801580a:	4430      	add	r0, r6
 801580c:	603c      	str	r4, [r7, #0]
 801580e:	e7ae      	b.n	801576e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015810 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015810:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015814:	b085      	sub	sp, #20
 8015816:	f1b0 0900 	subs.w	r9, r0, #0
 801581a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801581c:	461d      	mov	r5, r3
 801581e:	bfbf      	itttt	lt
 8015820:	6823      	ldrlt	r3, [r4, #0]
 8015822:	425b      	neglt	r3, r3
 8015824:	f1c9 0900 	rsblt	r9, r9, #0
 8015828:	6023      	strlt	r3, [r4, #0]
 801582a:	bfb4      	ite	lt
 801582c:	f04f 36ff 	movlt.w	r6, #4294967295
 8015830:	2601      	movge	r6, #1
 8015832:	2a00      	cmp	r2, #0
 8015834:	4617      	mov	r7, r2
 8015836:	da04      	bge.n	8015842 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015838:	6823      	ldr	r3, [r4, #0]
 801583a:	425b      	negs	r3, r3
 801583c:	4257      	negs	r7, r2
 801583e:	4276      	negs	r6, r6
 8015840:	6023      	str	r3, [r4, #0]
 8015842:	2d00      	cmp	r5, #0
 8015844:	4638      	mov	r0, r7
 8015846:	bfba      	itte	lt
 8015848:	426d      	neglt	r5, r5
 801584a:	f04f 38ff 	movlt.w	r8, #4294967295
 801584e:	f04f 0801 	movge.w	r8, #1
 8015852:	f7ff ff5d 	bl	8015710 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015856:	ab03      	add	r3, sp, #12
 8015858:	e9cd 5300 	strd	r5, r3, [sp]
 801585c:	463a      	mov	r2, r7
 801585e:	4603      	mov	r3, r0
 8015860:	4648      	mov	r0, r9
 8015862:	f7ff ff73 	bl	801574c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015866:	6823      	ldr	r3, [r4, #0]
 8015868:	9a03      	ldr	r2, [sp, #12]
 801586a:	4546      	cmp	r6, r8
 801586c:	441a      	add	r2, r3
 801586e:	fb92 f3f5 	sdiv	r3, r2, r5
 8015872:	4418      	add	r0, r3
 8015874:	bf18      	it	ne
 8015876:	4240      	negne	r0, r0
 8015878:	fb05 2313 	mls	r3, r5, r3, r2
 801587c:	1c72      	adds	r2, r6, #1
 801587e:	6023      	str	r3, [r4, #0]
 8015880:	d105      	bne.n	801588e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015882:	2b00      	cmp	r3, #0
 8015884:	f1c3 0200 	rsb	r2, r3, #0
 8015888:	db0b      	blt.n	80158a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801588a:	6022      	str	r2, [r4, #0]
 801588c:	e006      	b.n	801589c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801588e:	2e01      	cmp	r6, #1
 8015890:	d104      	bne.n	801589c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015892:	2b00      	cmp	r3, #0
 8015894:	da02      	bge.n	801589c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015896:	442b      	add	r3, r5
 8015898:	3801      	subs	r0, #1
 801589a:	6023      	str	r3, [r4, #0]
 801589c:	b005      	add	sp, #20
 801589e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80158a2:	3801      	subs	r0, #1
 80158a4:	1b52      	subs	r2, r2, r5
 80158a6:	e7f0      	b.n	801588a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080158a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80158a8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80158ac:	4c1c      	ldr	r4, [pc, #112]	; (8015920 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80158ae:	6807      	ldr	r7, [r0, #0]
 80158b0:	69a3      	ldr	r3, [r4, #24]
 80158b2:	4605      	mov	r5, r0
 80158b4:	b92b      	cbnz	r3, 80158c2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80158b6:	6840      	ldr	r0, [r0, #4]
 80158b8:	e9c5 7000 	strd	r7, r0, [r5]
 80158bc:	b004      	add	sp, #16
 80158be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80158c2:	68a2      	ldr	r2, [r4, #8]
 80158c4:	6820      	ldr	r0, [r4, #0]
 80158c6:	ae04      	add	r6, sp, #16
 80158c8:	f04f 0802 	mov.w	r8, #2
 80158cc:	fb93 f1f8 	sdiv	r1, r3, r8
 80158d0:	440a      	add	r2, r1
 80158d2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80158d6:	69e1      	ldr	r1, [r4, #28]
 80158d8:	9600      	str	r6, [sp, #0]
 80158da:	463a      	mov	r2, r7
 80158dc:	f7ff ff98 	bl	8015810 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80158e0:	69a3      	ldr	r3, [r4, #24]
 80158e2:	686a      	ldr	r2, [r5, #4]
 80158e4:	6a21      	ldr	r1, [r4, #32]
 80158e6:	9600      	str	r6, [sp, #0]
 80158e8:	4607      	mov	r7, r0
 80158ea:	6860      	ldr	r0, [r4, #4]
 80158ec:	f7ff ff90 	bl	8015810 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80158f0:	6962      	ldr	r2, [r4, #20]
 80158f2:	69a3      	ldr	r3, [r4, #24]
 80158f4:	fb93 f8f8 	sdiv	r8, r3, r8
 80158f8:	4442      	add	r2, r8
 80158fa:	9203      	str	r2, [sp, #12]
 80158fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80158fe:	682a      	ldr	r2, [r5, #0]
 8015900:	9600      	str	r6, [sp, #0]
 8015902:	4407      	add	r7, r0
 8015904:	68e0      	ldr	r0, [r4, #12]
 8015906:	f7ff ff83 	bl	8015810 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801590a:	9600      	str	r6, [sp, #0]
 801590c:	4680      	mov	r8, r0
 801590e:	69a3      	ldr	r3, [r4, #24]
 8015910:	686a      	ldr	r2, [r5, #4]
 8015912:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015914:	6920      	ldr	r0, [r4, #16]
 8015916:	f7ff ff7b 	bl	8015810 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801591a:	4440      	add	r0, r8
 801591c:	e7cc      	b.n	80158b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801591e:	bf00      	nop
 8015920:	20012dc8 	.word	0x20012dc8

08015924 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015924:	4b07      	ldr	r3, [pc, #28]	; (8015944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015926:	781b      	ldrb	r3, [r3, #0]
 8015928:	2b01      	cmp	r3, #1
 801592a:	d109      	bne.n	8015940 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801592c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015930:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015934:	8003      	strh	r3, [r0, #0]
 8015936:	4b04      	ldr	r3, [pc, #16]	; (8015948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015938:	881b      	ldrh	r3, [r3, #0]
 801593a:	3b01      	subs	r3, #1
 801593c:	1a9b      	subs	r3, r3, r2
 801593e:	800b      	strh	r3, [r1, #0]
 8015940:	4770      	bx	lr
 8015942:	bf00      	nop
 8015944:	20012dac 	.word	0x20012dac
 8015948:	20012da8 	.word	0x20012da8

0801594c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801594c:	b510      	push	{r4, lr}
 801594e:	4b07      	ldr	r3, [pc, #28]	; (801596c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015950:	781b      	ldrb	r3, [r3, #0]
 8015952:	2b01      	cmp	r3, #1
 8015954:	d108      	bne.n	8015968 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015956:	4b06      	ldr	r3, [pc, #24]	; (8015970 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015958:	880c      	ldrh	r4, [r1, #0]
 801595a:	881b      	ldrh	r3, [r3, #0]
 801595c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015960:	3b01      	subs	r3, #1
 8015962:	1b1b      	subs	r3, r3, r4
 8015964:	8003      	strh	r3, [r0, #0]
 8015966:	800a      	strh	r2, [r1, #0]
 8015968:	bd10      	pop	{r4, pc}
 801596a:	bf00      	nop
 801596c:	20012dac 	.word	0x20012dac
 8015970:	20012da8 	.word	0x20012da8

08015974 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015974:	b510      	push	{r4, lr}
 8015976:	4b0a      	ldr	r3, [pc, #40]	; (80159a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015978:	781b      	ldrb	r3, [r3, #0]
 801597a:	2b01      	cmp	r3, #1
 801597c:	d10e      	bne.n	801599c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801597e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015982:	8843      	ldrh	r3, [r0, #2]
 8015984:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015988:	8044      	strh	r4, [r0, #2]
 801598a:	18ca      	adds	r2, r1, r3
 801598c:	4b05      	ldr	r3, [pc, #20]	; (80159a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801598e:	881b      	ldrh	r3, [r3, #0]
 8015990:	1a9b      	subs	r3, r3, r2
 8015992:	8003      	strh	r3, [r0, #0]
 8015994:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015998:	80c3      	strh	r3, [r0, #6]
 801599a:	8081      	strh	r1, [r0, #4]
 801599c:	bd10      	pop	{r4, pc}
 801599e:	bf00      	nop
 80159a0:	20012dac 	.word	0x20012dac
 80159a4:	20012da8 	.word	0x20012da8

080159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80159a8:	4b08      	ldr	r3, [pc, #32]	; (80159cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80159aa:	781b      	ldrb	r3, [r3, #0]
 80159ac:	2b01      	cmp	r3, #1
 80159ae:	d10c      	bne.n	80159ca <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80159b0:	8803      	ldrh	r3, [r0, #0]
 80159b2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80159b6:	8842      	ldrh	r2, [r0, #2]
 80159b8:	8002      	strh	r2, [r0, #0]
 80159ba:	185a      	adds	r2, r3, r1
 80159bc:	4b04      	ldr	r3, [pc, #16]	; (80159d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80159be:	881b      	ldrh	r3, [r3, #0]
 80159c0:	1a9b      	subs	r3, r3, r2
 80159c2:	8043      	strh	r3, [r0, #2]
 80159c4:	88c3      	ldrh	r3, [r0, #6]
 80159c6:	8083      	strh	r3, [r0, #4]
 80159c8:	80c1      	strh	r1, [r0, #6]
 80159ca:	4770      	bx	lr
 80159cc:	20012dac 	.word	0x20012dac
 80159d0:	20012da8 	.word	0x20012da8

080159d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80159d4:	b510      	push	{r4, lr}
 80159d6:	4b07      	ldr	r3, [pc, #28]	; (80159f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80159d8:	781b      	ldrb	r3, [r3, #0]
 80159da:	2b01      	cmp	r3, #1
 80159dc:	d108      	bne.n	80159f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80159de:	f9b1 3000 	ldrsh.w	r3, [r1]
 80159e2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80159e6:	8003      	strh	r3, [r0, #0]
 80159e8:	8893      	ldrh	r3, [r2, #4]
 80159ea:	3b01      	subs	r3, #1
 80159ec:	1b1b      	subs	r3, r3, r4
 80159ee:	800b      	strh	r3, [r1, #0]
 80159f0:	bd10      	pop	{r4, pc}
 80159f2:	bf00      	nop
 80159f4:	20012dac 	.word	0x20012dac

080159f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80159f8:	4b0b      	ldr	r3, [pc, #44]	; (8015a28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80159fa:	781b      	ldrb	r3, [r3, #0]
 80159fc:	2b01      	cmp	r3, #1
 80159fe:	d111      	bne.n	8015a24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015a00:	680b      	ldr	r3, [r1, #0]
 8015a02:	ed90 7a00 	vldr	s14, [r0]
 8015a06:	6003      	str	r3, [r0, #0]
 8015a08:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8015a0c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8015a2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015a10:	ee07 3a90 	vmov	s15, r3
 8015a14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a18:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8015a1c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015a20:	edc1 7a00 	vstr	s15, [r1]
 8015a24:	4770      	bx	lr
 8015a26:	bf00      	nop
 8015a28:	20012dac 	.word	0x20012dac
 8015a2c:	38d1b717 	.word	0x38d1b717

08015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015a30:	b510      	push	{r4, lr}
 8015a32:	4b0a      	ldr	r3, [pc, #40]	; (8015a5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015a34:	781b      	ldrb	r3, [r3, #0]
 8015a36:	2b01      	cmp	r3, #1
 8015a38:	460a      	mov	r2, r1
 8015a3a:	d10d      	bne.n	8015a58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8015a3c:	8881      	ldrh	r1, [r0, #4]
 8015a3e:	8803      	ldrh	r3, [r0, #0]
 8015a40:	440b      	add	r3, r1
 8015a42:	4601      	mov	r1, r0
 8015a44:	3b01      	subs	r3, #1
 8015a46:	f821 3b02 	strh.w	r3, [r1], #2
 8015a4a:	f7ff ffc3 	bl	80159d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8015a4e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015a52:	88c2      	ldrh	r2, [r0, #6]
 8015a54:	8082      	strh	r2, [r0, #4]
 8015a56:	80c3      	strh	r3, [r0, #6]
 8015a58:	bd10      	pop	{r4, pc}
 8015a5a:	bf00      	nop
 8015a5c:	20012dac 	.word	0x20012dac

08015a60 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015a60:	4b06      	ldr	r3, [pc, #24]	; (8015a7c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015a62:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a66:	4b06      	ldr	r3, [pc, #24]	; (8015a80 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015a68:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8015a6c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a70:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015a74:	2100      	movs	r1, #0
 8015a76:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8015a7a:	4770      	bx	lr
 8015a7c:	20012da8 	.word	0x20012da8
 8015a80:	20012daa 	.word	0x20012daa

08015a84 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015a84:	4b03      	ldr	r3, [pc, #12]	; (8015a94 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015a86:	6818      	ldr	r0, [r3, #0]
 8015a88:	b110      	cbz	r0, 8015a90 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015a8a:	6803      	ldr	r3, [r0, #0]
 8015a8c:	699b      	ldr	r3, [r3, #24]
 8015a8e:	4718      	bx	r3
 8015a90:	4770      	bx	lr
 8015a92:	bf00      	nop
 8015a94:	20012df8 	.word	0x20012df8

08015a98 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015a98:	4770      	bx	lr
	...

08015a9c <_ZN8touchgfx11Application4drawEv>:
 8015a9c:	b507      	push	{r0, r1, r2, lr}
 8015a9e:	4b09      	ldr	r3, [pc, #36]	; (8015ac4 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015aa0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015aa4:	4b08      	ldr	r3, [pc, #32]	; (8015ac8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015aa6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015aaa:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015aae:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ab2:	6803      	ldr	r3, [r0, #0]
 8015ab4:	2100      	movs	r1, #0
 8015ab6:	9100      	str	r1, [sp, #0]
 8015ab8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015aba:	4669      	mov	r1, sp
 8015abc:	4798      	blx	r3
 8015abe:	b003      	add	sp, #12
 8015ac0:	f85d fb04 	ldr.w	pc, [sp], #4
 8015ac4:	20012da8 	.word	0x20012da8
 8015ac8:	20012daa 	.word	0x20012daa

08015acc <_ZN8touchgfx11Application10invalidateEv>:
 8015acc:	4b09      	ldr	r3, [pc, #36]	; (8015af4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015ace:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015ad2:	4b09      	ldr	r3, [pc, #36]	; (8015af8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015ad4:	b082      	sub	sp, #8
 8015ad6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015ada:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015ade:	2100      	movs	r1, #0
 8015ae0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ae4:	9100      	str	r1, [sp, #0]
 8015ae6:	6803      	ldr	r3, [r0, #0]
 8015ae8:	aa02      	add	r2, sp, #8
 8015aea:	e912 0006 	ldmdb	r2, {r1, r2}
 8015aee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015af0:	b002      	add	sp, #8
 8015af2:	4718      	bx	r3
 8015af4:	20012da8 	.word	0x20012da8
 8015af8:	20012daa 	.word	0x20012daa

08015afc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015afc:	4b03      	ldr	r3, [pc, #12]	; (8015b0c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015afe:	6818      	ldr	r0, [r3, #0]
 8015b00:	b110      	cbz	r0, 8015b08 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015b02:	6803      	ldr	r3, [r0, #0]
 8015b04:	69db      	ldr	r3, [r3, #28]
 8015b06:	4718      	bx	r3
 8015b08:	4770      	bx	lr
 8015b0a:	bf00      	nop
 8015b0c:	20012df8 	.word	0x20012df8

08015b10 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015b10:	4b03      	ldr	r3, [pc, #12]	; (8015b20 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015b12:	6818      	ldr	r0, [r3, #0]
 8015b14:	b110      	cbz	r0, 8015b1c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015b16:	6803      	ldr	r3, [r0, #0]
 8015b18:	6a1b      	ldr	r3, [r3, #32]
 8015b1a:	4718      	bx	r3
 8015b1c:	4770      	bx	lr
 8015b1e:	bf00      	nop
 8015b20:	20012df8 	.word	0x20012df8

08015b24 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015b24:	2300      	movs	r3, #0
 8015b26:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015b2a:	4770      	bx	lr

08015b2c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015b2c:	4b03      	ldr	r3, [pc, #12]	; (8015b3c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015b2e:	6818      	ldr	r0, [r3, #0]
 8015b30:	b110      	cbz	r0, 8015b38 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015b32:	6803      	ldr	r3, [r0, #0]
 8015b34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015b36:	4718      	bx	r3
 8015b38:	4770      	bx	lr
 8015b3a:	bf00      	nop
 8015b3c:	20012df8 	.word	0x20012df8

08015b40 <_ZN8touchgfx11ApplicationD1Ev>:
 8015b40:	4770      	bx	lr

08015b42 <_ZN8touchgfx11ApplicationD0Ev>:
 8015b42:	b510      	push	{r4, lr}
 8015b44:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015b48:	4604      	mov	r4, r0
 8015b4a:	f014 f958 	bl	8029dfe <_ZdlPvj>
 8015b4e:	4620      	mov	r0, r4
 8015b50:	bd10      	pop	{r4, pc}

08015b52 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015b52:	b510      	push	{r4, lr}
 8015b54:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015b58:	888a      	ldrh	r2, [r1, #4]
 8015b5a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015b5e:	4422      	add	r2, r4
 8015b60:	b212      	sxth	r2, r2
 8015b62:	4293      	cmp	r3, r2
 8015b64:	da15      	bge.n	8015b92 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015b66:	8882      	ldrh	r2, [r0, #4]
 8015b68:	4413      	add	r3, r2
 8015b6a:	b21b      	sxth	r3, r3
 8015b6c:	429c      	cmp	r4, r3
 8015b6e:	da10      	bge.n	8015b92 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015b70:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015b74:	88c9      	ldrh	r1, [r1, #6]
 8015b76:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015b7a:	4419      	add	r1, r3
 8015b7c:	b209      	sxth	r1, r1
 8015b7e:	428a      	cmp	r2, r1
 8015b80:	da07      	bge.n	8015b92 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015b82:	88c0      	ldrh	r0, [r0, #6]
 8015b84:	4410      	add	r0, r2
 8015b86:	b200      	sxth	r0, r0
 8015b88:	4283      	cmp	r3, r0
 8015b8a:	bfac      	ite	ge
 8015b8c:	2000      	movge	r0, #0
 8015b8e:	2001      	movlt	r0, #1
 8015b90:	bd10      	pop	{r4, pc}
 8015b92:	2000      	movs	r0, #0
 8015b94:	e7fc      	b.n	8015b90 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015b96 <_ZN8touchgfx4Rect10restrictToEss>:
 8015b96:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015b9a:	2b00      	cmp	r3, #0
 8015b9c:	b510      	push	{r4, lr}
 8015b9e:	da04      	bge.n	8015baa <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015ba0:	8884      	ldrh	r4, [r0, #4]
 8015ba2:	4423      	add	r3, r4
 8015ba4:	8083      	strh	r3, [r0, #4]
 8015ba6:	2300      	movs	r3, #0
 8015ba8:	8003      	strh	r3, [r0, #0]
 8015baa:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015bae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015bb2:	1b09      	subs	r1, r1, r4
 8015bb4:	428b      	cmp	r3, r1
 8015bb6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015bba:	bfc8      	it	gt
 8015bbc:	8081      	strhgt	r1, [r0, #4]
 8015bbe:	2b00      	cmp	r3, #0
 8015bc0:	da04      	bge.n	8015bcc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015bc2:	88c1      	ldrh	r1, [r0, #6]
 8015bc4:	440b      	add	r3, r1
 8015bc6:	80c3      	strh	r3, [r0, #6]
 8015bc8:	2300      	movs	r3, #0
 8015bca:	8043      	strh	r3, [r0, #2]
 8015bcc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015bd0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015bd4:	1a52      	subs	r2, r2, r1
 8015bd6:	4293      	cmp	r3, r2
 8015bd8:	bfc8      	it	gt
 8015bda:	80c2      	strhgt	r2, [r0, #6]
 8015bdc:	bd10      	pop	{r4, pc}
	...

08015be0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015be0:	b510      	push	{r4, lr}
 8015be2:	4b10      	ldr	r3, [pc, #64]	; (8015c24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015be4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015be8:	4b0f      	ldr	r3, [pc, #60]	; (8015c28 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015bea:	460c      	mov	r4, r1
 8015bec:	4620      	mov	r0, r4
 8015bee:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015bf2:	f7ff ffd0 	bl	8015b96 <_ZN8touchgfx4Rect10restrictToEss>
 8015bf6:	4b0d      	ldr	r3, [pc, #52]	; (8015c2c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015bf8:	6818      	ldr	r0, [r3, #0]
 8015bfa:	b190      	cbz	r0, 8015c22 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015bfc:	6803      	ldr	r3, [r0, #0]
 8015bfe:	4621      	mov	r1, r4
 8015c00:	689b      	ldr	r3, [r3, #8]
 8015c02:	4798      	blx	r3
 8015c04:	4b0a      	ldr	r3, [pc, #40]	; (8015c30 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015c06:	6818      	ldr	r0, [r3, #0]
 8015c08:	b118      	cbz	r0, 8015c12 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015c0a:	6803      	ldr	r3, [r0, #0]
 8015c0c:	4621      	mov	r1, r4
 8015c0e:	689b      	ldr	r3, [r3, #8]
 8015c10:	4798      	blx	r3
 8015c12:	4b08      	ldr	r3, [pc, #32]	; (8015c34 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015c14:	6818      	ldr	r0, [r3, #0]
 8015c16:	6803      	ldr	r3, [r0, #0]
 8015c18:	4621      	mov	r1, r4
 8015c1a:	69db      	ldr	r3, [r3, #28]
 8015c1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c20:	4718      	bx	r3
 8015c22:	bd10      	pop	{r4, pc}
 8015c24:	20012daa 	.word	0x20012daa
 8015c28:	20012da8 	.word	0x20012da8
 8015c2c:	20012df8 	.word	0x20012df8
 8015c30:	20012df4 	.word	0x20012df4
 8015c34:	20012db4 	.word	0x20012db4

08015c38 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c3a:	4606      	mov	r6, r0
 8015c3c:	4608      	mov	r0, r1
 8015c3e:	460f      	mov	r7, r1
 8015c40:	f7fa ff97 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c44:	b9e8      	cbnz	r0, 8015c82 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c46:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015c4a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015c4e:	42a5      	cmp	r5, r4
 8015c50:	db17      	blt.n	8015c82 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c52:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015c56:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015c5a:	429a      	cmp	r2, r3
 8015c5c:	db11      	blt.n	8015c82 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c5e:	88b9      	ldrh	r1, [r7, #4]
 8015c60:	440d      	add	r5, r1
 8015c62:	88b1      	ldrh	r1, [r6, #4]
 8015c64:	440c      	add	r4, r1
 8015c66:	b22d      	sxth	r5, r5
 8015c68:	b224      	sxth	r4, r4
 8015c6a:	42a5      	cmp	r5, r4
 8015c6c:	dc09      	bgt.n	8015c82 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015c6e:	88f8      	ldrh	r0, [r7, #6]
 8015c70:	4410      	add	r0, r2
 8015c72:	88f2      	ldrh	r2, [r6, #6]
 8015c74:	4413      	add	r3, r2
 8015c76:	b200      	sxth	r0, r0
 8015c78:	b21b      	sxth	r3, r3
 8015c7a:	4298      	cmp	r0, r3
 8015c7c:	bfcc      	ite	gt
 8015c7e:	2000      	movgt	r0, #0
 8015c80:	2001      	movle	r0, #1
 8015c82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015c84 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015c84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c86:	4604      	mov	r4, r0
 8015c88:	4608      	mov	r0, r1
 8015c8a:	460d      	mov	r5, r1
 8015c8c:	f7fa ff71 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c90:	b978      	cbnz	r0, 8015cb2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015c92:	4620      	mov	r0, r4
 8015c94:	f7fa ff6d 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c98:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015c9c:	b150      	cbz	r0, 8015cb4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015c9e:	8026      	strh	r6, [r4, #0]
 8015ca0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015ca4:	8063      	strh	r3, [r4, #2]
 8015ca6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015caa:	80a3      	strh	r3, [r4, #4]
 8015cac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015cb0:	80e3      	strh	r3, [r4, #6]
 8015cb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015cb4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015cb8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015cbc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015cc0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015cc4:	88ed      	ldrh	r5, [r5, #6]
 8015cc6:	42b1      	cmp	r1, r6
 8015cc8:	460f      	mov	r7, r1
 8015cca:	bfa8      	it	ge
 8015ccc:	4637      	movge	r7, r6
 8015cce:	4293      	cmp	r3, r2
 8015cd0:	4618      	mov	r0, r3
 8015cd2:	4466      	add	r6, ip
 8015cd4:	bfa8      	it	ge
 8015cd6:	4610      	movge	r0, r2
 8015cd8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015cdc:	8027      	strh	r7, [r4, #0]
 8015cde:	442a      	add	r2, r5
 8015ce0:	88e5      	ldrh	r5, [r4, #6]
 8015ce2:	8060      	strh	r0, [r4, #2]
 8015ce4:	4461      	add	r1, ip
 8015ce6:	442b      	add	r3, r5
 8015ce8:	b236      	sxth	r6, r6
 8015cea:	b209      	sxth	r1, r1
 8015cec:	b212      	sxth	r2, r2
 8015cee:	b21b      	sxth	r3, r3
 8015cf0:	428e      	cmp	r6, r1
 8015cf2:	bfac      	ite	ge
 8015cf4:	ebc7 0106 	rsbge	r1, r7, r6
 8015cf8:	ebc7 0101 	rsblt	r1, r7, r1
 8015cfc:	429a      	cmp	r2, r3
 8015cfe:	bfac      	ite	ge
 8015d00:	ebc0 0202 	rsbge	r2, r0, r2
 8015d04:	ebc0 0203 	rsblt	r2, r0, r3
 8015d08:	80a1      	strh	r1, [r4, #4]
 8015d0a:	80e2      	strh	r2, [r4, #6]
 8015d0c:	e7d1      	b.n	8015cb2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015d10 <_ZN8touchgfx11Application11getInstanceEv>:
 8015d10:	4b01      	ldr	r3, [pc, #4]	; (8015d18 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015d12:	6818      	ldr	r0, [r3, #0]
 8015d14:	4770      	bx	lr
 8015d16:	bf00      	nop
 8015d18:	20012e08 	.word	0x20012e08

08015d1c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d1e:	4b10      	ldr	r3, [pc, #64]	; (8015d60 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015d20:	781b      	ldrb	r3, [r3, #0]
 8015d22:	4605      	mov	r5, r0
 8015d24:	b1d3      	cbz	r3, 8015d5c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015d26:	4b0f      	ldr	r3, [pc, #60]	; (8015d64 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015d28:	4f0f      	ldr	r7, [pc, #60]	; (8015d68 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015d2a:	881c      	ldrh	r4, [r3, #0]
 8015d2c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015d30:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015d34:	42a3      	cmp	r3, r4
 8015d36:	d90e      	bls.n	8015d56 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015d38:	683b      	ldr	r3, [r7, #0]
 8015d3a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015d3e:	b10a      	cbz	r2, 8015d44 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015d40:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015d42:	b900      	cbnz	r0, 8015d46 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015d44:	6898      	ldr	r0, [r3, #8]
 8015d46:	6803      	ldr	r3, [r0, #0]
 8015d48:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015d4c:	69db      	ldr	r3, [r3, #28]
 8015d4e:	3401      	adds	r4, #1
 8015d50:	4798      	blx	r3
 8015d52:	b2a4      	uxth	r4, r4
 8015d54:	e7ec      	b.n	8015d30 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015d56:	2300      	movs	r3, #0
 8015d58:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015d5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015d5e:	bf00      	nop
 8015d60:	20012db2 	.word	0x20012db2
 8015d64:	20000088 	.word	0x20000088
 8015d68:	20012db4 	.word	0x20012db4

08015d6c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015d6c:	b510      	push	{r4, lr}
 8015d6e:	2300      	movs	r3, #0
 8015d70:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015d74:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015d78:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015d7c:	4604      	mov	r4, r0
 8015d7e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015d82:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015d86:	429a      	cmp	r2, r3
 8015d88:	d90e      	bls.n	8015da8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015d8a:	18e2      	adds	r2, r4, r3
 8015d8c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015d90:	b122      	cbz	r2, 8015d9c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015d92:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015d96:	6803      	ldr	r3, [r0, #0]
 8015d98:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d9a:	4798      	blx	r3
 8015d9c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015da0:	3301      	adds	r3, #1
 8015da2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015da6:	e7ea      	b.n	8015d7e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015da8:	bd10      	pop	{r4, pc}

08015daa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015daa:	b530      	push	{r4, r5, lr}
 8015dac:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015db0:	2200      	movs	r2, #0
 8015db2:	b293      	uxth	r3, r2
 8015db4:	429d      	cmp	r5, r3
 8015db6:	d90e      	bls.n	8015dd6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015db8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015dbc:	428b      	cmp	r3, r1
 8015dbe:	d10b      	bne.n	8015dd8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015dc0:	1884      	adds	r4, r0, r2
 8015dc2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015dc6:	b13b      	cbz	r3, 8015dd8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015dc8:	3b01      	subs	r3, #1
 8015dca:	b2db      	uxtb	r3, r3
 8015dcc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015dd0:	b90b      	cbnz	r3, 8015dd6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015dd2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015dd6:	bd30      	pop	{r4, r5, pc}
 8015dd8:	3201      	adds	r2, #1
 8015dda:	e7ea      	b.n	8015db2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015ddc:	2300      	movs	r3, #0
 8015dde:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015de2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015de6:	30a4      	adds	r0, #164	; 0xa4
 8015de8:	f802 3b01 	strb.w	r3, [r2], #1
 8015dec:	4282      	cmp	r2, r0
 8015dee:	d1fb      	bne.n	8015de8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015df0:	4770      	bx	lr
	...

08015df4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015df4:	b570      	push	{r4, r5, r6, lr}
 8015df6:	4c0b      	ldr	r4, [pc, #44]	; (8015e24 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015df8:	4605      	mov	r5, r0
 8015dfa:	6820      	ldr	r0, [r4, #0]
 8015dfc:	460e      	mov	r6, r1
 8015dfe:	b110      	cbz	r0, 8015e06 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015e00:	6803      	ldr	r3, [r0, #0]
 8015e02:	695b      	ldr	r3, [r3, #20]
 8015e04:	4798      	blx	r3
 8015e06:	1d28      	adds	r0, r5, #4
 8015e08:	f7ff ffe8 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015e0c:	6026      	str	r6, [r4, #0]
 8015e0e:	6833      	ldr	r3, [r6, #0]
 8015e10:	4630      	mov	r0, r6
 8015e12:	68db      	ldr	r3, [r3, #12]
 8015e14:	4798      	blx	r3
 8015e16:	682b      	ldr	r3, [r5, #0]
 8015e18:	4628      	mov	r0, r5
 8015e1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015e1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e20:	4718      	bx	r3
 8015e22:	bf00      	nop
 8015e24:	20012df8 	.word	0x20012df8

08015e28 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015e28:	2300      	movs	r3, #0
 8015e2a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015e2e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015e32:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015e34:	461a      	mov	r2, r3
 8015e36:	461c      	mov	r4, r3
 8015e38:	461d      	mov	r5, r3
 8015e3a:	459c      	cmp	ip, r3
 8015e3c:	dd1a      	ble.n	8015e74 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015e3e:	18c6      	adds	r6, r0, r3
 8015e40:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015e44:	b16e      	cbz	r6, 8015e62 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015e46:	429a      	cmp	r2, r3
 8015e48:	d008      	beq.n	8015e5c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015e4a:	fa1f fe82 	uxth.w	lr, r2
 8015e4e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015e52:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015e56:	1887      	adds	r7, r0, r2
 8015e58:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015e5c:	3201      	adds	r2, #1
 8015e5e:	3301      	adds	r3, #1
 8015e60:	e7eb      	b.n	8015e3a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015e62:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015e66:	4299      	cmp	r1, r3
 8015e68:	bfa8      	it	ge
 8015e6a:	3501      	addge	r5, #1
 8015e6c:	429e      	cmp	r6, r3
 8015e6e:	bfc8      	it	gt
 8015e70:	3401      	addgt	r4, #1
 8015e72:	e7f4      	b.n	8015e5e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015e74:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015e78:	1b49      	subs	r1, r1, r5
 8015e7a:	1b1b      	subs	r3, r3, r4
 8015e7c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015e80:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015e84:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015e88:	4293      	cmp	r3, r2
 8015e8a:	dd03      	ble.n	8015e94 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015e8c:	3b01      	subs	r3, #1
 8015e8e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015e92:	e7f7      	b.n	8015e84 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015e94:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015e98 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015e98:	b570      	push	{r4, r5, r6, lr}
 8015e9a:	4d16      	ldr	r5, [pc, #88]	; (8015ef4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015e9c:	4604      	mov	r4, r0
 8015e9e:	6828      	ldr	r0, [r5, #0]
 8015ea0:	b140      	cbz	r0, 8015eb4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015ea2:	7a03      	ldrb	r3, [r0, #8]
 8015ea4:	b933      	cbnz	r3, 8015eb4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015ea6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015eaa:	6803      	ldr	r3, [r0, #0]
 8015eac:	689b      	ldr	r3, [r3, #8]
 8015eae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015eb2:	4718      	bx	r3
 8015eb4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015eb8:	4e0f      	ldr	r6, [pc, #60]	; (8015ef8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015eba:	b973      	cbnz	r3, 8015eda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015ebc:	b168      	cbz	r0, 8015eda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015ebe:	7a03      	ldrb	r3, [r0, #8]
 8015ec0:	b15b      	cbz	r3, 8015eda <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015ec2:	6830      	ldr	r0, [r6, #0]
 8015ec4:	b110      	cbz	r0, 8015ecc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015ec6:	6803      	ldr	r3, [r0, #0]
 8015ec8:	691b      	ldr	r3, [r3, #16]
 8015eca:	4798      	blx	r3
 8015ecc:	6828      	ldr	r0, [r5, #0]
 8015ece:	6803      	ldr	r3, [r0, #0]
 8015ed0:	68db      	ldr	r3, [r3, #12]
 8015ed2:	4798      	blx	r3
 8015ed4:	2301      	movs	r3, #1
 8015ed6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015eda:	3404      	adds	r4, #4
 8015edc:	4620      	mov	r0, r4
 8015ede:	f7ff ff45 	bl	8015d6c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015ee2:	4620      	mov	r0, r4
 8015ee4:	f7ff ffa0 	bl	8015e28 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015ee8:	6830      	ldr	r0, [r6, #0]
 8015eea:	b110      	cbz	r0, 8015ef2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015eec:	6803      	ldr	r3, [r0, #0]
 8015eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015ef0:	e7dd      	b.n	8015eae <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015ef2:	bd70      	pop	{r4, r5, r6, pc}
 8015ef4:	20012dfc 	.word	0x20012dfc
 8015ef8:	20012df8 	.word	0x20012df8

08015efc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015efc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015efe:	2300      	movs	r3, #0
 8015f00:	4604      	mov	r4, r0
 8015f02:	460d      	mov	r5, r1
 8015f04:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015f08:	4618      	mov	r0, r3
 8015f0a:	b29a      	uxth	r2, r3
 8015f0c:	4291      	cmp	r1, r2
 8015f0e:	d911      	bls.n	8015f34 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015f10:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015f14:	18e6      	adds	r6, r4, r3
 8015f16:	42af      	cmp	r7, r5
 8015f18:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015f1c:	d105      	bne.n	8015f2a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015f1e:	2aff      	cmp	r2, #255	; 0xff
 8015f20:	d002      	beq.n	8015f28 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015f22:	3201      	adds	r2, #1
 8015f24:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015f28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015f2a:	2a00      	cmp	r2, #0
 8015f2c:	bf08      	it	eq
 8015f2e:	2001      	moveq	r0, #1
 8015f30:	3301      	adds	r3, #1
 8015f32:	e7ea      	b.n	8015f0a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015f34:	b120      	cbz	r0, 8015f40 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015f36:	2920      	cmp	r1, #32
 8015f38:	d102      	bne.n	8015f40 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015f3a:	4620      	mov	r0, r4
 8015f3c:	f7ff ff74 	bl	8015e28 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015f40:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015f44:	2b1f      	cmp	r3, #31
 8015f46:	d8ef      	bhi.n	8015f28 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015f48:	18e2      	adds	r2, r4, r3
 8015f4a:	2101      	movs	r1, #1
 8015f4c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015f50:	185a      	adds	r2, r3, r1
 8015f52:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015f56:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015f5a:	e7e5      	b.n	8015f28 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015f5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015f5c:	4603      	mov	r3, r0
 8015f5e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015f62:	2200      	movs	r2, #0
 8015f64:	801a      	strh	r2, [r3, #0]
 8015f66:	805a      	strh	r2, [r3, #2]
 8015f68:	809a      	strh	r2, [r3, #4]
 8015f6a:	80da      	strh	r2, [r3, #6]
 8015f6c:	3308      	adds	r3, #8
 8015f6e:	428b      	cmp	r3, r1
 8015f70:	d1f8      	bne.n	8015f64 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015f72:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015f76:	4770      	bx	lr

08015f78 <_ZN8touchgfx11ApplicationC1Ev>:
 8015f78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015f7a:	4606      	mov	r6, r0
 8015f7c:	4b1c      	ldr	r3, [pc, #112]	; (8015ff0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015f7e:	f846 3b04 	str.w	r3, [r6], #4
 8015f82:	4604      	mov	r4, r0
 8015f84:	2500      	movs	r5, #0
 8015f86:	22a8      	movs	r2, #168	; 0xa8
 8015f88:	2100      	movs	r1, #0
 8015f8a:	4630      	mov	r0, r6
 8015f8c:	f015 f823 	bl	802afd6 <memset>
 8015f90:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015f94:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015f98:	f7ff ffe0 	bl	8015f5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015f9c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015fa0:	f7ff ffdc 	bl	8015f5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015fa4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015fa8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015fac:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015fb0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015fb4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015fb8:	490e      	ldr	r1, [pc, #56]	; (8015ff4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015fba:	480f      	ldr	r0, [pc, #60]	; (8015ff8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015fbc:	4f0f      	ldr	r7, [pc, #60]	; (8015ffc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015fbe:	f010 fde9 	bl	8026b94 <CRC_Lock>
 8015fc2:	4b0f      	ldr	r3, [pc, #60]	; (8016000 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015fc4:	b158      	cbz	r0, 8015fde <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015fc6:	801d      	strh	r5, [r3, #0]
 8015fc8:	4a0e      	ldr	r2, [pc, #56]	; (8016004 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015fca:	2300      	movs	r3, #0
 8015fcc:	6013      	str	r3, [r2, #0]
 8015fce:	4a0e      	ldr	r2, [pc, #56]	; (8016008 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015fd0:	603b      	str	r3, [r7, #0]
 8015fd2:	4630      	mov	r0, r6
 8015fd4:	6013      	str	r3, [r2, #0]
 8015fd6:	f7ff ff01 	bl	8015ddc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015fda:	4620      	mov	r0, r4
 8015fdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015fde:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015fe2:	2002      	movs	r0, #2
 8015fe4:	801a      	strh	r2, [r3, #0]
 8015fe6:	6038      	str	r0, [r7, #0]
 8015fe8:	f001 fb4a 	bl	8017680 <_ZN8touchgfx6Screen4drawEv>
 8015fec:	e7ec      	b.n	8015fc8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015fee:	bf00      	nop
 8015ff0:	0802f3d8 	.word	0x0802f3d8
 8015ff4:	b5e8b5cd 	.word	0xb5e8b5cd
 8015ff8:	f407a5c2 	.word	0xf407a5c2
 8015ffc:	20012df8 	.word	0x20012df8
 8016000:	20000088 	.word	0x20000088
 8016004:	20012e08 	.word	0x20012e08
 8016008:	20012dfc 	.word	0x20012dfc

0801600c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801600c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016010:	3b01      	subs	r3, #1
 8016012:	b29b      	uxth	r3, r3
 8016014:	428b      	cmp	r3, r1
 8016016:	b510      	push	{r4, lr}
 8016018:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801601c:	d908      	bls.n	8016030 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801601e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016022:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016026:	681a      	ldr	r2, [r3, #0]
 8016028:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801602c:	685a      	ldr	r2, [r3, #4]
 801602e:	6062      	str	r2, [r4, #4]
 8016030:	bd10      	pop	{r4, pc}
	...

08016034 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016038:	4b8f      	ldr	r3, [pc, #572]	; (8016278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801603a:	b08f      	sub	sp, #60	; 0x3c
 801603c:	ac0a      	add	r4, sp, #40	; 0x28
 801603e:	e884 0006 	stmia.w	r4, {r1, r2}
 8016042:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016046:	4b8d      	ldr	r3, [pc, #564]	; (801627c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016048:	4683      	mov	fp, r0
 801604a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801604e:	4620      	mov	r0, r4
 8016050:	f7ff fda1 	bl	8015b96 <_ZN8touchgfx4Rect10restrictToEss>
 8016054:	4620      	mov	r0, r4
 8016056:	f7fa fd8c 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801605a:	2800      	cmp	r0, #0
 801605c:	d16a      	bne.n	8016134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801605e:	9403      	str	r4, [sp, #12]
 8016060:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016064:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016068:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801606c:	35a4      	adds	r5, #164	; 0xa4
 801606e:	9301      	str	r3, [sp, #4]
 8016070:	b15c      	cbz	r4, 801608a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016072:	4629      	mov	r1, r5
 8016074:	9803      	ldr	r0, [sp, #12]
 8016076:	f7ff fddf 	bl	8015c38 <_ZNK8touchgfx4Rect8includesERKS0_>
 801607a:	3c01      	subs	r4, #1
 801607c:	b118      	cbz	r0, 8016086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801607e:	b2a1      	uxth	r1, r4
 8016080:	9801      	ldr	r0, [sp, #4]
 8016082:	f7ff ffc3 	bl	801600c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016086:	3d08      	subs	r5, #8
 8016088:	e7f2      	b.n	8016070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801608a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801608e:	f8cd a010 	str.w	sl, [sp, #16]
 8016092:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016096:	9302      	str	r3, [sp, #8]
 8016098:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801609c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80160a0:	9306      	str	r3, [sp, #24]
 80160a2:	445c      	add	r4, fp
 80160a4:	2500      	movs	r5, #0
 80160a6:	4626      	mov	r6, r4
 80160a8:	f8cd a014 	str.w	sl, [sp, #20]
 80160ac:	462f      	mov	r7, r5
 80160ae:	9b05      	ldr	r3, [sp, #20]
 80160b0:	2b00      	cmp	r3, #0
 80160b2:	d073      	beq.n	801619c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80160b4:	9903      	ldr	r1, [sp, #12]
 80160b6:	4630      	mov	r0, r6
 80160b8:	f7ff fd4b 	bl	8015b52 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80160bc:	b350      	cbz	r0, 8016114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80160be:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80160c2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80160c6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80160ca:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80160ce:	45e6      	cmp	lr, ip
 80160d0:	db33      	blt.n	801613a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80160d2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80160d6:	88b3      	ldrh	r3, [r6, #4]
 80160d8:	4472      	add	r2, lr
 80160da:	4463      	add	r3, ip
 80160dc:	b212      	sxth	r2, r2
 80160de:	b21b      	sxth	r3, r3
 80160e0:	429a      	cmp	r2, r3
 80160e2:	dc2a      	bgt.n	801613a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80160e4:	88f3      	ldrh	r3, [r6, #6]
 80160e6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80160ea:	fa1f f289 	uxth.w	r2, r9
 80160ee:	4413      	add	r3, r2
 80160f0:	b29b      	uxth	r3, r3
 80160f2:	45c8      	cmp	r8, r9
 80160f4:	fa1f fc88 	uxth.w	ip, r8
 80160f8:	fa0f fe83 	sxth.w	lr, r3
 80160fc:	db0f      	blt.n	801611e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80160fe:	eba3 030c 	sub.w	r3, r3, ip
 8016102:	1ac9      	subs	r1, r1, r3
 8016104:	b209      	sxth	r1, r1
 8016106:	2900      	cmp	r1, #0
 8016108:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801610c:	dd12      	ble.n	8016134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801610e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016112:	4605      	mov	r5, r0
 8016114:	9b05      	ldr	r3, [sp, #20]
 8016116:	3b01      	subs	r3, #1
 8016118:	9305      	str	r3, [sp, #20]
 801611a:	3e08      	subs	r6, #8
 801611c:	e7c7      	b.n	80160ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801611e:	4461      	add	r1, ip
 8016120:	b209      	sxth	r1, r1
 8016122:	4571      	cmp	r1, lr
 8016124:	dc38      	bgt.n	8016198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016126:	eba2 020c 	sub.w	r2, r2, ip
 801612a:	b212      	sxth	r2, r2
 801612c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016130:	2a00      	cmp	r2, #0
 8016132:	dcee      	bgt.n	8016112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016134:	b00f      	add	sp, #60	; 0x3c
 8016136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801613a:	45c8      	cmp	r8, r9
 801613c:	db2c      	blt.n	8016198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801613e:	88f3      	ldrh	r3, [r6, #6]
 8016140:	4499      	add	r9, r3
 8016142:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016146:	4498      	add	r8, r3
 8016148:	fa0f f989 	sxth.w	r9, r9
 801614c:	fa0f f888 	sxth.w	r8, r8
 8016150:	45c1      	cmp	r9, r8
 8016152:	db21      	blt.n	8016198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016154:	88b3      	ldrh	r3, [r6, #4]
 8016156:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801615a:	fa1f f28c 	uxth.w	r2, ip
 801615e:	4413      	add	r3, r2
 8016160:	b29b      	uxth	r3, r3
 8016162:	45e6      	cmp	lr, ip
 8016164:	fa1f f88e 	uxth.w	r8, lr
 8016168:	fa0f f983 	sxth.w	r9, r3
 801616c:	db0a      	blt.n	8016184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801616e:	eba3 0308 	sub.w	r3, r3, r8
 8016172:	1ac9      	subs	r1, r1, r3
 8016174:	b209      	sxth	r1, r1
 8016176:	2900      	cmp	r1, #0
 8016178:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801617c:	ddda      	ble.n	8016134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801617e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016182:	e7c6      	b.n	8016112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016184:	4441      	add	r1, r8
 8016186:	b209      	sxth	r1, r1
 8016188:	4549      	cmp	r1, r9
 801618a:	dc05      	bgt.n	8016198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801618c:	eba2 0208 	sub.w	r2, r2, r8
 8016190:	b212      	sxth	r2, r2
 8016192:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016196:	e7cb      	b.n	8016130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016198:	4607      	mov	r7, r0
 801619a:	e7bb      	b.n	8016114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801619c:	2d00      	cmp	r5, #0
 801619e:	d181      	bne.n	80160a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80161a0:	2f00      	cmp	r7, #0
 80161a2:	f000 81dd 	beq.w	8016560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80161a6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80161aa:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80161ae:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80161b2:	b2b3      	uxth	r3, r6
 80161b4:	9305      	str	r3, [sp, #20]
 80161b6:	9a05      	ldr	r2, [sp, #20]
 80161b8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80161bc:	4413      	add	r3, r2
 80161be:	b2ba      	uxth	r2, r7
 80161c0:	4492      	add	sl, r2
 80161c2:	b29b      	uxth	r3, r3
 80161c4:	fa1f fa8a 	uxth.w	sl, sl
 80161c8:	fa0f f883 	sxth.w	r8, r3
 80161cc:	fa0f f98a 	sxth.w	r9, sl
 80161d0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80161d4:	9b04      	ldr	r3, [sp, #16]
 80161d6:	2b00      	cmp	r3, #0
 80161d8:	d052      	beq.n	8016280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80161da:	9903      	ldr	r1, [sp, #12]
 80161dc:	4620      	mov	r0, r4
 80161de:	f7ff fcb8 	bl	8015b52 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80161e2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80161e6:	b1c0      	cbz	r0, 801621a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80161e8:	f9b4 e000 	ldrsh.w	lr, [r4]
 80161ec:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80161f0:	4576      	cmp	r6, lr
 80161f2:	dc22      	bgt.n	801623a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80161f4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80161f8:	44f4      	add	ip, lr
 80161fa:	fa0f fc8c 	sxth.w	ip, ip
 80161fe:	45e0      	cmp	r8, ip
 8016200:	db1b      	blt.n	801623a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016202:	428f      	cmp	r7, r1
 8016204:	fa1f fc81 	uxth.w	ip, r1
 8016208:	88e1      	ldrh	r1, [r4, #6]
 801620a:	dc0d      	bgt.n	8016228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801620c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016210:	eba1 010c 	sub.w	r1, r1, ip
 8016214:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016218:	80e1      	strh	r1, [r4, #6]
 801621a:	4628      	mov	r0, r5
 801621c:	9904      	ldr	r1, [sp, #16]
 801621e:	3901      	subs	r1, #1
 8016220:	9104      	str	r1, [sp, #16]
 8016222:	3c08      	subs	r4, #8
 8016224:	4605      	mov	r5, r0
 8016226:	e7d3      	b.n	80161d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016228:	4461      	add	r1, ip
 801622a:	b209      	sxth	r1, r1
 801622c:	4549      	cmp	r1, r9
 801622e:	dcf5      	bgt.n	801621c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016230:	eba2 0c0c 	sub.w	ip, r2, ip
 8016234:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016238:	e7ef      	b.n	801621a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801623a:	428f      	cmp	r7, r1
 801623c:	dcee      	bgt.n	801621c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801623e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016242:	4461      	add	r1, ip
 8016244:	b209      	sxth	r1, r1
 8016246:	4589      	cmp	r9, r1
 8016248:	dbe8      	blt.n	801621c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801624a:	4576      	cmp	r6, lr
 801624c:	fa1f fc8e 	uxth.w	ip, lr
 8016250:	88a1      	ldrh	r1, [r4, #4]
 8016252:	dc07      	bgt.n	8016264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016254:	eba3 0c0c 	sub.w	ip, r3, ip
 8016258:	eba1 010c 	sub.w	r1, r1, ip
 801625c:	f8a4 8000 	strh.w	r8, [r4]
 8016260:	80a1      	strh	r1, [r4, #4]
 8016262:	e7da      	b.n	801621a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016264:	4461      	add	r1, ip
 8016266:	b209      	sxth	r1, r1
 8016268:	4588      	cmp	r8, r1
 801626a:	dbd7      	blt.n	801621c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801626c:	9905      	ldr	r1, [sp, #20]
 801626e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016272:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016276:	e7d0      	b.n	801621a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016278:	20012daa 	.word	0x20012daa
 801627c:	20012da8 	.word	0x20012da8
 8016280:	2d00      	cmp	r5, #0
 8016282:	f000 816d 	beq.w	8016560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016286:	9b06      	ldr	r3, [sp, #24]
 8016288:	445b      	add	r3, fp
 801628a:	461c      	mov	r4, r3
 801628c:	9b02      	ldr	r3, [sp, #8]
 801628e:	3301      	adds	r3, #1
 8016290:	f000 8166 	beq.w	8016560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016294:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016298:	4629      	mov	r1, r5
 801629a:	9803      	ldr	r0, [sp, #12]
 801629c:	f7ff fccc 	bl	8015c38 <_ZNK8touchgfx4Rect8includesERKS0_>
 80162a0:	b120      	cbz	r0, 80162ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80162a2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80162a6:	9801      	ldr	r0, [sp, #4]
 80162a8:	f7ff feb0 	bl	801600c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80162ac:	9903      	ldr	r1, [sp, #12]
 80162ae:	4628      	mov	r0, r5
 80162b0:	f7ff fc4f 	bl	8015b52 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80162b4:	2800      	cmp	r0, #0
 80162b6:	f000 809c 	beq.w	80163f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80162ba:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80162be:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80162c2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80162c6:	9309      	str	r3, [sp, #36]	; 0x24
 80162c8:	fa1f f189 	uxth.w	r1, r9
 80162cc:	eb01 0c03 	add.w	ip, r1, r3
 80162d0:	fa1f fa8c 	uxth.w	sl, ip
 80162d4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80162d8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80162dc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80162e0:	b283      	uxth	r3, r0
 80162e2:	eb03 050c 	add.w	r5, r3, ip
 80162e6:	b2ad      	uxth	r5, r5
 80162e8:	9505      	str	r5, [sp, #20]
 80162ea:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80162ee:	9504      	str	r5, [sp, #16]
 80162f0:	4548      	cmp	r0, r9
 80162f2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80162f6:	f340 8099 	ble.w	801642c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80162fa:	1a5b      	subs	r3, r3, r1
 80162fc:	b29b      	uxth	r3, r3
 80162fe:	4596      	cmp	lr, r2
 8016300:	fa0f f08a 	sxth.w	r0, sl
 8016304:	b21e      	sxth	r6, r3
 8016306:	dd2e      	ble.n	8016366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016308:	9f02      	ldr	r7, [sp, #8]
 801630a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801630e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016312:	9f04      	ldr	r7, [sp, #16]
 8016314:	1a3f      	subs	r7, r7, r0
 8016316:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801631a:	fa1f fe8e 	uxth.w	lr, lr
 801631e:	b292      	uxth	r2, r2
 8016320:	ebae 0102 	sub.w	r1, lr, r2
 8016324:	44a6      	add	lr, r4
 8016326:	4402      	add	r2, r0
 8016328:	b289      	uxth	r1, r1
 801632a:	fa0f fe8e 	sxth.w	lr, lr
 801632e:	b212      	sxth	r2, r2
 8016330:	b20d      	sxth	r5, r1
 8016332:	ebae 0202 	sub.w	r2, lr, r2
 8016336:	436f      	muls	r7, r5
 8016338:	4372      	muls	r2, r6
 801633a:	4297      	cmp	r7, r2
 801633c:	db09      	blt.n	8016352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801633e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016342:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016346:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801634a:	449c      	add	ip, r3
 801634c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016350:	e686      	b.n	8016060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016352:	4421      	add	r1, r4
 8016354:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016358:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801635c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016360:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016364:	e67c      	b.n	8016060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016366:	9f04      	ldr	r7, [sp, #16]
 8016368:	42b8      	cmp	r0, r7
 801636a:	da27      	bge.n	80163bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801636c:	9902      	ldr	r1, [sp, #8]
 801636e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016372:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016376:	eb05 010e 	add.w	r1, r5, lr
 801637a:	fa1f f881 	uxth.w	r8, r1
 801637e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016382:	4411      	add	r1, r2
 8016384:	eba1 0108 	sub.w	r1, r1, r8
 8016388:	b289      	uxth	r1, r1
 801638a:	fa0f f988 	sxth.w	r9, r8
 801638e:	eba2 020e 	sub.w	r2, r2, lr
 8016392:	fa0f f881 	sxth.w	r8, r1
 8016396:	1a3f      	subs	r7, r7, r0
 8016398:	4372      	muls	r2, r6
 801639a:	fb08 f707 	mul.w	r7, r8, r7
 801639e:	42ba      	cmp	r2, r7
 80163a0:	dc06      	bgt.n	80163b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80163a2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80163a6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80163aa:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80163ae:	e7ca      	b.n	8016346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80163b0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80163b4:	4429      	add	r1, r5
 80163b6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80163ba:	e651      	b.n	8016060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80163bc:	9805      	ldr	r0, [sp, #20]
 80163be:	ebaa 0000 	sub.w	r0, sl, r0
 80163c2:	b280      	uxth	r0, r0
 80163c4:	2d06      	cmp	r5, #6
 80163c6:	fa0f fe80 	sxth.w	lr, r0
 80163ca:	d817      	bhi.n	80163fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80163cc:	9b04      	ldr	r3, [sp, #16]
 80163ce:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80163d2:	1c6b      	adds	r3, r5, #1
 80163d4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80163d8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80163dc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80163e0:	9b01      	ldr	r3, [sp, #4]
 80163e2:	9801      	ldr	r0, [sp, #4]
 80163e4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80163e8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80163ec:	805a      	strh	r2, [r3, #2]
 80163ee:	809e      	strh	r6, [r3, #4]
 80163f0:	80d9      	strh	r1, [r3, #6]
 80163f2:	9b02      	ldr	r3, [sp, #8]
 80163f4:	3b01      	subs	r3, #1
 80163f6:	9302      	str	r3, [sp, #8]
 80163f8:	3c08      	subs	r4, #8
 80163fa:	e747      	b.n	801628c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80163fc:	9a02      	ldr	r2, [sp, #8]
 80163fe:	45b6      	cmp	lr, r6
 8016400:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016404:	db0d      	blt.n	8016422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016406:	449c      	add	ip, r3
 8016408:	fa1f fc8c 	uxth.w	ip, ip
 801640c:	445a      	add	r2, fp
 801640e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016412:	448c      	add	ip, r1
 8016414:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016418:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801641c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016420:	e61e      	b.n	8016060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016422:	445a      	add	r2, fp
 8016424:	4484      	add	ip, r0
 8016426:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801642a:	e78f      	b.n	801634c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801642c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016430:	fa1f f18e 	uxth.w	r1, lr
 8016434:	eb01 0806 	add.w	r8, r1, r6
 8016438:	b293      	uxth	r3, r2
 801643a:	fa1f f888 	uxth.w	r8, r8
 801643e:	9306      	str	r3, [sp, #24]
 8016440:	fa0f f388 	sxth.w	r3, r8
 8016444:	9307      	str	r3, [sp, #28]
 8016446:	9f06      	ldr	r7, [sp, #24]
 8016448:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801644c:	443b      	add	r3, r7
 801644e:	b29b      	uxth	r3, r3
 8016450:	4596      	cmp	lr, r2
 8016452:	9308      	str	r3, [sp, #32]
 8016454:	da24      	bge.n	80164a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016456:	9905      	ldr	r1, [sp, #20]
 8016458:	eba3 0308 	sub.w	r3, r3, r8
 801645c:	ebaa 0401 	sub.w	r4, sl, r1
 8016460:	b2a4      	uxth	r4, r4
 8016462:	b29b      	uxth	r3, r3
 8016464:	b225      	sxth	r5, r4
 8016466:	b219      	sxth	r1, r3
 8016468:	eba2 020e 	sub.w	r2, r2, lr
 801646c:	eba9 0000 	sub.w	r0, r9, r0
 8016470:	436a      	muls	r2, r5
 8016472:	4348      	muls	r0, r1
 8016474:	4282      	cmp	r2, r0
 8016476:	9a02      	ldr	r2, [sp, #8]
 8016478:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801647c:	445a      	add	r2, fp
 801647e:	dc06      	bgt.n	801648e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016480:	9b07      	ldr	r3, [sp, #28]
 8016482:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016486:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801648a:	44a4      	add	ip, r4
 801648c:	e75e      	b.n	801634c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801648e:	9904      	ldr	r1, [sp, #16]
 8016490:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016494:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016498:	4433      	add	r3, r6
 801649a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801649e:	e5df      	b.n	8016060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80164a0:	9f06      	ldr	r7, [sp, #24]
 80164a2:	9b04      	ldr	r3, [sp, #16]
 80164a4:	1bc9      	subs	r1, r1, r7
 80164a6:	fa0f f78a 	sxth.w	r7, sl
 80164aa:	b289      	uxth	r1, r1
 80164ac:	429f      	cmp	r7, r3
 80164ae:	fa0f fe81 	sxth.w	lr, r1
 80164b2:	dd23      	ble.n	80164fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80164b4:	9a05      	ldr	r2, [sp, #20]
 80164b6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80164ba:	9d07      	ldr	r5, [sp, #28]
 80164bc:	ebaa 0202 	sub.w	r2, sl, r2
 80164c0:	b292      	uxth	r2, r2
 80164c2:	eba5 0a03 	sub.w	sl, r5, r3
 80164c6:	b214      	sxth	r4, r2
 80164c8:	eba9 0000 	sub.w	r0, r9, r0
 80164cc:	9b02      	ldr	r3, [sp, #8]
 80164ce:	fb0e f000 	mul.w	r0, lr, r0
 80164d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80164d6:	00db      	lsls	r3, r3, #3
 80164d8:	4550      	cmp	r0, sl
 80164da:	445b      	add	r3, fp
 80164dc:	db03      	blt.n	80164e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80164de:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80164e2:	4494      	add	ip, r2
 80164e4:	e732      	b.n	801634c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80164e6:	9a04      	ldr	r2, [sp, #16]
 80164e8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80164ec:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80164f0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80164f4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80164f8:	4431      	add	r1, r6
 80164fa:	e75c      	b.n	80163b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80164fc:	9b08      	ldr	r3, [sp, #32]
 80164fe:	eba3 0308 	sub.w	r3, r3, r8
 8016502:	b29b      	uxth	r3, r3
 8016504:	2d06      	cmp	r5, #6
 8016506:	b218      	sxth	r0, r3
 8016508:	d813      	bhi.n	8016532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801650a:	9b07      	ldr	r3, [sp, #28]
 801650c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016510:	1c6b      	adds	r3, r5, #1
 8016512:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016516:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801651a:	9b01      	ldr	r3, [sp, #4]
 801651c:	9901      	ldr	r1, [sp, #4]
 801651e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016522:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016526:	805a      	strh	r2, [r3, #2]
 8016528:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801652a:	809a      	strh	r2, [r3, #4]
 801652c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016530:	e75f      	b.n	80163f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016532:	9c02      	ldr	r4, [sp, #8]
 8016534:	4570      	cmp	r0, lr
 8016536:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801653a:	db0d      	blt.n	8016558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801653c:	4431      	add	r1, r6
 801653e:	9b06      	ldr	r3, [sp, #24]
 8016540:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016544:	b289      	uxth	r1, r1
 8016546:	445c      	add	r4, fp
 8016548:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801654c:	4419      	add	r1, r3
 801654e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016552:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016556:	e583      	b.n	8016060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016558:	445c      	add	r4, fp
 801655a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801655e:	e79b      	b.n	8016498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016560:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016564:	1e65      	subs	r5, r4, #1
 8016566:	b2ad      	uxth	r5, r5
 8016568:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801656c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016570:	42b5      	cmp	r5, r6
 8016572:	d044      	beq.n	80165fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016574:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016578:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801657c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016580:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016584:	4282      	cmp	r2, r0
 8016586:	d11f      	bne.n	80165c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016588:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801658c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016590:	459c      	cmp	ip, r3
 8016592:	d119      	bne.n	80165c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016594:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016598:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801659c:	19d8      	adds	r0, r3, r7
 801659e:	b200      	sxth	r0, r0
 80165a0:	4288      	cmp	r0, r1
 80165a2:	d109      	bne.n	80165b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80165a4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80165a8:	4413      	add	r3, r2
 80165aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80165ae:	4629      	mov	r1, r5
 80165b0:	9801      	ldr	r0, [sp, #4]
 80165b2:	f7ff fd2b 	bl	801600c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80165b6:	e003      	b.n	80165c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80165b8:	4411      	add	r1, r2
 80165ba:	b209      	sxth	r1, r1
 80165bc:	42b9      	cmp	r1, r7
 80165be:	d0f3      	beq.n	80165a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80165c0:	3d01      	subs	r5, #1
 80165c2:	b2ad      	uxth	r5, r5
 80165c4:	3c08      	subs	r4, #8
 80165c6:	e7d3      	b.n	8016570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80165c8:	42b9      	cmp	r1, r7
 80165ca:	d1f9      	bne.n	80165c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80165cc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80165d0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80165d4:	4299      	cmp	r1, r3
 80165d6:	d1f3      	bne.n	80165c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80165d8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80165dc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80165e0:	181f      	adds	r7, r3, r0
 80165e2:	b23f      	sxth	r7, r7
 80165e4:	42ba      	cmp	r2, r7
 80165e6:	d105      	bne.n	80165f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80165e8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80165ec:	440b      	add	r3, r1
 80165ee:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80165f2:	e7dc      	b.n	80165ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80165f4:	440a      	add	r2, r1
 80165f6:	b212      	sxth	r2, r2
 80165f8:	4290      	cmp	r0, r2
 80165fa:	d1e1      	bne.n	80165c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80165fc:	e7f6      	b.n	80165ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80165fe:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016602:	2e07      	cmp	r6, #7
 8016604:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016608:	d812      	bhi.n	8016630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801660a:	1c75      	adds	r5, r6, #1
 801660c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016610:	9d01      	ldr	r5, [sp, #4]
 8016612:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016616:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801661a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801661e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016622:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016626:	442c      	add	r4, r5
 8016628:	8061      	strh	r1, [r4, #2]
 801662a:	80a2      	strh	r2, [r4, #4]
 801662c:	80e3      	strh	r3, [r4, #6]
 801662e:	e581      	b.n	8016134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016630:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016634:	3e01      	subs	r6, #1
 8016636:	445c      	add	r4, fp
 8016638:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801663c:	f04f 37ff 	mov.w	r7, #4294967295
 8016640:	2500      	movs	r5, #0
 8016642:	9305      	str	r3, [sp, #20]
 8016644:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016648:	9302      	str	r3, [sp, #8]
 801664a:	1e72      	subs	r2, r6, #1
 801664c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016650:	9304      	str	r3, [sp, #16]
 8016652:	4691      	mov	r9, r2
 8016654:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016658:	f1b9 3fff 	cmp.w	r9, #4294967295
 801665c:	bf14      	ite	ne
 801665e:	9905      	ldrne	r1, [sp, #20]
 8016660:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016664:	6818      	ldr	r0, [r3, #0]
 8016666:	9207      	str	r2, [sp, #28]
 8016668:	bf18      	it	ne
 801666a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801666e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016672:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016676:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801667a:	9306      	str	r3, [sp, #24]
 801667c:	fb18 f801 	smulbb	r8, r8, r1
 8016680:	6859      	ldr	r1, [r3, #4]
 8016682:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016686:	4671      	mov	r1, lr
 8016688:	a80c      	add	r0, sp, #48	; 0x30
 801668a:	f7ff fafb 	bl	8015c84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801668e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016692:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016696:	9b04      	ldr	r3, [sp, #16]
 8016698:	9a02      	ldr	r2, [sp, #8]
 801669a:	fb10 f001 	smulbb	r0, r0, r1
 801669e:	fb02 8803 	mla	r8, r2, r3, r8
 80166a2:	eba0 0108 	sub.w	r1, r0, r8
 80166a6:	f04f 0c08 	mov.w	ip, #8
 80166aa:	fb90 f0fc 	sdiv	r0, r0, ip
 80166ae:	4288      	cmp	r0, r1
 80166b0:	dc20      	bgt.n	80166f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80166b2:	4551      	cmp	r1, sl
 80166b4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80166b8:	da03      	bge.n	80166c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80166ba:	b1d9      	cbz	r1, 80166f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80166bc:	468a      	mov	sl, r1
 80166be:	464f      	mov	r7, r9
 80166c0:	4635      	mov	r5, r6
 80166c2:	f109 39ff 	add.w	r9, r9, #4294967295
 80166c6:	f119 0f02 	cmn.w	r9, #2
 80166ca:	d1c5      	bne.n	8016658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80166cc:	4616      	mov	r6, r2
 80166ce:	3201      	adds	r2, #1
 80166d0:	f1a4 0408 	sub.w	r4, r4, #8
 80166d4:	d1b6      	bne.n	8016644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80166d6:	9b01      	ldr	r3, [sp, #4]
 80166d8:	b2ac      	uxth	r4, r5
 80166da:	00ed      	lsls	r5, r5, #3
 80166dc:	1958      	adds	r0, r3, r5
 80166de:	1c7b      	adds	r3, r7, #1
 80166e0:	d10b      	bne.n	80166fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80166e2:	4601      	mov	r1, r0
 80166e4:	9803      	ldr	r0, [sp, #12]
 80166e6:	f7ff facd 	bl	8015c84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80166ea:	4621      	mov	r1, r4
 80166ec:	9801      	ldr	r0, [sp, #4]
 80166ee:	f7ff fc8d 	bl	801600c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80166f2:	e4b5      	b.n	8016060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80166f4:	464f      	mov	r7, r9
 80166f6:	4635      	mov	r5, r6
 80166f8:	e7ed      	b.n	80166d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80166fa:	9b01      	ldr	r3, [sp, #4]
 80166fc:	00ff      	lsls	r7, r7, #3
 80166fe:	19d9      	adds	r1, r3, r7
 8016700:	f7ff fac0 	bl	8015c84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016704:	9b03      	ldr	r3, [sp, #12]
 8016706:	cb03      	ldmia	r3!, {r0, r1}
 8016708:	445f      	add	r7, fp
 801670a:	445d      	add	r5, fp
 801670c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016710:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016714:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016718:	9b03      	ldr	r3, [sp, #12]
 801671a:	6869      	ldr	r1, [r5, #4]
 801671c:	c303      	stmia	r3!, {r0, r1}
 801671e:	e7e4      	b.n	80166ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016720 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016724:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016728:	b09b      	sub	sp, #108	; 0x6c
 801672a:	4604      	mov	r4, r0
 801672c:	4630      	mov	r0, r6
 801672e:	f7fa fa20 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016732:	4605      	mov	r5, r0
 8016734:	b948      	cbnz	r0, 801674a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016736:	6823      	ldr	r3, [r4, #0]
 8016738:	e896 0006 	ldmia.w	r6, {r1, r2}
 801673c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801673e:	4620      	mov	r0, r4
 8016740:	4798      	blx	r3
 8016742:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016746:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801674a:	4bc6      	ldr	r3, [pc, #792]	; (8016a64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801674c:	681b      	ldr	r3, [r3, #0]
 801674e:	2b00      	cmp	r3, #0
 8016750:	d03f      	beq.n	80167d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016752:	4dc5      	ldr	r5, [pc, #788]	; (8016a68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016754:	4628      	mov	r0, r5
 8016756:	f7fa fa0c 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801675a:	4606      	mov	r6, r0
 801675c:	2800      	cmp	r0, #0
 801675e:	d138      	bne.n	80167d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016760:	4628      	mov	r0, r5
 8016762:	f7ff f907 	bl	8015974 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016766:	6823      	ldr	r3, [r4, #0]
 8016768:	6829      	ldr	r1, [r5, #0]
 801676a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801676c:	686a      	ldr	r2, [r5, #4]
 801676e:	4620      	mov	r0, r4
 8016770:	4798      	blx	r3
 8016772:	802e      	strh	r6, [r5, #0]
 8016774:	806e      	strh	r6, [r5, #2]
 8016776:	80ae      	strh	r6, [r5, #4]
 8016778:	80ee      	strh	r6, [r5, #6]
 801677a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801677e:	4dbb      	ldr	r5, [pc, #748]	; (8016a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016780:	4640      	mov	r0, r8
 8016782:	f7ff fbeb 	bl	8015f5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016786:	882e      	ldrh	r6, [r5, #0]
 8016788:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801678c:	4633      	mov	r3, r6
 801678e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016792:	42bb      	cmp	r3, r7
 8016794:	d224      	bcs.n	80167e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016796:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801679a:	2907      	cmp	r1, #7
 801679c:	d816      	bhi.n	80167cc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801679e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80167a2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80167a6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80167aa:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80167ae:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80167b2:	1c4a      	adds	r2, r1, #1
 80167b4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80167b8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80167bc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80167c0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80167c4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80167c8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80167cc:	3301      	adds	r3, #1
 80167ce:	b29b      	uxth	r3, r3
 80167d0:	e7df      	b.n	8016792 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80167d2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80167d6:	2b00      	cmp	r3, #0
 80167d8:	d1cf      	bne.n	801677a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80167da:	b01b      	add	sp, #108	; 0x6c
 80167dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80167e0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80167e4:	42b3      	cmp	r3, r6
 80167e6:	d90c      	bls.n	8016802 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80167e8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80167ec:	6822      	ldr	r2, [r4, #0]
 80167ee:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80167f2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80167f4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80167f8:	4620      	mov	r0, r4
 80167fa:	3601      	adds	r6, #1
 80167fc:	47b8      	blx	r7
 80167fe:	b2b6      	uxth	r6, r6
 8016800:	e7ee      	b.n	80167e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016802:	4a9b      	ldr	r2, [pc, #620]	; (8016a70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016804:	6813      	ldr	r3, [r2, #0]
 8016806:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801680a:	2b01      	cmp	r3, #1
 801680c:	4691      	mov	r9, r2
 801680e:	f040 80e2 	bne.w	80169d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016812:	8829      	ldrh	r1, [r5, #0]
 8016814:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016818:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801681c:	33ae      	adds	r3, #174	; 0xae
 801681e:	2600      	movs	r6, #0
 8016820:	428f      	cmp	r7, r1
 8016822:	f103 0308 	add.w	r3, r3, #8
 8016826:	dd0a      	ble.n	801683e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016828:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801682c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016830:	4402      	add	r2, r0
 8016832:	b212      	sxth	r2, r2
 8016834:	4296      	cmp	r6, r2
 8016836:	bfb8      	it	lt
 8016838:	4616      	movlt	r6, r2
 801683a:	3101      	adds	r1, #1
 801683c:	e7f0      	b.n	8016820 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801683e:	4b8d      	ldr	r3, [pc, #564]	; (8016a74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016840:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016a70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8016844:	881b      	ldrh	r3, [r3, #0]
 8016846:	2b0f      	cmp	r3, #15
 8016848:	bf88      	it	hi
 801684a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801684e:	f04f 0300 	mov.w	r3, #0
 8016852:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016856:	bf98      	it	ls
 8016858:	f04f 0b01 	movls.w	fp, #1
 801685c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016860:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016864:	4b82      	ldr	r3, [pc, #520]	; (8016a70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016866:	4438      	add	r0, r7
 8016868:	b207      	sxth	r7, r0
 801686a:	6818      	ldr	r0, [r3, #0]
 801686c:	42b7      	cmp	r7, r6
 801686e:	6803      	ldr	r3, [r0, #0]
 8016870:	f280 8083 	bge.w	801697a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016874:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016878:	4798      	blx	r3
 801687a:	eb07 030b 	add.w	r3, r7, fp
 801687e:	4298      	cmp	r0, r3
 8016880:	da07      	bge.n	8016892 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016882:	42b0      	cmp	r0, r6
 8016884:	da05      	bge.n	8016892 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016886:	4287      	cmp	r7, r0
 8016888:	dd6c      	ble.n	8016964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801688a:	2f00      	cmp	r7, #0
 801688c:	dd6a      	ble.n	8016964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801688e:	4630      	mov	r0, r6
 8016890:	e004      	b.n	801689c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016892:	4287      	cmp	r7, r0
 8016894:	dcfb      	bgt.n	801688e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016896:	42b0      	cmp	r0, r6
 8016898:	bfa8      	it	ge
 801689a:	4630      	movge	r0, r6
 801689c:	4b76      	ldr	r3, [pc, #472]	; (8016a78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801689e:	f8ad 7016 	strh.w	r7, [sp, #22]
 80168a2:	1bc0      	subs	r0, r0, r7
 80168a4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80168a8:	882f      	ldrh	r7, [r5, #0]
 80168aa:	f8ad 3018 	strh.w	r3, [sp, #24]
 80168ae:	2200      	movs	r2, #0
 80168b0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80168b4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80168b8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80168bc:	42bb      	cmp	r3, r7
 80168be:	d9cd      	bls.n	801685c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80168c0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80168c4:	ab07      	add	r3, sp, #28
 80168c6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80168ca:	6851      	ldr	r1, [r2, #4]
 80168cc:	c303      	stmia	r3!, {r0, r1}
 80168ce:	a905      	add	r1, sp, #20
 80168d0:	a807      	add	r0, sp, #28
 80168d2:	f7ff f93e 	bl	8015b52 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80168d6:	2800      	cmp	r0, #0
 80168d8:	d04c      	beq.n	8016974 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80168da:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80168de:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80168e2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80168e6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80168ea:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80168ee:	9302      	str	r3, [sp, #8]
 80168f0:	4686      	mov	lr, r0
 80168f2:	4290      	cmp	r0, r2
 80168f4:	4450      	add	r0, sl
 80168f6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80168fa:	bfb8      	it	lt
 80168fc:	4696      	movlt	lr, r2
 80168fe:	4452      	add	r2, sl
 8016900:	4299      	cmp	r1, r3
 8016902:	b280      	uxth	r0, r0
 8016904:	b292      	uxth	r2, r2
 8016906:	468c      	mov	ip, r1
 8016908:	fa0f fa82 	sxth.w	sl, r2
 801690c:	bfb8      	it	lt
 801690e:	469c      	movlt	ip, r3
 8016910:	b203      	sxth	r3, r0
 8016912:	4553      	cmp	r3, sl
 8016914:	bfb8      	it	lt
 8016916:	4602      	movlt	r2, r0
 8016918:	eba2 020e 	sub.w	r2, r2, lr
 801691c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016920:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016924:	9b02      	ldr	r3, [sp, #8]
 8016926:	f8ad e01c 	strh.w	lr, [sp, #28]
 801692a:	4411      	add	r1, r2
 801692c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016930:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016934:	4413      	add	r3, r2
 8016936:	b289      	uxth	r1, r1
 8016938:	b29b      	uxth	r3, r3
 801693a:	b208      	sxth	r0, r1
 801693c:	b21a      	sxth	r2, r3
 801693e:	4290      	cmp	r0, r2
 8016940:	bfb8      	it	lt
 8016942:	460b      	movlt	r3, r1
 8016944:	eba3 030c 	sub.w	r3, r3, ip
 8016948:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801694c:	a807      	add	r0, sp, #28
 801694e:	f7fa f910 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016952:	b920      	cbnz	r0, 801695e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016954:	6823      	ldr	r3, [r4, #0]
 8016956:	a907      	add	r1, sp, #28
 8016958:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801695a:	4620      	mov	r0, r4
 801695c:	4798      	blx	r3
 801695e:	3701      	adds	r7, #1
 8016960:	b2bf      	uxth	r7, r7
 8016962:	e7a9      	b.n	80168b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016964:	f8d9 0000 	ldr.w	r0, [r9]
 8016968:	6803      	ldr	r3, [r0, #0]
 801696a:	2101      	movs	r1, #1
 801696c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016970:	4798      	blx	r3
 8016972:	e773      	b.n	801685c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016974:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016978:	e7e8      	b.n	801694c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801697a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801697c:	4798      	blx	r3
 801697e:	4b3f      	ldr	r3, [pc, #252]	; (8016a7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016980:	781b      	ldrb	r3, [r3, #0]
 8016982:	2b00      	cmp	r3, #0
 8016984:	f43f af29 	beq.w	80167da <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016988:	2300      	movs	r3, #0
 801698a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801698e:	882b      	ldrh	r3, [r5, #0]
 8016990:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016994:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016998:	42ab      	cmp	r3, r5
 801699a:	f4bf af1e 	bcs.w	80167da <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801699e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80169a2:	2907      	cmp	r1, #7
 80169a4:	d814      	bhi.n	80169d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80169a6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80169aa:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80169ae:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80169b2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80169b6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80169ba:	1c4a      	adds	r2, r1, #1
 80169bc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80169c0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80169c4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80169c8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80169cc:	8097      	strh	r7, [r2, #4]
 80169ce:	80d6      	strh	r6, [r2, #6]
 80169d0:	3301      	adds	r3, #1
 80169d2:	b29b      	uxth	r3, r3
 80169d4:	e7e0      	b.n	8016998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80169d6:	2b02      	cmp	r3, #2
 80169d8:	f040 8133 	bne.w	8016c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80169dc:	4b28      	ldr	r3, [pc, #160]	; (8016a80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80169de:	781b      	ldrb	r3, [r3, #0]
 80169e0:	2b01      	cmp	r3, #1
 80169e2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80169e6:	f000 8098 	beq.w	8016b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80169ea:	882a      	ldrh	r2, [r5, #0]
 80169ec:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80169f0:	3201      	adds	r2, #1
 80169f2:	b292      	uxth	r2, r2
 80169f4:	2900      	cmp	r1, #0
 80169f6:	d0c2      	beq.n	801697e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80169f8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80169fc:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016a00:	441e      	add	r6, r3
 8016a02:	b236      	sxth	r6, r6
 8016a04:	4694      	mov	ip, r2
 8016a06:	f04f 0900 	mov.w	r9, #0
 8016a0a:	fa1f f38c 	uxth.w	r3, ip
 8016a0e:	4299      	cmp	r1, r3
 8016a10:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016a14:	f240 80bf 	bls.w	8016b96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016a18:	4427      	add	r7, r4
 8016a1a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8016a1e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016a22:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016a26:	4283      	cmp	r3, r0
 8016a28:	f340 80a1 	ble.w	8016b6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8016a2c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016a30:	4406      	add	r6, r0
 8016a32:	b236      	sxth	r6, r6
 8016a34:	429e      	cmp	r6, r3
 8016a36:	bfa8      	it	ge
 8016a38:	461e      	movge	r6, r3
 8016a3a:	46e1      	mov	r9, ip
 8016a3c:	f10c 0c01 	add.w	ip, ip, #1
 8016a40:	e7e3      	b.n	8016a0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016a42:	d10a      	bne.n	8016a5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016a44:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016a48:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8016a4c:	4562      	cmp	r2, ip
 8016a4e:	bfb8      	it	lt
 8016a50:	4662      	movlt	r2, ip
 8016a52:	4288      	cmp	r0, r1
 8016a54:	bfb8      	it	lt
 8016a56:	461f      	movlt	r7, r3
 8016a58:	e087      	b.n	8016b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016a5a:	428a      	cmp	r2, r1
 8016a5c:	bfb8      	it	lt
 8016a5e:	460a      	movlt	r2, r1
 8016a60:	e083      	b.n	8016b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016a62:	bf00      	nop
 8016a64:	20012df4 	.word	0x20012df4
 8016a68:	20012e00 	.word	0x20012e00
 8016a6c:	20000088 	.word	0x20000088
 8016a70:	20012db4 	.word	0x20012db4
 8016a74:	20012daa 	.word	0x20012daa
 8016a78:	20012da8 	.word	0x20012da8
 8016a7c:	20012db2 	.word	0x20012db2
 8016a80:	20012dac 	.word	0x20012dac
 8016a84:	19a1      	adds	r1, r4, r6
 8016a86:	ab07      	add	r3, sp, #28
 8016a88:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016a8c:	6849      	ldr	r1, [r1, #4]
 8016a8e:	c303      	stmia	r3!, {r0, r1}
 8016a90:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016a94:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016a98:	2b13      	cmp	r3, #19
 8016a9a:	bfd8      	it	le
 8016a9c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016aa0:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016aa4:	440b      	add	r3, r1
 8016aa6:	1a9b      	subs	r3, r3, r2
 8016aa8:	a807      	add	r0, sp, #28
 8016aaa:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016aae:	f7fe ff7b 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ab2:	a807      	add	r0, sp, #28
 8016ab4:	f7fa f85d 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016ab8:	bb78      	cbnz	r0, 8016b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016aba:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016abe:	f8d9 0000 	ldr.w	r0, [r9]
 8016ac2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016ac6:	f8d0 e000 	ldr.w	lr, [r0]
 8016aca:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016ace:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016ad2:	f1bc 0f14 	cmp.w	ip, #20
 8016ad6:	bfa8      	it	ge
 8016ad8:	f04f 0c14 	movge.w	ip, #20
 8016adc:	fa1f fc8c 	uxth.w	ip, ip
 8016ae0:	f8cd c000 	str.w	ip, [sp]
 8016ae4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016ae8:	47d8      	blx	fp
 8016aea:	4683      	mov	fp, r0
 8016aec:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016af0:	a807      	add	r0, sp, #28
 8016af2:	f7fe ff3f 	bl	8015974 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016af6:	6823      	ldr	r3, [r4, #0]
 8016af8:	4426      	add	r6, r4
 8016afa:	4620      	mov	r0, r4
 8016afc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016afe:	a907      	add	r1, sp, #28
 8016b00:	4798      	blx	r3
 8016b02:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016b06:	eba0 000b 	sub.w	r0, r0, fp
 8016b0a:	b200      	sxth	r0, r0
 8016b0c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016b10:	b918      	cbnz	r0, 8016b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016b12:	b2b9      	uxth	r1, r7
 8016b14:	4650      	mov	r0, sl
 8016b16:	f7ff fa79 	bl	801600c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b1a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8016b1e:	f1bb 0f00 	cmp.w	fp, #0
 8016b22:	f43f af2c 	beq.w	801697e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016b26:	882b      	ldrh	r3, [r5, #0]
 8016b28:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016b2c:	3301      	adds	r3, #1
 8016b2e:	b29b      	uxth	r3, r3
 8016b30:	2700      	movs	r7, #0
 8016b32:	b299      	uxth	r1, r3
 8016b34:	458b      	cmp	fp, r1
 8016b36:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016b3a:	d9a3      	bls.n	8016a84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016b3c:	4426      	add	r6, r4
 8016b3e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016b42:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016b46:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016b4a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016b4e:	4408      	add	r0, r1
 8016b50:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016b54:	4461      	add	r1, ip
 8016b56:	b200      	sxth	r0, r0
 8016b58:	b209      	sxth	r1, r1
 8016b5a:	4288      	cmp	r0, r1
 8016b5c:	f6bf af71 	bge.w	8016a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016b60:	4584      	cmp	ip, r0
 8016b62:	4662      	mov	r2, ip
 8016b64:	461f      	mov	r7, r3
 8016b66:	bfb8      	it	lt
 8016b68:	4602      	movlt	r2, r0
 8016b6a:	3301      	adds	r3, #1
 8016b6c:	e7e1      	b.n	8016b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016b6e:	d10e      	bne.n	8016b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016b70:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016b74:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016b78:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016b7c:	4473      	add	r3, lr
 8016b7e:	b21b      	sxth	r3, r3
 8016b80:	429e      	cmp	r6, r3
 8016b82:	bfa8      	it	ge
 8016b84:	461e      	movge	r6, r3
 8016b86:	4287      	cmp	r7, r0
 8016b88:	bfb8      	it	lt
 8016b8a:	46e1      	movlt	r9, ip
 8016b8c:	e756      	b.n	8016a3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016b8e:	4286      	cmp	r6, r0
 8016b90:	bfa8      	it	ge
 8016b92:	4606      	movge	r6, r0
 8016b94:	e752      	b.n	8016a3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016b96:	eb0a 0007 	add.w	r0, sl, r7
 8016b9a:	4427      	add	r7, r4
 8016b9c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016ba0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016ba4:	f1bb 0f13 	cmp.w	fp, #19
 8016ba8:	bfde      	ittt	le
 8016baa:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016bae:	445e      	addle	r6, fp
 8016bb0:	b236      	sxthle	r6, r6
 8016bb2:	f7f9 ffde 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bb6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016bba:	2800      	cmp	r0, #0
 8016bbc:	f47f af1a 	bne.w	80169f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016bc0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016bc4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016bc8:	482a      	ldr	r0, [pc, #168]	; (8016c74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016bca:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016bce:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016bd2:	6800      	ldr	r0, [r0, #0]
 8016bd4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016bd8:	1ab6      	subs	r6, r6, r2
 8016bda:	2e14      	cmp	r6, #20
 8016bdc:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016be0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016be4:	bfa8      	it	ge
 8016be6:	2614      	movge	r6, #20
 8016be8:	f8d0 c000 	ldr.w	ip, [r0]
 8016bec:	b2b6      	uxth	r6, r6
 8016bee:	fa1f fb8b 	uxth.w	fp, fp
 8016bf2:	455e      	cmp	r6, fp
 8016bf4:	bf94      	ite	ls
 8016bf6:	9600      	strls	r6, [sp, #0]
 8016bf8:	f8cd b000 	strhi.w	fp, [sp]
 8016bfc:	b292      	uxth	r2, r2
 8016bfe:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016c02:	b29b      	uxth	r3, r3
 8016c04:	b289      	uxth	r1, r1
 8016c06:	47b0      	blx	r6
 8016c08:	6823      	ldr	r3, [r4, #0]
 8016c0a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016c0e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016c10:	a907      	add	r1, sp, #28
 8016c12:	4620      	mov	r0, r4
 8016c14:	4798      	blx	r3
 8016c16:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016c1a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016c1e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016c22:	1a5b      	subs	r3, r3, r1
 8016c24:	440a      	add	r2, r1
 8016c26:	b21b      	sxth	r3, r3
 8016c28:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016c2c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016c30:	2b00      	cmp	r3, #0
 8016c32:	f47f aeda 	bne.w	80169ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016c36:	fa1f f189 	uxth.w	r1, r9
 8016c3a:	4650      	mov	r0, sl
 8016c3c:	f7ff f9e6 	bl	801600c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016c40:	e6d3      	b.n	80169ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016c42:	882e      	ldrh	r6, [r5, #0]
 8016c44:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016c48:	42b3      	cmp	r3, r6
 8016c4a:	f67f ae98 	bls.w	801697e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016c4e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016c52:	ab07      	add	r3, sp, #28
 8016c54:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016c58:	6851      	ldr	r1, [r2, #4]
 8016c5a:	c303      	stmia	r3!, {r0, r1}
 8016c5c:	a807      	add	r0, sp, #28
 8016c5e:	f7f9 ff88 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c62:	b920      	cbnz	r0, 8016c6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016c64:	6823      	ldr	r3, [r4, #0]
 8016c66:	a907      	add	r1, sp, #28
 8016c68:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016c6a:	4620      	mov	r0, r4
 8016c6c:	4798      	blx	r3
 8016c6e:	3601      	adds	r6, #1
 8016c70:	b2b6      	uxth	r6, r6
 8016c72:	e7e7      	b.n	8016c44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016c74:	20012db4 	.word	0x20012db4

08016c78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016c78:	4b03      	ldr	r3, [pc, #12]	; (8016c88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016c7a:	2200      	movs	r2, #0
 8016c7c:	801a      	strh	r2, [r3, #0]
 8016c7e:	805a      	strh	r2, [r3, #2]
 8016c80:	809a      	strh	r2, [r3, #4]
 8016c82:	80da      	strh	r2, [r3, #6]
 8016c84:	4770      	bx	lr
 8016c86:	bf00      	nop
 8016c88:	20012e00 	.word	0x20012e00

08016c8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c90:	4606      	mov	r6, r0
 8016c92:	b09d      	sub	sp, #116	; 0x74
 8016c94:	a803      	add	r0, sp, #12
 8016c96:	4614      	mov	r4, r2
 8016c98:	468a      	mov	sl, r1
 8016c9a:	461d      	mov	r5, r3
 8016c9c:	f000 feca 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 8016ca0:	6833      	ldr	r3, [r6, #0]
 8016ca2:	4630      	mov	r0, r6
 8016ca4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016ca6:	4798      	blx	r3
 8016ca8:	6833      	ldr	r3, [r6, #0]
 8016caa:	4607      	mov	r7, r0
 8016cac:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016cae:	4630      	mov	r0, r6
 8016cb0:	4798      	blx	r3
 8016cb2:	462a      	mov	r2, r5
 8016cb4:	9000      	str	r0, [sp, #0]
 8016cb6:	4621      	mov	r1, r4
 8016cb8:	463b      	mov	r3, r7
 8016cba:	a803      	add	r0, sp, #12
 8016cbc:	f000 ff15 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016cc0:	2500      	movs	r5, #0
 8016cc2:	462c      	mov	r4, r5
 8016cc4:	46a9      	mov	r9, r5
 8016cc6:	46a8      	mov	r8, r5
 8016cc8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016ccc:	2300      	movs	r3, #0
 8016cce:	9302      	str	r3, [sp, #8]
 8016cd0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016cd4:	429c      	cmp	r4, r3
 8016cd6:	d002      	beq.n	8016cde <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016cd8:	455c      	cmp	r4, fp
 8016cda:	bf18      	it	ne
 8016cdc:	4625      	movne	r5, r4
 8016cde:	ab02      	add	r3, sp, #8
 8016ce0:	4632      	mov	r2, r6
 8016ce2:	4651      	mov	r1, sl
 8016ce4:	a803      	add	r0, sp, #12
 8016ce6:	f001 fa03 	bl	80180f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016cea:	4604      	mov	r4, r0
 8016cec:	b108      	cbz	r0, 8016cf2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016cee:	280a      	cmp	r0, #10
 8016cf0:	d10a      	bne.n	8016d08 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016cf2:	45c1      	cmp	r9, r8
 8016cf4:	bf38      	it	cc
 8016cf6:	46c1      	movcc	r9, r8
 8016cf8:	f04f 0800 	mov.w	r8, #0
 8016cfc:	2c00      	cmp	r4, #0
 8016cfe:	d1e5      	bne.n	8016ccc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016d00:	4648      	mov	r0, r9
 8016d02:	b01d      	add	sp, #116	; 0x74
 8016d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d08:	9a02      	ldr	r2, [sp, #8]
 8016d0a:	2a00      	cmp	r2, #0
 8016d0c:	d0de      	beq.n	8016ccc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016d0e:	7b57      	ldrb	r7, [r2, #13]
 8016d10:	6833      	ldr	r3, [r6, #0]
 8016d12:	8894      	ldrh	r4, [r2, #4]
 8016d14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016d16:	007f      	lsls	r7, r7, #1
 8016d18:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016d1c:	7a97      	ldrb	r7, [r2, #10]
 8016d1e:	4629      	mov	r1, r5
 8016d20:	4307      	orrs	r7, r0
 8016d22:	4630      	mov	r0, r6
 8016d24:	4798      	blx	r3
 8016d26:	4438      	add	r0, r7
 8016d28:	4480      	add	r8, r0
 8016d2a:	fa1f f888 	uxth.w	r8, r8
 8016d2e:	e7e5      	b.n	8016cfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016d30 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016d30:	b508      	push	{r3, lr}
 8016d32:	6803      	ldr	r3, [r0, #0]
 8016d34:	68db      	ldr	r3, [r3, #12]
 8016d36:	4798      	blx	r3
 8016d38:	b128      	cbz	r0, 8016d46 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016d3a:	7b43      	ldrb	r3, [r0, #13]
 8016d3c:	7a80      	ldrb	r0, [r0, #10]
 8016d3e:	005b      	lsls	r3, r3, #1
 8016d40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016d44:	4318      	orrs	r0, r3
 8016d46:	bd08      	pop	{r3, pc}

08016d48 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016d48:	b40e      	push	{r1, r2, r3}
 8016d4a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d4c:	b09e      	sub	sp, #120	; 0x78
 8016d4e:	ab23      	add	r3, sp, #140	; 0x8c
 8016d50:	4605      	mov	r5, r0
 8016d52:	f853 4b04 	ldr.w	r4, [r3], #4
 8016d56:	9303      	str	r3, [sp, #12]
 8016d58:	a805      	add	r0, sp, #20
 8016d5a:	f000 fe6b 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 8016d5e:	682b      	ldr	r3, [r5, #0]
 8016d60:	4628      	mov	r0, r5
 8016d62:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016d64:	4798      	blx	r3
 8016d66:	682b      	ldr	r3, [r5, #0]
 8016d68:	4606      	mov	r6, r0
 8016d6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d6c:	4628      	mov	r0, r5
 8016d6e:	4798      	blx	r3
 8016d70:	4633      	mov	r3, r6
 8016d72:	ae1e      	add	r6, sp, #120	; 0x78
 8016d74:	4621      	mov	r1, r4
 8016d76:	9000      	str	r0, [sp, #0]
 8016d78:	9a03      	ldr	r2, [sp, #12]
 8016d7a:	2400      	movs	r4, #0
 8016d7c:	a805      	add	r0, sp, #20
 8016d7e:	f000 feb4 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d82:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016d86:	462a      	mov	r2, r5
 8016d88:	4633      	mov	r3, r6
 8016d8a:	4621      	mov	r1, r4
 8016d8c:	a805      	add	r0, sp, #20
 8016d8e:	f001 f9af 	bl	80180f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d92:	b1f0      	cbz	r0, 8016dd2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016d94:	280a      	cmp	r0, #10
 8016d96:	d018      	beq.n	8016dca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016d98:	9f04      	ldr	r7, [sp, #16]
 8016d9a:	b1b7      	cbz	r7, 8016dca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016d9c:	7b78      	ldrb	r0, [r7, #13]
 8016d9e:	7a3b      	ldrb	r3, [r7, #8]
 8016da0:	88ea      	ldrh	r2, [r5, #6]
 8016da2:	00c1      	lsls	r1, r0, #3
 8016da4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016da8:	4319      	orrs	r1, r3
 8016daa:	0643      	lsls	r3, r0, #25
 8016dac:	bf44      	itt	mi
 8016dae:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016db2:	b219      	sxthmi	r1, r3
 8016db4:	0100      	lsls	r0, r0, #4
 8016db6:	79fb      	ldrb	r3, [r7, #7]
 8016db8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016dbc:	4303      	orrs	r3, r0
 8016dbe:	4413      	add	r3, r2
 8016dc0:	1a5b      	subs	r3, r3, r1
 8016dc2:	b21b      	sxth	r3, r3
 8016dc4:	429c      	cmp	r4, r3
 8016dc6:	bfb8      	it	lt
 8016dc8:	461c      	movlt	r4, r3
 8016dca:	4633      	mov	r3, r6
 8016dcc:	462a      	mov	r2, r5
 8016dce:	2100      	movs	r1, #0
 8016dd0:	e7dc      	b.n	8016d8c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016dd2:	b2a0      	uxth	r0, r4
 8016dd4:	b01e      	add	sp, #120	; 0x78
 8016dd6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016dda:	b003      	add	sp, #12
 8016ddc:	4770      	bx	lr

08016dde <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016dde:	7a43      	ldrb	r3, [r0, #9]
 8016de0:	8880      	ldrh	r0, [r0, #4]
 8016de2:	4418      	add	r0, r3
 8016de4:	b280      	uxth	r0, r0
 8016de6:	4770      	bx	lr

08016de8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016de8:	6803      	ldr	r3, [r0, #0]
 8016dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016dec:	4718      	bx	r3

08016dee <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016dee:	b40e      	push	{r1, r2, r3}
 8016df0:	b570      	push	{r4, r5, r6, lr}
 8016df2:	b09d      	sub	sp, #116	; 0x74
 8016df4:	ab21      	add	r3, sp, #132	; 0x84
 8016df6:	4604      	mov	r4, r0
 8016df8:	f853 5b04 	ldr.w	r5, [r3], #4
 8016dfc:	9302      	str	r3, [sp, #8]
 8016dfe:	a803      	add	r0, sp, #12
 8016e00:	f000 fe18 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 8016e04:	6823      	ldr	r3, [r4, #0]
 8016e06:	4620      	mov	r0, r4
 8016e08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016e0a:	4798      	blx	r3
 8016e0c:	6823      	ldr	r3, [r4, #0]
 8016e0e:	4606      	mov	r6, r0
 8016e10:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016e12:	4620      	mov	r0, r4
 8016e14:	4798      	blx	r3
 8016e16:	4633      	mov	r3, r6
 8016e18:	9000      	str	r0, [sp, #0]
 8016e1a:	9a02      	ldr	r2, [sp, #8]
 8016e1c:	4629      	mov	r1, r5
 8016e1e:	a803      	add	r0, sp, #12
 8016e20:	f000 fe63 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016e24:	a803      	add	r0, sp, #12
 8016e26:	f001 fa31 	bl	801828c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016e2a:	2401      	movs	r4, #1
 8016e2c:	b2a3      	uxth	r3, r4
 8016e2e:	b140      	cbz	r0, 8016e42 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016e30:	280a      	cmp	r0, #10
 8016e32:	bf08      	it	eq
 8016e34:	3301      	addeq	r3, #1
 8016e36:	a803      	add	r0, sp, #12
 8016e38:	bf08      	it	eq
 8016e3a:	b21c      	sxtheq	r4, r3
 8016e3c:	f001 fa26 	bl	801828c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016e40:	e7f4      	b.n	8016e2c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016e42:	4618      	mov	r0, r3
 8016e44:	b01d      	add	sp, #116	; 0x74
 8016e46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e4a:	b003      	add	sp, #12
 8016e4c:	4770      	bx	lr

08016e4e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016e4e:	b40e      	push	{r1, r2, r3}
 8016e50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016e52:	b09e      	sub	sp, #120	; 0x78
 8016e54:	ab23      	add	r3, sp, #140	; 0x8c
 8016e56:	4604      	mov	r4, r0
 8016e58:	f853 5b04 	ldr.w	r5, [r3], #4
 8016e5c:	9303      	str	r3, [sp, #12]
 8016e5e:	a805      	add	r0, sp, #20
 8016e60:	f000 fde8 	bl	8017a34 <_ZN8touchgfx12TextProviderC1Ev>
 8016e64:	6823      	ldr	r3, [r4, #0]
 8016e66:	4620      	mov	r0, r4
 8016e68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016e6a:	4798      	blx	r3
 8016e6c:	6823      	ldr	r3, [r4, #0]
 8016e6e:	4606      	mov	r6, r0
 8016e70:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016e72:	4620      	mov	r0, r4
 8016e74:	4798      	blx	r3
 8016e76:	4633      	mov	r3, r6
 8016e78:	4629      	mov	r1, r5
 8016e7a:	9000      	str	r0, [sp, #0]
 8016e7c:	9a03      	ldr	r2, [sp, #12]
 8016e7e:	a805      	add	r0, sp, #20
 8016e80:	ad1e      	add	r5, sp, #120	; 0x78
 8016e82:	f000 fe32 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016e86:	2100      	movs	r1, #0
 8016e88:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016e8c:	4622      	mov	r2, r4
 8016e8e:	462b      	mov	r3, r5
 8016e90:	a805      	add	r0, sp, #20
 8016e92:	f001 f92d 	bl	80180f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016e96:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016e9a:	b1d8      	cbz	r0, 8016ed4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016e9c:	280a      	cmp	r0, #10
 8016e9e:	d012      	beq.n	8016ec6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016ea0:	9804      	ldr	r0, [sp, #16]
 8016ea2:	b180      	cbz	r0, 8016ec6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016ea4:	7b47      	ldrb	r7, [r0, #13]
 8016ea6:	88e2      	ldrh	r2, [r4, #6]
 8016ea8:	00fb      	lsls	r3, r7, #3
 8016eaa:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016eae:	7a03      	ldrb	r3, [r0, #8]
 8016eb0:	430b      	orrs	r3, r1
 8016eb2:	0679      	lsls	r1, r7, #25
 8016eb4:	bf44      	itt	mi
 8016eb6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016eba:	b21b      	sxthmi	r3, r3
 8016ebc:	1ad3      	subs	r3, r2, r3
 8016ebe:	b21b      	sxth	r3, r3
 8016ec0:	429e      	cmp	r6, r3
 8016ec2:	bfa8      	it	ge
 8016ec4:	461e      	movge	r6, r3
 8016ec6:	462b      	mov	r3, r5
 8016ec8:	4622      	mov	r2, r4
 8016eca:	2100      	movs	r1, #0
 8016ecc:	a805      	add	r0, sp, #20
 8016ece:	f001 f90f 	bl	80180f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ed2:	e7e2      	b.n	8016e9a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016ed4:	4630      	mov	r0, r6
 8016ed6:	b01e      	add	sp, #120	; 0x78
 8016ed8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016edc:	b003      	add	sp, #12
 8016ede:	4770      	bx	lr

08016ee0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016ee0:	b513      	push	{r0, r1, r4, lr}
 8016ee2:	6803      	ldr	r3, [r0, #0]
 8016ee4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016ee8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016eec:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016ef0:	2400      	movs	r4, #0
 8016ef2:	9400      	str	r4, [sp, #0]
 8016ef4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016ef8:	691b      	ldr	r3, [r3, #16]
 8016efa:	4669      	mov	r1, sp
 8016efc:	4798      	blx	r3
 8016efe:	b002      	add	sp, #8
 8016f00:	bd10      	pop	{r4, pc}

08016f02 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016f02:	b538      	push	{r3, r4, r5, lr}
 8016f04:	680b      	ldr	r3, [r1, #0]
 8016f06:	460c      	mov	r4, r1
 8016f08:	68db      	ldr	r3, [r3, #12]
 8016f0a:	4605      	mov	r5, r0
 8016f0c:	4798      	blx	r3
 8016f0e:	6823      	ldr	r3, [r4, #0]
 8016f10:	4620      	mov	r0, r4
 8016f12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f14:	4629      	mov	r1, r5
 8016f16:	4798      	blx	r3
 8016f18:	4628      	mov	r0, r5
 8016f1a:	bd38      	pop	{r3, r4, r5, pc}

08016f1c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016f1c:	b410      	push	{r4}
 8016f1e:	880a      	ldrh	r2, [r1, #0]
 8016f20:	8884      	ldrh	r4, [r0, #4]
 8016f22:	4422      	add	r2, r4
 8016f24:	800a      	strh	r2, [r1, #0]
 8016f26:	88c4      	ldrh	r4, [r0, #6]
 8016f28:	884a      	ldrh	r2, [r1, #2]
 8016f2a:	4422      	add	r2, r4
 8016f2c:	804a      	strh	r2, [r1, #2]
 8016f2e:	6940      	ldr	r0, [r0, #20]
 8016f30:	b120      	cbz	r0, 8016f3c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016f32:	6803      	ldr	r3, [r0, #0]
 8016f34:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016f38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f3a:	4718      	bx	r3
 8016f3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016f40:	4770      	bx	lr

08016f42 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016f42:	b570      	push	{r4, r5, r6, lr}
 8016f44:	8882      	ldrh	r2, [r0, #4]
 8016f46:	880b      	ldrh	r3, [r1, #0]
 8016f48:	4413      	add	r3, r2
 8016f4a:	800b      	strh	r3, [r1, #0]
 8016f4c:	88c2      	ldrh	r2, [r0, #6]
 8016f4e:	884b      	ldrh	r3, [r1, #2]
 8016f50:	460c      	mov	r4, r1
 8016f52:	4413      	add	r3, r2
 8016f54:	804b      	strh	r3, [r1, #2]
 8016f56:	4605      	mov	r5, r0
 8016f58:	1d01      	adds	r1, r0, #4
 8016f5a:	4620      	mov	r0, r4
 8016f5c:	f7f9 fdc6 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8016f60:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016f64:	2b00      	cmp	r3, #0
 8016f66:	dd0b      	ble.n	8016f80 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016f68:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016f6c:	2b00      	cmp	r3, #0
 8016f6e:	dd07      	ble.n	8016f80 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016f70:	6968      	ldr	r0, [r5, #20]
 8016f72:	b128      	cbz	r0, 8016f80 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016f74:	6803      	ldr	r3, [r0, #0]
 8016f76:	4621      	mov	r1, r4
 8016f78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016f7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f7e:	4718      	bx	r3
 8016f80:	bd70      	pop	{r4, r5, r6, pc}
	...

08016f84 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016f84:	b570      	push	{r4, r5, r6, lr}
 8016f86:	8882      	ldrh	r2, [r0, #4]
 8016f88:	880b      	ldrh	r3, [r1, #0]
 8016f8a:	4413      	add	r3, r2
 8016f8c:	800b      	strh	r3, [r1, #0]
 8016f8e:	88c2      	ldrh	r2, [r0, #6]
 8016f90:	884b      	ldrh	r3, [r1, #2]
 8016f92:	460c      	mov	r4, r1
 8016f94:	4413      	add	r3, r2
 8016f96:	804b      	strh	r3, [r1, #2]
 8016f98:	4605      	mov	r5, r0
 8016f9a:	1d01      	adds	r1, r0, #4
 8016f9c:	4620      	mov	r0, r4
 8016f9e:	f7f9 fda5 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8016fa2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016fa6:	2b00      	cmp	r3, #0
 8016fa8:	dd19      	ble.n	8016fde <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016faa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016fae:	2b00      	cmp	r3, #0
 8016fb0:	dd15      	ble.n	8016fde <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016fb2:	6968      	ldr	r0, [r5, #20]
 8016fb4:	b128      	cbz	r0, 8016fc2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016fb6:	6803      	ldr	r3, [r0, #0]
 8016fb8:	4621      	mov	r1, r4
 8016fba:	691b      	ldr	r3, [r3, #16]
 8016fbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016fc0:	4718      	bx	r3
 8016fc2:	4b07      	ldr	r3, [pc, #28]	; (8016fe0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016fc4:	681b      	ldr	r3, [r3, #0]
 8016fc6:	3304      	adds	r3, #4
 8016fc8:	429d      	cmp	r5, r3
 8016fca:	d108      	bne.n	8016fde <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016fcc:	f7fe fea0 	bl	8015d10 <_ZN8touchgfx11Application11getInstanceEv>
 8016fd0:	6803      	ldr	r3, [r0, #0]
 8016fd2:	6821      	ldr	r1, [r4, #0]
 8016fd4:	6862      	ldr	r2, [r4, #4]
 8016fd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016fd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016fdc:	4718      	bx	r3
 8016fde:	bd70      	pop	{r4, r5, r6, pc}
 8016fe0:	20012df8 	.word	0x20012df8

08016fe4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016fe4:	b570      	push	{r4, r5, r6, lr}
 8016fe6:	4604      	mov	r4, r0
 8016fe8:	4616      	mov	r6, r2
 8016fea:	460d      	mov	r5, r1
 8016fec:	b901      	cbnz	r1, 8016ff0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016fee:	b192      	cbz	r2, 8017016 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016ff0:	6823      	ldr	r3, [r4, #0]
 8016ff2:	4620      	mov	r0, r4
 8016ff4:	699b      	ldr	r3, [r3, #24]
 8016ff6:	4798      	blx	r3
 8016ff8:	88e2      	ldrh	r2, [r4, #6]
 8016ffa:	88a1      	ldrh	r1, [r4, #4]
 8016ffc:	4432      	add	r2, r6
 8016ffe:	4429      	add	r1, r5
 8017000:	4620      	mov	r0, r4
 8017002:	b212      	sxth	r2, r2
 8017004:	b209      	sxth	r1, r1
 8017006:	f7ec f89a 	bl	800313e <_ZN8touchgfx8Drawable5setXYEss>
 801700a:	6823      	ldr	r3, [r4, #0]
 801700c:	4620      	mov	r0, r4
 801700e:	699b      	ldr	r3, [r3, #24]
 8017010:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017014:	4718      	bx	r3
 8017016:	bd70      	pop	{r4, r5, r6, pc}

08017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017018:	b510      	push	{r4, lr}
 801701a:	4604      	mov	r4, r0
 801701c:	4608      	mov	r0, r1
 801701e:	2300      	movs	r3, #0
 8017020:	8023      	strh	r3, [r4, #0]
 8017022:	8063      	strh	r3, [r4, #2]
 8017024:	6803      	ldr	r3, [r0, #0]
 8017026:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801702a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801702e:	80a1      	strh	r1, [r4, #4]
 8017030:	80e2      	strh	r2, [r4, #6]
 8017032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017034:	4621      	mov	r1, r4
 8017036:	4798      	blx	r3
 8017038:	4620      	mov	r0, r4
 801703a:	bd10      	pop	{r4, pc}

0801703c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801703c:	b530      	push	{r4, r5, lr}
 801703e:	8083      	strh	r3, [r0, #4]
 8017040:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017044:	80c3      	strh	r3, [r0, #6]
 8017046:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801704a:	7203      	strb	r3, [r0, #8]
 801704c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017050:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017054:	7243      	strb	r3, [r0, #9]
 8017056:	7a83      	ldrb	r3, [r0, #10]
 8017058:	6141      	str	r1, [r0, #20]
 801705a:	f365 0306 	bfi	r3, r5, #0, #7
 801705e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017062:	8302      	strh	r2, [r0, #24]
 8017064:	f365 13c7 	bfi	r3, r5, #7, #1
 8017068:	7283      	strb	r3, [r0, #10]
 801706a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801706e:	72c3      	strb	r3, [r0, #11]
 8017070:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8017074:	7303      	strb	r3, [r0, #12]
 8017076:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801707a:	81c3      	strh	r3, [r0, #14]
 801707c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017080:	8203      	strh	r3, [r0, #16]
 8017082:	4b01      	ldr	r3, [pc, #4]	; (8017088 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017084:	6003      	str	r3, [r0, #0]
 8017086:	bd30      	pop	{r4, r5, pc}
 8017088:	0802f494 	.word	0x0802f494

0801708c <_ZNK8touchgfx9ConstFont4findEt>:
 801708c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801708e:	6944      	ldr	r4, [r0, #20]
 8017090:	b3bc      	cbz	r4, 8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017092:	88a3      	ldrh	r3, [r4, #4]
 8017094:	8b02      	ldrh	r2, [r0, #24]
 8017096:	1acb      	subs	r3, r1, r3
 8017098:	f102 32ff 	add.w	r2, r2, #4294967295
 801709c:	d431      	bmi.n	8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801709e:	4293      	cmp	r3, r2
 80170a0:	dd0c      	ble.n	80170bc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80170a2:	230e      	movs	r3, #14
 80170a4:	fb03 4302 	mla	r3, r3, r2, r4
 80170a8:	889b      	ldrh	r3, [r3, #4]
 80170aa:	1a5b      	subs	r3, r3, r1
 80170ac:	1ad3      	subs	r3, r2, r3
 80170ae:	429a      	cmp	r2, r3
 80170b0:	db27      	blt.n	8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170b2:	2b00      	cmp	r3, #0
 80170b4:	bfbc      	itt	lt
 80170b6:	2302      	movlt	r3, #2
 80170b8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80170bc:	2500      	movs	r5, #0
 80170be:	260e      	movs	r6, #14
 80170c0:	4295      	cmp	r5, r2
 80170c2:	dc1e      	bgt.n	8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170c4:	fb06 4003 	mla	r0, r6, r3, r4
 80170c8:	8887      	ldrh	r7, [r0, #4]
 80170ca:	42b9      	cmp	r1, r7
 80170cc:	d01a      	beq.n	8017104 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80170ce:	d20d      	bcs.n	80170ec <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80170d0:	1e5a      	subs	r2, r3, #1
 80170d2:	4295      	cmp	r5, r2
 80170d4:	dc15      	bgt.n	8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170d6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80170da:	1a5b      	subs	r3, r3, r1
 80170dc:	1ad3      	subs	r3, r2, r3
 80170de:	429a      	cmp	r2, r3
 80170e0:	db0f      	blt.n	8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170e2:	429d      	cmp	r5, r3
 80170e4:	ddec      	ble.n	80170c0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80170e6:	1953      	adds	r3, r2, r5
 80170e8:	105b      	asrs	r3, r3, #1
 80170ea:	e7e9      	b.n	80170c0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80170ec:	1c5d      	adds	r5, r3, #1
 80170ee:	42aa      	cmp	r2, r5
 80170f0:	db07      	blt.n	8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170f2:	8a43      	ldrh	r3, [r0, #18]
 80170f4:	1acb      	subs	r3, r1, r3
 80170f6:	442b      	add	r3, r5
 80170f8:	429d      	cmp	r5, r3
 80170fa:	dc02      	bgt.n	8017102 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80170fc:	429a      	cmp	r2, r3
 80170fe:	dadf      	bge.n	80170c0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017100:	e7f1      	b.n	80170e6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017102:	2000      	movs	r0, #0
 8017104:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017106 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017106:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017108:	4604      	mov	r4, r0
 801710a:	4617      	mov	r7, r2
 801710c:	461e      	mov	r6, r3
 801710e:	b911      	cbnz	r1, 8017116 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017110:	2500      	movs	r5, #0
 8017112:	4628      	mov	r0, r5
 8017114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017116:	290a      	cmp	r1, #10
 8017118:	d0fa      	beq.n	8017110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801711a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801711e:	4291      	cmp	r1, r2
 8017120:	d0f6      	beq.n	8017110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017122:	f242 020b 	movw	r2, #8203	; 0x200b
 8017126:	4291      	cmp	r1, r2
 8017128:	d0f2      	beq.n	8017110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801712a:	f7ff ffaf 	bl	801708c <_ZNK8touchgfx9ConstFont4findEt>
 801712e:	4605      	mov	r5, r0
 8017130:	b950      	cbnz	r0, 8017148 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017132:	6823      	ldr	r3, [r4, #0]
 8017134:	4620      	mov	r0, r4
 8017136:	691b      	ldr	r3, [r3, #16]
 8017138:	4798      	blx	r3
 801713a:	4601      	mov	r1, r0
 801713c:	4620      	mov	r0, r4
 801713e:	f7ff ffa5 	bl	801708c <_ZNK8touchgfx9ConstFont4findEt>
 8017142:	4605      	mov	r5, r0
 8017144:	2800      	cmp	r0, #0
 8017146:	d0e3      	beq.n	8017110 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017148:	6823      	ldr	r3, [r4, #0]
 801714a:	4629      	mov	r1, r5
 801714c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801714e:	4620      	mov	r0, r4
 8017150:	4798      	blx	r3
 8017152:	6038      	str	r0, [r7, #0]
 8017154:	6823      	ldr	r3, [r4, #0]
 8017156:	4620      	mov	r0, r4
 8017158:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801715a:	4798      	blx	r3
 801715c:	7030      	strb	r0, [r6, #0]
 801715e:	e7d8      	b.n	8017112 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017160 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017160:	b538      	push	{r3, r4, r5, lr}
 8017162:	4605      	mov	r5, r0
 8017164:	f002 fb56 	bl	8019814 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017168:	4604      	mov	r4, r0
 801716a:	4628      	mov	r0, r5
 801716c:	f002 fa96 	bl	801969c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017170:	2800      	cmp	r0, #0
 8017172:	bf14      	ite	ne
 8017174:	2002      	movne	r0, #2
 8017176:	2000      	moveq	r0, #0
 8017178:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801717c:	b280      	uxth	r0, r0
 801717e:	bd38      	pop	{r3, r4, r5, pc}

08017180 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017180:	b538      	push	{r3, r4, r5, lr}
 8017182:	4605      	mov	r5, r0
 8017184:	f002 fb46 	bl	8019814 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017188:	4604      	mov	r4, r0
 801718a:	4628      	mov	r0, r5
 801718c:	f002 fa86 	bl	801969c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017190:	2800      	cmp	r0, #0
 8017192:	bf14      	ite	ne
 8017194:	2002      	movne	r0, #2
 8017196:	2000      	moveq	r0, #0
 8017198:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801719c:	f040 0001 	orr.w	r0, r0, #1
 80171a0:	b280      	uxth	r0, r0
 80171a2:	bd38      	pop	{r3, r4, r5, pc}

080171a4 <_ZN8touchgfx4clzuEm>:
 80171a4:	4603      	mov	r3, r0
 80171a6:	b1c8      	cbz	r0, 80171dc <_ZN8touchgfx4clzuEm+0x38>
 80171a8:	0c02      	lsrs	r2, r0, #16
 80171aa:	0412      	lsls	r2, r2, #16
 80171ac:	b9a2      	cbnz	r2, 80171d8 <_ZN8touchgfx4clzuEm+0x34>
 80171ae:	0403      	lsls	r3, r0, #16
 80171b0:	2010      	movs	r0, #16
 80171b2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80171b6:	bf04      	itt	eq
 80171b8:	021b      	lsleq	r3, r3, #8
 80171ba:	3008      	addeq	r0, #8
 80171bc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80171c0:	bf04      	itt	eq
 80171c2:	011b      	lsleq	r3, r3, #4
 80171c4:	3004      	addeq	r0, #4
 80171c6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80171ca:	bf04      	itt	eq
 80171cc:	009b      	lsleq	r3, r3, #2
 80171ce:	3002      	addeq	r0, #2
 80171d0:	2b00      	cmp	r3, #0
 80171d2:	db04      	blt.n	80171de <_ZN8touchgfx4clzuEm+0x3a>
 80171d4:	3001      	adds	r0, #1
 80171d6:	4770      	bx	lr
 80171d8:	2000      	movs	r0, #0
 80171da:	e7ea      	b.n	80171b2 <_ZN8touchgfx4clzuEm+0xe>
 80171dc:	2020      	movs	r0, #32
 80171de:	4770      	bx	lr

080171e0 <_ZN8touchgfx7muldivuEmmmRm>:
 80171e0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80171e4:	460f      	mov	r7, r1
 80171e6:	4615      	mov	r5, r2
 80171e8:	461e      	mov	r6, r3
 80171ea:	4601      	mov	r1, r0
 80171ec:	b100      	cbz	r0, 80171f0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80171ee:	b927      	cbnz	r7, 80171fa <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80171f0:	2000      	movs	r0, #0
 80171f2:	6030      	str	r0, [r6, #0]
 80171f4:	b002      	add	sp, #8
 80171f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80171fa:	f7ff ffd3 	bl	80171a4 <_ZN8touchgfx4clzuEm>
 80171fe:	b980      	cbnz	r0, 8017222 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017200:	4638      	mov	r0, r7
 8017202:	f7ff ffcf 	bl	80171a4 <_ZN8touchgfx4clzuEm>
 8017206:	2800      	cmp	r0, #0
 8017208:	dd05      	ble.n	8017216 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801720a:	4633      	mov	r3, r6
 801720c:	462a      	mov	r2, r5
 801720e:	4638      	mov	r0, r7
 8017210:	f7ff ffe6 	bl	80171e0 <_ZN8touchgfx7muldivuEmmmRm>
 8017214:	e7ee      	b.n	80171f4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017216:	f04f 33ff 	mov.w	r3, #4294967295
 801721a:	6033      	str	r3, [r6, #0]
 801721c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017220:	e7e8      	b.n	80171f4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017222:	fa37 f800 	lsrs.w	r8, r7, r0
 8017226:	fb07 f301 	mul.w	r3, r7, r1
 801722a:	d105      	bne.n	8017238 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801722c:	fbb3 f0f5 	udiv	r0, r3, r5
 8017230:	fb05 3510 	mls	r5, r5, r0, r3
 8017234:	6035      	str	r5, [r6, #0]
 8017236:	e7dd      	b.n	80171f4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017238:	2301      	movs	r3, #1
 801723a:	fa01 fa00 	lsl.w	sl, r1, r0
 801723e:	fa03 f000 	lsl.w	r0, r3, r0
 8017242:	3801      	subs	r0, #1
 8017244:	462a      	mov	r2, r5
 8017246:	4633      	mov	r3, r6
 8017248:	4038      	ands	r0, r7
 801724a:	f7ff ffc9 	bl	80171e0 <_ZN8touchgfx7muldivuEmmmRm>
 801724e:	fbba f9f5 	udiv	r9, sl, r5
 8017252:	462a      	mov	r2, r5
 8017254:	4607      	mov	r7, r0
 8017256:	ab01      	add	r3, sp, #4
 8017258:	fb05 a119 	mls	r1, r5, r9, sl
 801725c:	4640      	mov	r0, r8
 801725e:	f7ff ffbf 	bl	80171e0 <_ZN8touchgfx7muldivuEmmmRm>
 8017262:	9b01      	ldr	r3, [sp, #4]
 8017264:	6832      	ldr	r2, [r6, #0]
 8017266:	fb08 f409 	mul.w	r4, r8, r9
 801726a:	441a      	add	r2, r3
 801726c:	fbb2 f3f5 	udiv	r3, r2, r5
 8017270:	441c      	add	r4, r3
 8017272:	443c      	add	r4, r7
 8017274:	4420      	add	r0, r4
 8017276:	fb05 2513 	mls	r5, r5, r3, r2
 801727a:	e7db      	b.n	8017234 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801727c <_ZN8touchgfx6muldivElllRl>:
 801727c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801727e:	2800      	cmp	r0, #0
 8017280:	bfba      	itte	lt
 8017282:	4240      	neglt	r0, r0
 8017284:	f04f 34ff 	movlt.w	r4, #4294967295
 8017288:	2401      	movge	r4, #1
 801728a:	2900      	cmp	r1, #0
 801728c:	bfbc      	itt	lt
 801728e:	4249      	neglt	r1, r1
 8017290:	4264      	neglt	r4, r4
 8017292:	2a00      	cmp	r2, #0
 8017294:	bfb6      	itet	lt
 8017296:	4265      	neglt	r5, r4
 8017298:	4625      	movge	r5, r4
 801729a:	4252      	neglt	r2, r2
 801729c:	4288      	cmp	r0, r1
 801729e:	461e      	mov	r6, r3
 80172a0:	bfc2      	ittt	gt
 80172a2:	4603      	movgt	r3, r0
 80172a4:	4608      	movgt	r0, r1
 80172a6:	4619      	movgt	r1, r3
 80172a8:	ab01      	add	r3, sp, #4
 80172aa:	f7ff ff99 	bl	80171e0 <_ZN8touchgfx7muldivuEmmmRm>
 80172ae:	9b01      	ldr	r3, [sp, #4]
 80172b0:	4368      	muls	r0, r5
 80172b2:	435c      	muls	r4, r3
 80172b4:	6034      	str	r4, [r6, #0]
 80172b6:	b002      	add	sp, #8
 80172b8:	bd70      	pop	{r4, r5, r6, pc}

080172ba <_ZN8touchgfx6muldivElll>:
 80172ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80172bc:	4606      	mov	r6, r0
 80172be:	ab01      	add	r3, sp, #4
 80172c0:	460d      	mov	r5, r1
 80172c2:	4614      	mov	r4, r2
 80172c4:	f7ff ffda 	bl	801727c <_ZN8touchgfx6muldivElllRl>
 80172c8:	2e00      	cmp	r6, #0
 80172ca:	db20      	blt.n	801730e <_ZN8touchgfx6muldivElll+0x54>
 80172cc:	bf14      	ite	ne
 80172ce:	2301      	movne	r3, #1
 80172d0:	2300      	moveq	r3, #0
 80172d2:	2d00      	cmp	r5, #0
 80172d4:	db1e      	blt.n	8017314 <_ZN8touchgfx6muldivElll+0x5a>
 80172d6:	bf14      	ite	ne
 80172d8:	2201      	movne	r2, #1
 80172da:	2200      	moveq	r2, #0
 80172dc:	2c00      	cmp	r4, #0
 80172de:	fb03 f202 	mul.w	r2, r3, r2
 80172e2:	db1a      	blt.n	801731a <_ZN8touchgfx6muldivElll+0x60>
 80172e4:	bf14      	ite	ne
 80172e6:	2301      	movne	r3, #1
 80172e8:	2300      	moveq	r3, #0
 80172ea:	4353      	muls	r3, r2
 80172ec:	2b01      	cmp	r3, #1
 80172ee:	d117      	bne.n	8017320 <_ZN8touchgfx6muldivElll+0x66>
 80172f0:	9b01      	ldr	r3, [sp, #4]
 80172f2:	2c00      	cmp	r4, #0
 80172f4:	bfb8      	it	lt
 80172f6:	4264      	neglt	r4, r4
 80172f8:	2b00      	cmp	r3, #0
 80172fa:	f104 0401 	add.w	r4, r4, #1
 80172fe:	bfb8      	it	lt
 8017300:	425b      	neglt	r3, r3
 8017302:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017306:	db00      	blt.n	801730a <_ZN8touchgfx6muldivElll+0x50>
 8017308:	3001      	adds	r0, #1
 801730a:	b002      	add	sp, #8
 801730c:	bd70      	pop	{r4, r5, r6, pc}
 801730e:	f04f 33ff 	mov.w	r3, #4294967295
 8017312:	e7de      	b.n	80172d2 <_ZN8touchgfx6muldivElll+0x18>
 8017314:	f04f 32ff 	mov.w	r2, #4294967295
 8017318:	e7e0      	b.n	80172dc <_ZN8touchgfx6muldivElll+0x22>
 801731a:	f04f 33ff 	mov.w	r3, #4294967295
 801731e:	e7e4      	b.n	80172ea <_ZN8touchgfx6muldivElll+0x30>
 8017320:	3301      	adds	r3, #1
 8017322:	d1f2      	bne.n	801730a <_ZN8touchgfx6muldivElll+0x50>
 8017324:	9b01      	ldr	r3, [sp, #4]
 8017326:	2c00      	cmp	r4, #0
 8017328:	bfb8      	it	lt
 801732a:	4264      	neglt	r4, r4
 801732c:	2b00      	cmp	r3, #0
 801732e:	bfb8      	it	lt
 8017330:	425b      	neglt	r3, r3
 8017332:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017336:	bfc8      	it	gt
 8017338:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801733c:	e7e5      	b.n	801730a <_ZN8touchgfx6muldivElll+0x50>

0801733e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801733e:	2000      	movs	r0, #0
 8017340:	4770      	bx	lr

08017342 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017342:	2001      	movs	r0, #1
 8017344:	4770      	bx	lr

08017346 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017346:	2002      	movs	r0, #2
 8017348:	4770      	bx	lr

0801734a <_ZN8touchgfx6ScreenD1Ev>:
 801734a:	4770      	bx	lr

0801734c <_ZN8touchgfx12GestureEventD1Ev>:
 801734c:	4770      	bx	lr

0801734e <_ZN8touchgfx9DragEventD1Ev>:
 801734e:	4770      	bx	lr

08017350 <_ZN8touchgfx10ClickEventD1Ev>:
 8017350:	4770      	bx	lr

08017352 <_ZN8touchgfx10ClickEventD0Ev>:
 8017352:	b510      	push	{r4, lr}
 8017354:	210c      	movs	r1, #12
 8017356:	4604      	mov	r4, r0
 8017358:	f012 fd51 	bl	8029dfe <_ZdlPvj>
 801735c:	4620      	mov	r0, r4
 801735e:	bd10      	pop	{r4, pc}

08017360 <_ZN8touchgfx9DragEventD0Ev>:
 8017360:	b510      	push	{r4, lr}
 8017362:	2110      	movs	r1, #16
 8017364:	4604      	mov	r4, r0
 8017366:	f012 fd4a 	bl	8029dfe <_ZdlPvj>
 801736a:	4620      	mov	r0, r4
 801736c:	bd10      	pop	{r4, pc}

0801736e <_ZN8touchgfx12GestureEventD0Ev>:
 801736e:	b510      	push	{r4, lr}
 8017370:	210c      	movs	r1, #12
 8017372:	4604      	mov	r4, r0
 8017374:	f012 fd43 	bl	8029dfe <_ZdlPvj>
 8017378:	4620      	mov	r0, r4
 801737a:	bd10      	pop	{r4, pc}

0801737c <_ZN8touchgfx6ScreenD0Ev>:
 801737c:	b510      	push	{r4, lr}
 801737e:	213c      	movs	r1, #60	; 0x3c
 8017380:	4604      	mov	r4, r0
 8017382:	f012 fd3c 	bl	8029dfe <_ZdlPvj>
 8017386:	4620      	mov	r0, r4
 8017388:	bd10      	pop	{r4, pc}
	...

0801738c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801738c:	b530      	push	{r4, r5, lr}
 801738e:	460d      	mov	r5, r1
 8017390:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017392:	b087      	sub	sp, #28
 8017394:	4604      	mov	r4, r0
 8017396:	b301      	cbz	r1, 80173da <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017398:	a801      	add	r0, sp, #4
 801739a:	f7ff fe3d 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801739e:	892a      	ldrh	r2, [r5, #8]
 80173a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80173a4:	7928      	ldrb	r0, [r5, #4]
 80173a6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80173aa:	f88d 0010 	strb.w	r0, [sp, #16]
 80173ae:	1ad2      	subs	r2, r2, r3
 80173b0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80173b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80173b4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80173b8:	441a      	add	r2, r3
 80173ba:	896b      	ldrh	r3, [r5, #10]
 80173bc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80173c0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80173c4:	1b5b      	subs	r3, r3, r5
 80173c6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80173c8:	442b      	add	r3, r5
 80173ca:	4d05      	ldr	r5, [pc, #20]	; (80173e0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80173cc:	9503      	str	r5, [sp, #12]
 80173ce:	f8ad 3016 	strh.w	r3, [sp, #22]
 80173d2:	6803      	ldr	r3, [r0, #0]
 80173d4:	a903      	add	r1, sp, #12
 80173d6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80173d8:	4798      	blx	r3
 80173da:	b007      	add	sp, #28
 80173dc:	bd30      	pop	{r4, r5, pc}
 80173de:	bf00      	nop
 80173e0:	0802f51c 	.word	0x0802f51c

080173e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80173e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80173e8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80173ea:	b08a      	sub	sp, #40	; 0x28
 80173ec:	4604      	mov	r4, r0
 80173ee:	460d      	mov	r5, r1
 80173f0:	b113      	cbz	r3, 80173f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80173f2:	790b      	ldrb	r3, [r1, #4]
 80173f4:	2b00      	cmp	r3, #0
 80173f6:	d044      	beq.n	8017482 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80173f8:	f104 0804 	add.w	r8, r4, #4
 80173fc:	4641      	mov	r1, r8
 80173fe:	a803      	add	r0, sp, #12
 8017400:	f7ff fe0a 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017404:	792b      	ldrb	r3, [r5, #4]
 8017406:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801740a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801740e:	b983      	cbnz	r3, 8017432 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017410:	892a      	ldrh	r2, [r5, #8]
 8017412:	88e9      	ldrh	r1, [r5, #6]
 8017414:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017418:	1b92      	subs	r2, r2, r6
 801741a:	1bc9      	subs	r1, r1, r7
 801741c:	9301      	str	r3, [sp, #4]
 801741e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017422:	9300      	str	r3, [sp, #0]
 8017424:	b212      	sxth	r2, r2
 8017426:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801742a:	b209      	sxth	r1, r1
 801742c:	4640      	mov	r0, r8
 801742e:	f7f9 fa79 	bl	8010924 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017432:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017434:	b329      	cbz	r1, 8017482 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017436:	a805      	add	r0, sp, #20
 8017438:	f7ff fdee 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801743c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017440:	792b      	ldrb	r3, [r5, #4]
 8017442:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017444:	f88d 3020 	strb.w	r3, [sp, #32]
 8017448:	1abf      	subs	r7, r7, r2
 801744a:	88ea      	ldrh	r2, [r5, #6]
 801744c:	4417      	add	r7, r2
 801744e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017450:	4417      	add	r7, r2
 8017452:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017456:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801745a:	1ab6      	subs	r6, r6, r2
 801745c:	892a      	ldrh	r2, [r5, #8]
 801745e:	4416      	add	r6, r2
 8017460:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017462:	4416      	add	r6, r2
 8017464:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017468:	4a07      	ldr	r2, [pc, #28]	; (8017488 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801746a:	9207      	str	r2, [sp, #28]
 801746c:	2600      	movs	r6, #0
 801746e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017472:	6803      	ldr	r3, [r0, #0]
 8017474:	a907      	add	r1, sp, #28
 8017476:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017478:	4798      	blx	r3
 801747a:	792b      	ldrb	r3, [r5, #4]
 801747c:	b10b      	cbz	r3, 8017482 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801747e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017482:	b00a      	add	sp, #40	; 0x28
 8017484:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017488:	0802f4f4 	.word	0x0802f4f4

0801748c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801748c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017490:	460c      	mov	r4, r1
 8017492:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017494:	b088      	sub	sp, #32
 8017496:	4605      	mov	r5, r0
 8017498:	2900      	cmp	r1, #0
 801749a:	d06d      	beq.n	8017578 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801749c:	4668      	mov	r0, sp
 801749e:	f7ff fdbb 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80174a2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80174a4:	88e3      	ldrh	r3, [r4, #6]
 80174a6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80174aa:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80174ae:	440b      	add	r3, r1
 80174b0:	b21b      	sxth	r3, r3
 80174b2:	4543      	cmp	r3, r8
 80174b4:	db31      	blt.n	801751a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174b6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80174ba:	44c4      	add	ip, r8
 80174bc:	fa0f fc8c 	sxth.w	ip, ip
 80174c0:	4563      	cmp	r3, ip
 80174c2:	da2a      	bge.n	801751a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174c4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80174c6:	8926      	ldrh	r6, [r4, #8]
 80174c8:	4416      	add	r6, r2
 80174ca:	b236      	sxth	r6, r6
 80174cc:	42be      	cmp	r6, r7
 80174ce:	db24      	blt.n	801751a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174d0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80174d4:	4438      	add	r0, r7
 80174d6:	b200      	sxth	r0, r0
 80174d8:	4286      	cmp	r6, r0
 80174da:	da1e      	bge.n	801751a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174dc:	8963      	ldrh	r3, [r4, #10]
 80174de:	4419      	add	r1, r3
 80174e0:	b209      	sxth	r1, r1
 80174e2:	4541      	cmp	r1, r8
 80174e4:	db08      	blt.n	80174f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80174e6:	4561      	cmp	r1, ip
 80174e8:	da06      	bge.n	80174f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80174ea:	89a3      	ldrh	r3, [r4, #12]
 80174ec:	441a      	add	r2, r3
 80174ee:	b212      	sxth	r2, r2
 80174f0:	42ba      	cmp	r2, r7
 80174f2:	db01      	blt.n	80174f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80174f4:	4282      	cmp	r2, r0
 80174f6:	db10      	blt.n	801751a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80174f8:	4b21      	ldr	r3, [pc, #132]	; (8017580 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80174fa:	9304      	str	r3, [sp, #16]
 80174fc:	2302      	movs	r3, #2
 80174fe:	f88d 3014 	strb.w	r3, [sp, #20]
 8017502:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017504:	2300      	movs	r3, #0
 8017506:	f8ad 3016 	strh.w	r3, [sp, #22]
 801750a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801750e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017512:	6803      	ldr	r3, [r0, #0]
 8017514:	a904      	add	r1, sp, #16
 8017516:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017518:	4798      	blx	r3
 801751a:	1d29      	adds	r1, r5, #4
 801751c:	a802      	add	r0, sp, #8
 801751e:	f7ff fd7b 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017522:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017526:	88e0      	ldrh	r0, [r4, #6]
 8017528:	7921      	ldrb	r1, [r4, #4]
 801752a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801752e:	8922      	ldrh	r2, [r4, #8]
 8017530:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017532:	f88d 1014 	strb.w	r1, [sp, #20]
 8017536:	eba3 0808 	sub.w	r8, r3, r8
 801753a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801753e:	1bdf      	subs	r7, r3, r7
 8017540:	b2bb      	uxth	r3, r7
 8017542:	fa1f f888 	uxth.w	r8, r8
 8017546:	8967      	ldrh	r7, [r4, #10]
 8017548:	89a4      	ldrh	r4, [r4, #12]
 801754a:	4440      	add	r0, r8
 801754c:	4460      	add	r0, ip
 801754e:	441a      	add	r2, r3
 8017550:	44b8      	add	r8, r7
 8017552:	4423      	add	r3, r4
 8017554:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017558:	4433      	add	r3, r6
 801755a:	4432      	add	r2, r6
 801755c:	44e0      	add	r8, ip
 801755e:	4c09      	ldr	r4, [pc, #36]	; (8017584 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017560:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017562:	9404      	str	r4, [sp, #16]
 8017564:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017568:	f8ad 801a 	strh.w	r8, [sp, #26]
 801756c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017570:	6803      	ldr	r3, [r0, #0]
 8017572:	a904      	add	r1, sp, #16
 8017574:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017576:	4798      	blx	r3
 8017578:	b008      	add	sp, #32
 801757a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801757e:	bf00      	nop
 8017580:	0802f4f4 	.word	0x0802f4f4
 8017584:	0802f508 	.word	0x0802f508

08017588 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017588:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801758a:	4604      	mov	r4, r0
 801758c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017590:	3201      	adds	r2, #1
 8017592:	d112      	bne.n	80175ba <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017594:	6803      	ldr	r3, [r0, #0]
 8017596:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801759a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801759e:	f8ad 1004 	strh.w	r1, [sp, #4]
 80175a2:	2500      	movs	r5, #0
 80175a4:	9500      	str	r5, [sp, #0]
 80175a6:	466d      	mov	r5, sp
 80175a8:	4629      	mov	r1, r5
 80175aa:	f8ad 2006 	strh.w	r2, [sp, #6]
 80175ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175b0:	4798      	blx	r3
 80175b2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80175b6:	e884 0003 	stmia.w	r4, {r0, r1}
 80175ba:	4620      	mov	r0, r4
 80175bc:	b003      	add	sp, #12
 80175be:	bd30      	pop	{r4, r5, pc}

080175c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80175c0:	b513      	push	{r0, r1, r4, lr}
 80175c2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80175c6:	3301      	adds	r3, #1
 80175c8:	4604      	mov	r4, r0
 80175ca:	d109      	bne.n	80175e0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80175cc:	4601      	mov	r1, r0
 80175ce:	4668      	mov	r0, sp
 80175d0:	f7ff fd22 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80175d4:	f8bd 3000 	ldrh.w	r3, [sp]
 80175d8:	8423      	strh	r3, [r4, #32]
 80175da:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80175de:	8463      	strh	r3, [r4, #34]	; 0x22
 80175e0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80175e4:	b002      	add	sp, #8
 80175e6:	bd10      	pop	{r4, pc}

080175e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80175e8:	b513      	push	{r0, r1, r4, lr}
 80175ea:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80175ee:	3301      	adds	r3, #1
 80175f0:	4604      	mov	r4, r0
 80175f2:	d109      	bne.n	8017608 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80175f4:	4601      	mov	r1, r0
 80175f6:	4668      	mov	r0, sp
 80175f8:	f7ff fd0e 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80175fc:	f8bd 3000 	ldrh.w	r3, [sp]
 8017600:	8423      	strh	r3, [r4, #32]
 8017602:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017606:	8463      	strh	r3, [r4, #34]	; 0x22
 8017608:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801760c:	b002      	add	sp, #8
 801760e:	bd10      	pop	{r4, pc}

08017610 <_ZN8touchgfx6ScreenC1Ev>:
 8017610:	b570      	push	{r4, r5, r6, lr}
 8017612:	4605      	mov	r5, r0
 8017614:	4b16      	ldr	r3, [pc, #88]	; (8017670 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017616:	f845 3b04 	str.w	r3, [r5], #4
 801761a:	2300      	movs	r3, #0
 801761c:	8103      	strh	r3, [r0, #8]
 801761e:	8143      	strh	r3, [r0, #10]
 8017620:	8183      	strh	r3, [r0, #12]
 8017622:	81c3      	strh	r3, [r0, #14]
 8017624:	8203      	strh	r3, [r0, #16]
 8017626:	8243      	strh	r3, [r0, #18]
 8017628:	8283      	strh	r3, [r0, #20]
 801762a:	82c3      	strh	r3, [r0, #22]
 801762c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017630:	6203      	str	r3, [r0, #32]
 8017632:	8483      	strh	r3, [r0, #36]	; 0x24
 8017634:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017636:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801763a:	4a0e      	ldr	r2, [pc, #56]	; (8017674 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801763c:	6343      	str	r3, [r0, #52]	; 0x34
 801763e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017642:	4b0d      	ldr	r3, [pc, #52]	; (8017678 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017644:	6042      	str	r2, [r0, #4]
 8017646:	f9b3 6000 	ldrsh.w	r6, [r3]
 801764a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801764c:	4a0b      	ldr	r2, [pc, #44]	; (801767c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801764e:	4604      	mov	r4, r0
 8017650:	2101      	movs	r1, #1
 8017652:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017656:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801765a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801765e:	4628      	mov	r0, r5
 8017660:	4798      	blx	r3
 8017662:	6863      	ldr	r3, [r4, #4]
 8017664:	4628      	mov	r0, r5
 8017666:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017668:	4631      	mov	r1, r6
 801766a:	4798      	blx	r3
 801766c:	4620      	mov	r0, r4
 801766e:	bd70      	pop	{r4, r5, r6, pc}
 8017670:	0802f530 	.word	0x0802f530
 8017674:	0802ed94 	.word	0x0802ed94
 8017678:	20012daa 	.word	0x20012daa
 801767c:	20012da8 	.word	0x20012da8

08017680 <_ZN8touchgfx6Screen4drawEv>:
 8017680:	b507      	push	{r0, r1, r2, lr}
 8017682:	4b09      	ldr	r3, [pc, #36]	; (80176a8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017684:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017688:	4b08      	ldr	r3, [pc, #32]	; (80176ac <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801768a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801768e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017692:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017696:	6803      	ldr	r3, [r0, #0]
 8017698:	2100      	movs	r1, #0
 801769a:	9100      	str	r1, [sp, #0]
 801769c:	689b      	ldr	r3, [r3, #8]
 801769e:	4669      	mov	r1, sp
 80176a0:	4798      	blx	r3
 80176a2:	b003      	add	sp, #12
 80176a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80176a8:	20012da8 	.word	0x20012da8
 80176ac:	20012daa 	.word	0x20012daa

080176b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80176b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176b4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80176b8:	2b00      	cmp	r3, #0
 80176ba:	b089      	sub	sp, #36	; 0x24
 80176bc:	4680      	mov	r8, r0
 80176be:	460c      	mov	r4, r1
 80176c0:	4615      	mov	r5, r2
 80176c2:	dd0e      	ble.n	80176e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80176c4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80176c8:	2b00      	cmp	r3, #0
 80176ca:	dd0a      	ble.n	80176e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80176cc:	4628      	mov	r0, r5
 80176ce:	f7ff ff5b 	bl	8017588 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80176d2:	4621      	mov	r1, r4
 80176d4:	f7fe fa3d 	bl	8015b52 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80176d8:	69eb      	ldr	r3, [r5, #28]
 80176da:	b928      	cbnz	r0, 80176e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80176dc:	461d      	mov	r5, r3
 80176de:	2b00      	cmp	r3, #0
 80176e0:	d1f4      	bne.n	80176cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80176e2:	b009      	add	sp, #36	; 0x24
 80176e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176e8:	ae04      	add	r6, sp, #16
 80176ea:	2b00      	cmp	r3, #0
 80176ec:	f000 80b5 	beq.w	801785a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80176f0:	682b      	ldr	r3, [r5, #0]
 80176f2:	4629      	mov	r1, r5
 80176f4:	68db      	ldr	r3, [r3, #12]
 80176f6:	a802      	add	r0, sp, #8
 80176f8:	4798      	blx	r3
 80176fa:	4628      	mov	r0, r5
 80176fc:	f7ff ff60 	bl	80175c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017700:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017704:	4407      	add	r7, r0
 8017706:	4628      	mov	r0, r5
 8017708:	f7ff ff6e 	bl	80175e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801770c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017710:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017714:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017718:	4418      	add	r0, r3
 801771a:	4621      	mov	r1, r4
 801771c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017720:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017724:	b23f      	sxth	r7, r7
 8017726:	4630      	mov	r0, r6
 8017728:	f8ad 3016 	strh.w	r3, [sp, #22]
 801772c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017730:	f7f9 f9dc 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8017734:	4628      	mov	r0, r5
 8017736:	f7ff ff27 	bl	8017588 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801773a:	4602      	mov	r2, r0
 801773c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017740:	ab06      	add	r3, sp, #24
 8017742:	e883 0003 	stmia.w	r3, {r0, r1}
 8017746:	4611      	mov	r1, r2
 8017748:	4618      	mov	r0, r3
 801774a:	f7f9 f9cf 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 801774e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017752:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017756:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801775a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801775e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017762:	4299      	cmp	r1, r3
 8017764:	d10b      	bne.n	801777e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017766:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801776a:	4552      	cmp	r2, sl
 801776c:	d107      	bne.n	801777e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801776e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017772:	455a      	cmp	r2, fp
 8017774:	d103      	bne.n	801777e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017776:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801777a:	454a      	cmp	r2, r9
 801777c:	d06d      	beq.n	801785a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801777e:	f1bb 0f00 	cmp.w	fp, #0
 8017782:	dd65      	ble.n	8017850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017784:	f1b9 0f00 	cmp.w	r9, #0
 8017788:	dd62      	ble.n	8017850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801778a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801778e:	fa1f f08a 	uxth.w	r0, sl
 8017792:	4552      	cmp	r2, sl
 8017794:	9000      	str	r0, [sp, #0]
 8017796:	da12      	bge.n	80177be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017798:	9301      	str	r3, [sp, #4]
 801779a:	9b00      	ldr	r3, [sp, #0]
 801779c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80177a0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80177a4:	1a9a      	subs	r2, r3, r2
 80177a6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80177aa:	f8ad 0014 	strh.w	r0, [sp, #20]
 80177ae:	f8ad 2016 	strh.w	r2, [sp, #22]
 80177b2:	69ea      	ldr	r2, [r5, #28]
 80177b4:	4631      	mov	r1, r6
 80177b6:	4640      	mov	r0, r8
 80177b8:	f7ff ff7a 	bl	80176b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80177bc:	9b01      	ldr	r3, [sp, #4]
 80177be:	f9b4 2000 	ldrsh.w	r2, [r4]
 80177c2:	429a      	cmp	r2, r3
 80177c4:	b29f      	uxth	r7, r3
 80177c6:	da0d      	bge.n	80177e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80177c8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80177cc:	1aba      	subs	r2, r7, r2
 80177ce:	f8ad a012 	strh.w	sl, [sp, #18]
 80177d2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80177d6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80177da:	69ea      	ldr	r2, [r5, #28]
 80177dc:	4631      	mov	r1, r6
 80177de:	4640      	mov	r0, r8
 80177e0:	f7ff ff66 	bl	80176b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80177e4:	8822      	ldrh	r2, [r4, #0]
 80177e6:	88a3      	ldrh	r3, [r4, #4]
 80177e8:	445f      	add	r7, fp
 80177ea:	4413      	add	r3, r2
 80177ec:	b29b      	uxth	r3, r3
 80177ee:	b2bf      	uxth	r7, r7
 80177f0:	b23a      	sxth	r2, r7
 80177f2:	b219      	sxth	r1, r3
 80177f4:	4291      	cmp	r1, r2
 80177f6:	dd0d      	ble.n	8017814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80177f8:	1bdb      	subs	r3, r3, r7
 80177fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80177fe:	f8ad a012 	strh.w	sl, [sp, #18]
 8017802:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017806:	f8ad 9016 	strh.w	r9, [sp, #22]
 801780a:	69ea      	ldr	r2, [r5, #28]
 801780c:	4631      	mov	r1, r6
 801780e:	4640      	mov	r0, r8
 8017810:	f7ff ff4e 	bl	80176b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017814:	88e2      	ldrh	r2, [r4, #6]
 8017816:	8863      	ldrh	r3, [r4, #2]
 8017818:	4413      	add	r3, r2
 801781a:	9a00      	ldr	r2, [sp, #0]
 801781c:	444a      	add	r2, r9
 801781e:	b29b      	uxth	r3, r3
 8017820:	fa1f f982 	uxth.w	r9, r2
 8017824:	fa0f f289 	sxth.w	r2, r9
 8017828:	b219      	sxth	r1, r3
 801782a:	428a      	cmp	r2, r1
 801782c:	da15      	bge.n	801785a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801782e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017832:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017836:	f8ad 1014 	strh.w	r1, [sp, #20]
 801783a:	eba3 0309 	sub.w	r3, r3, r9
 801783e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017842:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017846:	f8ad 3016 	strh.w	r3, [sp, #22]
 801784a:	69ea      	ldr	r2, [r5, #28]
 801784c:	4631      	mov	r1, r6
 801784e:	e001      	b.n	8017854 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017850:	69ea      	ldr	r2, [r5, #28]
 8017852:	4621      	mov	r1, r4
 8017854:	4640      	mov	r0, r8
 8017856:	f7ff ff2b 	bl	80176b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801785a:	4628      	mov	r0, r5
 801785c:	f7ff fe94 	bl	8017588 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017860:	6861      	ldr	r1, [r4, #4]
 8017862:	4602      	mov	r2, r0
 8017864:	6820      	ldr	r0, [r4, #0]
 8017866:	4633      	mov	r3, r6
 8017868:	c303      	stmia	r3!, {r0, r1}
 801786a:	4611      	mov	r1, r2
 801786c:	4630      	mov	r0, r6
 801786e:	f7f9 f93d 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8017872:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017876:	2b00      	cmp	r3, #0
 8017878:	f77f af33 	ble.w	80176e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801787c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017880:	2b00      	cmp	r3, #0
 8017882:	f77f af2e 	ble.w	80176e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017886:	4628      	mov	r0, r5
 8017888:	f7ff fe9a 	bl	80175c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801788c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017890:	1a18      	subs	r0, r3, r0
 8017892:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017896:	4628      	mov	r0, r5
 8017898:	f7ff fea6 	bl	80175e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801789c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80178a0:	1a18      	subs	r0, r3, r0
 80178a2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80178a6:	682b      	ldr	r3, [r5, #0]
 80178a8:	4631      	mov	r1, r6
 80178aa:	689b      	ldr	r3, [r3, #8]
 80178ac:	4628      	mov	r0, r5
 80178ae:	4798      	blx	r3
 80178b0:	e717      	b.n	80176e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080178b2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80178b2:	b570      	push	{r4, r5, r6, lr}
 80178b4:	460c      	mov	r4, r1
 80178b6:	b086      	sub	sp, #24
 80178b8:	1d06      	adds	r6, r0, #4
 80178ba:	2300      	movs	r3, #0
 80178bc:	4631      	mov	r1, r6
 80178be:	4605      	mov	r5, r0
 80178c0:	a802      	add	r0, sp, #8
 80178c2:	9301      	str	r3, [sp, #4]
 80178c4:	f7ff fba8 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80178c8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80178cc:	8822      	ldrh	r2, [r4, #0]
 80178ce:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80178d2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80178d6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80178da:	1ad2      	subs	r2, r2, r3
 80178dc:	8863      	ldrh	r3, [r4, #2]
 80178de:	f8ad 2010 	strh.w	r2, [sp, #16]
 80178e2:	1a5b      	subs	r3, r3, r1
 80178e4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80178e8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80178ec:	aa01      	add	r2, sp, #4
 80178ee:	a904      	add	r1, sp, #16
 80178f0:	4630      	mov	r0, r6
 80178f2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80178f6:	f7f9 f9d1 	bl	8010c9c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80178fa:	9a01      	ldr	r2, [sp, #4]
 80178fc:	b11a      	cbz	r2, 8017906 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80178fe:	4621      	mov	r1, r4
 8017900:	4628      	mov	r0, r5
 8017902:	f7ff fed5 	bl	80176b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017906:	b006      	add	sp, #24
 8017908:	bd70      	pop	{r4, r5, r6, pc}

0801790a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801790a:	b530      	push	{r4, r5, lr}
 801790c:	4602      	mov	r2, r0
 801790e:	4604      	mov	r4, r0
 8017910:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017914:	b085      	sub	sp, #20
 8017916:	460d      	mov	r5, r1
 8017918:	6851      	ldr	r1, [r2, #4]
 801791a:	466b      	mov	r3, sp
 801791c:	c303      	stmia	r3!, {r0, r1}
 801791e:	4629      	mov	r1, r5
 8017920:	4668      	mov	r0, sp
 8017922:	f7f9 f8e3 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 8017926:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801792a:	b12b      	cbz	r3, 8017938 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801792c:	4669      	mov	r1, sp
 801792e:	4620      	mov	r0, r4
 8017930:	f7ff ffbf 	bl	80178b2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017934:	b005      	add	sp, #20
 8017936:	bd30      	pop	{r4, r5, pc}
 8017938:	3404      	adds	r4, #4
 801793a:	4621      	mov	r1, r4
 801793c:	a802      	add	r0, sp, #8
 801793e:	f7ff fb6b 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017942:	f8bd 3000 	ldrh.w	r3, [sp]
 8017946:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801794a:	1a9b      	subs	r3, r3, r2
 801794c:	f8ad 3000 	strh.w	r3, [sp]
 8017950:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017954:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017958:	4669      	mov	r1, sp
 801795a:	1a9b      	subs	r3, r3, r2
 801795c:	4620      	mov	r0, r4
 801795e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017962:	f7f9 f962 	bl	8010c2a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017966:	e7e5      	b.n	8017934 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017968 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017968:	680a      	ldr	r2, [r1, #0]
 801796a:	460b      	mov	r3, r1
 801796c:	6992      	ldr	r2, [r2, #24]
 801796e:	1d01      	adds	r1, r0, #4
 8017970:	4618      	mov	r0, r3
 8017972:	4710      	bx	r2

08017974 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017974:	4298      	cmp	r0, r3
 8017976:	d200      	bcs.n	801797a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017978:	b913      	cbnz	r3, 8017980 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801797a:	440a      	add	r2, r1
 801797c:	b210      	sxth	r0, r2
 801797e:	4770      	bx	lr
 8017980:	ee07 0a90 	vmov	s15, r0
 8017984:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017988:	ee07 3a90 	vmov	s15, r3
 801798c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017990:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017994:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017998:	ee37 7a66 	vsub.f32	s14, s14, s13
 801799c:	ee07 2a90 	vmov	s15, r2
 80179a0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80179a4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80179a8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80179ac:	ee07 1a90 	vmov	s15, r1
 80179b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80179b8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80179bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80179c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80179c4:	bfcc      	ite	gt
 80179c6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80179ca:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80179ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80179d2:	ee17 3a90 	vmov	r3, s15
 80179d6:	b218      	sxth	r0, r3
 80179d8:	4770      	bx	lr

080179da <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80179da:	4298      	cmp	r0, r3
 80179dc:	d200      	bcs.n	80179e0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80179de:	b913      	cbnz	r3, 80179e6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80179e0:	440a      	add	r2, r1
 80179e2:	b210      	sxth	r0, r2
 80179e4:	4770      	bx	lr
 80179e6:	ee07 2a90 	vmov	s15, r2
 80179ea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80179ee:	ee07 0a90 	vmov	s15, r0
 80179f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80179f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80179fa:	ee07 3a10 	vmov	s14, r3
 80179fe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017a02:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017a06:	ee07 1a90 	vmov	s15, r1
 8017a0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a0e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017a12:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017a16:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017a1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017a1e:	bfcc      	ite	gt
 8017a20:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017a24:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017a28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017a2c:	ee17 3a90 	vmov	r3, s15
 8017a30:	b218      	sxth	r0, r3
 8017a32:	4770      	bx	lr

08017a34 <_ZN8touchgfx12TextProviderC1Ev>:
 8017a34:	b538      	push	{r3, r4, r5, lr}
 8017a36:	2500      	movs	r5, #0
 8017a38:	2302      	movs	r3, #2
 8017a3a:	4604      	mov	r4, r0
 8017a3c:	e9c0 5500 	strd	r5, r5, [r0]
 8017a40:	7403      	strb	r3, [r0, #16]
 8017a42:	6145      	str	r5, [r0, #20]
 8017a44:	7605      	strb	r5, [r0, #24]
 8017a46:	83c5      	strh	r5, [r0, #30]
 8017a48:	8405      	strh	r5, [r0, #32]
 8017a4a:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017a4c:	8705      	strh	r5, [r0, #56]	; 0x38
 8017a4e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017a50:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017a54:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017a58:	220e      	movs	r2, #14
 8017a5a:	4629      	mov	r1, r5
 8017a5c:	304c      	adds	r0, #76	; 0x4c
 8017a5e:	f013 faba 	bl	802afd6 <memset>
 8017a62:	2301      	movs	r3, #1
 8017a64:	4620      	mov	r0, r4
 8017a66:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8017a6a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017a6e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017a72:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017a76:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8017a7a:	f7f1 faf3 	bl	8009064 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017a7e:	4620      	mov	r0, r4
 8017a80:	bd38      	pop	{r3, r4, r5, pc}

08017a82 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017a82:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017a84:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017a88:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8017a8a:	fab0 f080 	clz	r0, r0
 8017a8e:	0940      	lsrs	r0, r0, #5
 8017a90:	4770      	bx	lr

08017a92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017a92:	b530      	push	{r4, r5, lr}
 8017a94:	2500      	movs	r5, #0
 8017a96:	2401      	movs	r4, #1
 8017a98:	6843      	ldr	r3, [r0, #4]
 8017a9a:	b913      	cbnz	r3, 8017aa2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017a9c:	6803      	ldr	r3, [r0, #0]
 8017a9e:	b313      	cbz	r3, 8017ae6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017aa0:	6043      	str	r3, [r0, #4]
 8017aa2:	7e03      	ldrb	r3, [r0, #24]
 8017aa4:	b143      	cbz	r3, 8017ab8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017aa6:	6943      	ldr	r3, [r0, #20]
 8017aa8:	b12b      	cbz	r3, 8017ab6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017aaa:	881a      	ldrh	r2, [r3, #0]
 8017aac:	b11a      	cbz	r2, 8017ab6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017aae:	1c9a      	adds	r2, r3, #2
 8017ab0:	6142      	str	r2, [r0, #20]
 8017ab2:	8818      	ldrh	r0, [r3, #0]
 8017ab4:	bd30      	pop	{r4, r5, pc}
 8017ab6:	7605      	strb	r5, [r0, #24]
 8017ab8:	6843      	ldr	r3, [r0, #4]
 8017aba:	8819      	ldrh	r1, [r3, #0]
 8017abc:	b199      	cbz	r1, 8017ae6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017abe:	1c9a      	adds	r2, r3, #2
 8017ac0:	2902      	cmp	r1, #2
 8017ac2:	6042      	str	r2, [r0, #4]
 8017ac4:	d1f5      	bne.n	8017ab2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017ac6:	7c03      	ldrb	r3, [r0, #16]
 8017ac8:	2b01      	cmp	r3, #1
 8017aca:	d8e5      	bhi.n	8017a98 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017acc:	1c5a      	adds	r2, r3, #1
 8017ace:	3302      	adds	r3, #2
 8017ad0:	7402      	strb	r2, [r0, #16]
 8017ad2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017ad6:	6143      	str	r3, [r0, #20]
 8017ad8:	2b00      	cmp	r3, #0
 8017ada:	d0dd      	beq.n	8017a98 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017adc:	881b      	ldrh	r3, [r3, #0]
 8017ade:	2b00      	cmp	r3, #0
 8017ae0:	d0da      	beq.n	8017a98 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017ae2:	7604      	strb	r4, [r0, #24]
 8017ae4:	e7d8      	b.n	8017a98 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017ae6:	2000      	movs	r0, #0
 8017ae8:	e7e4      	b.n	8017ab4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017aea:	b430      	push	{r4, r5}
 8017aec:	6001      	str	r1, [r0, #0]
 8017aee:	2100      	movs	r1, #0
 8017af0:	6041      	str	r1, [r0, #4]
 8017af2:	6815      	ldr	r5, [r2, #0]
 8017af4:	6085      	str	r5, [r0, #8]
 8017af6:	6852      	ldr	r2, [r2, #4]
 8017af8:	6443      	str	r3, [r0, #68]	; 0x44
 8017afa:	9b02      	ldr	r3, [sp, #8]
 8017afc:	60c2      	str	r2, [r0, #12]
 8017afe:	7401      	strb	r1, [r0, #16]
 8017b00:	6141      	str	r1, [r0, #20]
 8017b02:	7601      	strb	r1, [r0, #24]
 8017b04:	8701      	strh	r1, [r0, #56]	; 0x38
 8017b06:	8401      	strh	r1, [r0, #32]
 8017b08:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8017b0c:	6483      	str	r3, [r0, #72]	; 0x48
 8017b0e:	bc30      	pop	{r4, r5}
 8017b10:	f7f1 baa8 	b.w	8009064 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017b14 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017b14:	b408      	push	{r3}
 8017b16:	b510      	push	{r4, lr}
 8017b18:	b085      	sub	sp, #20
 8017b1a:	ac07      	add	r4, sp, #28
 8017b1c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017b20:	9300      	str	r3, [sp, #0]
 8017b22:	4613      	mov	r3, r2
 8017b24:	4622      	mov	r2, r4
 8017b26:	9403      	str	r4, [sp, #12]
 8017b28:	f7ff ffdf 	bl	8017aea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017b2c:	b005      	add	sp, #20
 8017b2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017b32:	b001      	add	sp, #4
 8017b34:	4770      	bx	lr

08017b36 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017b36:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b38:	4605      	mov	r5, r0
 8017b3a:	4608      	mov	r0, r1
 8017b3c:	b1e9      	cbz	r1, 8017b7a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017b3e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017b42:	460b      	mov	r3, r1
 8017b44:	f101 0708 	add.w	r7, r1, #8
 8017b48:	4622      	mov	r2, r4
 8017b4a:	6818      	ldr	r0, [r3, #0]
 8017b4c:	6859      	ldr	r1, [r3, #4]
 8017b4e:	4626      	mov	r6, r4
 8017b50:	c603      	stmia	r6!, {r0, r1}
 8017b52:	3308      	adds	r3, #8
 8017b54:	42bb      	cmp	r3, r7
 8017b56:	4634      	mov	r4, r6
 8017b58:	d1f7      	bne.n	8017b4a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017b5a:	6818      	ldr	r0, [r3, #0]
 8017b5c:	6030      	str	r0, [r6, #0]
 8017b5e:	889b      	ldrh	r3, [r3, #4]
 8017b60:	80b3      	strh	r3, [r6, #4]
 8017b62:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017b66:	015b      	lsls	r3, r3, #5
 8017b68:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017b6c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017b70:	430b      	orrs	r3, r1
 8017b72:	425b      	negs	r3, r3
 8017b74:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017b78:	4610      	mov	r0, r2
 8017b7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017b7c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017b7c:	b538      	push	{r3, r4, r5, lr}
 8017b7e:	460c      	mov	r4, r1
 8017b80:	6811      	ldr	r1, [r2, #0]
 8017b82:	4610      	mov	r0, r2
 8017b84:	68cd      	ldr	r5, [r1, #12]
 8017b86:	4619      	mov	r1, r3
 8017b88:	47a8      	blx	r5
 8017b8a:	2800      	cmp	r0, #0
 8017b8c:	bf08      	it	eq
 8017b8e:	4620      	moveq	r0, r4
 8017b90:	bd38      	pop	{r3, r4, r5, pc}
	...

08017b94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017b94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017b96:	4604      	mov	r4, r0
 8017b98:	4615      	mov	r5, r2
 8017b9a:	4608      	mov	r0, r1
 8017b9c:	b93a      	cbnz	r2, 8017bae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017b9e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017ba2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017ba6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017baa:	4628      	mov	r0, r5
 8017bac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017bae:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017bb2:	8893      	ldrh	r3, [r2, #4]
 8017bb4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017bb8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017bbc:	79ee      	ldrb	r6, [r5, #7]
 8017bbe:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017bc2:	4316      	orrs	r6, r2
 8017bc4:	19da      	adds	r2, r3, r7
 8017bc6:	b291      	uxth	r1, r2
 8017bc8:	291d      	cmp	r1, #29
 8017bca:	b2b7      	uxth	r7, r6
 8017bcc:	d87a      	bhi.n	8017cc4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017bce:	2201      	movs	r2, #1
 8017bd0:	408a      	lsls	r2, r1
 8017bd2:	4975      	ldr	r1, [pc, #468]	; (8017da8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017bd4:	420a      	tst	r2, r1
 8017bd6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017bda:	d12d      	bne.n	8017c38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017bdc:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017be0:	d070      	beq.n	8017cc4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017be2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017be6:	462b      	mov	r3, r5
 8017be8:	f105 0e08 	add.w	lr, r5, #8
 8017bec:	4615      	mov	r5, r2
 8017bee:	6818      	ldr	r0, [r3, #0]
 8017bf0:	6859      	ldr	r1, [r3, #4]
 8017bf2:	4694      	mov	ip, r2
 8017bf4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017bf8:	3308      	adds	r3, #8
 8017bfa:	4573      	cmp	r3, lr
 8017bfc:	4662      	mov	r2, ip
 8017bfe:	d1f6      	bne.n	8017bee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017c00:	6818      	ldr	r0, [r3, #0]
 8017c02:	f8cc 0000 	str.w	r0, [ip]
 8017c06:	889b      	ldrh	r3, [r3, #4]
 8017c08:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017c0c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017c10:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017c14:	b2b3      	uxth	r3, r6
 8017c16:	1aca      	subs	r2, r1, r3
 8017c18:	b292      	uxth	r2, r2
 8017c1a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017c1e:	10d2      	asrs	r2, r2, #3
 8017c20:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017c24:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017c28:	4302      	orrs	r2, r0
 8017c2a:	1bcf      	subs	r7, r1, r7
 8017c2c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017c30:	1afb      	subs	r3, r7, r3
 8017c32:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017c36:	e7b8      	b.n	8017baa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017c38:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017c3a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017c3e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017c40:	f640 6333 	movw	r3, #3635	; 0xe33
 8017c44:	4299      	cmp	r1, r3
 8017c46:	d110      	bne.n	8017c6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017c48:	6803      	ldr	r3, [r0, #0]
 8017c4a:	68db      	ldr	r3, [r3, #12]
 8017c4c:	4798      	blx	r3
 8017c4e:	7b41      	ldrb	r1, [r0, #13]
 8017c50:	00cb      	lsls	r3, r1, #3
 8017c52:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017c56:	7a03      	ldrb	r3, [r0, #8]
 8017c58:	0648      	lsls	r0, r1, #25
 8017c5a:	ea43 0302 	orr.w	r3, r3, r2
 8017c5e:	bf44      	itt	mi
 8017c60:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017c64:	b21b      	sxthmi	r3, r3
 8017c66:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017c6a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017c6e:	443b      	add	r3, r7
 8017c70:	4433      	add	r3, r6
 8017c72:	b29b      	uxth	r3, r3
 8017c74:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017c78:	462a      	mov	r2, r5
 8017c7a:	f105 0c08 	add.w	ip, r5, #8
 8017c7e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017c82:	4635      	mov	r5, r6
 8017c84:	6810      	ldr	r0, [r2, #0]
 8017c86:	6851      	ldr	r1, [r2, #4]
 8017c88:	4637      	mov	r7, r6
 8017c8a:	c703      	stmia	r7!, {r0, r1}
 8017c8c:	3208      	adds	r2, #8
 8017c8e:	4562      	cmp	r2, ip
 8017c90:	463e      	mov	r6, r7
 8017c92:	d1f7      	bne.n	8017c84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017c94:	6810      	ldr	r0, [r2, #0]
 8017c96:	6038      	str	r0, [r7, #0]
 8017c98:	8892      	ldrh	r2, [r2, #4]
 8017c9a:	80ba      	strh	r2, [r7, #4]
 8017c9c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017ca0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017ca4:	10db      	asrs	r3, r3, #3
 8017ca6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017caa:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017cae:	4313      	orrs	r3, r2
 8017cb0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017cb4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017cb8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017cbc:	1a9b      	subs	r3, r3, r2
 8017cbe:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017cc2:	e772      	b.n	8017baa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017cc4:	f023 0204 	bic.w	r2, r3, #4
 8017cc8:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017ccc:	428a      	cmp	r2, r1
 8017cce:	d003      	beq.n	8017cd8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017cd0:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017cd4:	4293      	cmp	r3, r2
 8017cd6:	d120      	bne.n	8017d1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017cd8:	3b01      	subs	r3, #1
 8017cda:	4602      	mov	r2, r0
 8017cdc:	b29b      	uxth	r3, r3
 8017cde:	4629      	mov	r1, r5
 8017ce0:	4620      	mov	r0, r4
 8017ce2:	f7ff ff4b 	bl	8017b7c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017ce6:	7b41      	ldrb	r1, [r0, #13]
 8017ce8:	00cb      	lsls	r3, r1, #3
 8017cea:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017cee:	7a03      	ldrb	r3, [r0, #8]
 8017cf0:	0649      	lsls	r1, r1, #25
 8017cf2:	ea43 0302 	orr.w	r3, r3, r2
 8017cf6:	bf44      	itt	mi
 8017cf8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017cfc:	b21b      	sxthmi	r3, r3
 8017cfe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d02:	7b6b      	ldrb	r3, [r5, #13]
 8017d04:	7aaa      	ldrb	r2, [r5, #10]
 8017d06:	005b      	lsls	r3, r3, #1
 8017d08:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017d0c:	4313      	orrs	r3, r2
 8017d0e:	115a      	asrs	r2, r3, #5
 8017d10:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017d14:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017d18:	e036      	b.n	8017d88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017d1a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017d1e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017d22:	7a2a      	ldrb	r2, [r5, #8]
 8017d24:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017d28:	ea42 0201 	orr.w	r2, r2, r1
 8017d2c:	bf1c      	itt	ne
 8017d2e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017d32:	b212      	sxthne	r2, r2
 8017d34:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017d38:	f640 6109 	movw	r1, #3593	; 0xe09
 8017d3c:	f023 0210 	bic.w	r2, r3, #16
 8017d40:	428a      	cmp	r2, r1
 8017d42:	d003      	beq.n	8017d4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017d44:	f640 6213 	movw	r2, #3603	; 0xe13
 8017d48:	4293      	cmp	r3, r2
 8017d4a:	d12a      	bne.n	8017da2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017d4c:	7b6e      	ldrb	r6, [r5, #13]
 8017d4e:	0076      	lsls	r6, r6, #1
 8017d50:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017d54:	7aae      	ldrb	r6, [r5, #10]
 8017d56:	4316      	orrs	r6, r2
 8017d58:	f640 6213 	movw	r2, #3603	; 0xe13
 8017d5c:	4293      	cmp	r3, r2
 8017d5e:	bf18      	it	ne
 8017d60:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017d64:	4602      	mov	r2, r0
 8017d66:	bf14      	ite	ne
 8017d68:	b29b      	uxthne	r3, r3
 8017d6a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017d6e:	4629      	mov	r1, r5
 8017d70:	4620      	mov	r0, r4
 8017d72:	f7ff ff03 	bl	8017b7c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017d76:	7b43      	ldrb	r3, [r0, #13]
 8017d78:	7a82      	ldrb	r2, [r0, #10]
 8017d7a:	005b      	lsls	r3, r3, #1
 8017d7c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017d80:	4313      	orrs	r3, r2
 8017d82:	1af6      	subs	r6, r6, r3
 8017d84:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017d88:	7b69      	ldrb	r1, [r5, #13]
 8017d8a:	00cb      	lsls	r3, r1, #3
 8017d8c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d90:	7a2b      	ldrb	r3, [r5, #8]
 8017d92:	4313      	orrs	r3, r2
 8017d94:	064a      	lsls	r2, r1, #25
 8017d96:	bf44      	itt	mi
 8017d98:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d9c:	b21b      	sxthmi	r3, r3
 8017d9e:	1bdb      	subs	r3, r3, r7
 8017da0:	e747      	b.n	8017c32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017da2:	2300      	movs	r3, #0
 8017da4:	e7b6      	b.n	8017d14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017da6:	bf00      	nop
 8017da8:	3fc00079 	.word	0x3fc00079

08017dac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017dac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017db0:	4604      	mov	r4, r0
 8017db2:	b942      	cbnz	r2, 8017dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017db4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017db8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017dbc:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017dc0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017dc4:	e047      	b.n	8017e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017dc6:	7b51      	ldrb	r1, [r2, #13]
 8017dc8:	8893      	ldrh	r3, [r2, #4]
 8017dca:	010d      	lsls	r5, r1, #4
 8017dcc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017dd0:	79d5      	ldrb	r5, [r2, #7]
 8017dd2:	4305      	orrs	r5, r0
 8017dd4:	2d04      	cmp	r5, #4
 8017dd6:	bfcc      	ite	gt
 8017dd8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017ddc:	f04f 0e01 	movle.w	lr, #1
 8017de0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017de4:	f200 80ab 	bhi.w	8017f3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017de8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017dec:	4283      	cmp	r3, r0
 8017dee:	d216      	bcs.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017df0:	f240 605b 	movw	r0, #1627	; 0x65b
 8017df4:	4283      	cmp	r3, r0
 8017df6:	d859      	bhi.n	8017eac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017df8:	f240 6057 	movw	r0, #1623	; 0x657
 8017dfc:	4283      	cmp	r3, r0
 8017dfe:	d20e      	bcs.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e00:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017e04:	d24a      	bcs.n	8017e9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017e06:	f240 604e 	movw	r0, #1614	; 0x64e
 8017e0a:	4283      	cmp	r3, r0
 8017e0c:	d207      	bcs.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e0e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017e12:	4283      	cmp	r3, r0
 8017e14:	d02a      	beq.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e16:	d821      	bhi.n	8017e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017e18:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017e1c:	d35b      	bcc.n	8017ed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017e1e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017e22:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017e26:	f040 80d0 	bne.w	8017fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017e2a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017e2e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017e32:	f040 80ca 	bne.w	8017fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017e36:	00cb      	lsls	r3, r1, #3
 8017e38:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017e3c:	7a13      	ldrb	r3, [r2, #8]
 8017e3e:	0649      	lsls	r1, r1, #25
 8017e40:	ea43 0300 	orr.w	r3, r3, r0
 8017e44:	bf44      	itt	mi
 8017e46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e4a:	b21b      	sxthmi	r3, r3
 8017e4c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017e50:	1b5d      	subs	r5, r3, r5
 8017e52:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017e56:	4610      	mov	r0, r2
 8017e58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e5c:	f240 604b 	movw	r0, #1611	; 0x64b
 8017e60:	4283      	cmp	r3, r0
 8017e62:	d338      	bcc.n	8017ed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017e64:	f240 604c 	movw	r0, #1612	; 0x64c
 8017e68:	4283      	cmp	r3, r0
 8017e6a:	d9d8      	bls.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e6c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017e70:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017e74:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017e78:	f040 80f2 	bne.w	8018060 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017e7c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017e80:	f040 80ee 	bne.w	8018060 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017e84:	00cb      	lsls	r3, r1, #3
 8017e86:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017e8a:	7a13      	ldrb	r3, [r2, #8]
 8017e8c:	064e      	lsls	r6, r1, #25
 8017e8e:	ea43 0300 	orr.w	r3, r3, r0
 8017e92:	bf44      	itt	mi
 8017e94:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e98:	b21b      	sxthmi	r3, r3
 8017e9a:	e7d9      	b.n	8017e50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017e9c:	f240 6054 	movw	r0, #1620	; 0x654
 8017ea0:	4283      	cmp	r3, r0
 8017ea2:	d8e3      	bhi.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ea4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017ea8:	d9e0      	bls.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017eaa:	e7b8      	b.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017eac:	f240 6074 	movw	r0, #1652	; 0x674
 8017eb0:	4283      	cmp	r3, r0
 8017eb2:	d0b4      	beq.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017eb4:	d82d      	bhi.n	8017f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017eb6:	f240 605e 	movw	r0, #1630	; 0x65e
 8017eba:	4283      	cmp	r3, r0
 8017ebc:	d804      	bhi.n	8017ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017ebe:	f240 605d 	movw	r0, #1629	; 0x65d
 8017ec2:	4283      	cmp	r3, r0
 8017ec4:	d3d2      	bcc.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ec6:	e7aa      	b.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ec8:	f240 605f 	movw	r0, #1631	; 0x65f
 8017ecc:	4283      	cmp	r3, r0
 8017ece:	d0cd      	beq.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ed0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017ed4:	d0a3      	beq.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ed6:	00cb      	lsls	r3, r1, #3
 8017ed8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017edc:	7a13      	ldrb	r3, [r2, #8]
 8017ede:	0649      	lsls	r1, r1, #25
 8017ee0:	ea43 0300 	orr.w	r3, r3, r0
 8017ee4:	bf44      	itt	mi
 8017ee6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017eea:	b21b      	sxthmi	r3, r3
 8017eec:	1b5d      	subs	r5, r3, r5
 8017eee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017ef2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017ef6:	7b53      	ldrb	r3, [r2, #13]
 8017ef8:	015b      	lsls	r3, r3, #5
 8017efa:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017efe:	7993      	ldrb	r3, [r2, #6]
 8017f00:	430b      	orrs	r3, r1
 8017f02:	005b      	lsls	r3, r3, #1
 8017f04:	2105      	movs	r1, #5
 8017f06:	fb93 f3f1 	sdiv	r3, r3, r1
 8017f0a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017f0e:	440b      	add	r3, r1
 8017f10:	e756      	b.n	8017dc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017f12:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017f16:	4283      	cmp	r3, r0
 8017f18:	d809      	bhi.n	8017f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017f1a:	f240 60df 	movw	r0, #1759	; 0x6df
 8017f1e:	4283      	cmp	r3, r0
 8017f20:	f4bf af7d 	bcs.w	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f24:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017f28:	2b05      	cmp	r3, #5
 8017f2a:	d8d4      	bhi.n	8017ed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017f2c:	e777      	b.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f2e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017f32:	4283      	cmp	r3, r0
 8017f34:	d09a      	beq.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f36:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017f3a:	4283      	cmp	r3, r0
 8017f3c:	e7ca      	b.n	8017ed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017f3e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017f42:	d22b      	bcs.n	8017f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017f44:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017f48:	4283      	cmp	r3, r0
 8017f4a:	d28f      	bcs.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f4c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017f50:	4283      	cmp	r3, r0
 8017f52:	d816      	bhi.n	8017f82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017f54:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017f58:	4283      	cmp	r3, r0
 8017f5a:	f4bf af60 	bcs.w	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f5e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017f62:	4283      	cmp	r3, r0
 8017f64:	d80a      	bhi.n	8017f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017f66:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017f6a:	4283      	cmp	r3, r0
 8017f6c:	f4bf af57 	bcs.w	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f70:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017f74:	4283      	cmp	r3, r0
 8017f76:	f43f af79 	beq.w	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f7a:	e7ac      	b.n	8017ed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017f7c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017f80:	e7f8      	b.n	8017f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017f82:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017f86:	4283      	cmp	r3, r0
 8017f88:	d802      	bhi.n	8017f90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017f8a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017f8e:	e798      	b.n	8017ec2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017f90:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017f94:	4283      	cmp	r3, r0
 8017f96:	f47f af42 	bne.w	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f9a:	e767      	b.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f9c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017fa0:	4283      	cmp	r3, r0
 8017fa2:	f43f af63 	beq.w	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fa6:	d802      	bhi.n	8017fae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017fa8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017fac:	e7f2      	b.n	8017f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017fae:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017fb2:	4283      	cmp	r3, r0
 8017fb4:	d805      	bhi.n	8017fc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017fb6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017fba:	4283      	cmp	r3, r0
 8017fbc:	f4ff af2f 	bcc.w	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017fc0:	e754      	b.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017fc2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017fc6:	4283      	cmp	r3, r0
 8017fc8:	e7af      	b.n	8017f2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017fca:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017fce:	4617      	mov	r7, r2
 8017fd0:	f102 0808 	add.w	r8, r2, #8
 8017fd4:	4666      	mov	r6, ip
 8017fd6:	6838      	ldr	r0, [r7, #0]
 8017fd8:	6879      	ldr	r1, [r7, #4]
 8017fda:	46e6      	mov	lr, ip
 8017fdc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017fe0:	3708      	adds	r7, #8
 8017fe2:	4547      	cmp	r7, r8
 8017fe4:	46f4      	mov	ip, lr
 8017fe6:	d1f6      	bne.n	8017fd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017fe8:	6838      	ldr	r0, [r7, #0]
 8017fea:	f8ce 0000 	str.w	r0, [lr]
 8017fee:	88b9      	ldrh	r1, [r7, #4]
 8017ff0:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017ff4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017ff8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ffc:	d009      	beq.n	8018012 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017ffe:	7b51      	ldrb	r1, [r2, #13]
 8018000:	7992      	ldrb	r2, [r2, #6]
 8018002:	0149      	lsls	r1, r1, #5
 8018004:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018008:	4311      	orrs	r1, r2
 801800a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801800e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018012:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018016:	b2ad      	uxth	r5, r5
 8018018:	d00d      	beq.n	8018036 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801801a:	442b      	add	r3, r5
 801801c:	b29b      	uxth	r3, r3
 801801e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018022:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018026:	10db      	asrs	r3, r3, #3
 8018028:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801802c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018030:	4313      	orrs	r3, r2
 8018032:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018036:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801803a:	00cb      	lsls	r3, r1, #3
 801803c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018040:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018044:	064f      	lsls	r7, r1, #25
 8018046:	ea43 0302 	orr.w	r3, r3, r2
 801804a:	bf44      	itt	mi
 801804c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018050:	b21b      	sxthmi	r3, r3
 8018052:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018056:	1b5b      	subs	r3, r3, r5
 8018058:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801805c:	4632      	mov	r2, r6
 801805e:	e6fa      	b.n	8017e56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018060:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018064:	4617      	mov	r7, r2
 8018066:	f102 0908 	add.w	r9, r2, #8
 801806a:	4666      	mov	r6, ip
 801806c:	6838      	ldr	r0, [r7, #0]
 801806e:	6879      	ldr	r1, [r7, #4]
 8018070:	46e0      	mov	r8, ip
 8018072:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018076:	3708      	adds	r7, #8
 8018078:	454f      	cmp	r7, r9
 801807a:	46c4      	mov	ip, r8
 801807c:	d1f6      	bne.n	801806c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801807e:	6838      	ldr	r0, [r7, #0]
 8018080:	f8c8 0000 	str.w	r0, [r8]
 8018084:	88b9      	ldrh	r1, [r7, #4]
 8018086:	f8a8 1004 	strh.w	r1, [r8, #4]
 801808a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801808e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018092:	d009      	beq.n	80180a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018094:	7b51      	ldrb	r1, [r2, #13]
 8018096:	7992      	ldrb	r2, [r2, #6]
 8018098:	0149      	lsls	r1, r1, #5
 801809a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801809e:	4311      	orrs	r1, r2
 80180a0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80180a4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80180a8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80180ac:	d00e      	beq.n	80180cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80180ae:	eba3 030e 	sub.w	r3, r3, lr
 80180b2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80180b6:	b29b      	uxth	r3, r3
 80180b8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80180bc:	10db      	asrs	r3, r3, #3
 80180be:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80180c2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80180c6:	4313      	orrs	r3, r2
 80180c8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80180cc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80180d0:	00cb      	lsls	r3, r1, #3
 80180d2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80180d6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80180da:	0648      	lsls	r0, r1, #25
 80180dc:	ea43 0302 	orr.w	r3, r3, r2
 80180e0:	bf44      	itt	mi
 80180e2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80180e6:	b21b      	sxthmi	r3, r3
 80180e8:	1b5d      	subs	r5, r3, r5
 80180ea:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80180ee:	e7b5      	b.n	801805c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080180f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80180f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80180f4:	461e      	mov	r6, r3
 80180f6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80180f8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80180fc:	4604      	mov	r4, r0
 80180fe:	4617      	mov	r7, r2
 8018100:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018104:	f7f0 ff6c 	bl	8008fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018108:	4605      	mov	r5, r0
 801810a:	b918      	cbnz	r0, 8018114 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801810c:	6030      	str	r0, [r6, #0]
 801810e:	4628      	mov	r0, r5
 8018110:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018114:	683b      	ldr	r3, [r7, #0]
 8018116:	4601      	mov	r1, r0
 8018118:	68db      	ldr	r3, [r3, #12]
 801811a:	4638      	mov	r0, r7
 801811c:	4798      	blx	r3
 801811e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018122:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018126:	4602      	mov	r2, r0
 8018128:	6030      	str	r0, [r6, #0]
 801812a:	d213      	bcs.n	8018154 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801812c:	4643      	mov	r3, r8
 801812e:	4639      	mov	r1, r7
 8018130:	4620      	mov	r0, r4
 8018132:	f7ff fe3b 	bl	8017dac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018136:	6030      	str	r0, [r6, #0]
 8018138:	6833      	ldr	r3, [r6, #0]
 801813a:	b143      	cbz	r3, 801814e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801813c:	7b5a      	ldrb	r2, [r3, #13]
 801813e:	7a9b      	ldrb	r3, [r3, #10]
 8018140:	0052      	lsls	r2, r2, #1
 8018142:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018146:	4313      	orrs	r3, r2
 8018148:	bf0c      	ite	eq
 801814a:	2301      	moveq	r3, #1
 801814c:	2300      	movne	r3, #0
 801814e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018152:	e7dc      	b.n	801810e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018154:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018158:	b29b      	uxth	r3, r3
 801815a:	2b7f      	cmp	r3, #127	; 0x7f
 801815c:	d804      	bhi.n	8018168 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801815e:	4639      	mov	r1, r7
 8018160:	4620      	mov	r0, r4
 8018162:	f7ff fd17 	bl	8017b94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018166:	e7e6      	b.n	8018136 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018168:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801816c:	2b00      	cmp	r3, #0
 801816e:	d0e3      	beq.n	8018138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018170:	f640 1302 	movw	r3, #2306	; 0x902
 8018174:	429d      	cmp	r5, r3
 8018176:	d1df      	bne.n	8018138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018178:	4601      	mov	r1, r0
 801817a:	4620      	mov	r0, r4
 801817c:	f7ff fcdb 	bl	8017b36 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018180:	e7d9      	b.n	8018136 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018182 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018182:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018186:	461e      	mov	r6, r3
 8018188:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801818a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801818e:	4604      	mov	r4, r0
 8018190:	4617      	mov	r7, r2
 8018192:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018196:	f7f0 ff23 	bl	8008fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801819a:	4605      	mov	r5, r0
 801819c:	b918      	cbnz	r0, 80181a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801819e:	6030      	str	r0, [r6, #0]
 80181a0:	4628      	mov	r0, r5
 80181a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80181a6:	683b      	ldr	r3, [r7, #0]
 80181a8:	4601      	mov	r1, r0
 80181aa:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80181ae:	4638      	mov	r0, r7
 80181b0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80181b4:	47c8      	blx	r9
 80181b6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80181ba:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80181be:	4602      	mov	r2, r0
 80181c0:	6030      	str	r0, [r6, #0]
 80181c2:	d213      	bcs.n	80181ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80181c4:	4643      	mov	r3, r8
 80181c6:	4639      	mov	r1, r7
 80181c8:	4620      	mov	r0, r4
 80181ca:	f7ff fdef 	bl	8017dac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80181ce:	6030      	str	r0, [r6, #0]
 80181d0:	6833      	ldr	r3, [r6, #0]
 80181d2:	b143      	cbz	r3, 80181e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80181d4:	7b5a      	ldrb	r2, [r3, #13]
 80181d6:	7a9b      	ldrb	r3, [r3, #10]
 80181d8:	0052      	lsls	r2, r2, #1
 80181da:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80181de:	4313      	orrs	r3, r2
 80181e0:	bf0c      	ite	eq
 80181e2:	2301      	moveq	r3, #1
 80181e4:	2300      	movne	r3, #0
 80181e6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80181ea:	e7d9      	b.n	80181a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80181ec:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80181f0:	b29b      	uxth	r3, r3
 80181f2:	2b7f      	cmp	r3, #127	; 0x7f
 80181f4:	d804      	bhi.n	8018200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80181f6:	4639      	mov	r1, r7
 80181f8:	4620      	mov	r0, r4
 80181fa:	f7ff fccb 	bl	8017b94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80181fe:	e7e6      	b.n	80181ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018200:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018204:	2b00      	cmp	r3, #0
 8018206:	d0e3      	beq.n	80181d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018208:	f640 1302 	movw	r3, #2306	; 0x902
 801820c:	429d      	cmp	r5, r3
 801820e:	d1df      	bne.n	80181d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018210:	4601      	mov	r1, r0
 8018212:	4620      	mov	r0, r4
 8018214:	f7ff fc8f 	bl	8017b36 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018218:	e7d9      	b.n	80181ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801821a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801821a:	b510      	push	{r4, lr}
 801821c:	4604      	mov	r4, r0
 801821e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018222:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018224:	b1f1      	cbz	r1, 8018264 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018226:	2b0a      	cmp	r3, #10
 8018228:	d02f      	beq.n	801828a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801822a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801822c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018230:	3901      	subs	r1, #1
 8018232:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018234:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018238:	1c51      	adds	r1, r2, #1
 801823a:	b289      	uxth	r1, r1
 801823c:	2901      	cmp	r1, #1
 801823e:	bf84      	itt	hi
 8018240:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018244:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018246:	f103 0201 	add.w	r2, r3, #1
 801824a:	8722      	strh	r2, [r4, #56]	; 0x38
 801824c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801824e:	bf98      	it	ls
 8018250:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018252:	4413      	add	r3, r2
 8018254:	b29b      	uxth	r3, r3
 8018256:	2b09      	cmp	r3, #9
 8018258:	bf88      	it	hi
 801825a:	3b0a      	subhi	r3, #10
 801825c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018260:	8458      	strh	r0, [r3, #34]	; 0x22
 8018262:	e7dc      	b.n	801821e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018264:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018266:	2b0a      	cmp	r3, #10
 8018268:	d00f      	beq.n	801828a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801826a:	4620      	mov	r0, r4
 801826c:	f7ff fc11 	bl	8017a92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018270:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018272:	1c5a      	adds	r2, r3, #1
 8018274:	8722      	strh	r2, [r4, #56]	; 0x38
 8018276:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018278:	4413      	add	r3, r2
 801827a:	b29b      	uxth	r3, r3
 801827c:	2b09      	cmp	r3, #9
 801827e:	bf88      	it	hi
 8018280:	3b0a      	subhi	r3, #10
 8018282:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018286:	8458      	strh	r0, [r3, #34]	; 0x22
 8018288:	e7ec      	b.n	8018264 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801828a:	bd10      	pop	{r4, pc}

0801828c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801828c:	b538      	push	{r3, r4, r5, lr}
 801828e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018290:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018294:	4604      	mov	r4, r0
 8018296:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018298:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801829a:	3a01      	subs	r2, #1
 801829c:	8702      	strh	r2, [r0, #56]	; 0x38
 801829e:	1c5a      	adds	r2, r3, #1
 80182a0:	b292      	uxth	r2, r2
 80182a2:	2a09      	cmp	r2, #9
 80182a4:	bf86      	itte	hi
 80182a6:	3b09      	subhi	r3, #9
 80182a8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80182aa:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80182ac:	f7ff ffb5 	bl	801821a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80182b0:	8c23      	ldrh	r3, [r4, #32]
 80182b2:	2b01      	cmp	r3, #1
 80182b4:	bf9c      	itt	ls
 80182b6:	3301      	addls	r3, #1
 80182b8:	8423      	strhls	r3, [r4, #32]
 80182ba:	8be3      	ldrh	r3, [r4, #30]
 80182bc:	b90b      	cbnz	r3, 80182c2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80182be:	2302      	movs	r3, #2
 80182c0:	83e3      	strh	r3, [r4, #30]
 80182c2:	8be3      	ldrh	r3, [r4, #30]
 80182c4:	3b01      	subs	r3, #1
 80182c6:	b29b      	uxth	r3, r3
 80182c8:	83e3      	strh	r3, [r4, #30]
 80182ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80182ce:	4628      	mov	r0, r5
 80182d0:	8365      	strh	r5, [r4, #26]
 80182d2:	bd38      	pop	{r3, r4, r5, pc}

080182d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80182d4:	428a      	cmp	r2, r1
 80182d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80182da:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80182dc:	d931      	bls.n	8018342 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80182de:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80182e0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80182e4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80182e8:	19ee      	adds	r6, r5, r7
 80182ea:	1a54      	subs	r4, r2, r1
 80182ec:	3e01      	subs	r6, #1
 80182ee:	fa1f fe84 	uxth.w	lr, r4
 80182f2:	b2b4      	uxth	r4, r6
 80182f4:	eba4 090e 	sub.w	r9, r4, lr
 80182f8:	fa1f f989 	uxth.w	r9, r9
 80182fc:	2c09      	cmp	r4, #9
 80182fe:	4626      	mov	r6, r4
 8018300:	bf88      	it	hi
 8018302:	f1a4 060a 	subhi.w	r6, r4, #10
 8018306:	f1bc 0f00 	cmp.w	ip, #0
 801830a:	bf08      	it	eq
 801830c:	f04f 0c02 	moveq.w	ip, #2
 8018310:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018314:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018318:	fa1f fc8c 	uxth.w	ip, ip
 801831c:	3c01      	subs	r4, #1
 801831e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018322:	b2a4      	uxth	r4, r4
 8018324:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018328:	454c      	cmp	r4, r9
 801832a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801832e:	d1e5      	bne.n	80182fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018330:	eba5 050e 	sub.w	r5, r5, lr
 8018334:	eb0e 0408 	add.w	r4, lr, r8
 8018338:	8705      	strh	r5, [r0, #56]	; 0x38
 801833a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801833e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018342:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018344:	1a64      	subs	r4, r4, r1
 8018346:	4439      	add	r1, r7
 8018348:	b289      	uxth	r1, r1
 801834a:	2909      	cmp	r1, #9
 801834c:	bf88      	it	hi
 801834e:	390a      	subhi	r1, #10
 8018350:	8704      	strh	r4, [r0, #56]	; 0x38
 8018352:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018354:	250a      	movs	r5, #10
 8018356:	b18a      	cbz	r2, 801837c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018358:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801835a:	3a01      	subs	r2, #1
 801835c:	b292      	uxth	r2, r2
 801835e:	3101      	adds	r1, #1
 8018360:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018364:	8701      	strh	r1, [r0, #56]	; 0x38
 8018366:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018368:	b901      	cbnz	r1, 801836c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801836a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801836c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801836e:	3901      	subs	r1, #1
 8018370:	b289      	uxth	r1, r1
 8018372:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018374:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018378:	844c      	strh	r4, [r1, #34]	; 0x22
 801837a:	e7ec      	b.n	8018356 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801837c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018380:	f7ff bf4b 	b.w	801821a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018384 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018384:	b570      	push	{r4, r5, r6, lr}
 8018386:	2500      	movs	r5, #0
 8018388:	4295      	cmp	r5, r2
 801838a:	d011      	beq.n	80183b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801838c:	8bc4      	ldrh	r4, [r0, #30]
 801838e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018392:	4414      	add	r4, r2
 8018394:	3c01      	subs	r4, #1
 8018396:	1b64      	subs	r4, r4, r5
 8018398:	b2a4      	uxth	r4, r4
 801839a:	2c01      	cmp	r4, #1
 801839c:	bf88      	it	hi
 801839e:	3c02      	subhi	r4, #2
 80183a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80183a4:	8b64      	ldrh	r4, [r4, #26]
 80183a6:	42b4      	cmp	r4, r6
 80183a8:	d117      	bne.n	80183da <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80183aa:	3501      	adds	r5, #1
 80183ac:	b2ad      	uxth	r5, r5
 80183ae:	e7eb      	b.n	8018388 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80183b0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80183b4:	2400      	movs	r4, #0
 80183b6:	4413      	add	r3, r2
 80183b8:	b2a2      	uxth	r2, r4
 80183ba:	429a      	cmp	r2, r3
 80183bc:	da0f      	bge.n	80183de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80183be:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80183c0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80183c4:	4432      	add	r2, r6
 80183c6:	b292      	uxth	r2, r2
 80183c8:	2a09      	cmp	r2, #9
 80183ca:	bf88      	it	hi
 80183cc:	3a0a      	subhi	r2, #10
 80183ce:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80183d2:	3401      	adds	r4, #1
 80183d4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80183d6:	42aa      	cmp	r2, r5
 80183d8:	d0ee      	beq.n	80183b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80183da:	2000      	movs	r0, #0
 80183dc:	bd70      	pop	{r4, r5, r6, pc}
 80183de:	2001      	movs	r0, #1
 80183e0:	e7fc      	b.n	80183dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080183e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80183e2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e6:	4605      	mov	r5, r0
 80183e8:	4616      	mov	r6, r2
 80183ea:	1c8c      	adds	r4, r1, #2
 80183ec:	8809      	ldrh	r1, [r1, #0]
 80183ee:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80183f2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80183f6:	42b3      	cmp	r3, r6
 80183f8:	d124      	bne.n	8018444 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80183fa:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80183fe:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018402:	f001 070f 	and.w	r7, r1, #15
 8018406:	f8cd 8000 	str.w	r8, [sp]
 801840a:	464b      	mov	r3, r9
 801840c:	4652      	mov	r2, sl
 801840e:	4621      	mov	r1, r4
 8018410:	4628      	mov	r0, r5
 8018412:	f7ff ffb7 	bl	8018384 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018416:	4683      	mov	fp, r0
 8018418:	b168      	cbz	r0, 8018436 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801841a:	eb0a 0109 	add.w	r1, sl, r9
 801841e:	4441      	add	r1, r8
 8018420:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018424:	463a      	mov	r2, r7
 8018426:	4649      	mov	r1, r9
 8018428:	4628      	mov	r0, r5
 801842a:	f7ff ff53 	bl	80182d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801842e:	4658      	mov	r0, fp
 8018430:	b003      	add	sp, #12
 8018432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018436:	eb07 010a 	add.w	r1, r7, sl
 801843a:	4449      	add	r1, r9
 801843c:	4441      	add	r1, r8
 801843e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018442:	e7d2      	b.n	80183ea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018444:	f04f 0b00 	mov.w	fp, #0
 8018448:	e7f1      	b.n	801842e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801844a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801844a:	b570      	push	{r4, r5, r6, lr}
 801844c:	8810      	ldrh	r0, [r2, #0]
 801844e:	4298      	cmp	r0, r3
 8018450:	d817      	bhi.n	8018482 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018452:	1e48      	subs	r0, r1, #1
 8018454:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018458:	4298      	cmp	r0, r3
 801845a:	d312      	bcc.n	8018482 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801845c:	2400      	movs	r4, #0
 801845e:	428c      	cmp	r4, r1
 8018460:	d20f      	bcs.n	8018482 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018462:	1860      	adds	r0, r4, r1
 8018464:	1040      	asrs	r0, r0, #1
 8018466:	0085      	lsls	r5, r0, #2
 8018468:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801846c:	42b3      	cmp	r3, r6
 801846e:	d902      	bls.n	8018476 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018470:	3001      	adds	r0, #1
 8018472:	b284      	uxth	r4, r0
 8018474:	e7f3      	b.n	801845e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018476:	d201      	bcs.n	801847c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018478:	b281      	uxth	r1, r0
 801847a:	e7f0      	b.n	801845e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801847c:	442a      	add	r2, r5
 801847e:	8850      	ldrh	r0, [r2, #2]
 8018480:	bd70      	pop	{r4, r5, r6, pc}
 8018482:	2000      	movs	r0, #0
 8018484:	e7fc      	b.n	8018480 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018486 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018486:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801848a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801848c:	886f      	ldrh	r7, [r5, #2]
 801848e:	4604      	mov	r4, r0
 8018490:	087f      	lsrs	r7, r7, #1
 8018492:	260b      	movs	r6, #11
 8018494:	3e01      	subs	r6, #1
 8018496:	d013      	beq.n	80184c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018498:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801849a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801849e:	462a      	mov	r2, r5
 80184a0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80184a4:	4639      	mov	r1, r7
 80184a6:	4643      	mov	r3, r8
 80184a8:	4620      	mov	r0, r4
 80184aa:	f7ff ffce 	bl	801844a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80184ae:	b138      	cbz	r0, 80184c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80184b0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80184b4:	4642      	mov	r2, r8
 80184b6:	4620      	mov	r0, r4
 80184b8:	f7ff ff93 	bl	80183e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80184bc:	2800      	cmp	r0, #0
 80184be:	d1e9      	bne.n	8018494 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80184c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080184c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80184c4:	b570      	push	{r4, r5, r6, lr}
 80184c6:	694a      	ldr	r2, [r1, #20]
 80184c8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80184ca:	684b      	ldr	r3, [r1, #4]
 80184cc:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80184ce:	1b54      	subs	r4, r2, r5
 80184d0:	f000 8106 	beq.w	80186e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80184d4:	1b9b      	subs	r3, r3, r6
 80184d6:	d003      	beq.n	80184e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80184d8:	4363      	muls	r3, r4
 80184da:	2210      	movs	r2, #16
 80184dc:	fb93 f3f2 	sdiv	r3, r3, r2
 80184e0:	680c      	ldr	r4, [r1, #0]
 80184e2:	698a      	ldr	r2, [r1, #24]
 80184e4:	1b65      	subs	r5, r4, r5
 80184e6:	f000 80fd 	beq.w	80186e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80184ea:	1b92      	subs	r2, r2, r6
 80184ec:	d003      	beq.n	80184f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80184ee:	436a      	muls	r2, r5
 80184f0:	2410      	movs	r4, #16
 80184f2:	fb92 f2f4 	sdiv	r2, r2, r4
 80184f6:	1a9b      	subs	r3, r3, r2
 80184f8:	ee07 3a90 	vmov	s15, r3
 80184fc:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018720 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018500:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018504:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018508:	ee67 7a84 	vmul.f32	s15, s15, s8
 801850c:	460a      	mov	r2, r1
 801850e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018512:	4603      	mov	r3, r0
 8018514:	f100 040c 	add.w	r4, r0, #12
 8018518:	eeb1 6a43 	vneg.f32	s12, s6
 801851c:	edd2 7a02 	vldr	s15, [r2, #8]
 8018520:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018524:	3214      	adds	r2, #20
 8018526:	ece3 6a01 	vstmia	r3!, {s13}
 801852a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801852e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018532:	429c      	cmp	r4, r3
 8018534:	edc3 7a02 	vstr	s15, [r3, #8]
 8018538:	ed52 7a01 	vldr	s15, [r2, #-4]
 801853c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018540:	edc3 7a05 	vstr	s15, [r3, #20]
 8018544:	d1ea      	bne.n	801851c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018546:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018548:	698b      	ldr	r3, [r1, #24]
 801854a:	edd0 4a02 	vldr	s9, [r0, #8]
 801854e:	edd0 3a00 	vldr	s7, [r0]
 8018552:	edd0 6a01 	vldr	s13, [r0, #4]
 8018556:	ed90 5a05 	vldr	s10, [r0, #20]
 801855a:	ed90 2a03 	vldr	s4, [r0, #12]
 801855e:	edd0 5a04 	vldr	s11, [r0, #16]
 8018562:	ed90 1a07 	vldr	s2, [r0, #28]
 8018566:	edd0 2a06 	vldr	s5, [r0, #24]
 801856a:	1a9b      	subs	r3, r3, r2
 801856c:	ee07 3a90 	vmov	s15, r3
 8018570:	684b      	ldr	r3, [r1, #4]
 8018572:	1a9b      	subs	r3, r3, r2
 8018574:	ee07 3a10 	vmov	s14, r3
 8018578:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801857c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018580:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018584:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018588:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801858c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018590:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018594:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018598:	eee6 7a87 	vfma.f32	s15, s13, s14
 801859c:	ee32 5a45 	vsub.f32	s10, s4, s10
 80185a0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80185a4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80185a8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80185aa:	694a      	ldr	r2, [r1, #20]
 80185ac:	1b13      	subs	r3, r2, r4
 80185ae:	ee07 3a10 	vmov	s14, r3
 80185b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185b6:	680b      	ldr	r3, [r1, #0]
 80185b8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185bc:	1b1b      	subs	r3, r3, r4
 80185be:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80185c2:	ee07 3a10 	vmov	s14, r3
 80185c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185ca:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185ce:	eee6 4a87 	vfma.f32	s9, s13, s14
 80185d2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80185d6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80185da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80185dc:	698b      	ldr	r3, [r1, #24]
 80185de:	1a9b      	subs	r3, r3, r2
 80185e0:	ee06 3a90 	vmov	s13, r3
 80185e4:	684b      	ldr	r3, [r1, #4]
 80185e6:	1a9b      	subs	r3, r3, r2
 80185e8:	ee07 3a10 	vmov	s14, r3
 80185ec:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80185f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185f4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80185f8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80185fc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018600:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018604:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018608:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801860c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801860e:	694a      	ldr	r2, [r1, #20]
 8018610:	1b13      	subs	r3, r2, r4
 8018612:	ee07 3a10 	vmov	s14, r3
 8018616:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801861a:	680b      	ldr	r3, [r1, #0]
 801861c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018620:	1b1b      	subs	r3, r3, r4
 8018622:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018626:	ee07 3a10 	vmov	s14, r3
 801862a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801862e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018632:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018636:	edd0 5a08 	vldr	s11, [r0, #32]
 801863a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801863e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018642:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018646:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018648:	698b      	ldr	r3, [r1, #24]
 801864a:	1a9b      	subs	r3, r3, r2
 801864c:	ee07 3a10 	vmov	s14, r3
 8018650:	684b      	ldr	r3, [r1, #4]
 8018652:	1a9b      	subs	r3, r3, r2
 8018654:	ee01 3a90 	vmov	s3, r3
 8018658:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801865c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018660:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018664:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018668:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801866c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018670:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018674:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018678:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801867c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801867e:	694a      	ldr	r2, [r1, #20]
 8018680:	1b13      	subs	r3, r2, r4
 8018682:	ee03 3a10 	vmov	s6, r3
 8018686:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801868a:	680b      	ldr	r3, [r1, #0]
 801868c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018690:	1b1b      	subs	r3, r3, r4
 8018692:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018696:	ee03 3a10 	vmov	s6, r3
 801869a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801869e:	ee23 4a04 	vmul.f32	s8, s6, s8
 80186a2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80186a6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80186aa:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80186ae:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80186b2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80186b6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80186ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186be:	dd13      	ble.n	80186e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80186c0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80186c4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80186c8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80186ca:	eee3 7a87 	vfma.f32	s15, s7, s14
 80186ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80186d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80186d6:	dd15      	ble.n	8018704 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80186d8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80186dc:	6403      	str	r3, [r0, #64]	; 0x40
 80186de:	bd70      	pop	{r4, r5, r6, pc}
 80186e0:	4623      	mov	r3, r4
 80186e2:	e6fd      	b.n	80184e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80186e4:	462a      	mov	r2, r5
 80186e6:	e706      	b.n	80184f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80186e8:	d502      	bpl.n	80186f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80186ea:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80186ee:	e7e9      	b.n	80186c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80186f0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80186f4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80186f8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80186fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018700:	dade      	bge.n	80186c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018702:	e7f2      	b.n	80186ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018704:	d502      	bpl.n	801870c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018706:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801870a:	e7e7      	b.n	80186dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801870c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018710:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018714:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801871c:	dadc      	bge.n	80186d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801871e:	e7f2      	b.n	8018706 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018720:	3d800000 	.word	0x3d800000

08018724 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018724:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018728:	2714      	movs	r7, #20
 801872a:	435f      	muls	r7, r3
 801872c:	eb02 0c07 	add.w	ip, r2, r7
 8018730:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018734:	f115 0e0f 	adds.w	lr, r5, #15
 8018738:	f100 80a2 	bmi.w	8018880 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801873c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018740:	9c08      	ldr	r4, [sp, #32]
 8018742:	f8c0 e014 	str.w	lr, [r0, #20]
 8018746:	2614      	movs	r6, #20
 8018748:	4366      	muls	r6, r4
 801874a:	eb02 0806 	add.w	r8, r2, r6
 801874e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018752:	f115 040f 	adds.w	r4, r5, #15
 8018756:	f100 809f 	bmi.w	8018898 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801875a:	1124      	asrs	r4, r4, #4
 801875c:	eba4 040e 	sub.w	r4, r4, lr
 8018760:	6184      	str	r4, [r0, #24]
 8018762:	2c00      	cmp	r4, #0
 8018764:	f000 808a 	beq.w	801887c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018768:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801876c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018770:	5995      	ldr	r5, [r2, r6]
 8018772:	eba4 0809 	sub.w	r8, r4, r9
 8018776:	59d4      	ldr	r4, [r2, r7]
 8018778:	eba5 0a04 	sub.w	sl, r5, r4
 801877c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018780:	fb0e fe05 	mul.w	lr, lr, r5
 8018784:	fb0a ee19 	mls	lr, sl, r9, lr
 8018788:	fb08 e404 	mla	r4, r8, r4, lr
 801878c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018790:	3c01      	subs	r4, #1
 8018792:	19a4      	adds	r4, r4, r6
 8018794:	f100 808c 	bmi.w	80188b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018798:	fb94 fef6 	sdiv	lr, r4, r6
 801879c:	f8c0 e000 	str.w	lr, [r0]
 80187a0:	fb06 441e 	mls	r4, r6, lr, r4
 80187a4:	6104      	str	r4, [r0, #16]
 80187a6:	2d00      	cmp	r5, #0
 80187a8:	f2c0 8095 	blt.w	80188d6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80187ac:	fb95 f4f6 	sdiv	r4, r5, r6
 80187b0:	6044      	str	r4, [r0, #4]
 80187b2:	fb06 5514 	mls	r5, r6, r4, r5
 80187b6:	6085      	str	r5, [r0, #8]
 80187b8:	60c6      	str	r6, [r0, #12]
 80187ba:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80187be:	6945      	ldr	r5, [r0, #20]
 80187c0:	59d2      	ldr	r2, [r2, r7]
 80187c2:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80188f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80187c6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80187ca:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80187ce:	ee07 4a10 	vmov	s14, r4
 80187d2:	6804      	ldr	r4, [r0, #0]
 80187d4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80187d8:	ee07 2a90 	vmov	s15, r2
 80187dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80187e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80187e4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80187e8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80187ec:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80187f0:	edd3 6a00 	vldr	s13, [r3]
 80187f4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80187f8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80187fc:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018800:	edc0 6a07 	vstr	s13, [r0, #28]
 8018804:	edd0 6a01 	vldr	s13, [r0, #4]
 8018808:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801880c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018810:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018814:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018818:	ed80 6a08 	vstr	s12, [r0, #32]
 801881c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801881e:	6242      	str	r2, [r0, #36]	; 0x24
 8018820:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018824:	ed93 6a03 	vldr	s12, [r3, #12]
 8018828:	eea5 6a87 	vfma.f32	s12, s11, s14
 801882c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018830:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018834:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8018838:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801883c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8018840:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018844:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8018848:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801884a:	6302      	str	r2, [r0, #48]	; 0x30
 801884c:	ed93 6a06 	vldr	s12, [r3, #24]
 8018850:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8018854:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018858:	eeb0 7a46 	vmov.f32	s14, s12
 801885c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8018860:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018864:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018868:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801886c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8018870:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018874:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018878:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801887a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801887c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018880:	f1c5 0501 	rsb	r5, r5, #1
 8018884:	f015 050f 	ands.w	r5, r5, #15
 8018888:	bf18      	it	ne
 801888a:	2501      	movne	r5, #1
 801888c:	2410      	movs	r4, #16
 801888e:	fb9e fef4 	sdiv	lr, lr, r4
 8018892:	ebae 0e05 	sub.w	lr, lr, r5
 8018896:	e753      	b.n	8018740 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018898:	f1c5 0501 	rsb	r5, r5, #1
 801889c:	f015 050f 	ands.w	r5, r5, #15
 80188a0:	bf18      	it	ne
 80188a2:	2501      	movne	r5, #1
 80188a4:	f04f 0910 	mov.w	r9, #16
 80188a8:	fb94 f4f9 	sdiv	r4, r4, r9
 80188ac:	1b64      	subs	r4, r4, r5
 80188ae:	e755      	b.n	801875c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80188b0:	4264      	negs	r4, r4
 80188b2:	fb94 fef6 	sdiv	lr, r4, r6
 80188b6:	f1ce 0800 	rsb	r8, lr, #0
 80188ba:	fb06 441e 	mls	r4, r6, lr, r4
 80188be:	f8c0 8000 	str.w	r8, [r0]
 80188c2:	6104      	str	r4, [r0, #16]
 80188c4:	2c00      	cmp	r4, #0
 80188c6:	f43f af6e 	beq.w	80187a6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80188ca:	ea6f 0e0e 	mvn.w	lr, lr
 80188ce:	f8c0 e000 	str.w	lr, [r0]
 80188d2:	1b34      	subs	r4, r6, r4
 80188d4:	e766      	b.n	80187a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80188d6:	426d      	negs	r5, r5
 80188d8:	fb95 f4f6 	sdiv	r4, r5, r6
 80188dc:	f1c4 0e00 	rsb	lr, r4, #0
 80188e0:	fb06 5514 	mls	r5, r6, r4, r5
 80188e4:	f8c0 e004 	str.w	lr, [r0, #4]
 80188e8:	6085      	str	r5, [r0, #8]
 80188ea:	2d00      	cmp	r5, #0
 80188ec:	f43f af64 	beq.w	80187b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80188f0:	43e4      	mvns	r4, r4
 80188f2:	6044      	str	r4, [r0, #4]
 80188f4:	1b75      	subs	r5, r6, r5
 80188f6:	e75e      	b.n	80187b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80188f8:	3d800000 	.word	0x3d800000

080188fc <_ZN8touchgfx7Unicode6strlenEPKt>:
 80188fc:	4602      	mov	r2, r0
 80188fe:	b148      	cbz	r0, 8018914 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018900:	2300      	movs	r3, #0
 8018902:	b298      	uxth	r0, r3
 8018904:	3301      	adds	r3, #1
 8018906:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801890a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801890e:	2900      	cmp	r1, #0
 8018910:	d1f7      	bne.n	8018902 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018912:	4770      	bx	lr
 8018914:	4770      	bx	lr

08018916 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018916:	b530      	push	{r4, r5, lr}
 8018918:	4604      	mov	r4, r0
 801891a:	b159      	cbz	r1, 8018934 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801891c:	b148      	cbz	r0, 8018932 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801891e:	2300      	movs	r3, #0
 8018920:	b298      	uxth	r0, r3
 8018922:	4282      	cmp	r2, r0
 8018924:	d905      	bls.n	8018932 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018926:	5ccd      	ldrb	r5, [r1, r3]
 8018928:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801892c:	3301      	adds	r3, #1
 801892e:	2d00      	cmp	r5, #0
 8018930:	d1f6      	bne.n	8018920 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018932:	bd30      	pop	{r4, r5, pc}
 8018934:	4608      	mov	r0, r1
 8018936:	e7fc      	b.n	8018932 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018938 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8018938:	b5f0      	push	{r4, r5, r6, r7, lr}
 801893a:	b08b      	sub	sp, #44	; 0x2c
 801893c:	468c      	mov	ip, r1
 801893e:	2100      	movs	r1, #0
 8018940:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018944:	4604      	mov	r4, r0
 8018946:	261f      	movs	r6, #31
 8018948:	af01      	add	r7, sp, #4
 801894a:	fb94 fef3 	sdiv	lr, r4, r3
 801894e:	fb03 441e 	mls	r4, r3, lr, r4
 8018952:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018956:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801895a:	b2ec      	uxtb	r4, r5
 801895c:	2d09      	cmp	r5, #9
 801895e:	bfd4      	ite	le
 8018960:	3430      	addle	r4, #48	; 0x30
 8018962:	3457      	addgt	r4, #87	; 0x57
 8018964:	b2e4      	uxtb	r4, r4
 8018966:	55bc      	strb	r4, [r7, r6]
 8018968:	4674      	mov	r4, lr
 801896a:	1e71      	subs	r1, r6, #1
 801896c:	b974      	cbnz	r4, 801898c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801896e:	2800      	cmp	r0, #0
 8018970:	da05      	bge.n	801897e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018972:	ab0a      	add	r3, sp, #40	; 0x28
 8018974:	4419      	add	r1, r3
 8018976:	232d      	movs	r3, #45	; 0x2d
 8018978:	f801 3c24 	strb.w	r3, [r1, #-36]
 801897c:	1eb1      	subs	r1, r6, #2
 801897e:	3101      	adds	r1, #1
 8018980:	4439      	add	r1, r7
 8018982:	4660      	mov	r0, ip
 8018984:	f7ff ffc7 	bl	8018916 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018988:	b00b      	add	sp, #44	; 0x2c
 801898a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801898c:	460e      	mov	r6, r1
 801898e:	e7dc      	b.n	801894a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018990 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018990:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018992:	b08b      	sub	sp, #44	; 0x2c
 8018994:	468c      	mov	ip, r1
 8018996:	2100      	movs	r1, #0
 8018998:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801899c:	ae01      	add	r6, sp, #4
 801899e:	211f      	movs	r1, #31
 80189a0:	fbb0 f7f3 	udiv	r7, r0, r3
 80189a4:	fb03 0517 	mls	r5, r3, r7, r0
 80189a8:	b2ec      	uxtb	r4, r5
 80189aa:	2d09      	cmp	r5, #9
 80189ac:	bfd4      	ite	le
 80189ae:	3430      	addle	r4, #48	; 0x30
 80189b0:	3457      	addgt	r4, #87	; 0x57
 80189b2:	b2e4      	uxtb	r4, r4
 80189b4:	558c      	strb	r4, [r1, r6]
 80189b6:	4638      	mov	r0, r7
 80189b8:	1e4c      	subs	r4, r1, #1
 80189ba:	b92f      	cbnz	r7, 80189c8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80189bc:	4431      	add	r1, r6
 80189be:	4660      	mov	r0, ip
 80189c0:	f7ff ffa9 	bl	8018916 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80189c4:	b00b      	add	sp, #44	; 0x2c
 80189c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80189c8:	4621      	mov	r1, r4
 80189ca:	e7e9      	b.n	80189a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080189cc <_ZN8touchgfx7Unicode4itoaElPtti>:
 80189cc:	b410      	push	{r4}
 80189ce:	b131      	cbz	r1, 80189de <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80189d0:	1e9c      	subs	r4, r3, #2
 80189d2:	2c22      	cmp	r4, #34	; 0x22
 80189d4:	d803      	bhi.n	80189de <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80189d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80189da:	f7ff bfad 	b.w	8018938 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80189de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80189e2:	4770      	bx	lr

080189e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80189e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189e8:	4691      	mov	r9, r2
 80189ea:	b085      	sub	sp, #20
 80189ec:	6802      	ldr	r2, [r0, #0]
 80189ee:	9201      	str	r2, [sp, #4]
 80189f0:	4688      	mov	r8, r1
 80189f2:	4683      	mov	fp, r0
 80189f4:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80189f8:	9103      	str	r1, [sp, #12]
 80189fa:	4610      	mov	r0, r2
 80189fc:	461c      	mov	r4, r3
 80189fe:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018a02:	9302      	str	r3, [sp, #8]
 8018a04:	f7ff ff7a 	bl	80188fc <_ZN8touchgfx7Unicode6strlenEPKt>
 8018a08:	f1b8 0f00 	cmp.w	r8, #0
 8018a0c:	bf0c      	ite	eq
 8018a0e:	4684      	moveq	ip, r0
 8018a10:	f100 0c01 	addne.w	ip, r0, #1
 8018a14:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018a18:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018a1c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018a1e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018a20:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018a24:	9903      	ldr	r1, [sp, #12]
 8018a26:	fa1f fc8c 	uxth.w	ip, ip
 8018a2a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018a2e:	d041      	beq.n	8018ab4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018a30:	d834      	bhi.n	8018a9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018a32:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018a36:	d059      	beq.n	8018aec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018a38:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8018a3c:	d03a      	beq.n	8018ab4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018a3e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018a42:	d034      	beq.n	8018aae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018a44:	2400      	movs	r4, #0
 8018a46:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018a4a:	3a01      	subs	r2, #1
 8018a4c:	b169      	cbz	r1, 8018a6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018a4e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018a50:	458c      	cmp	ip, r1
 8018a52:	da09      	bge.n	8018a68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018a54:	eba1 010c 	sub.w	r1, r1, ip
 8018a58:	b289      	uxth	r1, r1
 8018a5a:	b933      	cbnz	r3, 8018a6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018a5c:	2e00      	cmp	r6, #0
 8018a5e:	d051      	beq.n	8018b04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018a60:	2800      	cmp	r0, #0
 8018a62:	d04f      	beq.n	8018b04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018a64:	440c      	add	r4, r1
 8018a66:	b2a4      	uxth	r4, r4
 8018a68:	2100      	movs	r1, #0
 8018a6a:	682b      	ldr	r3, [r5, #0]
 8018a6c:	4293      	cmp	r3, r2
 8018a6e:	da07      	bge.n	8018a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018a70:	f1b8 0f00 	cmp.w	r8, #0
 8018a74:	d004      	beq.n	8018a80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018a76:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8018a7a:	682b      	ldr	r3, [r5, #0]
 8018a7c:	3301      	adds	r3, #1
 8018a7e:	602b      	str	r3, [r5, #0]
 8018a80:	2730      	movs	r7, #48	; 0x30
 8018a82:	2c00      	cmp	r4, #0
 8018a84:	d04e      	beq.n	8018b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018a86:	682e      	ldr	r6, [r5, #0]
 8018a88:	3c01      	subs	r4, #1
 8018a8a:	42b2      	cmp	r2, r6
 8018a8c:	b2a4      	uxth	r4, r4
 8018a8e:	dd49      	ble.n	8018b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018a90:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018a94:	682b      	ldr	r3, [r5, #0]
 8018a96:	3301      	adds	r3, #1
 8018a98:	602b      	str	r3, [r5, #0]
 8018a9a:	e7f2      	b.n	8018a82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018a9c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018aa0:	d01d      	beq.n	8018ade <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018aa2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018aa6:	d002      	beq.n	8018aae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018aa8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018aac:	e7c9      	b.n	8018a42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018aae:	4684      	mov	ip, r0
 8018ab0:	f04f 0800 	mov.w	r8, #0
 8018ab4:	2c00      	cmp	r4, #0
 8018ab6:	d0c6      	beq.n	8018a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018ab8:	b947      	cbnz	r7, 8018acc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018aba:	2801      	cmp	r0, #1
 8018abc:	d106      	bne.n	8018acc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018abe:	8814      	ldrh	r4, [r2, #0]
 8018ac0:	2c30      	cmp	r4, #48	; 0x30
 8018ac2:	bf02      	ittt	eq
 8018ac4:	3202      	addeq	r2, #2
 8018ac6:	f8cb 2000 	streq.w	r2, [fp]
 8018aca:	4638      	moveq	r0, r7
 8018acc:	45bc      	cmp	ip, r7
 8018ace:	da14      	bge.n	8018afa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018ad0:	b2bf      	uxth	r7, r7
 8018ad2:	eba7 040c 	sub.w	r4, r7, ip
 8018ad6:	b2a4      	uxth	r4, r4
 8018ad8:	46bc      	mov	ip, r7
 8018ada:	2600      	movs	r6, #0
 8018adc:	e7b3      	b.n	8018a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018ade:	4684      	mov	ip, r0
 8018ae0:	b16c      	cbz	r4, 8018afe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018ae2:	42b8      	cmp	r0, r7
 8018ae4:	dd00      	ble.n	8018ae8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018ae6:	b2b8      	uxth	r0, r7
 8018ae8:	2400      	movs	r4, #0
 8018aea:	e003      	b.n	8018af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018aec:	f04f 0c01 	mov.w	ip, #1
 8018af0:	2400      	movs	r4, #0
 8018af2:	4660      	mov	r0, ip
 8018af4:	4626      	mov	r6, r4
 8018af6:	46a0      	mov	r8, r4
 8018af8:	e7a5      	b.n	8018a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018afa:	2400      	movs	r4, #0
 8018afc:	e7ed      	b.n	8018ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018afe:	4626      	mov	r6, r4
 8018b00:	46a0      	mov	r8, r4
 8018b02:	e7a0      	b.n	8018a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018b04:	2900      	cmp	r1, #0
 8018b06:	d0b0      	beq.n	8018a6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018b08:	2720      	movs	r7, #32
 8018b0a:	682e      	ldr	r6, [r5, #0]
 8018b0c:	2900      	cmp	r1, #0
 8018b0e:	d0ac      	beq.n	8018a6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018b10:	3901      	subs	r1, #1
 8018b12:	4296      	cmp	r6, r2
 8018b14:	b289      	uxth	r1, r1
 8018b16:	daa7      	bge.n	8018a68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018b18:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018b1c:	682b      	ldr	r3, [r5, #0]
 8018b1e:	3301      	adds	r3, #1
 8018b20:	602b      	str	r3, [r5, #0]
 8018b22:	e7f2      	b.n	8018b0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018b24:	b188      	cbz	r0, 8018b4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018b26:	682b      	ldr	r3, [r5, #0]
 8018b28:	3801      	subs	r0, #1
 8018b2a:	429a      	cmp	r2, r3
 8018b2c:	b280      	uxth	r0, r0
 8018b2e:	dd0c      	ble.n	8018b4a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018b30:	f8db 3000 	ldr.w	r3, [fp]
 8018b34:	1c9c      	adds	r4, r3, #2
 8018b36:	f8cb 4000 	str.w	r4, [fp]
 8018b3a:	881c      	ldrh	r4, [r3, #0]
 8018b3c:	682b      	ldr	r3, [r5, #0]
 8018b3e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018b42:	682b      	ldr	r3, [r5, #0]
 8018b44:	3301      	adds	r3, #1
 8018b46:	602b      	str	r3, [r5, #0]
 8018b48:	e7ec      	b.n	8018b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018b4a:	2620      	movs	r6, #32
 8018b4c:	b151      	cbz	r1, 8018b64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018b4e:	6828      	ldr	r0, [r5, #0]
 8018b50:	3901      	subs	r1, #1
 8018b52:	4282      	cmp	r2, r0
 8018b54:	b289      	uxth	r1, r1
 8018b56:	dd05      	ble.n	8018b64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018b58:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018b5c:	682b      	ldr	r3, [r5, #0]
 8018b5e:	3301      	adds	r3, #1
 8018b60:	602b      	str	r3, [r5, #0]
 8018b62:	e7f3      	b.n	8018b4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018b64:	b005      	add	sp, #20
 8018b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018b6a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018b6e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018b72:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018b76:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018b7a:	2400      	movs	r4, #0
 8018b7c:	8014      	strh	r4, [r2, #0]
 8018b7e:	701c      	strb	r4, [r3, #0]
 8018b80:	f888 4000 	strb.w	r4, [r8]
 8018b84:	f88c 4000 	strb.w	r4, [ip]
 8018b88:	f88e 4000 	strb.w	r4, [lr]
 8018b8c:	703c      	strb	r4, [r7, #0]
 8018b8e:	6804      	ldr	r4, [r0, #0]
 8018b90:	b1a4      	cbz	r4, 8018bbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018b92:	8824      	ldrh	r4, [r4, #0]
 8018b94:	f04f 0901 	mov.w	r9, #1
 8018b98:	b314      	cbz	r4, 8018be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018b9a:	2c2b      	cmp	r4, #43	; 0x2b
 8018b9c:	d001      	beq.n	8018ba2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018b9e:	2c20      	cmp	r4, #32
 8018ba0:	d110      	bne.n	8018bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018ba2:	8014      	strh	r4, [r2, #0]
 8018ba4:	6804      	ldr	r4, [r0, #0]
 8018ba6:	b10c      	cbz	r4, 8018bac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018ba8:	3402      	adds	r4, #2
 8018baa:	6004      	str	r4, [r0, #0]
 8018bac:	680c      	ldr	r4, [r1, #0]
 8018bae:	b10c      	cbz	r4, 8018bb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018bb0:	3401      	adds	r4, #1
 8018bb2:	600c      	str	r4, [r1, #0]
 8018bb4:	6804      	ldr	r4, [r0, #0]
 8018bb6:	b17c      	cbz	r4, 8018bd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018bb8:	8824      	ldrh	r4, [r4, #0]
 8018bba:	e7ed      	b.n	8018b98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018bbc:	680c      	ldr	r4, [r1, #0]
 8018bbe:	b17c      	cbz	r4, 8018be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018bc0:	7824      	ldrb	r4, [r4, #0]
 8018bc2:	e7e7      	b.n	8018b94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018bc4:	2c2d      	cmp	r4, #45	; 0x2d
 8018bc6:	d102      	bne.n	8018bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018bc8:	f883 9000 	strb.w	r9, [r3]
 8018bcc:	e7ea      	b.n	8018ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018bce:	2c23      	cmp	r4, #35	; 0x23
 8018bd0:	d107      	bne.n	8018be2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018bd2:	f888 9000 	strb.w	r9, [r8]
 8018bd6:	e7e5      	b.n	8018ba4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018bd8:	680c      	ldr	r4, [r1, #0]
 8018bda:	b10c      	cbz	r4, 8018be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018bdc:	7824      	ldrb	r4, [r4, #0]
 8018bde:	e7db      	b.n	8018b98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018be0:	2400      	movs	r4, #0
 8018be2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018be6:	2b09      	cmp	r3, #9
 8018be8:	d901      	bls.n	8018bee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018bea:	2c2a      	cmp	r4, #42	; 0x2a
 8018bec:	d122      	bne.n	8018c34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018bee:	2301      	movs	r3, #1
 8018bf0:	2c30      	cmp	r4, #48	; 0x30
 8018bf2:	f88e 3000 	strb.w	r3, [lr]
 8018bf6:	d10d      	bne.n	8018c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018bf8:	f88c 3000 	strb.w	r3, [ip]
 8018bfc:	6803      	ldr	r3, [r0, #0]
 8018bfe:	b10b      	cbz	r3, 8018c04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018c00:	3302      	adds	r3, #2
 8018c02:	6003      	str	r3, [r0, #0]
 8018c04:	680b      	ldr	r3, [r1, #0]
 8018c06:	b10b      	cbz	r3, 8018c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018c08:	3301      	adds	r3, #1
 8018c0a:	600b      	str	r3, [r1, #0]
 8018c0c:	6803      	ldr	r3, [r0, #0]
 8018c0e:	2b00      	cmp	r3, #0
 8018c10:	d02f      	beq.n	8018c72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018c12:	881c      	ldrh	r4, [r3, #0]
 8018c14:	2c2a      	cmp	r4, #42	; 0x2a
 8018c16:	d135      	bne.n	8018c84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018c18:	f04f 33ff 	mov.w	r3, #4294967295
 8018c1c:	6033      	str	r3, [r6, #0]
 8018c1e:	6803      	ldr	r3, [r0, #0]
 8018c20:	b10b      	cbz	r3, 8018c26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018c22:	3302      	adds	r3, #2
 8018c24:	6003      	str	r3, [r0, #0]
 8018c26:	680b      	ldr	r3, [r1, #0]
 8018c28:	b10b      	cbz	r3, 8018c2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018c2a:	3301      	adds	r3, #1
 8018c2c:	600b      	str	r3, [r1, #0]
 8018c2e:	6803      	ldr	r3, [r0, #0]
 8018c30:	b31b      	cbz	r3, 8018c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018c32:	881c      	ldrh	r4, [r3, #0]
 8018c34:	2c2e      	cmp	r4, #46	; 0x2e
 8018c36:	d11a      	bne.n	8018c6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018c38:	2301      	movs	r3, #1
 8018c3a:	703b      	strb	r3, [r7, #0]
 8018c3c:	6803      	ldr	r3, [r0, #0]
 8018c3e:	b10b      	cbz	r3, 8018c44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018c40:	3302      	adds	r3, #2
 8018c42:	6003      	str	r3, [r0, #0]
 8018c44:	680b      	ldr	r3, [r1, #0]
 8018c46:	b10b      	cbz	r3, 8018c4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018c48:	3301      	adds	r3, #1
 8018c4a:	600b      	str	r3, [r1, #0]
 8018c4c:	6803      	ldr	r3, [r0, #0]
 8018c4e:	2b00      	cmp	r3, #0
 8018c50:	d036      	beq.n	8018cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018c52:	881b      	ldrh	r3, [r3, #0]
 8018c54:	2b2a      	cmp	r3, #42	; 0x2a
 8018c56:	d137      	bne.n	8018cc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018c58:	f04f 33ff 	mov.w	r3, #4294967295
 8018c5c:	602b      	str	r3, [r5, #0]
 8018c5e:	6803      	ldr	r3, [r0, #0]
 8018c60:	b10b      	cbz	r3, 8018c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018c62:	3302      	adds	r3, #2
 8018c64:	6003      	str	r3, [r0, #0]
 8018c66:	680b      	ldr	r3, [r1, #0]
 8018c68:	b10b      	cbz	r3, 8018c6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018c6a:	3301      	adds	r3, #1
 8018c6c:	600b      	str	r3, [r1, #0]
 8018c6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018c72:	680c      	ldr	r4, [r1, #0]
 8018c74:	b134      	cbz	r4, 8018c84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018c76:	7824      	ldrb	r4, [r4, #0]
 8018c78:	e7cc      	b.n	8018c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018c7a:	680b      	ldr	r3, [r1, #0]
 8018c7c:	2b00      	cmp	r3, #0
 8018c7e:	d0f6      	beq.n	8018c6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018c80:	781c      	ldrb	r4, [r3, #0]
 8018c82:	e7d7      	b.n	8018c34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018c84:	2300      	movs	r3, #0
 8018c86:	6033      	str	r3, [r6, #0]
 8018c88:	220a      	movs	r2, #10
 8018c8a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018c8e:	fa1f f38c 	uxth.w	r3, ip
 8018c92:	2b09      	cmp	r3, #9
 8018c94:	d8ce      	bhi.n	8018c34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018c96:	6833      	ldr	r3, [r6, #0]
 8018c98:	fb02 c303 	mla	r3, r2, r3, ip
 8018c9c:	6033      	str	r3, [r6, #0]
 8018c9e:	6803      	ldr	r3, [r0, #0]
 8018ca0:	b10b      	cbz	r3, 8018ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018ca2:	3302      	adds	r3, #2
 8018ca4:	6003      	str	r3, [r0, #0]
 8018ca6:	680b      	ldr	r3, [r1, #0]
 8018ca8:	b10b      	cbz	r3, 8018cae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018caa:	3301      	adds	r3, #1
 8018cac:	600b      	str	r3, [r1, #0]
 8018cae:	6803      	ldr	r3, [r0, #0]
 8018cb0:	b10b      	cbz	r3, 8018cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018cb2:	881c      	ldrh	r4, [r3, #0]
 8018cb4:	e7e9      	b.n	8018c8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018cb6:	680c      	ldr	r4, [r1, #0]
 8018cb8:	2c00      	cmp	r4, #0
 8018cba:	d0e6      	beq.n	8018c8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018cbc:	7824      	ldrb	r4, [r4, #0]
 8018cbe:	e7e4      	b.n	8018c8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018cc0:	680b      	ldr	r3, [r1, #0]
 8018cc2:	b10b      	cbz	r3, 8018cc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018cc4:	781b      	ldrb	r3, [r3, #0]
 8018cc6:	e7c5      	b.n	8018c54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018cc8:	2200      	movs	r2, #0
 8018cca:	602a      	str	r2, [r5, #0]
 8018ccc:	240a      	movs	r4, #10
 8018cce:	3b30      	subs	r3, #48	; 0x30
 8018cd0:	b29e      	uxth	r6, r3
 8018cd2:	2e09      	cmp	r6, #9
 8018cd4:	682a      	ldr	r2, [r5, #0]
 8018cd6:	d813      	bhi.n	8018d00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018cd8:	fb04 3302 	mla	r3, r4, r2, r3
 8018cdc:	602b      	str	r3, [r5, #0]
 8018cde:	6803      	ldr	r3, [r0, #0]
 8018ce0:	b10b      	cbz	r3, 8018ce6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018ce2:	3302      	adds	r3, #2
 8018ce4:	6003      	str	r3, [r0, #0]
 8018ce6:	680b      	ldr	r3, [r1, #0]
 8018ce8:	b10b      	cbz	r3, 8018cee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018cea:	3301      	adds	r3, #1
 8018cec:	600b      	str	r3, [r1, #0]
 8018cee:	6803      	ldr	r3, [r0, #0]
 8018cf0:	b10b      	cbz	r3, 8018cf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018cf2:	881b      	ldrh	r3, [r3, #0]
 8018cf4:	e7eb      	b.n	8018cce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018cf6:	680b      	ldr	r3, [r1, #0]
 8018cf8:	2b00      	cmp	r3, #0
 8018cfa:	d0e8      	beq.n	8018cce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018cfc:	781b      	ldrb	r3, [r3, #0]
 8018cfe:	e7e6      	b.n	8018cce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018d00:	2a06      	cmp	r2, #6
 8018d02:	bfa8      	it	ge
 8018d04:	2206      	movge	r2, #6
 8018d06:	602a      	str	r2, [r5, #0]
 8018d08:	e7b1      	b.n	8018c6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018d0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d0e:	b0a3      	sub	sp, #140	; 0x8c
 8018d10:	2600      	movs	r6, #0
 8018d12:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018d16:	4607      	mov	r7, r0
 8018d18:	4688      	mov	r8, r1
 8018d1a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018d1e:	4631      	mov	r1, r6
 8018d20:	2242      	movs	r2, #66	; 0x42
 8018d22:	4648      	mov	r0, r9
 8018d24:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018d26:	960d      	str	r6, [sp, #52]	; 0x34
 8018d28:	f012 f955 	bl	802afd6 <memset>
 8018d2c:	b15f      	cbz	r7, 8018d46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018d2e:	f108 3aff 	add.w	sl, r8, #4294967295
 8018d32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018d34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018d36:	b152      	cbz	r2, 8018d4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018d38:	8812      	ldrh	r2, [r2, #0]
 8018d3a:	b10a      	cbz	r2, 8018d40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018d3c:	459a      	cmp	sl, r3
 8018d3e:	dc2e      	bgt.n	8018d9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018d40:	2200      	movs	r2, #0
 8018d42:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018d46:	4638      	mov	r0, r7
 8018d48:	b023      	add	sp, #140	; 0x8c
 8018d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d4e:	9a08      	ldr	r2, [sp, #32]
 8018d50:	2a00      	cmp	r2, #0
 8018d52:	d0f5      	beq.n	8018d40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018d54:	7812      	ldrb	r2, [r2, #0]
 8018d56:	e7f0      	b.n	8018d3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018d58:	2d00      	cmp	r5, #0
 8018d5a:	d0ea      	beq.n	8018d32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d5c:	782a      	ldrb	r2, [r5, #0]
 8018d5e:	b142      	cbz	r2, 8018d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018d60:	2a25      	cmp	r2, #37	; 0x25
 8018d62:	d001      	beq.n	8018d68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018d64:	459a      	cmp	sl, r3
 8018d66:	dc08      	bgt.n	8018d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018d68:	f1bb 0f00 	cmp.w	fp, #0
 8018d6c:	d121      	bne.n	8018db2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018d6e:	2d00      	cmp	r5, #0
 8018d70:	d0df      	beq.n	8018d32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d72:	782a      	ldrb	r2, [r5, #0]
 8018d74:	f04f 0b00 	mov.w	fp, #0
 8018d78:	e01d      	b.n	8018db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018d7a:	f1bb 0f00 	cmp.w	fp, #0
 8018d7e:	d078      	beq.n	8018e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018d80:	f8bb 2000 	ldrh.w	r2, [fp]
 8018d84:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018d88:	f1bb 0f00 	cmp.w	fp, #0
 8018d8c:	d002      	beq.n	8018d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018d8e:	f10b 0202 	add.w	r2, fp, #2
 8018d92:	9209      	str	r2, [sp, #36]	; 0x24
 8018d94:	b10d      	cbz	r5, 8018d9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018d96:	3501      	adds	r5, #1
 8018d98:	9508      	str	r5, [sp, #32]
 8018d9a:	3301      	adds	r3, #1
 8018d9c:	930d      	str	r3, [sp, #52]	; 0x34
 8018d9e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018da2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018da4:	f1bb 0f00 	cmp.w	fp, #0
 8018da8:	d0d6      	beq.n	8018d58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018daa:	f8bb 2000 	ldrh.w	r2, [fp]
 8018dae:	2a00      	cmp	r2, #0
 8018db0:	d1d6      	bne.n	8018d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018db2:	f8bb 2000 	ldrh.w	r2, [fp]
 8018db6:	2a00      	cmp	r2, #0
 8018db8:	d0bb      	beq.n	8018d32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018dba:	459a      	cmp	sl, r3
 8018dbc:	ddb9      	ble.n	8018d32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018dbe:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018dc2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018dc6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018dca:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018dce:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018dd2:	960e      	str	r6, [sp, #56]	; 0x38
 8018dd4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018dd8:	960f      	str	r6, [sp, #60]	; 0x3c
 8018dda:	f1bb 0f00 	cmp.w	fp, #0
 8018dde:	d002      	beq.n	8018de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018de0:	f10b 0302 	add.w	r3, fp, #2
 8018de4:	9309      	str	r3, [sp, #36]	; 0x24
 8018de6:	b10d      	cbz	r5, 8018dec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018de8:	1c6b      	adds	r3, r5, #1
 8018dea:	9308      	str	r3, [sp, #32]
 8018dec:	ab0f      	add	r3, sp, #60	; 0x3c
 8018dee:	9305      	str	r3, [sp, #20]
 8018df0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018df4:	9304      	str	r3, [sp, #16]
 8018df6:	ab0e      	add	r3, sp, #56	; 0x38
 8018df8:	9303      	str	r3, [sp, #12]
 8018dfa:	ab0c      	add	r3, sp, #48	; 0x30
 8018dfc:	9302      	str	r3, [sp, #8]
 8018dfe:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018e02:	9301      	str	r3, [sp, #4]
 8018e04:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018e08:	9300      	str	r3, [sp, #0]
 8018e0a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018e0e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018e12:	a908      	add	r1, sp, #32
 8018e14:	a809      	add	r0, sp, #36	; 0x24
 8018e16:	f7ff fea8 	bl	8018b6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018e1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e1c:	2b00      	cmp	r3, #0
 8018e1e:	bfbe      	ittt	lt
 8018e20:	6823      	ldrlt	r3, [r4, #0]
 8018e22:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018e26:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018e28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018e2a:	bfb8      	it	lt
 8018e2c:	3404      	addlt	r4, #4
 8018e2e:	2b00      	cmp	r3, #0
 8018e30:	bfb8      	it	lt
 8018e32:	6823      	ldrlt	r3, [r4, #0]
 8018e34:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018e38:	bfbe      	ittt	lt
 8018e3a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018e3e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018e40:	3404      	addlt	r4, #4
 8018e42:	b1d9      	cbz	r1, 8018e7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018e44:	880b      	ldrh	r3, [r1, #0]
 8018e46:	2b69      	cmp	r3, #105	; 0x69
 8018e48:	d01f      	beq.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018e4a:	d82f      	bhi.n	8018eac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018e4c:	2b58      	cmp	r3, #88	; 0x58
 8018e4e:	d01c      	beq.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018e50:	d818      	bhi.n	8018e84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018e52:	2b25      	cmp	r3, #37	; 0x25
 8018e54:	d034      	beq.n	8018ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018e56:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018e5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018e5c:	f1bb 0f00 	cmp.w	fp, #0
 8018e60:	f000 80b8 	beq.w	8018fd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018e64:	f8bb 5000 	ldrh.w	r5, [fp]
 8018e68:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018e6c:	3301      	adds	r3, #1
 8018e6e:	930d      	str	r3, [sp, #52]	; 0x34
 8018e70:	e029      	b.n	8018ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018e72:	b10d      	cbz	r5, 8018e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018e74:	782a      	ldrb	r2, [r5, #0]
 8018e76:	e785      	b.n	8018d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018e78:	462a      	mov	r2, r5
 8018e7a:	e783      	b.n	8018d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018e7c:	2a00      	cmp	r2, #0
 8018e7e:	d0ea      	beq.n	8018e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018e80:	7813      	ldrb	r3, [r2, #0]
 8018e82:	e7e0      	b.n	8018e46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018e84:	3b63      	subs	r3, #99	; 0x63
 8018e86:	2b01      	cmp	r3, #1
 8018e88:	d8e5      	bhi.n	8018e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018e8a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018e8e:	b329      	cbz	r1, 8018edc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018e90:	880b      	ldrh	r3, [r1, #0]
 8018e92:	2b69      	cmp	r3, #105	; 0x69
 8018e94:	d063      	beq.n	8018f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018e96:	d825      	bhi.n	8018ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018e98:	2b63      	cmp	r3, #99	; 0x63
 8018e9a:	d038      	beq.n	8018f0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018e9c:	2b64      	cmp	r3, #100	; 0x64
 8018e9e:	d05e      	beq.n	8018f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018ea0:	2b58      	cmp	r3, #88	; 0x58
 8018ea2:	d07b      	beq.n	8018f9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018ea4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018ea8:	4625      	mov	r5, r4
 8018eaa:	e036      	b.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018eac:	2b73      	cmp	r3, #115	; 0x73
 8018eae:	d0ec      	beq.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018eb0:	d802      	bhi.n	8018eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018eb2:	2b6f      	cmp	r3, #111	; 0x6f
 8018eb4:	d1cf      	bne.n	8018e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018eb6:	e7e8      	b.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018eb8:	2b75      	cmp	r3, #117	; 0x75
 8018eba:	d0e6      	beq.n	8018e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018ebc:	2b78      	cmp	r3, #120	; 0x78
 8018ebe:	e7f9      	b.n	8018eb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018ec0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018ec2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018ec6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ec8:	b10b      	cbz	r3, 8018ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018eca:	3302      	adds	r3, #2
 8018ecc:	9309      	str	r3, [sp, #36]	; 0x24
 8018ece:	9b08      	ldr	r3, [sp, #32]
 8018ed0:	2b00      	cmp	r3, #0
 8018ed2:	f43f af2e 	beq.w	8018d32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ed6:	3301      	adds	r3, #1
 8018ed8:	9308      	str	r3, [sp, #32]
 8018eda:	e72a      	b.n	8018d32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018edc:	2a00      	cmp	r2, #0
 8018ede:	d0e1      	beq.n	8018ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018ee0:	7813      	ldrb	r3, [r2, #0]
 8018ee2:	e7d6      	b.n	8018e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018ee4:	2b73      	cmp	r3, #115	; 0x73
 8018ee6:	d036      	beq.n	8018f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018ee8:	d807      	bhi.n	8018efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018eea:	2b6f      	cmp	r3, #111	; 0x6f
 8018eec:	d1da      	bne.n	8018ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018eee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018ef0:	1d25      	adds	r5, r4, #4
 8018ef2:	eba8 0202 	sub.w	r2, r8, r2
 8018ef6:	2308      	movs	r3, #8
 8018ef8:	e04a      	b.n	8018f90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018efa:	2b75      	cmp	r3, #117	; 0x75
 8018efc:	d043      	beq.n	8018f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018efe:	2b78      	cmp	r3, #120	; 0x78
 8018f00:	d1d0      	bne.n	8018ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018f02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f04:	1d25      	adds	r5, r4, #4
 8018f06:	eba8 0202 	sub.w	r2, r8, r2
 8018f0a:	2310      	movs	r3, #16
 8018f0c:	e040      	b.n	8018f90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018f0e:	6823      	ldr	r3, [r4, #0]
 8018f10:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018f14:	1d25      	adds	r5, r4, #4
 8018f16:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018f1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f1c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018f20:	2b00      	cmp	r3, #0
 8018f22:	d052      	beq.n	8018fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018f24:	881a      	ldrh	r2, [r3, #0]
 8018f26:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018f2a:	a80d      	add	r0, sp, #52	; 0x34
 8018f2c:	9005      	str	r0, [sp, #20]
 8018f2e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018f32:	9004      	str	r0, [sp, #16]
 8018f34:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018f36:	9003      	str	r0, [sp, #12]
 8018f38:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018f3c:	9002      	str	r0, [sp, #8]
 8018f3e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018f40:	9001      	str	r0, [sp, #4]
 8018f42:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018f46:	9000      	str	r0, [sp, #0]
 8018f48:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018f4c:	a810      	add	r0, sp, #64	; 0x40
 8018f4e:	f7ff fd49 	bl	80189e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018f52:	462c      	mov	r4, r5
 8018f54:	e7b7      	b.n	8018ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018f56:	6823      	ldr	r3, [r4, #0]
 8018f58:	1d25      	adds	r5, r4, #4
 8018f5a:	9310      	str	r3, [sp, #64]	; 0x40
 8018f5c:	e7dd      	b.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f5e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f60:	6820      	ldr	r0, [r4, #0]
 8018f62:	eba8 0202 	sub.w	r2, r8, r2
 8018f66:	230a      	movs	r3, #10
 8018f68:	b292      	uxth	r2, r2
 8018f6a:	4649      	mov	r1, r9
 8018f6c:	f7ff fce4 	bl	8018938 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018f70:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018f74:	2b2d      	cmp	r3, #45	; 0x2d
 8018f76:	f104 0504 	add.w	r5, r4, #4
 8018f7a:	d1ce      	bne.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f7c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018f80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f82:	3302      	adds	r3, #2
 8018f84:	e7e9      	b.n	8018f5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8018f86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f88:	1d25      	adds	r5, r4, #4
 8018f8a:	eba8 0202 	sub.w	r2, r8, r2
 8018f8e:	230a      	movs	r3, #10
 8018f90:	b292      	uxth	r2, r2
 8018f92:	4649      	mov	r1, r9
 8018f94:	6820      	ldr	r0, [r4, #0]
 8018f96:	f7ff fcfb 	bl	8018990 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018f9a:	e7be      	b.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018f9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f9e:	6820      	ldr	r0, [r4, #0]
 8018fa0:	eba8 0202 	sub.w	r2, r8, r2
 8018fa4:	b292      	uxth	r2, r2
 8018fa6:	2310      	movs	r3, #16
 8018fa8:	4649      	mov	r1, r9
 8018faa:	f7ff fcf1 	bl	8018990 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018fae:	1d25      	adds	r5, r4, #4
 8018fb0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018fb4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018fb8:	2b00      	cmp	r3, #0
 8018fba:	d0ae      	beq.n	8018f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018fbc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018fc0:	2919      	cmp	r1, #25
 8018fc2:	d8f7      	bhi.n	8018fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018fc4:	3b20      	subs	r3, #32
 8018fc6:	8013      	strh	r3, [r2, #0]
 8018fc8:	e7f4      	b.n	8018fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018fca:	9a08      	ldr	r2, [sp, #32]
 8018fcc:	2a00      	cmp	r2, #0
 8018fce:	d0aa      	beq.n	8018f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018fd0:	7812      	ldrb	r2, [r2, #0]
 8018fd2:	e7a8      	b.n	8018f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018fd4:	2d00      	cmp	r5, #0
 8018fd6:	f43f af47 	beq.w	8018e68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018fda:	782d      	ldrb	r5, [r5, #0]
 8018fdc:	e744      	b.n	8018e68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018fde:	b507      	push	{r0, r1, r2, lr}
 8018fe0:	9300      	str	r3, [sp, #0]
 8018fe2:	4613      	mov	r3, r2
 8018fe4:	2200      	movs	r2, #0
 8018fe6:	f7ff fe90 	bl	8018d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018fea:	b003      	add	sp, #12
 8018fec:	f85d fb04 	ldr.w	pc, [sp], #4

08018ff0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018ff0:	b40c      	push	{r2, r3}
 8018ff2:	b507      	push	{r0, r1, r2, lr}
 8018ff4:	ab04      	add	r3, sp, #16
 8018ff6:	f853 2b04 	ldr.w	r2, [r3], #4
 8018ffa:	9301      	str	r3, [sp, #4]
 8018ffc:	f7ff ffef 	bl	8018fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8019000:	b003      	add	sp, #12
 8019002:	f85d eb04 	ldr.w	lr, [sp], #4
 8019006:	b002      	add	sp, #8
 8019008:	4770      	bx	lr
	...

0801900c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801900c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019010:	b0c5      	sub	sp, #276	; 0x114
 8019012:	2400      	movs	r4, #0
 8019014:	af11      	add	r7, sp, #68	; 0x44
 8019016:	4606      	mov	r6, r0
 8019018:	468a      	mov	sl, r1
 801901a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801901e:	4621      	mov	r1, r4
 8019020:	22c8      	movs	r2, #200	; 0xc8
 8019022:	4638      	mov	r0, r7
 8019024:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8019028:	940d      	str	r4, [sp, #52]	; 0x34
 801902a:	f011 ffd4 	bl	802afd6 <memset>
 801902e:	b16e      	cbz	r6, 801904c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8019030:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 80192d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019034:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019036:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019038:	b162      	cbz	r2, 8019054 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801903a:	8812      	ldrh	r2, [r2, #0]
 801903c:	b11a      	cbz	r2, 8019046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801903e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8019042:	4299      	cmp	r1, r3
 8019044:	dc2e      	bgt.n	80190a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8019046:	2200      	movs	r2, #0
 8019048:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801904c:	4630      	mov	r0, r6
 801904e:	b045      	add	sp, #276	; 0x114
 8019050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019054:	9a08      	ldr	r2, [sp, #32]
 8019056:	2a00      	cmp	r2, #0
 8019058:	d0f5      	beq.n	8019046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801905a:	7812      	ldrb	r2, [r2, #0]
 801905c:	e7ee      	b.n	801903c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801905e:	2d00      	cmp	r5, #0
 8019060:	d0e8      	beq.n	8019034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019062:	782a      	ldrb	r2, [r5, #0]
 8019064:	b142      	cbz	r2, 8019078 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8019066:	2a25      	cmp	r2, #37	; 0x25
 8019068:	d001      	beq.n	801906e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801906a:	4299      	cmp	r1, r3
 801906c:	dc08      	bgt.n	8019080 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801906e:	f1b8 0f00 	cmp.w	r8, #0
 8019072:	d121      	bne.n	80190b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019074:	2d00      	cmp	r5, #0
 8019076:	d0dd      	beq.n	8019034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019078:	782a      	ldrb	r2, [r5, #0]
 801907a:	f04f 0800 	mov.w	r8, #0
 801907e:	e01d      	b.n	80190bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8019080:	f1b8 0f00 	cmp.w	r8, #0
 8019084:	d07f      	beq.n	8019186 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019086:	f8b8 2000 	ldrh.w	r2, [r8]
 801908a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801908e:	f1b8 0f00 	cmp.w	r8, #0
 8019092:	d002      	beq.n	801909a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019094:	f108 0202 	add.w	r2, r8, #2
 8019098:	9209      	str	r2, [sp, #36]	; 0x24
 801909a:	b10d      	cbz	r5, 80190a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801909c:	3501      	adds	r5, #1
 801909e:	9508      	str	r5, [sp, #32]
 80190a0:	3301      	adds	r3, #1
 80190a2:	930d      	str	r3, [sp, #52]	; 0x34
 80190a4:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80190a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80190aa:	f1b8 0f00 	cmp.w	r8, #0
 80190ae:	d0d6      	beq.n	801905e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80190b0:	f8b8 2000 	ldrh.w	r2, [r8]
 80190b4:	2a00      	cmp	r2, #0
 80190b6:	d1d6      	bne.n	8019066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80190b8:	f8b8 2000 	ldrh.w	r2, [r8]
 80190bc:	2a00      	cmp	r2, #0
 80190be:	d0b9      	beq.n	8019034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190c0:	4299      	cmp	r1, r3
 80190c2:	ddb7      	ble.n	8019034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190c4:	2300      	movs	r3, #0
 80190c6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80190ca:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80190ce:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 80190d2:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 80190d6:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 80190da:	930e      	str	r3, [sp, #56]	; 0x38
 80190dc:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80190e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80190e2:	f1b8 0f00 	cmp.w	r8, #0
 80190e6:	d002      	beq.n	80190ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80190e8:	f108 0302 	add.w	r3, r8, #2
 80190ec:	9309      	str	r3, [sp, #36]	; 0x24
 80190ee:	b10d      	cbz	r5, 80190f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80190f0:	1c6b      	adds	r3, r5, #1
 80190f2:	9308      	str	r3, [sp, #32]
 80190f4:	ab0f      	add	r3, sp, #60	; 0x3c
 80190f6:	9305      	str	r3, [sp, #20]
 80190f8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80190fc:	9304      	str	r3, [sp, #16]
 80190fe:	ab0e      	add	r3, sp, #56	; 0x38
 8019100:	9303      	str	r3, [sp, #12]
 8019102:	ab0c      	add	r3, sp, #48	; 0x30
 8019104:	9302      	str	r3, [sp, #8]
 8019106:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801910a:	9301      	str	r3, [sp, #4]
 801910c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019110:	9300      	str	r3, [sp, #0]
 8019112:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019116:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801911a:	a908      	add	r1, sp, #32
 801911c:	a809      	add	r0, sp, #36	; 0x24
 801911e:	f7ff fd24 	bl	8018b6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019122:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019124:	2b00      	cmp	r3, #0
 8019126:	da0b      	bge.n	8019140 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019128:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801912c:	edd3 7a00 	vldr	s15, [r3]
 8019130:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019134:	3401      	adds	r4, #1
 8019136:	ee17 3a90 	vmov	r3, s15
 801913a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801913e:	930e      	str	r3, [sp, #56]	; 0x38
 8019140:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019142:	2b00      	cmp	r3, #0
 8019144:	da0b      	bge.n	801915e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019146:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801914a:	edd3 7a00 	vldr	s15, [r3]
 801914e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019152:	3401      	adds	r4, #1
 8019154:	ee17 3a90 	vmov	r3, s15
 8019158:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801915c:	930f      	str	r3, [sp, #60]	; 0x3c
 801915e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019160:	b1b3      	cbz	r3, 8019190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8019162:	881a      	ldrh	r2, [r3, #0]
 8019164:	2a25      	cmp	r2, #37	; 0x25
 8019166:	d018      	beq.n	801919a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019168:	2a66      	cmp	r2, #102	; 0x66
 801916a:	d01c      	beq.n	80191a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801916c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019170:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019172:	f1b8 0f00 	cmp.w	r8, #0
 8019176:	f000 8121 	beq.w	80193bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801917a:	f8b8 5000 	ldrh.w	r5, [r8]
 801917e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019182:	3301      	adds	r3, #1
 8019184:	e00d      	b.n	80191a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019186:	b10d      	cbz	r5, 801918c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019188:	782a      	ldrb	r2, [r5, #0]
 801918a:	e77e      	b.n	801908a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801918c:	462a      	mov	r2, r5
 801918e:	e77c      	b.n	801908a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019190:	9b08      	ldr	r3, [sp, #32]
 8019192:	2b00      	cmp	r3, #0
 8019194:	d0ea      	beq.n	801916c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019196:	781a      	ldrb	r2, [r3, #0]
 8019198:	e7e4      	b.n	8019164 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801919a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801919c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80191a0:	3302      	adds	r3, #2
 80191a2:	930d      	str	r3, [sp, #52]	; 0x34
 80191a4:	e041      	b.n	801922a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80191a6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80191aa:	edd3 7a00 	vldr	s15, [r3]
 80191ae:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80191b2:	9710      	str	r7, [sp, #64]	; 0x40
 80191b4:	3401      	adds	r4, #1
 80191b6:	b923      	cbnz	r3, 80191c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80191b8:	2301      	movs	r3, #1
 80191ba:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80191be:	2306      	movs	r3, #6
 80191c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80191c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80191c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191ca:	bf48      	it	mi
 80191cc:	eef1 7a67 	vnegmi.f32	s15, s15
 80191d0:	eeb0 7ae7 	vabs.f32	s14, s15
 80191d4:	bf48      	it	mi
 80191d6:	232d      	movmi	r3, #45	; 0x2d
 80191d8:	eeb4 7a45 	vcmp.f32	s14, s10
 80191dc:	bf48      	it	mi
 80191de:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 80191e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191e6:	dd2b      	ble.n	8019240 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80191e8:	4b3b      	ldr	r3, [pc, #236]	; (80192d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80191ea:	9311      	str	r3, [sp, #68]	; 0x44
 80191ec:	2366      	movs	r3, #102	; 0x66
 80191ee:	9312      	str	r3, [sp, #72]	; 0x48
 80191f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191f2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80191f6:	2b00      	cmp	r3, #0
 80191f8:	f000 80da 	beq.w	80193b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80191fc:	881a      	ldrh	r2, [r3, #0]
 80191fe:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019202:	a80d      	add	r0, sp, #52	; 0x34
 8019204:	9005      	str	r0, [sp, #20]
 8019206:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801920a:	9004      	str	r0, [sp, #16]
 801920c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801920e:	9003      	str	r0, [sp, #12]
 8019210:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019214:	9002      	str	r0, [sp, #8]
 8019216:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019218:	9001      	str	r0, [sp, #4]
 801921a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801921e:	9000      	str	r0, [sp, #0]
 8019220:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019224:	a810      	add	r0, sp, #64	; 0x40
 8019226:	f7ff fbdd 	bl	80189e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801922a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801922c:	b10b      	cbz	r3, 8019232 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801922e:	3302      	adds	r3, #2
 8019230:	9309      	str	r3, [sp, #36]	; 0x24
 8019232:	9b08      	ldr	r3, [sp, #32]
 8019234:	2b00      	cmp	r3, #0
 8019236:	f43f aefd 	beq.w	8019034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801923a:	3301      	adds	r3, #1
 801923c:	9308      	str	r3, [sp, #32]
 801923e:	e6f9      	b.n	8019034 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019240:	eef4 7a67 	vcmp.f32	s15, s15
 8019244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019248:	d63a      	bvs.n	80192c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801924a:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801924e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019252:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019256:	eeb0 6a67 	vmov.f32	s12, s15
 801925a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801925e:	eef0 5a47 	vmov.f32	s11, s14
 8019262:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019266:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801926a:	da2d      	bge.n	80192c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801926c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801926e:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019272:	2100      	movs	r1, #0
 8019274:	eef0 4a46 	vmov.f32	s9, s12
 8019278:	ebaa 0202 	sub.w	r2, sl, r2
 801927c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019284:	b28d      	uxth	r5, r1
 8019286:	db2c      	blt.n	80192e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019288:	1a53      	subs	r3, r2, r1
 801928a:	2b00      	cmp	r3, #0
 801928c:	dd29      	ble.n	80192e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801928e:	3101      	adds	r1, #1
 8019290:	2964      	cmp	r1, #100	; 0x64
 8019292:	d025      	beq.n	80192e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019294:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019298:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801929c:	ee17 3a10 	vmov	r3, s14
 80192a0:	2b09      	cmp	r3, #9
 80192a2:	bfa8      	it	ge
 80192a4:	2309      	movge	r3, #9
 80192a6:	ee07 3a10 	vmov	s14, r3
 80192aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80192ae:	f103 0030 	add.w	r0, r3, #48	; 0x30
 80192b2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80192b6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80192ba:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80192be:	e7dd      	b.n	801927c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80192c0:	4b06      	ldr	r3, [pc, #24]	; (80192dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80192c2:	9311      	str	r3, [sp, #68]	; 0x44
 80192c4:	236e      	movs	r3, #110	; 0x6e
 80192c6:	e792      	b.n	80191ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80192c8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80192cc:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80192d0:	e7c7      	b.n	8019262 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80192d2:	bf00      	nop
 80192d4:	7f7fffff 	.word	0x7f7fffff
 80192d8:	006e0069 	.word	0x006e0069
 80192dc:	0061006e 	.word	0x0061006e
 80192e0:	2563      	movs	r5, #99	; 0x63
 80192e2:	2a63      	cmp	r2, #99	; 0x63
 80192e4:	bfd4      	ite	le
 80192e6:	ebc5 0202 	rsble	r2, r5, r2
 80192ea:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 80192ee:	2a00      	cmp	r2, #0
 80192f0:	dd43      	ble.n	801937a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80192f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80192f4:	2b00      	cmp	r3, #0
 80192f6:	dd40      	ble.n	801937a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80192f8:	f04f 0901 	mov.w	r9, #1
 80192fc:	210a      	movs	r1, #10
 80192fe:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019302:	d30c      	bcc.n	801931e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019304:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019308:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801930c:	ee17 0a10 	vmov	r0, s14
 8019310:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019314:	fb01 0909 	mla	r9, r1, r9, r0
 8019318:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801931c:	e7ef      	b.n	80192fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801931e:	3501      	adds	r5, #1
 8019320:	930f      	str	r3, [sp, #60]	; 0x3c
 8019322:	b292      	uxth	r2, r2
 8019324:	230a      	movs	r3, #10
 8019326:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801932a:	4648      	mov	r0, r9
 801932c:	f7ff fb4e 	bl	80189cc <_ZN8touchgfx7Unicode4itoaElPtti>
 8019330:	f1b9 0f01 	cmp.w	r9, #1
 8019334:	dc1f      	bgt.n	8019376 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019336:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801933a:	2b00      	cmp	r3, #0
 801933c:	bf0c      	ite	eq
 801933e:	2300      	moveq	r3, #0
 8019340:	232e      	movne	r3, #46	; 0x2e
 8019342:	aa44      	add	r2, sp, #272	; 0x110
 8019344:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019348:	eef4 7ae4 	vcmpe.f32	s15, s9
 801934c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019350:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019354:	f6ff af4c 	blt.w	80191f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019358:	2300      	movs	r3, #0
 801935a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801935e:	1c59      	adds	r1, r3, #1
 8019360:	b98a      	cbnz	r2, 8019386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019362:	b29b      	uxth	r3, r3
 8019364:	2130      	movs	r1, #48	; 0x30
 8019366:	b983      	cbnz	r3, 801938a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019368:	2331      	movs	r3, #49	; 0x31
 801936a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801936e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019370:	3b02      	subs	r3, #2
 8019372:	9310      	str	r3, [sp, #64]	; 0x40
 8019374:	e73c      	b.n	80191f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019376:	232e      	movs	r3, #46	; 0x2e
 8019378:	e7e3      	b.n	8019342 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801937a:	ab44      	add	r3, sp, #272	; 0x110
 801937c:	3501      	adds	r5, #1
 801937e:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019382:	2300      	movs	r3, #0
 8019384:	e7e0      	b.n	8019348 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019386:	460b      	mov	r3, r1
 8019388:	e7e7      	b.n	801935a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801938a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801938e:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019392:	2808      	cmp	r0, #8
 8019394:	d806      	bhi.n	80193a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019396:	a944      	add	r1, sp, #272	; 0x110
 8019398:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801939c:	3201      	adds	r2, #1
 801939e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80193a2:	e725      	b.n	80191f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80193a4:	2a39      	cmp	r2, #57	; 0x39
 80193a6:	bf08      	it	eq
 80193a8:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80193ac:	3b01      	subs	r3, #1
 80193ae:	e7da      	b.n	8019366 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 80193b0:	9a08      	ldr	r2, [sp, #32]
 80193b2:	2a00      	cmp	r2, #0
 80193b4:	f43f af23 	beq.w	80191fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80193b8:	7812      	ldrb	r2, [r2, #0]
 80193ba:	e720      	b.n	80191fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80193bc:	2d00      	cmp	r5, #0
 80193be:	f43f aede 	beq.w	801917e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80193c2:	782d      	ldrb	r5, [r5, #0]
 80193c4:	e6db      	b.n	801917e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80193c6:	bf00      	nop

080193c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80193c8:	b507      	push	{r0, r1, r2, lr}
 80193ca:	9300      	str	r3, [sp, #0]
 80193cc:	4613      	mov	r3, r2
 80193ce:	2200      	movs	r2, #0
 80193d0:	f7ff fe1c 	bl	801900c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80193d4:	b003      	add	sp, #12
 80193d6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080193dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80193dc:	4b01      	ldr	r3, [pc, #4]	; (80193e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80193de:	6018      	str	r0, [r3, #0]
 80193e0:	4770      	bx	lr
 80193e2:	bf00      	nop
 80193e4:	20012e1c 	.word	0x20012e1c

080193e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80193e8:	4b06      	ldr	r3, [pc, #24]	; (8019404 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80193ea:	881a      	ldrh	r2, [r3, #0]
 80193ec:	4282      	cmp	r2, r0
 80193ee:	d807      	bhi.n	8019400 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80193f0:	4b05      	ldr	r3, [pc, #20]	; (8019408 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80193f2:	881b      	ldrh	r3, [r3, #0]
 80193f4:	4413      	add	r3, r2
 80193f6:	4298      	cmp	r0, r3
 80193f8:	bfac      	ite	ge
 80193fa:	2000      	movge	r0, #0
 80193fc:	2001      	movlt	r0, #1
 80193fe:	4770      	bx	lr
 8019400:	2000      	movs	r0, #0
 8019402:	4770      	bx	lr
 8019404:	20012e3c 	.word	0x20012e3c
 8019408:	20012e40 	.word	0x20012e40

0801940c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801940c:	b508      	push	{r3, lr}
 801940e:	4601      	mov	r1, r0
 8019410:	f7ff ffea 	bl	80193e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019414:	b118      	cbz	r0, 801941e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019416:	4b02      	ldr	r3, [pc, #8]	; (8019420 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019418:	681b      	ldr	r3, [r3, #0]
 801941a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801941e:	bd08      	pop	{r3, pc}
 8019420:	20012e20 	.word	0x20012e20

08019424 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019426:	4c24      	ldr	r4, [pc, #144]	; (80194b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019428:	6823      	ldr	r3, [r4, #0]
 801942a:	2b00      	cmp	r3, #0
 801942c:	d042      	beq.n	80194b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801942e:	4a23      	ldr	r2, [pc, #140]	; (80194bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019430:	4d23      	ldr	r5, [pc, #140]	; (80194c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019432:	8811      	ldrh	r1, [r2, #0]
 8019434:	f8b5 c000 	ldrh.w	ip, [r5]
 8019438:	4822      	ldr	r0, [pc, #136]	; (80194c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801943a:	4461      	add	r1, ip
 801943c:	1c4a      	adds	r2, r1, #1
 801943e:	f022 0201 	bic.w	r2, r2, #1
 8019442:	008f      	lsls	r7, r1, #2
 8019444:	0412      	lsls	r2, r2, #16
 8019446:	19de      	adds	r6, r3, r7
 8019448:	0c12      	lsrs	r2, r2, #16
 801944a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801944e:	6006      	str	r6, [r0, #0]
 8019450:	4e1d      	ldr	r6, [pc, #116]	; (80194c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019452:	19da      	adds	r2, r3, r7
 8019454:	6032      	str	r2, [r6, #0]
 8019456:	220e      	movs	r2, #14
 8019458:	fb02 f20c 	mul.w	r2, r2, ip
 801945c:	3203      	adds	r2, #3
 801945e:	f022 0203 	bic.w	r2, r2, #3
 8019462:	443a      	add	r2, r7
 8019464:	4f19      	ldr	r7, [pc, #100]	; (80194cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019466:	4413      	add	r3, r2
 8019468:	603b      	str	r3, [r7, #0]
 801946a:	4f19      	ldr	r7, [pc, #100]	; (80194d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801946c:	2300      	movs	r3, #0
 801946e:	803b      	strh	r3, [r7, #0]
 8019470:	4f18      	ldr	r7, [pc, #96]	; (80194d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019472:	683f      	ldr	r7, [r7, #0]
 8019474:	1aba      	subs	r2, r7, r2
 8019476:	4f18      	ldr	r7, [pc, #96]	; (80194d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019478:	603a      	str	r2, [r7, #0]
 801947a:	4a18      	ldr	r2, [pc, #96]	; (80194dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801947c:	469c      	mov	ip, r3
 801947e:	8013      	strh	r3, [r2, #0]
 8019480:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019484:	428b      	cmp	r3, r1
 8019486:	d10d      	bne.n	80194a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019488:	882d      	ldrh	r5, [r5, #0]
 801948a:	6830      	ldr	r0, [r6, #0]
 801948c:	2300      	movs	r3, #0
 801948e:	240e      	movs	r4, #14
 8019490:	429d      	cmp	r5, r3
 8019492:	d90f      	bls.n	80194b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019494:	fb04 0203 	mla	r2, r4, r3, r0
 8019498:	3301      	adds	r3, #1
 801949a:	7b11      	ldrb	r1, [r2, #12]
 801949c:	f36f 1145 	bfc	r1, #5, #1
 80194a0:	7311      	strb	r1, [r2, #12]
 80194a2:	e7f5      	b.n	8019490 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80194a4:	6822      	ldr	r2, [r4, #0]
 80194a6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80194aa:	6802      	ldr	r2, [r0, #0]
 80194ac:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80194b0:	3301      	adds	r3, #1
 80194b2:	e7e7      	b.n	8019484 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80194b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80194b6:	bf00      	nop
 80194b8:	20012e20 	.word	0x20012e20
 80194bc:	20012e3c 	.word	0x20012e3c
 80194c0:	20012e40 	.word	0x20012e40
 80194c4:	20012e34 	.word	0x20012e34
 80194c8:	20012e24 	.word	0x20012e24
 80194cc:	20012e2c 	.word	0x20012e2c
 80194d0:	20012e3e 	.word	0x20012e3e
 80194d4:	20012e28 	.word	0x20012e28
 80194d8:	20012e38 	.word	0x20012e38
 80194dc:	20012e30 	.word	0x20012e30

080194e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80194e0:	4b06      	ldr	r3, [pc, #24]	; (80194fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80194e2:	681b      	ldr	r3, [r3, #0]
 80194e4:	b943      	cbnz	r3, 80194f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80194e6:	b139      	cbz	r1, 80194f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80194e8:	4b05      	ldr	r3, [pc, #20]	; (8019500 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80194ea:	801a      	strh	r2, [r3, #0]
 80194ec:	4b05      	ldr	r3, [pc, #20]	; (8019504 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80194ee:	6019      	str	r1, [r3, #0]
 80194f0:	4b05      	ldr	r3, [pc, #20]	; (8019508 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80194f2:	6018      	str	r0, [r3, #0]
 80194f4:	f7ff bf96 	b.w	8019424 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80194f8:	4770      	bx	lr
 80194fa:	bf00      	nop
 80194fc:	20012e2c 	.word	0x20012e2c
 8019500:	20012e40 	.word	0x20012e40
 8019504:	20012e28 	.word	0x20012e28
 8019508:	20012e20 	.word	0x20012e20

0801950c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801950c:	b470      	push	{r4, r5, r6}
 801950e:	4c07      	ldr	r4, [pc, #28]	; (801952c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019510:	6826      	ldr	r6, [r4, #0]
 8019512:	4605      	mov	r5, r0
 8019514:	4610      	mov	r0, r2
 8019516:	9a03      	ldr	r2, [sp, #12]
 8019518:	b936      	cbnz	r6, 8019528 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801951a:	6025      	str	r5, [r4, #0]
 801951c:	4c04      	ldr	r4, [pc, #16]	; (8019530 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801951e:	8021      	strh	r1, [r4, #0]
 8019520:	bc70      	pop	{r4, r5, r6}
 8019522:	4619      	mov	r1, r3
 8019524:	f7ff bfdc 	b.w	80194e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019528:	bc70      	pop	{r4, r5, r6}
 801952a:	4770      	bx	lr
 801952c:	20012e44 	.word	0x20012e44
 8019530:	20012e3c 	.word	0x20012e3c

08019534 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019534:	4a12      	ldr	r2, [pc, #72]	; (8019580 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019536:	8803      	ldrh	r3, [r0, #0]
 8019538:	8812      	ldrh	r2, [r2, #0]
 801953a:	4293      	cmp	r3, r2
 801953c:	d207      	bcs.n	801954e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801953e:	4a11      	ldr	r2, [pc, #68]	; (8019584 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019540:	6812      	ldr	r2, [r2, #0]
 8019542:	2114      	movs	r1, #20
 8019544:	fb01 2303 	mla	r3, r1, r3, r2
 8019548:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801954c:	4770      	bx	lr
 801954e:	490e      	ldr	r1, [pc, #56]	; (8019588 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019550:	8809      	ldrh	r1, [r1, #0]
 8019552:	4411      	add	r1, r2
 8019554:	428b      	cmp	r3, r1
 8019556:	da04      	bge.n	8019562 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019558:	1a9b      	subs	r3, r3, r2
 801955a:	4a0c      	ldr	r2, [pc, #48]	; (801958c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801955c:	210e      	movs	r1, #14
 801955e:	6812      	ldr	r2, [r2, #0]
 8019560:	e7f0      	b.n	8019544 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019562:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019566:	4293      	cmp	r3, r2
 8019568:	d108      	bne.n	801957c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801956a:	4b09      	ldr	r3, [pc, #36]	; (8019590 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801956c:	781b      	ldrb	r3, [r3, #0]
 801956e:	b91b      	cbnz	r3, 8019578 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019570:	4b08      	ldr	r3, [pc, #32]	; (8019594 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019572:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019576:	4770      	bx	lr
 8019578:	4b07      	ldr	r3, [pc, #28]	; (8019598 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801957a:	e7fa      	b.n	8019572 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801957c:	2000      	movs	r0, #0
 801957e:	4770      	bx	lr
 8019580:	20012e3c 	.word	0x20012e3c
 8019584:	20012e44 	.word	0x20012e44
 8019588:	20012e40 	.word	0x20012e40
 801958c:	20012e24 	.word	0x20012e24
 8019590:	20012dac 	.word	0x20012dac
 8019594:	20012dae 	.word	0x20012dae
 8019598:	20012db0 	.word	0x20012db0

0801959c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801959c:	4a12      	ldr	r2, [pc, #72]	; (80195e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801959e:	8803      	ldrh	r3, [r0, #0]
 80195a0:	8812      	ldrh	r2, [r2, #0]
 80195a2:	4293      	cmp	r3, r2
 80195a4:	d207      	bcs.n	80195b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80195a6:	4a11      	ldr	r2, [pc, #68]	; (80195ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80195a8:	6812      	ldr	r2, [r2, #0]
 80195aa:	2114      	movs	r1, #20
 80195ac:	fb01 2303 	mla	r3, r1, r3, r2
 80195b0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80195b4:	4770      	bx	lr
 80195b6:	490e      	ldr	r1, [pc, #56]	; (80195f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80195b8:	8809      	ldrh	r1, [r1, #0]
 80195ba:	4411      	add	r1, r2
 80195bc:	428b      	cmp	r3, r1
 80195be:	da04      	bge.n	80195ca <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80195c0:	1a9b      	subs	r3, r3, r2
 80195c2:	4a0c      	ldr	r2, [pc, #48]	; (80195f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80195c4:	210e      	movs	r1, #14
 80195c6:	6812      	ldr	r2, [r2, #0]
 80195c8:	e7f0      	b.n	80195ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80195ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80195ce:	4293      	cmp	r3, r2
 80195d0:	d108      	bne.n	80195e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80195d2:	4b09      	ldr	r3, [pc, #36]	; (80195f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80195d4:	781b      	ldrb	r3, [r3, #0]
 80195d6:	b91b      	cbnz	r3, 80195e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80195d8:	4b08      	ldr	r3, [pc, #32]	; (80195fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80195da:	f9b3 0000 	ldrsh.w	r0, [r3]
 80195de:	4770      	bx	lr
 80195e0:	4b07      	ldr	r3, [pc, #28]	; (8019600 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80195e2:	e7fa      	b.n	80195da <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80195e4:	2000      	movs	r0, #0
 80195e6:	4770      	bx	lr
 80195e8:	20012e3c 	.word	0x20012e3c
 80195ec:	20012e44 	.word	0x20012e44
 80195f0:	20012e40 	.word	0x20012e40
 80195f4:	20012e24 	.word	0x20012e24
 80195f8:	20012dac 	.word	0x20012dac
 80195fc:	20012db0 	.word	0x20012db0
 8019600:	20012dae 	.word	0x20012dae

08019604 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019604:	b510      	push	{r4, lr}
 8019606:	4a1f      	ldr	r2, [pc, #124]	; (8019684 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019608:	880b      	ldrh	r3, [r1, #0]
 801960a:	8812      	ldrh	r2, [r2, #0]
 801960c:	4293      	cmp	r3, r2
 801960e:	d213      	bcs.n	8019638 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019610:	4a1d      	ldr	r2, [pc, #116]	; (8019688 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019612:	6812      	ldr	r2, [r2, #0]
 8019614:	2114      	movs	r1, #20
 8019616:	fb01 2303 	mla	r3, r1, r3, r2
 801961a:	8a1a      	ldrh	r2, [r3, #16]
 801961c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019620:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019624:	8a5b      	ldrh	r3, [r3, #18]
 8019626:	8004      	strh	r4, [r0, #0]
 8019628:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801962c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019630:	8041      	strh	r1, [r0, #2]
 8019632:	8082      	strh	r2, [r0, #4]
 8019634:	80c3      	strh	r3, [r0, #6]
 8019636:	e00e      	b.n	8019656 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019638:	4914      	ldr	r1, [pc, #80]	; (801968c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801963a:	8809      	ldrh	r1, [r1, #0]
 801963c:	4411      	add	r1, r2
 801963e:	428b      	cmp	r3, r1
 8019640:	da0a      	bge.n	8019658 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8019642:	1a9b      	subs	r3, r3, r2
 8019644:	4a12      	ldr	r2, [pc, #72]	; (8019690 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8019646:	6812      	ldr	r2, [r2, #0]
 8019648:	210e      	movs	r1, #14
 801964a:	fb01 2303 	mla	r3, r1, r3, r2
 801964e:	681a      	ldr	r2, [r3, #0]
 8019650:	6002      	str	r2, [r0, #0]
 8019652:	685a      	ldr	r2, [r3, #4]
 8019654:	6042      	str	r2, [r0, #4]
 8019656:	bd10      	pop	{r4, pc}
 8019658:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801965c:	4293      	cmp	r3, r2
 801965e:	d10b      	bne.n	8019678 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8019660:	4b0c      	ldr	r3, [pc, #48]	; (8019694 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019662:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019666:	4b0c      	ldr	r3, [pc, #48]	; (8019698 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019668:	8081      	strh	r1, [r0, #4]
 801966a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801966e:	80c2      	strh	r2, [r0, #6]
 8019670:	2300      	movs	r3, #0
 8019672:	8003      	strh	r3, [r0, #0]
 8019674:	8043      	strh	r3, [r0, #2]
 8019676:	e7ee      	b.n	8019656 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019678:	2300      	movs	r3, #0
 801967a:	8003      	strh	r3, [r0, #0]
 801967c:	8043      	strh	r3, [r0, #2]
 801967e:	8083      	strh	r3, [r0, #4]
 8019680:	e7d8      	b.n	8019634 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019682:	bf00      	nop
 8019684:	20012e3c 	.word	0x20012e3c
 8019688:	20012e44 	.word	0x20012e44
 801968c:	20012e40 	.word	0x20012e40
 8019690:	20012e24 	.word	0x20012e24
 8019694:	20012da8 	.word	0x20012da8
 8019698:	20012daa 	.word	0x20012daa

0801969c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801969c:	4a17      	ldr	r2, [pc, #92]	; (80196fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801969e:	8803      	ldrh	r3, [r0, #0]
 80196a0:	8812      	ldrh	r2, [r2, #0]
 80196a2:	4293      	cmp	r3, r2
 80196a4:	d213      	bcs.n	80196ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80196a6:	4a16      	ldr	r2, [pc, #88]	; (8019700 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80196a8:	6812      	ldr	r2, [r2, #0]
 80196aa:	2114      	movs	r1, #20
 80196ac:	fb01 2303 	mla	r3, r1, r3, r2
 80196b0:	8a1a      	ldrh	r2, [r3, #16]
 80196b2:	8919      	ldrh	r1, [r3, #8]
 80196b4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80196b8:	428a      	cmp	r2, r1
 80196ba:	db1d      	blt.n	80196f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80196bc:	8a58      	ldrh	r0, [r3, #18]
 80196be:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80196c2:	895b      	ldrh	r3, [r3, #10]
 80196c4:	4298      	cmp	r0, r3
 80196c6:	bfac      	ite	ge
 80196c8:	2000      	movge	r0, #0
 80196ca:	2001      	movlt	r0, #1
 80196cc:	4770      	bx	lr
 80196ce:	490d      	ldr	r1, [pc, #52]	; (8019704 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80196d0:	8809      	ldrh	r1, [r1, #0]
 80196d2:	4411      	add	r1, r2
 80196d4:	428b      	cmp	r3, r1
 80196d6:	da0d      	bge.n	80196f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80196d8:	1a9b      	subs	r3, r3, r2
 80196da:	4a0b      	ldr	r2, [pc, #44]	; (8019708 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80196dc:	6812      	ldr	r2, [r2, #0]
 80196de:	210e      	movs	r1, #14
 80196e0:	fb01 2303 	mla	r3, r1, r3, r2
 80196e4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80196e8:	891a      	ldrh	r2, [r3, #8]
 80196ea:	4291      	cmp	r1, r2
 80196ec:	db04      	blt.n	80196f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80196ee:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80196f2:	e7e6      	b.n	80196c2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80196f4:	2000      	movs	r0, #0
 80196f6:	4770      	bx	lr
 80196f8:	2001      	movs	r0, #1
 80196fa:	4770      	bx	lr
 80196fc:	20012e3c 	.word	0x20012e3c
 8019700:	20012e44 	.word	0x20012e44
 8019704:	20012e40 	.word	0x20012e40
 8019708:	20012e24 	.word	0x20012e24

0801970c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801970c:	4a12      	ldr	r2, [pc, #72]	; (8019758 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801970e:	8803      	ldrh	r3, [r0, #0]
 8019710:	8811      	ldrh	r1, [r2, #0]
 8019712:	428b      	cmp	r3, r1
 8019714:	d20b      	bcs.n	801972e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8019716:	4a11      	ldr	r2, [pc, #68]	; (801975c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019718:	6812      	ldr	r2, [r2, #0]
 801971a:	b112      	cbz	r2, 8019722 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801971c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019720:	b9c0      	cbnz	r0, 8019754 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019722:	4a0f      	ldr	r2, [pc, #60]	; (8019760 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019724:	6811      	ldr	r1, [r2, #0]
 8019726:	2214      	movs	r2, #20
 8019728:	4353      	muls	r3, r2
 801972a:	58c8      	ldr	r0, [r1, r3]
 801972c:	4770      	bx	lr
 801972e:	4a0d      	ldr	r2, [pc, #52]	; (8019764 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019730:	8812      	ldrh	r2, [r2, #0]
 8019732:	440a      	add	r2, r1
 8019734:	4293      	cmp	r3, r2
 8019736:	da04      	bge.n	8019742 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8019738:	4a08      	ldr	r2, [pc, #32]	; (801975c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801973a:	6812      	ldr	r2, [r2, #0]
 801973c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019740:	4770      	bx	lr
 8019742:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019746:	4293      	cmp	r3, r2
 8019748:	d103      	bne.n	8019752 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801974a:	4b07      	ldr	r3, [pc, #28]	; (8019768 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801974c:	681b      	ldr	r3, [r3, #0]
 801974e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8019750:	4770      	bx	lr
 8019752:	2000      	movs	r0, #0
 8019754:	4770      	bx	lr
 8019756:	bf00      	nop
 8019758:	20012e3c 	.word	0x20012e3c
 801975c:	20012e20 	.word	0x20012e20
 8019760:	20012e44 	.word	0x20012e44
 8019764:	20012e40 	.word	0x20012e40
 8019768:	20012db4 	.word	0x20012db4

0801976c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801976c:	4b24      	ldr	r3, [pc, #144]	; (8019800 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801976e:	8802      	ldrh	r2, [r0, #0]
 8019770:	8818      	ldrh	r0, [r3, #0]
 8019772:	4282      	cmp	r2, r0
 8019774:	d221      	bcs.n	80197ba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019776:	4b23      	ldr	r3, [pc, #140]	; (8019804 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019778:	6819      	ldr	r1, [r3, #0]
 801977a:	2314      	movs	r3, #20
 801977c:	fb03 1302 	mla	r3, r3, r2, r1
 8019780:	6858      	ldr	r0, [r3, #4]
 8019782:	2800      	cmp	r0, #0
 8019784:	d03a      	beq.n	80197fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019786:	4920      	ldr	r1, [pc, #128]	; (8019808 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019788:	6809      	ldr	r1, [r1, #0]
 801978a:	2900      	cmp	r1, #0
 801978c:	d036      	beq.n	80197fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801978e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019792:	2900      	cmp	r1, #0
 8019794:	d032      	beq.n	80197fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019796:	891a      	ldrh	r2, [r3, #8]
 8019798:	8958      	ldrh	r0, [r3, #10]
 801979a:	4350      	muls	r0, r2
 801979c:	7c5a      	ldrb	r2, [r3, #17]
 801979e:	7cdb      	ldrb	r3, [r3, #19]
 80197a0:	0952      	lsrs	r2, r2, #5
 80197a2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80197a6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80197aa:	2b0b      	cmp	r3, #11
 80197ac:	bf18      	it	ne
 80197ae:	0040      	lslne	r0, r0, #1
 80197b0:	3003      	adds	r0, #3
 80197b2:	f020 0003 	bic.w	r0, r0, #3
 80197b6:	4408      	add	r0, r1
 80197b8:	4770      	bx	lr
 80197ba:	4b14      	ldr	r3, [pc, #80]	; (801980c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80197bc:	881b      	ldrh	r3, [r3, #0]
 80197be:	4403      	add	r3, r0
 80197c0:	429a      	cmp	r2, r3
 80197c2:	da1a      	bge.n	80197fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80197c4:	4b12      	ldr	r3, [pc, #72]	; (8019810 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80197c6:	681b      	ldr	r3, [r3, #0]
 80197c8:	1a10      	subs	r0, r2, r0
 80197ca:	210e      	movs	r1, #14
 80197cc:	fb01 3000 	mla	r0, r1, r0, r3
 80197d0:	7b03      	ldrb	r3, [r0, #12]
 80197d2:	f003 031f 	and.w	r3, r3, #31
 80197d6:	2b0b      	cmp	r3, #11
 80197d8:	d10b      	bne.n	80197f2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80197da:	8903      	ldrh	r3, [r0, #8]
 80197dc:	8940      	ldrh	r0, [r0, #10]
 80197de:	4358      	muls	r0, r3
 80197e0:	4b09      	ldr	r3, [pc, #36]	; (8019808 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80197e2:	6819      	ldr	r1, [r3, #0]
 80197e4:	3003      	adds	r0, #3
 80197e6:	f020 0303 	bic.w	r3, r0, #3
 80197ea:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80197ee:	4418      	add	r0, r3
 80197f0:	4770      	bx	lr
 80197f2:	2b0d      	cmp	r3, #13
 80197f4:	d101      	bne.n	80197fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80197f6:	300d      	adds	r0, #13
 80197f8:	4770      	bx	lr
 80197fa:	2000      	movs	r0, #0
 80197fc:	4770      	bx	lr
 80197fe:	bf00      	nop
 8019800:	20012e3c 	.word	0x20012e3c
 8019804:	20012e44 	.word	0x20012e44
 8019808:	20012e20 	.word	0x20012e20
 801980c:	20012e40 	.word	0x20012e40
 8019810:	20012e24 	.word	0x20012e24

08019814 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019814:	b510      	push	{r4, lr}
 8019816:	4a17      	ldr	r2, [pc, #92]	; (8019874 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019818:	8803      	ldrh	r3, [r0, #0]
 801981a:	8812      	ldrh	r2, [r2, #0]
 801981c:	4293      	cmp	r3, r2
 801981e:	d20c      	bcs.n	801983a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019820:	4a15      	ldr	r2, [pc, #84]	; (8019878 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019822:	6812      	ldr	r2, [r2, #0]
 8019824:	2114      	movs	r1, #20
 8019826:	fb01 2303 	mla	r3, r1, r3, r2
 801982a:	7c58      	ldrb	r0, [r3, #17]
 801982c:	0942      	lsrs	r2, r0, #5
 801982e:	7cd8      	ldrb	r0, [r3, #19]
 8019830:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019834:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019838:	bd10      	pop	{r4, pc}
 801983a:	4910      	ldr	r1, [pc, #64]	; (801987c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801983c:	8809      	ldrh	r1, [r1, #0]
 801983e:	4411      	add	r1, r2
 8019840:	428b      	cmp	r3, r1
 8019842:	da09      	bge.n	8019858 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8019844:	1a9b      	subs	r3, r3, r2
 8019846:	4a0e      	ldr	r2, [pc, #56]	; (8019880 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019848:	6812      	ldr	r2, [r2, #0]
 801984a:	210e      	movs	r1, #14
 801984c:	fb01 2303 	mla	r3, r1, r3, r2
 8019850:	7b18      	ldrb	r0, [r3, #12]
 8019852:	f000 001f 	and.w	r0, r0, #31
 8019856:	e7ef      	b.n	8019838 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019858:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801985c:	4293      	cmp	r3, r2
 801985e:	d106      	bne.n	801986e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8019860:	f7ea fff8 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 8019864:	6803      	ldr	r3, [r0, #0]
 8019866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801986a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801986c:	4718      	bx	r3
 801986e:	2000      	movs	r0, #0
 8019870:	e7e2      	b.n	8019838 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019872:	bf00      	nop
 8019874:	20012e3c 	.word	0x20012e3c
 8019878:	20012e44 	.word	0x20012e44
 801987c:	20012e40 	.word	0x20012e40
 8019880:	20012e24 	.word	0x20012e24

08019884 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019884:	2010      	movs	r0, #16
 8019886:	4770      	bx	lr

08019888 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019888:	2000      	movs	r0, #0
 801988a:	4770      	bx	lr

0801988c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801988c:	4b02      	ldr	r3, [pc, #8]	; (8019898 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801988e:	8818      	ldrh	r0, [r3, #0]
 8019890:	0040      	lsls	r0, r0, #1
 8019892:	b280      	uxth	r0, r0
 8019894:	4770      	bx	lr
 8019896:	bf00      	nop
 8019898:	20012dae 	.word	0x20012dae

0801989c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801989c:	2bff      	cmp	r3, #255	; 0xff
 801989e:	d050      	beq.n	8019942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80198a0:	2a0b      	cmp	r2, #11
 80198a2:	d04a      	beq.n	801993a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80198a4:	d80e      	bhi.n	80198c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80198a6:	2a03      	cmp	r2, #3
 80198a8:	d03f      	beq.n	801992a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80198aa:	d804      	bhi.n	80198b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80198ac:	2a01      	cmp	r2, #1
 80198ae:	d03e      	beq.n	801992e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80198b0:	d93f      	bls.n	8019932 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80198b2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80198b4:	4770      	bx	lr
 80198b6:	2a09      	cmp	r2, #9
 80198b8:	d03f      	beq.n	801993a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80198ba:	d83c      	bhi.n	8019936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80198bc:	2a08      	cmp	r2, #8
 80198be:	d03a      	beq.n	8019936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80198c0:	2000      	movs	r0, #0
 80198c2:	4770      	bx	lr
 80198c4:	2a2f      	cmp	r2, #47	; 0x2f
 80198c6:	d024      	beq.n	8019912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80198c8:	d80d      	bhi.n	80198e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80198ca:	2a2d      	cmp	r2, #45	; 0x2d
 80198cc:	d014      	beq.n	80198f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80198ce:	d826      	bhi.n	801991e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80198d0:	2a2c      	cmp	r2, #44	; 0x2c
 80198d2:	d1f5      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198d4:	684b      	ldr	r3, [r1, #4]
 80198d6:	781b      	ldrb	r3, [r3, #0]
 80198d8:	2b01      	cmp	r3, #1
 80198da:	d018      	beq.n	801990e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80198dc:	d323      	bcc.n	8019926 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80198de:	2b02      	cmp	r3, #2
 80198e0:	d1ee      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198e2:	6880      	ldr	r0, [r0, #8]
 80198e4:	4770      	bx	lr
 80198e6:	2a31      	cmp	r2, #49	; 0x31
 80198e8:	d004      	beq.n	80198f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80198ea:	d328      	bcc.n	801993e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80198ec:	2a32      	cmp	r2, #50	; 0x32
 80198ee:	d026      	beq.n	801993e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80198f0:	2a33      	cmp	r2, #51	; 0x33
 80198f2:	d1e5      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80198f4:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80198f6:	4770      	bx	lr
 80198f8:	684b      	ldr	r3, [r1, #4]
 80198fa:	781b      	ldrb	r3, [r3, #0]
 80198fc:	2b01      	cmp	r3, #1
 80198fe:	d004      	beq.n	801990a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019900:	d30b      	bcc.n	801991a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019902:	2b02      	cmp	r3, #2
 8019904:	d1dc      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019906:	6900      	ldr	r0, [r0, #16]
 8019908:	4770      	bx	lr
 801990a:	6a00      	ldr	r0, [r0, #32]
 801990c:	4770      	bx	lr
 801990e:	6980      	ldr	r0, [r0, #24]
 8019910:	4770      	bx	lr
 8019912:	684b      	ldr	r3, [r1, #4]
 8019914:	781b      	ldrb	r3, [r3, #0]
 8019916:	2b00      	cmp	r3, #0
 8019918:	d1d2      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801991a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801991c:	4770      	bx	lr
 801991e:	684b      	ldr	r3, [r1, #4]
 8019920:	781b      	ldrb	r3, [r3, #0]
 8019922:	2b00      	cmp	r3, #0
 8019924:	d1cc      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019926:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019928:	4770      	bx	lr
 801992a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801992c:	4770      	bx	lr
 801992e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019930:	4770      	bx	lr
 8019932:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019934:	4770      	bx	lr
 8019936:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019938:	4770      	bx	lr
 801993a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801993c:	4770      	bx	lr
 801993e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019940:	4770      	bx	lr
 8019942:	2a0b      	cmp	r2, #11
 8019944:	d049      	beq.n	80199da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019946:	d80e      	bhi.n	8019966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019948:	2a03      	cmp	r2, #3
 801994a:	d040      	beq.n	80199ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801994c:	d804      	bhi.n	8019958 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801994e:	2a01      	cmp	r2, #1
 8019950:	d03f      	beq.n	80199d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019952:	d940      	bls.n	80199d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019954:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019956:	4770      	bx	lr
 8019958:	2a09      	cmp	r2, #9
 801995a:	d03e      	beq.n	80199da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801995c:	d801      	bhi.n	8019962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801995e:	2a08      	cmp	r2, #8
 8019960:	d1ae      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019962:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019964:	4770      	bx	lr
 8019966:	2a2f      	cmp	r2, #47	; 0x2f
 8019968:	d024      	beq.n	80199b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801996a:	d80d      	bhi.n	8019988 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801996c:	2a2d      	cmp	r2, #45	; 0x2d
 801996e:	d014      	beq.n	801999a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019970:	d826      	bhi.n	80199c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019972:	2a2c      	cmp	r2, #44	; 0x2c
 8019974:	d1a4      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019976:	684b      	ldr	r3, [r1, #4]
 8019978:	781b      	ldrb	r3, [r3, #0]
 801997a:	2b01      	cmp	r3, #1
 801997c:	d018      	beq.n	80199b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801997e:	d324      	bcc.n	80199ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019980:	2b02      	cmp	r3, #2
 8019982:	d19d      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019984:	68c0      	ldr	r0, [r0, #12]
 8019986:	4770      	bx	lr
 8019988:	2a31      	cmp	r2, #49	; 0x31
 801998a:	d004      	beq.n	8019996 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801998c:	d327      	bcc.n	80199de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801998e:	2a32      	cmp	r2, #50	; 0x32
 8019990:	d025      	beq.n	80199de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019992:	2a33      	cmp	r2, #51	; 0x33
 8019994:	d194      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019996:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019998:	4770      	bx	lr
 801999a:	684b      	ldr	r3, [r1, #4]
 801999c:	781b      	ldrb	r3, [r3, #0]
 801999e:	2b01      	cmp	r3, #1
 80199a0:	d004      	beq.n	80199ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80199a2:	d30b      	bcc.n	80199bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80199a4:	2b02      	cmp	r3, #2
 80199a6:	d18b      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199a8:	6940      	ldr	r0, [r0, #20]
 80199aa:	4770      	bx	lr
 80199ac:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80199ae:	4770      	bx	lr
 80199b0:	69c0      	ldr	r0, [r0, #28]
 80199b2:	4770      	bx	lr
 80199b4:	684b      	ldr	r3, [r1, #4]
 80199b6:	781b      	ldrb	r3, [r3, #0]
 80199b8:	2b00      	cmp	r3, #0
 80199ba:	d181      	bne.n	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199bc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80199be:	4770      	bx	lr
 80199c0:	684b      	ldr	r3, [r1, #4]
 80199c2:	781b      	ldrb	r3, [r3, #0]
 80199c4:	2b00      	cmp	r3, #0
 80199c6:	f47f af7b 	bne.w	80198c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80199ca:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80199cc:	4770      	bx	lr
 80199ce:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80199d0:	4770      	bx	lr
 80199d2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80199d4:	4770      	bx	lr
 80199d6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80199d8:	4770      	bx	lr
 80199da:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80199dc:	4770      	bx	lr
 80199de:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80199e0:	4770      	bx	lr

080199e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199e6:	b087      	sub	sp, #28
 80199e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80199ea:	9205      	str	r2, [sp, #20]
 80199ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80199f0:	9202      	str	r2, [sp, #8]
 80199f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80199f6:	9101      	str	r1, [sp, #4]
 80199f8:	6841      	ldr	r1, [r0, #4]
 80199fa:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80199fe:	fb01 2404 	mla	r4, r1, r4, r2
 8019a02:	6802      	ldr	r2, [r0, #0]
 8019a04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019a08:	f8de 2000 	ldr.w	r2, [lr]
 8019a0c:	9203      	str	r2, [sp, #12]
 8019a0e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019a12:	3204      	adds	r2, #4
 8019a14:	9204      	str	r2, [sp, #16]
 8019a16:	9a02      	ldr	r2, [sp, #8]
 8019a18:	43d6      	mvns	r6, r2
 8019a1a:	b2f6      	uxtb	r6, r6
 8019a1c:	9a01      	ldr	r2, [sp, #4]
 8019a1e:	2a00      	cmp	r2, #0
 8019a20:	dc03      	bgt.n	8019a2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019a22:	9a05      	ldr	r2, [sp, #20]
 8019a24:	2a00      	cmp	r2, #0
 8019a26:	f340 8129 	ble.w	8019c7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019a2a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019a2c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019a30:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019a34:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a38:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019a3a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a3e:	2b00      	cmp	r3, #0
 8019a40:	dd0e      	ble.n	8019a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019a42:	1408      	asrs	r0, r1, #16
 8019a44:	d405      	bmi.n	8019a52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019a46:	4560      	cmp	r0, ip
 8019a48:	da03      	bge.n	8019a52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019a4a:	1410      	asrs	r0, r2, #16
 8019a4c:	d401      	bmi.n	8019a52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019a4e:	42b8      	cmp	r0, r7
 8019a50:	db07      	blt.n	8019a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019a52:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019a54:	4401      	add	r1, r0
 8019a56:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019a58:	3b01      	subs	r3, #1
 8019a5a:	4402      	add	r2, r0
 8019a5c:	3402      	adds	r4, #2
 8019a5e:	e7ee      	b.n	8019a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019a60:	d071      	beq.n	8019b46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019a62:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a64:	1e58      	subs	r0, r3, #1
 8019a66:	fb05 1500 	mla	r5, r5, r0, r1
 8019a6a:	142d      	asrs	r5, r5, #16
 8019a6c:	d45f      	bmi.n	8019b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a6e:	4565      	cmp	r5, ip
 8019a70:	da5d      	bge.n	8019b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a72:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a74:	fb05 2000 	mla	r0, r5, r0, r2
 8019a78:	1400      	asrs	r0, r0, #16
 8019a7a:	d458      	bmi.n	8019b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a7c:	42b8      	cmp	r0, r7
 8019a7e:	da56      	bge.n	8019b2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019a80:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019a84:	4699      	mov	r9, r3
 8019a86:	46a2      	mov	sl, r4
 8019a88:	f1b9 0f00 	cmp.w	r9, #0
 8019a8c:	dd57      	ble.n	8019b3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019a8e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019a92:	9803      	ldr	r0, [sp, #12]
 8019a94:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019a98:	140d      	asrs	r5, r1, #16
 8019a9a:	fb07 000c 	mla	r0, r7, ip, r0
 8019a9e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019aa2:	5d40      	ldrb	r0, [r0, r5]
 8019aa4:	9d04      	ldr	r5, [sp, #16]
 8019aa6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019aaa:	f8ba 5000 	ldrh.w	r5, [sl]
 8019aae:	122f      	asrs	r7, r5, #8
 8019ab0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019ab4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ab8:	fb17 f706 	smulbb	r7, r7, r6
 8019abc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019ac0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ac4:	00ed      	lsls	r5, r5, #3
 8019ac6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019aca:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019ace:	10c7      	asrs	r7, r0, #3
 8019ad0:	b2ed      	uxtb	r5, r5
 8019ad2:	00c0      	lsls	r0, r0, #3
 8019ad4:	fb18 f806 	smulbb	r8, r8, r6
 8019ad8:	fb15 f506 	smulbb	r5, r5, r6
 8019adc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ae0:	b2c0      	uxtb	r0, r0
 8019ae2:	fa1f fc8c 	uxth.w	ip, ip
 8019ae6:	fb07 870b 	mla	r7, r7, fp, r8
 8019aea:	fb00 500b 	mla	r0, r0, fp, r5
 8019aee:	b280      	uxth	r0, r0
 8019af0:	b2bf      	uxth	r7, r7
 8019af2:	f10c 0501 	add.w	r5, ip, #1
 8019af6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019afa:	f107 0801 	add.w	r8, r7, #1
 8019afe:	1c45      	adds	r5, r0, #1
 8019b00:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019b04:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019b08:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019b0a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b0e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019b12:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019b16:	ea45 0c0c 	orr.w	ip, r5, ip
 8019b1a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019b1e:	4401      	add	r1, r0
 8019b20:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019b22:	ea4c 0c08 	orr.w	ip, ip, r8
 8019b26:	f82a cb02 	strh.w	ip, [sl], #2
 8019b2a:	4402      	add	r2, r0
 8019b2c:	e7ac      	b.n	8019a88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019b2e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019b32:	f04f 0800 	mov.w	r8, #0
 8019b36:	eb03 0008 	add.w	r0, r3, r8
 8019b3a:	2800      	cmp	r0, #0
 8019b3c:	dc41      	bgt.n	8019bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019b3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019b46:	9b01      	ldr	r3, [sp, #4]
 8019b48:	2b00      	cmp	r3, #0
 8019b4a:	f340 8097 	ble.w	8019c7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019b4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019b56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019b5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b68:	eef0 6a62 	vmov.f32	s13, s5
 8019b6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b78:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019b7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b80:	eef0 6a43 	vmov.f32	s13, s6
 8019b84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b88:	ee12 2a90 	vmov	r2, s5
 8019b8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b90:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b94:	ee13 2a10 	vmov	r2, s6
 8019b98:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ba0:	9314      	str	r3, [sp, #80]	; 0x50
 8019ba2:	9b01      	ldr	r3, [sp, #4]
 8019ba4:	9a05      	ldr	r2, [sp, #20]
 8019ba6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019baa:	3b01      	subs	r3, #1
 8019bac:	9301      	str	r3, [sp, #4]
 8019bae:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019bb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019bb4:	eeb0 3a67 	vmov.f32	s6, s15
 8019bb8:	bf08      	it	eq
 8019bba:	4613      	moveq	r3, r2
 8019bbc:	eef0 2a47 	vmov.f32	s5, s14
 8019bc0:	e72c      	b.n	8019a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019bc2:	140f      	asrs	r7, r1, #16
 8019bc4:	d453      	bmi.n	8019c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bc6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019bca:	42bd      	cmp	r5, r7
 8019bcc:	dd4f      	ble.n	8019c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019bd2:	d44c      	bmi.n	8019c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bd4:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019bd8:	4560      	cmp	r0, ip
 8019bda:	dd48      	ble.n	8019c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019bdc:	9803      	ldr	r0, [sp, #12]
 8019bde:	b22d      	sxth	r5, r5
 8019be0:	fb0c 0505 	mla	r5, ip, r5, r0
 8019be4:	5de8      	ldrb	r0, [r5, r7]
 8019be6:	9d04      	ldr	r5, [sp, #16]
 8019be8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019bec:	f06f 0501 	mvn.w	r5, #1
 8019bf0:	fb05 fb08 	mul.w	fp, r5, r8
 8019bf4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019bf8:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019bfc:	122f      	asrs	r7, r5, #8
 8019bfe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c02:	fb17 f706 	smulbb	r7, r7, r6
 8019c06:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019c0a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c0e:	00ed      	lsls	r5, r5, #3
 8019c10:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019c14:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019c18:	10c7      	asrs	r7, r0, #3
 8019c1a:	b2ed      	uxtb	r5, r5
 8019c1c:	00c0      	lsls	r0, r0, #3
 8019c1e:	fb19 f906 	smulbb	r9, r9, r6
 8019c22:	fb15 f506 	smulbb	r5, r5, r6
 8019c26:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019c2a:	b2c0      	uxtb	r0, r0
 8019c2c:	fa1f fc8c 	uxth.w	ip, ip
 8019c30:	fb07 970a 	mla	r7, r7, sl, r9
 8019c34:	fb00 500a 	mla	r0, r0, sl, r5
 8019c38:	b2bf      	uxth	r7, r7
 8019c3a:	b280      	uxth	r0, r0
 8019c3c:	f10c 0501 	add.w	r5, ip, #1
 8019c40:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019c44:	f107 0901 	add.w	r9, r7, #1
 8019c48:	1c45      	adds	r5, r0, #1
 8019c4a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019c4e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019c52:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c56:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019c5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019c5e:	ea45 0c0c 	orr.w	ip, r5, ip
 8019c62:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019c66:	ea4c 0c09 	orr.w	ip, ip, r9
 8019c6a:	f824 c00b 	strh.w	ip, [r4, fp]
 8019c6e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c70:	4401      	add	r1, r0
 8019c72:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019c74:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c78:	4402      	add	r2, r0
 8019c7a:	e75c      	b.n	8019b36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019c7c:	b007      	add	sp, #28
 8019c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c86:	b085      	sub	sp, #20
 8019c88:	4693      	mov	fp, r2
 8019c8a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019c8c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019c8e:	6870      	ldr	r0, [r6, #4]
 8019c90:	9100      	str	r1, [sp, #0]
 8019c92:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019c96:	fb00 2404 	mla	r4, r0, r4, r2
 8019c9a:	6832      	ldr	r2, [r6, #0]
 8019c9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019ca0:	682a      	ldr	r2, [r5, #0]
 8019ca2:	9201      	str	r2, [sp, #4]
 8019ca4:	686a      	ldr	r2, [r5, #4]
 8019ca6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019caa:	3204      	adds	r2, #4
 8019cac:	9202      	str	r2, [sp, #8]
 8019cae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cb2:	9a00      	ldr	r2, [sp, #0]
 8019cb4:	2a00      	cmp	r2, #0
 8019cb6:	dc03      	bgt.n	8019cc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019cb8:	f1bb 0f00 	cmp.w	fp, #0
 8019cbc:	f340 80a0 	ble.w	8019e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019cc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019cc2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019cc6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019cca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019cce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019cd0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019cd4:	2b00      	cmp	r3, #0
 8019cd6:	dd0c      	ble.n	8019cf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019cd8:	1406      	asrs	r6, r0, #16
 8019cda:	d405      	bmi.n	8019ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cdc:	454e      	cmp	r6, r9
 8019cde:	da03      	bge.n	8019ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019ce0:	1416      	asrs	r6, r2, #16
 8019ce2:	d401      	bmi.n	8019ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019ce4:	4546      	cmp	r6, r8
 8019ce6:	db05      	blt.n	8019cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ce8:	4470      	add	r0, lr
 8019cea:	4462      	add	r2, ip
 8019cec:	3b01      	subs	r3, #1
 8019cee:	3402      	adds	r4, #2
 8019cf0:	e7f0      	b.n	8019cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019cf2:	d00f      	beq.n	8019d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019cf4:	1e5e      	subs	r6, r3, #1
 8019cf6:	fb0e 0706 	mla	r7, lr, r6, r0
 8019cfa:	143f      	asrs	r7, r7, #16
 8019cfc:	d541      	bpl.n	8019d82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019cfe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019d02:	4698      	mov	r8, r3
 8019d04:	9603      	str	r6, [sp, #12]
 8019d06:	f1b8 0f00 	cmp.w	r8, #0
 8019d0a:	dc59      	bgt.n	8019dc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d14:	9b00      	ldr	r3, [sp, #0]
 8019d16:	2b00      	cmp	r3, #0
 8019d18:	dd72      	ble.n	8019e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019d1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d22:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d28:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d30:	eeb0 6a62 	vmov.f32	s12, s5
 8019d34:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d40:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019d44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d48:	eeb0 6a43 	vmov.f32	s12, s6
 8019d4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d50:	ee12 2a90 	vmov	r2, s5
 8019d54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d58:	fb92 fef3 	sdiv	lr, r2, r3
 8019d5c:	ee13 2a10 	vmov	r2, s6
 8019d60:	fb92 fcf3 	sdiv	ip, r2, r3
 8019d64:	9b00      	ldr	r3, [sp, #0]
 8019d66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d6a:	3b01      	subs	r3, #1
 8019d6c:	9300      	str	r3, [sp, #0]
 8019d6e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019d72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d74:	eeb0 3a67 	vmov.f32	s6, s15
 8019d78:	bf08      	it	eq
 8019d7a:	465b      	moveq	r3, fp
 8019d7c:	eef0 2a47 	vmov.f32	s5, s14
 8019d80:	e797      	b.n	8019cb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019d82:	454f      	cmp	r7, r9
 8019d84:	dabb      	bge.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d86:	fb0c 2606 	mla	r6, ip, r6, r2
 8019d8a:	1436      	asrs	r6, r6, #16
 8019d8c:	d4b7      	bmi.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d8e:	4546      	cmp	r6, r8
 8019d90:	dab5      	bge.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019d92:	461e      	mov	r6, r3
 8019d94:	46a0      	mov	r8, r4
 8019d96:	2e00      	cmp	r6, #0
 8019d98:	ddb8      	ble.n	8019d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019d9a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019d9e:	9901      	ldr	r1, [sp, #4]
 8019da0:	1417      	asrs	r7, r2, #16
 8019da2:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019da6:	fb0a 1707 	mla	r7, sl, r7, r1
 8019daa:	9902      	ldr	r1, [sp, #8]
 8019dac:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019db0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019db4:	f828 7b02 	strh.w	r7, [r8], #2
 8019db8:	4470      	add	r0, lr
 8019dba:	4462      	add	r2, ip
 8019dbc:	3e01      	subs	r6, #1
 8019dbe:	e7ea      	b.n	8019d96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019dc0:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019dc4:	d417      	bmi.n	8019df6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dc6:	68ae      	ldr	r6, [r5, #8]
 8019dc8:	454e      	cmp	r6, r9
 8019dca:	dd14      	ble.n	8019df6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dcc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019dd0:	d411      	bmi.n	8019df6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dd2:	68ef      	ldr	r7, [r5, #12]
 8019dd4:	4557      	cmp	r7, sl
 8019dd6:	dd0e      	ble.n	8019df6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019dd8:	9f01      	ldr	r7, [sp, #4]
 8019dda:	b236      	sxth	r6, r6
 8019ddc:	fb0a 7606 	mla	r6, sl, r6, r7
 8019de0:	9f02      	ldr	r7, [sp, #8]
 8019de2:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019de6:	f06f 0101 	mvn.w	r1, #1
 8019dea:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019dee:	fb01 f608 	mul.w	r6, r1, r8
 8019df2:	9903      	ldr	r1, [sp, #12]
 8019df4:	538f      	strh	r7, [r1, r6]
 8019df6:	4470      	add	r0, lr
 8019df8:	4462      	add	r2, ip
 8019dfa:	f108 38ff 	add.w	r8, r8, #4294967295
 8019dfe:	e782      	b.n	8019d06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e00:	b005      	add	sp, #20
 8019e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e0a:	b087      	sub	sp, #28
 8019e0c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019e0e:	9205      	str	r2, [sp, #20]
 8019e10:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019e14:	9203      	str	r2, [sp, #12]
 8019e16:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019e1a:	9102      	str	r1, [sp, #8]
 8019e1c:	6861      	ldr	r1, [r4, #4]
 8019e1e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019e22:	fb01 2000 	mla	r0, r1, r0, r2
 8019e26:	6822      	ldr	r2, [r4, #0]
 8019e28:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019e2c:	9200      	str	r2, [sp, #0]
 8019e2e:	f8dc 2000 	ldr.w	r2, [ip]
 8019e32:	9204      	str	r2, [sp, #16]
 8019e34:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019e38:	3204      	adds	r2, #4
 8019e3a:	9201      	str	r2, [sp, #4]
 8019e3c:	9a03      	ldr	r2, [sp, #12]
 8019e3e:	43d5      	mvns	r5, r2
 8019e40:	b2ed      	uxtb	r5, r5
 8019e42:	9a02      	ldr	r2, [sp, #8]
 8019e44:	2a00      	cmp	r2, #0
 8019e46:	dc03      	bgt.n	8019e50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019e48:	9a05      	ldr	r2, [sp, #20]
 8019e4a:	2a00      	cmp	r2, #0
 8019e4c:	f340 812c 	ble.w	801a0a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019e50:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019e52:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019e56:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019e5a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019e5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019e60:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019e64:	2b00      	cmp	r3, #0
 8019e66:	dd10      	ble.n	8019e8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019e68:	140c      	asrs	r4, r1, #16
 8019e6a:	d405      	bmi.n	8019e78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e6c:	4574      	cmp	r4, lr
 8019e6e:	da03      	bge.n	8019e78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e70:	1414      	asrs	r4, r2, #16
 8019e72:	d401      	bmi.n	8019e78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e74:	42bc      	cmp	r4, r7
 8019e76:	db09      	blt.n	8019e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019e78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019e7a:	9800      	ldr	r0, [sp, #0]
 8019e7c:	4421      	add	r1, r4
 8019e7e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019e80:	3002      	adds	r0, #2
 8019e82:	4422      	add	r2, r4
 8019e84:	3b01      	subs	r3, #1
 8019e86:	9000      	str	r0, [sp, #0]
 8019e88:	e7ec      	b.n	8019e64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019e8a:	d071      	beq.n	8019f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019e8c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019e8e:	1e5c      	subs	r4, r3, #1
 8019e90:	fb06 1604 	mla	r6, r6, r4, r1
 8019e94:	1436      	asrs	r6, r6, #16
 8019e96:	d45d      	bmi.n	8019f54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e98:	4576      	cmp	r6, lr
 8019e9a:	da5b      	bge.n	8019f54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019e9c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019e9e:	fb06 2404 	mla	r4, r6, r4, r2
 8019ea2:	1424      	asrs	r4, r4, #16
 8019ea4:	d456      	bmi.n	8019f54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019ea6:	42bc      	cmp	r4, r7
 8019ea8:	da54      	bge.n	8019f54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019eaa:	f8dd 9000 	ldr.w	r9, [sp]
 8019eae:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019eb2:	4698      	mov	r8, r3
 8019eb4:	f1b8 0f00 	cmp.w	r8, #0
 8019eb8:	dd54      	ble.n	8019f64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019eba:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019ebe:	9804      	ldr	r0, [sp, #16]
 8019ec0:	1414      	asrs	r4, r2, #16
 8019ec2:	fb07 0404 	mla	r4, r7, r4, r0
 8019ec6:	140e      	asrs	r6, r1, #16
 8019ec8:	9801      	ldr	r0, [sp, #4]
 8019eca:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019ece:	f8b9 4000 	ldrh.w	r4, [r9]
 8019ed2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019ed6:	eb00 0b0e 	add.w	fp, r0, lr
 8019eda:	1227      	asrs	r7, r4, #8
 8019edc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019ee0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019ee4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019ee8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019eea:	fb16 f60a 	smulbb	r6, r6, sl
 8019eee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ef2:	fb07 6705 	mla	r7, r7, r5, r6
 8019ef6:	10e6      	asrs	r6, r4, #3
 8019ef8:	00e4      	lsls	r4, r4, #3
 8019efa:	b2e4      	uxtb	r4, r4
 8019efc:	fb1b fb0a 	smulbb	fp, fp, sl
 8019f00:	fb14 f405 	smulbb	r4, r4, r5
 8019f04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f08:	b2bf      	uxth	r7, r7
 8019f0a:	fb06 b605 	mla	r6, r6, r5, fp
 8019f0e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019f12:	b2b6      	uxth	r6, r6
 8019f14:	fa1f fe8e 	uxth.w	lr, lr
 8019f18:	1c7c      	adds	r4, r7, #1
 8019f1a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019f1e:	f106 0b01 	add.w	fp, r6, #1
 8019f22:	f10e 0401 	add.w	r4, lr, #1
 8019f26:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019f2a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019f2e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019f32:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019f36:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019f3a:	4327      	orrs	r7, r4
 8019f3c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019f40:	4401      	add	r1, r0
 8019f42:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019f44:	ea47 070b 	orr.w	r7, r7, fp
 8019f48:	f829 7b02 	strh.w	r7, [r9], #2
 8019f4c:	4402      	add	r2, r0
 8019f4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f52:	e7af      	b.n	8019eb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019f54:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019f58:	f04f 0e00 	mov.w	lr, #0
 8019f5c:	eb03 040e 	add.w	r4, r3, lr
 8019f60:	2c00      	cmp	r4, #0
 8019f62:	dc43      	bgt.n	8019fec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019f64:	9a00      	ldr	r2, [sp, #0]
 8019f66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f6a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019f6e:	9300      	str	r3, [sp, #0]
 8019f70:	9b02      	ldr	r3, [sp, #8]
 8019f72:	2b00      	cmp	r3, #0
 8019f74:	f340 8098 	ble.w	801a0a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019f78:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019f80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019f84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f92:	eef0 6a62 	vmov.f32	s13, s5
 8019f96:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019fa2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019fa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019faa:	eef0 6a43 	vmov.f32	s13, s6
 8019fae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019fb2:	ee12 2a90 	vmov	r2, s5
 8019fb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019fba:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fbe:	ee13 2a10 	vmov	r2, s6
 8019fc2:	9313      	str	r3, [sp, #76]	; 0x4c
 8019fc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fca:	9314      	str	r3, [sp, #80]	; 0x50
 8019fcc:	9b02      	ldr	r3, [sp, #8]
 8019fce:	9a05      	ldr	r2, [sp, #20]
 8019fd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019fd4:	3b01      	subs	r3, #1
 8019fd6:	9302      	str	r3, [sp, #8]
 8019fd8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019fdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fde:	eeb0 3a67 	vmov.f32	s6, s15
 8019fe2:	bf08      	it	eq
 8019fe4:	4613      	moveq	r3, r2
 8019fe6:	eef0 2a47 	vmov.f32	s5, s14
 8019fea:	e72a      	b.n	8019e42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019fec:	140f      	asrs	r7, r1, #16
 8019fee:	d454      	bmi.n	801a09a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ff0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019ff4:	42be      	cmp	r6, r7
 8019ff6:	dd50      	ble.n	801a09a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ff8:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019ffc:	d44d      	bmi.n	801a09a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019ffe:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a002:	4544      	cmp	r4, r8
 801a004:	dd49      	ble.n	801a09a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a006:	9c04      	ldr	r4, [sp, #16]
 801a008:	b236      	sxth	r6, r6
 801a00a:	fb08 4606 	mla	r6, r8, r6, r4
 801a00e:	f06f 0001 	mvn.w	r0, #1
 801a012:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a016:	9c01      	ldr	r4, [sp, #4]
 801a018:	fb00 fa0e 	mul.w	sl, r0, lr
 801a01c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a020:	9800      	ldr	r0, [sp, #0]
 801a022:	eb04 0b08 	add.w	fp, r4, r8
 801a026:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a02a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a02e:	9801      	ldr	r0, [sp, #4]
 801a030:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a034:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a038:	9800      	ldr	r0, [sp, #0]
 801a03a:	1227      	asrs	r7, r4, #8
 801a03c:	fb16 f609 	smulbb	r6, r6, r9
 801a040:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a044:	fb07 6705 	mla	r7, r7, r5, r6
 801a048:	10e6      	asrs	r6, r4, #3
 801a04a:	00e4      	lsls	r4, r4, #3
 801a04c:	b2e4      	uxtb	r4, r4
 801a04e:	fb1b fb09 	smulbb	fp, fp, r9
 801a052:	fb14 f405 	smulbb	r4, r4, r5
 801a056:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a05a:	b2bf      	uxth	r7, r7
 801a05c:	fb06 b605 	mla	r6, r6, r5, fp
 801a060:	fb08 4809 	mla	r8, r8, r9, r4
 801a064:	b2b6      	uxth	r6, r6
 801a066:	fa1f f888 	uxth.w	r8, r8
 801a06a:	1c7c      	adds	r4, r7, #1
 801a06c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a070:	f106 0b01 	add.w	fp, r6, #1
 801a074:	f108 0401 	add.w	r4, r8, #1
 801a078:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a07c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a080:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a084:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a088:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a08c:	4327      	orrs	r7, r4
 801a08e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a092:	ea47 070b 	orr.w	r7, r7, fp
 801a096:	f820 700a 	strh.w	r7, [r0, sl]
 801a09a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a09c:	4401      	add	r1, r0
 801a09e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a0a0:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a0a4:	4402      	add	r2, r0
 801a0a6:	e759      	b.n	8019f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a0a8:	b007      	add	sp, #28
 801a0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a0b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0b4:	b085      	sub	sp, #20
 801a0b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a0ba:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a0bc:	9203      	str	r2, [sp, #12]
 801a0be:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a0c2:	6870      	ldr	r0, [r6, #4]
 801a0c4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a0c6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a0ca:	686f      	ldr	r7, [r5, #4]
 801a0cc:	9101      	str	r1, [sp, #4]
 801a0ce:	fb00 2404 	mla	r4, r0, r4, r2
 801a0d2:	6832      	ldr	r2, [r6, #0]
 801a0d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a0d8:	682a      	ldr	r2, [r5, #0]
 801a0da:	9202      	str	r2, [sp, #8]
 801a0dc:	3704      	adds	r7, #4
 801a0de:	9a01      	ldr	r2, [sp, #4]
 801a0e0:	2a00      	cmp	r2, #0
 801a0e2:	dc03      	bgt.n	801a0ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a0e4:	9a03      	ldr	r2, [sp, #12]
 801a0e6:	2a00      	cmp	r2, #0
 801a0e8:	f340 80cc 	ble.w	801a284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a0ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a0ee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a0f2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a0f6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a0fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a0fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a100:	2b00      	cmp	r3, #0
 801a102:	dd0d      	ble.n	801a120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a104:	1406      	asrs	r6, r0, #16
 801a106:	d405      	bmi.n	801a114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a108:	454e      	cmp	r6, r9
 801a10a:	da03      	bge.n	801a114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a10c:	1416      	asrs	r6, r2, #16
 801a10e:	d401      	bmi.n	801a114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a110:	4546      	cmp	r6, r8
 801a112:	db06      	blt.n	801a122 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a114:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a116:	4460      	add	r0, ip
 801a118:	4432      	add	r2, r6
 801a11a:	3b01      	subs	r3, #1
 801a11c:	3402      	adds	r4, #2
 801a11e:	e7ef      	b.n	801a100 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a120:	d00f      	beq.n	801a142 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a122:	1e5e      	subs	r6, r3, #1
 801a124:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a128:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a12c:	d543      	bpl.n	801a1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a12e:	4698      	mov	r8, r3
 801a130:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a134:	f1b8 0f00 	cmp.w	r8, #0
 801a138:	dc71      	bgt.n	801a21e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a13a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a13e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a142:	9b01      	ldr	r3, [sp, #4]
 801a144:	2b00      	cmp	r3, #0
 801a146:	f340 809d 	ble.w	801a284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a14a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a14e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a152:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a156:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a158:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a15c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a160:	eeb0 6a62 	vmov.f32	s12, s5
 801a164:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a168:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a16c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a170:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a174:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a178:	eeb0 6a43 	vmov.f32	s12, s6
 801a17c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a180:	ee12 2a90 	vmov	r2, s5
 801a184:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a188:	fb92 fcf3 	sdiv	ip, r2, r3
 801a18c:	ee13 2a10 	vmov	r2, s6
 801a190:	fb92 f3f3 	sdiv	r3, r2, r3
 801a194:	9312      	str	r3, [sp, #72]	; 0x48
 801a196:	9b01      	ldr	r3, [sp, #4]
 801a198:	9a03      	ldr	r2, [sp, #12]
 801a19a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a19e:	3b01      	subs	r3, #1
 801a1a0:	9301      	str	r3, [sp, #4]
 801a1a2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a1a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1a8:	eeb0 3a67 	vmov.f32	s6, s15
 801a1ac:	bf08      	it	eq
 801a1ae:	4613      	moveq	r3, r2
 801a1b0:	eef0 2a47 	vmov.f32	s5, s14
 801a1b4:	e793      	b.n	801a0de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a1b6:	45ce      	cmp	lr, r9
 801a1b8:	dab9      	bge.n	801a12e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a1ba:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a1bc:	fb01 2606 	mla	r6, r1, r6, r2
 801a1c0:	1436      	asrs	r6, r6, #16
 801a1c2:	d4b4      	bmi.n	801a12e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a1c4:	4546      	cmp	r6, r8
 801a1c6:	dab2      	bge.n	801a12e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a1c8:	4698      	mov	r8, r3
 801a1ca:	46a2      	mov	sl, r4
 801a1cc:	f1b8 0f00 	cmp.w	r8, #0
 801a1d0:	ddb3      	ble.n	801a13a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a1d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a1d6:	9902      	ldr	r1, [sp, #8]
 801a1d8:	1416      	asrs	r6, r2, #16
 801a1da:	fb09 1606 	mla	r6, r9, r6, r1
 801a1de:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a1e2:	492a      	ldr	r1, [pc, #168]	; (801a28c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a1e4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a1e8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a1ec:	eb07 0b0e 	add.w	fp, r7, lr
 801a1f0:	4460      	add	r0, ip
 801a1f2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a1f6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a1fa:	00f6      	lsls	r6, r6, #3
 801a1fc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a200:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a204:	ea49 0606 	orr.w	r6, r9, r6
 801a208:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a20c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a20e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a212:	f82a 6b02 	strh.w	r6, [sl], #2
 801a216:	440a      	add	r2, r1
 801a218:	f108 38ff 	add.w	r8, r8, #4294967295
 801a21c:	e7d6      	b.n	801a1cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a21e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a222:	d429      	bmi.n	801a278 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a224:	68ae      	ldr	r6, [r5, #8]
 801a226:	454e      	cmp	r6, r9
 801a228:	dd26      	ble.n	801a278 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a22a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a22e:	d423      	bmi.n	801a278 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a230:	68e9      	ldr	r1, [r5, #12]
 801a232:	4559      	cmp	r1, fp
 801a234:	dd20      	ble.n	801a278 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a236:	9902      	ldr	r1, [sp, #8]
 801a238:	fa0f fe86 	sxth.w	lr, r6
 801a23c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a240:	f06f 0101 	mvn.w	r1, #1
 801a244:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a248:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a24c:	eb07 060e 	add.w	r6, r7, lr
 801a250:	fb01 f908 	mul.w	r9, r1, r8
 801a254:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a258:	7876      	ldrb	r6, [r6, #1]
 801a25a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a25e:	00f6      	lsls	r6, r6, #3
 801a260:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a264:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a268:	ea4b 0606 	orr.w	r6, fp, r6
 801a26c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a270:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a274:	f82a 6009 	strh.w	r6, [sl, r9]
 801a278:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a27a:	4460      	add	r0, ip
 801a27c:	440a      	add	r2, r1
 801a27e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a282:	e757      	b.n	801a134 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a284:	b005      	add	sp, #20
 801a286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a28a:	bf00      	nop
 801a28c:	fffff800 	.word	0xfffff800

0801a290 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a294:	b087      	sub	sp, #28
 801a296:	468b      	mov	fp, r1
 801a298:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a29a:	9204      	str	r2, [sp, #16]
 801a29c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a2a0:	9205      	str	r2, [sp, #20]
 801a2a2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a2a6:	6841      	ldr	r1, [r0, #4]
 801a2a8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a2ac:	fb01 2404 	mla	r4, r1, r4, r2
 801a2b0:	6802      	ldr	r2, [r0, #0]
 801a2b2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a2b6:	f8dc 2000 	ldr.w	r2, [ip]
 801a2ba:	9201      	str	r2, [sp, #4]
 801a2bc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a2c0:	3204      	adds	r2, #4
 801a2c2:	9202      	str	r2, [sp, #8]
 801a2c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a2c8:	f1bb 0f00 	cmp.w	fp, #0
 801a2cc:	dc03      	bgt.n	801a2d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a2ce:	9a04      	ldr	r2, [sp, #16]
 801a2d0:	2a00      	cmp	r2, #0
 801a2d2:	f340 8138 	ble.w	801a546 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a2d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a2d8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a2dc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a2e0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a2e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a2e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a2ea:	2b00      	cmp	r3, #0
 801a2ec:	dd0e      	ble.n	801a30c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a2ee:	1402      	asrs	r2, r0, #16
 801a2f0:	d405      	bmi.n	801a2fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2f2:	42ba      	cmp	r2, r7
 801a2f4:	da03      	bge.n	801a2fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2f6:	140a      	asrs	r2, r1, #16
 801a2f8:	d401      	bmi.n	801a2fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2fa:	42b2      	cmp	r2, r6
 801a2fc:	db07      	blt.n	801a30e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a2fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a300:	4410      	add	r0, r2
 801a302:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a304:	3b01      	subs	r3, #1
 801a306:	4411      	add	r1, r2
 801a308:	3402      	adds	r4, #2
 801a30a:	e7ee      	b.n	801a2ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a30c:	d019      	beq.n	801a342 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a30e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a310:	1e5a      	subs	r2, r3, #1
 801a312:	fb05 0502 	mla	r5, r5, r2, r0
 801a316:	142d      	asrs	r5, r5, #16
 801a318:	d409      	bmi.n	801a32e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a31a:	42bd      	cmp	r5, r7
 801a31c:	da07      	bge.n	801a32e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a31e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a320:	fb05 1202 	mla	r2, r5, r2, r1
 801a324:	1412      	asrs	r2, r2, #16
 801a326:	d402      	bmi.n	801a32e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a328:	42b2      	cmp	r2, r6
 801a32a:	f2c0 80ac 	blt.w	801a486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a32e:	f04f 0e00 	mov.w	lr, #0
 801a332:	eb03 020e 	add.w	r2, r3, lr
 801a336:	2a00      	cmp	r2, #0
 801a338:	dc3e      	bgt.n	801a3b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a33a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a33e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a342:	f1bb 0f00 	cmp.w	fp, #0
 801a346:	f340 80fe 	ble.w	801a546 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a34a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a34e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a352:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a356:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a358:	f1bb 0b01 	subs.w	fp, fp, #1
 801a35c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a360:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a364:	eeb0 6a62 	vmov.f32	s12, s5
 801a368:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a36c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a370:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a374:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a378:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a37c:	eeb0 6a43 	vmov.f32	s12, s6
 801a380:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a384:	ee12 2a90 	vmov	r2, s5
 801a388:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a38c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a390:	ee13 2a10 	vmov	r2, s6
 801a394:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a398:	9313      	str	r3, [sp, #76]	; 0x4c
 801a39a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a39c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3a0:	9a04      	ldr	r2, [sp, #16]
 801a3a2:	9314      	str	r3, [sp, #80]	; 0x50
 801a3a4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a3a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3aa:	eeb0 3a67 	vmov.f32	s6, s15
 801a3ae:	bf08      	it	eq
 801a3b0:	4613      	moveq	r3, r2
 801a3b2:	eef0 2a47 	vmov.f32	s5, s14
 801a3b6:	e787      	b.n	801a2c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a3b8:	1406      	asrs	r6, r0, #16
 801a3ba:	d45d      	bmi.n	801a478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3bc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a3c0:	42b5      	cmp	r5, r6
 801a3c2:	dd59      	ble.n	801a478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3c4:	140f      	asrs	r7, r1, #16
 801a3c6:	d457      	bmi.n	801a478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3c8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a3cc:	42ba      	cmp	r2, r7
 801a3ce:	dd53      	ble.n	801a478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3d0:	9a01      	ldr	r2, [sp, #4]
 801a3d2:	b22d      	sxth	r5, r5
 801a3d4:	fb07 2505 	mla	r5, r7, r5, r2
 801a3d8:	5daa      	ldrb	r2, [r5, r6]
 801a3da:	9d02      	ldr	r5, [sp, #8]
 801a3dc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a3e0:	0e2e      	lsrs	r6, r5, #24
 801a3e2:	d049      	beq.n	801a478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a3e4:	f06f 0201 	mvn.w	r2, #1
 801a3e8:	fb02 f20e 	mul.w	r2, r2, lr
 801a3ec:	9203      	str	r2, [sp, #12]
 801a3ee:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a3f2:	9a05      	ldr	r2, [sp, #20]
 801a3f4:	4356      	muls	r6, r2
 801a3f6:	1c72      	adds	r2, r6, #1
 801a3f8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a3fc:	1212      	asrs	r2, r2, #8
 801a3fe:	fa1f f982 	uxth.w	r9, r2
 801a402:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a406:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a40a:	43d2      	mvns	r2, r2
 801a40c:	b2d2      	uxtb	r2, r2
 801a40e:	fb16 f609 	smulbb	r6, r6, r9
 801a412:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a416:	fb07 6702 	mla	r7, r7, r2, r6
 801a41a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a41e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a422:	b2ed      	uxtb	r5, r5
 801a424:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a428:	fa5f f888 	uxtb.w	r8, r8
 801a42c:	fb15 f509 	smulbb	r5, r5, r9
 801a430:	fb08 5502 	mla	r5, r8, r2, r5
 801a434:	b2bf      	uxth	r7, r7
 801a436:	fb1a fa09 	smulbb	sl, sl, r9
 801a43a:	b2ad      	uxth	r5, r5
 801a43c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a440:	fb06 a602 	mla	r6, r6, r2, sl
 801a444:	1c7a      	adds	r2, r7, #1
 801a446:	f105 0a01 	add.w	sl, r5, #1
 801a44a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a44e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a452:	b2b6      	uxth	r6, r6
 801a454:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a458:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a45c:	ea4a 0707 	orr.w	r7, sl, r7
 801a460:	f106 0a01 	add.w	sl, r6, #1
 801a464:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a468:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a46c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a470:	9a03      	ldr	r2, [sp, #12]
 801a472:	ea47 070a 	orr.w	r7, r7, sl
 801a476:	52a7      	strh	r7, [r4, r2]
 801a478:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a47a:	4410      	add	r0, r2
 801a47c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a47e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a482:	4411      	add	r1, r2
 801a484:	e755      	b.n	801a332 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a486:	f04f 0800 	mov.w	r8, #0
 801a48a:	eba3 0208 	sub.w	r2, r3, r8
 801a48e:	2a00      	cmp	r2, #0
 801a490:	f77f af53 	ble.w	801a33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a494:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a498:	9f01      	ldr	r7, [sp, #4]
 801a49a:	140a      	asrs	r2, r1, #16
 801a49c:	1405      	asrs	r5, r0, #16
 801a49e:	fb06 7202 	mla	r2, r6, r2, r7
 801a4a2:	5d52      	ldrb	r2, [r2, r5]
 801a4a4:	9d02      	ldr	r5, [sp, #8]
 801a4a6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a4aa:	0e2e      	lsrs	r6, r5, #24
 801a4ac:	d044      	beq.n	801a538 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a4ae:	9a05      	ldr	r2, [sp, #20]
 801a4b0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a4b4:	4356      	muls	r6, r2
 801a4b6:	1c72      	adds	r2, r6, #1
 801a4b8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a4bc:	1212      	asrs	r2, r2, #8
 801a4be:	fa1f f982 	uxth.w	r9, r2
 801a4c2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a4c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a4ca:	43d2      	mvns	r2, r2
 801a4cc:	b2d2      	uxtb	r2, r2
 801a4ce:	fb16 f609 	smulbb	r6, r6, r9
 801a4d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a4d6:	fb07 6702 	mla	r7, r7, r2, r6
 801a4da:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a4de:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a4e2:	b2ed      	uxtb	r5, r5
 801a4e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4e8:	fa5f fe8e 	uxtb.w	lr, lr
 801a4ec:	fb15 f509 	smulbb	r5, r5, r9
 801a4f0:	fb0e 5502 	mla	r5, lr, r2, r5
 801a4f4:	b2bf      	uxth	r7, r7
 801a4f6:	fb1a fa09 	smulbb	sl, sl, r9
 801a4fa:	b2ad      	uxth	r5, r5
 801a4fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a500:	fb06 a602 	mla	r6, r6, r2, sl
 801a504:	1c7a      	adds	r2, r7, #1
 801a506:	f105 0a01 	add.w	sl, r5, #1
 801a50a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a50e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a512:	b2b6      	uxth	r6, r6
 801a514:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a518:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a51c:	ea4a 0707 	orr.w	r7, sl, r7
 801a520:	f106 0a01 	add.w	sl, r6, #1
 801a524:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a528:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a52c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a530:	ea47 070a 	orr.w	r7, r7, sl
 801a534:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a538:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a53a:	4410      	add	r0, r2
 801a53c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a53e:	f108 0801 	add.w	r8, r8, #1
 801a542:	4411      	add	r1, r2
 801a544:	e7a1      	b.n	801a48a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a546:	b007      	add	sp, #28
 801a548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a54c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a550:	b085      	sub	sp, #20
 801a552:	468b      	mov	fp, r1
 801a554:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a556:	9203      	str	r2, [sp, #12]
 801a558:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a55c:	6841      	ldr	r1, [r0, #4]
 801a55e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a562:	fb01 2404 	mla	r4, r1, r4, r2
 801a566:	6802      	ldr	r2, [r0, #0]
 801a568:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a56c:	f8de 2000 	ldr.w	r2, [lr]
 801a570:	9200      	str	r2, [sp, #0]
 801a572:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a576:	3204      	adds	r2, #4
 801a578:	9201      	str	r2, [sp, #4]
 801a57a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a57e:	f1bb 0f00 	cmp.w	fp, #0
 801a582:	dc03      	bgt.n	801a58c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a584:	9a03      	ldr	r2, [sp, #12]
 801a586:	2a00      	cmp	r2, #0
 801a588:	f340 8153 	ble.w	801a832 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a58c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a58e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a592:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a596:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a59a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a59c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a5a0:	2b00      	cmp	r3, #0
 801a5a2:	dd0e      	ble.n	801a5c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a5a4:	1408      	asrs	r0, r1, #16
 801a5a6:	d405      	bmi.n	801a5b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5a8:	42b8      	cmp	r0, r7
 801a5aa:	da03      	bge.n	801a5b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5ac:	1410      	asrs	r0, r2, #16
 801a5ae:	d401      	bmi.n	801a5b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5b0:	42b0      	cmp	r0, r6
 801a5b2:	db07      	blt.n	801a5c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a5b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a5b6:	4401      	add	r1, r0
 801a5b8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a5ba:	3b01      	subs	r3, #1
 801a5bc:	4402      	add	r2, r0
 801a5be:	3402      	adds	r4, #2
 801a5c0:	e7ee      	b.n	801a5a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a5c2:	d017      	beq.n	801a5f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a5c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a5c6:	1e58      	subs	r0, r3, #1
 801a5c8:	fb05 1500 	mla	r5, r5, r0, r1
 801a5cc:	142d      	asrs	r5, r5, #16
 801a5ce:	d409      	bmi.n	801a5e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5d0:	42bd      	cmp	r5, r7
 801a5d2:	da07      	bge.n	801a5e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a5d6:	fb05 2000 	mla	r0, r5, r0, r2
 801a5da:	1400      	asrs	r0, r0, #16
 801a5dc:	d402      	bmi.n	801a5e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5de:	42b0      	cmp	r0, r6
 801a5e0:	f2c0 80bc 	blt.w	801a75c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a5e4:	2600      	movs	r6, #0
 801a5e6:	1998      	adds	r0, r3, r6
 801a5e8:	2800      	cmp	r0, #0
 801a5ea:	dc3e      	bgt.n	801a66a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a5ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a5f4:	f1bb 0f00 	cmp.w	fp, #0
 801a5f8:	f340 811b 	ble.w	801a832 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a5fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a600:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a604:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a608:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a60a:	f1bb 0b01 	subs.w	fp, fp, #1
 801a60e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a612:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a616:	eeb0 6a62 	vmov.f32	s12, s5
 801a61a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a61e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a622:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a626:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a62a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a62e:	eeb0 6a43 	vmov.f32	s12, s6
 801a632:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a636:	ee12 2a90 	vmov	r2, s5
 801a63a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a63e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a642:	ee13 2a10 	vmov	r2, s6
 801a646:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a64a:	9311      	str	r3, [sp, #68]	; 0x44
 801a64c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a64e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a652:	9a03      	ldr	r2, [sp, #12]
 801a654:	9312      	str	r3, [sp, #72]	; 0x48
 801a656:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a65a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a65c:	eeb0 3a67 	vmov.f32	s6, s15
 801a660:	bf08      	it	eq
 801a662:	4613      	moveq	r3, r2
 801a664:	eef0 2a47 	vmov.f32	s5, s14
 801a668:	e789      	b.n	801a57e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a66a:	140f      	asrs	r7, r1, #16
 801a66c:	d426      	bmi.n	801a6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a66e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a672:	42bd      	cmp	r5, r7
 801a674:	dd22      	ble.n	801a6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a676:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a67a:	d41f      	bmi.n	801a6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a67c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a680:	4560      	cmp	r0, ip
 801a682:	dd1b      	ble.n	801a6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a684:	9800      	ldr	r0, [sp, #0]
 801a686:	b22d      	sxth	r5, r5
 801a688:	fb0c 0505 	mla	r5, ip, r5, r0
 801a68c:	5de8      	ldrb	r0, [r5, r7]
 801a68e:	9d01      	ldr	r5, [sp, #4]
 801a690:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a694:	0e07      	lsrs	r7, r0, #24
 801a696:	2fff      	cmp	r7, #255	; 0xff
 801a698:	d116      	bne.n	801a6c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a69a:	f06f 0501 	mvn.w	r5, #1
 801a69e:	fb05 f706 	mul.w	r7, r5, r6
 801a6a2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a6a6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a6aa:	0945      	lsrs	r5, r0, #5
 801a6ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a6b0:	ea4c 0505 	orr.w	r5, ip, r5
 801a6b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a6b8:	4305      	orrs	r5, r0
 801a6ba:	53e5      	strh	r5, [r4, r7]
 801a6bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a6be:	4401      	add	r1, r0
 801a6c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a6c2:	3e01      	subs	r6, #1
 801a6c4:	4402      	add	r2, r0
 801a6c6:	e78e      	b.n	801a5e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a6c8:	b2fd      	uxtb	r5, r7
 801a6ca:	2f00      	cmp	r7, #0
 801a6cc:	d0f6      	beq.n	801a6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a6ce:	f06f 0701 	mvn.w	r7, #1
 801a6d2:	4377      	muls	r7, r6
 801a6d4:	fa1f f985 	uxth.w	r9, r5
 801a6d8:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a6dc:	9702      	str	r7, [sp, #8]
 801a6de:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a6e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a6e6:	43ed      	mvns	r5, r5
 801a6e8:	b2ed      	uxtb	r5, r5
 801a6ea:	fb17 f709 	smulbb	r7, r7, r9
 801a6ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6f2:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a6f6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a6fa:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a6fe:	b2c0      	uxtb	r0, r0
 801a700:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a704:	fa5f f888 	uxtb.w	r8, r8
 801a708:	fb10 f009 	smulbb	r0, r0, r9
 801a70c:	fb08 0005 	mla	r0, r8, r5, r0
 801a710:	b280      	uxth	r0, r0
 801a712:	fa1f fc8c 	uxth.w	ip, ip
 801a716:	fb1a fa09 	smulbb	sl, sl, r9
 801a71a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a71e:	fb07 a705 	mla	r7, r7, r5, sl
 801a722:	f100 0a01 	add.w	sl, r0, #1
 801a726:	f10c 0501 	add.w	r5, ip, #1
 801a72a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a72e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a732:	b2bf      	uxth	r7, r7
 801a734:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a738:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a73c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a740:	f107 0a01 	add.w	sl, r7, #1
 801a744:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a748:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a74c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a750:	9802      	ldr	r0, [sp, #8]
 801a752:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a756:	f824 c000 	strh.w	ip, [r4, r0]
 801a75a:	e7af      	b.n	801a6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a75c:	f04f 0800 	mov.w	r8, #0
 801a760:	eba3 0008 	sub.w	r0, r3, r8
 801a764:	2800      	cmp	r0, #0
 801a766:	f77f af41 	ble.w	801a5ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a76a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a76e:	9f00      	ldr	r7, [sp, #0]
 801a770:	1410      	asrs	r0, r2, #16
 801a772:	140d      	asrs	r5, r1, #16
 801a774:	fb06 7000 	mla	r0, r6, r0, r7
 801a778:	5d40      	ldrb	r0, [r0, r5]
 801a77a:	9d01      	ldr	r5, [sp, #4]
 801a77c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a780:	0e2e      	lsrs	r6, r5, #24
 801a782:	2eff      	cmp	r6, #255	; 0xff
 801a784:	d112      	bne.n	801a7ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a786:	482c      	ldr	r0, [pc, #176]	; (801a838 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a788:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a78c:	0968      	lsrs	r0, r5, #5
 801a78e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a792:	4330      	orrs	r0, r6
 801a794:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a798:	4328      	orrs	r0, r5
 801a79a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a79e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a7a0:	4401      	add	r1, r0
 801a7a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a7a4:	f108 0801 	add.w	r8, r8, #1
 801a7a8:	4402      	add	r2, r0
 801a7aa:	e7d9      	b.n	801a760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a7ac:	b2f0      	uxtb	r0, r6
 801a7ae:	2e00      	cmp	r6, #0
 801a7b0:	d0f5      	beq.n	801a79e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a7b2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a7b6:	fa1f f980 	uxth.w	r9, r0
 801a7ba:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a7be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a7c2:	43c0      	mvns	r0, r0
 801a7c4:	b2c0      	uxtb	r0, r0
 801a7c6:	fb16 f609 	smulbb	r6, r6, r9
 801a7ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a7ce:	fb07 6700 	mla	r7, r7, r0, r6
 801a7d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a7d6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a7da:	b2ed      	uxtb	r5, r5
 801a7dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a7e0:	fa5f fc8c 	uxtb.w	ip, ip
 801a7e4:	fb15 f509 	smulbb	r5, r5, r9
 801a7e8:	fb0c 5500 	mla	r5, ip, r0, r5
 801a7ec:	b2bf      	uxth	r7, r7
 801a7ee:	fb1a fa09 	smulbb	sl, sl, r9
 801a7f2:	b2ad      	uxth	r5, r5
 801a7f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a7f8:	fb06 a600 	mla	r6, r6, r0, sl
 801a7fc:	1c78      	adds	r0, r7, #1
 801a7fe:	f105 0a01 	add.w	sl, r5, #1
 801a802:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a806:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a80a:	b2b6      	uxth	r6, r6
 801a80c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a810:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a814:	ea4a 0707 	orr.w	r7, sl, r7
 801a818:	f106 0a01 	add.w	sl, r6, #1
 801a81c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a820:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a824:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a828:	ea47 070a 	orr.w	r7, r7, sl
 801a82c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a830:	e7b5      	b.n	801a79e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a832:	b005      	add	sp, #20
 801a834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a838:	fffff800 	.word	0xfffff800

0801a83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a83c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a840:	b087      	sub	sp, #28
 801a842:	468b      	mov	fp, r1
 801a844:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a846:	9204      	str	r2, [sp, #16]
 801a848:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a84c:	9205      	str	r2, [sp, #20]
 801a84e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a852:	6861      	ldr	r1, [r4, #4]
 801a854:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a858:	fb01 2000 	mla	r0, r1, r0, r2
 801a85c:	6822      	ldr	r2, [r4, #0]
 801a85e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a862:	f8de 2000 	ldr.w	r2, [lr]
 801a866:	9201      	str	r2, [sp, #4]
 801a868:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a86c:	9202      	str	r2, [sp, #8]
 801a86e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a872:	f1bb 0f00 	cmp.w	fp, #0
 801a876:	dc03      	bgt.n	801a880 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a878:	9a04      	ldr	r2, [sp, #16]
 801a87a:	2a00      	cmp	r2, #0
 801a87c:	f340 8142 	ble.w	801ab04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a880:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a882:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a886:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a88a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a88e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a890:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a894:	2b00      	cmp	r3, #0
 801a896:	dd0e      	ble.n	801a8b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a898:	140c      	asrs	r4, r1, #16
 801a89a:	d405      	bmi.n	801a8a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a89c:	42bc      	cmp	r4, r7
 801a89e:	da03      	bge.n	801a8a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a8a0:	1414      	asrs	r4, r2, #16
 801a8a2:	d401      	bmi.n	801a8a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a8a4:	42b4      	cmp	r4, r6
 801a8a6:	db07      	blt.n	801a8b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a8a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a8aa:	4421      	add	r1, r4
 801a8ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a8ae:	3b01      	subs	r3, #1
 801a8b0:	4422      	add	r2, r4
 801a8b2:	3002      	adds	r0, #2
 801a8b4:	e7ee      	b.n	801a894 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a8b6:	d019      	beq.n	801a8ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a8b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a8ba:	1e5c      	subs	r4, r3, #1
 801a8bc:	fb05 1504 	mla	r5, r5, r4, r1
 801a8c0:	142d      	asrs	r5, r5, #16
 801a8c2:	d409      	bmi.n	801a8d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a8c4:	42bd      	cmp	r5, r7
 801a8c6:	da07      	bge.n	801a8d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a8c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a8ca:	fb05 2404 	mla	r4, r5, r4, r2
 801a8ce:	1424      	asrs	r4, r4, #16
 801a8d0:	d402      	bmi.n	801a8d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a8d2:	42b4      	cmp	r4, r6
 801a8d4:	f2c0 80b1 	blt.w	801aa3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a8d8:	f04f 0800 	mov.w	r8, #0
 801a8dc:	eb03 0408 	add.w	r4, r3, r8
 801a8e0:	2c00      	cmp	r4, #0
 801a8e2:	dc3e      	bgt.n	801a962 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a8e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a8e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a8ec:	f1bb 0f00 	cmp.w	fp, #0
 801a8f0:	f340 8108 	ble.w	801ab04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a8f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a900:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a902:	f1bb 0b01 	subs.w	fp, fp, #1
 801a906:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a90a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a90e:	eeb0 6a62 	vmov.f32	s12, s5
 801a912:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a916:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a91a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a91e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a922:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a926:	eeb0 6a43 	vmov.f32	s12, s6
 801a92a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a92e:	ee12 2a90 	vmov	r2, s5
 801a932:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a936:	fb92 f3f3 	sdiv	r3, r2, r3
 801a93a:	ee13 2a10 	vmov	r2, s6
 801a93e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a942:	9313      	str	r3, [sp, #76]	; 0x4c
 801a944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a946:	fb92 f3f3 	sdiv	r3, r2, r3
 801a94a:	9a04      	ldr	r2, [sp, #16]
 801a94c:	9314      	str	r3, [sp, #80]	; 0x50
 801a94e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a952:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a954:	eeb0 3a67 	vmov.f32	s6, s15
 801a958:	bf08      	it	eq
 801a95a:	4613      	moveq	r3, r2
 801a95c:	eef0 2a47 	vmov.f32	s5, s14
 801a960:	e787      	b.n	801a872 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a962:	140e      	asrs	r6, r1, #16
 801a964:	d462      	bmi.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a966:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a96a:	42b5      	cmp	r5, r6
 801a96c:	dd5e      	ble.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a96e:	1417      	asrs	r7, r2, #16
 801a970:	d45c      	bmi.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a972:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a976:	42bc      	cmp	r4, r7
 801a978:	dd58      	ble.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a97a:	b22d      	sxth	r5, r5
 801a97c:	fb07 6505 	mla	r5, r7, r5, r6
 801a980:	9c02      	ldr	r4, [sp, #8]
 801a982:	5d66      	ldrb	r6, [r4, r5]
 801a984:	2e00      	cmp	r6, #0
 801a986:	d051      	beq.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a988:	9c01      	ldr	r4, [sp, #4]
 801a98a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a98e:	f06f 0401 	mvn.w	r4, #1
 801a992:	fb04 f408 	mul.w	r4, r4, r8
 801a996:	9403      	str	r4, [sp, #12]
 801a998:	5b05      	ldrh	r5, [r0, r4]
 801a99a:	9c05      	ldr	r4, [sp, #20]
 801a99c:	4366      	muls	r6, r4
 801a99e:	1c74      	adds	r4, r6, #1
 801a9a0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a9a4:	1224      	asrs	r4, r4, #8
 801a9a6:	b2a7      	uxth	r7, r4
 801a9a8:	122e      	asrs	r6, r5, #8
 801a9aa:	43e4      	mvns	r4, r4
 801a9ac:	b2e4      	uxtb	r4, r4
 801a9ae:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a9b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a9b6:	fb16 f604 	smulbb	r6, r6, r4
 801a9ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a9be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a9c2:	00ed      	lsls	r5, r5, #3
 801a9c4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a9c8:	b2ed      	uxtb	r5, r5
 801a9ca:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a9ce:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a9d2:	fb15 f504 	smulbb	r5, r5, r4
 801a9d6:	fa5f f989 	uxtb.w	r9, r9
 801a9da:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a9de:	fb09 5507 	mla	r5, r9, r7, r5
 801a9e2:	fb1a fa04 	smulbb	sl, sl, r4
 801a9e6:	fa1f fc8c 	uxth.w	ip, ip
 801a9ea:	b2ad      	uxth	r5, r5
 801a9ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a9f0:	fb06 a607 	mla	r6, r6, r7, sl
 801a9f4:	f10c 0401 	add.w	r4, ip, #1
 801a9f8:	f105 0a01 	add.w	sl, r5, #1
 801a9fc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801aa00:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aa04:	b2b6      	uxth	r6, r6
 801aa06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa0a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aa0e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aa12:	f106 0a01 	add.w	sl, r6, #1
 801aa16:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aa1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa1e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa22:	9c03      	ldr	r4, [sp, #12]
 801aa24:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aa28:	f820 c004 	strh.w	ip, [r0, r4]
 801aa2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa2e:	4421      	add	r1, r4
 801aa30:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa32:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa36:	4422      	add	r2, r4
 801aa38:	e750      	b.n	801a8dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa3a:	f04f 0900 	mov.w	r9, #0
 801aa3e:	eba3 0409 	sub.w	r4, r3, r9
 801aa42:	2c00      	cmp	r4, #0
 801aa44:	f77f af4e 	ble.w	801a8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aa48:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801aa4c:	140d      	asrs	r5, r1, #16
 801aa4e:	1414      	asrs	r4, r2, #16
 801aa50:	fb06 5404 	mla	r4, r6, r4, r5
 801aa54:	9d02      	ldr	r5, [sp, #8]
 801aa56:	5d2e      	ldrb	r6, [r5, r4]
 801aa58:	2e00      	cmp	r6, #0
 801aa5a:	d04c      	beq.n	801aaf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801aa5c:	9d01      	ldr	r5, [sp, #4]
 801aa5e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801aa62:	9c05      	ldr	r4, [sp, #20]
 801aa64:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801aa68:	4366      	muls	r6, r4
 801aa6a:	1c74      	adds	r4, r6, #1
 801aa6c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801aa70:	1224      	asrs	r4, r4, #8
 801aa72:	b2a7      	uxth	r7, r4
 801aa74:	122e      	asrs	r6, r5, #8
 801aa76:	43e4      	mvns	r4, r4
 801aa78:	b2e4      	uxtb	r4, r4
 801aa7a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801aa7e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aa82:	fb16 f604 	smulbb	r6, r6, r4
 801aa86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aa8a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aa8e:	00ed      	lsls	r5, r5, #3
 801aa90:	fb0c 6c07 	mla	ip, ip, r7, r6
 801aa94:	b2ed      	uxtb	r5, r5
 801aa96:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801aa9a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801aa9e:	fb15 f504 	smulbb	r5, r5, r4
 801aaa2:	fa5f f888 	uxtb.w	r8, r8
 801aaa6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aaaa:	fb08 5507 	mla	r5, r8, r7, r5
 801aaae:	fb1a fa04 	smulbb	sl, sl, r4
 801aab2:	fa1f fc8c 	uxth.w	ip, ip
 801aab6:	b2ad      	uxth	r5, r5
 801aab8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aabc:	fb06 a607 	mla	r6, r6, r7, sl
 801aac0:	f10c 0401 	add.w	r4, ip, #1
 801aac4:	f105 0a01 	add.w	sl, r5, #1
 801aac8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801aacc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aad0:	b2b6      	uxth	r6, r6
 801aad2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aad6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aada:	ea4a 0c0c 	orr.w	ip, sl, ip
 801aade:	f106 0a01 	add.w	sl, r6, #1
 801aae2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aae6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aaea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aaee:	ea4c 0c0a 	orr.w	ip, ip, sl
 801aaf2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801aaf6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aaf8:	4421      	add	r1, r4
 801aafa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aafc:	f109 0901 	add.w	r9, r9, #1
 801ab00:	4422      	add	r2, r4
 801ab02:	e79c      	b.n	801aa3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801ab04:	b007      	add	sp, #28
 801ab06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ab0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab0e:	b085      	sub	sp, #20
 801ab10:	468b      	mov	fp, r1
 801ab12:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab14:	9203      	str	r2, [sp, #12]
 801ab16:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801ab1a:	6861      	ldr	r1, [r4, #4]
 801ab1c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801ab20:	fb01 2000 	mla	r0, r1, r0, r2
 801ab24:	6822      	ldr	r2, [r4, #0]
 801ab26:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ab2a:	f8d8 2000 	ldr.w	r2, [r8]
 801ab2e:	9200      	str	r2, [sp, #0]
 801ab30:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801ab34:	9201      	str	r2, [sp, #4]
 801ab36:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ab3a:	f1bb 0f00 	cmp.w	fp, #0
 801ab3e:	dc03      	bgt.n	801ab48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ab40:	9a03      	ldr	r2, [sp, #12]
 801ab42:	2a00      	cmp	r2, #0
 801ab44:	f340 8146 	ble.w	801add4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ab48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ab4a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ab4e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ab52:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ab56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ab58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ab5c:	2b00      	cmp	r3, #0
 801ab5e:	dd0e      	ble.n	801ab7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ab60:	140c      	asrs	r4, r1, #16
 801ab62:	d405      	bmi.n	801ab70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab64:	42bc      	cmp	r4, r7
 801ab66:	da03      	bge.n	801ab70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab68:	1414      	asrs	r4, r2, #16
 801ab6a:	d401      	bmi.n	801ab70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ab6c:	42b4      	cmp	r4, r6
 801ab6e:	db07      	blt.n	801ab80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ab70:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ab72:	4421      	add	r1, r4
 801ab74:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ab76:	3b01      	subs	r3, #1
 801ab78:	4422      	add	r2, r4
 801ab7a:	3002      	adds	r0, #2
 801ab7c:	e7ee      	b.n	801ab5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ab7e:	d017      	beq.n	801abb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ab80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ab82:	1e5c      	subs	r4, r3, #1
 801ab84:	fb05 1504 	mla	r5, r5, r4, r1
 801ab88:	142d      	asrs	r5, r5, #16
 801ab8a:	d409      	bmi.n	801aba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab8c:	42bd      	cmp	r5, r7
 801ab8e:	da07      	bge.n	801aba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab90:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab92:	fb05 2404 	mla	r4, r5, r4, r2
 801ab96:	1424      	asrs	r4, r4, #16
 801ab98:	d402      	bmi.n	801aba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ab9a:	42b4      	cmp	r4, r6
 801ab9c:	f2c0 80b3 	blt.w	801ad06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801aba0:	2600      	movs	r6, #0
 801aba2:	199c      	adds	r4, r3, r6
 801aba4:	2c00      	cmp	r4, #0
 801aba6:	dc3e      	bgt.n	801ac26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aba8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801abac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801abb0:	f1bb 0f00 	cmp.w	fp, #0
 801abb4:	f340 810e 	ble.w	801add4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801abb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801abbc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801abc0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801abc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abc6:	f1bb 0b01 	subs.w	fp, fp, #1
 801abca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abd2:	eeb0 6a62 	vmov.f32	s12, s5
 801abd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abde:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abe2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801abe6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abea:	eeb0 6a43 	vmov.f32	s12, s6
 801abee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abf2:	ee12 2a90 	vmov	r2, s5
 801abf6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abfa:	fb92 f3f3 	sdiv	r3, r2, r3
 801abfe:	ee13 2a10 	vmov	r2, s6
 801ac02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac06:	9311      	str	r3, [sp, #68]	; 0x44
 801ac08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac0e:	9a03      	ldr	r2, [sp, #12]
 801ac10:	9312      	str	r3, [sp, #72]	; 0x48
 801ac12:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ac16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac18:	eeb0 3a67 	vmov.f32	s6, s15
 801ac1c:	bf08      	it	eq
 801ac1e:	4613      	moveq	r3, r2
 801ac20:	eef0 2a47 	vmov.f32	s5, s14
 801ac24:	e789      	b.n	801ab3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ac26:	140f      	asrs	r7, r1, #16
 801ac28:	d418      	bmi.n	801ac5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac2a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ac2e:	42bd      	cmp	r5, r7
 801ac30:	dd14      	ble.n	801ac5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac32:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ac36:	d411      	bmi.n	801ac5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac38:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801ac3c:	4564      	cmp	r4, ip
 801ac3e:	dd0d      	ble.n	801ac5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac40:	b22d      	sxth	r5, r5
 801ac42:	fb0c 7505 	mla	r5, ip, r5, r7
 801ac46:	9c01      	ldr	r4, [sp, #4]
 801ac48:	5d64      	ldrb	r4, [r4, r5]
 801ac4a:	2cff      	cmp	r4, #255	; 0xff
 801ac4c:	d10c      	bne.n	801ac68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ac4e:	9c00      	ldr	r4, [sp, #0]
 801ac50:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ac54:	f06f 0401 	mvn.w	r4, #1
 801ac58:	4374      	muls	r4, r6
 801ac5a:	5305      	strh	r5, [r0, r4]
 801ac5c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ac5e:	4421      	add	r1, r4
 801ac60:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ac62:	3e01      	subs	r6, #1
 801ac64:	4422      	add	r2, r4
 801ac66:	e79c      	b.n	801aba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ac68:	2c00      	cmp	r4, #0
 801ac6a:	d0f7      	beq.n	801ac5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ac6c:	9f00      	ldr	r7, [sp, #0]
 801ac6e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ac72:	f06f 0501 	mvn.w	r5, #1
 801ac76:	4375      	muls	r5, r6
 801ac78:	9502      	str	r5, [sp, #8]
 801ac7a:	5b45      	ldrh	r5, [r0, r5]
 801ac7c:	fa1f fc84 	uxth.w	ip, r4
 801ac80:	122f      	asrs	r7, r5, #8
 801ac82:	43e4      	mvns	r4, r4
 801ac84:	b2e4      	uxtb	r4, r4
 801ac86:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ac8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ac8e:	fb17 f704 	smulbb	r7, r7, r4
 801ac92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac96:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ac9a:	00ed      	lsls	r5, r5, #3
 801ac9c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801aca0:	b2ed      	uxtb	r5, r5
 801aca2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801aca6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801acaa:	fb15 f504 	smulbb	r5, r5, r4
 801acae:	fa5f f989 	uxtb.w	r9, r9
 801acb2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801acb6:	fb09 550c 	mla	r5, r9, ip, r5
 801acba:	fb1a fa04 	smulbb	sl, sl, r4
 801acbe:	fa1f fe8e 	uxth.w	lr, lr
 801acc2:	b2ad      	uxth	r5, r5
 801acc4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801acc8:	fb07 a70c 	mla	r7, r7, ip, sl
 801accc:	f10e 0401 	add.w	r4, lr, #1
 801acd0:	f105 0a01 	add.w	sl, r5, #1
 801acd4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801acd8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801acdc:	b2bf      	uxth	r7, r7
 801acde:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ace2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ace6:	ea4a 0e0e 	orr.w	lr, sl, lr
 801acea:	f107 0a01 	add.w	sl, r7, #1
 801acee:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801acf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801acf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801acfa:	9c02      	ldr	r4, [sp, #8]
 801acfc:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ad00:	f820 e004 	strh.w	lr, [r0, r4]
 801ad04:	e7aa      	b.n	801ac5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ad06:	f04f 0900 	mov.w	r9, #0
 801ad0a:	eba3 0409 	sub.w	r4, r3, r9
 801ad0e:	2c00      	cmp	r4, #0
 801ad10:	f77f af4a 	ble.w	801aba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ad14:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ad18:	1414      	asrs	r4, r2, #16
 801ad1a:	140d      	asrs	r5, r1, #16
 801ad1c:	fb06 5504 	mla	r5, r6, r4, r5
 801ad20:	9c01      	ldr	r4, [sp, #4]
 801ad22:	5d64      	ldrb	r4, [r4, r5]
 801ad24:	2cff      	cmp	r4, #255	; 0xff
 801ad26:	d10b      	bne.n	801ad40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ad28:	9c00      	ldr	r4, [sp, #0]
 801ad2a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ad2e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801ad32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ad34:	4421      	add	r1, r4
 801ad36:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad38:	f109 0901 	add.w	r9, r9, #1
 801ad3c:	4422      	add	r2, r4
 801ad3e:	e7e4      	b.n	801ad0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ad40:	2c00      	cmp	r4, #0
 801ad42:	d0f6      	beq.n	801ad32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ad44:	9e00      	ldr	r6, [sp, #0]
 801ad46:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801ad4a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ad4e:	b2a7      	uxth	r7, r4
 801ad50:	122e      	asrs	r6, r5, #8
 801ad52:	43e4      	mvns	r4, r4
 801ad54:	b2e4      	uxtb	r4, r4
 801ad56:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ad5a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ad5e:	fb16 f604 	smulbb	r6, r6, r4
 801ad62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ad66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad6a:	00ed      	lsls	r5, r5, #3
 801ad6c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ad70:	b2ed      	uxtb	r5, r5
 801ad72:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ad76:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ad7a:	fb15 f504 	smulbb	r5, r5, r4
 801ad7e:	fa5f fe8e 	uxtb.w	lr, lr
 801ad82:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ad86:	fb0e 5507 	mla	r5, lr, r7, r5
 801ad8a:	fb1a fa04 	smulbb	sl, sl, r4
 801ad8e:	fa1f fc8c 	uxth.w	ip, ip
 801ad92:	b2ad      	uxth	r5, r5
 801ad94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad98:	fb06 a607 	mla	r6, r6, r7, sl
 801ad9c:	f10c 0401 	add.w	r4, ip, #1
 801ada0:	f105 0a01 	add.w	sl, r5, #1
 801ada4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ada8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801adac:	b2b6      	uxth	r6, r6
 801adae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801adb2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801adb6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801adba:	f106 0a01 	add.w	sl, r6, #1
 801adbe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801adc2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801adc6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801adca:	ea4c 0c0a 	orr.w	ip, ip, sl
 801adce:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801add2:	e7ae      	b.n	801ad32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801add4:	b005      	add	sp, #20
 801add6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801adda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801adda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adde:	b085      	sub	sp, #20
 801ade0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ade2:	9203      	str	r2, [sp, #12]
 801ade4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ade8:	9201      	str	r2, [sp, #4]
 801adea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801adee:	9100      	str	r1, [sp, #0]
 801adf0:	6841      	ldr	r1, [r0, #4]
 801adf2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801adf6:	fb01 2404 	mla	r4, r1, r4, r2
 801adfa:	6802      	ldr	r2, [r0, #0]
 801adfc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ae00:	f8de 2000 	ldr.w	r2, [lr]
 801ae04:	9202      	str	r2, [sp, #8]
 801ae06:	9a01      	ldr	r2, [sp, #4]
 801ae08:	43d6      	mvns	r6, r2
 801ae0a:	b2f6      	uxtb	r6, r6
 801ae0c:	9a00      	ldr	r2, [sp, #0]
 801ae0e:	2a00      	cmp	r2, #0
 801ae10:	dc03      	bgt.n	801ae1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ae12:	9a03      	ldr	r2, [sp, #12]
 801ae14:	2a00      	cmp	r2, #0
 801ae16:	f340 8124 	ble.w	801b062 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ae1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ae1c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ae20:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ae24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae28:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ae2a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ae2e:	2b00      	cmp	r3, #0
 801ae30:	dd0e      	ble.n	801ae50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ae32:	1408      	asrs	r0, r1, #16
 801ae34:	d405      	bmi.n	801ae42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ae36:	4560      	cmp	r0, ip
 801ae38:	da03      	bge.n	801ae42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ae3a:	1410      	asrs	r0, r2, #16
 801ae3c:	d401      	bmi.n	801ae42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ae3e:	42b8      	cmp	r0, r7
 801ae40:	db07      	blt.n	801ae52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ae42:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ae44:	4401      	add	r1, r0
 801ae46:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ae48:	3b01      	subs	r3, #1
 801ae4a:	4402      	add	r2, r0
 801ae4c:	3402      	adds	r4, #2
 801ae4e:	e7ee      	b.n	801ae2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ae50:	d06e      	beq.n	801af30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ae52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae54:	1e58      	subs	r0, r3, #1
 801ae56:	fb05 1500 	mla	r5, r5, r0, r1
 801ae5a:	142d      	asrs	r5, r5, #16
 801ae5c:	d45c      	bmi.n	801af18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae5e:	4565      	cmp	r5, ip
 801ae60:	da5a      	bge.n	801af18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae62:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ae64:	fb05 2000 	mla	r0, r5, r0, r2
 801ae68:	1400      	asrs	r0, r0, #16
 801ae6a:	d455      	bmi.n	801af18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae6c:	42b8      	cmp	r0, r7
 801ae6e:	da53      	bge.n	801af18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae70:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801ae74:	4699      	mov	r9, r3
 801ae76:	46a2      	mov	sl, r4
 801ae78:	f1b9 0f00 	cmp.w	r9, #0
 801ae7c:	dd54      	ble.n	801af28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ae7e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ae82:	140d      	asrs	r5, r1, #16
 801ae84:	1410      	asrs	r0, r2, #16
 801ae86:	fb07 5000 	mla	r0, r7, r0, r5
 801ae8a:	9d02      	ldr	r5, [sp, #8]
 801ae8c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ae90:	f8ba 5000 	ldrh.w	r5, [sl]
 801ae94:	122f      	asrs	r7, r5, #8
 801ae96:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ae9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae9e:	fb17 f706 	smulbb	r7, r7, r6
 801aea2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801aea6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aeaa:	00ed      	lsls	r5, r5, #3
 801aeac:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801aeb0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801aeb4:	10c7      	asrs	r7, r0, #3
 801aeb6:	b2ed      	uxtb	r5, r5
 801aeb8:	00c0      	lsls	r0, r0, #3
 801aeba:	fb18 f806 	smulbb	r8, r8, r6
 801aebe:	fb15 f506 	smulbb	r5, r5, r6
 801aec2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aec6:	b2c0      	uxtb	r0, r0
 801aec8:	fa1f fc8c 	uxth.w	ip, ip
 801aecc:	fb07 870b 	mla	r7, r7, fp, r8
 801aed0:	fb00 500b 	mla	r0, r0, fp, r5
 801aed4:	b280      	uxth	r0, r0
 801aed6:	b2bf      	uxth	r7, r7
 801aed8:	f10c 0501 	add.w	r5, ip, #1
 801aedc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801aee0:	f107 0801 	add.w	r8, r7, #1
 801aee4:	1c45      	adds	r5, r0, #1
 801aee6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801aeea:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801aeee:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aef0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aef4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801aef8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801aefc:	ea45 0c0c 	orr.w	ip, r5, ip
 801af00:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801af04:	4401      	add	r1, r0
 801af06:	9812      	ldr	r0, [sp, #72]	; 0x48
 801af08:	ea4c 0c08 	orr.w	ip, ip, r8
 801af0c:	f82a cb02 	strh.w	ip, [sl], #2
 801af10:	4402      	add	r2, r0
 801af12:	f109 39ff 	add.w	r9, r9, #4294967295
 801af16:	e7af      	b.n	801ae78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801af18:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801af1c:	f04f 0800 	mov.w	r8, #0
 801af20:	eb03 0008 	add.w	r0, r3, r8
 801af24:	2800      	cmp	r0, #0
 801af26:	dc41      	bgt.n	801afac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801af28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af30:	9b00      	ldr	r3, [sp, #0]
 801af32:	2b00      	cmp	r3, #0
 801af34:	f340 8095 	ble.w	801b062 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801af38:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801af40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af52:	eef0 6a62 	vmov.f32	s13, s5
 801af56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af62:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801af66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af6a:	eef0 6a43 	vmov.f32	s13, s6
 801af6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af72:	ee12 2a90 	vmov	r2, s5
 801af76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801af7e:	ee13 2a10 	vmov	r2, s6
 801af82:	9311      	str	r3, [sp, #68]	; 0x44
 801af84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af86:	fb92 f3f3 	sdiv	r3, r2, r3
 801af8a:	9312      	str	r3, [sp, #72]	; 0x48
 801af8c:	9b00      	ldr	r3, [sp, #0]
 801af8e:	9a03      	ldr	r2, [sp, #12]
 801af90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af94:	3b01      	subs	r3, #1
 801af96:	9300      	str	r3, [sp, #0]
 801af98:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801af9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af9e:	eeb0 3a67 	vmov.f32	s6, s15
 801afa2:	bf08      	it	eq
 801afa4:	4613      	moveq	r3, r2
 801afa6:	eef0 2a47 	vmov.f32	s5, s14
 801afaa:	e72f      	b.n	801ae0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801afac:	140f      	asrs	r7, r1, #16
 801afae:	d451      	bmi.n	801b054 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afb0:	f8de 5008 	ldr.w	r5, [lr, #8]
 801afb4:	42bd      	cmp	r5, r7
 801afb6:	dd4d      	ble.n	801b054 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afb8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801afbc:	d44a      	bmi.n	801b054 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afbe:	f8de 000c 	ldr.w	r0, [lr, #12]
 801afc2:	4560      	cmp	r0, ip
 801afc4:	dd46      	ble.n	801b054 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801afc6:	b22d      	sxth	r5, r5
 801afc8:	fb0c 7505 	mla	r5, ip, r5, r7
 801afcc:	9802      	ldr	r0, [sp, #8]
 801afce:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801afd2:	f06f 0501 	mvn.w	r5, #1
 801afd6:	fb05 fb08 	mul.w	fp, r5, r8
 801afda:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801afde:	f834 500b 	ldrh.w	r5, [r4, fp]
 801afe2:	122f      	asrs	r7, r5, #8
 801afe4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801afe8:	fb17 f706 	smulbb	r7, r7, r6
 801afec:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801aff0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aff4:	00ed      	lsls	r5, r5, #3
 801aff6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801affa:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801affe:	10c7      	asrs	r7, r0, #3
 801b000:	b2ed      	uxtb	r5, r5
 801b002:	00c0      	lsls	r0, r0, #3
 801b004:	fb19 f906 	smulbb	r9, r9, r6
 801b008:	fb15 f506 	smulbb	r5, r5, r6
 801b00c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b010:	b2c0      	uxtb	r0, r0
 801b012:	fa1f fc8c 	uxth.w	ip, ip
 801b016:	fb07 970a 	mla	r7, r7, sl, r9
 801b01a:	fb00 500a 	mla	r0, r0, sl, r5
 801b01e:	b2bf      	uxth	r7, r7
 801b020:	b280      	uxth	r0, r0
 801b022:	f10c 0501 	add.w	r5, ip, #1
 801b026:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b02a:	f107 0901 	add.w	r9, r7, #1
 801b02e:	1c45      	adds	r5, r0, #1
 801b030:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b034:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b038:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b03c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b040:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b044:	ea45 0c0c 	orr.w	ip, r5, ip
 801b048:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b04c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b050:	f824 c00b 	strh.w	ip, [r4, fp]
 801b054:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b056:	4401      	add	r1, r0
 801b058:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b05a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b05e:	4402      	add	r2, r0
 801b060:	e75e      	b.n	801af20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b062:	b005      	add	sp, #20
 801b064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b068 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b06c:	b085      	sub	sp, #20
 801b06e:	4693      	mov	fp, r2
 801b070:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b072:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b074:	6870      	ldr	r0, [r6, #4]
 801b076:	9101      	str	r1, [sp, #4]
 801b078:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b07c:	fb00 2404 	mla	r4, r0, r4, r2
 801b080:	6832      	ldr	r2, [r6, #0]
 801b082:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b086:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b08a:	682a      	ldr	r2, [r5, #0]
 801b08c:	9202      	str	r2, [sp, #8]
 801b08e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b092:	9a01      	ldr	r2, [sp, #4]
 801b094:	2a00      	cmp	r2, #0
 801b096:	dc03      	bgt.n	801b0a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b098:	f1bb 0f00 	cmp.w	fp, #0
 801b09c:	f340 809a 	ble.w	801b1d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b0a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0a2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b0a6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b0aa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b0ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b0b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b0b4:	2b00      	cmp	r3, #0
 801b0b6:	dd0c      	ble.n	801b0d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b0b8:	1406      	asrs	r6, r0, #16
 801b0ba:	d405      	bmi.n	801b0c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b0bc:	454e      	cmp	r6, r9
 801b0be:	da03      	bge.n	801b0c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b0c0:	1416      	asrs	r6, r2, #16
 801b0c2:	d401      	bmi.n	801b0c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b0c4:	4546      	cmp	r6, r8
 801b0c6:	db05      	blt.n	801b0d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b0c8:	4470      	add	r0, lr
 801b0ca:	4462      	add	r2, ip
 801b0cc:	3b01      	subs	r3, #1
 801b0ce:	3402      	adds	r4, #2
 801b0d0:	e7f0      	b.n	801b0b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b0d2:	d00f      	beq.n	801b0f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b0d4:	1e5e      	subs	r6, r3, #1
 801b0d6:	fb0e 0706 	mla	r7, lr, r6, r0
 801b0da:	143f      	asrs	r7, r7, #16
 801b0dc:	d541      	bpl.n	801b162 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b0de:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b0e2:	4698      	mov	r8, r3
 801b0e4:	9603      	str	r6, [sp, #12]
 801b0e6:	f1b8 0f00 	cmp.w	r8, #0
 801b0ea:	dc56      	bgt.n	801b19a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b0ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b0f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0f4:	9b01      	ldr	r3, [sp, #4]
 801b0f6:	2b00      	cmp	r3, #0
 801b0f8:	dd6c      	ble.n	801b1d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b0fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b102:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b106:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b108:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b10c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b110:	eeb0 6a62 	vmov.f32	s12, s5
 801b114:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b118:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b11c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b120:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b124:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b128:	eeb0 6a43 	vmov.f32	s12, s6
 801b12c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b130:	ee12 2a90 	vmov	r2, s5
 801b134:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b138:	fb92 fef3 	sdiv	lr, r2, r3
 801b13c:	ee13 2a10 	vmov	r2, s6
 801b140:	fb92 fcf3 	sdiv	ip, r2, r3
 801b144:	9b01      	ldr	r3, [sp, #4]
 801b146:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b14a:	3b01      	subs	r3, #1
 801b14c:	9301      	str	r3, [sp, #4]
 801b14e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b152:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b154:	eeb0 3a67 	vmov.f32	s6, s15
 801b158:	bf08      	it	eq
 801b15a:	465b      	moveq	r3, fp
 801b15c:	eef0 2a47 	vmov.f32	s5, s14
 801b160:	e797      	b.n	801b092 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b162:	454f      	cmp	r7, r9
 801b164:	dabb      	bge.n	801b0de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b166:	fb0c 2606 	mla	r6, ip, r6, r2
 801b16a:	1436      	asrs	r6, r6, #16
 801b16c:	d4b7      	bmi.n	801b0de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b16e:	4546      	cmp	r6, r8
 801b170:	dab5      	bge.n	801b0de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b172:	461e      	mov	r6, r3
 801b174:	46a0      	mov	r8, r4
 801b176:	2e00      	cmp	r6, #0
 801b178:	ddb8      	ble.n	801b0ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b17a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b17e:	9902      	ldr	r1, [sp, #8]
 801b180:	1417      	asrs	r7, r2, #16
 801b182:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b186:	fb0a 9707 	mla	r7, sl, r7, r9
 801b18a:	4470      	add	r0, lr
 801b18c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b190:	f828 7b02 	strh.w	r7, [r8], #2
 801b194:	4462      	add	r2, ip
 801b196:	3e01      	subs	r6, #1
 801b198:	e7ed      	b.n	801b176 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b19a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b19e:	d414      	bmi.n	801b1ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b1a0:	68ae      	ldr	r6, [r5, #8]
 801b1a2:	454e      	cmp	r6, r9
 801b1a4:	dd11      	ble.n	801b1ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b1a6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b1aa:	d40e      	bmi.n	801b1ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b1ac:	68ef      	ldr	r7, [r5, #12]
 801b1ae:	4557      	cmp	r7, sl
 801b1b0:	dd0b      	ble.n	801b1ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b1b2:	b236      	sxth	r6, r6
 801b1b4:	fb0a 9606 	mla	r6, sl, r6, r9
 801b1b8:	9f02      	ldr	r7, [sp, #8]
 801b1ba:	f06f 0101 	mvn.w	r1, #1
 801b1be:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b1c2:	fb01 f608 	mul.w	r6, r1, r8
 801b1c6:	9903      	ldr	r1, [sp, #12]
 801b1c8:	538f      	strh	r7, [r1, r6]
 801b1ca:	4470      	add	r0, lr
 801b1cc:	4462      	add	r2, ip
 801b1ce:	f108 38ff 	add.w	r8, r8, #4294967295
 801b1d2:	e788      	b.n	801b0e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1d4:	b005      	add	sp, #20
 801b1d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b1da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1de:	b087      	sub	sp, #28
 801b1e0:	468b      	mov	fp, r1
 801b1e2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b1e4:	9203      	str	r2, [sp, #12]
 801b1e6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b1ea:	9204      	str	r2, [sp, #16]
 801b1ec:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b1f0:	6841      	ldr	r1, [r0, #4]
 801b1f2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b1f6:	fb01 2505 	mla	r5, r1, r5, r2
 801b1fa:	6802      	ldr	r2, [r0, #0]
 801b1fc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b200:	f8d9 2000 	ldr.w	r2, [r9]
 801b204:	9201      	str	r2, [sp, #4]
 801b206:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b20a:	f1bb 0f00 	cmp.w	fp, #0
 801b20e:	dc03      	bgt.n	801b218 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b210:	9a03      	ldr	r2, [sp, #12]
 801b212:	2a00      	cmp	r2, #0
 801b214:	f340 8159 	ble.w	801b4ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b218:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b21a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b21e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b222:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b226:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b228:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b22c:	2b00      	cmp	r3, #0
 801b22e:	dd0e      	ble.n	801b24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b230:	1402      	asrs	r2, r0, #16
 801b232:	d405      	bmi.n	801b240 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b234:	42ba      	cmp	r2, r7
 801b236:	da03      	bge.n	801b240 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b238:	140a      	asrs	r2, r1, #16
 801b23a:	d401      	bmi.n	801b240 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b23c:	42b2      	cmp	r2, r6
 801b23e:	db07      	blt.n	801b250 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b240:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b242:	4410      	add	r0, r2
 801b244:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b246:	3b01      	subs	r3, #1
 801b248:	4411      	add	r1, r2
 801b24a:	3502      	adds	r5, #2
 801b24c:	e7ee      	b.n	801b22c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b24e:	d017      	beq.n	801b280 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b250:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b252:	1e5a      	subs	r2, r3, #1
 801b254:	fb04 0402 	mla	r4, r4, r2, r0
 801b258:	1424      	asrs	r4, r4, #16
 801b25a:	d409      	bmi.n	801b270 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b25c:	42bc      	cmp	r4, r7
 801b25e:	da07      	bge.n	801b270 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b260:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b262:	fb04 1202 	mla	r2, r4, r2, r1
 801b266:	1412      	asrs	r2, r2, #16
 801b268:	d402      	bmi.n	801b270 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b26a:	42b2      	cmp	r2, r6
 801b26c:	f2c0 80bf 	blt.w	801b3ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b270:	2700      	movs	r7, #0
 801b272:	19da      	adds	r2, r3, r7
 801b274:	2a00      	cmp	r2, #0
 801b276:	dc3e      	bgt.n	801b2f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b278:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b27c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b280:	f1bb 0f00 	cmp.w	fp, #0
 801b284:	f340 8121 	ble.w	801b4ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b288:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b28c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b290:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b294:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b296:	f1bb 0b01 	subs.w	fp, fp, #1
 801b29a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b29e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b2a2:	eeb0 6a62 	vmov.f32	s12, s5
 801b2a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b2aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b2b2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b2b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b2ba:	eeb0 6a43 	vmov.f32	s12, s6
 801b2be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b2c2:	ee12 2a90 	vmov	r2, s5
 801b2c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2ce:	ee13 2a10 	vmov	r2, s6
 801b2d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2d6:	9313      	str	r3, [sp, #76]	; 0x4c
 801b2d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b2da:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2de:	9a03      	ldr	r2, [sp, #12]
 801b2e0:	9314      	str	r3, [sp, #80]	; 0x50
 801b2e2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b2e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b2e8:	eeb0 3a67 	vmov.f32	s6, s15
 801b2ec:	bf08      	it	eq
 801b2ee:	4613      	moveq	r3, r2
 801b2f0:	eef0 2a47 	vmov.f32	s5, s14
 801b2f4:	e789      	b.n	801b20a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b2f6:	1406      	asrs	r6, r0, #16
 801b2f8:	d42d      	bmi.n	801b356 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b2fa:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b2fe:	42b4      	cmp	r4, r6
 801b300:	dd29      	ble.n	801b356 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b302:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b306:	d426      	bmi.n	801b356 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b308:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b30c:	4562      	cmp	r2, ip
 801b30e:	dd22      	ble.n	801b356 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b310:	b224      	sxth	r4, r4
 801b312:	9a01      	ldr	r2, [sp, #4]
 801b314:	fb0c 6404 	mla	r4, ip, r4, r6
 801b318:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b31c:	0e22      	lsrs	r2, r4, #24
 801b31e:	d01a      	beq.n	801b356 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b320:	9e04      	ldr	r6, [sp, #16]
 801b322:	4372      	muls	r2, r6
 801b324:	1c56      	adds	r6, r2, #1
 801b326:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b32a:	1212      	asrs	r2, r2, #8
 801b32c:	0a26      	lsrs	r6, r4, #8
 801b32e:	2aff      	cmp	r2, #255	; 0xff
 801b330:	9605      	str	r6, [sp, #20]
 801b332:	d116      	bne.n	801b362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b334:	f06f 0201 	mvn.w	r2, #1
 801b338:	fb02 fc07 	mul.w	ip, r2, r7
 801b33c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b340:	0962      	lsrs	r2, r4, #5
 801b342:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b346:	f026 0607 	bic.w	r6, r6, #7
 801b34a:	4316      	orrs	r6, r2
 801b34c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b350:	4326      	orrs	r6, r4
 801b352:	f825 600c 	strh.w	r6, [r5, ip]
 801b356:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b358:	4410      	add	r0, r2
 801b35a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b35c:	3f01      	subs	r7, #1
 801b35e:	4411      	add	r1, r2
 801b360:	e787      	b.n	801b272 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b362:	f06f 0601 	mvn.w	r6, #1
 801b366:	437e      	muls	r6, r7
 801b368:	fa1f fa82 	uxth.w	sl, r2
 801b36c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b370:	9602      	str	r6, [sp, #8]
 801b372:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b376:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b37a:	43d2      	mvns	r2, r2
 801b37c:	b2d2      	uxtb	r2, r2
 801b37e:	fb1c fc0a 	smulbb	ip, ip, sl
 801b382:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b386:	fb0e ce02 	mla	lr, lr, r2, ip
 801b38a:	b2e4      	uxtb	r4, r4
 801b38c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b390:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b394:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b398:	fa5f f888 	uxtb.w	r8, r8
 801b39c:	fb14 f40a 	smulbb	r4, r4, sl
 801b3a0:	fb08 4402 	mla	r4, r8, r2, r4
 801b3a4:	fa1f fe8e 	uxth.w	lr, lr
 801b3a8:	fb16 f60a 	smulbb	r6, r6, sl
 801b3ac:	b2a4      	uxth	r4, r4
 801b3ae:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b3b2:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b3b6:	f10e 0201 	add.w	r2, lr, #1
 801b3ba:	1c66      	adds	r6, r4, #1
 801b3bc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b3c0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b3c4:	fa1f fc8c 	uxth.w	ip, ip
 801b3c8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b3cc:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b3d0:	ea46 0e0e 	orr.w	lr, r6, lr
 801b3d4:	f10c 0601 	add.w	r6, ip, #1
 801b3d8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b3dc:	0976      	lsrs	r6, r6, #5
 801b3de:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b3e2:	9a02      	ldr	r2, [sp, #8]
 801b3e4:	ea4e 0e06 	orr.w	lr, lr, r6
 801b3e8:	f825 e002 	strh.w	lr, [r5, r2]
 801b3ec:	e7b3      	b.n	801b356 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b3ee:	f04f 0800 	mov.w	r8, #0
 801b3f2:	eba3 0208 	sub.w	r2, r3, r8
 801b3f6:	2a00      	cmp	r2, #0
 801b3f8:	f77f af3e 	ble.w	801b278 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b3fc:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b400:	1404      	asrs	r4, r0, #16
 801b402:	140a      	asrs	r2, r1, #16
 801b404:	fb06 4202 	mla	r2, r6, r2, r4
 801b408:	9c01      	ldr	r4, [sp, #4]
 801b40a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b40e:	0e22      	lsrs	r2, r4, #24
 801b410:	d016      	beq.n	801b440 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b412:	9e04      	ldr	r6, [sp, #16]
 801b414:	4372      	muls	r2, r6
 801b416:	1c56      	adds	r6, r2, #1
 801b418:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b41c:	1212      	asrs	r2, r2, #8
 801b41e:	2aff      	cmp	r2, #255	; 0xff
 801b420:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b424:	d113      	bne.n	801b44e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b426:	0962      	lsrs	r2, r4, #5
 801b428:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b42c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b430:	f026 0607 	bic.w	r6, r6, #7
 801b434:	4316      	orrs	r6, r2
 801b436:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b43a:	4326      	orrs	r6, r4
 801b43c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b440:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b442:	4410      	add	r0, r2
 801b444:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b446:	f108 0801 	add.w	r8, r8, #1
 801b44a:	4411      	add	r1, r2
 801b44c:	e7d1      	b.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b44e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b452:	fa1f fa82 	uxth.w	sl, r2
 801b456:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b45a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b45e:	43d2      	mvns	r2, r2
 801b460:	b2d2      	uxtb	r2, r2
 801b462:	fb17 f70a 	smulbb	r7, r7, sl
 801b466:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b46a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b46e:	b2e4      	uxtb	r4, r4
 801b470:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b474:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b478:	fa5f fe8e 	uxtb.w	lr, lr
 801b47c:	fb14 f40a 	smulbb	r4, r4, sl
 801b480:	fb0e 4402 	mla	r4, lr, r2, r4
 801b484:	b2f6      	uxtb	r6, r6
 801b486:	fa1f fc8c 	uxth.w	ip, ip
 801b48a:	fb16 f60a 	smulbb	r6, r6, sl
 801b48e:	b2a4      	uxth	r4, r4
 801b490:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b494:	fb07 6702 	mla	r7, r7, r2, r6
 801b498:	f10c 0201 	add.w	r2, ip, #1
 801b49c:	1c66      	adds	r6, r4, #1
 801b49e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b4a2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b4a6:	b2bf      	uxth	r7, r7
 801b4a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b4ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b4b0:	ea46 0c0c 	orr.w	ip, r6, ip
 801b4b4:	1c7e      	adds	r6, r7, #1
 801b4b6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b4ba:	0976      	lsrs	r6, r6, #5
 801b4bc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b4c0:	ea4c 0c06 	orr.w	ip, ip, r6
 801b4c4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b4c8:	e7ba      	b.n	801b440 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b4ca:	b007      	add	sp, #28
 801b4cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b4d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4d4:	b085      	sub	sp, #20
 801b4d6:	468b      	mov	fp, r1
 801b4d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b4da:	9203      	str	r2, [sp, #12]
 801b4dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b4e0:	6841      	ldr	r1, [r0, #4]
 801b4e2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b4e6:	fb01 2404 	mla	r4, r1, r4, r2
 801b4ea:	6802      	ldr	r2, [r0, #0]
 801b4ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b4f0:	f8d8 2000 	ldr.w	r2, [r8]
 801b4f4:	9201      	str	r2, [sp, #4]
 801b4f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b4fa:	f1bb 0f00 	cmp.w	fp, #0
 801b4fe:	dc03      	bgt.n	801b508 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b500:	9a03      	ldr	r2, [sp, #12]
 801b502:	2a00      	cmp	r2, #0
 801b504:	f340 814f 	ble.w	801b7a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b508:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b50a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b50e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b512:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b516:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b518:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b51c:	2b00      	cmp	r3, #0
 801b51e:	dd0e      	ble.n	801b53e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b520:	1408      	asrs	r0, r1, #16
 801b522:	d405      	bmi.n	801b530 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b524:	42b8      	cmp	r0, r7
 801b526:	da03      	bge.n	801b530 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b528:	1410      	asrs	r0, r2, #16
 801b52a:	d401      	bmi.n	801b530 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b52c:	42b0      	cmp	r0, r6
 801b52e:	db07      	blt.n	801b540 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b530:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b532:	4401      	add	r1, r0
 801b534:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b536:	3b01      	subs	r3, #1
 801b538:	4402      	add	r2, r0
 801b53a:	3402      	adds	r4, #2
 801b53c:	e7ee      	b.n	801b51c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b53e:	d017      	beq.n	801b570 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b540:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b542:	1e58      	subs	r0, r3, #1
 801b544:	fb05 1500 	mla	r5, r5, r0, r1
 801b548:	142d      	asrs	r5, r5, #16
 801b54a:	d409      	bmi.n	801b560 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b54c:	42bd      	cmp	r5, r7
 801b54e:	da07      	bge.n	801b560 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b550:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b552:	fb05 2000 	mla	r0, r5, r0, r2
 801b556:	1400      	asrs	r0, r0, #16
 801b558:	d402      	bmi.n	801b560 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b55a:	42b0      	cmp	r0, r6
 801b55c:	f2c0 80ba 	blt.w	801b6d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b560:	2600      	movs	r6, #0
 801b562:	1998      	adds	r0, r3, r6
 801b564:	2800      	cmp	r0, #0
 801b566:	dc3e      	bgt.n	801b5e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b568:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b56c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b570:	f1bb 0f00 	cmp.w	fp, #0
 801b574:	f340 8117 	ble.w	801b7a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b578:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b57c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b580:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b584:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b586:	f1bb 0b01 	subs.w	fp, fp, #1
 801b58a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b58e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b592:	eeb0 6a62 	vmov.f32	s12, s5
 801b596:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b59a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b59e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b5a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b5a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b5aa:	eeb0 6a43 	vmov.f32	s12, s6
 801b5ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b5b2:	ee12 2a90 	vmov	r2, s5
 801b5b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b5ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5be:	ee13 2a10 	vmov	r2, s6
 801b5c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b5c6:	9311      	str	r3, [sp, #68]	; 0x44
 801b5c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b5ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5ce:	9a03      	ldr	r2, [sp, #12]
 801b5d0:	9312      	str	r3, [sp, #72]	; 0x48
 801b5d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b5d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b5d8:	eeb0 3a67 	vmov.f32	s6, s15
 801b5dc:	bf08      	it	eq
 801b5de:	4613      	moveq	r3, r2
 801b5e0:	eef0 2a47 	vmov.f32	s5, s14
 801b5e4:	e789      	b.n	801b4fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b5e6:	140f      	asrs	r7, r1, #16
 801b5e8:	d424      	bmi.n	801b634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5ea:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b5ee:	42bd      	cmp	r5, r7
 801b5f0:	dd20      	ble.n	801b634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b5f6:	d41d      	bmi.n	801b634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b5f8:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b5fc:	4560      	cmp	r0, ip
 801b5fe:	dd19      	ble.n	801b634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b600:	b22d      	sxth	r5, r5
 801b602:	fb0c 7505 	mla	r5, ip, r5, r7
 801b606:	9801      	ldr	r0, [sp, #4]
 801b608:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b60c:	0e07      	lsrs	r7, r0, #24
 801b60e:	2fff      	cmp	r7, #255	; 0xff
 801b610:	d116      	bne.n	801b640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b612:	f06f 0501 	mvn.w	r5, #1
 801b616:	fb05 f706 	mul.w	r7, r5, r6
 801b61a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b61e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b622:	0945      	lsrs	r5, r0, #5
 801b624:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b628:	ea4c 0505 	orr.w	r5, ip, r5
 801b62c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b630:	4305      	orrs	r5, r0
 801b632:	53e5      	strh	r5, [r4, r7]
 801b634:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b636:	4401      	add	r1, r0
 801b638:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b63a:	3e01      	subs	r6, #1
 801b63c:	4402      	add	r2, r0
 801b63e:	e790      	b.n	801b562 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b640:	b2fd      	uxtb	r5, r7
 801b642:	2f00      	cmp	r7, #0
 801b644:	d0f6      	beq.n	801b634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b646:	f06f 0701 	mvn.w	r7, #1
 801b64a:	4377      	muls	r7, r6
 801b64c:	fa1f f985 	uxth.w	r9, r5
 801b650:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b654:	9702      	str	r7, [sp, #8]
 801b656:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b65a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b65e:	43ed      	mvns	r5, r5
 801b660:	b2ed      	uxtb	r5, r5
 801b662:	fb17 f709 	smulbb	r7, r7, r9
 801b666:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b66a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b66e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b672:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b676:	b2c0      	uxtb	r0, r0
 801b678:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b67c:	fa5f fe8e 	uxtb.w	lr, lr
 801b680:	fb10 f009 	smulbb	r0, r0, r9
 801b684:	fb0e 0005 	mla	r0, lr, r5, r0
 801b688:	b280      	uxth	r0, r0
 801b68a:	fa1f fc8c 	uxth.w	ip, ip
 801b68e:	fb1a fa09 	smulbb	sl, sl, r9
 801b692:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b696:	fb07 a705 	mla	r7, r7, r5, sl
 801b69a:	f100 0a01 	add.w	sl, r0, #1
 801b69e:	f10c 0501 	add.w	r5, ip, #1
 801b6a2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b6a6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b6aa:	b2bf      	uxth	r7, r7
 801b6ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b6b0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b6b4:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b6b8:	f107 0a01 	add.w	sl, r7, #1
 801b6bc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b6c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b6c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b6c8:	9802      	ldr	r0, [sp, #8]
 801b6ca:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b6ce:	f824 c000 	strh.w	ip, [r4, r0]
 801b6d2:	e7af      	b.n	801b634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b6d4:	f04f 0e00 	mov.w	lr, #0
 801b6d8:	eba3 000e 	sub.w	r0, r3, lr
 801b6dc:	2800      	cmp	r0, #0
 801b6de:	f77f af43 	ble.w	801b568 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b6e2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b6e6:	140d      	asrs	r5, r1, #16
 801b6e8:	1410      	asrs	r0, r2, #16
 801b6ea:	fb06 5000 	mla	r0, r6, r0, r5
 801b6ee:	9d01      	ldr	r5, [sp, #4]
 801b6f0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b6f4:	0e2e      	lsrs	r6, r5, #24
 801b6f6:	2eff      	cmp	r6, #255	; 0xff
 801b6f8:	d112      	bne.n	801b720 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b6fa:	482c      	ldr	r0, [pc, #176]	; (801b7ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b6fc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b700:	0968      	lsrs	r0, r5, #5
 801b702:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b706:	4330      	orrs	r0, r6
 801b708:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b70c:	4328      	orrs	r0, r5
 801b70e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b712:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b714:	4401      	add	r1, r0
 801b716:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b718:	f10e 0e01 	add.w	lr, lr, #1
 801b71c:	4402      	add	r2, r0
 801b71e:	e7db      	b.n	801b6d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b720:	b2f0      	uxtb	r0, r6
 801b722:	2e00      	cmp	r6, #0
 801b724:	d0f5      	beq.n	801b712 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b726:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b72a:	fa1f f980 	uxth.w	r9, r0
 801b72e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b732:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b736:	43c0      	mvns	r0, r0
 801b738:	b2c0      	uxtb	r0, r0
 801b73a:	fb16 f609 	smulbb	r6, r6, r9
 801b73e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b742:	fb07 6700 	mla	r7, r7, r0, r6
 801b746:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b74a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b74e:	b2ed      	uxtb	r5, r5
 801b750:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b754:	fa5f fc8c 	uxtb.w	ip, ip
 801b758:	fb15 f509 	smulbb	r5, r5, r9
 801b75c:	fb0c 5500 	mla	r5, ip, r0, r5
 801b760:	b2bf      	uxth	r7, r7
 801b762:	fb1a fa09 	smulbb	sl, sl, r9
 801b766:	b2ad      	uxth	r5, r5
 801b768:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b76c:	fb06 a600 	mla	r6, r6, r0, sl
 801b770:	1c78      	adds	r0, r7, #1
 801b772:	f105 0a01 	add.w	sl, r5, #1
 801b776:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b77a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b77e:	b2b6      	uxth	r6, r6
 801b780:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b784:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b788:	ea4a 0707 	orr.w	r7, sl, r7
 801b78c:	f106 0a01 	add.w	sl, r6, #1
 801b790:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b794:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b798:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b79c:	ea47 070a 	orr.w	r7, r7, sl
 801b7a0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b7a4:	e7b5      	b.n	801b712 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b7a6:	b005      	add	sp, #20
 801b7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7ac:	fffff800 	.word	0xfffff800

0801b7b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b7b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7b4:	b087      	sub	sp, #28
 801b7b6:	468b      	mov	fp, r1
 801b7b8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b7ba:	9203      	str	r2, [sp, #12]
 801b7bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b7c0:	9204      	str	r2, [sp, #16]
 801b7c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b7c6:	6841      	ldr	r1, [r0, #4]
 801b7c8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b7cc:	fb01 2404 	mla	r4, r1, r4, r2
 801b7d0:	6802      	ldr	r2, [r0, #0]
 801b7d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b7d6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b7da:	3201      	adds	r2, #1
 801b7dc:	f022 0201 	bic.w	r2, r2, #1
 801b7e0:	9200      	str	r2, [sp, #0]
 801b7e2:	f8d9 2000 	ldr.w	r2, [r9]
 801b7e6:	9201      	str	r2, [sp, #4]
 801b7e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b7ec:	f1bb 0f00 	cmp.w	fp, #0
 801b7f0:	dc03      	bgt.n	801b7fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b7f2:	9a03      	ldr	r2, [sp, #12]
 801b7f4:	2a00      	cmp	r2, #0
 801b7f6:	f340 8169 	ble.w	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b7fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b7fc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b800:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b804:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b808:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b80a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b80e:	2b00      	cmp	r3, #0
 801b810:	dd0e      	ble.n	801b830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b812:	1402      	asrs	r2, r0, #16
 801b814:	d405      	bmi.n	801b822 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b816:	42ba      	cmp	r2, r7
 801b818:	da03      	bge.n	801b822 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b81a:	140a      	asrs	r2, r1, #16
 801b81c:	d401      	bmi.n	801b822 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b81e:	42b2      	cmp	r2, r6
 801b820:	db07      	blt.n	801b832 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b822:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b824:	4410      	add	r0, r2
 801b826:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b828:	3b01      	subs	r3, #1
 801b82a:	4411      	add	r1, r2
 801b82c:	3402      	adds	r4, #2
 801b82e:	e7ee      	b.n	801b80e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b830:	d017      	beq.n	801b862 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b832:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b834:	1e5a      	subs	r2, r3, #1
 801b836:	fb05 0502 	mla	r5, r5, r2, r0
 801b83a:	142d      	asrs	r5, r5, #16
 801b83c:	d409      	bmi.n	801b852 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b83e:	42bd      	cmp	r5, r7
 801b840:	da07      	bge.n	801b852 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b842:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b844:	fb05 1202 	mla	r2, r5, r2, r1
 801b848:	1412      	asrs	r2, r2, #16
 801b84a:	d402      	bmi.n	801b852 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b84c:	42b2      	cmp	r2, r6
 801b84e:	f2c0 80c7 	blt.w	801b9e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b852:	2700      	movs	r7, #0
 801b854:	19da      	adds	r2, r3, r7
 801b856:	2a00      	cmp	r2, #0
 801b858:	dc3e      	bgt.n	801b8d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b85a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b85e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b862:	f1bb 0f00 	cmp.w	fp, #0
 801b866:	f340 8131 	ble.w	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b86a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b86e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b872:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b876:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b878:	f1bb 0b01 	subs.w	fp, fp, #1
 801b87c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b880:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b884:	eeb0 6a62 	vmov.f32	s12, s5
 801b888:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b88c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b890:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b894:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b898:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b89c:	eeb0 6a43 	vmov.f32	s12, s6
 801b8a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b8a4:	ee12 2a90 	vmov	r2, s5
 801b8a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b8ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8b0:	ee13 2a10 	vmov	r2, s6
 801b8b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b8b8:	9313      	str	r3, [sp, #76]	; 0x4c
 801b8ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b8bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b8c0:	9a03      	ldr	r2, [sp, #12]
 801b8c2:	9314      	str	r3, [sp, #80]	; 0x50
 801b8c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b8c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b8ca:	eeb0 3a67 	vmov.f32	s6, s15
 801b8ce:	bf08      	it	eq
 801b8d0:	4613      	moveq	r3, r2
 801b8d2:	eef0 2a47 	vmov.f32	s5, s14
 801b8d6:	e789      	b.n	801b7ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b8d8:	1405      	asrs	r5, r0, #16
 801b8da:	d435      	bmi.n	801b948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8dc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b8e0:	42aa      	cmp	r2, r5
 801b8e2:	dd31      	ble.n	801b948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8e4:	140e      	asrs	r6, r1, #16
 801b8e6:	d42f      	bmi.n	801b948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8e8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b8ec:	42b2      	cmp	r2, r6
 801b8ee:	dd2b      	ble.n	801b948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8f0:	9a00      	ldr	r2, [sp, #0]
 801b8f2:	fb06 5502 	mla	r5, r6, r2, r5
 801b8f6:	086a      	lsrs	r2, r5, #1
 801b8f8:	9e01      	ldr	r6, [sp, #4]
 801b8fa:	5cb2      	ldrb	r2, [r6, r2]
 801b8fc:	07ee      	lsls	r6, r5, #31
 801b8fe:	bf54      	ite	pl
 801b900:	f002 020f 	andpl.w	r2, r2, #15
 801b904:	1112      	asrmi	r2, r2, #4
 801b906:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b90a:	b2d2      	uxtb	r2, r2
 801b90c:	b1e2      	cbz	r2, 801b948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b90e:	9d04      	ldr	r5, [sp, #16]
 801b910:	436a      	muls	r2, r5
 801b912:	1c55      	adds	r5, r2, #1
 801b914:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b918:	4d6e      	ldr	r5, [pc, #440]	; (801bad4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b91a:	682d      	ldr	r5, [r5, #0]
 801b91c:	1212      	asrs	r2, r2, #8
 801b91e:	0a2e      	lsrs	r6, r5, #8
 801b920:	2aff      	cmp	r2, #255	; 0xff
 801b922:	9605      	str	r6, [sp, #20]
 801b924:	d116      	bne.n	801b954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b926:	f06f 0201 	mvn.w	r2, #1
 801b92a:	fb02 fc07 	mul.w	ip, r2, r7
 801b92e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b932:	096a      	lsrs	r2, r5, #5
 801b934:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b938:	f026 0607 	bic.w	r6, r6, #7
 801b93c:	4316      	orrs	r6, r2
 801b93e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b942:	432e      	orrs	r6, r5
 801b944:	f824 600c 	strh.w	r6, [r4, ip]
 801b948:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b94a:	4410      	add	r0, r2
 801b94c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b94e:	3f01      	subs	r7, #1
 801b950:	4411      	add	r1, r2
 801b952:	e77f      	b.n	801b854 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b954:	f06f 0601 	mvn.w	r6, #1
 801b958:	437e      	muls	r6, r7
 801b95a:	fa1f fa82 	uxth.w	sl, r2
 801b95e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b962:	9602      	str	r6, [sp, #8]
 801b964:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b968:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b96c:	43d2      	mvns	r2, r2
 801b96e:	b2d2      	uxtb	r2, r2
 801b970:	fb1c fc0a 	smulbb	ip, ip, sl
 801b974:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b978:	fb0e ce02 	mla	lr, lr, r2, ip
 801b97c:	b2ed      	uxtb	r5, r5
 801b97e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b982:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b986:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b98a:	fa5f f888 	uxtb.w	r8, r8
 801b98e:	fb15 f50a 	smulbb	r5, r5, sl
 801b992:	fb08 5502 	mla	r5, r8, r2, r5
 801b996:	fa1f fe8e 	uxth.w	lr, lr
 801b99a:	fb16 f60a 	smulbb	r6, r6, sl
 801b99e:	b2ad      	uxth	r5, r5
 801b9a0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b9a4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b9a8:	f10e 0201 	add.w	r2, lr, #1
 801b9ac:	1c6e      	adds	r6, r5, #1
 801b9ae:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b9b2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b9b6:	fa1f fc8c 	uxth.w	ip, ip
 801b9ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b9be:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b9c2:	ea46 0e0e 	orr.w	lr, r6, lr
 801b9c6:	f10c 0601 	add.w	r6, ip, #1
 801b9ca:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b9ce:	0976      	lsrs	r6, r6, #5
 801b9d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b9d4:	9a02      	ldr	r2, [sp, #8]
 801b9d6:	ea4e 0e06 	orr.w	lr, lr, r6
 801b9da:	f824 e002 	strh.w	lr, [r4, r2]
 801b9de:	e7b3      	b.n	801b948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9e0:	f04f 0800 	mov.w	r8, #0
 801b9e4:	eba3 0208 	sub.w	r2, r3, r8
 801b9e8:	2a00      	cmp	r2, #0
 801b9ea:	f77f af36 	ble.w	801b85a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b9ee:	9e00      	ldr	r6, [sp, #0]
 801b9f0:	1402      	asrs	r2, r0, #16
 801b9f2:	140d      	asrs	r5, r1, #16
 801b9f4:	fb06 2505 	mla	r5, r6, r5, r2
 801b9f8:	086a      	lsrs	r2, r5, #1
 801b9fa:	9e01      	ldr	r6, [sp, #4]
 801b9fc:	5cb2      	ldrb	r2, [r6, r2]
 801b9fe:	07ed      	lsls	r5, r5, #31
 801ba00:	bf54      	ite	pl
 801ba02:	f002 020f 	andpl.w	r2, r2, #15
 801ba06:	1112      	asrmi	r2, r2, #4
 801ba08:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ba0c:	b2d2      	uxtb	r2, r2
 801ba0e:	b1c2      	cbz	r2, 801ba42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ba10:	9d04      	ldr	r5, [sp, #16]
 801ba12:	436a      	muls	r2, r5
 801ba14:	1c55      	adds	r5, r2, #1
 801ba16:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ba1a:	4d2e      	ldr	r5, [pc, #184]	; (801bad4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ba1c:	1212      	asrs	r2, r2, #8
 801ba1e:	682e      	ldr	r6, [r5, #0]
 801ba20:	2aff      	cmp	r2, #255	; 0xff
 801ba22:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ba26:	d113      	bne.n	801ba50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ba28:	0972      	lsrs	r2, r6, #5
 801ba2a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ba2e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ba32:	f025 0507 	bic.w	r5, r5, #7
 801ba36:	4315      	orrs	r5, r2
 801ba38:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ba3c:	4335      	orrs	r5, r6
 801ba3e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ba42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ba44:	4410      	add	r0, r2
 801ba46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba48:	f108 0801 	add.w	r8, r8, #1
 801ba4c:	4411      	add	r1, r2
 801ba4e:	e7c9      	b.n	801b9e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ba50:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ba54:	fa1f fa82 	uxth.w	sl, r2
 801ba58:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ba5c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ba60:	43d2      	mvns	r2, r2
 801ba62:	b2d2      	uxtb	r2, r2
 801ba64:	fb17 f70a 	smulbb	r7, r7, sl
 801ba68:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ba6c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ba70:	b2f6      	uxtb	r6, r6
 801ba72:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ba76:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ba7a:	fa5f fe8e 	uxtb.w	lr, lr
 801ba7e:	fb16 f60a 	smulbb	r6, r6, sl
 801ba82:	fb0e 6602 	mla	r6, lr, r2, r6
 801ba86:	b2ed      	uxtb	r5, r5
 801ba88:	fa1f fc8c 	uxth.w	ip, ip
 801ba8c:	fb15 f50a 	smulbb	r5, r5, sl
 801ba90:	b2b6      	uxth	r6, r6
 801ba92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ba96:	fb07 5702 	mla	r7, r7, r2, r5
 801ba9a:	f10c 0201 	add.w	r2, ip, #1
 801ba9e:	1c75      	adds	r5, r6, #1
 801baa0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801baa4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801baa8:	b2bf      	uxth	r7, r7
 801baaa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801baae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bab2:	ea45 0c0c 	orr.w	ip, r5, ip
 801bab6:	1c7d      	adds	r5, r7, #1
 801bab8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801babc:	096d      	lsrs	r5, r5, #5
 801babe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bac2:	ea4c 0c05 	orr.w	ip, ip, r5
 801bac6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801baca:	e7ba      	b.n	801ba42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bacc:	b007      	add	sp, #28
 801bace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bad2:	bf00      	nop
 801bad4:	20012dc4 	.word	0x20012dc4

0801bad8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801badc:	b087      	sub	sp, #28
 801bade:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bdec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bae2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bae4:	9205      	str	r2, [sp, #20]
 801bae6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801baea:	9101      	str	r1, [sp, #4]
 801baec:	6841      	ldr	r1, [r0, #4]
 801baee:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801baf2:	fb01 2404 	mla	r4, r1, r4, r2
 801baf6:	6802      	ldr	r2, [r0, #0]
 801baf8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bafc:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bb00:	3201      	adds	r2, #1
 801bb02:	f022 0201 	bic.w	r2, r2, #1
 801bb06:	9202      	str	r2, [sp, #8]
 801bb08:	f8db 2000 	ldr.w	r2, [fp]
 801bb0c:	9203      	str	r2, [sp, #12]
 801bb0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb12:	9a01      	ldr	r2, [sp, #4]
 801bb14:	2a00      	cmp	r2, #0
 801bb16:	dc03      	bgt.n	801bb20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bb18:	9a05      	ldr	r2, [sp, #20]
 801bb1a:	2a00      	cmp	r2, #0
 801bb1c:	f340 8162 	ble.w	801bde4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bb20:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bb22:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bb26:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bb2a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bb2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bb30:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bb34:	2b00      	cmp	r3, #0
 801bb36:	dd0e      	ble.n	801bb56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bb38:	1402      	asrs	r2, r0, #16
 801bb3a:	d405      	bmi.n	801bb48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bb3c:	42ba      	cmp	r2, r7
 801bb3e:	da03      	bge.n	801bb48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bb40:	140a      	asrs	r2, r1, #16
 801bb42:	d401      	bmi.n	801bb48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bb44:	42b2      	cmp	r2, r6
 801bb46:	db07      	blt.n	801bb58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bb48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb4a:	4410      	add	r0, r2
 801bb4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb4e:	3b01      	subs	r3, #1
 801bb50:	4411      	add	r1, r2
 801bb52:	3402      	adds	r4, #2
 801bb54:	e7ee      	b.n	801bb34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bb56:	d017      	beq.n	801bb88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bb58:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb5a:	1e5a      	subs	r2, r3, #1
 801bb5c:	fb05 0502 	mla	r5, r5, r2, r0
 801bb60:	142d      	asrs	r5, r5, #16
 801bb62:	d409      	bmi.n	801bb78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bb64:	42bd      	cmp	r5, r7
 801bb66:	da07      	bge.n	801bb78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bb68:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bb6a:	fb05 1202 	mla	r2, r5, r2, r1
 801bb6e:	1412      	asrs	r2, r2, #16
 801bb70:	d402      	bmi.n	801bb78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bb72:	42b2      	cmp	r2, r6
 801bb74:	f2c0 80c3 	blt.w	801bcfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bb78:	2500      	movs	r5, #0
 801bb7a:	195a      	adds	r2, r3, r5
 801bb7c:	2a00      	cmp	r2, #0
 801bb7e:	dc3f      	bgt.n	801bc00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bb80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bb84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bb88:	9b01      	ldr	r3, [sp, #4]
 801bb8a:	2b00      	cmp	r3, #0
 801bb8c:	f340 812a 	ble.w	801bde4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bb90:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb94:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb98:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bb9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bba2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bba6:	eeb0 6a62 	vmov.f32	s12, s5
 801bbaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bbae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bbb6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bbba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bbbe:	eeb0 6a43 	vmov.f32	s12, s6
 801bbc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bbc6:	ee12 2a90 	vmov	r2, s5
 801bbca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bbce:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbd2:	ee13 2a10 	vmov	r2, s6
 801bbd6:	9313      	str	r3, [sp, #76]	; 0x4c
 801bbd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbda:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbde:	9314      	str	r3, [sp, #80]	; 0x50
 801bbe0:	9b01      	ldr	r3, [sp, #4]
 801bbe2:	9a05      	ldr	r2, [sp, #20]
 801bbe4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbe8:	3b01      	subs	r3, #1
 801bbea:	9301      	str	r3, [sp, #4]
 801bbec:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bbf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bbf2:	eeb0 3a67 	vmov.f32	s6, s15
 801bbf6:	bf08      	it	eq
 801bbf8:	4613      	moveq	r3, r2
 801bbfa:	eef0 2a47 	vmov.f32	s5, s14
 801bbfe:	e788      	b.n	801bb12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bc00:	1406      	asrs	r6, r0, #16
 801bc02:	d42c      	bmi.n	801bc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc04:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bc08:	42b2      	cmp	r2, r6
 801bc0a:	dd28      	ble.n	801bc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc0c:	140f      	asrs	r7, r1, #16
 801bc0e:	d426      	bmi.n	801bc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc10:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bc14:	42ba      	cmp	r2, r7
 801bc16:	dd22      	ble.n	801bc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc18:	9a02      	ldr	r2, [sp, #8]
 801bc1a:	fb07 6602 	mla	r6, r7, r2, r6
 801bc1e:	0872      	lsrs	r2, r6, #1
 801bc20:	9f03      	ldr	r7, [sp, #12]
 801bc22:	5cba      	ldrb	r2, [r7, r2]
 801bc24:	07f6      	lsls	r6, r6, #31
 801bc26:	bf54      	ite	pl
 801bc28:	f002 020f 	andpl.w	r2, r2, #15
 801bc2c:	1112      	asrmi	r2, r2, #4
 801bc2e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc32:	b2d2      	uxtb	r2, r2
 801bc34:	2aff      	cmp	r2, #255	; 0xff
 801bc36:	d118      	bne.n	801bc6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bc38:	f8d8 2000 	ldr.w	r2, [r8]
 801bc3c:	f06f 0601 	mvn.w	r6, #1
 801bc40:	fb06 f705 	mul.w	r7, r6, r5
 801bc44:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bc48:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bc4c:	0956      	lsrs	r6, r2, #5
 801bc4e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bc52:	ea4c 0606 	orr.w	r6, ip, r6
 801bc56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bc5a:	4316      	orrs	r6, r2
 801bc5c:	53e6      	strh	r6, [r4, r7]
 801bc5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bc60:	4410      	add	r0, r2
 801bc62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc64:	3d01      	subs	r5, #1
 801bc66:	4411      	add	r1, r2
 801bc68:	e787      	b.n	801bb7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bc6a:	2a00      	cmp	r2, #0
 801bc6c:	d0f7      	beq.n	801bc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc6e:	f06f 0601 	mvn.w	r6, #1
 801bc72:	436e      	muls	r6, r5
 801bc74:	f8d8 c000 	ldr.w	ip, [r8]
 801bc78:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bc7c:	9604      	str	r6, [sp, #16]
 801bc7e:	fa1f f982 	uxth.w	r9, r2
 801bc82:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bc86:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bc8a:	43d2      	mvns	r2, r2
 801bc8c:	b2d2      	uxtb	r2, r2
 801bc8e:	fb16 f609 	smulbb	r6, r6, r9
 801bc92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc96:	fb07 6702 	mla	r7, r7, r2, r6
 801bc9a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bc9e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bca2:	fa5f fc8c 	uxtb.w	ip, ip
 801bca6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bcaa:	fa5f fe8e 	uxtb.w	lr, lr
 801bcae:	fb1c fc09 	smulbb	ip, ip, r9
 801bcb2:	fb0e cc02 	mla	ip, lr, r2, ip
 801bcb6:	b2bf      	uxth	r7, r7
 801bcb8:	fb1a fa09 	smulbb	sl, sl, r9
 801bcbc:	fa1f fc8c 	uxth.w	ip, ip
 801bcc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bcc4:	fb06 a602 	mla	r6, r6, r2, sl
 801bcc8:	1c7a      	adds	r2, r7, #1
 801bcca:	f10c 0a01 	add.w	sl, ip, #1
 801bcce:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bcd2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bcd6:	b2b6      	uxth	r6, r6
 801bcd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bcdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bce0:	ea4a 0707 	orr.w	r7, sl, r7
 801bce4:	f106 0a01 	add.w	sl, r6, #1
 801bce8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bcec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bcf0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bcf4:	9a04      	ldr	r2, [sp, #16]
 801bcf6:	ea47 070a 	orr.w	r7, r7, sl
 801bcfa:	52a7      	strh	r7, [r4, r2]
 801bcfc:	e7af      	b.n	801bc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bcfe:	f04f 0e00 	mov.w	lr, #0
 801bd02:	eba3 020e 	sub.w	r2, r3, lr
 801bd06:	2a00      	cmp	r2, #0
 801bd08:	f77f af3a 	ble.w	801bb80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bd0c:	9e02      	ldr	r6, [sp, #8]
 801bd0e:	1402      	asrs	r2, r0, #16
 801bd10:	140d      	asrs	r5, r1, #16
 801bd12:	fb06 2505 	mla	r5, r6, r5, r2
 801bd16:	086a      	lsrs	r2, r5, #1
 801bd18:	9e03      	ldr	r6, [sp, #12]
 801bd1a:	5cb2      	ldrb	r2, [r6, r2]
 801bd1c:	07ed      	lsls	r5, r5, #31
 801bd1e:	bf54      	ite	pl
 801bd20:	f002 020f 	andpl.w	r2, r2, #15
 801bd24:	1112      	asrmi	r2, r2, #4
 801bd26:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bd2a:	b2d2      	uxtb	r2, r2
 801bd2c:	2aff      	cmp	r2, #255	; 0xff
 801bd2e:	d115      	bne.n	801bd5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bd30:	f8d8 5000 	ldr.w	r5, [r8]
 801bd34:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bd38:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bd3c:	096a      	lsrs	r2, r5, #5
 801bd3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd42:	4332      	orrs	r2, r6
 801bd44:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bd48:	432a      	orrs	r2, r5
 801bd4a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bd4e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd50:	4410      	add	r0, r2
 801bd52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd54:	f10e 0e01 	add.w	lr, lr, #1
 801bd58:	4411      	add	r1, r2
 801bd5a:	e7d2      	b.n	801bd02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bd5c:	2a00      	cmp	r2, #0
 801bd5e:	d0f6      	beq.n	801bd4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bd60:	f8d8 7000 	ldr.w	r7, [r8]
 801bd64:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bd68:	fa1f f982 	uxth.w	r9, r2
 801bd6c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bd70:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bd74:	43d2      	mvns	r2, r2
 801bd76:	b2d2      	uxtb	r2, r2
 801bd78:	fb15 f509 	smulbb	r5, r5, r9
 801bd7c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bd80:	fb06 5602 	mla	r6, r6, r2, r5
 801bd84:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bd88:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bd8c:	b2ff      	uxtb	r7, r7
 801bd8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bd92:	fa5f fc8c 	uxtb.w	ip, ip
 801bd96:	fb17 f709 	smulbb	r7, r7, r9
 801bd9a:	fb0c 7702 	mla	r7, ip, r2, r7
 801bd9e:	b2b6      	uxth	r6, r6
 801bda0:	fb1a fa09 	smulbb	sl, sl, r9
 801bda4:	b2bf      	uxth	r7, r7
 801bda6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bdaa:	fb05 a502 	mla	r5, r5, r2, sl
 801bdae:	1c72      	adds	r2, r6, #1
 801bdb0:	f107 0a01 	add.w	sl, r7, #1
 801bdb4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bdb8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bdbc:	b2ad      	uxth	r5, r5
 801bdbe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bdc2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bdc6:	ea4a 0606 	orr.w	r6, sl, r6
 801bdca:	f105 0a01 	add.w	sl, r5, #1
 801bdce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bdd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bdd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bdda:	ea46 060a 	orr.w	r6, r6, sl
 801bdde:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bde2:	e7b4      	b.n	801bd4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bde4:	b007      	add	sp, #28
 801bde6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdea:	bf00      	nop
 801bdec:	20012dc4 	.word	0x20012dc4

0801bdf0 <_ZN8touchgfx8LCD16bppD1Ev>:
 801bdf0:	4770      	bx	lr

0801bdf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801bdf2:	4770      	bx	lr

0801bdf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801bdf4:	4770      	bx	lr

0801bdf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801bdf6:	4770      	bx	lr

0801bdf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bdf8:	4770      	bx	lr

0801bdfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bdfa:	4770      	bx	lr

0801bdfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bdfc:	4770      	bx	lr

0801bdfe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bdfe:	4770      	bx	lr

0801be00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be00:	4770      	bx	lr

0801be02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be02:	4770      	bx	lr

0801be04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801be04:	4770      	bx	lr

0801be06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be06:	4770      	bx	lr

0801be08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be08:	4770      	bx	lr

0801be0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801be0a:	4770      	bx	lr

0801be0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be0c:	4770      	bx	lr

0801be0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be0e:	4770      	bx	lr

0801be10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801be10:	4770      	bx	lr

0801be12 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801be12:	4770      	bx	lr

0801be14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801be14:	4770      	bx	lr

0801be16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be16:	4770      	bx	lr

0801be18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801be18:	4770      	bx	lr

0801be1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801be1a:	4770      	bx	lr

0801be1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801be1c:	4770      	bx	lr

0801be1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801be1e:	4770      	bx	lr

0801be20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be20:	4770      	bx	lr

0801be22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801be22:	4770      	bx	lr

0801be24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801be24:	4770      	bx	lr

0801be26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801be26:	4770      	bx	lr

0801be28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801be28:	4770      	bx	lr

0801be2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801be2a:	4770      	bx	lr

0801be2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801be2c:	4770      	bx	lr

0801be2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801be2e:	4770      	bx	lr

0801be30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801be30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801be34:	b088      	sub	sp, #32
 801be36:	ac08      	add	r4, sp, #32
 801be38:	4606      	mov	r6, r0
 801be3a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801be3e:	4620      	mov	r0, r4
 801be40:	4688      	mov	r8, r1
 801be42:	4691      	mov	r9, r2
 801be44:	f7fd fc62 	bl	801970c <_ZNK8touchgfx6Bitmap7getDataEv>
 801be48:	6833      	ldr	r3, [r6, #0]
 801be4a:	4605      	mov	r5, r0
 801be4c:	4620      	mov	r0, r4
 801be4e:	699f      	ldr	r7, [r3, #24]
 801be50:	f7fd fb70 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801be54:	4682      	mov	sl, r0
 801be56:	4620      	mov	r0, r4
 801be58:	f7fd fba0 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801be5c:	9500      	str	r5, [sp, #0]
 801be5e:	e9cd a001 	strd	sl, r0, [sp, #4]
 801be62:	464b      	mov	r3, r9
 801be64:	a806      	add	r0, sp, #24
 801be66:	4642      	mov	r2, r8
 801be68:	4631      	mov	r1, r6
 801be6a:	47b8      	blx	r7
 801be6c:	4628      	mov	r0, r5
 801be6e:	b008      	add	sp, #32
 801be70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801be74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801be74:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801be78:	2300      	movs	r3, #0
 801be7a:	9300      	str	r3, [sp, #0]
 801be7c:	4b3d      	ldr	r3, [pc, #244]	; (801bf74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801be7e:	781b      	ldrb	r3, [r3, #0]
 801be80:	2b00      	cmp	r3, #0
 801be82:	d137      	bne.n	801bef4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801be84:	4a3c      	ldr	r2, [pc, #240]	; (801bf78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801be86:	f9b2 2000 	ldrsh.w	r2, [r2]
 801be8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801be8e:	2b00      	cmp	r3, #0
 801be90:	d132      	bne.n	801bef8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801be92:	4b3a      	ldr	r3, [pc, #232]	; (801bf7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801be94:	f9b3 3000 	ldrsh.w	r3, [r3]
 801be98:	6808      	ldr	r0, [r1, #0]
 801be9a:	6849      	ldr	r1, [r1, #4]
 801be9c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bea0:	ac02      	add	r4, sp, #8
 801bea2:	ab02      	add	r3, sp, #8
 801bea4:	c303      	stmia	r3!, {r0, r1}
 801bea6:	4669      	mov	r1, sp
 801bea8:	4620      	mov	r0, r4
 801beaa:	f7f9 fdc1 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801beae:	4668      	mov	r0, sp
 801beb0:	f7f9 fd7a 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801beb4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801beb8:	f8bd 2000 	ldrh.w	r2, [sp]
 801bebc:	4d30      	ldr	r5, [pc, #192]	; (801bf80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801bebe:	4413      	add	r3, r2
 801bec0:	f8ad 3008 	strh.w	r3, [sp, #8]
 801bec4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801bec8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801becc:	6828      	ldr	r0, [r5, #0]
 801bece:	4413      	add	r3, r2
 801bed0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801bed4:	6803      	ldr	r3, [r0, #0]
 801bed6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bed8:	4798      	blx	r3
 801beda:	f010 0f01 	tst.w	r0, #1
 801bede:	462f      	mov	r7, r5
 801bee0:	d00c      	beq.n	801befc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801bee2:	6828      	ldr	r0, [r5, #0]
 801bee4:	6803      	ldr	r3, [r0, #0]
 801bee6:	e894 0006 	ldmia.w	r4, {r1, r2}
 801beea:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801beec:	4798      	blx	r3
 801beee:	b004      	add	sp, #16
 801bef0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bef4:	4a21      	ldr	r2, [pc, #132]	; (801bf7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bef6:	e7c6      	b.n	801be86 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801bef8:	4b1f      	ldr	r3, [pc, #124]	; (801bf78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801befa:	e7cb      	b.n	801be94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801befc:	6838      	ldr	r0, [r7, #0]
 801befe:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801bf02:	6803      	ldr	r3, [r0, #0]
 801bf04:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801bf08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bf0a:	4798      	blx	r3
 801bf0c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801bf10:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bf14:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801bf18:	fb16 3602 	smlabb	r6, r6, r2, r3
 801bf1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bf20:	6838      	ldr	r0, [r7, #0]
 801bf22:	6803      	ldr	r3, [r0, #0]
 801bf24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf26:	4798      	blx	r3
 801bf28:	4a13      	ldr	r2, [pc, #76]	; (801bf78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bf2a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801bf2e:	8813      	ldrh	r3, [r2, #0]
 801bf30:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bf34:	fb03 1404 	mla	r4, r3, r4, r1
 801bf38:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bf3c:	435d      	muls	r5, r3
 801bf3e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bf42:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801bf46:	4691      	mov	r9, r2
 801bf48:	6838      	ldr	r0, [r7, #0]
 801bf4a:	42ac      	cmp	r4, r5
 801bf4c:	6803      	ldr	r3, [r0, #0]
 801bf4e:	d20e      	bcs.n	801bf6e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801bf50:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801bf54:	4632      	mov	r2, r6
 801bf56:	4643      	mov	r3, r8
 801bf58:	4621      	mov	r1, r4
 801bf5a:	47d0      	blx	sl
 801bf5c:	f8b9 3000 	ldrh.w	r3, [r9]
 801bf60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf64:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801bf68:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bf6c:	e7ec      	b.n	801bf48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801bf6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bf70:	4798      	blx	r3
 801bf72:	e7bc      	b.n	801beee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801bf74:	20012dac 	.word	0x20012dac
 801bf78:	20012dae 	.word	0x20012dae
 801bf7c:	20012db0 	.word	0x20012db0
 801bf80:	20012db4 	.word	0x20012db4

0801bf84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801bf84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf88:	b08b      	sub	sp, #44	; 0x2c
 801bf8a:	460f      	mov	r7, r1
 801bf8c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801bf90:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801bf94:	4616      	mov	r6, r2
 801bf96:	f1bb 0f00 	cmp.w	fp, #0
 801bf9a:	d04a      	beq.n	801c032 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801bf9c:	6810      	ldr	r0, [r2, #0]
 801bf9e:	6851      	ldr	r1, [r2, #4]
 801bfa0:	ad06      	add	r5, sp, #24
 801bfa2:	c503      	stmia	r5!, {r0, r1}
 801bfa4:	6818      	ldr	r0, [r3, #0]
 801bfa6:	6859      	ldr	r1, [r3, #4]
 801bfa8:	ad08      	add	r5, sp, #32
 801bfaa:	c503      	stmia	r5!, {r0, r1}
 801bfac:	a806      	add	r0, sp, #24
 801bfae:	f7f9 fcfb 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bfb2:	4631      	mov	r1, r6
 801bfb4:	a808      	add	r0, sp, #32
 801bfb6:	f7f9 fd3b 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bfba:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801bfbe:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801bfc2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801bfc6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801bfca:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801bfce:	fb16 2103 	smlabb	r1, r6, r3, r2
 801bfd2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801bfd6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801bfda:	4f5f      	ldr	r7, [pc, #380]	; (801c158 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bfdc:	440a      	add	r2, r1
 801bfde:	f8ad 2020 	strh.w	r2, [sp, #32]
 801bfe2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801bfe6:	6838      	ldr	r0, [r7, #0]
 801bfe8:	4413      	add	r3, r2
 801bfea:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801bfee:	6803      	ldr	r3, [r0, #0]
 801bff0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bff2:	4798      	blx	r3
 801bff4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bff8:	46b9      	mov	r9, r7
 801bffa:	d11d      	bne.n	801c038 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801bffc:	b9fc      	cbnz	r4, 801c03e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801bffe:	f010 0f01 	tst.w	r0, #1
 801c002:	d01c      	beq.n	801c03e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c004:	f8d9 0000 	ldr.w	r0, [r9]
 801c008:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c00c:	6801      	ldr	r1, [r0, #0]
 801c00e:	f8cd b00c 	str.w	fp, [sp, #12]
 801c012:	2700      	movs	r7, #0
 801c014:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c018:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c01c:	9402      	str	r4, [sp, #8]
 801c01e:	b2ad      	uxth	r5, r5
 801c020:	fa1f f488 	uxth.w	r4, r8
 801c024:	9501      	str	r5, [sp, #4]
 801c026:	9400      	str	r4, [sp, #0]
 801c028:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c02a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c02e:	4631      	mov	r1, r6
 801c030:	47a0      	blx	r4
 801c032:	b00b      	add	sp, #44	; 0x2c
 801c034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c038:	f010 0f04 	tst.w	r0, #4
 801c03c:	e7e1      	b.n	801c002 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c03e:	f8d9 0000 	ldr.w	r0, [r9]
 801c042:	6803      	ldr	r3, [r0, #0]
 801c044:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c046:	4798      	blx	r3
 801c048:	4b44      	ldr	r3, [pc, #272]	; (801c15c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c04a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c04e:	881a      	ldrh	r2, [r3, #0]
 801c050:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c054:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c058:	fb02 1404 	mla	r4, r2, r4, r1
 801c05c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c060:	469a      	mov	sl, r3
 801c062:	fb05 f502 	mul.w	r5, r5, r2
 801c066:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c06a:	d059      	beq.n	801c120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c06c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c070:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c074:	fa1f f28b 	uxth.w	r2, fp
 801c078:	fa1f f989 	uxth.w	r9, r9
 801c07c:	469e      	mov	lr, r3
 801c07e:	42ac      	cmp	r4, r5
 801c080:	d264      	bcs.n	801c14c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c082:	eb04 0a07 	add.w	sl, r4, r7
 801c086:	4554      	cmp	r4, sl
 801c088:	d23d      	bcs.n	801c106 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c08a:	8821      	ldrh	r1, [r4, #0]
 801c08c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c090:	1208      	asrs	r0, r1, #8
 801c092:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c096:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c09a:	fb10 f009 	smulbb	r0, r0, r9
 801c09e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c0a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c0a6:	00c9      	lsls	r1, r1, #3
 801c0a8:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c0ac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c0b0:	10d8      	asrs	r0, r3, #3
 801c0b2:	b2c9      	uxtb	r1, r1
 801c0b4:	00db      	lsls	r3, r3, #3
 801c0b6:	fa1f fc8c 	uxth.w	ip, ip
 801c0ba:	fb1b fb09 	smulbb	fp, fp, r9
 801c0be:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c0c2:	b2db      	uxtb	r3, r3
 801c0c4:	fb11 f109 	smulbb	r1, r1, r9
 801c0c8:	fb00 b002 	mla	r0, r0, r2, fp
 801c0cc:	fb03 1302 	mla	r3, r3, r2, r1
 801c0d0:	f10c 0b01 	add.w	fp, ip, #1
 801c0d4:	b29b      	uxth	r3, r3
 801c0d6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c0da:	b280      	uxth	r0, r0
 801c0dc:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c0e0:	f103 0c01 	add.w	ip, r3, #1
 801c0e4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c0e8:	1c43      	adds	r3, r0, #1
 801c0ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c0ee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c0f2:	0940      	lsrs	r0, r0, #5
 801c0f4:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c0f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c0fc:	ea4c 0c00 	orr.w	ip, ip, r0
 801c100:	f824 cb02 	strh.w	ip, [r4], #2
 801c104:	e7bf      	b.n	801c086 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c106:	f8be 3000 	ldrh.w	r3, [lr]
 801c10a:	eba3 0308 	sub.w	r3, r3, r8
 801c10e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c112:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c116:	eba3 0308 	sub.w	r3, r3, r8
 801c11a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c11e:	e7ae      	b.n	801c07e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c120:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c124:	f8d9 0000 	ldr.w	r0, [r9]
 801c128:	42ac      	cmp	r4, r5
 801c12a:	6803      	ldr	r3, [r0, #0]
 801c12c:	d20e      	bcs.n	801c14c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c12e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c132:	4632      	mov	r2, r6
 801c134:	463b      	mov	r3, r7
 801c136:	4621      	mov	r1, r4
 801c138:	47c0      	blx	r8
 801c13a:	f8ba 3000 	ldrh.w	r3, [sl]
 801c13e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c142:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c146:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c14a:	e7eb      	b.n	801c124 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c14c:	4b02      	ldr	r3, [pc, #8]	; (801c158 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c14e:	6818      	ldr	r0, [r3, #0]
 801c150:	6803      	ldr	r3, [r0, #0]
 801c152:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c154:	4798      	blx	r3
 801c156:	e76c      	b.n	801c032 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c158:	20012db4 	.word	0x20012db4
 801c15c:	20012dae 	.word	0x20012dae

0801c160 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c160:	b510      	push	{r4, lr}
 801c162:	2184      	movs	r1, #132	; 0x84
 801c164:	4604      	mov	r4, r0
 801c166:	f00d fe4a 	bl	8029dfe <_ZdlPvj>
 801c16a:	4620      	mov	r0, r4
 801c16c:	bd10      	pop	{r4, pc}

0801c16e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c16e:	b510      	push	{r4, lr}
 801c170:	2104      	movs	r1, #4
 801c172:	4604      	mov	r4, r0
 801c174:	f00d fe43 	bl	8029dfe <_ZdlPvj>
 801c178:	4620      	mov	r0, r4
 801c17a:	bd10      	pop	{r4, pc}

0801c17c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c17c:	b510      	push	{r4, lr}
 801c17e:	2104      	movs	r1, #4
 801c180:	4604      	mov	r4, r0
 801c182:	f00d fe3c 	bl	8029dfe <_ZdlPvj>
 801c186:	4620      	mov	r0, r4
 801c188:	bd10      	pop	{r4, pc}

0801c18a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c18a:	b510      	push	{r4, lr}
 801c18c:	f640 0144 	movw	r1, #2116	; 0x844
 801c190:	4604      	mov	r4, r0
 801c192:	f00d fe34 	bl	8029dfe <_ZdlPvj>
 801c196:	4620      	mov	r0, r4
 801c198:	bd10      	pop	{r4, pc}

0801c19a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c19a:	b510      	push	{r4, lr}
 801c19c:	2104      	movs	r1, #4
 801c19e:	4604      	mov	r4, r0
 801c1a0:	f00d fe2d 	bl	8029dfe <_ZdlPvj>
 801c1a4:	4620      	mov	r0, r4
 801c1a6:	bd10      	pop	{r4, pc}

0801c1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c1a8:	b510      	push	{r4, lr}
 801c1aa:	2104      	movs	r1, #4
 801c1ac:	4604      	mov	r4, r0
 801c1ae:	f00d fe26 	bl	8029dfe <_ZdlPvj>
 801c1b2:	4620      	mov	r0, r4
 801c1b4:	bd10      	pop	{r4, pc}

0801c1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c1b6:	b510      	push	{r4, lr}
 801c1b8:	2104      	movs	r1, #4
 801c1ba:	4604      	mov	r4, r0
 801c1bc:	f00d fe1f 	bl	8029dfe <_ZdlPvj>
 801c1c0:	4620      	mov	r0, r4
 801c1c2:	bd10      	pop	{r4, pc}

0801c1c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c1c4:	b510      	push	{r4, lr}
 801c1c6:	2104      	movs	r1, #4
 801c1c8:	4604      	mov	r4, r0
 801c1ca:	f00d fe18 	bl	8029dfe <_ZdlPvj>
 801c1ce:	4620      	mov	r0, r4
 801c1d0:	bd10      	pop	{r4, pc}

0801c1d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c1d2:	b510      	push	{r4, lr}
 801c1d4:	2104      	movs	r1, #4
 801c1d6:	4604      	mov	r4, r0
 801c1d8:	f00d fe11 	bl	8029dfe <_ZdlPvj>
 801c1dc:	4620      	mov	r0, r4
 801c1de:	bd10      	pop	{r4, pc}

0801c1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c1e0:	b510      	push	{r4, lr}
 801c1e2:	2104      	movs	r1, #4
 801c1e4:	4604      	mov	r4, r0
 801c1e6:	f00d fe0a 	bl	8029dfe <_ZdlPvj>
 801c1ea:	4620      	mov	r0, r4
 801c1ec:	bd10      	pop	{r4, pc}

0801c1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c1ee:	b510      	push	{r4, lr}
 801c1f0:	2104      	movs	r1, #4
 801c1f2:	4604      	mov	r4, r0
 801c1f4:	f00d fe03 	bl	8029dfe <_ZdlPvj>
 801c1f8:	4620      	mov	r0, r4
 801c1fa:	bd10      	pop	{r4, pc}

0801c1fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c1fc:	b510      	push	{r4, lr}
 801c1fe:	2104      	movs	r1, #4
 801c200:	4604      	mov	r4, r0
 801c202:	f00d fdfc 	bl	8029dfe <_ZdlPvj>
 801c206:	4620      	mov	r0, r4
 801c208:	bd10      	pop	{r4, pc}

0801c20a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c20a:	b510      	push	{r4, lr}
 801c20c:	2104      	movs	r1, #4
 801c20e:	4604      	mov	r4, r0
 801c210:	f00d fdf5 	bl	8029dfe <_ZdlPvj>
 801c214:	4620      	mov	r0, r4
 801c216:	bd10      	pop	{r4, pc}

0801c218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c218:	b510      	push	{r4, lr}
 801c21a:	2104      	movs	r1, #4
 801c21c:	4604      	mov	r4, r0
 801c21e:	f00d fdee 	bl	8029dfe <_ZdlPvj>
 801c222:	4620      	mov	r0, r4
 801c224:	bd10      	pop	{r4, pc}

0801c226 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c226:	b510      	push	{r4, lr}
 801c228:	2104      	movs	r1, #4
 801c22a:	4604      	mov	r4, r0
 801c22c:	f00d fde7 	bl	8029dfe <_ZdlPvj>
 801c230:	4620      	mov	r0, r4
 801c232:	bd10      	pop	{r4, pc}

0801c234 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c234:	b510      	push	{r4, lr}
 801c236:	2104      	movs	r1, #4
 801c238:	4604      	mov	r4, r0
 801c23a:	f00d fde0 	bl	8029dfe <_ZdlPvj>
 801c23e:	4620      	mov	r0, r4
 801c240:	bd10      	pop	{r4, pc}

0801c242 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c242:	b510      	push	{r4, lr}
 801c244:	2104      	movs	r1, #4
 801c246:	4604      	mov	r4, r0
 801c248:	f00d fdd9 	bl	8029dfe <_ZdlPvj>
 801c24c:	4620      	mov	r0, r4
 801c24e:	bd10      	pop	{r4, pc}

0801c250 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c250:	b510      	push	{r4, lr}
 801c252:	2104      	movs	r1, #4
 801c254:	4604      	mov	r4, r0
 801c256:	f00d fdd2 	bl	8029dfe <_ZdlPvj>
 801c25a:	4620      	mov	r0, r4
 801c25c:	bd10      	pop	{r4, pc}

0801c25e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c25e:	b510      	push	{r4, lr}
 801c260:	2104      	movs	r1, #4
 801c262:	4604      	mov	r4, r0
 801c264:	f00d fdcb 	bl	8029dfe <_ZdlPvj>
 801c268:	4620      	mov	r0, r4
 801c26a:	bd10      	pop	{r4, pc}

0801c26c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c26c:	b510      	push	{r4, lr}
 801c26e:	2104      	movs	r1, #4
 801c270:	4604      	mov	r4, r0
 801c272:	f00d fdc4 	bl	8029dfe <_ZdlPvj>
 801c276:	4620      	mov	r0, r4
 801c278:	bd10      	pop	{r4, pc}

0801c27a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c27a:	b510      	push	{r4, lr}
 801c27c:	2104      	movs	r1, #4
 801c27e:	4604      	mov	r4, r0
 801c280:	f00d fdbd 	bl	8029dfe <_ZdlPvj>
 801c284:	4620      	mov	r0, r4
 801c286:	bd10      	pop	{r4, pc}

0801c288 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c288:	b510      	push	{r4, lr}
 801c28a:	2104      	movs	r1, #4
 801c28c:	4604      	mov	r4, r0
 801c28e:	f00d fdb6 	bl	8029dfe <_ZdlPvj>
 801c292:	4620      	mov	r0, r4
 801c294:	bd10      	pop	{r4, pc}

0801c296 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c296:	b510      	push	{r4, lr}
 801c298:	2104      	movs	r1, #4
 801c29a:	4604      	mov	r4, r0
 801c29c:	f00d fdaf 	bl	8029dfe <_ZdlPvj>
 801c2a0:	4620      	mov	r0, r4
 801c2a2:	bd10      	pop	{r4, pc}

0801c2a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c2a4:	b510      	push	{r4, lr}
 801c2a6:	2104      	movs	r1, #4
 801c2a8:	4604      	mov	r4, r0
 801c2aa:	f00d fda8 	bl	8029dfe <_ZdlPvj>
 801c2ae:	4620      	mov	r0, r4
 801c2b0:	bd10      	pop	{r4, pc}

0801c2b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c2b2:	b510      	push	{r4, lr}
 801c2b4:	2104      	movs	r1, #4
 801c2b6:	4604      	mov	r4, r0
 801c2b8:	f00d fda1 	bl	8029dfe <_ZdlPvj>
 801c2bc:	4620      	mov	r0, r4
 801c2be:	bd10      	pop	{r4, pc}

0801c2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c2c0:	b510      	push	{r4, lr}
 801c2c2:	2104      	movs	r1, #4
 801c2c4:	4604      	mov	r4, r0
 801c2c6:	f00d fd9a 	bl	8029dfe <_ZdlPvj>
 801c2ca:	4620      	mov	r0, r4
 801c2cc:	bd10      	pop	{r4, pc}

0801c2ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c2ce:	b510      	push	{r4, lr}
 801c2d0:	2104      	movs	r1, #4
 801c2d2:	4604      	mov	r4, r0
 801c2d4:	f00d fd93 	bl	8029dfe <_ZdlPvj>
 801c2d8:	4620      	mov	r0, r4
 801c2da:	bd10      	pop	{r4, pc}

0801c2dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c2dc:	b510      	push	{r4, lr}
 801c2de:	2104      	movs	r1, #4
 801c2e0:	4604      	mov	r4, r0
 801c2e2:	f00d fd8c 	bl	8029dfe <_ZdlPvj>
 801c2e6:	4620      	mov	r0, r4
 801c2e8:	bd10      	pop	{r4, pc}

0801c2ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c2ea:	b510      	push	{r4, lr}
 801c2ec:	2104      	movs	r1, #4
 801c2ee:	4604      	mov	r4, r0
 801c2f0:	f00d fd85 	bl	8029dfe <_ZdlPvj>
 801c2f4:	4620      	mov	r0, r4
 801c2f6:	bd10      	pop	{r4, pc}

0801c2f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c2f8:	b510      	push	{r4, lr}
 801c2fa:	2104      	movs	r1, #4
 801c2fc:	4604      	mov	r4, r0
 801c2fe:	f00d fd7e 	bl	8029dfe <_ZdlPvj>
 801c302:	4620      	mov	r0, r4
 801c304:	bd10      	pop	{r4, pc}

0801c306 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c306:	b510      	push	{r4, lr}
 801c308:	2104      	movs	r1, #4
 801c30a:	4604      	mov	r4, r0
 801c30c:	f00d fd77 	bl	8029dfe <_ZdlPvj>
 801c310:	4620      	mov	r0, r4
 801c312:	bd10      	pop	{r4, pc}

0801c314 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c314:	b510      	push	{r4, lr}
 801c316:	2104      	movs	r1, #4
 801c318:	4604      	mov	r4, r0
 801c31a:	f00d fd70 	bl	8029dfe <_ZdlPvj>
 801c31e:	4620      	mov	r0, r4
 801c320:	bd10      	pop	{r4, pc}
	...

0801c324 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c328:	b08f      	sub	sp, #60	; 0x3c
 801c32a:	461c      	mov	r4, r3
 801c32c:	9205      	str	r2, [sp, #20]
 801c32e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c332:	9100      	str	r1, [sp, #0]
 801c334:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c336:	9201      	str	r2, [sp, #4]
 801c338:	2a00      	cmp	r2, #0
 801c33a:	f000 8115 	beq.w	801c568 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c33e:	6820      	ldr	r0, [r4, #0]
 801c340:	6861      	ldr	r1, [r4, #4]
 801c342:	aa0a      	add	r2, sp, #40	; 0x28
 801c344:	c203      	stmia	r2!, {r0, r1}
 801c346:	6818      	ldr	r0, [r3, #0]
 801c348:	6859      	ldr	r1, [r3, #4]
 801c34a:	aa0c      	add	r2, sp, #48	; 0x30
 801c34c:	c203      	stmia	r2!, {r0, r1}
 801c34e:	a80a      	add	r0, sp, #40	; 0x28
 801c350:	f7f9 fb2a 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c354:	4621      	mov	r1, r4
 801c356:	a80c      	add	r0, sp, #48	; 0x30
 801c358:	f7f9 fb6a 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c35c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c360:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c364:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c368:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c36c:	bfde      	ittt	le
 801c36e:	b2b3      	uxthle	r3, r6
 801c370:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c374:	fb92 f3f3 	sdivle	r3, r2, r3
 801c378:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c37c:	bfc8      	it	gt
 801c37e:	2301      	movgt	r3, #1
 801c380:	fb92 f1f3 	sdiv	r1, r2, r3
 801c384:	fa1f fc81 	uxth.w	ip, r1
 801c388:	fb0c 2413 	mls	r4, ip, r3, r2
 801c38c:	fb14 f406 	smulbb	r4, r4, r6
 801c390:	441d      	add	r5, r3
 801c392:	4404      	add	r4, r0
 801c394:	4661      	mov	r1, ip
 801c396:	3d01      	subs	r5, #1
 801c398:	b2a4      	uxth	r4, r4
 801c39a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c39e:	b131      	cbz	r1, 801c3ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c3a0:	9b05      	ldr	r3, [sp, #20]
 801c3a2:	9900      	ldr	r1, [sp, #0]
 801c3a4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c3a8:	ba1b      	rev	r3, r3
 801c3aa:	4419      	add	r1, r3
 801c3ac:	9100      	str	r1, [sp, #0]
 801c3ae:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c3b2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c3b6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c3ba:	4418      	add	r0, r3
 801c3bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c3c0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c3c4:	441a      	add	r2, r3
 801c3c6:	4b6a      	ldr	r3, [pc, #424]	; (801c570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c3c8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c3cc:	6818      	ldr	r0, [r3, #0]
 801c3ce:	6803      	ldr	r3, [r0, #0]
 801c3d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c3d2:	4798      	blx	r3
 801c3d4:	4967      	ldr	r1, [pc, #412]	; (801c574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c3d6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c3da:	880b      	ldrh	r3, [r1, #0]
 801c3dc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c3e0:	9109      	str	r1, [sp, #36]	; 0x24
 801c3e2:	fb03 c202 	mla	r2, r3, r2, ip
 801c3e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c3ea:	4373      	muls	r3, r6
 801c3ec:	b2ad      	uxth	r5, r5
 801c3ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c3f2:	00ad      	lsls	r5, r5, #2
 801c3f4:	9306      	str	r3, [sp, #24]
 801c3f6:	1d2b      	adds	r3, r5, #4
 801c3f8:	9307      	str	r3, [sp, #28]
 801c3fa:	9b01      	ldr	r3, [sp, #4]
 801c3fc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c400:	9103      	str	r1, [sp, #12]
 801c402:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c406:	2c00      	cmp	r4, #0
 801c408:	bf0c      	ite	eq
 801c40a:	46c6      	moveq	lr, r8
 801c40c:	f04f 0e00 	movne.w	lr, #0
 801c410:	2300      	movs	r3, #0
 801c412:	b292      	uxth	r2, r2
 801c414:	fa1f fe8e 	uxth.w	lr, lr
 801c418:	9302      	str	r3, [sp, #8]
 801c41a:	9204      	str	r2, [sp, #16]
 801c41c:	9a06      	ldr	r2, [sp, #24]
 801c41e:	4282      	cmp	r2, r0
 801c420:	f240 809d 	bls.w	801c55e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c424:	b963      	cbnz	r3, 801c440 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c426:	9b00      	ldr	r3, [sp, #0]
 801c428:	781a      	ldrb	r2, [r3, #0]
 801c42a:	0993      	lsrs	r3, r2, #6
 801c42c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c430:	9202      	str	r2, [sp, #8]
 801c432:	1e5a      	subs	r2, r3, #1
 801c434:	2a02      	cmp	r2, #2
 801c436:	d815      	bhi.n	801c464 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c438:	9a00      	ldr	r2, [sp, #0]
 801c43a:	3201      	adds	r2, #1
 801c43c:	9200      	str	r2, [sp, #0]
 801c43e:	b29b      	uxth	r3, r3
 801c440:	b1b4      	cbz	r4, 801c470 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c442:	429c      	cmp	r4, r3
 801c444:	bf95      	itete	ls
 801c446:	1b1c      	subls	r4, r3, r4
 801c448:	1ae4      	subhi	r4, r4, r3
 801c44a:	fa1f fa84 	uxthls.w	sl, r4
 801c44e:	b2a4      	uxthhi	r4, r4
 801c450:	bf87      	ittee	hi
 801c452:	4671      	movhi	r1, lr
 801c454:	f04f 0a00 	movhi.w	sl, #0
 801c458:	fa1f f188 	uxthls.w	r1, r8
 801c45c:	2400      	movls	r4, #0
 801c45e:	4653      	mov	r3, sl
 801c460:	468e      	mov	lr, r1
 801c462:	e7db      	b.n	801c41c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c464:	9a00      	ldr	r2, [sp, #0]
 801c466:	9b00      	ldr	r3, [sp, #0]
 801c468:	3202      	adds	r2, #2
 801c46a:	785b      	ldrb	r3, [r3, #1]
 801c46c:	9200      	str	r2, [sp, #0]
 801c46e:	e7e7      	b.n	801c440 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c470:	2202      	movs	r2, #2
 801c472:	4615      	mov	r5, r2
 801c474:	9907      	ldr	r1, [sp, #28]
 801c476:	9a02      	ldr	r2, [sp, #8]
 801c478:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c47c:	9905      	ldr	r1, [sp, #20]
 801c47e:	4573      	cmp	r3, lr
 801c480:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c484:	9a01      	ldr	r2, [sp, #4]
 801c486:	bf2b      	itete	cs
 801c488:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c48c:	ebae 0103 	subcc.w	r1, lr, r3
 801c490:	46f1      	movcs	r9, lr
 801c492:	4699      	movcc	r9, r3
 801c494:	bf27      	ittee	cs
 801c496:	fa1f fa8a 	uxthcs.w	sl, sl
 801c49a:	4621      	movcs	r1, r4
 801c49c:	b289      	uxthcc	r1, r1
 801c49e:	46a2      	movcc	sl, r4
 801c4a0:	2aff      	cmp	r2, #255	; 0xff
 801c4a2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c4a6:	d105      	bne.n	801c4b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c4a8:	4481      	add	r9, r0
 801c4aa:	4581      	cmp	r9, r0
 801c4ac:	d045      	beq.n	801c53a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c4ae:	f820 cb02 	strh.w	ip, [r0], #2
 801c4b2:	e7fa      	b.n	801c4aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c4b4:	9d03      	ldr	r5, [sp, #12]
 801c4b6:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c4ba:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c4be:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c4c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c4c6:	436a      	muls	r2, r5
 801c4c8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c4cc:	fa5f fc8c 	uxtb.w	ip, ip
 801c4d0:	9208      	str	r2, [sp, #32]
 801c4d2:	fb0b fb05 	mul.w	fp, fp, r5
 801c4d6:	fb0c fc05 	mul.w	ip, ip, r5
 801c4da:	4481      	add	r9, r0
 801c4dc:	4581      	cmp	r9, r0
 801c4de:	d02c      	beq.n	801c53a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c4e0:	8802      	ldrh	r2, [r0, #0]
 801c4e2:	9d04      	ldr	r5, [sp, #16]
 801c4e4:	9f04      	ldr	r7, [sp, #16]
 801c4e6:	1216      	asrs	r6, r2, #8
 801c4e8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c4ec:	fb16 f605 	smulbb	r6, r6, r5
 801c4f0:	9d08      	ldr	r5, [sp, #32]
 801c4f2:	442e      	add	r6, r5
 801c4f4:	10d5      	asrs	r5, r2, #3
 801c4f6:	00d2      	lsls	r2, r2, #3
 801c4f8:	b2d2      	uxtb	r2, r2
 801c4fa:	fb12 f207 	smulbb	r2, r2, r7
 801c4fe:	b2b6      	uxth	r6, r6
 801c500:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c504:	4462      	add	r2, ip
 801c506:	fb15 f507 	smulbb	r5, r5, r7
 801c50a:	b292      	uxth	r2, r2
 801c50c:	1c77      	adds	r7, r6, #1
 801c50e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c512:	1c57      	adds	r7, r2, #1
 801c514:	445d      	add	r5, fp
 801c516:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c51a:	b2ad      	uxth	r5, r5
 801c51c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c520:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c524:	4316      	orrs	r6, r2
 801c526:	1c6a      	adds	r2, r5, #1
 801c528:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c52c:	096d      	lsrs	r5, r5, #5
 801c52e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c532:	432e      	orrs	r6, r5
 801c534:	f820 6b02 	strh.w	r6, [r0], #2
 801c538:	e7d0      	b.n	801c4dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c53a:	4573      	cmp	r3, lr
 801c53c:	d38f      	bcc.n	801c45e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c53e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c542:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c544:	fa1f f188 	uxth.w	r1, r8
 801c548:	1a64      	subs	r4, r4, r1
 801c54a:	881b      	ldrh	r3, [r3, #0]
 801c54c:	b2a4      	uxth	r4, r4
 801c54e:	2c00      	cmp	r4, #0
 801c550:	eba3 0308 	sub.w	r3, r3, r8
 801c554:	bf18      	it	ne
 801c556:	2100      	movne	r1, #0
 801c558:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c55c:	e77f      	b.n	801c45e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c55e:	4b04      	ldr	r3, [pc, #16]	; (801c570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c560:	6818      	ldr	r0, [r3, #0]
 801c562:	6803      	ldr	r3, [r0, #0]
 801c564:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c566:	4798      	blx	r3
 801c568:	b00f      	add	sp, #60	; 0x3c
 801c56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c56e:	bf00      	nop
 801c570:	20012db4 	.word	0x20012db4
 801c574:	20012dae 	.word	0x20012dae

0801c578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c57c:	b09f      	sub	sp, #124	; 0x7c
 801c57e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c582:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c586:	9209      	str	r2, [sp, #36]	; 0x24
 801c588:	461d      	mov	r5, r3
 801c58a:	4604      	mov	r4, r0
 801c58c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c58e:	2a00      	cmp	r2, #0
 801c590:	f000 81eb 	beq.w	801c96a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c594:	6828      	ldr	r0, [r5, #0]
 801c596:	6869      	ldr	r1, [r5, #4]
 801c598:	aa1a      	add	r2, sp, #104	; 0x68
 801c59a:	c203      	stmia	r2!, {r0, r1}
 801c59c:	6818      	ldr	r0, [r3, #0]
 801c59e:	6859      	ldr	r1, [r3, #4]
 801c5a0:	aa1c      	add	r2, sp, #112	; 0x70
 801c5a2:	c203      	stmia	r2!, {r0, r1}
 801c5a4:	a81a      	add	r0, sp, #104	; 0x68
 801c5a6:	f7f9 f9ff 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c5aa:	4629      	mov	r1, r5
 801c5ac:	a81c      	add	r0, sp, #112	; 0x70
 801c5ae:	f7f9 fa3f 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c5b2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c5b6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c5ba:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c5be:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c5c2:	bfd7      	itett	le
 801c5c4:	b29a      	uxthle	r2, r3
 801c5c6:	2201      	movgt	r2, #1
 801c5c8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c5cc:	fb91 f2f2 	sdivle	r2, r1, r2
 801c5d0:	9202      	str	r2, [sp, #8]
 801c5d2:	9802      	ldr	r0, [sp, #8]
 801c5d4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c5d8:	fb92 f0f0 	sdiv	r0, r2, r0
 801c5dc:	b280      	uxth	r0, r0
 801c5de:	9010      	str	r0, [sp, #64]	; 0x40
 801c5e0:	9902      	ldr	r1, [sp, #8]
 801c5e2:	9802      	ldr	r0, [sp, #8]
 801c5e4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c5e6:	4488      	add	r8, r1
 801c5e8:	fb05 2510 	mls	r5, r5, r0, r2
 801c5ec:	fb15 f503 	smulbb	r5, r5, r3
 801c5f0:	f108 38ff 	add.w	r8, r8, #4294967295
 801c5f4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c5f8:	fb98 f8f1 	sdiv	r8, r8, r1
 801c5fc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c600:	440d      	add	r5, r1
 801c602:	4419      	add	r1, r3
 801c604:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c608:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c60c:	441a      	add	r2, r3
 801c60e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c612:	9304      	str	r3, [sp, #16]
 801c614:	4b95      	ldr	r3, [pc, #596]	; (801c86c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c616:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c61a:	6818      	ldr	r0, [r3, #0]
 801c61c:	6803      	ldr	r3, [r0, #0]
 801c61e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c620:	4798      	blx	r3
 801c622:	4b93      	ldr	r3, [pc, #588]	; (801c870 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c624:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c628:	881a      	ldrh	r2, [r3, #0]
 801c62a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c62e:	9318      	str	r3, [sp, #96]	; 0x60
 801c630:	fb02 7101 	mla	r1, r2, r1, r7
 801c634:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c638:	4356      	muls	r6, r2
 801c63a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c63e:	f108 0801 	add.w	r8, r8, #1
 801c642:	920a      	str	r2, [sp, #40]	; 0x28
 801c644:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c646:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c64a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c64c:	fa1f f888 	uxth.w	r8, r8
 801c650:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c654:	f108 0204 	add.w	r2, r8, #4
 801c658:	9211      	str	r2, [sp, #68]	; 0x44
 801c65a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c65c:	4b85      	ldr	r3, [pc, #532]	; (801c874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c65e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c662:	b2ad      	uxth	r5, r5
 801c664:	9215      	str	r2, [sp, #84]	; 0x54
 801c666:	2d00      	cmp	r5, #0
 801c668:	9a04      	ldr	r2, [sp, #16]
 801c66a:	f04f 0100 	mov.w	r1, #0
 801c66e:	bf18      	it	ne
 801c670:	2200      	movne	r2, #0
 801c672:	1b1b      	subs	r3, r3, r4
 801c674:	b292      	uxth	r2, r2
 801c676:	910d      	str	r1, [sp, #52]	; 0x34
 801c678:	9319      	str	r3, [sp, #100]	; 0x64
 801c67a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c67c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c67e:	fa11 f383 	uxtah	r3, r1, r3
 801c682:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c684:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c688:	3304      	adds	r3, #4
 801c68a:	9306      	str	r3, [sp, #24]
 801c68c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c68e:	4283      	cmp	r3, r0
 801c690:	f240 8166 	bls.w	801c960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c694:	9902      	ldr	r1, [sp, #8]
 801c696:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c69a:	fbb5 f3f3 	udiv	r3, r5, r3
 801c69e:	1acb      	subs	r3, r1, r3
 801c6a0:	b29b      	uxth	r3, r3
 801c6a2:	9316      	str	r3, [sp, #88]	; 0x58
 801c6a4:	9b06      	ldr	r3, [sp, #24]
 801c6a6:	9e06      	ldr	r6, [sp, #24]
 801c6a8:	7859      	ldrb	r1, [r3, #1]
 801c6aa:	789b      	ldrb	r3, [r3, #2]
 801c6ac:	7836      	ldrb	r6, [r6, #0]
 801c6ae:	9612      	str	r6, [sp, #72]	; 0x48
 801c6b0:	021b      	lsls	r3, r3, #8
 801c6b2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c6b6:	9906      	ldr	r1, [sp, #24]
 801c6b8:	78c9      	ldrb	r1, [r1, #3]
 801c6ba:	430b      	orrs	r3, r1
 801c6bc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c6be:	3601      	adds	r6, #1
 801c6c0:	4419      	add	r1, r3
 801c6c2:	9605      	str	r6, [sp, #20]
 801c6c4:	1c4e      	adds	r6, r1, #1
 801c6c6:	9603      	str	r6, [sp, #12]
 801c6c8:	7849      	ldrb	r1, [r1, #1]
 801c6ca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c6cc:	0209      	lsls	r1, r1, #8
 801c6ce:	5cf3      	ldrb	r3, [r6, r3]
 801c6d0:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c6d4:	4319      	orrs	r1, r3
 801c6d6:	b28b      	uxth	r3, r1
 801c6d8:	930c      	str	r3, [sp, #48]	; 0x30
 801c6da:	2300      	movs	r3, #0
 801c6dc:	f04f 0a01 	mov.w	sl, #1
 801c6e0:	9307      	str	r3, [sp, #28]
 801c6e2:	469c      	mov	ip, r3
 801c6e4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c6e8:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c6ec:	46d3      	mov	fp, sl
 801c6ee:	4657      	mov	r7, sl
 801c6f0:	930e      	str	r3, [sp, #56]	; 0x38
 801c6f2:	2d00      	cmp	r5, #0
 801c6f4:	d07e      	beq.n	801c7f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c6f6:	42af      	cmp	r7, r5
 801c6f8:	d26e      	bcs.n	801c7d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c6fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c6fc:	9201      	str	r2, [sp, #4]
 801c6fe:	1bed      	subs	r5, r5, r7
 801c700:	4283      	cmp	r3, r0
 801c702:	b2ad      	uxth	r5, r5
 801c704:	d802      	bhi.n	801c70c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c706:	e073      	b.n	801c7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c708:	2b00      	cmp	r3, #0
 801c70a:	d15f      	bne.n	801c7cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c70c:	9b03      	ldr	r3, [sp, #12]
 801c70e:	785b      	ldrb	r3, [r3, #1]
 801c710:	f1cb 0207 	rsb	r2, fp, #7
 801c714:	4093      	lsls	r3, r2
 801c716:	005b      	lsls	r3, r3, #1
 801c718:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c71c:	9b03      	ldr	r3, [sp, #12]
 801c71e:	781b      	ldrb	r3, [r3, #0]
 801c720:	fa43 f30b 	asr.w	r3, r3, fp
 801c724:	b2db      	uxtb	r3, r3
 801c726:	4313      	orrs	r3, r2
 801c728:	f10b 0201 	add.w	r2, fp, #1
 801c72c:	fa5f fb82 	uxtb.w	fp, r2
 801c730:	9a03      	ldr	r2, [sp, #12]
 801c732:	f1bb 0f08 	cmp.w	fp, #8
 801c736:	bf15      	itete	ne
 801c738:	3201      	addne	r2, #1
 801c73a:	3202      	addeq	r2, #2
 801c73c:	9203      	strne	r2, [sp, #12]
 801c73e:	9203      	streq	r2, [sp, #12]
 801c740:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c742:	b29f      	uxth	r7, r3
 801c744:	bf08      	it	eq
 801c746:	f04f 0b00 	moveq.w	fp, #0
 801c74a:	42ba      	cmp	r2, r7
 801c74c:	d309      	bcc.n	801c762 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c74e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c752:	2301      	movs	r3, #1
 801c754:	9a05      	ldr	r2, [sp, #20]
 801c756:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c75a:	d30e      	bcc.n	801c77a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c75c:	469a      	mov	sl, r3
 801c75e:	2600      	movs	r6, #0
 801c760:	e035      	b.n	801c7ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c762:	9b05      	ldr	r3, [sp, #20]
 801c764:	429f      	cmp	r7, r3
 801c766:	d318      	bcc.n	801c79a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c768:	eb04 030a 	add.w	r3, r4, sl
 801c76c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c770:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c774:	f10a 0301 	add.w	r3, sl, #1
 801c778:	b29b      	uxth	r3, r3
 801c77a:	9a05      	ldr	r2, [sp, #20]
 801c77c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c780:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c782:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c786:	7116      	strb	r6, [r2, #4]
 801c788:	f10a 0601 	add.w	r6, sl, #1
 801c78c:	80d1      	strh	r1, [r2, #6]
 801c78e:	7156      	strb	r6, [r2, #5]
 801c790:	9a05      	ldr	r2, [sp, #20]
 801c792:	3201      	adds	r2, #1
 801c794:	b292      	uxth	r2, r2
 801c796:	9205      	str	r2, [sp, #20]
 801c798:	e7e0      	b.n	801c75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c79a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c79e:	463a      	mov	r2, r7
 801c7a0:	795b      	ldrb	r3, [r3, #5]
 801c7a2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c7a6:	4426      	add	r6, r4
 801c7a8:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c7aa:	eb01 0c06 	add.w	ip, r1, r6
 801c7ae:	f1bc 0f00 	cmp.w	ip, #0
 801c7b2:	dd07      	ble.n	801c7c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c7b4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c7b8:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c7bc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c7c0:	88d2      	ldrh	r2, [r2, #6]
 801c7c2:	e7f1      	b.n	801c7a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c7c4:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c7c8:	b29b      	uxth	r3, r3
 801c7ca:	e7c3      	b.n	801c754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c7cc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c7ce:	970c      	str	r7, [sp, #48]	; 0x30
 801c7d0:	9a01      	ldr	r2, [sp, #4]
 801c7d2:	46b4      	mov	ip, r6
 801c7d4:	461f      	mov	r7, r3
 801c7d6:	e78c      	b.n	801c6f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c7d8:	1b7b      	subs	r3, r7, r5
 801c7da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c7de:	9201      	str	r2, [sp, #4]
 801c7e0:	eb0c 0605 	add.w	r6, ip, r5
 801c7e4:	b29b      	uxth	r3, r3
 801c7e6:	b2b6      	uxth	r6, r6
 801c7e8:	2500      	movs	r5, #0
 801c7ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c7ec:	4282      	cmp	r2, r0
 801c7ee:	d88b      	bhi.n	801c708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c7f0:	9a01      	ldr	r2, [sp, #4]
 801c7f2:	e74b      	b.n	801c68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c7f4:	4297      	cmp	r7, r2
 801c7f6:	d332      	bcc.n	801c85e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c7f8:	1abb      	subs	r3, r7, r2
 801c7fa:	b29b      	uxth	r3, r3
 801c7fc:	9208      	str	r2, [sp, #32]
 801c7fe:	9501      	str	r5, [sp, #4]
 801c800:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c802:	29ff      	cmp	r1, #255	; 0xff
 801c804:	9908      	ldr	r1, [sp, #32]
 801c806:	eb0c 0601 	add.w	r6, ip, r1
 801c80a:	d135      	bne.n	801c878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c80c:	f1a0 0e02 	sub.w	lr, r0, #2
 801c810:	b2b6      	uxth	r6, r6
 801c812:	45b4      	cmp	ip, r6
 801c814:	f040 808c 	bne.w	801c930 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c818:	9908      	ldr	r1, [sp, #32]
 801c81a:	4297      	cmp	r7, r2
 801c81c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c820:	d3e2      	bcc.n	801c7e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c822:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c824:	9904      	ldr	r1, [sp, #16]
 801c826:	8812      	ldrh	r2, [r2, #0]
 801c828:	1a52      	subs	r2, r2, r1
 801c82a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c82e:	9a07      	ldr	r2, [sp, #28]
 801c830:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c832:	3201      	adds	r2, #1
 801c834:	428a      	cmp	r2, r1
 801c836:	9207      	str	r2, [sp, #28]
 801c838:	f040 8087 	bne.w	801c94a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c83c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c840:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c844:	9b04      	ldr	r3, [sp, #16]
 801c846:	1bed      	subs	r5, r5, r7
 801c848:	b2ad      	uxth	r5, r5
 801c84a:	2d00      	cmp	r5, #0
 801c84c:	bf08      	it	eq
 801c84e:	461a      	moveq	r2, r3
 801c850:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c852:	bf18      	it	ne
 801c854:	2200      	movne	r2, #0
 801c856:	3301      	adds	r3, #1
 801c858:	930d      	str	r3, [sp, #52]	; 0x34
 801c85a:	b292      	uxth	r2, r2
 801c85c:	e70d      	b.n	801c67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c85e:	1bd1      	subs	r1, r2, r7
 801c860:	b28b      	uxth	r3, r1
 801c862:	9301      	str	r3, [sp, #4]
 801c864:	9708      	str	r7, [sp, #32]
 801c866:	462b      	mov	r3, r5
 801c868:	e7ca      	b.n	801c800 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c86a:	bf00      	nop
 801c86c:	20012db4 	.word	0x20012db4
 801c870:	20012dae 	.word	0x20012dae
 801c874:	fffff7fb 	.word	0xfffff7fb
 801c878:	b2b6      	uxth	r6, r6
 801c87a:	900b      	str	r0, [sp, #44]	; 0x2c
 801c87c:	45b4      	cmp	ip, r6
 801c87e:	d0cb      	beq.n	801c818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c880:	f10c 0101 	add.w	r1, ip, #1
 801c884:	44a4      	add	ip, r4
 801c886:	9117      	str	r1, [sp, #92]	; 0x5c
 801c888:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c88c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c88e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c892:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c894:	f8b1 c000 	ldrh.w	ip, [r1]
 801c898:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c89a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c89e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c8a2:	fb1e fe01 	smulbb	lr, lr, r1
 801c8a6:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c8aa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c8ac:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c8b0:	fb08 e801 	mla	r8, r8, r1, lr
 801c8b4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c8b8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c8ba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c8be:	fb19 f901 	smulbb	r9, r9, r1
 801c8c2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c8c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c8c8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c8cc:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c8d0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c8d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c8d6:	fa5f fc8c 	uxtb.w	ip, ip
 801c8da:	fb1c fc01 	smulbb	ip, ip, r1
 801c8de:	00ed      	lsls	r5, r5, #3
 801c8e0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c8e2:	b2ed      	uxtb	r5, r5
 801c8e4:	fb05 c501 	mla	r5, r5, r1, ip
 801c8e8:	fa1f f888 	uxth.w	r8, r8
 801c8ec:	fa1f fe8e 	uxth.w	lr, lr
 801c8f0:	b2ad      	uxth	r5, r5
 801c8f2:	f108 0c01 	add.w	ip, r8, #1
 801c8f6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c8fa:	f10e 0901 	add.w	r9, lr, #1
 801c8fe:	f105 0c01 	add.w	ip, r5, #1
 801c902:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c906:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c90a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c90e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c912:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c916:	ea4c 0808 	orr.w	r8, ip, r8
 801c91a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c91c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c920:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c924:	ea48 0809 	orr.w	r8, r8, r9
 801c928:	f821 8b02 	strh.w	r8, [r1], #2
 801c92c:	910b      	str	r1, [sp, #44]	; 0x2c
 801c92e:	e7a5      	b.n	801c87c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c930:	f10c 0801 	add.w	r8, ip, #1
 801c934:	44a4      	add	ip, r4
 801c936:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c938:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c93c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c940:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c944:	fa1f fc88 	uxth.w	ip, r8
 801c948:	e763      	b.n	801c812 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c94a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c94e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c952:	1aad      	subs	r5, r5, r2
 801c954:	b2ad      	uxth	r5, r5
 801c956:	2d00      	cmp	r5, #0
 801c958:	bf18      	it	ne
 801c95a:	2200      	movne	r2, #0
 801c95c:	9201      	str	r2, [sp, #4]
 801c95e:	e744      	b.n	801c7ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c960:	4b03      	ldr	r3, [pc, #12]	; (801c970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c962:	6818      	ldr	r0, [r3, #0]
 801c964:	6803      	ldr	r3, [r0, #0]
 801c966:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c968:	4798      	blx	r3
 801c96a:	b01f      	add	sp, #124	; 0x7c
 801c96c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c970:	20012db4 	.word	0x20012db4

0801c974 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c978:	b08f      	sub	sp, #60	; 0x3c
 801c97a:	461c      	mov	r4, r3
 801c97c:	9203      	str	r2, [sp, #12]
 801c97e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c982:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c984:	9202      	str	r2, [sp, #8]
 801c986:	460f      	mov	r7, r1
 801c988:	2a00      	cmp	r2, #0
 801c98a:	f000 8128 	beq.w	801cbde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c98e:	6820      	ldr	r0, [r4, #0]
 801c990:	6861      	ldr	r1, [r4, #4]
 801c992:	aa0a      	add	r2, sp, #40	; 0x28
 801c994:	c203      	stmia	r2!, {r0, r1}
 801c996:	6818      	ldr	r0, [r3, #0]
 801c998:	6859      	ldr	r1, [r3, #4]
 801c99a:	aa0c      	add	r2, sp, #48	; 0x30
 801c99c:	c203      	stmia	r2!, {r0, r1}
 801c99e:	a80a      	add	r0, sp, #40	; 0x28
 801c9a0:	f7f9 f802 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9a4:	4621      	mov	r1, r4
 801c9a6:	a80c      	add	r0, sp, #48	; 0x30
 801c9a8:	f7f9 f842 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c9b0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c9b4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c9b8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c9bc:	bfde      	ittt	le
 801c9be:	b2b3      	uxthle	r3, r6
 801c9c0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c9c4:	fb92 f3f3 	sdivle	r3, r2, r3
 801c9c8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c9cc:	bfc8      	it	gt
 801c9ce:	2301      	movgt	r3, #1
 801c9d0:	fb92 f1f3 	sdiv	r1, r2, r3
 801c9d4:	fa1f fc81 	uxth.w	ip, r1
 801c9d8:	fb0c 2413 	mls	r4, ip, r3, r2
 801c9dc:	fb14 f406 	smulbb	r4, r4, r6
 801c9e0:	441d      	add	r5, r3
 801c9e2:	4404      	add	r4, r0
 801c9e4:	4661      	mov	r1, ip
 801c9e6:	3d01      	subs	r5, #1
 801c9e8:	b2a4      	uxth	r4, r4
 801c9ea:	fb95 f5f3 	sdiv	r5, r5, r3
 801c9ee:	b121      	cbz	r1, 801c9fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c9f0:	9b03      	ldr	r3, [sp, #12]
 801c9f2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c9f6:	ba1b      	rev	r3, r3
 801c9f8:	441f      	add	r7, r3
 801c9fa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c9fe:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801ca02:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ca06:	4418      	add	r0, r3
 801ca08:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ca0c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ca10:	441a      	add	r2, r3
 801ca12:	4b74      	ldr	r3, [pc, #464]	; (801cbe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ca14:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ca18:	6818      	ldr	r0, [r3, #0]
 801ca1a:	6803      	ldr	r3, [r0, #0]
 801ca1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca1e:	4798      	blx	r3
 801ca20:	4a71      	ldr	r2, [pc, #452]	; (801cbe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801ca22:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801ca26:	8813      	ldrh	r3, [r2, #0]
 801ca28:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ca2c:	9209      	str	r2, [sp, #36]	; 0x24
 801ca2e:	fb03 c101 	mla	r1, r3, r1, ip
 801ca32:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ca36:	4373      	muls	r3, r6
 801ca38:	b2ad      	uxth	r5, r5
 801ca3a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ca3e:	00ad      	lsls	r5, r5, #2
 801ca40:	2c00      	cmp	r4, #0
 801ca42:	9304      	str	r3, [sp, #16]
 801ca44:	f105 0304 	add.w	r3, r5, #4
 801ca48:	9305      	str	r3, [sp, #20]
 801ca4a:	bf0c      	ite	eq
 801ca4c:	46c8      	moveq	r8, r9
 801ca4e:	f04f 0800 	movne.w	r8, #0
 801ca52:	2300      	movs	r3, #0
 801ca54:	fa1f f888 	uxth.w	r8, r8
 801ca58:	9301      	str	r3, [sp, #4]
 801ca5a:	9a04      	ldr	r2, [sp, #16]
 801ca5c:	4282      	cmp	r2, r0
 801ca5e:	f240 80b9 	bls.w	801cbd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801ca62:	b95b      	cbnz	r3, 801ca7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801ca64:	783a      	ldrb	r2, [r7, #0]
 801ca66:	0993      	lsrs	r3, r2, #6
 801ca68:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801ca6c:	9201      	str	r2, [sp, #4]
 801ca6e:	1e5a      	subs	r2, r3, #1
 801ca70:	2a02      	cmp	r2, #2
 801ca72:	bf8d      	iteet	hi
 801ca74:	787b      	ldrbhi	r3, [r7, #1]
 801ca76:	3701      	addls	r7, #1
 801ca78:	b29b      	uxthls	r3, r3
 801ca7a:	3702      	addhi	r7, #2
 801ca7c:	b184      	cbz	r4, 801caa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801ca7e:	429c      	cmp	r4, r3
 801ca80:	bf95      	itete	ls
 801ca82:	1b1c      	subls	r4, r3, r4
 801ca84:	1ae4      	subhi	r4, r4, r3
 801ca86:	fa1f fa84 	uxthls.w	sl, r4
 801ca8a:	b2a4      	uxthhi	r4, r4
 801ca8c:	bf87      	ittee	hi
 801ca8e:	46c4      	movhi	ip, r8
 801ca90:	f04f 0a00 	movhi.w	sl, #0
 801ca94:	fa1f fc89 	uxthls.w	ip, r9
 801ca98:	2400      	movls	r4, #0
 801ca9a:	4653      	mov	r3, sl
 801ca9c:	46e0      	mov	r8, ip
 801ca9e:	e7dc      	b.n	801ca5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801caa0:	2204      	movs	r2, #4
 801caa2:	4615      	mov	r5, r2
 801caa4:	9905      	ldr	r1, [sp, #20]
 801caa6:	9a01      	ldr	r2, [sp, #4]
 801caa8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801caac:	9903      	ldr	r1, [sp, #12]
 801caae:	588a      	ldr	r2, [r1, r2]
 801cab0:	4543      	cmp	r3, r8
 801cab2:	bf27      	ittee	cs
 801cab4:	eba3 0a08 	subcs.w	sl, r3, r8
 801cab8:	46c6      	movcs	lr, r8
 801caba:	eba8 0c03 	subcc.w	ip, r8, r3
 801cabe:	469e      	movcc	lr, r3
 801cac0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801cac4:	bf27      	ittee	cs
 801cac6:	fa1f fa8a 	uxthcs.w	sl, sl
 801caca:	46a4      	movcs	ip, r4
 801cacc:	fa1f fc8c 	uxthcc.w	ip, ip
 801cad0:	46a2      	movcc	sl, r4
 801cad2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801cad6:	2900      	cmp	r1, #0
 801cad8:	d066      	beq.n	801cba8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801cada:	29ff      	cmp	r1, #255	; 0xff
 801cadc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cae0:	d114      	bne.n	801cb0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cae2:	9d02      	ldr	r5, [sp, #8]
 801cae4:	2dff      	cmp	r5, #255	; 0xff
 801cae6:	d111      	bne.n	801cb0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cae8:	0951      	lsrs	r1, r2, #5
 801caea:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801caee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801caf2:	f026 0607 	bic.w	r6, r6, #7
 801caf6:	430e      	orrs	r6, r1
 801caf8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cafc:	4316      	orrs	r6, r2
 801cafe:	b2b6      	uxth	r6, r6
 801cb00:	4486      	add	lr, r0
 801cb02:	4586      	cmp	lr, r0
 801cb04:	d051      	beq.n	801cbaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cb06:	f820 6b02 	strh.w	r6, [r0], #2
 801cb0a:	e7fa      	b.n	801cb02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801cb0c:	9d02      	ldr	r5, [sp, #8]
 801cb0e:	4369      	muls	r1, r5
 801cb10:	1c4d      	adds	r5, r1, #1
 801cb12:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801cb16:	122d      	asrs	r5, r5, #8
 801cb18:	ea6f 0b05 	mvn.w	fp, r5
 801cb1c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801cb20:	b2ad      	uxth	r5, r5
 801cb22:	b2f6      	uxtb	r6, r6
 801cb24:	b2d2      	uxtb	r2, r2
 801cb26:	fb11 f105 	smulbb	r1, r1, r5
 801cb2a:	fb16 f605 	smulbb	r6, r6, r5
 801cb2e:	fb12 f205 	smulbb	r2, r2, r5
 801cb32:	b289      	uxth	r1, r1
 801cb34:	b2b6      	uxth	r6, r6
 801cb36:	b292      	uxth	r2, r2
 801cb38:	9106      	str	r1, [sp, #24]
 801cb3a:	9607      	str	r6, [sp, #28]
 801cb3c:	9208      	str	r2, [sp, #32]
 801cb3e:	4486      	add	lr, r0
 801cb40:	fa5f fb8b 	uxtb.w	fp, fp
 801cb44:	4586      	cmp	lr, r0
 801cb46:	d030      	beq.n	801cbaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cb48:	8802      	ldrh	r2, [r0, #0]
 801cb4a:	9906      	ldr	r1, [sp, #24]
 801cb4c:	1216      	asrs	r6, r2, #8
 801cb4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cb52:	10d5      	asrs	r5, r2, #3
 801cb54:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cb58:	fb06 160b 	mla	r6, r6, fp, r1
 801cb5c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cb60:	9907      	ldr	r1, [sp, #28]
 801cb62:	00d2      	lsls	r2, r2, #3
 801cb64:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cb68:	fb05 150b 	mla	r5, r5, fp, r1
 801cb6c:	b2d2      	uxtb	r2, r2
 801cb6e:	9908      	ldr	r1, [sp, #32]
 801cb70:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cb74:	b2b6      	uxth	r6, r6
 801cb76:	fb02 120b 	mla	r2, r2, fp, r1
 801cb7a:	b292      	uxth	r2, r2
 801cb7c:	1c71      	adds	r1, r6, #1
 801cb7e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801cb82:	1c51      	adds	r1, r2, #1
 801cb84:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cb88:	b2ad      	uxth	r5, r5
 801cb8a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cb8e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cb92:	4316      	orrs	r6, r2
 801cb94:	1c6a      	adds	r2, r5, #1
 801cb96:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801cb9a:	096d      	lsrs	r5, r5, #5
 801cb9c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cba0:	432e      	orrs	r6, r5
 801cba2:	f820 6b02 	strh.w	r6, [r0], #2
 801cba6:	e7cd      	b.n	801cb44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801cba8:	4470      	add	r0, lr
 801cbaa:	4543      	cmp	r3, r8
 801cbac:	f4ff af75 	bcc.w	801ca9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cbb0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cbb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbb6:	fa1f fc89 	uxth.w	ip, r9
 801cbba:	eba4 040c 	sub.w	r4, r4, ip
 801cbbe:	881b      	ldrh	r3, [r3, #0]
 801cbc0:	b2a4      	uxth	r4, r4
 801cbc2:	2c00      	cmp	r4, #0
 801cbc4:	eba3 0309 	sub.w	r3, r3, r9
 801cbc8:	bf18      	it	ne
 801cbca:	f04f 0c00 	movne.w	ip, #0
 801cbce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cbd2:	e762      	b.n	801ca9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cbd4:	4b03      	ldr	r3, [pc, #12]	; (801cbe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cbd6:	6818      	ldr	r0, [r3, #0]
 801cbd8:	6803      	ldr	r3, [r0, #0]
 801cbda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbdc:	4798      	blx	r3
 801cbde:	b00f      	add	sp, #60	; 0x3c
 801cbe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbe4:	20012db4 	.word	0x20012db4
 801cbe8:	20012dae 	.word	0x20012dae

0801cbec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801cbec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf0:	b093      	sub	sp, #76	; 0x4c
 801cbf2:	461c      	mov	r4, r3
 801cbf4:	9205      	str	r2, [sp, #20]
 801cbf6:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cbfa:	9101      	str	r1, [sp, #4]
 801cbfc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cbfe:	9202      	str	r2, [sp, #8]
 801cc00:	2a00      	cmp	r2, #0
 801cc02:	f000 812c 	beq.w	801ce5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cc06:	6820      	ldr	r0, [r4, #0]
 801cc08:	6861      	ldr	r1, [r4, #4]
 801cc0a:	aa0e      	add	r2, sp, #56	; 0x38
 801cc0c:	c203      	stmia	r2!, {r0, r1}
 801cc0e:	6818      	ldr	r0, [r3, #0]
 801cc10:	6859      	ldr	r1, [r3, #4]
 801cc12:	aa10      	add	r2, sp, #64	; 0x40
 801cc14:	c203      	stmia	r2!, {r0, r1}
 801cc16:	a80e      	add	r0, sp, #56	; 0x38
 801cc18:	f7f8 fec6 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc1c:	4621      	mov	r1, r4
 801cc1e:	a810      	add	r0, sp, #64	; 0x40
 801cc20:	f7f8 ff06 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc24:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cc28:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801cc2c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801cc30:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cc34:	bfde      	ittt	le
 801cc36:	b2b3      	uxthle	r3, r6
 801cc38:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cc3c:	fb92 f3f3 	sdivle	r3, r2, r3
 801cc40:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cc44:	bfc8      	it	gt
 801cc46:	2301      	movgt	r3, #1
 801cc48:	fb92 f1f3 	sdiv	r1, r2, r3
 801cc4c:	fa1f fc81 	uxth.w	ip, r1
 801cc50:	fb0c 2413 	mls	r4, ip, r3, r2
 801cc54:	fb14 f406 	smulbb	r4, r4, r6
 801cc58:	441d      	add	r5, r3
 801cc5a:	4404      	add	r4, r0
 801cc5c:	4661      	mov	r1, ip
 801cc5e:	3d01      	subs	r5, #1
 801cc60:	b2a4      	uxth	r4, r4
 801cc62:	fb95 f5f3 	sdiv	r5, r5, r3
 801cc66:	b131      	cbz	r1, 801cc76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cc68:	9b05      	ldr	r3, [sp, #20]
 801cc6a:	9901      	ldr	r1, [sp, #4]
 801cc6c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cc70:	ba1b      	rev	r3, r3
 801cc72:	4419      	add	r1, r3
 801cc74:	9101      	str	r1, [sp, #4]
 801cc76:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cc7a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cc7e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cc82:	4418      	add	r0, r3
 801cc84:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cc88:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cc8c:	441a      	add	r2, r3
 801cc8e:	4b75      	ldr	r3, [pc, #468]	; (801ce64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cc90:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cc94:	6818      	ldr	r0, [r3, #0]
 801cc96:	6803      	ldr	r3, [r0, #0]
 801cc98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc9a:	4798      	blx	r3
 801cc9c:	4972      	ldr	r1, [pc, #456]	; (801ce68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cc9e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cca2:	880b      	ldrh	r3, [r1, #0]
 801cca4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cca8:	910d      	str	r1, [sp, #52]	; 0x34
 801ccaa:	fb03 c202 	mla	r2, r3, r2, ip
 801ccae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ccb2:	4373      	muls	r3, r6
 801ccb4:	b2ad      	uxth	r5, r5
 801ccb6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ccba:	00ad      	lsls	r5, r5, #2
 801ccbc:	9308      	str	r3, [sp, #32]
 801ccbe:	1d2b      	adds	r3, r5, #4
 801ccc0:	9309      	str	r3, [sp, #36]	; 0x24
 801ccc2:	9b02      	ldr	r3, [sp, #8]
 801ccc4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ccc8:	9106      	str	r1, [sp, #24]
 801ccca:	43da      	mvns	r2, r3
 801cccc:	2c00      	cmp	r4, #0
 801ccce:	bf0c      	ite	eq
 801ccd0:	46dc      	moveq	ip, fp
 801ccd2:	f04f 0c00 	movne.w	ip, #0
 801ccd6:	2300      	movs	r3, #0
 801ccd8:	b2d2      	uxtb	r2, r2
 801ccda:	fa1f fc8c 	uxth.w	ip, ip
 801ccde:	9303      	str	r3, [sp, #12]
 801cce0:	9207      	str	r2, [sp, #28]
 801cce2:	9a08      	ldr	r2, [sp, #32]
 801cce4:	4282      	cmp	r2, r0
 801cce6:	f240 80b5 	bls.w	801ce54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801ccea:	b963      	cbnz	r3, 801cd06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801ccec:	9b01      	ldr	r3, [sp, #4]
 801ccee:	781a      	ldrb	r2, [r3, #0]
 801ccf0:	0993      	lsrs	r3, r2, #6
 801ccf2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801ccf6:	9203      	str	r2, [sp, #12]
 801ccf8:	1e5a      	subs	r2, r3, #1
 801ccfa:	2a02      	cmp	r2, #2
 801ccfc:	d815      	bhi.n	801cd2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801ccfe:	9a01      	ldr	r2, [sp, #4]
 801cd00:	3201      	adds	r2, #1
 801cd02:	9201      	str	r2, [sp, #4]
 801cd04:	b29b      	uxth	r3, r3
 801cd06:	b1b4      	cbz	r4, 801cd36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cd08:	429c      	cmp	r4, r3
 801cd0a:	bf95      	itete	ls
 801cd0c:	1b1c      	subls	r4, r3, r4
 801cd0e:	1ae4      	subhi	r4, r4, r3
 801cd10:	fa1f f884 	uxthls.w	r8, r4
 801cd14:	b2a4      	uxthhi	r4, r4
 801cd16:	bf87      	ittee	hi
 801cd18:	4666      	movhi	r6, ip
 801cd1a:	f04f 0800 	movhi.w	r8, #0
 801cd1e:	fa1f f68b 	uxthls.w	r6, fp
 801cd22:	2400      	movls	r4, #0
 801cd24:	4643      	mov	r3, r8
 801cd26:	46b4      	mov	ip, r6
 801cd28:	e7db      	b.n	801cce2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cd2a:	9a01      	ldr	r2, [sp, #4]
 801cd2c:	9b01      	ldr	r3, [sp, #4]
 801cd2e:	3202      	adds	r2, #2
 801cd30:	785b      	ldrb	r3, [r3, #1]
 801cd32:	9201      	str	r2, [sp, #4]
 801cd34:	e7e7      	b.n	801cd06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cd36:	2203      	movs	r2, #3
 801cd38:	4615      	mov	r5, r2
 801cd3a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cd3c:	9a03      	ldr	r2, [sp, #12]
 801cd3e:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cd42:	9905      	ldr	r1, [sp, #20]
 801cd44:	4563      	cmp	r3, ip
 801cd46:	eb01 0502 	add.w	r5, r1, r2
 801cd4a:	9902      	ldr	r1, [sp, #8]
 801cd4c:	bf29      	itett	cs
 801cd4e:	eba3 080c 	subcs.w	r8, r3, ip
 801cd52:	ebac 0603 	subcc.w	r6, ip, r3
 801cd56:	fa1f f888 	uxthcs.w	r8, r8
 801cd5a:	46e1      	movcs	r9, ip
 801cd5c:	bf2f      	iteee	cs
 801cd5e:	4626      	movcs	r6, r4
 801cd60:	b2b6      	uxthcc	r6, r6
 801cd62:	4699      	movcc	r9, r3
 801cd64:	46a0      	movcc	r8, r4
 801cd66:	29ff      	cmp	r1, #255	; 0xff
 801cd68:	d04a      	beq.n	801ce00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801cd6a:	9f06      	ldr	r7, [sp, #24]
 801cd6c:	78a9      	ldrb	r1, [r5, #2]
 801cd6e:	9004      	str	r0, [sp, #16]
 801cd70:	4379      	muls	r1, r7
 801cd72:	910a      	str	r1, [sp, #40]	; 0x28
 801cd74:	7869      	ldrb	r1, [r5, #1]
 801cd76:	4379      	muls	r1, r7
 801cd78:	910b      	str	r1, [sp, #44]	; 0x2c
 801cd7a:	9905      	ldr	r1, [sp, #20]
 801cd7c:	5c8a      	ldrb	r2, [r1, r2]
 801cd7e:	437a      	muls	r2, r7
 801cd80:	920c      	str	r2, [sp, #48]	; 0x30
 801cd82:	46ca      	mov	sl, r9
 801cd84:	f1ba 0f00 	cmp.w	sl, #0
 801cd88:	d03d      	beq.n	801ce06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801cd8a:	9a04      	ldr	r2, [sp, #16]
 801cd8c:	9f07      	ldr	r7, [sp, #28]
 801cd8e:	8812      	ldrh	r2, [r2, #0]
 801cd90:	1215      	asrs	r5, r2, #8
 801cd92:	46be      	mov	lr, r7
 801cd94:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cd98:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cd9a:	10d1      	asrs	r1, r2, #3
 801cd9c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cda0:	fb05 750e 	mla	r5, r5, lr, r7
 801cda4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cda8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cdaa:	00d2      	lsls	r2, r2, #3
 801cdac:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cdb0:	fb01 710e 	mla	r1, r1, lr, r7
 801cdb4:	b2d2      	uxtb	r2, r2
 801cdb6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cdb8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cdbc:	b2ad      	uxth	r5, r5
 801cdbe:	fb02 720e 	mla	r2, r2, lr, r7
 801cdc2:	b292      	uxth	r2, r2
 801cdc4:	f105 0e01 	add.w	lr, r5, #1
 801cdc8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801cdcc:	f102 0e01 	add.w	lr, r2, #1
 801cdd0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801cdd4:	b289      	uxth	r1, r1
 801cdd6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cdda:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cdde:	4315      	orrs	r5, r2
 801cde0:	1c4a      	adds	r2, r1, #1
 801cde2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cde6:	0949      	lsrs	r1, r1, #5
 801cde8:	9a04      	ldr	r2, [sp, #16]
 801cdea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cdee:	430d      	orrs	r5, r1
 801cdf0:	f822 5b02 	strh.w	r5, [r2], #2
 801cdf4:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cdf8:	9204      	str	r2, [sp, #16]
 801cdfa:	fa1f fa8a 	uxth.w	sl, sl
 801cdfe:	e7c1      	b.n	801cd84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801ce00:	4649      	mov	r1, r9
 801ce02:	4686      	mov	lr, r0
 801ce04:	b999      	cbnz	r1, 801ce2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ce06:	4563      	cmp	r3, ip
 801ce08:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801ce0c:	d38a      	bcc.n	801cd24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ce0e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801ce12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ce14:	fa1f f68b 	uxth.w	r6, fp
 801ce18:	1ba4      	subs	r4, r4, r6
 801ce1a:	881b      	ldrh	r3, [r3, #0]
 801ce1c:	b2a4      	uxth	r4, r4
 801ce1e:	2c00      	cmp	r4, #0
 801ce20:	eba3 030b 	sub.w	r3, r3, fp
 801ce24:	bf18      	it	ne
 801ce26:	2600      	movne	r6, #0
 801ce28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce2c:	e77a      	b.n	801cd24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801ce2e:	78aa      	ldrb	r2, [r5, #2]
 801ce30:	4f0e      	ldr	r7, [pc, #56]	; (801ce6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801ce32:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801ce36:	786a      	ldrb	r2, [r5, #1]
 801ce38:	00d2      	lsls	r2, r2, #3
 801ce3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce3e:	ea4a 0202 	orr.w	r2, sl, r2
 801ce42:	f895 a000 	ldrb.w	sl, [r5]
 801ce46:	3901      	subs	r1, #1
 801ce48:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801ce4c:	f82e 2b02 	strh.w	r2, [lr], #2
 801ce50:	b289      	uxth	r1, r1
 801ce52:	e7d7      	b.n	801ce04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801ce54:	4b03      	ldr	r3, [pc, #12]	; (801ce64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ce56:	6818      	ldr	r0, [r3, #0]
 801ce58:	6803      	ldr	r3, [r0, #0]
 801ce5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce5c:	4798      	blx	r3
 801ce5e:	b013      	add	sp, #76	; 0x4c
 801ce60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce64:	20012db4 	.word	0x20012db4
 801ce68:	20012dae 	.word	0x20012dae
 801ce6c:	fffff800 	.word	0xfffff800

0801ce70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ce70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce74:	b09d      	sub	sp, #116	; 0x74
 801ce76:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801ce7a:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801ce7e:	920e      	str	r2, [sp, #56]	; 0x38
 801ce80:	461c      	mov	r4, r3
 801ce82:	4683      	mov	fp, r0
 801ce84:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ce86:	2a00      	cmp	r2, #0
 801ce88:	f000 81e0 	beq.w	801d24c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801ce8c:	6820      	ldr	r0, [r4, #0]
 801ce8e:	6861      	ldr	r1, [r4, #4]
 801ce90:	aa18      	add	r2, sp, #96	; 0x60
 801ce92:	c203      	stmia	r2!, {r0, r1}
 801ce94:	6818      	ldr	r0, [r3, #0]
 801ce96:	6859      	ldr	r1, [r3, #4]
 801ce98:	aa1a      	add	r2, sp, #104	; 0x68
 801ce9a:	c203      	stmia	r2!, {r0, r1}
 801ce9c:	a818      	add	r0, sp, #96	; 0x60
 801ce9e:	f7f8 fd83 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cea2:	4621      	mov	r1, r4
 801cea4:	a81a      	add	r0, sp, #104	; 0x68
 801cea6:	f7f8 fdc3 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ceaa:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801ceae:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801ceb2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ceb6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ceba:	bfd7      	itett	le
 801cebc:	b29a      	uxthle	r2, r3
 801cebe:	2201      	movgt	r2, #1
 801cec0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cec4:	fb91 f2f2 	sdivle	r2, r1, r2
 801cec8:	9202      	str	r2, [sp, #8]
 801ceca:	9802      	ldr	r0, [sp, #8]
 801cecc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801ced0:	fb92 f0f0 	sdiv	r0, r2, r0
 801ced4:	b280      	uxth	r0, r0
 801ced6:	900f      	str	r0, [sp, #60]	; 0x3c
 801ced8:	9902      	ldr	r1, [sp, #8]
 801ceda:	9802      	ldr	r0, [sp, #8]
 801cedc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cede:	440c      	add	r4, r1
 801cee0:	fb05 2510 	mls	r5, r5, r0, r2
 801cee4:	fb15 f503 	smulbb	r5, r5, r3
 801cee8:	3c01      	subs	r4, #1
 801ceea:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801ceee:	fb94 f4f1 	sdiv	r4, r4, r1
 801cef2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801cef6:	440d      	add	r5, r1
 801cef8:	4419      	add	r1, r3
 801cefa:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801cefe:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801cf02:	441a      	add	r2, r3
 801cf04:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cf08:	9306      	str	r3, [sp, #24]
 801cf0a:	4bb3      	ldr	r3, [pc, #716]	; (801d1d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801cf0c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801cf10:	6818      	ldr	r0, [r3, #0]
 801cf12:	6803      	ldr	r3, [r0, #0]
 801cf14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf16:	4798      	blx	r3
 801cf18:	4bb0      	ldr	r3, [pc, #704]	; (801d1dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801cf1a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801cf1e:	881a      	ldrh	r2, [r3, #0]
 801cf20:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801cf24:	9316      	str	r3, [sp, #88]	; 0x58
 801cf26:	fb02 7101 	mla	r1, r2, r1, r7
 801cf2a:	3401      	adds	r4, #1
 801cf2c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801cf30:	b2a4      	uxth	r4, r4
 801cf32:	4356      	muls	r6, r2
 801cf34:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801cf38:	00a4      	lsls	r4, r4, #2
 801cf3a:	920a      	str	r2, [sp, #40]	; 0x28
 801cf3c:	1d22      	adds	r2, r4, #4
 801cf3e:	b2ad      	uxth	r5, r5
 801cf40:	9213      	str	r2, [sp, #76]	; 0x4c
 801cf42:	4ba7      	ldr	r3, [pc, #668]	; (801d1e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801cf44:	9a06      	ldr	r2, [sp, #24]
 801cf46:	2d00      	cmp	r5, #0
 801cf48:	bf0c      	ite	eq
 801cf4a:	4611      	moveq	r1, r2
 801cf4c:	2100      	movne	r1, #0
 801cf4e:	2200      	movs	r2, #0
 801cf50:	eba3 030b 	sub.w	r3, r3, fp
 801cf54:	b289      	uxth	r1, r1
 801cf56:	920d      	str	r2, [sp, #52]	; 0x34
 801cf58:	9317      	str	r3, [sp, #92]	; 0x5c
 801cf5a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cf5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cf5e:	fa12 f383 	uxtah	r3, r2, r3
 801cf62:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cf64:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801cf68:	3304      	adds	r3, #4
 801cf6a:	9308      	str	r3, [sp, #32]
 801cf6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf6e:	4543      	cmp	r3, r8
 801cf70:	f240 8167 	bls.w	801d242 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801cf74:	9a02      	ldr	r2, [sp, #8]
 801cf76:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801cf7a:	fbb5 f3f3 	udiv	r3, r5, r3
 801cf7e:	1ad3      	subs	r3, r2, r3
 801cf80:	b29b      	uxth	r3, r3
 801cf82:	9314      	str	r3, [sp, #80]	; 0x50
 801cf84:	9b08      	ldr	r3, [sp, #32]
 801cf86:	9808      	ldr	r0, [sp, #32]
 801cf88:	785a      	ldrb	r2, [r3, #1]
 801cf8a:	789b      	ldrb	r3, [r3, #2]
 801cf8c:	7800      	ldrb	r0, [r0, #0]
 801cf8e:	9010      	str	r0, [sp, #64]	; 0x40
 801cf90:	021b      	lsls	r3, r3, #8
 801cf92:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801cf96:	9a08      	ldr	r2, [sp, #32]
 801cf98:	78d2      	ldrb	r2, [r2, #3]
 801cf9a:	4313      	orrs	r3, r2
 801cf9c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cf9e:	3001      	adds	r0, #1
 801cfa0:	441a      	add	r2, r3
 801cfa2:	9007      	str	r0, [sp, #28]
 801cfa4:	1c50      	adds	r0, r2, #1
 801cfa6:	9005      	str	r0, [sp, #20]
 801cfa8:	7852      	ldrb	r2, [r2, #1]
 801cfaa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cfac:	0212      	lsls	r2, r2, #8
 801cfae:	5cc3      	ldrb	r3, [r0, r3]
 801cfb0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801cfb4:	431a      	orrs	r2, r3
 801cfb6:	b293      	uxth	r3, r2
 801cfb8:	930b      	str	r3, [sp, #44]	; 0x2c
 801cfba:	2300      	movs	r3, #0
 801cfbc:	9309      	str	r3, [sp, #36]	; 0x24
 801cfbe:	2301      	movs	r3, #1
 801cfc0:	9301      	str	r3, [sp, #4]
 801cfc2:	9304      	str	r3, [sp, #16]
 801cfc4:	2300      	movs	r3, #0
 801cfc6:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801cfca:	9303      	str	r3, [sp, #12]
 801cfcc:	f04f 0e01 	mov.w	lr, #1
 801cfd0:	2d00      	cmp	r5, #0
 801cfd2:	d07c      	beq.n	801d0ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801cfd4:	45ae      	cmp	lr, r5
 801cfd6:	d26b      	bcs.n	801d0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801cfd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cfda:	eba5 050e 	sub.w	r5, r5, lr
 801cfde:	4543      	cmp	r3, r8
 801cfe0:	b2ad      	uxth	r5, r5
 801cfe2:	460c      	mov	r4, r1
 801cfe4:	d802      	bhi.n	801cfec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801cfe6:	e070      	b.n	801d0ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801cfe8:	2b00      	cmp	r3, #0
 801cfea:	d15c      	bne.n	801d0a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cfec:	9b05      	ldr	r3, [sp, #20]
 801cfee:	9a04      	ldr	r2, [sp, #16]
 801cff0:	785b      	ldrb	r3, [r3, #1]
 801cff2:	9904      	ldr	r1, [sp, #16]
 801cff4:	f1c2 0207 	rsb	r2, r2, #7
 801cff8:	4093      	lsls	r3, r2
 801cffa:	005b      	lsls	r3, r3, #1
 801cffc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d000:	9b05      	ldr	r3, [sp, #20]
 801d002:	781b      	ldrb	r3, [r3, #0]
 801d004:	410b      	asrs	r3, r1
 801d006:	3101      	adds	r1, #1
 801d008:	b2c9      	uxtb	r1, r1
 801d00a:	2908      	cmp	r1, #8
 801d00c:	9104      	str	r1, [sp, #16]
 801d00e:	9905      	ldr	r1, [sp, #20]
 801d010:	bf0a      	itet	eq
 801d012:	3102      	addeq	r1, #2
 801d014:	3101      	addne	r1, #1
 801d016:	9105      	streq	r1, [sp, #20]
 801d018:	b2db      	uxtb	r3, r3
 801d01a:	bf0a      	itet	eq
 801d01c:	2100      	moveq	r1, #0
 801d01e:	9105      	strne	r1, [sp, #20]
 801d020:	9104      	streq	r1, [sp, #16]
 801d022:	4313      	orrs	r3, r2
 801d024:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d026:	b29a      	uxth	r2, r3
 801d028:	4291      	cmp	r1, r2
 801d02a:	d30a      	bcc.n	801d042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d02c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d030:	2301      	movs	r3, #1
 801d032:	9907      	ldr	r1, [sp, #28]
 801d034:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d038:	d30f      	bcc.n	801d05a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d03a:	2100      	movs	r1, #0
 801d03c:	9301      	str	r3, [sp, #4]
 801d03e:	9103      	str	r1, [sp, #12]
 801d040:	e032      	b.n	801d0a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d042:	9b07      	ldr	r3, [sp, #28]
 801d044:	429a      	cmp	r2, r3
 801d046:	d318      	bcc.n	801d07a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d048:	9b01      	ldr	r3, [sp, #4]
 801d04a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d04e:	445b      	add	r3, fp
 801d050:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d054:	9b01      	ldr	r3, [sp, #4]
 801d056:	3301      	adds	r3, #1
 801d058:	b29b      	uxth	r3, r3
 801d05a:	9907      	ldr	r1, [sp, #28]
 801d05c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d060:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d064:	7108      	strb	r0, [r1, #4]
 801d066:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d068:	80c8      	strh	r0, [r1, #6]
 801d06a:	9801      	ldr	r0, [sp, #4]
 801d06c:	3001      	adds	r0, #1
 801d06e:	7148      	strb	r0, [r1, #5]
 801d070:	9907      	ldr	r1, [sp, #28]
 801d072:	3101      	adds	r1, #1
 801d074:	b289      	uxth	r1, r1
 801d076:	9107      	str	r1, [sp, #28]
 801d078:	e7df      	b.n	801d03a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d07a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d07e:	4611      	mov	r1, r2
 801d080:	795b      	ldrb	r3, [r3, #5]
 801d082:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d086:	4458      	add	r0, fp
 801d088:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d08a:	4406      	add	r6, r0
 801d08c:	2e00      	cmp	r6, #0
 801d08e:	dd06      	ble.n	801d09e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d090:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d094:	790e      	ldrb	r6, [r1, #4]
 801d096:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d09a:	88c9      	ldrh	r1, [r1, #6]
 801d09c:	e7f4      	b.n	801d088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d09e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d0a2:	b29b      	uxth	r3, r3
 801d0a4:	e7c5      	b.n	801d032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d0a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d0a8:	920b      	str	r2, [sp, #44]	; 0x2c
 801d0aa:	4621      	mov	r1, r4
 801d0ac:	469e      	mov	lr, r3
 801d0ae:	e78f      	b.n	801cfd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d0b0:	9a03      	ldr	r2, [sp, #12]
 801d0b2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d0b6:	442a      	add	r2, r5
 801d0b8:	ebae 0305 	sub.w	r3, lr, r5
 801d0bc:	b292      	uxth	r2, r2
 801d0be:	b29b      	uxth	r3, r3
 801d0c0:	9203      	str	r2, [sp, #12]
 801d0c2:	2500      	movs	r5, #0
 801d0c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d0c6:	4542      	cmp	r2, r8
 801d0c8:	d88e      	bhi.n	801cfe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d0ca:	4621      	mov	r1, r4
 801d0cc:	e74e      	b.n	801cf6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d0ce:	458e      	cmp	lr, r1
 801d0d0:	bf29      	itett	cs
 801d0d2:	ebae 0301 	subcs.w	r3, lr, r1
 801d0d6:	eba1 040e 	subcc.w	r4, r1, lr
 801d0da:	b29b      	uxthcs	r3, r3
 801d0dc:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d0de:	bf2f      	iteee	cs
 801d0e0:	462c      	movcs	r4, r5
 801d0e2:	b2a4      	uxthcc	r4, r4
 801d0e4:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d0e8:	462b      	movcc	r3, r5
 801d0ea:	f04f 0900 	mov.w	r9, #0
 801d0ee:	9a03      	ldr	r2, [sp, #12]
 801d0f0:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d0f2:	444a      	add	r2, r9
 801d0f4:	4548      	cmp	r0, r9
 801d0f6:	b292      	uxth	r2, r2
 801d0f8:	d074      	beq.n	801d1e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d0fa:	445a      	add	r2, fp
 801d0fc:	2004      	movs	r0, #4
 801d0fe:	4605      	mov	r5, r0
 801d100:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d104:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d106:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d10a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d10c:	5880      	ldr	r0, [r0, r2]
 801d10e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d112:	d014      	beq.n	801d13e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d114:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d118:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d11c:	d112      	bne.n	801d144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d11e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d120:	2aff      	cmp	r2, #255	; 0xff
 801d122:	d10f      	bne.n	801d144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d124:	0942      	lsrs	r2, r0, #5
 801d126:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d12a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d12e:	f025 0507 	bic.w	r5, r5, #7
 801d132:	4315      	orrs	r5, r2
 801d134:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d138:	4305      	orrs	r5, r0
 801d13a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d13e:	f109 0901 	add.w	r9, r9, #1
 801d142:	e7d4      	b.n	801d0ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d144:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d148:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d14c:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d150:	9215      	str	r2, [sp, #84]	; 0x54
 801d152:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d154:	fb02 fa0a 	mul.w	sl, r2, sl
 801d158:	f10a 0201 	add.w	r2, sl, #1
 801d15c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d160:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d164:	1212      	asrs	r2, r2, #8
 801d166:	fa1f fa82 	uxth.w	sl, r2
 801d16a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d16e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d172:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d176:	43d2      	mvns	r2, r2
 801d178:	b2d2      	uxtb	r2, r2
 801d17a:	fb16 f60a 	smulbb	r6, r6, sl
 801d17e:	fa5f fc8c 	uxtb.w	ip, ip
 801d182:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d186:	b2c0      	uxtb	r0, r0
 801d188:	fb07 6702 	mla	r7, r7, r2, r6
 801d18c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d190:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d192:	fb10 f00a 	smulbb	r0, r0, sl
 801d196:	fb0c 0002 	mla	r0, ip, r2, r0
 801d19a:	b2ed      	uxtb	r5, r5
 801d19c:	b2bf      	uxth	r7, r7
 801d19e:	fb15 f50a 	smulbb	r5, r5, sl
 801d1a2:	b280      	uxth	r0, r0
 801d1a4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d1a8:	fb06 5602 	mla	r6, r6, r2, r5
 801d1ac:	1c7a      	adds	r2, r7, #1
 801d1ae:	1c45      	adds	r5, r0, #1
 801d1b0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d1b4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d1b8:	b2b6      	uxth	r6, r6
 801d1ba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d1be:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d1c2:	432f      	orrs	r7, r5
 801d1c4:	1c75      	adds	r5, r6, #1
 801d1c6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d1ca:	096d      	lsrs	r5, r5, #5
 801d1cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d1d0:	432f      	orrs	r7, r5
 801d1d2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d1d6:	e7b2      	b.n	801d13e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d1d8:	20012db4 	.word	0x20012db4
 801d1dc:	20012dae 	.word	0x20012dae
 801d1e0:	fffff7fb 	.word	0xfffff7fb
 801d1e4:	9203      	str	r2, [sp, #12]
 801d1e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d1e8:	458e      	cmp	lr, r1
 801d1ea:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d1ee:	f4ff af68 	bcc.w	801d0c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d1f2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d1f4:	9906      	ldr	r1, [sp, #24]
 801d1f6:	8812      	ldrh	r2, [r2, #0]
 801d1f8:	1a52      	subs	r2, r2, r1
 801d1fa:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d1fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d200:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d202:	3201      	adds	r2, #1
 801d204:	428a      	cmp	r2, r1
 801d206:	9209      	str	r2, [sp, #36]	; 0x24
 801d208:	d111      	bne.n	801d22e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d20a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d20e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d212:	9b06      	ldr	r3, [sp, #24]
 801d214:	eba5 0509 	sub.w	r5, r5, r9
 801d218:	b2ad      	uxth	r5, r5
 801d21a:	2d00      	cmp	r5, #0
 801d21c:	bf08      	it	eq
 801d21e:	4619      	moveq	r1, r3
 801d220:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d222:	bf18      	it	ne
 801d224:	2100      	movne	r1, #0
 801d226:	3301      	adds	r3, #1
 801d228:	930d      	str	r3, [sp, #52]	; 0x34
 801d22a:	b289      	uxth	r1, r1
 801d22c:	e695      	b.n	801cf5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d22e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d232:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d236:	1b2d      	subs	r5, r5, r4
 801d238:	b2ad      	uxth	r5, r5
 801d23a:	2d00      	cmp	r5, #0
 801d23c:	bf18      	it	ne
 801d23e:	2400      	movne	r4, #0
 801d240:	e740      	b.n	801d0c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d242:	4b04      	ldr	r3, [pc, #16]	; (801d254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d244:	6818      	ldr	r0, [r3, #0]
 801d246:	6803      	ldr	r3, [r0, #0]
 801d248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d24a:	4798      	blx	r3
 801d24c:	b01d      	add	sp, #116	; 0x74
 801d24e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d252:	bf00      	nop
 801d254:	20012db4 	.word	0x20012db4

0801d258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d25c:	b09f      	sub	sp, #124	; 0x7c
 801d25e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d262:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d266:	920a      	str	r2, [sp, #40]	; 0x28
 801d268:	461d      	mov	r5, r3
 801d26a:	4604      	mov	r4, r0
 801d26c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d26e:	2a00      	cmp	r2, #0
 801d270:	f000 81fa 	beq.w	801d668 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d274:	6828      	ldr	r0, [r5, #0]
 801d276:	6869      	ldr	r1, [r5, #4]
 801d278:	aa1a      	add	r2, sp, #104	; 0x68
 801d27a:	c203      	stmia	r2!, {r0, r1}
 801d27c:	6818      	ldr	r0, [r3, #0]
 801d27e:	6859      	ldr	r1, [r3, #4]
 801d280:	aa1c      	add	r2, sp, #112	; 0x70
 801d282:	c203      	stmia	r2!, {r0, r1}
 801d284:	a81a      	add	r0, sp, #104	; 0x68
 801d286:	f7f8 fb8f 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d28a:	4629      	mov	r1, r5
 801d28c:	a81c      	add	r0, sp, #112	; 0x70
 801d28e:	f7f8 fbcf 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d292:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d296:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d29a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d29e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d2a2:	bfd7      	itett	le
 801d2a4:	b29a      	uxthle	r2, r3
 801d2a6:	2201      	movgt	r2, #1
 801d2a8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d2ac:	fb91 f2f2 	sdivle	r2, r1, r2
 801d2b0:	9201      	str	r2, [sp, #4]
 801d2b2:	9801      	ldr	r0, [sp, #4]
 801d2b4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d2b8:	fb92 f0f0 	sdiv	r0, r2, r0
 801d2bc:	b280      	uxth	r0, r0
 801d2be:	9010      	str	r0, [sp, #64]	; 0x40
 801d2c0:	9901      	ldr	r1, [sp, #4]
 801d2c2:	9801      	ldr	r0, [sp, #4]
 801d2c4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d2c6:	440e      	add	r6, r1
 801d2c8:	fb05 2510 	mls	r5, r5, r0, r2
 801d2cc:	fb15 f503 	smulbb	r5, r5, r3
 801d2d0:	3e01      	subs	r6, #1
 801d2d2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d2d6:	fb96 f6f1 	sdiv	r6, r6, r1
 801d2da:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d2de:	440d      	add	r5, r1
 801d2e0:	4419      	add	r1, r3
 801d2e2:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d2e6:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d2ea:	441a      	add	r2, r3
 801d2ec:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d2f0:	9304      	str	r3, [sp, #16]
 801d2f2:	4b96      	ldr	r3, [pc, #600]	; (801d54c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d2f4:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d2f8:	6818      	ldr	r0, [r3, #0]
 801d2fa:	6803      	ldr	r3, [r0, #0]
 801d2fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d2fe:	4798      	blx	r3
 801d300:	4b93      	ldr	r3, [pc, #588]	; (801d550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d302:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d306:	881a      	ldrh	r2, [r3, #0]
 801d308:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d30c:	9318      	str	r3, [sp, #96]	; 0x60
 801d30e:	fb02 c101 	mla	r1, r2, r1, ip
 801d312:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d316:	4357      	muls	r7, r2
 801d318:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d31c:	3601      	adds	r6, #1
 801d31e:	920b      	str	r2, [sp, #44]	; 0x2c
 801d320:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d322:	4b8c      	ldr	r3, [pc, #560]	; (801d554 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d324:	b2b6      	uxth	r6, r6
 801d326:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d32a:	1d32      	adds	r2, r6, #4
 801d32c:	9206      	str	r2, [sp, #24]
 801d32e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d330:	43d2      	mvns	r2, r2
 801d332:	b2d2      	uxtb	r2, r2
 801d334:	b2ad      	uxth	r5, r5
 801d336:	9215      	str	r2, [sp, #84]	; 0x54
 801d338:	9a04      	ldr	r2, [sp, #16]
 801d33a:	2d00      	cmp	r5, #0
 801d33c:	bf0c      	ite	eq
 801d33e:	4611      	moveq	r1, r2
 801d340:	2100      	movne	r1, #0
 801d342:	2200      	movs	r2, #0
 801d344:	1b1b      	subs	r3, r3, r4
 801d346:	b289      	uxth	r1, r1
 801d348:	920d      	str	r2, [sp, #52]	; 0x34
 801d34a:	9319      	str	r3, [sp, #100]	; 0x64
 801d34c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d34e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d350:	fa12 f383 	uxtah	r3, r2, r3
 801d354:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d356:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d35a:	3304      	adds	r3, #4
 801d35c:	9307      	str	r3, [sp, #28]
 801d35e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d360:	455b      	cmp	r3, fp
 801d362:	f240 817c 	bls.w	801d65e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d366:	9a01      	ldr	r2, [sp, #4]
 801d368:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d36c:	fbb5 f3f3 	udiv	r3, r5, r3
 801d370:	1ad3      	subs	r3, r2, r3
 801d372:	b29b      	uxth	r3, r3
 801d374:	9316      	str	r3, [sp, #88]	; 0x58
 801d376:	9b07      	ldr	r3, [sp, #28]
 801d378:	9807      	ldr	r0, [sp, #28]
 801d37a:	785a      	ldrb	r2, [r3, #1]
 801d37c:	789b      	ldrb	r3, [r3, #2]
 801d37e:	7800      	ldrb	r0, [r0, #0]
 801d380:	9011      	str	r0, [sp, #68]	; 0x44
 801d382:	021b      	lsls	r3, r3, #8
 801d384:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d388:	9a07      	ldr	r2, [sp, #28]
 801d38a:	78d2      	ldrb	r2, [r2, #3]
 801d38c:	4313      	orrs	r3, r2
 801d38e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d390:	3001      	adds	r0, #1
 801d392:	441a      	add	r2, r3
 801d394:	9005      	str	r0, [sp, #20]
 801d396:	1c50      	adds	r0, r2, #1
 801d398:	9003      	str	r0, [sp, #12]
 801d39a:	7852      	ldrb	r2, [r2, #1]
 801d39c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d39e:	0212      	lsls	r2, r2, #8
 801d3a0:	5cc3      	ldrb	r3, [r0, r3]
 801d3a2:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d3a6:	431a      	orrs	r2, r3
 801d3a8:	b293      	uxth	r3, r2
 801d3aa:	930c      	str	r3, [sp, #48]	; 0x30
 801d3ac:	2300      	movs	r3, #0
 801d3ae:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d3b2:	9308      	str	r3, [sp, #32]
 801d3b4:	461a      	mov	r2, r3
 801d3b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d3ba:	930e      	str	r3, [sp, #56]	; 0x38
 801d3bc:	f04f 0801 	mov.w	r8, #1
 801d3c0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d3c4:	f8cd 8008 	str.w	r8, [sp, #8]
 801d3c8:	46c4      	mov	ip, r8
 801d3ca:	930f      	str	r3, [sp, #60]	; 0x3c
 801d3cc:	2d00      	cmp	r5, #0
 801d3ce:	d07c      	beq.n	801d4ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d3d0:	45ac      	cmp	ip, r5
 801d3d2:	d26c      	bcs.n	801d4ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d3d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3d6:	eba5 050c 	sub.w	r5, r5, ip
 801d3da:	455b      	cmp	r3, fp
 801d3dc:	b2ad      	uxth	r5, r5
 801d3de:	4608      	mov	r0, r1
 801d3e0:	d802      	bhi.n	801d3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d3e2:	e070      	b.n	801d4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d3e4:	2b00      	cmp	r3, #0
 801d3e6:	d15c      	bne.n	801d4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d3e8:	9b03      	ldr	r3, [sp, #12]
 801d3ea:	9a02      	ldr	r2, [sp, #8]
 801d3ec:	785b      	ldrb	r3, [r3, #1]
 801d3ee:	9902      	ldr	r1, [sp, #8]
 801d3f0:	f1c2 0207 	rsb	r2, r2, #7
 801d3f4:	4093      	lsls	r3, r2
 801d3f6:	005b      	lsls	r3, r3, #1
 801d3f8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d3fc:	9b03      	ldr	r3, [sp, #12]
 801d3fe:	781b      	ldrb	r3, [r3, #0]
 801d400:	410b      	asrs	r3, r1
 801d402:	3101      	adds	r1, #1
 801d404:	b2c9      	uxtb	r1, r1
 801d406:	2908      	cmp	r1, #8
 801d408:	9102      	str	r1, [sp, #8]
 801d40a:	9903      	ldr	r1, [sp, #12]
 801d40c:	bf0a      	itet	eq
 801d40e:	3102      	addeq	r1, #2
 801d410:	3101      	addne	r1, #1
 801d412:	9103      	streq	r1, [sp, #12]
 801d414:	b2db      	uxtb	r3, r3
 801d416:	bf0a      	itet	eq
 801d418:	2100      	moveq	r1, #0
 801d41a:	9103      	strne	r1, [sp, #12]
 801d41c:	9102      	streq	r1, [sp, #8]
 801d41e:	4313      	orrs	r3, r2
 801d420:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d422:	b29a      	uxth	r2, r3
 801d424:	4291      	cmp	r1, r2
 801d426:	d30a      	bcc.n	801d43e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d428:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d42c:	2301      	movs	r3, #1
 801d42e:	9905      	ldr	r1, [sp, #20]
 801d430:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d434:	d30f      	bcc.n	801d456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d436:	2100      	movs	r1, #0
 801d438:	4698      	mov	r8, r3
 801d43a:	9100      	str	r1, [sp, #0]
 801d43c:	e032      	b.n	801d4a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d43e:	9b05      	ldr	r3, [sp, #20]
 801d440:	429a      	cmp	r2, r3
 801d442:	d318      	bcc.n	801d476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d444:	eb04 0308 	add.w	r3, r4, r8
 801d448:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d44c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d450:	f108 0301 	add.w	r3, r8, #1
 801d454:	b29b      	uxth	r3, r3
 801d456:	9905      	ldr	r1, [sp, #20]
 801d458:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d45c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d460:	710e      	strb	r6, [r1, #4]
 801d462:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d464:	80ce      	strh	r6, [r1, #6]
 801d466:	f108 0601 	add.w	r6, r8, #1
 801d46a:	714e      	strb	r6, [r1, #5]
 801d46c:	9905      	ldr	r1, [sp, #20]
 801d46e:	3101      	adds	r1, #1
 801d470:	b289      	uxth	r1, r1
 801d472:	9105      	str	r1, [sp, #20]
 801d474:	e7df      	b.n	801d436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d476:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d47a:	4611      	mov	r1, r2
 801d47c:	795b      	ldrb	r3, [r3, #5]
 801d47e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d482:	4426      	add	r6, r4
 801d484:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d486:	4437      	add	r7, r6
 801d488:	2f00      	cmp	r7, #0
 801d48a:	dd06      	ble.n	801d49a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d48c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d490:	790f      	ldrb	r7, [r1, #4]
 801d492:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d496:	88c9      	ldrh	r1, [r1, #6]
 801d498:	e7f4      	b.n	801d484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d49a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d49e:	b29b      	uxth	r3, r3
 801d4a0:	e7c5      	b.n	801d42e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d4a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d4a4:	920c      	str	r2, [sp, #48]	; 0x30
 801d4a6:	4601      	mov	r1, r0
 801d4a8:	9a00      	ldr	r2, [sp, #0]
 801d4aa:	469c      	mov	ip, r3
 801d4ac:	e78e      	b.n	801d3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d4ae:	1957      	adds	r7, r2, r5
 801d4b0:	ebac 0305 	sub.w	r3, ip, r5
 801d4b4:	b2ba      	uxth	r2, r7
 801d4b6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d4ba:	9200      	str	r2, [sp, #0]
 801d4bc:	b29b      	uxth	r3, r3
 801d4be:	2500      	movs	r5, #0
 801d4c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d4c2:	455a      	cmp	r2, fp
 801d4c4:	d88e      	bhi.n	801d3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d4c6:	4601      	mov	r1, r0
 801d4c8:	e749      	b.n	801d35e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d4ca:	458c      	cmp	ip, r1
 801d4cc:	bf2c      	ite	cs
 801d4ce:	4628      	movcs	r0, r5
 801d4d0:	462b      	movcc	r3, r5
 801d4d2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d4d4:	bf27      	ittee	cs
 801d4d6:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d4d8:	ebac 0301 	subcs.w	r3, ip, r1
 801d4dc:	eba1 000c 	subcc.w	r0, r1, ip
 801d4e0:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d4e4:	bf2c      	ite	cs
 801d4e6:	b29b      	uxthcs	r3, r3
 801d4e8:	b280      	uxthcc	r0, r0
 801d4ea:	2dff      	cmp	r5, #255	; 0xff
 801d4ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d4ee:	eb02 0705 	add.w	r7, r2, r5
 801d4f2:	b2bd      	uxth	r5, r7
 801d4f4:	9500      	str	r5, [sp, #0]
 801d4f6:	d12f      	bne.n	801d558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d4f8:	465e      	mov	r6, fp
 801d4fa:	9d00      	ldr	r5, [sp, #0]
 801d4fc:	42aa      	cmp	r2, r5
 801d4fe:	f040 8084 	bne.w	801d60a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d502:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d504:	458c      	cmp	ip, r1
 801d506:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d50a:	d3d8      	bcc.n	801d4be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d50c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d50e:	9904      	ldr	r1, [sp, #16]
 801d510:	8812      	ldrh	r2, [r2, #0]
 801d512:	1a52      	subs	r2, r2, r1
 801d514:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d518:	9a08      	ldr	r2, [sp, #32]
 801d51a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d51c:	3201      	adds	r2, #1
 801d51e:	428a      	cmp	r2, r1
 801d520:	9208      	str	r2, [sp, #32]
 801d522:	f040 8092 	bne.w	801d64a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d526:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d52a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d52e:	9b04      	ldr	r3, [sp, #16]
 801d530:	eba5 050c 	sub.w	r5, r5, ip
 801d534:	b2ad      	uxth	r5, r5
 801d536:	2d00      	cmp	r5, #0
 801d538:	bf08      	it	eq
 801d53a:	4619      	moveq	r1, r3
 801d53c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d53e:	bf18      	it	ne
 801d540:	2100      	movne	r1, #0
 801d542:	3301      	adds	r3, #1
 801d544:	930d      	str	r3, [sp, #52]	; 0x34
 801d546:	b289      	uxth	r1, r1
 801d548:	e700      	b.n	801d34c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d54a:	bf00      	nop
 801d54c:	20012db4 	.word	0x20012db4
 801d550:	20012dae 	.word	0x20012dae
 801d554:	fffff7fb 	.word	0xfffff7fb
 801d558:	46d9      	mov	r9, fp
 801d55a:	9d00      	ldr	r5, [sp, #0]
 801d55c:	42aa      	cmp	r2, r5
 801d55e:	d0d0      	beq.n	801d502 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d560:	1c55      	adds	r5, r2, #1
 801d562:	4422      	add	r2, r4
 801d564:	9517      	str	r5, [sp, #92]	; 0x5c
 801d566:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d56a:	9a06      	ldr	r2, [sp, #24]
 801d56c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d570:	4472      	add	r2, lr
 801d572:	9212      	str	r2, [sp, #72]	; 0x48
 801d574:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d576:	f8b9 2000 	ldrh.w	r2, [r9]
 801d57a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d57e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d580:	1216      	asrs	r6, r2, #8
 801d582:	fb1a fa07 	smulbb	sl, sl, r7
 801d586:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d58a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d58c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d590:	fb06 a607 	mla	r6, r6, r7, sl
 801d594:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d596:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d59a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d59c:	10d5      	asrs	r5, r2, #3
 801d59e:	fb1a fa07 	smulbb	sl, sl, r7
 801d5a2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d5a6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d5a8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d5ac:	fb05 a507 	mla	r5, r5, r7, sl
 801d5b0:	9f06      	ldr	r7, [sp, #24]
 801d5b2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d5b6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d5b8:	00d2      	lsls	r2, r2, #3
 801d5ba:	fb1e fe07 	smulbb	lr, lr, r7
 801d5be:	b2d2      	uxtb	r2, r2
 801d5c0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d5c2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d5c6:	b2b6      	uxth	r6, r6
 801d5c8:	fb02 e207 	mla	r2, r2, r7, lr
 801d5cc:	b292      	uxth	r2, r2
 801d5ce:	b2ad      	uxth	r5, r5
 801d5d0:	f106 0a01 	add.w	sl, r6, #1
 801d5d4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d5d8:	f102 0e01 	add.w	lr, r2, #1
 801d5dc:	f105 0a01 	add.w	sl, r5, #1
 801d5e0:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d5e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d5e8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d5ec:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d5f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d5f4:	ea4e 0606 	orr.w	r6, lr, r6
 801d5f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d5fc:	ea46 060a 	orr.w	r6, r6, sl
 801d600:	f829 6b02 	strh.w	r6, [r9], #2
 801d604:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d608:	e7a7      	b.n	801d55a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d60a:	f102 0e01 	add.w	lr, r2, #1
 801d60e:	4422      	add	r2, r4
 801d610:	9f06      	ldr	r7, [sp, #24]
 801d612:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d616:	9a06      	ldr	r2, [sp, #24]
 801d618:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d61c:	eb02 0a05 	add.w	sl, r2, r5
 801d620:	4a13      	ldr	r2, [pc, #76]	; (801d670 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d622:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d626:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d62a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d62e:	00d2      	lsls	r2, r2, #3
 801d630:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d634:	ea49 0202 	orr.w	r2, r9, r2
 801d638:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d63c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d640:	f826 2b02 	strh.w	r2, [r6], #2
 801d644:	fa1f f28e 	uxth.w	r2, lr
 801d648:	e757      	b.n	801d4fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d64a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d64e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d652:	1a2d      	subs	r5, r5, r0
 801d654:	b2ad      	uxth	r5, r5
 801d656:	2d00      	cmp	r5, #0
 801d658:	bf18      	it	ne
 801d65a:	2000      	movne	r0, #0
 801d65c:	e730      	b.n	801d4c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d65e:	4b05      	ldr	r3, [pc, #20]	; (801d674 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d660:	6818      	ldr	r0, [r3, #0]
 801d662:	6803      	ldr	r3, [r0, #0]
 801d664:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d666:	4798      	blx	r3
 801d668:	b01f      	add	sp, #124	; 0x7c
 801d66a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d66e:	bf00      	nop
 801d670:	fffff800 	.word	0xfffff800
 801d674:	20012db4 	.word	0x20012db4

0801d678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d67c:	b091      	sub	sp, #68	; 0x44
 801d67e:	469b      	mov	fp, r3
 801d680:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d684:	4616      	mov	r6, r2
 801d686:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d68a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d68e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d692:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d696:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d69a:	4604      	mov	r4, r0
 801d69c:	460d      	mov	r5, r1
 801d69e:	4640      	mov	r0, r8
 801d6a0:	4659      	mov	r1, fp
 801d6a2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d6a6:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d6aa:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d6ae:	f7f3 fa1d 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 801d6b2:	4631      	mov	r1, r6
 801d6b4:	4640      	mov	r0, r8
 801d6b6:	f7f3 fa19 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 801d6ba:	4b74      	ldr	r3, [pc, #464]	; (801d88c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d6bc:	8818      	ldrh	r0, [r3, #0]
 801d6be:	4b74      	ldr	r3, [pc, #464]	; (801d890 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d6c0:	8819      	ldrh	r1, [r3, #0]
 801d6c2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d6c6:	2b00      	cmp	r3, #0
 801d6c8:	b202      	sxth	r2, r0
 801d6ca:	b20e      	sxth	r6, r1
 801d6cc:	da07      	bge.n	801d6de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d6ce:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d6d2:	4463      	add	r3, ip
 801d6d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d6d8:	2300      	movs	r3, #0
 801d6da:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d6de:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d6e2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d6e6:	1ad2      	subs	r2, r2, r3
 801d6e8:	4594      	cmp	ip, r2
 801d6ea:	bfc4      	itt	gt
 801d6ec:	1ac2      	subgt	r2, r0, r3
 801d6ee:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d6f2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d6f6:	2a00      	cmp	r2, #0
 801d6f8:	da07      	bge.n	801d70a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d6fa:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d6fe:	4462      	add	r2, ip
 801d700:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d704:	2200      	movs	r2, #0
 801d706:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d70a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d70e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d712:	eba6 060a 	sub.w	r6, r6, sl
 801d716:	42b2      	cmp	r2, r6
 801d718:	bfc4      	itt	gt
 801d71a:	eba1 020a 	subgt.w	r2, r1, sl
 801d71e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d722:	4a5c      	ldr	r2, [pc, #368]	; (801d894 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d724:	7812      	ldrb	r2, [r2, #0]
 801d726:	b9a2      	cbnz	r2, 801d752 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d728:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d72c:	4286      	cmp	r6, r0
 801d72e:	4640      	mov	r0, r8
 801d730:	9303      	str	r3, [sp, #12]
 801d732:	bf14      	ite	ne
 801d734:	2600      	movne	r6, #0
 801d736:	2601      	moveq	r6, #1
 801d738:	f7f3 fa1b 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d73c:	9b03      	ldr	r3, [sp, #12]
 801d73e:	b160      	cbz	r0, 801d75a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d740:	2300      	movs	r3, #0
 801d742:	8023      	strh	r3, [r4, #0]
 801d744:	8063      	strh	r3, [r4, #2]
 801d746:	80a3      	strh	r3, [r4, #4]
 801d748:	4620      	mov	r0, r4
 801d74a:	80e3      	strh	r3, [r4, #6]
 801d74c:	b011      	add	sp, #68	; 0x44
 801d74e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d752:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d756:	428e      	cmp	r6, r1
 801d758:	e7e9      	b.n	801d72e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d75a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d75e:	9205      	str	r2, [sp, #20]
 801d760:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d764:	9206      	str	r2, [sp, #24]
 801d766:	f8bb 2000 	ldrh.w	r2, [fp]
 801d76a:	900e      	str	r0, [sp, #56]	; 0x38
 801d76c:	1a9b      	subs	r3, r3, r2
 801d76e:	b21b      	sxth	r3, r3
 801d770:	9303      	str	r3, [sp, #12]
 801d772:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d776:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d77a:	ebaa 0a03 	sub.w	sl, sl, r3
 801d77e:	fa0f f38a 	sxth.w	r3, sl
 801d782:	9304      	str	r3, [sp, #16]
 801d784:	9b03      	ldr	r3, [sp, #12]
 801d786:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d78a:	9b04      	ldr	r3, [sp, #16]
 801d78c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d790:	9b05      	ldr	r3, [sp, #20]
 801d792:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d796:	a90e      	add	r1, sp, #56	; 0x38
 801d798:	9b06      	ldr	r3, [sp, #24]
 801d79a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d79e:	a80c      	add	r0, sp, #48	; 0x30
 801d7a0:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d7a4:	f7f8 f944 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7a8:	4640      	mov	r0, r8
 801d7aa:	f7f8 f8fd 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7ae:	a80e      	add	r0, sp, #56	; 0x38
 801d7b0:	f7f8 f8fa 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7b4:	4b38      	ldr	r3, [pc, #224]	; (801d898 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d7b6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d7ba:	881b      	ldrh	r3, [r3, #0]
 801d7bc:	9307      	str	r3, [sp, #28]
 801d7be:	682b      	ldr	r3, [r5, #0]
 801d7c0:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d89c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d7c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d7c6:	4628      	mov	r0, r5
 801d7c8:	4798      	blx	r3
 801d7ca:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d7ce:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d7d2:	4681      	mov	r9, r0
 801d7d4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d7d8:	f8db 0000 	ldr.w	r0, [fp]
 801d7dc:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d7de:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d7e2:	6803      	ldr	r3, [r0, #0]
 801d7e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d7e6:	4798      	blx	r3
 801d7e8:	4607      	mov	r7, r0
 801d7ea:	f8db 0000 	ldr.w	r0, [fp]
 801d7ee:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d7f2:	6803      	ldr	r3, [r0, #0]
 801d7f4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d7f8:	9109      	str	r1, [sp, #36]	; 0x24
 801d7fa:	9208      	str	r2, [sp, #32]
 801d7fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d7fe:	4798      	blx	r3
 801d800:	f010 0f01 	tst.w	r0, #1
 801d804:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d808:	d012      	beq.n	801d830 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d80a:	f8db 0000 	ldr.w	r0, [fp]
 801d80e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d812:	6803      	ldr	r3, [r0, #0]
 801d814:	9200      	str	r2, [sp, #0]
 801d816:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d818:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d81c:	462b      	mov	r3, r5
 801d81e:	47b0      	blx	r6
 801d820:	9b03      	ldr	r3, [sp, #12]
 801d822:	8023      	strh	r3, [r4, #0]
 801d824:	9b04      	ldr	r3, [sp, #16]
 801d826:	8063      	strh	r3, [r4, #2]
 801d828:	9b05      	ldr	r3, [sp, #20]
 801d82a:	80a3      	strh	r3, [r4, #4]
 801d82c:	9b06      	ldr	r3, [sp, #24]
 801d82e:	e78b      	b.n	801d748 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d830:	fb09 f202 	mul.w	r2, r9, r2
 801d834:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d838:	440f      	add	r7, r1
 801d83a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d83e:	b166      	cbz	r6, 801d85a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d840:	9a07      	ldr	r2, [sp, #28]
 801d842:	4592      	cmp	sl, r2
 801d844:	d109      	bne.n	801d85a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d846:	f8db 0000 	ldr.w	r0, [fp]
 801d84a:	6802      	ldr	r2, [r0, #0]
 801d84c:	fb09 f303 	mul.w	r3, r9, r3
 801d850:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d852:	4629      	mov	r1, r5
 801d854:	463a      	mov	r2, r7
 801d856:	47b0      	blx	r6
 801d858:	e7e2      	b.n	801d820 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d85a:	fb0a f303 	mul.w	r3, sl, r3
 801d85e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d89c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d862:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d866:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d86a:	4545      	cmp	r5, r8
 801d86c:	d2d8      	bcs.n	801d820 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d86e:	f8db 0000 	ldr.w	r0, [fp]
 801d872:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d876:	6802      	ldr	r2, [r0, #0]
 801d878:	4629      	mov	r1, r5
 801d87a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d87e:	005b      	lsls	r3, r3, #1
 801d880:	463a      	mov	r2, r7
 801d882:	47d0      	blx	sl
 801d884:	444f      	add	r7, r9
 801d886:	4435      	add	r5, r6
 801d888:	e7ef      	b.n	801d86a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d88a:	bf00      	nop
 801d88c:	20012da8 	.word	0x20012da8
 801d890:	20012daa 	.word	0x20012daa
 801d894:	20012dac 	.word	0x20012dac
 801d898:	20012dae 	.word	0x20012dae
 801d89c:	20012db4 	.word	0x20012db4

0801d8a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d8a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d8a2:	4606      	mov	r6, r0
 801d8a4:	b087      	sub	sp, #28
 801d8a6:	460c      	mov	r4, r1
 801d8a8:	4617      	mov	r7, r2
 801d8aa:	461d      	mov	r5, r3
 801d8ac:	b333      	cbz	r3, 801d8fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d8ae:	4608      	mov	r0, r1
 801d8b0:	f7f3 f95f 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d8b4:	bb10      	cbnz	r0, 801d8fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d8b6:	6820      	ldr	r0, [r4, #0]
 801d8b8:	6861      	ldr	r1, [r4, #4]
 801d8ba:	4c1c      	ldr	r4, [pc, #112]	; (801d92c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d8bc:	ab04      	add	r3, sp, #16
 801d8be:	c303      	stmia	r3!, {r0, r1}
 801d8c0:	a804      	add	r0, sp, #16
 801d8c2:	f7f8 f871 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d8c6:	6820      	ldr	r0, [r4, #0]
 801d8c8:	6803      	ldr	r3, [r0, #0]
 801d8ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d8cc:	4798      	blx	r3
 801d8ce:	2dff      	cmp	r5, #255	; 0xff
 801d8d0:	d016      	beq.n	801d900 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d8d2:	f010 0f08 	tst.w	r0, #8
 801d8d6:	6820      	ldr	r0, [r4, #0]
 801d8d8:	d015      	beq.n	801d906 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d8da:	2400      	movs	r4, #0
 801d8dc:	6801      	ldr	r1, [r0, #0]
 801d8de:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d8e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d8e6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d8ea:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d8ee:	9401      	str	r4, [sp, #4]
 801d8f0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d8f4:	9400      	str	r4, [sp, #0]
 801d8f6:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d8f8:	4639      	mov	r1, r7
 801d8fa:	47a0      	blx	r4
 801d8fc:	b007      	add	sp, #28
 801d8fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d900:	f010 0f02 	tst.w	r0, #2
 801d904:	e7e7      	b.n	801d8d6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d906:	6803      	ldr	r3, [r0, #0]
 801d908:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d90a:	4798      	blx	r3
 801d90c:	4b08      	ldr	r3, [pc, #32]	; (801d930 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d90e:	881a      	ldrh	r2, [r3, #0]
 801d910:	6833      	ldr	r3, [r6, #0]
 801d912:	e9cd 7500 	strd	r7, r5, [sp]
 801d916:	4601      	mov	r1, r0
 801d918:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d91a:	4630      	mov	r0, r6
 801d91c:	ab04      	add	r3, sp, #16
 801d91e:	47a8      	blx	r5
 801d920:	6820      	ldr	r0, [r4, #0]
 801d922:	6803      	ldr	r3, [r0, #0]
 801d924:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d926:	4798      	blx	r3
 801d928:	e7e8      	b.n	801d8fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d92a:	bf00      	nop
 801d92c:	20012db4 	.word	0x20012db4
 801d930:	20012dae 	.word	0x20012dae

0801d934 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d934:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d938:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d93c:	9e08      	ldr	r6, [sp, #32]
 801d93e:	4688      	mov	r8, r1
 801d940:	4614      	mov	r4, r2
 801d942:	461d      	mov	r5, r3
 801d944:	2f00      	cmp	r7, #0
 801d946:	f000 80a9 	beq.w	801da9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d94a:	4618      	mov	r0, r3
 801d94c:	f7f3 f911 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d950:	2800      	cmp	r0, #0
 801d952:	f040 80a3 	bne.w	801da9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d956:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d95a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d95e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d962:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d966:	fb04 1303 	mla	r3, r4, r3, r1
 801d96a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d96e:	4365      	muls	r5, r4
 801d970:	2fff      	cmp	r7, #255	; 0xff
 801d972:	eba4 0200 	sub.w	r2, r4, r0
 801d976:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d97a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d97e:	d04a      	beq.n	801da16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d980:	b2bc      	uxth	r4, r7
 801d982:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d986:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d98a:	fa5f f788 	uxtb.w	r7, r8
 801d98e:	b2f3      	uxtb	r3, r6
 801d990:	0040      	lsls	r0, r0, #1
 801d992:	fb0e fe04 	mul.w	lr, lr, r4
 801d996:	4367      	muls	r7, r4
 801d998:	4363      	muls	r3, r4
 801d99a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d99e:	fa1f fc8c 	uxth.w	ip, ip
 801d9a2:	42a9      	cmp	r1, r5
 801d9a4:	d27a      	bcs.n	801da9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d9a6:	eb01 0900 	add.w	r9, r1, r0
 801d9aa:	4549      	cmp	r1, r9
 801d9ac:	d231      	bcs.n	801da12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d9ae:	880a      	ldrh	r2, [r1, #0]
 801d9b0:	1214      	asrs	r4, r2, #8
 801d9b2:	10d6      	asrs	r6, r2, #3
 801d9b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d9b8:	00d2      	lsls	r2, r2, #3
 801d9ba:	b2d2      	uxtb	r2, r2
 801d9bc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d9c0:	fb14 f40c 	smulbb	r4, r4, ip
 801d9c4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d9c8:	4474      	add	r4, lr
 801d9ca:	fb12 f20c 	smulbb	r2, r2, ip
 801d9ce:	b2a4      	uxth	r4, r4
 801d9d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d9d4:	441a      	add	r2, r3
 801d9d6:	b292      	uxth	r2, r2
 801d9d8:	f104 0a01 	add.w	sl, r4, #1
 801d9dc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d9e0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d9e4:	fb16 f60c 	smulbb	r6, r6, ip
 801d9e8:	f102 0a01 	add.w	sl, r2, #1
 801d9ec:	443e      	add	r6, r7
 801d9ee:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d9f2:	b2b6      	uxth	r6, r6
 801d9f4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d9f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d9fc:	4322      	orrs	r2, r4
 801d9fe:	1c74      	adds	r4, r6, #1
 801da00:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801da04:	0976      	lsrs	r6, r6, #5
 801da06:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801da0a:	4332      	orrs	r2, r6
 801da0c:	f821 2b02 	strh.w	r2, [r1], #2
 801da10:	e7cb      	b.n	801d9aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801da12:	4441      	add	r1, r8
 801da14:	e7c5      	b.n	801d9a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801da16:	4f22      	ldr	r7, [pc, #136]	; (801daa0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801da18:	0973      	lsrs	r3, r6, #5
 801da1a:	ea08 0707 	and.w	r7, r8, r7
 801da1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801da22:	433b      	orrs	r3, r7
 801da24:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801da28:	4333      	orrs	r3, r6
 801da2a:	07e7      	lsls	r7, r4, #31
 801da2c:	b29b      	uxth	r3, r3
 801da2e:	d50b      	bpl.n	801da48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801da30:	0040      	lsls	r0, r0, #1
 801da32:	0052      	lsls	r2, r2, #1
 801da34:	42a9      	cmp	r1, r5
 801da36:	d231      	bcs.n	801da9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da38:	180c      	adds	r4, r1, r0
 801da3a:	42a1      	cmp	r1, r4
 801da3c:	d202      	bcs.n	801da44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801da3e:	f821 3b02 	strh.w	r3, [r1], #2
 801da42:	e7fa      	b.n	801da3a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801da44:	4411      	add	r1, r2
 801da46:	e7f5      	b.n	801da34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801da48:	078e      	lsls	r6, r1, #30
 801da4a:	d008      	beq.n	801da5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801da4c:	0066      	lsls	r6, r4, #1
 801da4e:	460a      	mov	r2, r1
 801da50:	42aa      	cmp	r2, r5
 801da52:	d202      	bcs.n	801da5a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801da54:	8013      	strh	r3, [r2, #0]
 801da56:	4432      	add	r2, r6
 801da58:	e7fa      	b.n	801da50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801da5a:	3102      	adds	r1, #2
 801da5c:	3801      	subs	r0, #1
 801da5e:	07c2      	lsls	r2, r0, #31
 801da60:	d50b      	bpl.n	801da7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801da62:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801da66:	3a01      	subs	r2, #1
 801da68:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801da6c:	0066      	lsls	r6, r4, #1
 801da6e:	42aa      	cmp	r2, r5
 801da70:	d202      	bcs.n	801da78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801da72:	8013      	strh	r3, [r2, #0]
 801da74:	4432      	add	r2, r6
 801da76:	e7fa      	b.n	801da6e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801da78:	3801      	subs	r0, #1
 801da7a:	b178      	cbz	r0, 801da9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da7c:	1040      	asrs	r0, r0, #1
 801da7e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801da82:	0080      	lsls	r0, r0, #2
 801da84:	0064      	lsls	r4, r4, #1
 801da86:	42a9      	cmp	r1, r5
 801da88:	d208      	bcs.n	801da9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801da8a:	180e      	adds	r6, r1, r0
 801da8c:	460a      	mov	r2, r1
 801da8e:	42b2      	cmp	r2, r6
 801da90:	d202      	bcs.n	801da98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801da92:	f842 3b04 	str.w	r3, [r2], #4
 801da96:	e7fa      	b.n	801da8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801da98:	4421      	add	r1, r4
 801da9a:	e7f4      	b.n	801da86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801da9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801daa0:	00fff800 	.word	0x00fff800

0801daa4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801daa4:	2200      	movs	r2, #0
 801daa6:	4912      	ldr	r1, [pc, #72]	; (801daf0 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801daa8:	6042      	str	r2, [r0, #4]
 801daaa:	6001      	str	r1, [r0, #0]
 801daac:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801dab0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801dab4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801dab8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801dabc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801dac0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801dac4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801dac8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801dacc:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801dad0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801dad4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801dad8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801dadc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801dae0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801dae4:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801dae8:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801daec:	4770      	bx	lr
 801daee:	bf00      	nop
 801daf0:	0802f7e8 	.word	0x0802f7e8

0801daf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801daf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daf8:	460d      	mov	r5, r1
 801dafa:	b08d      	sub	sp, #52	; 0x34
 801dafc:	4604      	mov	r4, r0
 801dafe:	6808      	ldr	r0, [r1, #0]
 801db00:	6849      	ldr	r1, [r1, #4]
 801db02:	4699      	mov	r9, r3
 801db04:	ab08      	add	r3, sp, #32
 801db06:	c303      	stmia	r3!, {r0, r1}
 801db08:	6810      	ldr	r0, [r2, #0]
 801db0a:	6851      	ldr	r1, [r2, #4]
 801db0c:	ab0a      	add	r3, sp, #40	; 0x28
 801db0e:	c303      	stmia	r3!, {r0, r1}
 801db10:	a808      	add	r0, sp, #32
 801db12:	f7f7 ff49 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801db16:	4629      	mov	r1, r5
 801db18:	a80a      	add	r0, sp, #40	; 0x28
 801db1a:	f7f7 ff89 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801db1e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801db22:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801db26:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801db2a:	4d63      	ldr	r5, [pc, #396]	; (801dcb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801db2c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801db30:	6828      	ldr	r0, [r5, #0]
 801db32:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801db36:	fb11 2103 	smlabb	r1, r1, r3, r2
 801db3a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801db3e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801db42:	440a      	add	r2, r1
 801db44:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801db48:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801db4c:	4413      	add	r3, r2
 801db4e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801db52:	6803      	ldr	r3, [r0, #0]
 801db54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801db56:	4798      	blx	r3
 801db58:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801db5c:	d119      	bne.n	801db92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801db5e:	f010 0f20 	tst.w	r0, #32
 801db62:	6828      	ldr	r0, [r5, #0]
 801db64:	d018      	beq.n	801db98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801db66:	2500      	movs	r5, #0
 801db68:	6801      	ldr	r1, [r0, #0]
 801db6a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801db6e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801db72:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801db76:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801db7a:	9502      	str	r5, [sp, #8]
 801db7c:	b2b6      	uxth	r6, r6
 801db7e:	fa1f f588 	uxth.w	r5, r8
 801db82:	9601      	str	r6, [sp, #4]
 801db84:	9500      	str	r5, [sp, #0]
 801db86:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801db88:	4621      	mov	r1, r4
 801db8a:	47a8      	blx	r5
 801db8c:	b00d      	add	sp, #52	; 0x34
 801db8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db92:	f010 0f40 	tst.w	r0, #64	; 0x40
 801db96:	e7e4      	b.n	801db62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801db98:	6803      	ldr	r3, [r0, #0]
 801db9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db9c:	4798      	blx	r3
 801db9e:	4947      	ldr	r1, [pc, #284]	; (801dcbc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801dba0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dba4:	880b      	ldrh	r3, [r1, #0]
 801dba6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801dbaa:	fb03 5202 	mla	r2, r3, r2, r5
 801dbae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dbb2:	4373      	muls	r3, r6
 801dbb4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dbb8:	9307      	str	r3, [sp, #28]
 801dbba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dbbe:	9306      	str	r3, [sp, #24]
 801dbc0:	468a      	mov	sl, r1
 801dbc2:	9b07      	ldr	r3, [sp, #28]
 801dbc4:	4298      	cmp	r0, r3
 801dbc6:	d270      	bcs.n	801dcaa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801dbc8:	9b06      	ldr	r3, [sp, #24]
 801dbca:	4621      	mov	r1, r4
 801dbcc:	eb00 0b03 	add.w	fp, r0, r3
 801dbd0:	4558      	cmp	r0, fp
 801dbd2:	d25d      	bcs.n	801dc90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801dbd4:	f851 4b04 	ldr.w	r4, [r1], #4
 801dbd8:	0e23      	lsrs	r3, r4, #24
 801dbda:	d014      	beq.n	801dc06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dbdc:	2bff      	cmp	r3, #255	; 0xff
 801dbde:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801dbe2:	d112      	bne.n	801dc0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dbe4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dbe8:	d10f      	bne.n	801dc0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dbea:	0963      	lsrs	r3, r4, #5
 801dbec:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801dbf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dbf4:	f02c 0c07 	bic.w	ip, ip, #7
 801dbf8:	ea43 0c0c 	orr.w	ip, r3, ip
 801dbfc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dc00:	ea4c 0404 	orr.w	r4, ip, r4
 801dc04:	8004      	strh	r4, [r0, #0]
 801dc06:	3002      	adds	r0, #2
 801dc08:	e7e2      	b.n	801dbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801dc0a:	fb09 f303 	mul.w	r3, r9, r3
 801dc0e:	8807      	ldrh	r7, [r0, #0]
 801dc10:	1c5a      	adds	r2, r3, #1
 801dc12:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801dc16:	1212      	asrs	r2, r2, #8
 801dc18:	123e      	asrs	r6, r7, #8
 801dc1a:	b293      	uxth	r3, r2
 801dc1c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801dc20:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dc24:	43d2      	mvns	r2, r2
 801dc26:	b2d2      	uxtb	r2, r2
 801dc28:	10fd      	asrs	r5, r7, #3
 801dc2a:	fb1e fe03 	smulbb	lr, lr, r3
 801dc2e:	00ff      	lsls	r7, r7, #3
 801dc30:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dc34:	fb06 e602 	mla	r6, r6, r2, lr
 801dc38:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dc3c:	b2ff      	uxtb	r7, r7
 801dc3e:	fa5f fc8c 	uxtb.w	ip, ip
 801dc42:	b2e4      	uxtb	r4, r4
 801dc44:	b2b6      	uxth	r6, r6
 801dc46:	fb1c fc03 	smulbb	ip, ip, r3
 801dc4a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dc4e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dc52:	fb14 f403 	smulbb	r4, r4, r3
 801dc56:	fb05 c502 	mla	r5, r5, r2, ip
 801dc5a:	f106 0e01 	add.w	lr, r6, #1
 801dc5e:	fb07 4702 	mla	r7, r7, r2, r4
 801dc62:	b2ad      	uxth	r5, r5
 801dc64:	b2bf      	uxth	r7, r7
 801dc66:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801dc6a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801dc6e:	f105 0c01 	add.w	ip, r5, #1
 801dc72:	1c7e      	adds	r6, r7, #1
 801dc74:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801dc78:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dc7c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801dc80:	096d      	lsrs	r5, r5, #5
 801dc82:	ea46 060e 	orr.w	r6, r6, lr
 801dc86:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dc8a:	432e      	orrs	r6, r5
 801dc8c:	8006      	strh	r6, [r0, #0]
 801dc8e:	e7ba      	b.n	801dc06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dc90:	f8ba 3000 	ldrh.w	r3, [sl]
 801dc94:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801dc98:	eba3 0308 	sub.w	r3, r3, r8
 801dc9c:	eba4 0408 	sub.w	r4, r4, r8
 801dca0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dca4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801dca8:	e78b      	b.n	801dbc2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801dcaa:	4b03      	ldr	r3, [pc, #12]	; (801dcb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dcac:	6818      	ldr	r0, [r3, #0]
 801dcae:	6803      	ldr	r3, [r0, #0]
 801dcb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dcb2:	4798      	blx	r3
 801dcb4:	e76a      	b.n	801db8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801dcb6:	bf00      	nop
 801dcb8:	20012db4 	.word	0x20012db4
 801dcbc:	20012dae 	.word	0x20012dae

0801dcc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dcc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dcc4:	460c      	mov	r4, r1
 801dcc6:	b085      	sub	sp, #20
 801dcc8:	6810      	ldr	r0, [r2, #0]
 801dcca:	6851      	ldr	r1, [r2, #4]
 801dccc:	466d      	mov	r5, sp
 801dcce:	c503      	stmia	r5!, {r0, r1}
 801dcd0:	6818      	ldr	r0, [r3, #0]
 801dcd2:	6859      	ldr	r1, [r3, #4]
 801dcd4:	4616      	mov	r6, r2
 801dcd6:	c503      	stmia	r5!, {r0, r1}
 801dcd8:	4668      	mov	r0, sp
 801dcda:	f7f7 fe65 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcde:	4631      	mov	r1, r6
 801dce0:	a802      	add	r0, sp, #8
 801dce2:	f7f7 fea5 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dce6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dcea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dcee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dcf2:	4d28      	ldr	r5, [pc, #160]	; (801dd94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801dcf4:	4e28      	ldr	r6, [pc, #160]	; (801dd98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801dcf6:	6828      	ldr	r0, [r5, #0]
 801dcf8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801dcfc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801dd00:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dd04:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dd08:	f8bd 1000 	ldrh.w	r1, [sp]
 801dd0c:	440a      	add	r2, r1
 801dd0e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801dd12:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801dd16:	4413      	add	r3, r2
 801dd18:	f8ad 300a 	strh.w	r3, [sp, #10]
 801dd1c:	6803      	ldr	r3, [r0, #0]
 801dd1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dd20:	4798      	blx	r3
 801dd22:	8833      	ldrh	r3, [r6, #0]
 801dd24:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801dd28:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801dd2c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801dd9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801dd30:	fb03 1202 	mla	r2, r3, r2, r1
 801dd34:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dd38:	fb08 f303 	mul.w	r3, r8, r3
 801dd3c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dd40:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dd44:	4298      	cmp	r0, r3
 801dd46:	d21d      	bcs.n	801dd84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801dd48:	eb00 080c 	add.w	r8, r0, ip
 801dd4c:	4540      	cmp	r0, r8
 801dd4e:	d20f      	bcs.n	801dd70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801dd50:	f854 1b04 	ldr.w	r1, [r4], #4
 801dd54:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dd58:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801dd5c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dd60:	ea42 0209 	orr.w	r2, r2, r9
 801dd64:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dd68:	430a      	orrs	r2, r1
 801dd6a:	f820 2b02 	strh.w	r2, [r0], #2
 801dd6e:	e7ed      	b.n	801dd4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801dd70:	8832      	ldrh	r2, [r6, #0]
 801dd72:	1bd2      	subs	r2, r2, r7
 801dd74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dd78:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801dd7c:	1bd2      	subs	r2, r2, r7
 801dd7e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801dd82:	e7df      	b.n	801dd44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801dd84:	6828      	ldr	r0, [r5, #0]
 801dd86:	6803      	ldr	r3, [r0, #0]
 801dd88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd8a:	4798      	blx	r3
 801dd8c:	b005      	add	sp, #20
 801dd8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dd92:	bf00      	nop
 801dd94:	20012db4 	.word	0x20012db4
 801dd98:	20012dae 	.word	0x20012dae
 801dd9c:	fffff800 	.word	0xfffff800

0801dda0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801dda0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dda4:	460e      	mov	r6, r1
 801dda6:	b08e      	sub	sp, #56	; 0x38
 801dda8:	4604      	mov	r4, r0
 801ddaa:	6808      	ldr	r0, [r1, #0]
 801ddac:	6849      	ldr	r1, [r1, #4]
 801ddae:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801df88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ddb2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801df8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ddb6:	461d      	mov	r5, r3
 801ddb8:	ab0a      	add	r3, sp, #40	; 0x28
 801ddba:	c303      	stmia	r3!, {r0, r1}
 801ddbc:	6810      	ldr	r0, [r2, #0]
 801ddbe:	6851      	ldr	r1, [r2, #4]
 801ddc0:	ab0c      	add	r3, sp, #48	; 0x30
 801ddc2:	c303      	stmia	r3!, {r0, r1}
 801ddc4:	a80a      	add	r0, sp, #40	; 0x28
 801ddc6:	f7f7 fdef 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddca:	4631      	mov	r1, r6
 801ddcc:	a80c      	add	r0, sp, #48	; 0x30
 801ddce:	f7f7 fe2f 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ddd2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ddd6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ddda:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ddde:	f8d8 0000 	ldr.w	r0, [r8]
 801dde2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801dde6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ddea:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ddee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ddf2:	440c      	add	r4, r1
 801ddf4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ddf8:	440a      	add	r2, r1
 801ddfa:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ddfe:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801de02:	4413      	add	r3, r2
 801de04:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801de08:	6803      	ldr	r3, [r0, #0]
 801de0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801de0c:	4798      	blx	r3
 801de0e:	2dff      	cmp	r5, #255	; 0xff
 801de10:	d124      	bne.n	801de5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801de12:	f010 0f01 	tst.w	r0, #1
 801de16:	f8d8 0000 	ldr.w	r0, [r8]
 801de1a:	d022      	beq.n	801de62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801de1c:	2100      	movs	r1, #0
 801de1e:	f8d0 c000 	ldr.w	ip, [r0]
 801de22:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801de26:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801de2a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801de2e:	f04f 0e01 	mov.w	lr, #1
 801de32:	f8cd e018 	str.w	lr, [sp, #24]
 801de36:	f8b9 e000 	ldrh.w	lr, [r9]
 801de3a:	9503      	str	r5, [sp, #12]
 801de3c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801de40:	b2b6      	uxth	r6, r6
 801de42:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801de46:	9102      	str	r1, [sp, #8]
 801de48:	b2bf      	uxth	r7, r7
 801de4a:	9601      	str	r6, [sp, #4]
 801de4c:	9700      	str	r7, [sp, #0]
 801de4e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801de52:	4621      	mov	r1, r4
 801de54:	47a8      	blx	r5
 801de56:	b00e      	add	sp, #56	; 0x38
 801de58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801de5c:	f010 0f04 	tst.w	r0, #4
 801de60:	e7d9      	b.n	801de16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801de62:	6803      	ldr	r3, [r0, #0]
 801de64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de66:	4798      	blx	r3
 801de68:	f8b9 3000 	ldrh.w	r3, [r9]
 801de6c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801de70:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801de74:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801de78:	fb03 1202 	mla	r2, r3, r2, r1
 801de7c:	ebac 0c07 	sub.w	ip, ip, r7
 801de80:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801de84:	435e      	muls	r6, r3
 801de86:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801de8a:	2dff      	cmp	r5, #255	; 0xff
 801de8c:	eba3 0707 	sub.w	r7, r3, r7
 801de90:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801de94:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801de98:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801de9c:	d049      	beq.n	801df32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801de9e:	43eb      	mvns	r3, r5
 801dea0:	fa1f f985 	uxth.w	r9, r5
 801dea4:	b2db      	uxtb	r3, r3
 801dea6:	42b0      	cmp	r0, r6
 801dea8:	d266      	bcs.n	801df78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801deaa:	eb00 0a0e 	add.w	sl, r0, lr
 801deae:	4550      	cmp	r0, sl
 801deb0:	4621      	mov	r1, r4
 801deb2:	f104 0403 	add.w	r4, r4, #3
 801deb6:	d25b      	bcs.n	801df70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801deb8:	8802      	ldrh	r2, [r0, #0]
 801deba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801debe:	ea4f 2822 	mov.w	r8, r2, asr #8
 801dec2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801dec6:	fb11 f109 	smulbb	r1, r1, r9
 801deca:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801dece:	10d5      	asrs	r5, r2, #3
 801ded0:	fb08 1803 	mla	r8, r8, r3, r1
 801ded4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ded8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dedc:	fb11 f109 	smulbb	r1, r1, r9
 801dee0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dee4:	fb05 1503 	mla	r5, r5, r3, r1
 801dee8:	00d2      	lsls	r2, r2, #3
 801deea:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801deee:	b2d2      	uxtb	r2, r2
 801def0:	fb11 f109 	smulbb	r1, r1, r9
 801def4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801def8:	fa1f f888 	uxth.w	r8, r8
 801defc:	fb02 1203 	mla	r2, r2, r3, r1
 801df00:	b292      	uxth	r2, r2
 801df02:	f108 0101 	add.w	r1, r8, #1
 801df06:	b2ad      	uxth	r5, r5
 801df08:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801df0c:	1c51      	adds	r1, r2, #1
 801df0e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801df12:	1c69      	adds	r1, r5, #1
 801df14:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801df18:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801df1c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801df20:	096d      	lsrs	r5, r5, #5
 801df22:	ea42 0208 	orr.w	r2, r2, r8
 801df26:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801df2a:	432a      	orrs	r2, r5
 801df2c:	f820 2b02 	strh.w	r2, [r0], #2
 801df30:	e7bd      	b.n	801deae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801df32:	4a14      	ldr	r2, [pc, #80]	; (801df84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801df34:	42b0      	cmp	r0, r6
 801df36:	d21f      	bcs.n	801df78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801df38:	eb00 050e 	add.w	r5, r0, lr
 801df3c:	42a8      	cmp	r0, r5
 801df3e:	4621      	mov	r1, r4
 801df40:	f104 0403 	add.w	r4, r4, #3
 801df44:	d210      	bcs.n	801df68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801df46:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801df4a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801df4e:	00db      	lsls	r3, r3, #3
 801df50:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801df54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df58:	430b      	orrs	r3, r1
 801df5a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801df5e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801df62:	f820 3b02 	strh.w	r3, [r0], #2
 801df66:	e7e9      	b.n	801df3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801df68:	4438      	add	r0, r7
 801df6a:	eb01 040c 	add.w	r4, r1, ip
 801df6e:	e7e1      	b.n	801df34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801df70:	4438      	add	r0, r7
 801df72:	eb01 040c 	add.w	r4, r1, ip
 801df76:	e796      	b.n	801dea6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801df78:	4b03      	ldr	r3, [pc, #12]	; (801df88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801df7a:	6818      	ldr	r0, [r3, #0]
 801df7c:	6803      	ldr	r3, [r0, #0]
 801df7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df80:	4798      	blx	r3
 801df82:	e768      	b.n	801de56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801df84:	fffff800 	.word	0xfffff800
 801df88:	20012db4 	.word	0x20012db4
 801df8c:	20012dae 	.word	0x20012dae

0801df90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801df90:	b4f0      	push	{r4, r5, r6, r7}
 801df92:	4616      	mov	r6, r2
 801df94:	2e01      	cmp	r6, #1
 801df96:	461c      	mov	r4, r3
 801df98:	460d      	mov	r5, r1
 801df9a:	9a04      	ldr	r2, [sp, #16]
 801df9c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801dfa0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801dfa4:	d012      	beq.n	801dfcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801dfa6:	d303      	bcc.n	801dfb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801dfa8:	2e02      	cmp	r6, #2
 801dfaa:	d00a      	beq.n	801dfc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801dfac:	bcf0      	pop	{r4, r5, r6, r7}
 801dfae:	4770      	bx	lr
 801dfb0:	6805      	ldr	r5, [r0, #0]
 801dfb2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801dfb6:	68ed      	ldr	r5, [r5, #12]
 801dfb8:	4613      	mov	r3, r2
 801dfba:	46ac      	mov	ip, r5
 801dfbc:	4622      	mov	r2, r4
 801dfbe:	bcf0      	pop	{r4, r5, r6, r7}
 801dfc0:	4760      	bx	ip
 801dfc2:	4621      	mov	r1, r4
 801dfc4:	4628      	mov	r0, r5
 801dfc6:	bcf0      	pop	{r4, r5, r6, r7}
 801dfc8:	f7ff bd94 	b.w	801daf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dfcc:	4621      	mov	r1, r4
 801dfce:	4628      	mov	r0, r5
 801dfd0:	bcf0      	pop	{r4, r5, r6, r7}
 801dfd2:	f7ff bee5 	b.w	801dda0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801dfd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801dfd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfdc:	4681      	mov	r9, r0
 801dfde:	b093      	sub	sp, #76	; 0x4c
 801dfe0:	6810      	ldr	r0, [r2, #0]
 801dfe2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801dfe6:	4f6d      	ldr	r7, [pc, #436]	; (801e19c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801dfe8:	4688      	mov	r8, r1
 801dfea:	6851      	ldr	r1, [r2, #4]
 801dfec:	ac0e      	add	r4, sp, #56	; 0x38
 801dfee:	c403      	stmia	r4!, {r0, r1}
 801dff0:	6818      	ldr	r0, [r3, #0]
 801dff2:	6859      	ldr	r1, [r3, #4]
 801dff4:	ac10      	add	r4, sp, #64	; 0x40
 801dff6:	4616      	mov	r6, r2
 801dff8:	c403      	stmia	r4!, {r0, r1}
 801dffa:	a80e      	add	r0, sp, #56	; 0x38
 801dffc:	f7f7 fcd4 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e000:	4631      	mov	r1, r6
 801e002:	a810      	add	r0, sp, #64	; 0x40
 801e004:	f7f7 fd14 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e008:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e00c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e010:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e014:	4e62      	ldr	r6, [pc, #392]	; (801e1a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e016:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e01a:	6830      	ldr	r0, [r6, #0]
 801e01c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e020:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e024:	4489      	add	r9, r1
 801e026:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e02a:	440a      	add	r2, r1
 801e02c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e030:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e034:	4413      	add	r3, r2
 801e036:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e03a:	6803      	ldr	r3, [r0, #0]
 801e03c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e03e:	4798      	blx	r3
 801e040:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e044:	6830      	ldr	r0, [r6, #0]
 801e046:	d01d      	beq.n	801e084 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e048:	2200      	movs	r2, #0
 801e04a:	6801      	ldr	r1, [r0, #0]
 801e04c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e050:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e054:	220b      	movs	r2, #11
 801e056:	9207      	str	r2, [sp, #28]
 801e058:	883a      	ldrh	r2, [r7, #0]
 801e05a:	9206      	str	r2, [sp, #24]
 801e05c:	2201      	movs	r2, #1
 801e05e:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e062:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e066:	9203      	str	r2, [sp, #12]
 801e068:	b2a4      	uxth	r4, r4
 801e06a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e06e:	9200      	str	r2, [sp, #0]
 801e070:	b2ad      	uxth	r5, r5
 801e072:	9502      	str	r5, [sp, #8]
 801e074:	9401      	str	r4, [sp, #4]
 801e076:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e078:	4642      	mov	r2, r8
 801e07a:	4649      	mov	r1, r9
 801e07c:	47a0      	blx	r4
 801e07e:	b013      	add	sp, #76	; 0x4c
 801e080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e084:	6803      	ldr	r3, [r0, #0]
 801e086:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e088:	4798      	blx	r3
 801e08a:	883b      	ldrh	r3, [r7, #0]
 801e08c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e090:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e094:	fb03 1202 	mla	r2, r3, r2, r1
 801e098:	435d      	muls	r5, r3
 801e09a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e09e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e0a2:	920c      	str	r2, [sp, #48]	; 0x30
 801e0a4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e0a8:	1b12      	subs	r2, r2, r4
 801e0aa:	920d      	str	r2, [sp, #52]	; 0x34
 801e0ac:	0062      	lsls	r2, r4, #1
 801e0ae:	1b1c      	subs	r4, r3, r4
 801e0b0:	0063      	lsls	r3, r4, #1
 801e0b2:	920a      	str	r2, [sp, #40]	; 0x28
 801e0b4:	930b      	str	r3, [sp, #44]	; 0x2c
 801e0b6:	f04f 0e04 	mov.w	lr, #4
 801e0ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e0bc:	4298      	cmp	r0, r3
 801e0be:	d266      	bcs.n	801e18e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e0c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e0c2:	eb00 0b03 	add.w	fp, r0, r3
 801e0c6:	4558      	cmp	r0, fp
 801e0c8:	d25c      	bcs.n	801e184 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e0ca:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e0ce:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e0d2:	f858 2003 	ldr.w	r2, [r8, r3]
 801e0d6:	0e11      	lsrs	r1, r2, #24
 801e0d8:	d012      	beq.n	801e100 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e0da:	29ff      	cmp	r1, #255	; 0xff
 801e0dc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e0e0:	d110      	bne.n	801e104 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e0e2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e0e6:	d10d      	bne.n	801e104 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e0e8:	0953      	lsrs	r3, r2, #5
 801e0ea:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e0ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e0f2:	f027 0707 	bic.w	r7, r7, #7
 801e0f6:	431f      	orrs	r7, r3
 801e0f8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e0fc:	433a      	orrs	r2, r7
 801e0fe:	8002      	strh	r2, [r0, #0]
 801e100:	3002      	adds	r0, #2
 801e102:	e7e0      	b.n	801e0c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e104:	fb0a f101 	mul.w	r1, sl, r1
 801e108:	8806      	ldrh	r6, [r0, #0]
 801e10a:	1c4b      	adds	r3, r1, #1
 801e10c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e110:	1235      	asrs	r5, r6, #8
 801e112:	10f4      	asrs	r4, r6, #3
 801e114:	121b      	asrs	r3, r3, #8
 801e116:	00f6      	lsls	r6, r6, #3
 801e118:	b299      	uxth	r1, r3
 801e11a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e11e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e122:	b2f6      	uxtb	r6, r6
 801e124:	43db      	mvns	r3, r3
 801e126:	b2d2      	uxtb	r2, r2
 801e128:	b2db      	uxtb	r3, r3
 801e12a:	fb1c fc01 	smulbb	ip, ip, r1
 801e12e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e132:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e136:	fb12 f201 	smulbb	r2, r2, r1
 801e13a:	fb05 c503 	mla	r5, r5, r3, ip
 801e13e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e142:	b2ff      	uxtb	r7, r7
 801e144:	fb06 2203 	mla	r2, r6, r3, r2
 801e148:	b2ad      	uxth	r5, r5
 801e14a:	fb17 f701 	smulbb	r7, r7, r1
 801e14e:	b292      	uxth	r2, r2
 801e150:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e154:	fb04 7403 	mla	r4, r4, r3, r7
 801e158:	f105 0c01 	add.w	ip, r5, #1
 801e15c:	1c57      	adds	r7, r2, #1
 801e15e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e162:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e166:	b2a4      	uxth	r4, r4
 801e168:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e16c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e170:	433d      	orrs	r5, r7
 801e172:	1c67      	adds	r7, r4, #1
 801e174:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e178:	0964      	lsrs	r4, r4, #5
 801e17a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e17e:	4325      	orrs	r5, r4
 801e180:	8005      	strh	r5, [r0, #0]
 801e182:	e7bd      	b.n	801e100 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e184:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e186:	4418      	add	r0, r3
 801e188:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e18a:	4499      	add	r9, r3
 801e18c:	e795      	b.n	801e0ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e18e:	4b04      	ldr	r3, [pc, #16]	; (801e1a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e190:	6818      	ldr	r0, [r3, #0]
 801e192:	6803      	ldr	r3, [r0, #0]
 801e194:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e196:	4798      	blx	r3
 801e198:	e771      	b.n	801e07e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e19a:	bf00      	nop
 801e19c:	20012dae 	.word	0x20012dae
 801e1a0:	20012db4 	.word	0x20012db4

0801e1a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1a8:	b087      	sub	sp, #28
 801e1aa:	4680      	mov	r8, r0
 801e1ac:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e1b0:	460d      	mov	r5, r1
 801e1b2:	4614      	mov	r4, r2
 801e1b4:	2e00      	cmp	r6, #0
 801e1b6:	f000 80b9 	beq.w	801e32c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e1ba:	6810      	ldr	r0, [r2, #0]
 801e1bc:	6851      	ldr	r1, [r2, #4]
 801e1be:	af02      	add	r7, sp, #8
 801e1c0:	c703      	stmia	r7!, {r0, r1}
 801e1c2:	6818      	ldr	r0, [r3, #0]
 801e1c4:	6859      	ldr	r1, [r3, #4]
 801e1c6:	af04      	add	r7, sp, #16
 801e1c8:	c703      	stmia	r7!, {r0, r1}
 801e1ca:	a802      	add	r0, sp, #8
 801e1cc:	f7f7 fbec 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e1d0:	4621      	mov	r1, r4
 801e1d2:	a804      	add	r0, sp, #16
 801e1d4:	f7f7 fc2c 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e1d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e1dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e1e0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e1e4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e1e8:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e1ec:	eb08 0401 	add.w	r4, r8, r1
 801e1f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e1f4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e1f8:	440a      	add	r2, r1
 801e1fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e1fe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e202:	4413      	add	r3, r2
 801e204:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e208:	4b4a      	ldr	r3, [pc, #296]	; (801e334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e20a:	6818      	ldr	r0, [r3, #0]
 801e20c:	6803      	ldr	r3, [r0, #0]
 801e20e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e210:	4798      	blx	r3
 801e212:	4b49      	ldr	r3, [pc, #292]	; (801e338 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e214:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e218:	881a      	ldrh	r2, [r3, #0]
 801e21a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e21e:	2eff      	cmp	r6, #255	; 0xff
 801e220:	fb02 c101 	mla	r1, r2, r1, ip
 801e224:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e228:	fb02 f207 	mul.w	r2, r2, r7
 801e22c:	f105 0104 	add.w	r1, r5, #4
 801e230:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e234:	461d      	mov	r5, r3
 801e236:	d05a      	beq.n	801e2ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e238:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e23c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e240:	b2b6      	uxth	r6, r6
 801e242:	fa1f fe8e 	uxth.w	lr, lr
 801e246:	9301      	str	r3, [sp, #4]
 801e248:	4282      	cmp	r2, r0
 801e24a:	d96a      	bls.n	801e322 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e24c:	eb00 0b0a 	add.w	fp, r0, sl
 801e250:	4583      	cmp	fp, r0
 801e252:	d940      	bls.n	801e2d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e254:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e258:	8805      	ldrh	r5, [r0, #0]
 801e25a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e25e:	122f      	asrs	r7, r5, #8
 801e260:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e264:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e268:	fb17 f70e 	smulbb	r7, r7, lr
 801e26c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e270:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e274:	00ed      	lsls	r5, r5, #3
 801e276:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e27a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e27e:	10df      	asrs	r7, r3, #3
 801e280:	b2ed      	uxtb	r5, r5
 801e282:	00db      	lsls	r3, r3, #3
 801e284:	fa1f fc8c 	uxth.w	ip, ip
 801e288:	fb19 f90e 	smulbb	r9, r9, lr
 801e28c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e290:	b2db      	uxtb	r3, r3
 801e292:	fb15 f50e 	smulbb	r5, r5, lr
 801e296:	fb07 9706 	mla	r7, r7, r6, r9
 801e29a:	fb03 5306 	mla	r3, r3, r6, r5
 801e29e:	f10c 0901 	add.w	r9, ip, #1
 801e2a2:	b29b      	uxth	r3, r3
 801e2a4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e2a8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e2ac:	f103 0c01 	add.w	ip, r3, #1
 801e2b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e2b4:	b2bf      	uxth	r7, r7
 801e2b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e2ba:	ea4c 0c09 	orr.w	ip, ip, r9
 801e2be:	f107 0901 	add.w	r9, r7, #1
 801e2c2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e2c6:	097f      	lsrs	r7, r7, #5
 801e2c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e2cc:	ea4c 0c07 	orr.w	ip, ip, r7
 801e2d0:	f820 cb02 	strh.w	ip, [r0], #2
 801e2d4:	e7bc      	b.n	801e250 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e2d6:	9b01      	ldr	r3, [sp, #4]
 801e2d8:	881b      	ldrh	r3, [r3, #0]
 801e2da:	eba3 0308 	sub.w	r3, r3, r8
 801e2de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e2e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e2e6:	eba3 0308 	sub.w	r3, r3, r8
 801e2ea:	441c      	add	r4, r3
 801e2ec:	e7ac      	b.n	801e248 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e2ee:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e2f2:	4282      	cmp	r2, r0
 801e2f4:	d915      	bls.n	801e322 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e2f6:	eb00 060a 	add.w	r6, r0, sl
 801e2fa:	4286      	cmp	r6, r0
 801e2fc:	d906      	bls.n	801e30c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e2fe:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e302:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e306:	f820 3b02 	strh.w	r3, [r0], #2
 801e30a:	e7f6      	b.n	801e2fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e30c:	882b      	ldrh	r3, [r5, #0]
 801e30e:	eba3 0308 	sub.w	r3, r3, r8
 801e312:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e316:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e31a:	eba3 0308 	sub.w	r3, r3, r8
 801e31e:	441c      	add	r4, r3
 801e320:	e7e7      	b.n	801e2f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e322:	4b04      	ldr	r3, [pc, #16]	; (801e334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e324:	6818      	ldr	r0, [r3, #0]
 801e326:	6803      	ldr	r3, [r0, #0]
 801e328:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e32a:	4798      	blx	r3
 801e32c:	b007      	add	sp, #28
 801e32e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e332:	bf00      	nop
 801e334:	20012db4 	.word	0x20012db4
 801e338:	20012dae 	.word	0x20012dae

0801e33c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e340:	b091      	sub	sp, #68	; 0x44
 801e342:	4680      	mov	r8, r0
 801e344:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e348:	460f      	mov	r7, r1
 801e34a:	4614      	mov	r4, r2
 801e34c:	2d00      	cmp	r5, #0
 801e34e:	d051      	beq.n	801e3f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e350:	6810      	ldr	r0, [r2, #0]
 801e352:	6851      	ldr	r1, [r2, #4]
 801e354:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e558 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e358:	ae0c      	add	r6, sp, #48	; 0x30
 801e35a:	c603      	stmia	r6!, {r0, r1}
 801e35c:	6818      	ldr	r0, [r3, #0]
 801e35e:	6859      	ldr	r1, [r3, #4]
 801e360:	ae0e      	add	r6, sp, #56	; 0x38
 801e362:	c603      	stmia	r6!, {r0, r1}
 801e364:	a80c      	add	r0, sp, #48	; 0x30
 801e366:	f7f7 fb1f 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e36a:	4621      	mov	r1, r4
 801e36c:	a80e      	add	r0, sp, #56	; 0x38
 801e36e:	f7f7 fb5f 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e372:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e376:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e37a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e37e:	f8d9 0000 	ldr.w	r0, [r9]
 801e382:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e386:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e38a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e38e:	eb08 0401 	add.w	r4, r8, r1
 801e392:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e396:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e55c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e39a:	440a      	add	r2, r1
 801e39c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e3a0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e3a4:	4413      	add	r3, r2
 801e3a6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e3aa:	6803      	ldr	r3, [r0, #0]
 801e3ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e3ae:	4798      	blx	r3
 801e3b0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e3b4:	f8d9 0000 	ldr.w	r0, [r9]
 801e3b8:	d01f      	beq.n	801e3fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e3ba:	2200      	movs	r2, #0
 801e3bc:	6801      	ldr	r1, [r0, #0]
 801e3be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e3c2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e3c6:	220b      	movs	r2, #11
 801e3c8:	9207      	str	r2, [sp, #28]
 801e3ca:	f8b8 2000 	ldrh.w	r2, [r8]
 801e3ce:	9206      	str	r2, [sp, #24]
 801e3d0:	2201      	movs	r2, #1
 801e3d2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e3d6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e3da:	9203      	str	r2, [sp, #12]
 801e3dc:	fa1f f28a 	uxth.w	r2, sl
 801e3e0:	9202      	str	r2, [sp, #8]
 801e3e2:	b2b6      	uxth	r6, r6
 801e3e4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e3e8:	9200      	str	r2, [sp, #0]
 801e3ea:	9601      	str	r6, [sp, #4]
 801e3ec:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e3ee:	463a      	mov	r2, r7
 801e3f0:	4621      	mov	r1, r4
 801e3f2:	47a8      	blx	r5
 801e3f4:	b011      	add	sp, #68	; 0x44
 801e3f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3fa:	6803      	ldr	r3, [r0, #0]
 801e3fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e3fe:	4798      	blx	r3
 801e400:	f8b8 2000 	ldrh.w	r2, [r8]
 801e404:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e408:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e40c:	2dff      	cmp	r5, #255	; 0xff
 801e40e:	fb02 1303 	mla	r3, r2, r3, r1
 801e412:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e416:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e41a:	fb0a fa02 	mul.w	sl, sl, r2
 801e41e:	d062      	beq.n	801e4e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e420:	ea6f 0c05 	mvn.w	ip, r5
 801e424:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e428:	930a      	str	r3, [sp, #40]	; 0x28
 801e42a:	b2ad      	uxth	r5, r5
 801e42c:	fa5f fc8c 	uxtb.w	ip, ip
 801e430:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e434:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e436:	4298      	cmp	r0, r3
 801e438:	f080 8085 	bcs.w	801e546 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e43c:	eb00 0b09 	add.w	fp, r0, r9
 801e440:	4558      	cmp	r0, fp
 801e442:	d246      	bcs.n	801e4d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e444:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e448:	2303      	movs	r3, #3
 801e44a:	2204      	movs	r2, #4
 801e44c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e450:	eb07 0a0e 	add.w	sl, r7, lr
 801e454:	8803      	ldrh	r3, [r0, #0]
 801e456:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e45a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e45e:	1219      	asrs	r1, r3, #8
 801e460:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e464:	fb18 f805 	smulbb	r8, r8, r5
 801e468:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e46c:	10da      	asrs	r2, r3, #3
 801e46e:	fb01 810c 	mla	r1, r1, ip, r8
 801e472:	00db      	lsls	r3, r3, #3
 801e474:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e478:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e47c:	b2db      	uxtb	r3, r3
 801e47e:	fb18 f805 	smulbb	r8, r8, r5
 801e482:	fb1e fe05 	smulbb	lr, lr, r5
 801e486:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e48a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e48e:	b289      	uxth	r1, r1
 801e490:	fb02 820c 	mla	r2, r2, ip, r8
 801e494:	fb03 e30c 	mla	r3, r3, ip, lr
 801e498:	b292      	uxth	r2, r2
 801e49a:	b29b      	uxth	r3, r3
 801e49c:	f101 0801 	add.w	r8, r1, #1
 801e4a0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e4a4:	f103 0e01 	add.w	lr, r3, #1
 801e4a8:	f102 0801 	add.w	r8, r2, #1
 801e4ac:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e4b0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e4b4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e4b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e4bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e4c0:	ea4e 0101 	orr.w	r1, lr, r1
 801e4c4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e4c8:	ea41 0108 	orr.w	r1, r1, r8
 801e4cc:	f820 1b02 	strh.w	r1, [r0], #2
 801e4d0:	e7b6      	b.n	801e440 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e4d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e4d4:	881b      	ldrh	r3, [r3, #0]
 801e4d6:	1b9b      	subs	r3, r3, r6
 801e4d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e4dc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e4e0:	1b9b      	subs	r3, r3, r6
 801e4e2:	441c      	add	r4, r3
 801e4e4:	e7a6      	b.n	801e434 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e4e6:	491b      	ldr	r1, [pc, #108]	; (801e554 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e4e8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e4ec:	2203      	movs	r2, #3
 801e4ee:	2504      	movs	r5, #4
 801e4f0:	4550      	cmp	r0, sl
 801e4f2:	d228      	bcs.n	801e546 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e4f4:	eb00 0c09 	add.w	ip, r0, r9
 801e4f8:	4560      	cmp	r0, ip
 801e4fa:	4623      	mov	r3, r4
 801e4fc:	d219      	bcs.n	801e532 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e4fe:	f893 e000 	ldrb.w	lr, [r3]
 801e502:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e506:	eb07 0b0e 	add.w	fp, r7, lr
 801e50a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e50e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e512:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e516:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e51a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e51e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e522:	ea43 030b 	orr.w	r3, r3, fp
 801e526:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e52a:	3401      	adds	r4, #1
 801e52c:	f820 3b02 	strh.w	r3, [r0], #2
 801e530:	e7e2      	b.n	801e4f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e532:	f8b8 3000 	ldrh.w	r3, [r8]
 801e536:	1b9b      	subs	r3, r3, r6
 801e538:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e53c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e540:	1b9b      	subs	r3, r3, r6
 801e542:	441c      	add	r4, r3
 801e544:	e7d4      	b.n	801e4f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e546:	4b04      	ldr	r3, [pc, #16]	; (801e558 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e548:	6818      	ldr	r0, [r3, #0]
 801e54a:	6803      	ldr	r3, [r0, #0]
 801e54c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e54e:	4798      	blx	r3
 801e550:	e750      	b.n	801e3f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e552:	bf00      	nop
 801e554:	fffff800 	.word	0xfffff800
 801e558:	20012db4 	.word	0x20012db4
 801e55c:	20012dae 	.word	0x20012dae

0801e560 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e560:	b4f0      	push	{r4, r5, r6, r7}
 801e562:	460c      	mov	r4, r1
 801e564:	4611      	mov	r1, r2
 801e566:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e56a:	780f      	ldrb	r7, [r1, #0]
 801e56c:	784e      	ldrb	r6, [r1, #1]
 801e56e:	2f01      	cmp	r7, #1
 801e570:	461a      	mov	r2, r3
 801e572:	9b04      	ldr	r3, [sp, #16]
 801e574:	d036      	beq.n	801e5e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e576:	d31e      	bcc.n	801e5b6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e578:	2f02      	cmp	r7, #2
 801e57a:	d14a      	bne.n	801e612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e57c:	2e03      	cmp	r6, #3
 801e57e:	d848      	bhi.n	801e612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e580:	e8df f006 	tbb	[pc, r6]
 801e584:	16140702 	.word	0x16140702
 801e588:	9504      	str	r5, [sp, #16]
 801e58a:	4620      	mov	r0, r4
 801e58c:	bcf0      	pop	{r4, r5, r6, r7}
 801e58e:	f7ff be09 	b.w	801e1a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e592:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e594:	2800      	cmp	r0, #0
 801e596:	d03c      	beq.n	801e612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e598:	6806      	ldr	r6, [r0, #0]
 801e59a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e59e:	68b5      	ldr	r5, [r6, #8]
 801e5a0:	4613      	mov	r3, r2
 801e5a2:	46ac      	mov	ip, r5
 801e5a4:	460a      	mov	r2, r1
 801e5a6:	4621      	mov	r1, r4
 801e5a8:	bcf0      	pop	{r4, r5, r6, r7}
 801e5aa:	4760      	bx	ip
 801e5ac:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e5ae:	e7f1      	b.n	801e594 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e5b0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e5b4:	e7ee      	b.n	801e594 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e5b6:	2e03      	cmp	r6, #3
 801e5b8:	d82b      	bhi.n	801e612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5ba:	e8df f006 	tbb	[pc, r6]
 801e5be:	0702      	.short	0x0702
 801e5c0:	100e      	.short	0x100e
 801e5c2:	9504      	str	r5, [sp, #16]
 801e5c4:	4620      	mov	r0, r4
 801e5c6:	bcf0      	pop	{r4, r5, r6, r7}
 801e5c8:	f7ff bd06 	b.w	801dfd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e5cc:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e5ce:	b300      	cbz	r0, 801e612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5d0:	6806      	ldr	r6, [r0, #0]
 801e5d2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e5d6:	68f5      	ldr	r5, [r6, #12]
 801e5d8:	e7e2      	b.n	801e5a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e5da:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e5dc:	e7f7      	b.n	801e5ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e5de:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e5e2:	e7f4      	b.n	801e5ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e5e4:	2e03      	cmp	r6, #3
 801e5e6:	d814      	bhi.n	801e612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5e8:	e8df f006 	tbb	[pc, r6]
 801e5ec:	100e0702 	.word	0x100e0702
 801e5f0:	9504      	str	r5, [sp, #16]
 801e5f2:	4620      	mov	r0, r4
 801e5f4:	bcf0      	pop	{r4, r5, r6, r7}
 801e5f6:	f7ff bea1 	b.w	801e33c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e5fa:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e5fc:	b148      	cbz	r0, 801e612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e5fe:	6806      	ldr	r6, [r0, #0]
 801e600:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e604:	6935      	ldr	r5, [r6, #16]
 801e606:	e7cb      	b.n	801e5a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e608:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e60a:	e7f7      	b.n	801e5fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e60c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e610:	e7f4      	b.n	801e5fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e612:	bcf0      	pop	{r4, r5, r6, r7}
 801e614:	4770      	bx	lr
	...

0801e618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e61c:	4604      	mov	r4, r0
 801e61e:	b087      	sub	sp, #28
 801e620:	6810      	ldr	r0, [r2, #0]
 801e622:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e626:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e860 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e62a:	460e      	mov	r6, r1
 801e62c:	6851      	ldr	r1, [r2, #4]
 801e62e:	ad02      	add	r5, sp, #8
 801e630:	c503      	stmia	r5!, {r0, r1}
 801e632:	6818      	ldr	r0, [r3, #0]
 801e634:	6859      	ldr	r1, [r3, #4]
 801e636:	ad04      	add	r5, sp, #16
 801e638:	4617      	mov	r7, r2
 801e63a:	c503      	stmia	r5!, {r0, r1}
 801e63c:	a802      	add	r0, sp, #8
 801e63e:	f7f7 f9b3 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e642:	4639      	mov	r1, r7
 801e644:	a804      	add	r0, sp, #16
 801e646:	f7f7 f9f3 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e64a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e64e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e652:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e656:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e65a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e65e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e662:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e666:	440e      	add	r6, r1
 801e668:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e66c:	440a      	add	r2, r1
 801e66e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e672:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e676:	4413      	add	r3, r2
 801e678:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e67c:	4b77      	ldr	r3, [pc, #476]	; (801e85c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e67e:	6818      	ldr	r0, [r3, #0]
 801e680:	6803      	ldr	r3, [r0, #0]
 801e682:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e684:	4798      	blx	r3
 801e686:	f8b9 b000 	ldrh.w	fp, [r9]
 801e68a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e68e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e692:	fb0b 2303 	mla	r3, fp, r3, r2
 801e696:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e69a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e69e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e6a2:	fb05 f50b 	mul.w	r5, r5, fp
 801e6a6:	9300      	str	r3, [sp, #0]
 801e6a8:	d069      	beq.n	801e77e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e6aa:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e6ae:	4558      	cmp	r0, fp
 801e6b0:	f080 80cc 	bcs.w	801e84c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e6b4:	9b00      	ldr	r3, [sp, #0]
 801e6b6:	18c3      	adds	r3, r0, r3
 801e6b8:	9301      	str	r3, [sp, #4]
 801e6ba:	4631      	mov	r1, r6
 801e6bc:	9b01      	ldr	r3, [sp, #4]
 801e6be:	4298      	cmp	r0, r3
 801e6c0:	d24f      	bcs.n	801e762 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e6c2:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e6c6:	2a00      	cmp	r2, #0
 801e6c8:	d048      	beq.n	801e75c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e6ca:	fb0a f202 	mul.w	r2, sl, r2
 801e6ce:	1c53      	adds	r3, r2, #1
 801e6d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e6d4:	121b      	asrs	r3, r3, #8
 801e6d6:	d041      	beq.n	801e75c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e6d8:	8802      	ldrh	r2, [r0, #0]
 801e6da:	f8b4 c000 	ldrh.w	ip, [r4]
 801e6de:	b29e      	uxth	r6, r3
 801e6e0:	1215      	asrs	r5, r2, #8
 801e6e2:	43db      	mvns	r3, r3
 801e6e4:	b2db      	uxtb	r3, r3
 801e6e6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e6ea:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e6ee:	fb15 f503 	smulbb	r5, r5, r3
 801e6f2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e6f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e6fa:	00d2      	lsls	r2, r2, #3
 801e6fc:	fb07 5706 	mla	r7, r7, r6, r5
 801e700:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e704:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e708:	b2d2      	uxtb	r2, r2
 801e70a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e70e:	b2bf      	uxth	r7, r7
 801e710:	fb1e fe03 	smulbb	lr, lr, r3
 801e714:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e718:	fa5f fc8c 	uxtb.w	ip, ip
 801e71c:	fb12 f203 	smulbb	r2, r2, r3
 801e720:	fb05 e506 	mla	r5, r5, r6, lr
 801e724:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e728:	f107 0e01 	add.w	lr, r7, #1
 801e72c:	fa1f fc8c 	uxth.w	ip, ip
 801e730:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e734:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e738:	f10c 0701 	add.w	r7, ip, #1
 801e73c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e740:	b2ad      	uxth	r5, r5
 801e742:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e746:	ea47 070e 	orr.w	r7, r7, lr
 801e74a:	f105 0e01 	add.w	lr, r5, #1
 801e74e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e752:	096d      	lsrs	r5, r5, #5
 801e754:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e758:	432f      	orrs	r7, r5
 801e75a:	8007      	strh	r7, [r0, #0]
 801e75c:	3002      	adds	r0, #2
 801e75e:	3402      	adds	r4, #2
 801e760:	e7ac      	b.n	801e6bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e762:	f8b9 3000 	ldrh.w	r3, [r9]
 801e766:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e76a:	eba3 0308 	sub.w	r3, r3, r8
 801e76e:	eba6 0608 	sub.w	r6, r6, r8
 801e772:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e776:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e77a:	440e      	add	r6, r1
 801e77c:	e797      	b.n	801e6ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e77e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e782:	42a8      	cmp	r0, r5
 801e784:	d262      	bcs.n	801e84c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e786:	9b00      	ldr	r3, [sp, #0]
 801e788:	4631      	mov	r1, r6
 801e78a:	eb00 0b03 	add.w	fp, r0, r3
 801e78e:	4558      	cmp	r0, fp
 801e790:	d24e      	bcs.n	801e830 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e792:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e796:	b12b      	cbz	r3, 801e7a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e798:	2bff      	cmp	r3, #255	; 0xff
 801e79a:	f8b4 e000 	ldrh.w	lr, [r4]
 801e79e:	d104      	bne.n	801e7aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e7a0:	f8a0 e000 	strh.w	lr, [r0]
 801e7a4:	3002      	adds	r0, #2
 801e7a6:	3402      	adds	r4, #2
 801e7a8:	e7f1      	b.n	801e78e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e7aa:	8802      	ldrh	r2, [r0, #0]
 801e7ac:	b29f      	uxth	r7, r3
 801e7ae:	1216      	asrs	r6, r2, #8
 801e7b0:	43db      	mvns	r3, r3
 801e7b2:	b2db      	uxtb	r3, r3
 801e7b4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e7b8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e7bc:	fb16 f603 	smulbb	r6, r6, r3
 801e7c0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e7c4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e7c8:	00d2      	lsls	r2, r2, #3
 801e7ca:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e7ce:	b2d2      	uxtb	r2, r2
 801e7d0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e7d4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e7d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e7dc:	fb1a fa03 	smulbb	sl, sl, r3
 801e7e0:	fa1f fc8c 	uxth.w	ip, ip
 801e7e4:	fb12 f303 	smulbb	r3, r2, r3
 801e7e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e7ec:	fa5f fe8e 	uxtb.w	lr, lr
 801e7f0:	fb06 a607 	mla	r6, r6, r7, sl
 801e7f4:	f10c 0201 	add.w	r2, ip, #1
 801e7f8:	fb0e 3307 	mla	r3, lr, r7, r3
 801e7fc:	b2b6      	uxth	r6, r6
 801e7fe:	b29b      	uxth	r3, r3
 801e800:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e804:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e808:	f106 0a01 	add.w	sl, r6, #1
 801e80c:	f103 0c01 	add.w	ip, r3, #1
 801e810:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e814:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e818:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e81c:	0976      	lsrs	r6, r6, #5
 801e81e:	ea4c 0c02 	orr.w	ip, ip, r2
 801e822:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e826:	ea4c 0c06 	orr.w	ip, ip, r6
 801e82a:	f8a0 c000 	strh.w	ip, [r0]
 801e82e:	e7b9      	b.n	801e7a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e830:	f8b9 3000 	ldrh.w	r3, [r9]
 801e834:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e838:	eba3 0308 	sub.w	r3, r3, r8
 801e83c:	eba6 0608 	sub.w	r6, r6, r8
 801e840:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e844:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e848:	440e      	add	r6, r1
 801e84a:	e79a      	b.n	801e782 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e84c:	4b03      	ldr	r3, [pc, #12]	; (801e85c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e84e:	6818      	ldr	r0, [r3, #0]
 801e850:	6803      	ldr	r3, [r0, #0]
 801e852:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e854:	4798      	blx	r3
 801e856:	b007      	add	sp, #28
 801e858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e85c:	20012db4 	.word	0x20012db4
 801e860:	20012dae 	.word	0x20012dae

0801e864 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e868:	b089      	sub	sp, #36	; 0x24
 801e86a:	4682      	mov	sl, r0
 801e86c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e870:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e872:	460f      	mov	r7, r1
 801e874:	4691      	mov	r9, r2
 801e876:	4698      	mov	r8, r3
 801e878:	2e00      	cmp	r6, #0
 801e87a:	d03d      	beq.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e87c:	4608      	mov	r0, r1
 801e87e:	f7fa fe59 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e882:	4605      	mov	r5, r0
 801e884:	4638      	mov	r0, r7
 801e886:	f7fa fe89 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e88a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e88e:	4638      	mov	r0, r7
 801e890:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e894:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e898:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e89c:	f7fa ff36 	bl	801970c <_ZNK8touchgfx6Bitmap7getDataEv>
 801e8a0:	4605      	mov	r5, r0
 801e8a2:	4638      	mov	r0, r7
 801e8a4:	f7fa ff62 	bl	801976c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e8a8:	4681      	mov	r9, r0
 801e8aa:	4638      	mov	r0, r7
 801e8ac:	f7fa ffb2 	bl	8019814 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e8b0:	280b      	cmp	r0, #11
 801e8b2:	d821      	bhi.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8b4:	e8df f000 	tbb	[pc, r0]
 801e8b8:	2006aebe 	.word	0x2006aebe
 801e8bc:	20202020 	.word	0x20202020
 801e8c0:	b5202020 	.word	0xb5202020
 801e8c4:	4bb0      	ldr	r3, [pc, #704]	; (801eb88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e8c6:	6818      	ldr	r0, [r3, #0]
 801e8c8:	6803      	ldr	r3, [r0, #0]
 801e8ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e8cc:	4798      	blx	r3
 801e8ce:	2eff      	cmp	r6, #255	; 0xff
 801e8d0:	d101      	bne.n	801e8d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e8d2:	0683      	lsls	r3, r0, #26
 801e8d4:	d506      	bpl.n	801e8e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e8d6:	4633      	mov	r3, r6
 801e8d8:	4622      	mov	r2, r4
 801e8da:	a902      	add	r1, sp, #8
 801e8dc:	4628      	mov	r0, r5
 801e8de:	f7ff f909 	bl	801daf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e8e2:	e009      	b.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8e4:	4638      	mov	r0, r7
 801e8e6:	f7fa fed9 	bl	801969c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e8ea:	b940      	cbnz	r0, 801e8fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e8ec:	4623      	mov	r3, r4
 801e8ee:	aa02      	add	r2, sp, #8
 801e8f0:	4629      	mov	r1, r5
 801e8f2:	4650      	mov	r0, sl
 801e8f4:	f7ff f9e4 	bl	801dcc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e8f8:	b009      	add	sp, #36	; 0x24
 801e8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8fe:	f10d 0818 	add.w	r8, sp, #24
 801e902:	4639      	mov	r1, r7
 801e904:	4640      	mov	r0, r8
 801e906:	f7fa fe7d 	bl	8019604 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e90a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e90e:	af04      	add	r7, sp, #16
 801e910:	e887 0003 	stmia.w	r7, {r0, r1}
 801e914:	4638      	mov	r0, r7
 801e916:	4621      	mov	r1, r4
 801e918:	f7f2 f8e8 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 801e91c:	4638      	mov	r0, r7
 801e91e:	f7f2 f928 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e922:	2800      	cmp	r0, #0
 801e924:	d1d7      	bne.n	801e8d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e926:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e92a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e92e:	4293      	cmp	r3, r2
 801e930:	dd12      	ble.n	801e958 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e932:	1a9b      	subs	r3, r3, r2
 801e934:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e938:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e93c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e940:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e944:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e948:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e94c:	4642      	mov	r2, r8
 801e94e:	4633      	mov	r3, r6
 801e950:	a902      	add	r1, sp, #8
 801e952:	4628      	mov	r0, r5
 801e954:	f7ff f8ce 	bl	801daf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e958:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e95c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e960:	4293      	cmp	r3, r2
 801e962:	dd12      	ble.n	801e98a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e964:	1a9b      	subs	r3, r3, r2
 801e966:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e96a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e96e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e972:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e976:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e97a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e97e:	23ff      	movs	r3, #255	; 0xff
 801e980:	4642      	mov	r2, r8
 801e982:	a902      	add	r1, sp, #8
 801e984:	4628      	mov	r0, r5
 801e986:	f7ff f8b5 	bl	801daf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e98a:	463b      	mov	r3, r7
 801e98c:	aa02      	add	r2, sp, #8
 801e98e:	4629      	mov	r1, r5
 801e990:	4650      	mov	r0, sl
 801e992:	f7ff f995 	bl	801dcc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e996:	88a2      	ldrh	r2, [r4, #4]
 801e998:	8823      	ldrh	r3, [r4, #0]
 801e99a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e99e:	4413      	add	r3, r2
 801e9a0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e9a4:	440a      	add	r2, r1
 801e9a6:	b29b      	uxth	r3, r3
 801e9a8:	b292      	uxth	r2, r2
 801e9aa:	b211      	sxth	r1, r2
 801e9ac:	b218      	sxth	r0, r3
 801e9ae:	4288      	cmp	r0, r1
 801e9b0:	dd12      	ble.n	801e9d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e9b2:	1a9b      	subs	r3, r3, r2
 801e9b4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e9b8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e9bc:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e9c0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e9c4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e9c8:	23ff      	movs	r3, #255	; 0xff
 801e9ca:	4642      	mov	r2, r8
 801e9cc:	a902      	add	r1, sp, #8
 801e9ce:	4628      	mov	r0, r5
 801e9d0:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e9d4:	f7ff f88e 	bl	801daf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e9d8:	88e2      	ldrh	r2, [r4, #6]
 801e9da:	8863      	ldrh	r3, [r4, #2]
 801e9dc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e9e0:	4413      	add	r3, r2
 801e9e2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e9e6:	440a      	add	r2, r1
 801e9e8:	b29b      	uxth	r3, r3
 801e9ea:	b292      	uxth	r2, r2
 801e9ec:	b211      	sxth	r1, r2
 801e9ee:	b218      	sxth	r0, r3
 801e9f0:	4288      	cmp	r0, r1
 801e9f2:	dd81      	ble.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e9f4:	1a9b      	subs	r3, r3, r2
 801e9f6:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e9fa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e9fe:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ea02:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ea06:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ea0a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ea0e:	23ff      	movs	r3, #255	; 0xff
 801ea10:	4642      	mov	r2, r8
 801ea12:	e762      	b.n	801e8da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801ea14:	4633      	mov	r3, r6
 801ea16:	4622      	mov	r2, r4
 801ea18:	a902      	add	r1, sp, #8
 801ea1a:	4628      	mov	r0, r5
 801ea1c:	f7ff f9c0 	bl	801dda0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ea20:	e76a      	b.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea22:	e9cd 4600 	strd	r4, r6, [sp]
 801ea26:	ab02      	add	r3, sp, #8
 801ea28:	464a      	mov	r2, r9
 801ea2a:	4629      	mov	r1, r5
 801ea2c:	4650      	mov	r0, sl
 801ea2e:	f7ff fd97 	bl	801e560 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801ea32:	e761      	b.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea34:	4638      	mov	r0, r7
 801ea36:	f7fa fe31 	bl	801969c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ea3a:	b950      	cbnz	r0, 801ea52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801ea3c:	e9cd 6000 	strd	r6, r0, [sp]
 801ea40:	f8da 3000 	ldr.w	r3, [sl]
 801ea44:	aa02      	add	r2, sp, #8
 801ea46:	68de      	ldr	r6, [r3, #12]
 801ea48:	4629      	mov	r1, r5
 801ea4a:	4623      	mov	r3, r4
 801ea4c:	4650      	mov	r0, sl
 801ea4e:	47b0      	blx	r6
 801ea50:	e752      	b.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea52:	f10d 0818 	add.w	r8, sp, #24
 801ea56:	4639      	mov	r1, r7
 801ea58:	4640      	mov	r0, r8
 801ea5a:	f7fa fdd3 	bl	8019604 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ea5e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ea62:	af04      	add	r7, sp, #16
 801ea64:	e887 0003 	stmia.w	r7, {r0, r1}
 801ea68:	4638      	mov	r0, r7
 801ea6a:	4621      	mov	r1, r4
 801ea6c:	f7f2 f83e 	bl	8010aec <_ZN8touchgfx4RectaNERKS0_>
 801ea70:	4638      	mov	r0, r7
 801ea72:	f7f2 f87e 	bl	8010b72 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ea76:	b138      	cbz	r0, 801ea88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ea78:	9600      	str	r6, [sp, #0]
 801ea7a:	4623      	mov	r3, r4
 801ea7c:	aa02      	add	r2, sp, #8
 801ea7e:	4649      	mov	r1, r9
 801ea80:	4628      	mov	r0, r5
 801ea82:	f7ff fdc9 	bl	801e618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ea86:	e737      	b.n	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea88:	e9cd 6000 	strd	r6, r0, [sp]
 801ea8c:	f8da 3000 	ldr.w	r3, [sl]
 801ea90:	aa02      	add	r2, sp, #8
 801ea92:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ea96:	4629      	mov	r1, r5
 801ea98:	463b      	mov	r3, r7
 801ea9a:	4650      	mov	r0, sl
 801ea9c:	47d8      	blx	fp
 801ea9e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801eaa2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801eaa6:	4293      	cmp	r3, r2
 801eaa8:	dd13      	ble.n	801ead2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801eaaa:	f9b4 0000 	ldrsh.w	r0, [r4]
 801eaae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801eab2:	f8ad 0018 	strh.w	r0, [sp, #24]
 801eab6:	1a9b      	subs	r3, r3, r2
 801eab8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801eabc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801eac0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eac4:	9600      	str	r6, [sp, #0]
 801eac6:	4643      	mov	r3, r8
 801eac8:	aa02      	add	r2, sp, #8
 801eaca:	4649      	mov	r1, r9
 801eacc:	4628      	mov	r0, r5
 801eace:	f7ff fda3 	bl	801e618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ead2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ead6:	f9b4 2000 	ldrsh.w	r2, [r4]
 801eada:	4293      	cmp	r3, r2
 801eadc:	dd13      	ble.n	801eb06 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801eade:	1a9b      	subs	r3, r3, r2
 801eae0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801eae4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801eae8:	f8ad 2018 	strh.w	r2, [sp, #24]
 801eaec:	f8ad 001a 	strh.w	r0, [sp, #26]
 801eaf0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eaf4:	f8ad 101e 	strh.w	r1, [sp, #30]
 801eaf8:	9600      	str	r6, [sp, #0]
 801eafa:	4643      	mov	r3, r8
 801eafc:	aa02      	add	r2, sp, #8
 801eafe:	4649      	mov	r1, r9
 801eb00:	4628      	mov	r0, r5
 801eb02:	f7ff fd89 	bl	801e618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb06:	88a2      	ldrh	r2, [r4, #4]
 801eb08:	8823      	ldrh	r3, [r4, #0]
 801eb0a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801eb0e:	4413      	add	r3, r2
 801eb10:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801eb14:	440a      	add	r2, r1
 801eb16:	b29b      	uxth	r3, r3
 801eb18:	b292      	uxth	r2, r2
 801eb1a:	b211      	sxth	r1, r2
 801eb1c:	b218      	sxth	r0, r3
 801eb1e:	4288      	cmp	r0, r1
 801eb20:	dd13      	ble.n	801eb4a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801eb22:	1a9b      	subs	r3, r3, r2
 801eb24:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801eb28:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801eb2c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801eb30:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eb34:	f8ad 001e 	strh.w	r0, [sp, #30]
 801eb38:	9600      	str	r6, [sp, #0]
 801eb3a:	4643      	mov	r3, r8
 801eb3c:	aa02      	add	r2, sp, #8
 801eb3e:	4649      	mov	r1, r9
 801eb40:	4628      	mov	r0, r5
 801eb42:	f8ad 701a 	strh.w	r7, [sp, #26]
 801eb46:	f7ff fd67 	bl	801e618 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801eb4a:	88e2      	ldrh	r2, [r4, #6]
 801eb4c:	8863      	ldrh	r3, [r4, #2]
 801eb4e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801eb52:	4413      	add	r3, r2
 801eb54:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801eb58:	440a      	add	r2, r1
 801eb5a:	b29b      	uxth	r3, r3
 801eb5c:	b292      	uxth	r2, r2
 801eb5e:	b211      	sxth	r1, r2
 801eb60:	b218      	sxth	r0, r3
 801eb62:	4288      	cmp	r0, r1
 801eb64:	f77f aec8 	ble.w	801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb68:	f9b4 7000 	ldrsh.w	r7, [r4]
 801eb6c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801eb70:	f8ad 7018 	strh.w	r7, [sp, #24]
 801eb74:	1a9b      	subs	r3, r3, r2
 801eb76:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eb7a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801eb7e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801eb82:	9600      	str	r6, [sp, #0]
 801eb84:	4643      	mov	r3, r8
 801eb86:	e779      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801eb88:	20012db4 	.word	0x20012db4

0801eb8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801eb8c:	b180      	cbz	r0, 801ebb0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801eb8e:	2903      	cmp	r1, #3
 801eb90:	d81c      	bhi.n	801ebcc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801eb92:	e8df f001 	tbb	[pc, r1]
 801eb96:	1d02      	.short	0x1d02
 801eb98:	1f08      	.short	0x1f08
 801eb9a:	4b10      	ldr	r3, [pc, #64]	; (801ebdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801eb9c:	8818      	ldrh	r0, [r3, #0]
 801eb9e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801eba2:	4240      	negs	r0, r0
 801eba4:	4770      	bx	lr
 801eba6:	4b0d      	ldr	r3, [pc, #52]	; (801ebdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801eba8:	8818      	ldrh	r0, [r3, #0]
 801ebaa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ebae:	4770      	bx	lr
 801ebb0:	2903      	cmp	r1, #3
 801ebb2:	d80b      	bhi.n	801ebcc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ebb4:	a301      	add	r3, pc, #4	; (adr r3, 801ebbc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ebb6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ebba:	bf00      	nop
 801ebbc:	0801ebd1 	.word	0x0801ebd1
 801ebc0:	0801eba7 	.word	0x0801eba7
 801ebc4:	0801ebd5 	.word	0x0801ebd5
 801ebc8:	0801eb9b 	.word	0x0801eb9b
 801ebcc:	2000      	movs	r0, #0
 801ebce:	4770      	bx	lr
 801ebd0:	2001      	movs	r0, #1
 801ebd2:	4770      	bx	lr
 801ebd4:	f04f 30ff 	mov.w	r0, #4294967295
 801ebd8:	4770      	bx	lr
 801ebda:	bf00      	nop
 801ebdc:	20012dae 	.word	0x20012dae

0801ebe0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ebe0:	b180      	cbz	r0, 801ec04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ebe2:	2903      	cmp	r1, #3
 801ebe4:	d81c      	bhi.n	801ec20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ebe6:	e8df f001 	tbb	[pc, r1]
 801ebea:	021d      	.short	0x021d
 801ebec:	071f      	.short	0x071f
 801ebee:	4b10      	ldr	r3, [pc, #64]	; (801ec30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ebf0:	8818      	ldrh	r0, [r3, #0]
 801ebf2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ebf6:	4770      	bx	lr
 801ebf8:	4b0d      	ldr	r3, [pc, #52]	; (801ec30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ebfa:	8818      	ldrh	r0, [r3, #0]
 801ebfc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ec00:	4240      	negs	r0, r0
 801ec02:	4770      	bx	lr
 801ec04:	2903      	cmp	r1, #3
 801ec06:	d80b      	bhi.n	801ec20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ec08:	a301      	add	r3, pc, #4	; (adr r3, 801ec10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ec0a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ec0e:	bf00      	nop
 801ec10:	0801ebef 	.word	0x0801ebef
 801ec14:	0801ec29 	.word	0x0801ec29
 801ec18:	0801ebf9 	.word	0x0801ebf9
 801ec1c:	0801ec25 	.word	0x0801ec25
 801ec20:	2000      	movs	r0, #0
 801ec22:	4770      	bx	lr
 801ec24:	2001      	movs	r0, #1
 801ec26:	4770      	bx	lr
 801ec28:	f04f 30ff 	mov.w	r0, #4294967295
 801ec2c:	4770      	bx	lr
 801ec2e:	bf00      	nop
 801ec30:	20012dae 	.word	0x20012dae

0801ec34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ec34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec38:	b099      	sub	sp, #100	; 0x64
 801ec3a:	910b      	str	r1, [sp, #44]	; 0x2c
 801ec3c:	a914      	add	r1, sp, #80	; 0x50
 801ec3e:	e881 000c 	stmia.w	r1, {r2, r3}
 801ec42:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ec46:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ec4a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ec4e:	9309      	str	r3, [sp, #36]	; 0x24
 801ec50:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ec54:	9310      	str	r3, [sp, #64]	; 0x40
 801ec56:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ec5a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ec5e:	930c      	str	r3, [sp, #48]	; 0x30
 801ec60:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ec64:	798f      	ldrb	r7, [r1, #6]
 801ec66:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ec6a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ec6e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ec72:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ec76:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ec7a:	431f      	orrs	r7, r3
 801ec7c:	f000 8195 	beq.w	801efaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ec80:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ec84:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ec88:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ec8c:	ea59 0903 	orrs.w	r9, r9, r3
 801ec90:	f000 818b 	beq.w	801efaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ec94:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ec98:	b29b      	uxth	r3, r3
 801ec9a:	2d00      	cmp	r5, #0
 801ec9c:	f000 812e 	beq.w	801eefc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801eca0:	1aed      	subs	r5, r5, r3
 801eca2:	b2ad      	uxth	r5, r5
 801eca4:	042b      	lsls	r3, r5, #16
 801eca6:	d502      	bpl.n	801ecae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801eca8:	1b64      	subs	r4, r4, r5
 801ecaa:	b224      	sxth	r4, r4
 801ecac:	2500      	movs	r5, #0
 801ecae:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ecb2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ecb6:	428c      	cmp	r4, r1
 801ecb8:	b28b      	uxth	r3, r1
 801ecba:	bfbf      	itttt	lt
 801ecbc:	18ed      	addlt	r5, r5, r3
 801ecbe:	1b2c      	sublt	r4, r5, r4
 801ecc0:	b2a5      	uxthlt	r5, r4
 801ecc2:	460c      	movlt	r4, r1
 801ecc4:	8891      	ldrh	r1, [r2, #4]
 801ecc6:	440b      	add	r3, r1
 801ecc8:	b21b      	sxth	r3, r3
 801ecca:	930f      	str	r3, [sp, #60]	; 0x3c
 801eccc:	88d3      	ldrh	r3, [r2, #6]
 801ecce:	8852      	ldrh	r2, [r2, #2]
 801ecd0:	4413      	add	r3, r2
 801ecd2:	b21b      	sxth	r3, r3
 801ecd4:	930d      	str	r3, [sp, #52]	; 0x34
 801ecd6:	4bbe      	ldr	r3, [pc, #760]	; (801efd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ecd8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ecda:	f893 b000 	ldrb.w	fp, [r3]
 801ecde:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ece2:	f1dc 0300 	rsbs	r3, ip, #0
 801ece6:	eb43 030c 	adc.w	r3, r3, ip
 801ecea:	930e      	str	r3, [sp, #56]	; 0x38
 801ecec:	4621      	mov	r1, r4
 801ecee:	4653      	mov	r3, sl
 801ecf0:	a814      	add	r0, sp, #80	; 0x50
 801ecf2:	f7f6 fcce 	bl	8015692 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ecf6:	4621      	mov	r1, r4
 801ecf8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ecfc:	4653      	mov	r3, sl
 801ecfe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ed00:	a814      	add	r0, sp, #80	; 0x50
 801ed02:	f7f6 fce3 	bl	80156cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ed06:	a918      	add	r1, sp, #96	; 0x60
 801ed08:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ed0c:	a817      	add	r0, sp, #92	; 0x5c
 801ed0e:	f7f6 fe09 	bl	8015924 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ed12:	f1ba 0f00 	cmp.w	sl, #0
 801ed16:	f040 80f4 	bne.w	801ef02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ed1a:	f1bb 0f01 	cmp.w	fp, #1
 801ed1e:	f040 80f8 	bne.w	801ef12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801ed22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed24:	2b00      	cmp	r3, #0
 801ed26:	f040 8145 	bne.w	801efb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801ed2a:	b2ba      	uxth	r2, r7
 801ed2c:	b905      	cbnz	r5, 801ed30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801ed2e:	b16e      	cbz	r6, 801ed4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801ed30:	fb06 5302 	mla	r3, r6, r2, r5
 801ed34:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801ed36:	fb08 f303 	mul.w	r3, r8, r3
 801ed3a:	4631      	mov	r1, r6
 801ed3c:	f003 0607 	and.w	r6, r3, #7
 801ed40:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ed44:	9328      	str	r3, [sp, #160]	; 0xa0
 801ed46:	eba9 0301 	sub.w	r3, r9, r1
 801ed4a:	930a      	str	r3, [sp, #40]	; 0x28
 801ed4c:	4651      	mov	r1, sl
 801ed4e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ed50:	f7ff ff1c 	bl	801eb8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ed54:	4681      	mov	r9, r0
 801ed56:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ed58:	f7ff ff42 	bl	801ebe0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ed5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ed5e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ed60:	eba3 0a01 	sub.w	sl, r3, r1
 801ed64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed66:	459a      	cmp	sl, r3
 801ed68:	bfa8      	it	ge
 801ed6a:	469a      	movge	sl, r3
 801ed6c:	f1ba 0f00 	cmp.w	sl, #0
 801ed70:	4683      	mov	fp, r0
 801ed72:	f340 811a 	ble.w	801efaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ed78:	1b64      	subs	r4, r4, r5
 801ed7a:	1b1c      	subs	r4, r3, r4
 801ed7c:	42bc      	cmp	r4, r7
 801ed7e:	bfd4      	ite	le
 801ed80:	ebc5 0504 	rsble	r5, r5, r4
 801ed84:	ebc5 0507 	rsbgt	r5, r5, r7
 801ed88:	2d00      	cmp	r5, #0
 801ed8a:	f340 810e 	ble.w	801efaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ed8e:	1b52      	subs	r2, r2, r5
 801ed90:	fb08 f302 	mul.w	r3, r8, r2
 801ed94:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ed98:	2b00      	cmp	r3, #0
 801ed9a:	f040 8116 	bne.w	801efca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ed9e:	4b8d      	ldr	r3, [pc, #564]	; (801efd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801eda0:	6818      	ldr	r0, [r3, #0]
 801eda2:	6803      	ldr	r3, [r0, #0]
 801eda4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eda6:	4798      	blx	r3
 801eda8:	2301      	movs	r3, #1
 801edaa:	fa03 f308 	lsl.w	r3, r3, r8
 801edae:	4a8a      	ldr	r2, [pc, #552]	; (801efd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801edb0:	3b01      	subs	r3, #1
 801edb2:	b2db      	uxtb	r3, r3
 801edb4:	8811      	ldrh	r1, [r2, #0]
 801edb6:	930e      	str	r3, [sp, #56]	; 0x38
 801edb8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801edbc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801edc0:	fb01 2303 	mla	r3, r1, r3, r2
 801edc4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801edc8:	930a      	str	r3, [sp, #40]	; 0x28
 801edca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801edcc:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801edd0:	9313      	str	r3, [sp, #76]	; 0x4c
 801edd2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801edd4:	0a19      	lsrs	r1, r3, #8
 801edd6:	b2cb      	uxtb	r3, r1
 801edd8:	9312      	str	r3, [sp, #72]	; 0x48
 801edda:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eddc:	b2db      	uxtb	r3, r3
 801edde:	9311      	str	r3, [sp, #68]	; 0x44
 801ede0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ede2:	095a      	lsrs	r2, r3, #5
 801ede4:	4b7d      	ldr	r3, [pc, #500]	; (801efdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ede6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801edea:	400b      	ands	r3, r1
 801edec:	4313      	orrs	r3, r2
 801edee:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801edf0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801edf4:	4313      	orrs	r3, r2
 801edf6:	b29b      	uxth	r3, r3
 801edf8:	9310      	str	r3, [sp, #64]	; 0x40
 801edfa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801edfc:	781a      	ldrb	r2, [r3, #0]
 801edfe:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ee02:	4132      	asrs	r2, r6
 801ee04:	fb05 b919 	mls	r9, r5, r9, fp
 801ee08:	fb03 fb05 	mul.w	fp, r3, r5
 801ee0c:	b2d2      	uxtb	r2, r2
 801ee0e:	930d      	str	r3, [sp, #52]	; 0x34
 801ee10:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ee14:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ee18:	f0c0 80f5 	bcc.w	801f006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801ee1c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801ee20:	46ae      	mov	lr, r5
 801ee22:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801ee26:	f0c0 80dd 	bcc.w	801efe4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ee2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ee2c:	4013      	ands	r3, r2
 801ee2e:	d055      	beq.n	801eedc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801ee30:	20ff      	movs	r0, #255	; 0xff
 801ee32:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ee34:	fb90 f1f1 	sdiv	r1, r0, r1
 801ee38:	434b      	muls	r3, r1
 801ee3a:	2bfe      	cmp	r3, #254	; 0xfe
 801ee3c:	dd03      	ble.n	801ee46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801ee3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ee40:	4281      	cmp	r1, r0
 801ee42:	f000 80cd 	beq.w	801efe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801ee46:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ee48:	f8bc 4000 	ldrh.w	r4, [ip]
 801ee4c:	fb11 f303 	smulbb	r3, r1, r3
 801ee50:	b29b      	uxth	r3, r3
 801ee52:	1c59      	adds	r1, r3, #1
 801ee54:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ee58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ee5c:	b29f      	uxth	r7, r3
 801ee5e:	43db      	mvns	r3, r3
 801ee60:	b2db      	uxtb	r3, r3
 801ee62:	9309      	str	r3, [sp, #36]	; 0x24
 801ee64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ee66:	1220      	asrs	r0, r4, #8
 801ee68:	fb13 f907 	smulbb	r9, r3, r7
 801ee6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ee70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee72:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ee76:	fb00 9003 	mla	r0, r0, r3, r9
 801ee7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ee7c:	10e1      	asrs	r1, r4, #3
 801ee7e:	fb13 f907 	smulbb	r9, r3, r7
 801ee82:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ee86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee88:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ee8c:	fb01 9103 	mla	r1, r1, r3, r9
 801ee90:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ee92:	00e4      	lsls	r4, r4, #3
 801ee94:	fb13 f707 	smulbb	r7, r3, r7
 801ee98:	b2e4      	uxtb	r4, r4
 801ee9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee9c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801eea0:	fb04 7403 	mla	r4, r4, r3, r7
 801eea4:	b280      	uxth	r0, r0
 801eea6:	b2a4      	uxth	r4, r4
 801eea8:	1c43      	adds	r3, r0, #1
 801eeaa:	f104 0901 	add.w	r9, r4, #1
 801eeae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801eeb2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801eeb6:	b289      	uxth	r1, r1
 801eeb8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801eebc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eec0:	ea49 0000 	orr.w	r0, r9, r0
 801eec4:	f101 0901 	add.w	r9, r1, #1
 801eec8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801eecc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801eed0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801eed4:	ea40 0009 	orr.w	r0, r0, r9
 801eed8:	f8ac 0000 	strh.w	r0, [ip]
 801eedc:	4446      	add	r6, r8
 801eede:	b2b6      	uxth	r6, r6
 801eee0:	2e07      	cmp	r6, #7
 801eee2:	bf81      	itttt	hi
 801eee4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801eee6:	785a      	ldrbhi	r2, [r3, #1]
 801eee8:	3301      	addhi	r3, #1
 801eeea:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801eeec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eeee:	bf9a      	itte	ls
 801eef0:	fa42 f208 	asrls.w	r2, r2, r8
 801eef4:	b2d2      	uxtbls	r2, r2
 801eef6:	2600      	movhi	r6, #0
 801eef8:	449c      	add	ip, r3
 801eefa:	e792      	b.n	801ee22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801eefc:	441c      	add	r4, r3
 801eefe:	b224      	sxth	r4, r4
 801ef00:	e6d5      	b.n	801ecae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ef02:	f1ba 0f01 	cmp.w	sl, #1
 801ef06:	f47f af0c 	bne.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef0a:	f1bb 0f01 	cmp.w	fp, #1
 801ef0e:	f47f af08 	bne.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef12:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801efd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ef16:	f8db 0000 	ldr.w	r0, [fp]
 801ef1a:	6803      	ldr	r3, [r0, #0]
 801ef1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ef1e:	4798      	blx	r3
 801ef20:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ef24:	465a      	mov	r2, fp
 801ef26:	d006      	beq.n	801ef36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ef28:	f1b8 0f04 	cmp.w	r8, #4
 801ef2c:	d140      	bne.n	801efb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ef2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef30:	3300      	adds	r3, #0
 801ef32:	bf18      	it	ne
 801ef34:	2301      	movne	r3, #1
 801ef36:	0580      	lsls	r0, r0, #22
 801ef38:	d56e      	bpl.n	801f018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ef3a:	f1b8 0f08 	cmp.w	r8, #8
 801ef3e:	d16b      	bne.n	801f018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ef40:	2b00      	cmp	r3, #0
 801ef42:	bf0c      	ite	eq
 801ef44:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ef48:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ef4c:	2d00      	cmp	r5, #0
 801ef4e:	f47f aee8 	bne.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef52:	2e00      	cmp	r6, #0
 801ef54:	f47f aee5 	bne.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef58:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ef5a:	19e3      	adds	r3, r4, r7
 801ef5c:	4283      	cmp	r3, r0
 801ef5e:	f73f aee0 	bgt.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef64:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ef66:	444b      	add	r3, r9
 801ef68:	4283      	cmp	r3, r0
 801ef6a:	f73f aeda 	bgt.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ef6e:	6810      	ldr	r0, [r2, #0]
 801ef70:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ef74:	6804      	ldr	r4, [r0, #0]
 801ef76:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ef7a:	b2bf      	uxth	r7, r7
 801ef7c:	f1b8 0f08 	cmp.w	r8, #8
 801ef80:	f04f 0500 	mov.w	r5, #0
 801ef84:	bf18      	it	ne
 801ef86:	3701      	addne	r7, #1
 801ef88:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ef8c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ef8e:	9104      	str	r1, [sp, #16]
 801ef90:	bf18      	it	ne
 801ef92:	f027 0701 	bicne.w	r7, r7, #1
 801ef96:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ef98:	bf18      	it	ne
 801ef9a:	b2bf      	uxthne	r7, r7
 801ef9c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801efa0:	e9cd 7900 	strd	r7, r9, [sp]
 801efa4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801efa6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801efa8:	47a0      	blx	r4
 801efaa:	b019      	add	sp, #100	; 0x64
 801efac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801efb0:	2300      	movs	r3, #0
 801efb2:	e7c0      	b.n	801ef36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801efb4:	2208      	movs	r2, #8
 801efb6:	fb92 f3f8 	sdiv	r3, r2, r8
 801efba:	1e5a      	subs	r2, r3, #1
 801efbc:	443a      	add	r2, r7
 801efbe:	fb92 f2f3 	sdiv	r2, r2, r3
 801efc2:	fb12 f203 	smulbb	r2, r2, r3
 801efc6:	b292      	uxth	r2, r2
 801efc8:	e6b0      	b.n	801ed2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801efca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801efcc:	e6ec      	b.n	801eda8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801efce:	bf00      	nop
 801efd0:	20012dac 	.word	0x20012dac
 801efd4:	20012db4 	.word	0x20012db4
 801efd8:	20012dae 	.word	0x20012dae
 801efdc:	00fff800 	.word	0x00fff800
 801efe0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801efe2:	e779      	b.n	801eed8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801efe4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801efe6:	b153      	cbz	r3, 801effe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801efe8:	441e      	add	r6, r3
 801efea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801efec:	b2b6      	uxth	r6, r6
 801efee:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801eff2:	f006 0607 	and.w	r6, r6, #7
 801eff6:	781a      	ldrb	r2, [r3, #0]
 801eff8:	9328      	str	r3, [sp, #160]	; 0xa0
 801effa:	4132      	asrs	r2, r6
 801effc:	b2d2      	uxtb	r2, r2
 801effe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f000:	445b      	add	r3, fp
 801f002:	930a      	str	r3, [sp, #40]	; 0x28
 801f004:	e706      	b.n	801ee14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f006:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f008:	2b00      	cmp	r3, #0
 801f00a:	d1ce      	bne.n	801efaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f00c:	4b05      	ldr	r3, [pc, #20]	; (801f024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f00e:	6818      	ldr	r0, [r3, #0]
 801f010:	6803      	ldr	r3, [r0, #0]
 801f012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f014:	4798      	blx	r3
 801f016:	e7c8      	b.n	801efaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f018:	2b00      	cmp	r3, #0
 801f01a:	f43f ae82 	beq.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f01e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f022:	e793      	b.n	801ef4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f024:	20012db4 	.word	0x20012db4

0801f028 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f028:	b538      	push	{r3, r4, r5, lr}
 801f02a:	4c15      	ldr	r4, [pc, #84]	; (801f080 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f02c:	7823      	ldrb	r3, [r4, #0]
 801f02e:	f3bf 8f5b 	dmb	ish
 801f032:	07da      	lsls	r2, r3, #31
 801f034:	4605      	mov	r5, r0
 801f036:	d40b      	bmi.n	801f050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f038:	4620      	mov	r0, r4
 801f03a:	f00a fee2 	bl	8029e02 <__cxa_guard_acquire>
 801f03e:	b138      	cbz	r0, 801f050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f040:	4620      	mov	r0, r4
 801f042:	f00a feea 	bl	8029e1a <__cxa_guard_release>
 801f046:	4a0f      	ldr	r2, [pc, #60]	; (801f084 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f048:	490f      	ldr	r1, [pc, #60]	; (801f088 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f04a:	4810      	ldr	r0, [pc, #64]	; (801f08c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f04c:	f00a fed2 	bl	8029df4 <__aeabi_atexit>
 801f050:	4c0f      	ldr	r4, [pc, #60]	; (801f090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f052:	7823      	ldrb	r3, [r4, #0]
 801f054:	f3bf 8f5b 	dmb	ish
 801f058:	07db      	lsls	r3, r3, #31
 801f05a:	d40b      	bmi.n	801f074 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f05c:	4620      	mov	r0, r4
 801f05e:	f00a fed0 	bl	8029e02 <__cxa_guard_acquire>
 801f062:	b138      	cbz	r0, 801f074 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f064:	4620      	mov	r0, r4
 801f066:	f00a fed8 	bl	8029e1a <__cxa_guard_release>
 801f06a:	4a06      	ldr	r2, [pc, #24]	; (801f084 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f06c:	4909      	ldr	r1, [pc, #36]	; (801f094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f06e:	480a      	ldr	r0, [pc, #40]	; (801f098 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f070:	f00a fec0 	bl	8029df4 <__aeabi_atexit>
 801f074:	4b05      	ldr	r3, [pc, #20]	; (801f08c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f076:	612b      	str	r3, [r5, #16]
 801f078:	4b07      	ldr	r3, [pc, #28]	; (801f098 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f07a:	616b      	str	r3, [r5, #20]
 801f07c:	bd38      	pop	{r3, r4, r5, pc}
 801f07e:	bf00      	nop
 801f080:	20012e94 	.word	0x20012e94
 801f084:	20000000 	.word	0x20000000
 801f088:	0801be2b 	.word	0x0801be2b
 801f08c:	200000d4 	.word	0x200000d4
 801f090:	20012e98 	.word	0x20012e98
 801f094:	0801be29 	.word	0x0801be29
 801f098:	200000d8 	.word	0x200000d8

0801f09c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f09c:	b538      	push	{r3, r4, r5, lr}
 801f09e:	4c15      	ldr	r4, [pc, #84]	; (801f0f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f0a0:	7823      	ldrb	r3, [r4, #0]
 801f0a2:	f3bf 8f5b 	dmb	ish
 801f0a6:	07da      	lsls	r2, r3, #31
 801f0a8:	4605      	mov	r5, r0
 801f0aa:	d40b      	bmi.n	801f0c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f0ac:	4620      	mov	r0, r4
 801f0ae:	f00a fea8 	bl	8029e02 <__cxa_guard_acquire>
 801f0b2:	b138      	cbz	r0, 801f0c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f0b4:	4620      	mov	r0, r4
 801f0b6:	f00a feb0 	bl	8029e1a <__cxa_guard_release>
 801f0ba:	4a0f      	ldr	r2, [pc, #60]	; (801f0f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f0bc:	490f      	ldr	r1, [pc, #60]	; (801f0fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f0be:	4810      	ldr	r0, [pc, #64]	; (801f100 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f0c0:	f00a fe98 	bl	8029df4 <__aeabi_atexit>
 801f0c4:	4c0f      	ldr	r4, [pc, #60]	; (801f104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f0c6:	7823      	ldrb	r3, [r4, #0]
 801f0c8:	f3bf 8f5b 	dmb	ish
 801f0cc:	07db      	lsls	r3, r3, #31
 801f0ce:	d40b      	bmi.n	801f0e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f0d0:	4620      	mov	r0, r4
 801f0d2:	f00a fe96 	bl	8029e02 <__cxa_guard_acquire>
 801f0d6:	b138      	cbz	r0, 801f0e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f0d8:	4620      	mov	r0, r4
 801f0da:	f00a fe9e 	bl	8029e1a <__cxa_guard_release>
 801f0de:	4a06      	ldr	r2, [pc, #24]	; (801f0f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f0e0:	4909      	ldr	r1, [pc, #36]	; (801f108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f0e2:	480a      	ldr	r0, [pc, #40]	; (801f10c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f0e4:	f00a fe86 	bl	8029df4 <__aeabi_atexit>
 801f0e8:	4b05      	ldr	r3, [pc, #20]	; (801f100 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f0ea:	60ab      	str	r3, [r5, #8]
 801f0ec:	4b07      	ldr	r3, [pc, #28]	; (801f10c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f0ee:	60eb      	str	r3, [r5, #12]
 801f0f0:	bd38      	pop	{r3, r4, r5, pc}
 801f0f2:	bf00      	nop
 801f0f4:	20012e6c 	.word	0x20012e6c
 801f0f8:	20000000 	.word	0x20000000
 801f0fc:	0801be2f 	.word	0x0801be2f
 801f100:	200000ac 	.word	0x200000ac
 801f104:	20012e70 	.word	0x20012e70
 801f108:	0801be2d 	.word	0x0801be2d
 801f10c:	200000b0 	.word	0x200000b0

0801f110 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f110:	b510      	push	{r4, lr}
 801f112:	4604      	mov	r4, r0
 801f114:	f7ff ff88 	bl	801f028 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f118:	4620      	mov	r0, r4
 801f11a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f11e:	f7ff bfbd 	b.w	801f09c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f124 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f124:	b538      	push	{r3, r4, r5, lr}
 801f126:	4c15      	ldr	r4, [pc, #84]	; (801f17c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f128:	7823      	ldrb	r3, [r4, #0]
 801f12a:	f3bf 8f5b 	dmb	ish
 801f12e:	07da      	lsls	r2, r3, #31
 801f130:	4605      	mov	r5, r0
 801f132:	d40b      	bmi.n	801f14c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f134:	4620      	mov	r0, r4
 801f136:	f00a fe64 	bl	8029e02 <__cxa_guard_acquire>
 801f13a:	b138      	cbz	r0, 801f14c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f13c:	4620      	mov	r0, r4
 801f13e:	f00a fe6c 	bl	8029e1a <__cxa_guard_release>
 801f142:	4a0f      	ldr	r2, [pc, #60]	; (801f180 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f144:	490f      	ldr	r1, [pc, #60]	; (801f184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f146:	4810      	ldr	r0, [pc, #64]	; (801f188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f148:	f00a fe54 	bl	8029df4 <__aeabi_atexit>
 801f14c:	4c0f      	ldr	r4, [pc, #60]	; (801f18c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f14e:	7823      	ldrb	r3, [r4, #0]
 801f150:	f3bf 8f5b 	dmb	ish
 801f154:	07db      	lsls	r3, r3, #31
 801f156:	d40b      	bmi.n	801f170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f158:	4620      	mov	r0, r4
 801f15a:	f00a fe52 	bl	8029e02 <__cxa_guard_acquire>
 801f15e:	b138      	cbz	r0, 801f170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f160:	4620      	mov	r0, r4
 801f162:	f00a fe5a 	bl	8029e1a <__cxa_guard_release>
 801f166:	4a06      	ldr	r2, [pc, #24]	; (801f180 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f168:	4909      	ldr	r1, [pc, #36]	; (801f190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f16a:	480a      	ldr	r0, [pc, #40]	; (801f194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f16c:	f00a fe42 	bl	8029df4 <__aeabi_atexit>
 801f170:	4b05      	ldr	r3, [pc, #20]	; (801f188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f172:	622b      	str	r3, [r5, #32]
 801f174:	4b07      	ldr	r3, [pc, #28]	; (801f194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f176:	626b      	str	r3, [r5, #36]	; 0x24
 801f178:	bd38      	pop	{r3, r4, r5, pc}
 801f17a:	bf00      	nop
 801f17c:	20012e9c 	.word	0x20012e9c
 801f180:	20000000 	.word	0x20000000
 801f184:	0801be23 	.word	0x0801be23
 801f188:	200000dc 	.word	0x200000dc
 801f18c:	20012ea0 	.word	0x20012ea0
 801f190:	0801be21 	.word	0x0801be21
 801f194:	200000e0 	.word	0x200000e0

0801f198 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f198:	b538      	push	{r3, r4, r5, lr}
 801f19a:	4c15      	ldr	r4, [pc, #84]	; (801f1f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f19c:	7823      	ldrb	r3, [r4, #0]
 801f19e:	f3bf 8f5b 	dmb	ish
 801f1a2:	07da      	lsls	r2, r3, #31
 801f1a4:	4605      	mov	r5, r0
 801f1a6:	d40b      	bmi.n	801f1c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f1a8:	4620      	mov	r0, r4
 801f1aa:	f00a fe2a 	bl	8029e02 <__cxa_guard_acquire>
 801f1ae:	b138      	cbz	r0, 801f1c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f1b0:	4620      	mov	r0, r4
 801f1b2:	f00a fe32 	bl	8029e1a <__cxa_guard_release>
 801f1b6:	4a0f      	ldr	r2, [pc, #60]	; (801f1f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f1b8:	490f      	ldr	r1, [pc, #60]	; (801f1f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f1ba:	4810      	ldr	r0, [pc, #64]	; (801f1fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f1bc:	f00a fe1a 	bl	8029df4 <__aeabi_atexit>
 801f1c0:	4c0f      	ldr	r4, [pc, #60]	; (801f200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f1c2:	7823      	ldrb	r3, [r4, #0]
 801f1c4:	f3bf 8f5b 	dmb	ish
 801f1c8:	07db      	lsls	r3, r3, #31
 801f1ca:	d40b      	bmi.n	801f1e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f1cc:	4620      	mov	r0, r4
 801f1ce:	f00a fe18 	bl	8029e02 <__cxa_guard_acquire>
 801f1d2:	b138      	cbz	r0, 801f1e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f1d4:	4620      	mov	r0, r4
 801f1d6:	f00a fe20 	bl	8029e1a <__cxa_guard_release>
 801f1da:	4a06      	ldr	r2, [pc, #24]	; (801f1f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f1dc:	4909      	ldr	r1, [pc, #36]	; (801f204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f1de:	480a      	ldr	r0, [pc, #40]	; (801f208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f1e0:	f00a fe08 	bl	8029df4 <__aeabi_atexit>
 801f1e4:	4b05      	ldr	r3, [pc, #20]	; (801f1fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f1e6:	61ab      	str	r3, [r5, #24]
 801f1e8:	4b07      	ldr	r3, [pc, #28]	; (801f208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f1ea:	61eb      	str	r3, [r5, #28]
 801f1ec:	bd38      	pop	{r3, r4, r5, pc}
 801f1ee:	bf00      	nop
 801f1f0:	20012e74 	.word	0x20012e74
 801f1f4:	20000000 	.word	0x20000000
 801f1f8:	0801be27 	.word	0x0801be27
 801f1fc:	200000b4 	.word	0x200000b4
 801f200:	20012e78 	.word	0x20012e78
 801f204:	0801be25 	.word	0x0801be25
 801f208:	200000b8 	.word	0x200000b8

0801f20c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f20c:	b510      	push	{r4, lr}
 801f20e:	4604      	mov	r4, r0
 801f210:	f7ff ff88 	bl	801f124 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f214:	4620      	mov	r0, r4
 801f216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f21a:	f7ff bfbd 	b.w	801f198 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f220 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f220:	b538      	push	{r3, r4, r5, lr}
 801f222:	4c15      	ldr	r4, [pc, #84]	; (801f278 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f224:	7823      	ldrb	r3, [r4, #0]
 801f226:	f3bf 8f5b 	dmb	ish
 801f22a:	07da      	lsls	r2, r3, #31
 801f22c:	4605      	mov	r5, r0
 801f22e:	d40b      	bmi.n	801f248 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f230:	4620      	mov	r0, r4
 801f232:	f00a fde6 	bl	8029e02 <__cxa_guard_acquire>
 801f236:	b138      	cbz	r0, 801f248 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f238:	4620      	mov	r0, r4
 801f23a:	f00a fdee 	bl	8029e1a <__cxa_guard_release>
 801f23e:	4a0f      	ldr	r2, [pc, #60]	; (801f27c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f240:	490f      	ldr	r1, [pc, #60]	; (801f280 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f242:	4810      	ldr	r0, [pc, #64]	; (801f284 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f244:	f00a fdd6 	bl	8029df4 <__aeabi_atexit>
 801f248:	4c0f      	ldr	r4, [pc, #60]	; (801f288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f24a:	7823      	ldrb	r3, [r4, #0]
 801f24c:	f3bf 8f5b 	dmb	ish
 801f250:	07db      	lsls	r3, r3, #31
 801f252:	d40b      	bmi.n	801f26c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f254:	4620      	mov	r0, r4
 801f256:	f00a fdd4 	bl	8029e02 <__cxa_guard_acquire>
 801f25a:	b138      	cbz	r0, 801f26c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f25c:	4620      	mov	r0, r4
 801f25e:	f00a fddc 	bl	8029e1a <__cxa_guard_release>
 801f262:	4a06      	ldr	r2, [pc, #24]	; (801f27c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f264:	4909      	ldr	r1, [pc, #36]	; (801f28c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f266:	480a      	ldr	r0, [pc, #40]	; (801f290 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f268:	f00a fdc4 	bl	8029df4 <__aeabi_atexit>
 801f26c:	4b05      	ldr	r3, [pc, #20]	; (801f284 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f26e:	632b      	str	r3, [r5, #48]	; 0x30
 801f270:	4b07      	ldr	r3, [pc, #28]	; (801f290 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f272:	636b      	str	r3, [r5, #52]	; 0x34
 801f274:	bd38      	pop	{r3, r4, r5, pc}
 801f276:	bf00      	nop
 801f278:	20012eac 	.word	0x20012eac
 801f27c:	20000000 	.word	0x20000000
 801f280:	0801be1b 	.word	0x0801be1b
 801f284:	200000ec 	.word	0x200000ec
 801f288:	20012eb0 	.word	0x20012eb0
 801f28c:	0801be19 	.word	0x0801be19
 801f290:	200000f0 	.word	0x200000f0

0801f294 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f294:	b538      	push	{r3, r4, r5, lr}
 801f296:	4c15      	ldr	r4, [pc, #84]	; (801f2ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f298:	7823      	ldrb	r3, [r4, #0]
 801f29a:	f3bf 8f5b 	dmb	ish
 801f29e:	07da      	lsls	r2, r3, #31
 801f2a0:	4605      	mov	r5, r0
 801f2a2:	d40b      	bmi.n	801f2bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f2a4:	4620      	mov	r0, r4
 801f2a6:	f00a fdac 	bl	8029e02 <__cxa_guard_acquire>
 801f2aa:	b138      	cbz	r0, 801f2bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f2ac:	4620      	mov	r0, r4
 801f2ae:	f00a fdb4 	bl	8029e1a <__cxa_guard_release>
 801f2b2:	4a0f      	ldr	r2, [pc, #60]	; (801f2f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f2b4:	490f      	ldr	r1, [pc, #60]	; (801f2f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f2b6:	4810      	ldr	r0, [pc, #64]	; (801f2f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f2b8:	f00a fd9c 	bl	8029df4 <__aeabi_atexit>
 801f2bc:	4c0f      	ldr	r4, [pc, #60]	; (801f2fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f2be:	7823      	ldrb	r3, [r4, #0]
 801f2c0:	f3bf 8f5b 	dmb	ish
 801f2c4:	07db      	lsls	r3, r3, #31
 801f2c6:	d40b      	bmi.n	801f2e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f2c8:	4620      	mov	r0, r4
 801f2ca:	f00a fd9a 	bl	8029e02 <__cxa_guard_acquire>
 801f2ce:	b138      	cbz	r0, 801f2e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f2d0:	4620      	mov	r0, r4
 801f2d2:	f00a fda2 	bl	8029e1a <__cxa_guard_release>
 801f2d6:	4a06      	ldr	r2, [pc, #24]	; (801f2f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f2d8:	4909      	ldr	r1, [pc, #36]	; (801f300 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f2da:	480a      	ldr	r0, [pc, #40]	; (801f304 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f2dc:	f00a fd8a 	bl	8029df4 <__aeabi_atexit>
 801f2e0:	4b05      	ldr	r3, [pc, #20]	; (801f2f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f2e2:	62ab      	str	r3, [r5, #40]	; 0x28
 801f2e4:	4b07      	ldr	r3, [pc, #28]	; (801f304 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f2e6:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f2e8:	bd38      	pop	{r3, r4, r5, pc}
 801f2ea:	bf00      	nop
 801f2ec:	20012e7c 	.word	0x20012e7c
 801f2f0:	20000000 	.word	0x20000000
 801f2f4:	0801be1f 	.word	0x0801be1f
 801f2f8:	200000bc 	.word	0x200000bc
 801f2fc:	20012e80 	.word	0x20012e80
 801f300:	0801be1d 	.word	0x0801be1d
 801f304:	200000c0 	.word	0x200000c0

0801f308 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f308:	b510      	push	{r4, lr}
 801f30a:	4604      	mov	r4, r0
 801f30c:	f7ff ff88 	bl	801f220 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f310:	4620      	mov	r0, r4
 801f312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f316:	f7ff bfbd 	b.w	801f294 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f31c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f31c:	b538      	push	{r3, r4, r5, lr}
 801f31e:	4c15      	ldr	r4, [pc, #84]	; (801f374 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f320:	7823      	ldrb	r3, [r4, #0]
 801f322:	f3bf 8f5b 	dmb	ish
 801f326:	07da      	lsls	r2, r3, #31
 801f328:	4605      	mov	r5, r0
 801f32a:	d40b      	bmi.n	801f344 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f32c:	4620      	mov	r0, r4
 801f32e:	f00a fd68 	bl	8029e02 <__cxa_guard_acquire>
 801f332:	b138      	cbz	r0, 801f344 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f334:	4620      	mov	r0, r4
 801f336:	f00a fd70 	bl	8029e1a <__cxa_guard_release>
 801f33a:	4a0f      	ldr	r2, [pc, #60]	; (801f378 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f33c:	490f      	ldr	r1, [pc, #60]	; (801f37c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f33e:	4810      	ldr	r0, [pc, #64]	; (801f380 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f340:	f00a fd58 	bl	8029df4 <__aeabi_atexit>
 801f344:	4c0f      	ldr	r4, [pc, #60]	; (801f384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f346:	7823      	ldrb	r3, [r4, #0]
 801f348:	f3bf 8f5b 	dmb	ish
 801f34c:	07db      	lsls	r3, r3, #31
 801f34e:	d40b      	bmi.n	801f368 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f350:	4620      	mov	r0, r4
 801f352:	f00a fd56 	bl	8029e02 <__cxa_guard_acquire>
 801f356:	b138      	cbz	r0, 801f368 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f358:	4620      	mov	r0, r4
 801f35a:	f00a fd5e 	bl	8029e1a <__cxa_guard_release>
 801f35e:	4a06      	ldr	r2, [pc, #24]	; (801f378 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f360:	4909      	ldr	r1, [pc, #36]	; (801f388 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f362:	480a      	ldr	r0, [pc, #40]	; (801f38c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f364:	f00a fd46 	bl	8029df4 <__aeabi_atexit>
 801f368:	4b05      	ldr	r3, [pc, #20]	; (801f380 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f36a:	652b      	str	r3, [r5, #80]	; 0x50
 801f36c:	4b07      	ldr	r3, [pc, #28]	; (801f38c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f36e:	656b      	str	r3, [r5, #84]	; 0x54
 801f370:	bd38      	pop	{r3, r4, r5, pc}
 801f372:	bf00      	nop
 801f374:	20012eb4 	.word	0x20012eb4
 801f378:	20000000 	.word	0x20000000
 801f37c:	0801be0b 	.word	0x0801be0b
 801f380:	200000f4 	.word	0x200000f4
 801f384:	20012eb8 	.word	0x20012eb8
 801f388:	0801be09 	.word	0x0801be09
 801f38c:	200000f8 	.word	0x200000f8

0801f390 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f390:	b538      	push	{r3, r4, r5, lr}
 801f392:	4c15      	ldr	r4, [pc, #84]	; (801f3e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f394:	7823      	ldrb	r3, [r4, #0]
 801f396:	f3bf 8f5b 	dmb	ish
 801f39a:	07da      	lsls	r2, r3, #31
 801f39c:	4605      	mov	r5, r0
 801f39e:	d40b      	bmi.n	801f3b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f3a0:	4620      	mov	r0, r4
 801f3a2:	f00a fd2e 	bl	8029e02 <__cxa_guard_acquire>
 801f3a6:	b138      	cbz	r0, 801f3b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f3a8:	4620      	mov	r0, r4
 801f3aa:	f00a fd36 	bl	8029e1a <__cxa_guard_release>
 801f3ae:	4a0f      	ldr	r2, [pc, #60]	; (801f3ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f3b0:	490f      	ldr	r1, [pc, #60]	; (801f3f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f3b2:	4810      	ldr	r0, [pc, #64]	; (801f3f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f3b4:	f00a fd1e 	bl	8029df4 <__aeabi_atexit>
 801f3b8:	4c0f      	ldr	r4, [pc, #60]	; (801f3f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f3ba:	7823      	ldrb	r3, [r4, #0]
 801f3bc:	f3bf 8f5b 	dmb	ish
 801f3c0:	07db      	lsls	r3, r3, #31
 801f3c2:	d40b      	bmi.n	801f3dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f3c4:	4620      	mov	r0, r4
 801f3c6:	f00a fd1c 	bl	8029e02 <__cxa_guard_acquire>
 801f3ca:	b138      	cbz	r0, 801f3dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f3cc:	4620      	mov	r0, r4
 801f3ce:	f00a fd24 	bl	8029e1a <__cxa_guard_release>
 801f3d2:	4a06      	ldr	r2, [pc, #24]	; (801f3ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f3d4:	4909      	ldr	r1, [pc, #36]	; (801f3fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f3d6:	480a      	ldr	r0, [pc, #40]	; (801f400 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f3d8:	f00a fd0c 	bl	8029df4 <__aeabi_atexit>
 801f3dc:	4b05      	ldr	r3, [pc, #20]	; (801f3f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f3de:	64ab      	str	r3, [r5, #72]	; 0x48
 801f3e0:	4b07      	ldr	r3, [pc, #28]	; (801f400 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f3e2:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f3e4:	bd38      	pop	{r3, r4, r5, pc}
 801f3e6:	bf00      	nop
 801f3e8:	20012ebc 	.word	0x20012ebc
 801f3ec:	20000000 	.word	0x20000000
 801f3f0:	0801be0f 	.word	0x0801be0f
 801f3f4:	200000fc 	.word	0x200000fc
 801f3f8:	20012ec0 	.word	0x20012ec0
 801f3fc:	0801be0d 	.word	0x0801be0d
 801f400:	20000100 	.word	0x20000100

0801f404 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f404:	b538      	push	{r3, r4, r5, lr}
 801f406:	4c15      	ldr	r4, [pc, #84]	; (801f45c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f408:	7823      	ldrb	r3, [r4, #0]
 801f40a:	f3bf 8f5b 	dmb	ish
 801f40e:	07da      	lsls	r2, r3, #31
 801f410:	4605      	mov	r5, r0
 801f412:	d40b      	bmi.n	801f42c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f414:	4620      	mov	r0, r4
 801f416:	f00a fcf4 	bl	8029e02 <__cxa_guard_acquire>
 801f41a:	b138      	cbz	r0, 801f42c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f41c:	4620      	mov	r0, r4
 801f41e:	f00a fcfc 	bl	8029e1a <__cxa_guard_release>
 801f422:	4a0f      	ldr	r2, [pc, #60]	; (801f460 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f424:	490f      	ldr	r1, [pc, #60]	; (801f464 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f426:	4810      	ldr	r0, [pc, #64]	; (801f468 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f428:	f00a fce4 	bl	8029df4 <__aeabi_atexit>
 801f42c:	4c0f      	ldr	r4, [pc, #60]	; (801f46c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f42e:	7823      	ldrb	r3, [r4, #0]
 801f430:	f3bf 8f5b 	dmb	ish
 801f434:	07db      	lsls	r3, r3, #31
 801f436:	d40b      	bmi.n	801f450 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f438:	4620      	mov	r0, r4
 801f43a:	f00a fce2 	bl	8029e02 <__cxa_guard_acquire>
 801f43e:	b138      	cbz	r0, 801f450 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f440:	4620      	mov	r0, r4
 801f442:	f00a fcea 	bl	8029e1a <__cxa_guard_release>
 801f446:	4a06      	ldr	r2, [pc, #24]	; (801f460 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f448:	4909      	ldr	r1, [pc, #36]	; (801f470 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f44a:	480a      	ldr	r0, [pc, #40]	; (801f474 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f44c:	f00a fcd2 	bl	8029df4 <__aeabi_atexit>
 801f450:	4b05      	ldr	r3, [pc, #20]	; (801f468 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f452:	642b      	str	r3, [r5, #64]	; 0x40
 801f454:	4b07      	ldr	r3, [pc, #28]	; (801f474 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f456:	646b      	str	r3, [r5, #68]	; 0x44
 801f458:	bd38      	pop	{r3, r4, r5, pc}
 801f45a:	bf00      	nop
 801f45c:	20012e84 	.word	0x20012e84
 801f460:	20000000 	.word	0x20000000
 801f464:	0801be13 	.word	0x0801be13
 801f468:	200000c4 	.word	0x200000c4
 801f46c:	20012e88 	.word	0x20012e88
 801f470:	0801be11 	.word	0x0801be11
 801f474:	200000c8 	.word	0x200000c8

0801f478 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f478:	b538      	push	{r3, r4, r5, lr}
 801f47a:	4c15      	ldr	r4, [pc, #84]	; (801f4d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f47c:	7823      	ldrb	r3, [r4, #0]
 801f47e:	f3bf 8f5b 	dmb	ish
 801f482:	07da      	lsls	r2, r3, #31
 801f484:	4605      	mov	r5, r0
 801f486:	d40b      	bmi.n	801f4a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f488:	4620      	mov	r0, r4
 801f48a:	f00a fcba 	bl	8029e02 <__cxa_guard_acquire>
 801f48e:	b138      	cbz	r0, 801f4a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f490:	4620      	mov	r0, r4
 801f492:	f00a fcc2 	bl	8029e1a <__cxa_guard_release>
 801f496:	4a0f      	ldr	r2, [pc, #60]	; (801f4d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f498:	490f      	ldr	r1, [pc, #60]	; (801f4d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f49a:	4810      	ldr	r0, [pc, #64]	; (801f4dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f49c:	f00a fcaa 	bl	8029df4 <__aeabi_atexit>
 801f4a0:	4c0f      	ldr	r4, [pc, #60]	; (801f4e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f4a2:	7823      	ldrb	r3, [r4, #0]
 801f4a4:	f3bf 8f5b 	dmb	ish
 801f4a8:	07db      	lsls	r3, r3, #31
 801f4aa:	d40b      	bmi.n	801f4c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f4ac:	4620      	mov	r0, r4
 801f4ae:	f00a fca8 	bl	8029e02 <__cxa_guard_acquire>
 801f4b2:	b138      	cbz	r0, 801f4c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f4b4:	4620      	mov	r0, r4
 801f4b6:	f00a fcb0 	bl	8029e1a <__cxa_guard_release>
 801f4ba:	4a06      	ldr	r2, [pc, #24]	; (801f4d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f4bc:	4909      	ldr	r1, [pc, #36]	; (801f4e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f4be:	480a      	ldr	r0, [pc, #40]	; (801f4e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f4c0:	f00a fc98 	bl	8029df4 <__aeabi_atexit>
 801f4c4:	4b05      	ldr	r3, [pc, #20]	; (801f4dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f4c6:	63ab      	str	r3, [r5, #56]	; 0x38
 801f4c8:	4b07      	ldr	r3, [pc, #28]	; (801f4e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f4ca:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f4cc:	bd38      	pop	{r3, r4, r5, pc}
 801f4ce:	bf00      	nop
 801f4d0:	20012ea4 	.word	0x20012ea4
 801f4d4:	20000000 	.word	0x20000000
 801f4d8:	0801be17 	.word	0x0801be17
 801f4dc:	200000e4 	.word	0x200000e4
 801f4e0:	20012ea8 	.word	0x20012ea8
 801f4e4:	0801be15 	.word	0x0801be15
 801f4e8:	200000e8 	.word	0x200000e8

0801f4ec <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f4ec:	b510      	push	{r4, lr}
 801f4ee:	4604      	mov	r4, r0
 801f4f0:	f7ff ff14 	bl	801f31c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f4f4:	4620      	mov	r0, r4
 801f4f6:	f7ff ff85 	bl	801f404 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f4fa:	4620      	mov	r0, r4
 801f4fc:	f7ff ff48 	bl	801f390 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f500:	4620      	mov	r0, r4
 801f502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f506:	f7ff bfb7 	b.w	801f478 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f50c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f50c:	b538      	push	{r3, r4, r5, lr}
 801f50e:	4c15      	ldr	r4, [pc, #84]	; (801f564 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f510:	7823      	ldrb	r3, [r4, #0]
 801f512:	f3bf 8f5b 	dmb	ish
 801f516:	07da      	lsls	r2, r3, #31
 801f518:	4605      	mov	r5, r0
 801f51a:	d40b      	bmi.n	801f534 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f51c:	4620      	mov	r0, r4
 801f51e:	f00a fc70 	bl	8029e02 <__cxa_guard_acquire>
 801f522:	b138      	cbz	r0, 801f534 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f524:	4620      	mov	r0, r4
 801f526:	f00a fc78 	bl	8029e1a <__cxa_guard_release>
 801f52a:	4a0f      	ldr	r2, [pc, #60]	; (801f568 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f52c:	490f      	ldr	r1, [pc, #60]	; (801f56c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f52e:	4810      	ldr	r0, [pc, #64]	; (801f570 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f530:	f00a fc60 	bl	8029df4 <__aeabi_atexit>
 801f534:	4c0f      	ldr	r4, [pc, #60]	; (801f574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f536:	7823      	ldrb	r3, [r4, #0]
 801f538:	f3bf 8f5b 	dmb	ish
 801f53c:	07db      	lsls	r3, r3, #31
 801f53e:	d40b      	bmi.n	801f558 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f540:	4620      	mov	r0, r4
 801f542:	f00a fc5e 	bl	8029e02 <__cxa_guard_acquire>
 801f546:	b138      	cbz	r0, 801f558 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f548:	4620      	mov	r0, r4
 801f54a:	f00a fc66 	bl	8029e1a <__cxa_guard_release>
 801f54e:	4a06      	ldr	r2, [pc, #24]	; (801f568 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f550:	4909      	ldr	r1, [pc, #36]	; (801f578 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f552:	480a      	ldr	r0, [pc, #40]	; (801f57c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f554:	f00a fc4e 	bl	8029df4 <__aeabi_atexit>
 801f558:	4b05      	ldr	r3, [pc, #20]	; (801f570 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f55a:	662b      	str	r3, [r5, #96]	; 0x60
 801f55c:	4b07      	ldr	r3, [pc, #28]	; (801f57c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f55e:	666b      	str	r3, [r5, #100]	; 0x64
 801f560:	bd38      	pop	{r3, r4, r5, pc}
 801f562:	bf00      	nop
 801f564:	20012e8c 	.word	0x20012e8c
 801f568:	20000000 	.word	0x20000000
 801f56c:	0801be03 	.word	0x0801be03
 801f570:	200000cc 	.word	0x200000cc
 801f574:	20012e90 	.word	0x20012e90
 801f578:	0801be01 	.word	0x0801be01
 801f57c:	200000d0 	.word	0x200000d0

0801f580 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f580:	b538      	push	{r3, r4, r5, lr}
 801f582:	4c15      	ldr	r4, [pc, #84]	; (801f5d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f584:	7823      	ldrb	r3, [r4, #0]
 801f586:	f3bf 8f5b 	dmb	ish
 801f58a:	07da      	lsls	r2, r3, #31
 801f58c:	4605      	mov	r5, r0
 801f58e:	d40b      	bmi.n	801f5a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f590:	4620      	mov	r0, r4
 801f592:	f00a fc36 	bl	8029e02 <__cxa_guard_acquire>
 801f596:	b138      	cbz	r0, 801f5a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f598:	4620      	mov	r0, r4
 801f59a:	f00a fc3e 	bl	8029e1a <__cxa_guard_release>
 801f59e:	4a0f      	ldr	r2, [pc, #60]	; (801f5dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f5a0:	490f      	ldr	r1, [pc, #60]	; (801f5e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f5a2:	4810      	ldr	r0, [pc, #64]	; (801f5e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f5a4:	f00a fc26 	bl	8029df4 <__aeabi_atexit>
 801f5a8:	4c0f      	ldr	r4, [pc, #60]	; (801f5e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f5aa:	7823      	ldrb	r3, [r4, #0]
 801f5ac:	f3bf 8f5b 	dmb	ish
 801f5b0:	07db      	lsls	r3, r3, #31
 801f5b2:	d40b      	bmi.n	801f5cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f5b4:	4620      	mov	r0, r4
 801f5b6:	f00a fc24 	bl	8029e02 <__cxa_guard_acquire>
 801f5ba:	b138      	cbz	r0, 801f5cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f5bc:	4620      	mov	r0, r4
 801f5be:	f00a fc2c 	bl	8029e1a <__cxa_guard_release>
 801f5c2:	4a06      	ldr	r2, [pc, #24]	; (801f5dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f5c4:	4909      	ldr	r1, [pc, #36]	; (801f5ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f5c6:	480a      	ldr	r0, [pc, #40]	; (801f5f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f5c8:	f00a fc14 	bl	8029df4 <__aeabi_atexit>
 801f5cc:	4b05      	ldr	r3, [pc, #20]	; (801f5e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f5ce:	65ab      	str	r3, [r5, #88]	; 0x58
 801f5d0:	4b07      	ldr	r3, [pc, #28]	; (801f5f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f5d2:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f5d4:	bd38      	pop	{r3, r4, r5, pc}
 801f5d6:	bf00      	nop
 801f5d8:	20012e64 	.word	0x20012e64
 801f5dc:	20000000 	.word	0x20000000
 801f5e0:	0801be07 	.word	0x0801be07
 801f5e4:	200000a4 	.word	0x200000a4
 801f5e8:	20012e68 	.word	0x20012e68
 801f5ec:	0801be05 	.word	0x0801be05
 801f5f0:	200000a8 	.word	0x200000a8

0801f5f4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f5f4:	b510      	push	{r4, lr}
 801f5f6:	4604      	mov	r4, r0
 801f5f8:	f7ff ff88 	bl	801f50c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f5fc:	4620      	mov	r0, r4
 801f5fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f602:	f7ff bfbd 	b.w	801f580 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f608:	b538      	push	{r3, r4, r5, lr}
 801f60a:	4c15      	ldr	r4, [pc, #84]	; (801f660 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f60c:	7823      	ldrb	r3, [r4, #0]
 801f60e:	f3bf 8f5b 	dmb	ish
 801f612:	07da      	lsls	r2, r3, #31
 801f614:	4605      	mov	r5, r0
 801f616:	d40b      	bmi.n	801f630 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f618:	4620      	mov	r0, r4
 801f61a:	f00a fbf2 	bl	8029e02 <__cxa_guard_acquire>
 801f61e:	b138      	cbz	r0, 801f630 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f620:	4620      	mov	r0, r4
 801f622:	f00a fbfa 	bl	8029e1a <__cxa_guard_release>
 801f626:	4a0f      	ldr	r2, [pc, #60]	; (801f664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f628:	490f      	ldr	r1, [pc, #60]	; (801f668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f62a:	4810      	ldr	r0, [pc, #64]	; (801f66c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f62c:	f00a fbe2 	bl	8029df4 <__aeabi_atexit>
 801f630:	4c0f      	ldr	r4, [pc, #60]	; (801f670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f632:	7823      	ldrb	r3, [r4, #0]
 801f634:	f3bf 8f5b 	dmb	ish
 801f638:	07db      	lsls	r3, r3, #31
 801f63a:	d40b      	bmi.n	801f654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f63c:	4620      	mov	r0, r4
 801f63e:	f00a fbe0 	bl	8029e02 <__cxa_guard_acquire>
 801f642:	b138      	cbz	r0, 801f654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f644:	4620      	mov	r0, r4
 801f646:	f00a fbe8 	bl	8029e1a <__cxa_guard_release>
 801f64a:	4a06      	ldr	r2, [pc, #24]	; (801f664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f64c:	4909      	ldr	r1, [pc, #36]	; (801f674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f64e:	480a      	ldr	r0, [pc, #40]	; (801f678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f650:	f00a fbd0 	bl	8029df4 <__aeabi_atexit>
 801f654:	4b05      	ldr	r3, [pc, #20]	; (801f66c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f656:	672b      	str	r3, [r5, #112]	; 0x70
 801f658:	4b07      	ldr	r3, [pc, #28]	; (801f678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f65a:	676b      	str	r3, [r5, #116]	; 0x74
 801f65c:	bd38      	pop	{r3, r4, r5, pc}
 801f65e:	bf00      	nop
 801f660:	20012e5c 	.word	0x20012e5c
 801f664:	20000000 	.word	0x20000000
 801f668:	0801bdfb 	.word	0x0801bdfb
 801f66c:	2000009c 	.word	0x2000009c
 801f670:	20012e60 	.word	0x20012e60
 801f674:	0801bdf9 	.word	0x0801bdf9
 801f678:	200000a0 	.word	0x200000a0

0801f67c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f67c:	b538      	push	{r3, r4, r5, lr}
 801f67e:	4c15      	ldr	r4, [pc, #84]	; (801f6d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f680:	7823      	ldrb	r3, [r4, #0]
 801f682:	f3bf 8f5b 	dmb	ish
 801f686:	07da      	lsls	r2, r3, #31
 801f688:	4605      	mov	r5, r0
 801f68a:	d40b      	bmi.n	801f6a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f68c:	4620      	mov	r0, r4
 801f68e:	f00a fbb8 	bl	8029e02 <__cxa_guard_acquire>
 801f692:	b138      	cbz	r0, 801f6a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f694:	4620      	mov	r0, r4
 801f696:	f00a fbc0 	bl	8029e1a <__cxa_guard_release>
 801f69a:	4a0f      	ldr	r2, [pc, #60]	; (801f6d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f69c:	490f      	ldr	r1, [pc, #60]	; (801f6dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f69e:	4810      	ldr	r0, [pc, #64]	; (801f6e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f6a0:	f00a fba8 	bl	8029df4 <__aeabi_atexit>
 801f6a4:	4c0f      	ldr	r4, [pc, #60]	; (801f6e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f6a6:	7823      	ldrb	r3, [r4, #0]
 801f6a8:	f3bf 8f5b 	dmb	ish
 801f6ac:	07db      	lsls	r3, r3, #31
 801f6ae:	d40b      	bmi.n	801f6c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f6b0:	4620      	mov	r0, r4
 801f6b2:	f00a fba6 	bl	8029e02 <__cxa_guard_acquire>
 801f6b6:	b138      	cbz	r0, 801f6c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f6b8:	4620      	mov	r0, r4
 801f6ba:	f00a fbae 	bl	8029e1a <__cxa_guard_release>
 801f6be:	4a06      	ldr	r2, [pc, #24]	; (801f6d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f6c0:	4909      	ldr	r1, [pc, #36]	; (801f6e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f6c2:	480a      	ldr	r0, [pc, #40]	; (801f6ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f6c4:	f00a fb96 	bl	8029df4 <__aeabi_atexit>
 801f6c8:	4b05      	ldr	r3, [pc, #20]	; (801f6e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f6ca:	66ab      	str	r3, [r5, #104]	; 0x68
 801f6cc:	4b07      	ldr	r3, [pc, #28]	; (801f6ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f6ce:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f6d0:	bd38      	pop	{r3, r4, r5, pc}
 801f6d2:	bf00      	nop
 801f6d4:	20012e54 	.word	0x20012e54
 801f6d8:	20000000 	.word	0x20000000
 801f6dc:	0801bdff 	.word	0x0801bdff
 801f6e0:	20000094 	.word	0x20000094
 801f6e4:	20012e58 	.word	0x20012e58
 801f6e8:	0801bdfd 	.word	0x0801bdfd
 801f6ec:	20000098 	.word	0x20000098

0801f6f0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f6f0:	b510      	push	{r4, lr}
 801f6f2:	4604      	mov	r4, r0
 801f6f4:	f7ff ff88 	bl	801f608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f6f8:	4620      	mov	r0, r4
 801f6fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f6fe:	f7ff bfbd 	b.w	801f67c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f702 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f702:	b510      	push	{r4, lr}
 801f704:	4604      	mov	r4, r0
 801f706:	f7ff fff3 	bl	801f6f0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f70a:	4620      	mov	r0, r4
 801f70c:	f7ff ff72 	bl	801f5f4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f710:	4620      	mov	r0, r4
 801f712:	f7ff fdf9 	bl	801f308 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f716:	4620      	mov	r0, r4
 801f718:	f7ff fcfa 	bl	801f110 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f71c:	4620      	mov	r0, r4
 801f71e:	f7ff fd75 	bl	801f20c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f722:	4620      	mov	r0, r4
 801f724:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f728:	f7ff bee0 	b.w	801f4ec <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f72c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f72c:	b538      	push	{r3, r4, r5, lr}
 801f72e:	4c0b      	ldr	r4, [pc, #44]	; (801f75c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f730:	7823      	ldrb	r3, [r4, #0]
 801f732:	f3bf 8f5b 	dmb	ish
 801f736:	07db      	lsls	r3, r3, #31
 801f738:	4605      	mov	r5, r0
 801f73a:	d40b      	bmi.n	801f754 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f73c:	4620      	mov	r0, r4
 801f73e:	f00a fb60 	bl	8029e02 <__cxa_guard_acquire>
 801f742:	b138      	cbz	r0, 801f754 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f744:	4620      	mov	r0, r4
 801f746:	f00a fb68 	bl	8029e1a <__cxa_guard_release>
 801f74a:	4a05      	ldr	r2, [pc, #20]	; (801f760 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f74c:	4905      	ldr	r1, [pc, #20]	; (801f764 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f74e:	4806      	ldr	r0, [pc, #24]	; (801f768 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f750:	f00a fb50 	bl	8029df4 <__aeabi_atexit>
 801f754:	4b04      	ldr	r3, [pc, #16]	; (801f768 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f756:	67ab      	str	r3, [r5, #120]	; 0x78
 801f758:	bd38      	pop	{r3, r4, r5, pc}
 801f75a:	bf00      	nop
 801f75c:	20012e48 	.word	0x20012e48
 801f760:	20000000 	.word	0x20000000
 801f764:	0801bdf7 	.word	0x0801bdf7
 801f768:	2000008c 	.word	0x2000008c

0801f76c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f76c:	b538      	push	{r3, r4, r5, lr}
 801f76e:	4c0b      	ldr	r4, [pc, #44]	; (801f79c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f770:	7823      	ldrb	r3, [r4, #0]
 801f772:	f3bf 8f5b 	dmb	ish
 801f776:	07db      	lsls	r3, r3, #31
 801f778:	4605      	mov	r5, r0
 801f77a:	d40b      	bmi.n	801f794 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f77c:	4620      	mov	r0, r4
 801f77e:	f00a fb40 	bl	8029e02 <__cxa_guard_acquire>
 801f782:	b138      	cbz	r0, 801f794 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f784:	4620      	mov	r0, r4
 801f786:	f00a fb48 	bl	8029e1a <__cxa_guard_release>
 801f78a:	4a05      	ldr	r2, [pc, #20]	; (801f7a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f78c:	4905      	ldr	r1, [pc, #20]	; (801f7a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f78e:	4806      	ldr	r0, [pc, #24]	; (801f7a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f790:	f00a fb30 	bl	8029df4 <__aeabi_atexit>
 801f794:	4b04      	ldr	r3, [pc, #16]	; (801f7a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f796:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f798:	bd38      	pop	{r3, r4, r5, pc}
 801f79a:	bf00      	nop
 801f79c:	20012e4c 	.word	0x20012e4c
 801f7a0:	20000000 	.word	0x20000000
 801f7a4:	0801bdf5 	.word	0x0801bdf5
 801f7a8:	20000090 	.word	0x20000090

0801f7ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f7ac:	b570      	push	{r4, r5, r6, lr}
 801f7ae:	4d0d      	ldr	r5, [pc, #52]	; (801f7e4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f7b0:	4c0d      	ldr	r4, [pc, #52]	; (801f7e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f7b2:	782b      	ldrb	r3, [r5, #0]
 801f7b4:	f3bf 8f5b 	dmb	ish
 801f7b8:	f013 0f01 	tst.w	r3, #1
 801f7bc:	4606      	mov	r6, r0
 801f7be:	d10d      	bne.n	801f7dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f7c0:	4628      	mov	r0, r5
 801f7c2:	f00a fb1e 	bl	8029e02 <__cxa_guard_acquire>
 801f7c6:	b148      	cbz	r0, 801f7dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f7c8:	4b08      	ldr	r3, [pc, #32]	; (801f7ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f7ca:	6023      	str	r3, [r4, #0]
 801f7cc:	4628      	mov	r0, r5
 801f7ce:	f00a fb24 	bl	8029e1a <__cxa_guard_release>
 801f7d2:	4a07      	ldr	r2, [pc, #28]	; (801f7f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f7d4:	4907      	ldr	r1, [pc, #28]	; (801f7f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f7d6:	4620      	mov	r0, r4
 801f7d8:	f00a fb0c 	bl	8029df4 <__aeabi_atexit>
 801f7dc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f7e0:	bd70      	pop	{r4, r5, r6, pc}
 801f7e2:	bf00      	nop
 801f7e4:	20012e50 	.word	0x20012e50
 801f7e8:	20012ec4 	.word	0x20012ec4
 801f7ec:	0802f59c 	.word	0x0802f59c
 801f7f0:	20000000 	.word	0x20000000
 801f7f4:	0801bdf3 	.word	0x0801bdf3

0801f7f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f7f8:	b510      	push	{r4, lr}
 801f7fa:	4604      	mov	r4, r0
 801f7fc:	f7ff ff96 	bl	801f72c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f800:	4620      	mov	r0, r4
 801f802:	f7ff ffb3 	bl	801f76c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f806:	4620      	mov	r0, r4
 801f808:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f80c:	f7ff bfce 	b.w	801f7ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f814:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f818:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f81c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f820:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f824:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f828:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f82c:	8808      	ldrh	r0, [r1, #0]
 801f82e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f832:	2d00      	cmp	r5, #0
 801f834:	eb02 0a0c 	add.w	sl, r2, ip
 801f838:	f2c0 80b0 	blt.w	801f99c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f83c:	45ab      	cmp	fp, r5
 801f83e:	f340 80ad 	ble.w	801f99c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f842:	2c00      	cmp	r4, #0
 801f844:	f2c0 80a8 	blt.w	801f998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f848:	45a6      	cmp	lr, r4
 801f84a:	f340 80a5 	ble.w	801f998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f84e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f852:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f856:	1c62      	adds	r2, r4, #1
 801f858:	f100 80a3 	bmi.w	801f9a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f85c:	4596      	cmp	lr, r2
 801f85e:	f340 80a0 	ble.w	801f9a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f862:	f1b9 0f00 	cmp.w	r9, #0
 801f866:	f000 809c 	beq.w	801f9a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f86a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f86e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f872:	3501      	adds	r5, #1
 801f874:	f100 8099 	bmi.w	801f9aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f878:	45ab      	cmp	fp, r5
 801f87a:	f340 8096 	ble.w	801f9aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f87e:	2f00      	cmp	r7, #0
 801f880:	f000 8093 	beq.w	801f9aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f884:	2c00      	cmp	r4, #0
 801f886:	f2c0 808e 	blt.w	801f9a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f88a:	45a6      	cmp	lr, r4
 801f88c:	f340 808b 	ble.w	801f9a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f890:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f894:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f898:	3401      	adds	r4, #1
 801f89a:	f100 8089 	bmi.w	801f9b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f89e:	45a6      	cmp	lr, r4
 801f8a0:	f340 8086 	ble.w	801f9b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f8a4:	f1b9 0f00 	cmp.w	r9, #0
 801f8a8:	f000 8082 	beq.w	801f9b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f8ac:	44d6      	add	lr, sl
 801f8ae:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f8b2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f8b6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f8ba:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f8be:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f8c2:	fb19 fe07 	smulbb	lr, r9, r7
 801f8c6:	ea44 0808 	orr.w	r8, r4, r8
 801f8ca:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f8ce:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f8d2:	f1c7 0210 	rsb	r2, r7, #16
 801f8d6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f8da:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f8de:	ea44 0c0c 	orr.w	ip, r4, ip
 801f8e2:	eba2 0209 	sub.w	r2, r2, r9
 801f8e6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f8ea:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f8ee:	fb04 f40c 	mul.w	r4, r4, ip
 801f8f2:	fb02 4808 	mla	r8, r2, r8, r4
 801f8f6:	041a      	lsls	r2, r3, #16
 801f8f8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f8fc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f900:	4313      	orrs	r3, r2
 801f902:	042a      	lsls	r2, r5, #16
 801f904:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f908:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f90c:	fb0e 8303 	mla	r3, lr, r3, r8
 801f910:	432a      	orrs	r2, r5
 801f912:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f916:	fb07 3202 	mla	r2, r7, r2, r3
 801f91a:	0d53      	lsrs	r3, r2, #21
 801f91c:	0952      	lsrs	r2, r2, #5
 801f91e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f922:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f926:	431a      	orrs	r2, r3
 801f928:	b293      	uxth	r3, r2
 801f92a:	b2b4      	uxth	r4, r6
 801f92c:	1202      	asrs	r2, r0, #8
 801f92e:	43f6      	mvns	r6, r6
 801f930:	b2f6      	uxtb	r6, r6
 801f932:	121d      	asrs	r5, r3, #8
 801f934:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f938:	fb12 f206 	smulbb	r2, r2, r6
 801f93c:	10c7      	asrs	r7, r0, #3
 801f93e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f942:	00c0      	lsls	r0, r0, #3
 801f944:	fb05 2504 	mla	r5, r5, r4, r2
 801f948:	b2c0      	uxtb	r0, r0
 801f94a:	10da      	asrs	r2, r3, #3
 801f94c:	00db      	lsls	r3, r3, #3
 801f94e:	b2db      	uxtb	r3, r3
 801f950:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f954:	fb10 f006 	smulbb	r0, r0, r6
 801f958:	b2ad      	uxth	r5, r5
 801f95a:	fb03 0004 	mla	r0, r3, r4, r0
 801f95e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f962:	fb17 f706 	smulbb	r7, r7, r6
 801f966:	b280      	uxth	r0, r0
 801f968:	1c6b      	adds	r3, r5, #1
 801f96a:	fb02 7204 	mla	r2, r2, r4, r7
 801f96e:	b292      	uxth	r2, r2
 801f970:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f974:	1c43      	adds	r3, r0, #1
 801f976:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f97a:	1c50      	adds	r0, r2, #1
 801f97c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f980:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f984:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f988:	0952      	lsrs	r2, r2, #5
 801f98a:	432b      	orrs	r3, r5
 801f98c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f990:	4313      	orrs	r3, r2
 801f992:	800b      	strh	r3, [r1, #0]
 801f994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f998:	4680      	mov	r8, r0
 801f99a:	e75c      	b.n	801f856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f99c:	4684      	mov	ip, r0
 801f99e:	4680      	mov	r8, r0
 801f9a0:	e767      	b.n	801f872 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f9a2:	4684      	mov	ip, r0
 801f9a4:	e765      	b.n	801f872 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f9a6:	4605      	mov	r5, r0
 801f9a8:	e776      	b.n	801f898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f9aa:	4603      	mov	r3, r0
 801f9ac:	4605      	mov	r5, r0
 801f9ae:	e782      	b.n	801f8b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f9b0:	4603      	mov	r3, r0
 801f9b2:	e780      	b.n	801f8b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f9b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9b8:	b099      	sub	sp, #100	; 0x64
 801f9ba:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f9be:	9215      	str	r2, [sp, #84]	; 0x54
 801f9c0:	9309      	str	r3, [sp, #36]	; 0x24
 801f9c2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f9c4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f9c8:	930d      	str	r3, [sp, #52]	; 0x34
 801f9ca:	910c      	str	r1, [sp, #48]	; 0x30
 801f9cc:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f9d0:	9016      	str	r0, [sp, #88]	; 0x58
 801f9d2:	6850      	ldr	r0, [r2, #4]
 801f9d4:	6812      	ldr	r2, [r2, #0]
 801f9d6:	fb00 1303 	mla	r3, r0, r3, r1
 801f9da:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f9de:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9e0:	681b      	ldr	r3, [r3, #0]
 801f9e2:	930b      	str	r3, [sp, #44]	; 0x2c
 801f9e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f9e6:	685e      	ldr	r6, [r3, #4]
 801f9e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f9ea:	43db      	mvns	r3, r3
 801f9ec:	b2db      	uxtb	r3, r3
 801f9ee:	3604      	adds	r6, #4
 801f9f0:	930a      	str	r3, [sp, #40]	; 0x28
 801f9f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9f4:	2b00      	cmp	r3, #0
 801f9f6:	dc03      	bgt.n	801fa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f9f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f9fa:	2b00      	cmp	r3, #0
 801f9fc:	f340 8225 	ble.w	801fe4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fa00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa0a:	1e48      	subs	r0, r1, #1
 801fa0c:	1e57      	subs	r7, r2, #1
 801fa0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa10:	2b00      	cmp	r3, #0
 801fa12:	f340 80e3 	ble.w	801fbdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fa16:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801fa1a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fa1e:	d406      	bmi.n	801fa2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fa20:	4584      	cmp	ip, r0
 801fa22:	da04      	bge.n	801fa2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fa24:	2b00      	cmp	r3, #0
 801fa26:	db02      	blt.n	801fa2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fa28:	42bb      	cmp	r3, r7
 801fa2a:	f2c0 80d8 	blt.w	801fbde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fa2e:	f11c 0c01 	adds.w	ip, ip, #1
 801fa32:	f100 80c9 	bmi.w	801fbc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa36:	4561      	cmp	r1, ip
 801fa38:	f2c0 80c6 	blt.w	801fbc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa3c:	3301      	adds	r3, #1
 801fa3e:	f100 80c3 	bmi.w	801fbc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa42:	429a      	cmp	r2, r3
 801fa44:	f2c0 80c0 	blt.w	801fbc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fa48:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fa4c:	4647      	mov	r7, r8
 801fa4e:	f1bb 0f00 	cmp.w	fp, #0
 801fa52:	f340 80e3 	ble.w	801fc1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801fa56:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fa58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fa5a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fa5e:	689b      	ldr	r3, [r3, #8]
 801fa60:	ea5f 422a 	movs.w	r2, sl, asr #16
 801fa64:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fa68:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801fa6c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fa70:	f100 8121 	bmi.w	801fcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa74:	f103 39ff 	add.w	r9, r3, #4294967295
 801fa78:	454a      	cmp	r2, r9
 801fa7a:	f280 811c 	bge.w	801fcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa7e:	f1bc 0f00 	cmp.w	ip, #0
 801fa82:	f2c0 8118 	blt.w	801fcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa86:	f10e 39ff 	add.w	r9, lr, #4294967295
 801fa8a:	45cc      	cmp	ip, r9
 801fa8c:	f280 8113 	bge.w	801fcb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fa90:	b21b      	sxth	r3, r3
 801fa92:	fb0c 2203 	mla	r2, ip, r3, r2
 801fa96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa98:	eb04 0902 	add.w	r9, r4, r2
 801fa9c:	5ca2      	ldrb	r2, [r4, r2]
 801fa9e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801faa2:	2800      	cmp	r0, #0
 801faa4:	f000 80fe 	beq.w	801fca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801faa8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801faac:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fab0:	9211      	str	r2, [sp, #68]	; 0x44
 801fab2:	b151      	cbz	r1, 801faca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fab4:	eb09 0203 	add.w	r2, r9, r3
 801fab8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fabc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fac0:	930f      	str	r3, [sp, #60]	; 0x3c
 801fac2:	7853      	ldrb	r3, [r2, #1]
 801fac4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fac8:	9312      	str	r3, [sp, #72]	; 0x48
 801faca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801facc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801face:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fad2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fad6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fada:	ea4c 0c03 	orr.w	ip, ip, r3
 801fade:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fae0:	041b      	lsls	r3, r3, #16
 801fae2:	fb10 f201 	smulbb	r2, r0, r1
 801fae6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801faea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801faee:	10d2      	asrs	r2, r2, #3
 801faf0:	4323      	orrs	r3, r4
 801faf2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801faf6:	4353      	muls	r3, r2
 801faf8:	fb09 330c 	mla	r3, r9, ip, r3
 801fafc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fb00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fb04:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fb08:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fb0c:	f1c1 0c10 	rsb	ip, r1, #16
 801fb10:	ebac 0c00 	sub.w	ip, ip, r0
 801fb14:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fb18:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fb1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fb1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fb20:	0418      	lsls	r0, r3, #16
 801fb22:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fb26:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fb2a:	4318      	orrs	r0, r3
 801fb2c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fb30:	fb02 c200 	mla	r2, r2, r0, ip
 801fb34:	0d53      	lsrs	r3, r2, #21
 801fb36:	0952      	lsrs	r2, r2, #5
 801fb38:	8838      	ldrh	r0, [r7, #0]
 801fb3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fb42:	431a      	orrs	r2, r3
 801fb44:	b292      	uxth	r2, r2
 801fb46:	1201      	asrs	r1, r0, #8
 801fb48:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fb4c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fb50:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fb54:	fb11 f104 	smulbb	r1, r1, r4
 801fb58:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fb5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fb60:	00c0      	lsls	r0, r0, #3
 801fb62:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fb66:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fb6a:	10d1      	asrs	r1, r2, #3
 801fb6c:	b2c0      	uxtb	r0, r0
 801fb6e:	00d2      	lsls	r2, r2, #3
 801fb70:	b2d2      	uxtb	r2, r2
 801fb72:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fb76:	fb1e fe04 	smulbb	lr, lr, r4
 801fb7a:	fb10 f004 	smulbb	r0, r0, r4
 801fb7e:	fa1f fc8c 	uxth.w	ip, ip
 801fb82:	fb01 e103 	mla	r1, r1, r3, lr
 801fb86:	fb02 0303 	mla	r3, r2, r3, r0
 801fb8a:	b29a      	uxth	r2, r3
 801fb8c:	f10c 0301 	add.w	r3, ip, #1
 801fb90:	b289      	uxth	r1, r1
 801fb92:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fb96:	1c53      	adds	r3, r2, #1
 801fb98:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb9c:	1c4a      	adds	r2, r1, #1
 801fb9e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fba2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fba6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fbaa:	0949      	lsrs	r1, r1, #5
 801fbac:	ea43 030c 	orr.w	r3, r3, ip
 801fbb0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fbb4:	430b      	orrs	r3, r1
 801fbb6:	803b      	strh	r3, [r7, #0]
 801fbb8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fbba:	449a      	add	sl, r3
 801fbbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbbe:	3702      	adds	r7, #2
 801fbc0:	441d      	add	r5, r3
 801fbc2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fbc6:	e742      	b.n	801fa4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fbc8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fbca:	449a      	add	sl, r3
 801fbcc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fbce:	441d      	add	r5, r3
 801fbd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbd2:	3b01      	subs	r3, #1
 801fbd4:	9309      	str	r3, [sp, #36]	; 0x24
 801fbd6:	f108 0802 	add.w	r8, r8, #2
 801fbda:	e718      	b.n	801fa0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fbdc:	d023      	beq.n	801fc26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fbde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbe0:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fbe2:	3b01      	subs	r3, #1
 801fbe4:	fb00 a003 	mla	r0, r0, r3, sl
 801fbe8:	1400      	asrs	r0, r0, #16
 801fbea:	f53f af2d 	bmi.w	801fa48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fbee:	3901      	subs	r1, #1
 801fbf0:	4288      	cmp	r0, r1
 801fbf2:	f6bf af29 	bge.w	801fa48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fbf6:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fbf8:	fb01 5303 	mla	r3, r1, r3, r5
 801fbfc:	141b      	asrs	r3, r3, #16
 801fbfe:	f53f af23 	bmi.w	801fa48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc02:	3a01      	subs	r2, #1
 801fc04:	4293      	cmp	r3, r2
 801fc06:	f6bf af1f 	bge.w	801fa48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc0a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fc0e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fc12:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fc16:	f1be 0f00 	cmp.w	lr, #0
 801fc1a:	dc6c      	bgt.n	801fcf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fc1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc1e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fc22:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fc26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fc28:	2b00      	cmp	r3, #0
 801fc2a:	f340 810e 	ble.w	801fe4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fc2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fc36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fc3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc40:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc48:	eef0 6a62 	vmov.f32	s13, s5
 801fc4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc54:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc58:	ee16 aa90 	vmov	sl, s13
 801fc5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc60:	eef0 6a43 	vmov.f32	s13, s6
 801fc64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc68:	ee12 2a90 	vmov	r2, s5
 801fc6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc70:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc74:	ee13 2a10 	vmov	r2, s6
 801fc78:	9325      	str	r3, [sp, #148]	; 0x94
 801fc7a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fc7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc80:	9326      	str	r3, [sp, #152]	; 0x98
 801fc82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fc84:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fc86:	3b01      	subs	r3, #1
 801fc88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc8c:	930c      	str	r3, [sp, #48]	; 0x30
 801fc8e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fc90:	bf08      	it	eq
 801fc92:	4613      	moveq	r3, r2
 801fc94:	ee16 5a90 	vmov	r5, s13
 801fc98:	9309      	str	r3, [sp, #36]	; 0x24
 801fc9a:	eeb0 3a67 	vmov.f32	s6, s15
 801fc9e:	eef0 2a47 	vmov.f32	s5, s14
 801fca2:	e6a6      	b.n	801f9f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fca4:	2900      	cmp	r1, #0
 801fca6:	f43f af10 	beq.w	801faca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fcaa:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fcae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fcb2:	930f      	str	r3, [sp, #60]	; 0x3c
 801fcb4:	e709      	b.n	801faca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fcb6:	f112 0901 	adds.w	r9, r2, #1
 801fcba:	f53f af7d 	bmi.w	801fbb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcbe:	454b      	cmp	r3, r9
 801fcc0:	f6ff af7a 	blt.w	801fbb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcc4:	f11c 0901 	adds.w	r9, ip, #1
 801fcc8:	f53f af76 	bmi.w	801fbb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fccc:	45ce      	cmp	lr, r9
 801fcce:	f6ff af73 	blt.w	801fbb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcd2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fcd4:	9202      	str	r2, [sp, #8]
 801fcd6:	b21b      	sxth	r3, r3
 801fcd8:	fa0f f28e 	sxth.w	r2, lr
 801fcdc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fce0:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fce4:	9201      	str	r2, [sp, #4]
 801fce6:	9300      	str	r3, [sp, #0]
 801fce8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fcea:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fcec:	4633      	mov	r3, r6
 801fcee:	4639      	mov	r1, r7
 801fcf0:	f7ff fd8e 	bl	801f810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fcf4:	e760      	b.n	801fbb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fcf6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fcf8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fcfa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fcfe:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fd02:	1429      	asrs	r1, r5, #16
 801fd04:	fb03 2101 	mla	r1, r3, r1, r2
 801fd08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fd0a:	440a      	add	r2, r1
 801fd0c:	5c61      	ldrb	r1, [r4, r1]
 801fd0e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fd12:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fd16:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fd1a:	f1bc 0f00 	cmp.w	ip, #0
 801fd1e:	f000 808c 	beq.w	801fe3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fd22:	7857      	ldrb	r7, [r2, #1]
 801fd24:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fd28:	9413      	str	r4, [sp, #76]	; 0x4c
 801fd2a:	b140      	cbz	r0, 801fd3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fd2c:	18d7      	adds	r7, r2, r3
 801fd2e:	5cd3      	ldrb	r3, [r2, r3]
 801fd30:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd34:	9310      	str	r3, [sp, #64]	; 0x40
 801fd36:	787b      	ldrb	r3, [r7, #1]
 801fd38:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd3c:	9314      	str	r3, [sp, #80]	; 0x50
 801fd3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fd40:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd42:	fb1c f200 	smulbb	r2, ip, r0
 801fd46:	041f      	lsls	r7, r3, #16
 801fd48:	10d2      	asrs	r2, r2, #3
 801fd4a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fd4e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fd52:	431f      	orrs	r7, r3
 801fd54:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fd58:	9317      	str	r3, [sp, #92]	; 0x5c
 801fd5a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fd5c:	041b      	lsls	r3, r3, #16
 801fd5e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fd62:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd66:	ea43 030b 	orr.w	r3, r3, fp
 801fd6a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fd6c:	4353      	muls	r3, r2
 801fd6e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fd72:	fb04 3707 	mla	r7, r4, r7, r3
 801fd76:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fd7a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fd7e:	ea43 0b01 	orr.w	fp, r3, r1
 801fd82:	f1c0 0110 	rsb	r1, r0, #16
 801fd86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd88:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd8a:	eba1 0c0c 	sub.w	ip, r1, ip
 801fd8e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fd92:	fb0c 770b 	mla	r7, ip, fp, r7
 801fd96:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fd9a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fd9e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fda2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fda6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fdaa:	fb02 770c 	mla	r7, r2, ip, r7
 801fdae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fdb0:	0d79      	lsrs	r1, r7, #21
 801fdb2:	097f      	lsrs	r7, r7, #5
 801fdb4:	8812      	ldrh	r2, [r2, #0]
 801fdb6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fdba:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fdbe:	430f      	orrs	r7, r1
 801fdc0:	b2bb      	uxth	r3, r7
 801fdc2:	1211      	asrs	r1, r2, #8
 801fdc4:	1218      	asrs	r0, r3, #8
 801fdc6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fdca:	fb11 f104 	smulbb	r1, r1, r4
 801fdce:	10d7      	asrs	r7, r2, #3
 801fdd0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fdd4:	00d2      	lsls	r2, r2, #3
 801fdd6:	fb00 1009 	mla	r0, r0, r9, r1
 801fdda:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fdde:	10d9      	asrs	r1, r3, #3
 801fde0:	b2d2      	uxtb	r2, r2
 801fde2:	00db      	lsls	r3, r3, #3
 801fde4:	fb17 f704 	smulbb	r7, r7, r4
 801fde8:	fb12 f204 	smulbb	r2, r2, r4
 801fdec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fdf0:	b2db      	uxtb	r3, r3
 801fdf2:	b280      	uxth	r0, r0
 801fdf4:	fb01 7109 	mla	r1, r1, r9, r7
 801fdf8:	fb03 2309 	mla	r3, r3, r9, r2
 801fdfc:	b29b      	uxth	r3, r3
 801fdfe:	b289      	uxth	r1, r1
 801fe00:	1c42      	adds	r2, r0, #1
 801fe02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fe06:	1c4f      	adds	r7, r1, #1
 801fe08:	1c5a      	adds	r2, r3, #1
 801fe0a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fe0e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801fe12:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fe16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fe1a:	0949      	lsrs	r1, r1, #5
 801fe1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe1e:	4310      	orrs	r0, r2
 801fe20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe24:	4308      	orrs	r0, r1
 801fe26:	f823 0b02 	strh.w	r0, [r3], #2
 801fe2a:	930e      	str	r3, [sp, #56]	; 0x38
 801fe2c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fe2e:	449a      	add	sl, r3
 801fe30:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fe32:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fe36:	441d      	add	r5, r3
 801fe38:	e6ed      	b.n	801fc16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801fe3a:	2800      	cmp	r0, #0
 801fe3c:	f43f af7f 	beq.w	801fd3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fe40:	5cd3      	ldrb	r3, [r2, r3]
 801fe42:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fe46:	9310      	str	r3, [sp, #64]	; 0x40
 801fe48:	e779      	b.n	801fd3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fe4a:	b019      	add	sp, #100	; 0x64
 801fe4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fe50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fe54:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fe58:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801fe5c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fe60:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801fe64:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fe68:	8808      	ldrh	r0, [r1, #0]
 801fe6a:	fb08 470e 	mla	r7, r8, lr, r4
 801fe6e:	f1b8 0f00 	cmp.w	r8, #0
 801fe72:	eb02 0907 	add.w	r9, r2, r7
 801fe76:	db67      	blt.n	801ff48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fe78:	45c2      	cmp	sl, r8
 801fe7a:	dd65      	ble.n	801ff48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fe7c:	2c00      	cmp	r4, #0
 801fe7e:	db61      	blt.n	801ff44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fe80:	45a6      	cmp	lr, r4
 801fe82:	dd5f      	ble.n	801ff44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fe84:	5dd2      	ldrb	r2, [r2, r7]
 801fe86:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801fe8a:	1c62      	adds	r2, r4, #1
 801fe8c:	d45f      	bmi.n	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe8e:	4596      	cmp	lr, r2
 801fe90:	dd5d      	ble.n	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe92:	2d00      	cmp	r5, #0
 801fe94:	d05b      	beq.n	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fe96:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fe9a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801fe9e:	f118 0801 	adds.w	r8, r8, #1
 801fea2:	d458      	bmi.n	801ff56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fea4:	45c2      	cmp	sl, r8
 801fea6:	dd56      	ble.n	801ff56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fea8:	2e00      	cmp	r6, #0
 801feaa:	d054      	beq.n	801ff56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801feac:	2c00      	cmp	r4, #0
 801feae:	db50      	blt.n	801ff52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801feb0:	45a6      	cmp	lr, r4
 801feb2:	dd4e      	ble.n	801ff52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801feb4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801feb8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801febc:	3401      	adds	r4, #1
 801febe:	d407      	bmi.n	801fed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fec0:	45a6      	cmp	lr, r4
 801fec2:	dd05      	ble.n	801fed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fec4:	b125      	cbz	r5, 801fed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fec6:	44ce      	add	lr, r9
 801fec8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801fecc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801fed0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fed4:	fb15 f406 	smulbb	r4, r5, r6
 801fed8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fedc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fee0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fee4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fee8:	ea43 0c0c 	orr.w	ip, r3, ip
 801feec:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801fef0:	f1c6 0310 	rsb	r3, r6, #16
 801fef4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fef8:	1b5b      	subs	r3, r3, r5
 801fefa:	ea4e 0707 	orr.w	r7, lr, r7
 801fefe:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ff02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ff06:	437d      	muls	r5, r7
 801ff08:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ff0c:	0403      	lsls	r3, r0, #16
 801ff0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ff12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ff16:	4318      	orrs	r0, r3
 801ff18:	0413      	lsls	r3, r2, #16
 801ff1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ff1e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ff22:	4313      	orrs	r3, r2
 801ff24:	fb04 c000 	mla	r0, r4, r0, ip
 801ff28:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ff2c:	fb06 0003 	mla	r0, r6, r3, r0
 801ff30:	0d43      	lsrs	r3, r0, #21
 801ff32:	0940      	lsrs	r0, r0, #5
 801ff34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff38:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ff3c:	4318      	orrs	r0, r3
 801ff3e:	8008      	strh	r0, [r1, #0]
 801ff40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ff44:	4684      	mov	ip, r0
 801ff46:	e7a0      	b.n	801fe8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ff48:	4607      	mov	r7, r0
 801ff4a:	4684      	mov	ip, r0
 801ff4c:	e7a7      	b.n	801fe9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ff4e:	4607      	mov	r7, r0
 801ff50:	e7a5      	b.n	801fe9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ff52:	4602      	mov	r2, r0
 801ff54:	e7b2      	b.n	801febc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ff56:	4602      	mov	r2, r0
 801ff58:	e7ba      	b.n	801fed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ff5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff5e:	b093      	sub	sp, #76	; 0x4c
 801ff60:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ff64:	920f      	str	r2, [sp, #60]	; 0x3c
 801ff66:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ff68:	9108      	str	r1, [sp, #32]
 801ff6a:	9306      	str	r3, [sp, #24]
 801ff6c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ff70:	9010      	str	r0, [sp, #64]	; 0x40
 801ff72:	6850      	ldr	r0, [r2, #4]
 801ff74:	6812      	ldr	r2, [r2, #0]
 801ff76:	fb00 1303 	mla	r3, r0, r3, r1
 801ff7a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ff7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff80:	681b      	ldr	r3, [r3, #0]
 801ff82:	9307      	str	r3, [sp, #28]
 801ff84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff86:	685f      	ldr	r7, [r3, #4]
 801ff88:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ff8c:	3704      	adds	r7, #4
 801ff8e:	9b08      	ldr	r3, [sp, #32]
 801ff90:	2b00      	cmp	r3, #0
 801ff92:	dc03      	bgt.n	801ff9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ff94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ff96:	2b00      	cmp	r3, #0
 801ff98:	f340 81b2 	ble.w	8020300 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ff9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ffa2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ffa6:	1e48      	subs	r0, r1, #1
 801ffa8:	f102 3cff 	add.w	ip, r2, #4294967295
 801ffac:	9b06      	ldr	r3, [sp, #24]
 801ffae:	2b00      	cmp	r3, #0
 801ffb0:	f340 80a9 	ble.w	8020106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ffb4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ffb8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ffbc:	d406      	bmi.n	801ffcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ffbe:	4586      	cmp	lr, r0
 801ffc0:	da04      	bge.n	801ffcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ffc2:	2b00      	cmp	r3, #0
 801ffc4:	db02      	blt.n	801ffcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ffc6:	4563      	cmp	r3, ip
 801ffc8:	f2c0 809e 	blt.w	8020108 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ffcc:	f11e 0e01 	adds.w	lr, lr, #1
 801ffd0:	f100 808f 	bmi.w	80200f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffd4:	4571      	cmp	r1, lr
 801ffd6:	f2c0 808c 	blt.w	80200f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffda:	3301      	adds	r3, #1
 801ffdc:	f100 8089 	bmi.w	80200f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffe0:	429a      	cmp	r2, r3
 801ffe2:	f2c0 8086 	blt.w	80200f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffe6:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ffea:	46c8      	mov	r8, r9
 801ffec:	f1bb 0f00 	cmp.w	fp, #0
 801fff0:	f340 80a6 	ble.w	8020140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801fff4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801fff6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fff8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fffc:	689b      	ldr	r3, [r3, #8]
 801fffe:	1422      	asrs	r2, r4, #16
 8020000:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020004:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020008:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802000c:	f100 80e3 	bmi.w	80201d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020010:	f103 3aff 	add.w	sl, r3, #4294967295
 8020014:	4552      	cmp	r2, sl
 8020016:	f280 80de 	bge.w	80201d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802001a:	f1bc 0f00 	cmp.w	ip, #0
 802001e:	f2c0 80da 	blt.w	80201d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020022:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020026:	45d4      	cmp	ip, sl
 8020028:	f280 80d5 	bge.w	80201d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802002c:	b21b      	sxth	r3, r3
 802002e:	fb0c 2203 	mla	r2, ip, r3, r2
 8020032:	9d07      	ldr	r5, [sp, #28]
 8020034:	eb05 0a02 	add.w	sl, r5, r2
 8020038:	5caa      	ldrb	r2, [r5, r2]
 802003a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802003e:	2800      	cmp	r0, #0
 8020040:	f000 80c0 	beq.w	80201c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020044:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020048:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 802004c:	920b      	str	r2, [sp, #44]	; 0x2c
 802004e:	b151      	cbz	r1, 8020066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020050:	eb0a 0203 	add.w	r2, sl, r3
 8020054:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020058:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802005c:	9309      	str	r3, [sp, #36]	; 0x24
 802005e:	7853      	ldrb	r3, [r2, #1]
 8020060:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020064:	930c      	str	r3, [sp, #48]	; 0x30
 8020066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020068:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802006a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802006e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020072:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020076:	ea4c 0c03 	orr.w	ip, ip, r3
 802007a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802007c:	041b      	lsls	r3, r3, #16
 802007e:	fb10 f201 	smulbb	r2, r0, r1
 8020082:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020086:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802008a:	10d2      	asrs	r2, r2, #3
 802008c:	432b      	orrs	r3, r5
 802008e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020092:	4353      	muls	r3, r2
 8020094:	fb0a 330c 	mla	r3, sl, ip, r3
 8020098:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802009c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80200a0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80200a4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80200a8:	f1c1 0c10 	rsb	ip, r1, #16
 80200ac:	ebac 0c00 	sub.w	ip, ip, r0
 80200b0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80200b4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80200b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80200ba:	0418      	lsls	r0, r3, #16
 80200bc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80200c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80200c4:	4318      	orrs	r0, r3
 80200c6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80200ca:	fb02 c200 	mla	r2, r2, r0, ip
 80200ce:	0d53      	lsrs	r3, r2, #21
 80200d0:	0952      	lsrs	r2, r2, #5
 80200d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80200d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80200da:	431a      	orrs	r2, r3
 80200dc:	f8a8 2000 	strh.w	r2, [r8]
 80200e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80200e2:	441c      	add	r4, r3
 80200e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80200e6:	f108 0802 	add.w	r8, r8, #2
 80200ea:	441e      	add	r6, r3
 80200ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 80200f0:	e77c      	b.n	801ffec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80200f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80200f4:	441c      	add	r4, r3
 80200f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80200f8:	441e      	add	r6, r3
 80200fa:	9b06      	ldr	r3, [sp, #24]
 80200fc:	3b01      	subs	r3, #1
 80200fe:	9306      	str	r3, [sp, #24]
 8020100:	f109 0902 	add.w	r9, r9, #2
 8020104:	e752      	b.n	801ffac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020106:	d020      	beq.n	802014a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020108:	9b06      	ldr	r3, [sp, #24]
 802010a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802010c:	3b01      	subs	r3, #1
 802010e:	fb00 4003 	mla	r0, r0, r3, r4
 8020112:	1400      	asrs	r0, r0, #16
 8020114:	f53f af67 	bmi.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020118:	3901      	subs	r1, #1
 802011a:	4288      	cmp	r0, r1
 802011c:	f6bf af63 	bge.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020120:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020122:	fb01 6303 	mla	r3, r1, r3, r6
 8020126:	141b      	asrs	r3, r3, #16
 8020128:	f53f af5d 	bmi.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802012c:	3a01      	subs	r2, #1
 802012e:	4293      	cmp	r3, r2
 8020130:	f6bf af59 	bge.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020134:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020138:	46ca      	mov	sl, r9
 802013a:	f1b8 0f00 	cmp.w	r8, #0
 802013e:	dc67      	bgt.n	8020210 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8020140:	9b06      	ldr	r3, [sp, #24]
 8020142:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020146:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802014a:	9b08      	ldr	r3, [sp, #32]
 802014c:	2b00      	cmp	r3, #0
 802014e:	f340 80d7 	ble.w	8020300 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020152:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020156:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802015a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802015e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020160:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020164:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020168:	eeb0 6a62 	vmov.f32	s12, s5
 802016c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020170:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020174:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020178:	ee16 4a10 	vmov	r4, s12
 802017c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020180:	eeb0 6a43 	vmov.f32	s12, s6
 8020184:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020188:	ee12 2a90 	vmov	r2, s5
 802018c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020190:	fb92 f3f3 	sdiv	r3, r2, r3
 8020194:	ee13 2a10 	vmov	r2, s6
 8020198:	931f      	str	r3, [sp, #124]	; 0x7c
 802019a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802019c:	fb92 f3f3 	sdiv	r3, r2, r3
 80201a0:	9320      	str	r3, [sp, #128]	; 0x80
 80201a2:	9b08      	ldr	r3, [sp, #32]
 80201a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80201a6:	3b01      	subs	r3, #1
 80201a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80201ac:	9308      	str	r3, [sp, #32]
 80201ae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80201b0:	bf08      	it	eq
 80201b2:	4613      	moveq	r3, r2
 80201b4:	ee16 6a10 	vmov	r6, s12
 80201b8:	9306      	str	r3, [sp, #24]
 80201ba:	eeb0 3a67 	vmov.f32	s6, s15
 80201be:	eef0 2a47 	vmov.f32	s5, s14
 80201c2:	e6e4      	b.n	801ff8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80201c4:	2900      	cmp	r1, #0
 80201c6:	f43f af4e 	beq.w	8020066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80201ca:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80201ce:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80201d2:	9309      	str	r3, [sp, #36]	; 0x24
 80201d4:	e747      	b.n	8020066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80201d6:	f112 0a01 	adds.w	sl, r2, #1
 80201da:	d481      	bmi.n	80200e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201dc:	4553      	cmp	r3, sl
 80201de:	f6ff af7f 	blt.w	80200e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201e2:	f11c 0a01 	adds.w	sl, ip, #1
 80201e6:	f53f af7b 	bmi.w	80200e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201ea:	45d6      	cmp	lr, sl
 80201ec:	f6ff af78 	blt.w	80200e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80201f0:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80201f4:	b21b      	sxth	r3, r3
 80201f6:	fa0f f28e 	sxth.w	r2, lr
 80201fa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80201fe:	9201      	str	r2, [sp, #4]
 8020200:	9300      	str	r3, [sp, #0]
 8020202:	9a07      	ldr	r2, [sp, #28]
 8020204:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020206:	463b      	mov	r3, r7
 8020208:	4641      	mov	r1, r8
 802020a:	f7ff fe21 	bl	801fe50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802020e:	e767      	b.n	80200e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020210:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020212:	9d07      	ldr	r5, [sp, #28]
 8020214:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020218:	1422      	asrs	r2, r4, #16
 802021a:	1431      	asrs	r1, r6, #16
 802021c:	fb03 2101 	mla	r1, r3, r1, r2
 8020220:	9a07      	ldr	r2, [sp, #28]
 8020222:	440a      	add	r2, r1
 8020224:	5c69      	ldrb	r1, [r5, r1]
 8020226:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802022a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802022e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020232:	f1be 0f00 	cmp.w	lr, #0
 8020236:	d05c      	beq.n	80202f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020238:	f892 c001 	ldrb.w	ip, [r2, #1]
 802023c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020240:	950d      	str	r5, [sp, #52]	; 0x34
 8020242:	b150      	cbz	r0, 802025a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020244:	eb02 0c03 	add.w	ip, r2, r3
 8020248:	5cd3      	ldrb	r3, [r2, r3]
 802024a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802024e:	930a      	str	r3, [sp, #40]	; 0x28
 8020250:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020254:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020258:	930e      	str	r3, [sp, #56]	; 0x38
 802025a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802025c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802025e:	fb1e f200 	smulbb	r2, lr, r0
 8020262:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020266:	10d2      	asrs	r2, r2, #3
 8020268:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802026c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020270:	ea4c 0c03 	orr.w	ip, ip, r3
 8020274:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020278:	9311      	str	r3, [sp, #68]	; 0x44
 802027a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802027c:	041b      	lsls	r3, r3, #16
 802027e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020282:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020286:	ea43 030b 	orr.w	r3, r3, fp
 802028a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802028c:	4353      	muls	r3, r2
 802028e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020292:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020296:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802029a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802029e:	ea43 0b01 	orr.w	fp, r3, r1
 80202a2:	f1c0 0110 	rsb	r1, r0, #16
 80202a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202a8:	eba1 0e0e 	sub.w	lr, r1, lr
 80202ac:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80202b0:	fb0e cc0b 	mla	ip, lr, fp, ip
 80202b4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80202b8:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80202bc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80202c0:	ea4b 0e0e 	orr.w	lr, fp, lr
 80202c4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80202c8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80202cc:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80202d0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80202d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80202d8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80202dc:	ea43 0c0c 	orr.w	ip, r3, ip
 80202e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80202e2:	f82a cb02 	strh.w	ip, [sl], #2
 80202e6:	441c      	add	r4, r3
 80202e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80202ee:	441e      	add	r6, r3
 80202f0:	e723      	b.n	802013a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80202f2:	2800      	cmp	r0, #0
 80202f4:	d0b1      	beq.n	802025a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80202f6:	5cd3      	ldrb	r3, [r2, r3]
 80202f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202fc:	930a      	str	r3, [sp, #40]	; 0x28
 80202fe:	e7ac      	b.n	802025a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020300:	b013      	add	sp, #76	; 0x4c
 8020302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020306:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802030a:	880d      	ldrh	r5, [r1, #0]
 802030c:	b087      	sub	sp, #28
 802030e:	10ef      	asrs	r7, r5, #3
 8020310:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020314:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020318:	00ed      	lsls	r5, r5, #3
 802031a:	9701      	str	r7, [sp, #4]
 802031c:	b2ed      	uxtb	r5, r5
 802031e:	9502      	str	r5, [sp, #8]
 8020320:	9d01      	ldr	r5, [sp, #4]
 8020322:	9103      	str	r1, [sp, #12]
 8020324:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020328:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 802032c:	9902      	ldr	r1, [sp, #8]
 802032e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020332:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020336:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 802033a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802033e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020342:	022d      	lsls	r5, r5, #8
 8020344:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020348:	fb06 0709 	mla	r7, r6, r9, r0
 802034c:	430d      	orrs	r5, r1
 802034e:	2e00      	cmp	r6, #0
 8020350:	eb02 0c07 	add.w	ip, r2, r7
 8020354:	9505      	str	r5, [sp, #20]
 8020356:	f2c0 80b6 	blt.w	80204c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802035a:	45b3      	cmp	fp, r6
 802035c:	f340 80b3 	ble.w	80204c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020360:	2800      	cmp	r0, #0
 8020362:	f2c0 80ae 	blt.w	80204c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020366:	4581      	cmp	r9, r0
 8020368:	f340 80ab 	ble.w	80204c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802036c:	5dd7      	ldrb	r7, [r2, r7]
 802036e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020372:	441f      	add	r7, r3
 8020374:	1c42      	adds	r2, r0, #1
 8020376:	f100 80a9 	bmi.w	80204cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802037a:	4591      	cmp	r9, r2
 802037c:	f340 80a6 	ble.w	80204cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020380:	2c00      	cmp	r4, #0
 8020382:	f000 80a3 	beq.w	80204cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020386:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802038a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802038e:	441d      	add	r5, r3
 8020390:	3601      	adds	r6, #1
 8020392:	f100 809f 	bmi.w	80204d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020396:	45b3      	cmp	fp, r6
 8020398:	f340 809c 	ble.w	80204d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802039c:	f1be 0f00 	cmp.w	lr, #0
 80203a0:	f000 8098 	beq.w	80204d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80203a4:	2800      	cmp	r0, #0
 80203a6:	f2c0 8093 	blt.w	80204d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80203aa:	4581      	cmp	r9, r0
 80203ac:	f340 8090 	ble.w	80204d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80203b0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80203b4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80203b8:	441e      	add	r6, r3
 80203ba:	3001      	adds	r0, #1
 80203bc:	f100 808d 	bmi.w	80204da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80203c0:	4581      	cmp	r9, r0
 80203c2:	f340 808a 	ble.w	80204da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80203c6:	2c00      	cmp	r4, #0
 80203c8:	f000 8087 	beq.w	80204da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80203cc:	44e1      	add	r9, ip
 80203ce:	f899 2001 	ldrb.w	r2, [r9, #1]
 80203d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80203d6:	4413      	add	r3, r2
 80203d8:	b2a4      	uxth	r4, r4
 80203da:	fa1f fe8e 	uxth.w	lr, lr
 80203de:	fb04 fb0e 	mul.w	fp, r4, lr
 80203e2:	0124      	lsls	r4, r4, #4
 80203e4:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80203e8:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80203ec:	eba4 040b 	sub.w	r4, r4, fp
 80203f0:	fa1f f08e 	uxth.w	r0, lr
 80203f4:	b2a2      	uxth	r2, r4
 80203f6:	78ac      	ldrb	r4, [r5, #2]
 80203f8:	f897 c002 	ldrb.w	ip, [r7, #2]
 80203fc:	9901      	ldr	r1, [sp, #4]
 80203fe:	eba9 0900 	sub.w	r9, r9, r0
 8020402:	fa1f f989 	uxth.w	r9, r9
 8020406:	4354      	muls	r4, r2
 8020408:	fb09 440c 	mla	r4, r9, ip, r4
 802040c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020410:	fb00 440c 	mla	r4, r0, ip, r4
 8020414:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020418:	fa1f fe88 	uxth.w	lr, r8
 802041c:	ea6f 0808 	mvn.w	r8, r8
 8020420:	fa5f f888 	uxtb.w	r8, r8
 8020424:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020428:	fb1a fa08 	smulbb	sl, sl, r8
 802042c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020430:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020434:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020438:	787c      	ldrb	r4, [r7, #1]
 802043a:	782d      	ldrb	r5, [r5, #0]
 802043c:	783f      	ldrb	r7, [r7, #0]
 802043e:	fb02 fa0a 	mul.w	sl, r2, sl
 8020442:	fb09 aa04 	mla	sl, r9, r4, sl
 8020446:	7874      	ldrb	r4, [r6, #1]
 8020448:	436a      	muls	r2, r5
 802044a:	7835      	ldrb	r5, [r6, #0]
 802044c:	fb00 aa04 	mla	sl, r0, r4, sl
 8020450:	fb09 2207 	mla	r2, r9, r7, r2
 8020454:	785c      	ldrb	r4, [r3, #1]
 8020456:	781b      	ldrb	r3, [r3, #0]
 8020458:	fb00 2005 	mla	r0, r0, r5, r2
 802045c:	fb0b a404 	mla	r4, fp, r4, sl
 8020460:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020464:	9b02      	ldr	r3, [sp, #8]
 8020466:	fb11 fa08 	smulbb	sl, r1, r8
 802046a:	fa1f fc8c 	uxth.w	ip, ip
 802046e:	fb13 f808 	smulbb	r8, r3, r8
 8020472:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020476:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802047a:	fb04 a40e 	mla	r4, r4, lr, sl
 802047e:	f10c 0301 	add.w	r3, ip, #1
 8020482:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020486:	fa1f fe8e 	uxth.w	lr, lr
 802048a:	b2a4      	uxth	r4, r4
 802048c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020490:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020494:	f104 0a01 	add.w	sl, r4, #1
 8020498:	f10e 0c01 	add.w	ip, lr, #1
 802049c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80204a0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80204a4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80204a8:	0964      	lsrs	r4, r4, #5
 80204aa:	ea4c 0c03 	orr.w	ip, ip, r3
 80204ae:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80204b2:	9b03      	ldr	r3, [sp, #12]
 80204b4:	ea4c 0c04 	orr.w	ip, ip, r4
 80204b8:	f8a3 c000 	strh.w	ip, [r3]
 80204bc:	b007      	add	sp, #28
 80204be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80204c2:	af05      	add	r7, sp, #20
 80204c4:	e756      	b.n	8020374 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80204c6:	ad05      	add	r5, sp, #20
 80204c8:	462f      	mov	r7, r5
 80204ca:	e761      	b.n	8020390 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80204cc:	ad05      	add	r5, sp, #20
 80204ce:	e75f      	b.n	8020390 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80204d0:	ae05      	add	r6, sp, #20
 80204d2:	e772      	b.n	80203ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80204d4:	ab05      	add	r3, sp, #20
 80204d6:	461e      	mov	r6, r3
 80204d8:	e77e      	b.n	80203d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80204da:	ab05      	add	r3, sp, #20
 80204dc:	e77c      	b.n	80203d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080204de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80204de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204e2:	b095      	sub	sp, #84	; 0x54
 80204e4:	9212      	str	r2, [sp, #72]	; 0x48
 80204e6:	9309      	str	r3, [sp, #36]	; 0x24
 80204e8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80204ea:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80204ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80204f0:	910e      	str	r1, [sp, #56]	; 0x38
 80204f2:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80204f6:	9013      	str	r0, [sp, #76]	; 0x4c
 80204f8:	6850      	ldr	r0, [r2, #4]
 80204fa:	6812      	ldr	r2, [r2, #0]
 80204fc:	fb00 1303 	mla	r3, r0, r3, r1
 8020500:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020504:	930a      	str	r3, [sp, #40]	; 0x28
 8020506:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020508:	681b      	ldr	r3, [r3, #0]
 802050a:	930d      	str	r3, [sp, #52]	; 0x34
 802050c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802050e:	685c      	ldr	r4, [r3, #4]
 8020510:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020512:	43db      	mvns	r3, r3
 8020514:	b2db      	uxtb	r3, r3
 8020516:	3404      	adds	r4, #4
 8020518:	930b      	str	r3, [sp, #44]	; 0x2c
 802051a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802051c:	2b00      	cmp	r3, #0
 802051e:	dc03      	bgt.n	8020528 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020520:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020522:	2b00      	cmp	r3, #0
 8020524:	f340 8255 	ble.w	80209d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020528:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802052a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802052e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020532:	1e48      	subs	r0, r1, #1
 8020534:	1e55      	subs	r5, r2, #1
 8020536:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020538:	2b00      	cmp	r3, #0
 802053a:	f340 80f9 	ble.w	8020730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802053e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020540:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020542:	1436      	asrs	r6, r6, #16
 8020544:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020548:	d406      	bmi.n	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802054a:	4286      	cmp	r6, r0
 802054c:	da04      	bge.n	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802054e:	2b00      	cmp	r3, #0
 8020550:	db02      	blt.n	8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020552:	42ab      	cmp	r3, r5
 8020554:	f2c0 80ed 	blt.w	8020732 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020558:	3601      	adds	r6, #1
 802055a:	f100 80da 	bmi.w	8020712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802055e:	42b1      	cmp	r1, r6
 8020560:	f2c0 80d7 	blt.w	8020712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020564:	3301      	adds	r3, #1
 8020566:	f100 80d4 	bmi.w	8020712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802056a:	429a      	cmp	r2, r3
 802056c:	f2c0 80d1 	blt.w	8020712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020570:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020572:	9311      	str	r3, [sp, #68]	; 0x44
 8020574:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020576:	930c      	str	r3, [sp, #48]	; 0x30
 8020578:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802057a:	2b00      	cmp	r3, #0
 802057c:	f340 80fa 	ble.w	8020774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020580:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020582:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020584:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020586:	68c6      	ldr	r6, [r0, #12]
 8020588:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802058a:	141d      	asrs	r5, r3, #16
 802058c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020590:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020592:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020594:	1400      	asrs	r0, r0, #16
 8020596:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802059a:	6892      	ldr	r2, [r2, #8]
 802059c:	f100 813e 	bmi.w	802081c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80205a0:	1e57      	subs	r7, r2, #1
 80205a2:	42b8      	cmp	r0, r7
 80205a4:	f280 813a 	bge.w	802081c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80205a8:	2d00      	cmp	r5, #0
 80205aa:	f2c0 8137 	blt.w	802081c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80205ae:	1e77      	subs	r7, r6, #1
 80205b0:	42bd      	cmp	r5, r7
 80205b2:	f280 8133 	bge.w	802081c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80205b6:	b212      	sxth	r2, r2
 80205b8:	fb05 0002 	mla	r0, r5, r2, r0
 80205bc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80205be:	f815 a000 	ldrb.w	sl, [r5, r0]
 80205c2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80205c6:	182e      	adds	r6, r5, r0
 80205c8:	eb04 050a 	add.w	r5, r4, sl
 80205cc:	2b00      	cmp	r3, #0
 80205ce:	f000 8117 	beq.w	8020800 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80205d2:	f896 c001 	ldrb.w	ip, [r6, #1]
 80205d6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80205da:	44a4      	add	ip, r4
 80205dc:	2900      	cmp	r1, #0
 80205de:	f000 8117 	beq.w	8020810 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80205e2:	18b0      	adds	r0, r6, r2
 80205e4:	5cb2      	ldrb	r2, [r6, r2]
 80205e6:	7840      	ldrb	r0, [r0, #1]
 80205e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80205ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80205f0:	4422      	add	r2, r4
 80205f2:	4420      	add	r0, r4
 80205f4:	b29b      	uxth	r3, r3
 80205f6:	b289      	uxth	r1, r1
 80205f8:	fb03 f901 	mul.w	r9, r3, r1
 80205fc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020600:	011b      	lsls	r3, r3, #4
 8020602:	b289      	uxth	r1, r1
 8020604:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020608:	f895 b002 	ldrb.w	fp, [r5, #2]
 802060c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802060e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020612:	f8b6 e000 	ldrh.w	lr, [r6]
 8020616:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 802061a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802061e:	eba3 0309 	sub.w	r3, r3, r9
 8020622:	b29b      	uxth	r3, r3
 8020624:	eba8 0801 	sub.w	r8, r8, r1
 8020628:	fa1f f888 	uxth.w	r8, r8
 802062c:	435f      	muls	r7, r3
 802062e:	fb08 770b 	mla	r7, r8, fp, r7
 8020632:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020636:	9310      	str	r3, [sp, #64]	; 0x40
 8020638:	fb01 770b 	mla	r7, r1, fp, r7
 802063c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020640:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020642:	fb09 770b 	mla	r7, r9, fp, r7
 8020646:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 802064a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802064e:	fb1b fb03 	smulbb	fp, fp, r3
 8020652:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020656:	fb07 b706 	mla	r7, r7, r6, fp
 802065a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802065c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020660:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020664:	f89c c000 	ldrb.w	ip, [ip]
 8020668:	435d      	muls	r5, r3
 802066a:	fb08 550b 	mla	r5, r8, fp, r5
 802066e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020672:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020674:	fb01 550b 	mla	r5, r1, fp, r5
 8020678:	f890 b001 	ldrb.w	fp, [r0, #1]
 802067c:	fb09 550b 	mla	r5, r9, fp, r5
 8020680:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020684:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020688:	fb1b fb03 	smulbb	fp, fp, r3
 802068c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802068e:	fb03 f30c 	mul.w	r3, r3, ip
 8020692:	f892 c000 	ldrb.w	ip, [r2]
 8020696:	fb08 330a 	mla	r3, r8, sl, r3
 802069a:	fb01 330c 	mla	r3, r1, ip, r3
 802069e:	f890 c000 	ldrb.w	ip, [r0]
 80206a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80206a6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80206aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80206ac:	fa5f fe8e 	uxtb.w	lr, lr
 80206b0:	b2bf      	uxth	r7, r7
 80206b2:	fb1e fe03 	smulbb	lr, lr, r3
 80206b6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80206ba:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80206be:	fb05 b506 	mla	r5, r5, r6, fp
 80206c2:	1c7b      	adds	r3, r7, #1
 80206c4:	fb0c e606 	mla	r6, ip, r6, lr
 80206c8:	b2ad      	uxth	r5, r5
 80206ca:	b2b6      	uxth	r6, r6
 80206cc:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80206d0:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80206d4:	f105 0b01 	add.w	fp, r5, #1
 80206d8:	1c77      	adds	r7, r6, #1
 80206da:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80206de:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80206e2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80206e6:	096d      	lsrs	r5, r5, #5
 80206e8:	431f      	orrs	r7, r3
 80206ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80206ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206f0:	433d      	orrs	r5, r7
 80206f2:	801d      	strh	r5, [r3, #0]
 80206f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206f6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80206f8:	3302      	adds	r3, #2
 80206fa:	930c      	str	r3, [sp, #48]	; 0x30
 80206fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80206fe:	4413      	add	r3, r2
 8020700:	931f      	str	r3, [sp, #124]	; 0x7c
 8020702:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020704:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020706:	4413      	add	r3, r2
 8020708:	9320      	str	r3, [sp, #128]	; 0x80
 802070a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802070c:	3b01      	subs	r3, #1
 802070e:	9311      	str	r3, [sp, #68]	; 0x44
 8020710:	e732      	b.n	8020578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020712:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020714:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020716:	4433      	add	r3, r6
 8020718:	931f      	str	r3, [sp, #124]	; 0x7c
 802071a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 802071c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802071e:	4433      	add	r3, r6
 8020720:	9320      	str	r3, [sp, #128]	; 0x80
 8020722:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020724:	3b01      	subs	r3, #1
 8020726:	9309      	str	r3, [sp, #36]	; 0x24
 8020728:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802072a:	3302      	adds	r3, #2
 802072c:	930a      	str	r3, [sp, #40]	; 0x28
 802072e:	e702      	b.n	8020536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020730:	d027      	beq.n	8020782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8020732:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020734:	9821      	ldr	r0, [sp, #132]	; 0x84
 8020736:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020738:	3b01      	subs	r3, #1
 802073a:	fb00 5003 	mla	r0, r0, r3, r5
 802073e:	1400      	asrs	r0, r0, #16
 8020740:	f53f af16 	bmi.w	8020570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020744:	3901      	subs	r1, #1
 8020746:	4288      	cmp	r0, r1
 8020748:	f6bf af12 	bge.w	8020570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802074c:	9922      	ldr	r1, [sp, #136]	; 0x88
 802074e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020750:	fb01 0303 	mla	r3, r1, r3, r0
 8020754:	141b      	asrs	r3, r3, #16
 8020756:	f53f af0b 	bmi.w	8020570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802075a:	3a01      	subs	r2, #1
 802075c:	4293      	cmp	r3, r2
 802075e:	f6bf af07 	bge.w	8020570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020762:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020764:	9311      	str	r3, [sp, #68]	; 0x44
 8020766:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 802076a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802076c:	930c      	str	r3, [sp, #48]	; 0x30
 802076e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020770:	2b00      	cmp	r3, #0
 8020772:	dc70      	bgt.n	8020856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020774:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020776:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020778:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802077c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020780:	930a      	str	r3, [sp, #40]	; 0x28
 8020782:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020784:	2b00      	cmp	r3, #0
 8020786:	f340 8124 	ble.w	80209d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802078a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802078e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020792:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020796:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020798:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802079c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80207a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80207a4:	eef0 6a62 	vmov.f32	s13, s5
 80207a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80207ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80207b4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80207b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80207bc:	eef0 6a43 	vmov.f32	s13, s6
 80207c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80207c4:	ee12 2a90 	vmov	r2, s5
 80207c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80207cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80207d0:	ee13 2a10 	vmov	r2, s6
 80207d4:	9321      	str	r3, [sp, #132]	; 0x84
 80207d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80207d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80207dc:	9322      	str	r3, [sp, #136]	; 0x88
 80207de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80207e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80207e2:	3b01      	subs	r3, #1
 80207e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207e8:	930e      	str	r3, [sp, #56]	; 0x38
 80207ea:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80207ec:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80207f0:	bf08      	it	eq
 80207f2:	4613      	moveq	r3, r2
 80207f4:	9309      	str	r3, [sp, #36]	; 0x24
 80207f6:	eeb0 3a67 	vmov.f32	s6, s15
 80207fa:	eef0 2a47 	vmov.f32	s5, s14
 80207fe:	e68c      	b.n	802051a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020800:	b149      	cbz	r1, 8020816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020802:	5cb2      	ldrb	r2, [r6, r2]
 8020804:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020808:	4422      	add	r2, r4
 802080a:	4628      	mov	r0, r5
 802080c:	46ac      	mov	ip, r5
 802080e:	e6f1      	b.n	80205f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020810:	4628      	mov	r0, r5
 8020812:	462a      	mov	r2, r5
 8020814:	e6ee      	b.n	80205f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020816:	4628      	mov	r0, r5
 8020818:	462a      	mov	r2, r5
 802081a:	e7f7      	b.n	802080c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802081c:	1c47      	adds	r7, r0, #1
 802081e:	f53f af69 	bmi.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020822:	42ba      	cmp	r2, r7
 8020824:	f6ff af66 	blt.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020828:	1c6f      	adds	r7, r5, #1
 802082a:	f53f af63 	bmi.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802082e:	42be      	cmp	r6, r7
 8020830:	f6ff af60 	blt.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020834:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020836:	9002      	str	r0, [sp, #8]
 8020838:	b236      	sxth	r6, r6
 802083a:	b212      	sxth	r2, r2
 802083c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8020840:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8020844:	9200      	str	r2, [sp, #0]
 8020846:	9601      	str	r6, [sp, #4]
 8020848:	4623      	mov	r3, r4
 802084a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802084e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020850:	f7ff fd59 	bl	8020306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8020854:	e74e      	b.n	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020856:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020858:	9820      	ldr	r0, [sp, #128]	; 0x80
 802085a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 802085c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802085e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020862:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020864:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020868:	142d      	asrs	r5, r5, #16
 802086a:	1400      	asrs	r0, r0, #16
 802086c:	fb02 5000 	mla	r0, r2, r0, r5
 8020870:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020872:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020876:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802087a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802087e:	182e      	adds	r6, r5, r0
 8020880:	eb04 0509 	add.w	r5, r4, r9
 8020884:	2b00      	cmp	r3, #0
 8020886:	f000 8096 	beq.w	80209b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802088a:	7877      	ldrb	r7, [r6, #1]
 802088c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020890:	4427      	add	r7, r4
 8020892:	2900      	cmp	r1, #0
 8020894:	f000 8097 	beq.w	80209c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020898:	18b0      	adds	r0, r6, r2
 802089a:	5cb2      	ldrb	r2, [r6, r2]
 802089c:	7840      	ldrb	r0, [r0, #1]
 802089e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80208a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80208a6:	4422      	add	r2, r4
 80208a8:	4420      	add	r0, r4
 80208aa:	b29b      	uxth	r3, r3
 80208ac:	b289      	uxth	r1, r1
 80208ae:	fb03 f801 	mul.w	r8, r3, r1
 80208b2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80208b4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80208b8:	f8b6 c000 	ldrh.w	ip, [r6]
 80208bc:	78be      	ldrb	r6, [r7, #2]
 80208be:	f814 9009 	ldrb.w	r9, [r4, r9]
 80208c2:	011b      	lsls	r3, r3, #4
 80208c4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80208c8:	b289      	uxth	r1, r1
 80208ca:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80208ce:	eba3 0308 	sub.w	r3, r3, r8
 80208d2:	b29b      	uxth	r3, r3
 80208d4:	ebae 0e01 	sub.w	lr, lr, r1
 80208d8:	fa1f fe8e 	uxth.w	lr, lr
 80208dc:	435e      	muls	r6, r3
 80208de:	fb0e 660b 	mla	r6, lr, fp, r6
 80208e2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80208e6:	9310      	str	r3, [sp, #64]	; 0x40
 80208e8:	fb01 660b 	mla	r6, r1, fp, r6
 80208ec:	f890 b002 	ldrb.w	fp, [r0, #2]
 80208f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80208f2:	fb08 660b 	mla	r6, r8, fp, r6
 80208f6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80208fa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80208fe:	fb1b fb03 	smulbb	fp, fp, r3
 8020902:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020906:	fb06 b60a 	mla	r6, r6, sl, fp
 802090a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802090c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020910:	787d      	ldrb	r5, [r7, #1]
 8020912:	783f      	ldrb	r7, [r7, #0]
 8020914:	435d      	muls	r5, r3
 8020916:	fb0e 550b 	mla	r5, lr, fp, r5
 802091a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802091e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020920:	fb01 550b 	mla	r5, r1, fp, r5
 8020924:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020928:	fb08 550b 	mla	r5, r8, fp, r5
 802092c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020930:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020934:	fb1b fb03 	smulbb	fp, fp, r3
 8020938:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802093a:	437b      	muls	r3, r7
 802093c:	7817      	ldrb	r7, [r2, #0]
 802093e:	fb0e 3309 	mla	r3, lr, r9, r3
 8020942:	fb01 3307 	mla	r3, r1, r7, r3
 8020946:	7807      	ldrb	r7, [r0, #0]
 8020948:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802094c:	fb08 3707 	mla	r7, r8, r7, r3
 8020950:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020952:	fa5f fc8c 	uxtb.w	ip, ip
 8020956:	fb1c fc03 	smulbb	ip, ip, r3
 802095a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802095e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020962:	fb05 b50a 	mla	r5, r5, sl, fp
 8020966:	fb07 c70a 	mla	r7, r7, sl, ip
 802096a:	b2b6      	uxth	r6, r6
 802096c:	b2ad      	uxth	r5, r5
 802096e:	b2bf      	uxth	r7, r7
 8020970:	1c73      	adds	r3, r6, #1
 8020972:	1c7a      	adds	r2, r7, #1
 8020974:	f105 0b01 	add.w	fp, r5, #1
 8020978:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802097c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020980:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020984:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020988:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 802098c:	096d      	lsrs	r5, r5, #5
 802098e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020990:	4316      	orrs	r6, r2
 8020992:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020996:	432e      	orrs	r6, r5
 8020998:	f823 6b02 	strh.w	r6, [r3], #2
 802099c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802099e:	930c      	str	r3, [sp, #48]	; 0x30
 80209a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80209a2:	4413      	add	r3, r2
 80209a4:	931f      	str	r3, [sp, #124]	; 0x7c
 80209a6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80209a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80209aa:	4413      	add	r3, r2
 80209ac:	9320      	str	r3, [sp, #128]	; 0x80
 80209ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80209b0:	3b01      	subs	r3, #1
 80209b2:	9311      	str	r3, [sp, #68]	; 0x44
 80209b4:	e6db      	b.n	802076e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80209b6:	b149      	cbz	r1, 80209cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80209b8:	5cb2      	ldrb	r2, [r6, r2]
 80209ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80209be:	4422      	add	r2, r4
 80209c0:	4628      	mov	r0, r5
 80209c2:	462f      	mov	r7, r5
 80209c4:	e771      	b.n	80208aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80209c6:	4628      	mov	r0, r5
 80209c8:	462a      	mov	r2, r5
 80209ca:	e76e      	b.n	80208aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80209cc:	4628      	mov	r0, r5
 80209ce:	462a      	mov	r2, r5
 80209d0:	e7f7      	b.n	80209c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80209d2:	b015      	add	sp, #84	; 0x54
 80209d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080209d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80209d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209dc:	880f      	ldrh	r7, [r1, #0]
 80209de:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80209e2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80209e6:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80209ea:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80209ee:	023c      	lsls	r4, r7, #8
 80209f0:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80209f4:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80209f8:	017c      	lsls	r4, r7, #5
 80209fa:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80209fe:	00ff      	lsls	r7, r7, #3
 8020a00:	ea4b 0404 	orr.w	r4, fp, r4
 8020a04:	b2ff      	uxtb	r7, r7
 8020a06:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020a0a:	4327      	orrs	r7, r4
 8020a0c:	2d00      	cmp	r5, #0
 8020a0e:	eb02 080a 	add.w	r8, r2, sl
 8020a12:	9701      	str	r7, [sp, #4]
 8020a14:	db7e      	blt.n	8020b14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020a16:	45a9      	cmp	r9, r5
 8020a18:	dd7c      	ble.n	8020b14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020a1a:	f1bc 0f00 	cmp.w	ip, #0
 8020a1e:	db77      	blt.n	8020b10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020a20:	45e6      	cmp	lr, ip
 8020a22:	dd75      	ble.n	8020b10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020a24:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020a28:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020a2c:	441f      	add	r7, r3
 8020a2e:	f11c 0201 	adds.w	r2, ip, #1
 8020a32:	d472      	bmi.n	8020b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020a34:	4596      	cmp	lr, r2
 8020a36:	dd70      	ble.n	8020b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020a38:	2800      	cmp	r0, #0
 8020a3a:	d06e      	beq.n	8020b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020a3c:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020a40:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020a44:	441c      	add	r4, r3
 8020a46:	3501      	adds	r5, #1
 8020a48:	d46b      	bmi.n	8020b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020a4a:	45a9      	cmp	r9, r5
 8020a4c:	dd69      	ble.n	8020b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020a4e:	2e00      	cmp	r6, #0
 8020a50:	d067      	beq.n	8020b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020a52:	f1bc 0f00 	cmp.w	ip, #0
 8020a56:	db62      	blt.n	8020b1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020a58:	45e6      	cmp	lr, ip
 8020a5a:	dd60      	ble.n	8020b1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020a5c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020a60:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020a64:	441d      	add	r5, r3
 8020a66:	f11c 0201 	adds.w	r2, ip, #1
 8020a6a:	d45d      	bmi.n	8020b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020a6c:	4596      	cmp	lr, r2
 8020a6e:	dd5b      	ble.n	8020b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020a70:	2800      	cmp	r0, #0
 8020a72:	d059      	beq.n	8020b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020a74:	44c6      	add	lr, r8
 8020a76:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020a7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a7e:	4413      	add	r3, r2
 8020a80:	b280      	uxth	r0, r0
 8020a82:	b2b2      	uxth	r2, r6
 8020a84:	fb00 f602 	mul.w	r6, r0, r2
 8020a88:	0100      	lsls	r0, r0, #4
 8020a8a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8020a8e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020a92:	1b80      	subs	r0, r0, r6
 8020a94:	fa1f fc82 	uxth.w	ip, r2
 8020a98:	b282      	uxth	r2, r0
 8020a9a:	78a0      	ldrb	r0, [r4, #2]
 8020a9c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020aa0:	f897 9000 	ldrb.w	r9, [r7]
 8020aa4:	787f      	ldrb	r7, [r7, #1]
 8020aa6:	eba8 080c 	sub.w	r8, r8, ip
 8020aaa:	fa1f f888 	uxth.w	r8, r8
 8020aae:	4350      	muls	r0, r2
 8020ab0:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020ab4:	78a8      	ldrb	r0, [r5, #2]
 8020ab6:	fb0c e000 	mla	r0, ip, r0, lr
 8020aba:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020abe:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020ac2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020ac6:	f894 e000 	ldrb.w	lr, [r4]
 8020aca:	fb02 fe0e 	mul.w	lr, r2, lr
 8020ace:	fb08 e909 	mla	r9, r8, r9, lr
 8020ad2:	f895 e000 	ldrb.w	lr, [r5]
 8020ad6:	fb0c 990e 	mla	r9, ip, lr, r9
 8020ada:	f893 e000 	ldrb.w	lr, [r3]
 8020ade:	785b      	ldrb	r3, [r3, #1]
 8020ae0:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020ae4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020ae8:	ea4e 0e00 	orr.w	lr, lr, r0
 8020aec:	7860      	ldrb	r0, [r4, #1]
 8020aee:	4350      	muls	r0, r2
 8020af0:	786a      	ldrb	r2, [r5, #1]
 8020af2:	fb08 0007 	mla	r0, r8, r7, r0
 8020af6:	fb0c 0202 	mla	r2, ip, r2, r0
 8020afa:	fb06 2303 	mla	r3, r6, r3, r2
 8020afe:	095b      	lsrs	r3, r3, #5
 8020b00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b04:	ea4e 0303 	orr.w	r3, lr, r3
 8020b08:	800b      	strh	r3, [r1, #0]
 8020b0a:	b003      	add	sp, #12
 8020b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b10:	af01      	add	r7, sp, #4
 8020b12:	e78c      	b.n	8020a2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020b14:	ac01      	add	r4, sp, #4
 8020b16:	4627      	mov	r7, r4
 8020b18:	e795      	b.n	8020a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020b1a:	ac01      	add	r4, sp, #4
 8020b1c:	e793      	b.n	8020a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020b1e:	ad01      	add	r5, sp, #4
 8020b20:	e7a1      	b.n	8020a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020b22:	ab01      	add	r3, sp, #4
 8020b24:	461d      	mov	r5, r3
 8020b26:	e7ab      	b.n	8020a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020b28:	ab01      	add	r3, sp, #4
 8020b2a:	e7a9      	b.n	8020a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b30:	b08f      	sub	sp, #60	; 0x3c
 8020b32:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020b36:	920c      	str	r2, [sp, #48]	; 0x30
 8020b38:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020b3a:	910a      	str	r1, [sp, #40]	; 0x28
 8020b3c:	9306      	str	r3, [sp, #24]
 8020b3e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020b42:	900d      	str	r0, [sp, #52]	; 0x34
 8020b44:	6850      	ldr	r0, [r2, #4]
 8020b46:	6812      	ldr	r2, [r2, #0]
 8020b48:	fb00 1303 	mla	r3, r0, r3, r1
 8020b4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020b50:	9307      	str	r3, [sp, #28]
 8020b52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b54:	681b      	ldr	r3, [r3, #0]
 8020b56:	9308      	str	r3, [sp, #32]
 8020b58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b5a:	685c      	ldr	r4, [r3, #4]
 8020b5c:	3404      	adds	r4, #4
 8020b5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020b60:	2b00      	cmp	r3, #0
 8020b62:	dc03      	bgt.n	8020b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020b64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020b66:	2b00      	cmp	r3, #0
 8020b68:	f340 81d6 	ble.w	8020f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020b6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020b76:	1e48      	subs	r0, r1, #1
 8020b78:	1e56      	subs	r6, r2, #1
 8020b7a:	9b06      	ldr	r3, [sp, #24]
 8020b7c:	2b00      	cmp	r3, #0
 8020b7e:	f340 80b7 	ble.w	8020cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020b82:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020b86:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020b8a:	d406      	bmi.n	8020b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b8c:	4287      	cmp	r7, r0
 8020b8e:	da04      	bge.n	8020b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b90:	2b00      	cmp	r3, #0
 8020b92:	db02      	blt.n	8020b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b94:	42b3      	cmp	r3, r6
 8020b96:	f2c0 80ac 	blt.w	8020cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020b9a:	3701      	adds	r7, #1
 8020b9c:	f100 809d 	bmi.w	8020cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020ba0:	42b9      	cmp	r1, r7
 8020ba2:	f2c0 809a 	blt.w	8020cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020ba6:	3301      	adds	r3, #1
 8020ba8:	f100 8097 	bmi.w	8020cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020bac:	429a      	cmp	r2, r3
 8020bae:	f2c0 8094 	blt.w	8020cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020bb2:	9b06      	ldr	r3, [sp, #24]
 8020bb4:	930b      	str	r3, [sp, #44]	; 0x2c
 8020bb6:	9b07      	ldr	r3, [sp, #28]
 8020bb8:	9309      	str	r3, [sp, #36]	; 0x24
 8020bba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020bbc:	2b00      	cmp	r3, #0
 8020bbe:	f340 80b5 	ble.w	8020d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020bc2:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020bc4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020bc6:	68c7      	ldr	r7, [r0, #12]
 8020bc8:	6892      	ldr	r2, [r2, #8]
 8020bca:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020bce:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020bd2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020bd6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020bda:	f100 80fb 	bmi.w	8020dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020bde:	f102 3cff 	add.w	ip, r2, #4294967295
 8020be2:	4560      	cmp	r0, ip
 8020be4:	f280 80f6 	bge.w	8020dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020be8:	2e00      	cmp	r6, #0
 8020bea:	f2c0 80f3 	blt.w	8020dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020bee:	f107 3cff 	add.w	ip, r7, #4294967295
 8020bf2:	4566      	cmp	r6, ip
 8020bf4:	f280 80ee 	bge.w	8020dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020bf8:	b212      	sxth	r2, r2
 8020bfa:	fb06 0002 	mla	r0, r6, r2, r0
 8020bfe:	9e08      	ldr	r6, [sp, #32]
 8020c00:	1837      	adds	r7, r6, r0
 8020c02:	5c30      	ldrb	r0, [r6, r0]
 8020c04:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020c08:	eb04 0c08 	add.w	ip, r4, r8
 8020c0c:	2b00      	cmp	r3, #0
 8020c0e:	f000 80d3 	beq.w	8020db8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020c12:	787e      	ldrb	r6, [r7, #1]
 8020c14:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020c18:	4426      	add	r6, r4
 8020c1a:	2900      	cmp	r1, #0
 8020c1c:	f000 80d4 	beq.w	8020dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020c20:	18b8      	adds	r0, r7, r2
 8020c22:	5cba      	ldrb	r2, [r7, r2]
 8020c24:	7840      	ldrb	r0, [r0, #1]
 8020c26:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020c2a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020c2e:	4422      	add	r2, r4
 8020c30:	4420      	add	r0, r4
 8020c32:	b29b      	uxth	r3, r3
 8020c34:	b289      	uxth	r1, r1
 8020c36:	fb03 f901 	mul.w	r9, r3, r1
 8020c3a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020c3e:	011b      	lsls	r3, r3, #4
 8020c40:	b289      	uxth	r1, r1
 8020c42:	78b7      	ldrb	r7, [r6, #2]
 8020c44:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020c48:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020c4c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020c50:	eba3 0309 	sub.w	r3, r3, r9
 8020c54:	b29b      	uxth	r3, r3
 8020c56:	ebae 0e01 	sub.w	lr, lr, r1
 8020c5a:	fa1f fe8e 	uxth.w	lr, lr
 8020c5e:	435f      	muls	r7, r3
 8020c60:	fb0e 770a 	mla	r7, lr, sl, r7
 8020c64:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020c68:	fb01 770a 	mla	r7, r1, sl, r7
 8020c6c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020c70:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020c74:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020c78:	f896 8000 	ldrb.w	r8, [r6]
 8020c7c:	7876      	ldrb	r6, [r6, #1]
 8020c7e:	fb03 f808 	mul.w	r8, r3, r8
 8020c82:	fb0e 8807 	mla	r8, lr, r7, r8
 8020c86:	7817      	ldrb	r7, [r2, #0]
 8020c88:	fb01 8807 	mla	r8, r1, r7, r8
 8020c8c:	7807      	ldrb	r7, [r0, #0]
 8020c8e:	fb09 8707 	mla	r7, r9, r7, r8
 8020c92:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020c96:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020c9a:	ea47 070a 	orr.w	r7, r7, sl
 8020c9e:	4373      	muls	r3, r6
 8020ca0:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020ca4:	fb0e 330c 	mla	r3, lr, ip, r3
 8020ca8:	fb01 310a 	mla	r1, r1, sl, r3
 8020cac:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020cb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cb2:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020cb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020cba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020cbe:	ea47 070a 	orr.w	r7, r7, sl
 8020cc2:	801f      	strh	r7, [r3, #0]
 8020cc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cc6:	3302      	adds	r3, #2
 8020cc8:	9309      	str	r3, [sp, #36]	; 0x24
 8020cca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020ccc:	449b      	add	fp, r3
 8020cce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020cd0:	441d      	add	r5, r3
 8020cd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020cd4:	3b01      	subs	r3, #1
 8020cd6:	930b      	str	r3, [sp, #44]	; 0x2c
 8020cd8:	e76f      	b.n	8020bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020cda:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020cdc:	449b      	add	fp, r3
 8020cde:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020ce0:	441d      	add	r5, r3
 8020ce2:	9b06      	ldr	r3, [sp, #24]
 8020ce4:	3b01      	subs	r3, #1
 8020ce6:	9306      	str	r3, [sp, #24]
 8020ce8:	9b07      	ldr	r3, [sp, #28]
 8020cea:	3302      	adds	r3, #2
 8020cec:	9307      	str	r3, [sp, #28]
 8020cee:	e744      	b.n	8020b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020cf0:	d023      	beq.n	8020d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020cf2:	9b06      	ldr	r3, [sp, #24]
 8020cf4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020cf6:	3b01      	subs	r3, #1
 8020cf8:	fb00 b003 	mla	r0, r0, r3, fp
 8020cfc:	1400      	asrs	r0, r0, #16
 8020cfe:	f53f af58 	bmi.w	8020bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d02:	3901      	subs	r1, #1
 8020d04:	4288      	cmp	r0, r1
 8020d06:	f6bf af54 	bge.w	8020bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d0a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020d0c:	fb01 5303 	mla	r3, r1, r3, r5
 8020d10:	141b      	asrs	r3, r3, #16
 8020d12:	f53f af4e 	bmi.w	8020bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d16:	3a01      	subs	r2, #1
 8020d18:	4293      	cmp	r3, r2
 8020d1a:	f6bf af4a 	bge.w	8020bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020d1e:	9b06      	ldr	r3, [sp, #24]
 8020d20:	9309      	str	r3, [sp, #36]	; 0x24
 8020d22:	9b07      	ldr	r3, [sp, #28]
 8020d24:	930b      	str	r3, [sp, #44]	; 0x2c
 8020d26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d28:	2b00      	cmp	r3, #0
 8020d2a:	dc70      	bgt.n	8020e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020d2c:	9b06      	ldr	r3, [sp, #24]
 8020d2e:	9a07      	ldr	r2, [sp, #28]
 8020d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020d34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020d38:	9307      	str	r3, [sp, #28]
 8020d3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d3c:	2b00      	cmp	r3, #0
 8020d3e:	f340 80eb 	ble.w	8020f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020d42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d46:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020d4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d54:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d5c:	eef0 6a62 	vmov.f32	s13, s5
 8020d60:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d68:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d6c:	ee16 ba90 	vmov	fp, s13
 8020d70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d74:	eef0 6a43 	vmov.f32	s13, s6
 8020d78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d7c:	ee12 2a90 	vmov	r2, s5
 8020d80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d84:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d88:	ee13 2a10 	vmov	r2, s6
 8020d8c:	931b      	str	r3, [sp, #108]	; 0x6c
 8020d8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d94:	931c      	str	r3, [sp, #112]	; 0x70
 8020d96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020d9a:	3b01      	subs	r3, #1
 8020d9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020da0:	930a      	str	r3, [sp, #40]	; 0x28
 8020da2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020da4:	bf08      	it	eq
 8020da6:	4613      	moveq	r3, r2
 8020da8:	ee16 5a90 	vmov	r5, s13
 8020dac:	9306      	str	r3, [sp, #24]
 8020dae:	eeb0 3a67 	vmov.f32	s6, s15
 8020db2:	eef0 2a47 	vmov.f32	s5, s14
 8020db6:	e6d2      	b.n	8020b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020db8:	b149      	cbz	r1, 8020dce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020dba:	5cba      	ldrb	r2, [r7, r2]
 8020dbc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020dc0:	4422      	add	r2, r4
 8020dc2:	4660      	mov	r0, ip
 8020dc4:	4666      	mov	r6, ip
 8020dc6:	e734      	b.n	8020c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020dc8:	4660      	mov	r0, ip
 8020dca:	4662      	mov	r2, ip
 8020dcc:	e731      	b.n	8020c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020dce:	4660      	mov	r0, ip
 8020dd0:	4662      	mov	r2, ip
 8020dd2:	e7f7      	b.n	8020dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020dd4:	f110 0c01 	adds.w	ip, r0, #1
 8020dd8:	f53f af74 	bmi.w	8020cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020ddc:	4562      	cmp	r2, ip
 8020dde:	f6ff af71 	blt.w	8020cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020de2:	f116 0c01 	adds.w	ip, r6, #1
 8020de6:	f53f af6d 	bmi.w	8020cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020dea:	4567      	cmp	r7, ip
 8020dec:	f6ff af6a 	blt.w	8020cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020df0:	b23f      	sxth	r7, r7
 8020df2:	b212      	sxth	r2, r2
 8020df4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020df8:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020dfc:	9200      	str	r2, [sp, #0]
 8020dfe:	9701      	str	r7, [sp, #4]
 8020e00:	4623      	mov	r3, r4
 8020e02:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020e06:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020e08:	f7ff fde6 	bl	80209d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020e0c:	e75a      	b.n	8020cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e0e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020e10:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020e14:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020e18:	1428      	asrs	r0, r5, #16
 8020e1a:	fb02 6000 	mla	r0, r2, r0, r6
 8020e1e:	9e08      	ldr	r6, [sp, #32]
 8020e20:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020e24:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020e28:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020e2c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020e30:	1837      	adds	r7, r6, r0
 8020e32:	eb04 0c08 	add.w	ip, r4, r8
 8020e36:	2b00      	cmp	r3, #0
 8020e38:	d060      	beq.n	8020efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020e3a:	787e      	ldrb	r6, [r7, #1]
 8020e3c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020e40:	4426      	add	r6, r4
 8020e42:	2900      	cmp	r1, #0
 8020e44:	d062      	beq.n	8020f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020e46:	18b8      	adds	r0, r7, r2
 8020e48:	5cba      	ldrb	r2, [r7, r2]
 8020e4a:	7840      	ldrb	r0, [r0, #1]
 8020e4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020e50:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020e54:	4422      	add	r2, r4
 8020e56:	4420      	add	r0, r4
 8020e58:	b29b      	uxth	r3, r3
 8020e5a:	b289      	uxth	r1, r1
 8020e5c:	fb03 f901 	mul.w	r9, r3, r1
 8020e60:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020e64:	011b      	lsls	r3, r3, #4
 8020e66:	b289      	uxth	r1, r1
 8020e68:	78b7      	ldrb	r7, [r6, #2]
 8020e6a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020e6e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020e72:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020e76:	eba3 0309 	sub.w	r3, r3, r9
 8020e7a:	b29b      	uxth	r3, r3
 8020e7c:	ebae 0e01 	sub.w	lr, lr, r1
 8020e80:	fa1f fe8e 	uxth.w	lr, lr
 8020e84:	435f      	muls	r7, r3
 8020e86:	fb0e 770a 	mla	r7, lr, sl, r7
 8020e8a:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020e8e:	fb01 770a 	mla	r7, r1, sl, r7
 8020e92:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020e96:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020e9a:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020e9e:	f896 8000 	ldrb.w	r8, [r6]
 8020ea2:	7876      	ldrb	r6, [r6, #1]
 8020ea4:	fb03 f808 	mul.w	r8, r3, r8
 8020ea8:	fb0e 8807 	mla	r8, lr, r7, r8
 8020eac:	7817      	ldrb	r7, [r2, #0]
 8020eae:	fb01 8807 	mla	r8, r1, r7, r8
 8020eb2:	7807      	ldrb	r7, [r0, #0]
 8020eb4:	fb09 8707 	mla	r7, r9, r7, r8
 8020eb8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020ebc:	4373      	muls	r3, r6
 8020ebe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020ec2:	7856      	ldrb	r6, [r2, #1]
 8020ec4:	ea47 070a 	orr.w	r7, r7, sl
 8020ec8:	fb0e 330c 	mla	r3, lr, ip, r3
 8020ecc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020ed0:	fb01 3306 	mla	r3, r1, r6, r3
 8020ed4:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020ed8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020edc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ede:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020ee2:	ea47 070a 	orr.w	r7, r7, sl
 8020ee6:	f823 7b02 	strh.w	r7, [r3], #2
 8020eea:	930b      	str	r3, [sp, #44]	; 0x2c
 8020eec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020eee:	449b      	add	fp, r3
 8020ef0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020ef2:	441d      	add	r5, r3
 8020ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ef6:	3b01      	subs	r3, #1
 8020ef8:	9309      	str	r3, [sp, #36]	; 0x24
 8020efa:	e714      	b.n	8020d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020efc:	b149      	cbz	r1, 8020f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020efe:	5cba      	ldrb	r2, [r7, r2]
 8020f00:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f04:	4422      	add	r2, r4
 8020f06:	4660      	mov	r0, ip
 8020f08:	4666      	mov	r6, ip
 8020f0a:	e7a5      	b.n	8020e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020f0c:	4660      	mov	r0, ip
 8020f0e:	4662      	mov	r2, ip
 8020f10:	e7a2      	b.n	8020e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020f12:	4660      	mov	r0, ip
 8020f14:	4662      	mov	r2, ip
 8020f16:	e7f7      	b.n	8020f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020f18:	b00f      	add	sp, #60	; 0x3c
 8020f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020f1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020f1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f22:	b085      	sub	sp, #20
 8020f24:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020f28:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020f2c:	9102      	str	r1, [sp, #8]
 8020f2e:	2c00      	cmp	r4, #0
 8020f30:	fb04 710c 	mla	r1, r4, ip, r7
 8020f34:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020f38:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020f3c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020f40:	eb02 0e01 	add.w	lr, r2, r1
 8020f44:	f2c0 8122 	blt.w	802118c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020f48:	45a0      	cmp	r8, r4
 8020f4a:	f340 811f 	ble.w	802118c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020f4e:	2f00      	cmp	r7, #0
 8020f50:	f2c0 811a 	blt.w	8021188 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020f54:	45bc      	cmp	ip, r7
 8020f56:	f340 8117 	ble.w	8021188 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020f5a:	5c52      	ldrb	r2, [r2, r1]
 8020f5c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020f60:	1c7a      	adds	r2, r7, #1
 8020f62:	f100 8116 	bmi.w	8021192 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020f66:	4594      	cmp	ip, r2
 8020f68:	f340 8113 	ble.w	8021192 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020f6c:	2e00      	cmp	r6, #0
 8020f6e:	f000 8112 	beq.w	8021196 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020f72:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020f76:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020f7a:	3401      	adds	r4, #1
 8020f7c:	f100 810f 	bmi.w	802119e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020f80:	45a0      	cmp	r8, r4
 8020f82:	f340 810c 	ble.w	802119e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020f86:	2800      	cmp	r0, #0
 8020f88:	f000 810c 	beq.w	80211a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020f8c:	2f00      	cmp	r7, #0
 8020f8e:	f2c0 8104 	blt.w	802119a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020f92:	45bc      	cmp	ip, r7
 8020f94:	f340 8101 	ble.w	802119a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020f98:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020f9c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020fa0:	3701      	adds	r7, #1
 8020fa2:	f100 8102 	bmi.w	80211aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020fa6:	45bc      	cmp	ip, r7
 8020fa8:	f340 80ff 	ble.w	80211aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020fac:	2e00      	cmp	r6, #0
 8020fae:	f000 80fe 	beq.w	80211ae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020fb2:	44f4      	add	ip, lr
 8020fb4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020fb8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020fbc:	b2b6      	uxth	r6, r6
 8020fbe:	b280      	uxth	r0, r0
 8020fc0:	fb00 fe06 	mul.w	lr, r0, r6
 8020fc4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020fc8:	0136      	lsls	r6, r6, #4
 8020fca:	eba6 070e 	sub.w	r7, r6, lr
 8020fce:	b280      	uxth	r0, r0
 8020fd0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020fd4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020fd8:	b2bf      	uxth	r7, r7
 8020fda:	1a1b      	subs	r3, r3, r0
 8020fdc:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020fe0:	b29b      	uxth	r3, r3
 8020fe2:	fb0a f607 	mul.w	r6, sl, r7
 8020fe6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020fea:	fb0b 6603 	mla	r6, fp, r3, r6
 8020fee:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020ff2:	fb00 6609 	mla	r6, r0, r9, r6
 8020ff6:	fb0e 6608 	mla	r6, lr, r8, r6
 8020ffa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020ffe:	9600      	str	r6, [sp, #0]
 8021000:	2e00      	cmp	r6, #0
 8021002:	f000 80be 	beq.w	8021182 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021006:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802100a:	fb0b fc0c 	mul.w	ip, fp, ip
 802100e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021012:	fb0b f505 	mul.w	r5, fp, r5
 8021016:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802101a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802101e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021022:	44dc      	add	ip, fp
 8021024:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021028:	9501      	str	r5, [sp, #4]
 802102a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802102e:	9503      	str	r5, [sp, #12]
 8021030:	9d01      	ldr	r5, [sp, #4]
 8021032:	9e02      	ldr	r6, [sp, #8]
 8021034:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021038:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802103c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8021040:	fb0a fc0c 	mul.w	ip, sl, ip
 8021044:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021048:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802104c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021050:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021054:	4465      	add	r5, ip
 8021056:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802105a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802105e:	fb09 fc0c 	mul.w	ip, r9, ip
 8021062:	fb09 f904 	mul.w	r9, r9, r4
 8021066:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802106a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802106e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021072:	fb08 f404 	mul.w	r4, r8, r4
 8021076:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802107a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802107e:	fb08 f802 	mul.w	r8, r8, r2
 8021082:	fb0a fa01 	mul.w	sl, sl, r1
 8021086:	0a22      	lsrs	r2, r4, #8
 8021088:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802108c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021090:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021094:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021098:	4414      	add	r4, r2
 802109a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802109e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80210a2:	0a2d      	lsrs	r5, r5, #8
 80210a4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80210a8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80210ac:	9a03      	ldr	r2, [sp, #12]
 80210ae:	8836      	ldrh	r6, [r6, #0]
 80210b0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80210b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80210b8:	437d      	muls	r5, r7
 80210ba:	4461      	add	r1, ip
 80210bc:	0a24      	lsrs	r4, r4, #8
 80210be:	fb02 5503 	mla	r5, r2, r3, r5
 80210c2:	0a09      	lsrs	r1, r1, #8
 80210c4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80210c8:	fb04 540e 	mla	r4, r4, lr, r5
 80210cc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80210d0:	fb01 4100 	mla	r1, r1, r0, r4
 80210d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210d8:	0a09      	lsrs	r1, r1, #8
 80210da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210de:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80210e2:	fb07 f70a 	mul.w	r7, r7, sl
 80210e6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80210ea:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80210ee:	fb03 7101 	mla	r1, r3, r1, r7
 80210f2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80210f6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80210fa:	fb0e 1e08 	mla	lr, lr, r8, r1
 80210fe:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021102:	fb00 e101 	mla	r1, r0, r1, lr
 8021106:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802110a:	9a00      	ldr	r2, [sp, #0]
 802110c:	b287      	uxth	r7, r0
 802110e:	437a      	muls	r2, r7
 8021110:	0a09      	lsrs	r1, r1, #8
 8021112:	1c53      	adds	r3, r2, #1
 8021114:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021118:	4321      	orrs	r1, r4
 802111a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802111e:	1235      	asrs	r5, r6, #8
 8021120:	0c0a      	lsrs	r2, r1, #16
 8021122:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021126:	b2db      	uxtb	r3, r3
 8021128:	fb12 f207 	smulbb	r2, r2, r7
 802112c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021130:	fb05 2503 	mla	r5, r5, r3, r2
 8021134:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021138:	10f2      	asrs	r2, r6, #3
 802113a:	b2c8      	uxtb	r0, r1
 802113c:	00f6      	lsls	r6, r6, #3
 802113e:	fb14 f407 	smulbb	r4, r4, r7
 8021142:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021146:	b2f6      	uxtb	r6, r6
 8021148:	fb10 f007 	smulbb	r0, r0, r7
 802114c:	fb02 4203 	mla	r2, r2, r3, r4
 8021150:	b2ad      	uxth	r5, r5
 8021152:	fb06 0303 	mla	r3, r6, r3, r0
 8021156:	b299      	uxth	r1, r3
 8021158:	b294      	uxth	r4, r2
 802115a:	1c6b      	adds	r3, r5, #1
 802115c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021160:	1c62      	adds	r2, r4, #1
 8021162:	1c4b      	adds	r3, r1, #1
 8021164:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021168:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802116c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021170:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021174:	0952      	lsrs	r2, r2, #5
 8021176:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802117a:	432b      	orrs	r3, r5
 802117c:	4313      	orrs	r3, r2
 802117e:	9a02      	ldr	r2, [sp, #8]
 8021180:	8013      	strh	r3, [r2, #0]
 8021182:	b005      	add	sp, #20
 8021184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021188:	2500      	movs	r5, #0
 802118a:	e6e9      	b.n	8020f60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 802118c:	2100      	movs	r1, #0
 802118e:	460d      	mov	r5, r1
 8021190:	e6f3      	b.n	8020f7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021192:	2100      	movs	r1, #0
 8021194:	e6f1      	b.n	8020f7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021196:	4631      	mov	r1, r6
 8021198:	e6ef      	b.n	8020f7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802119a:	2400      	movs	r4, #0
 802119c:	e700      	b.n	8020fa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802119e:	2200      	movs	r2, #0
 80211a0:	4614      	mov	r4, r2
 80211a2:	e70b      	b.n	8020fbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80211a4:	4602      	mov	r2, r0
 80211a6:	4604      	mov	r4, r0
 80211a8:	e708      	b.n	8020fbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80211aa:	2200      	movs	r2, #0
 80211ac:	e706      	b.n	8020fbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80211ae:	4632      	mov	r2, r6
 80211b0:	e704      	b.n	8020fbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080211b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80211b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211b6:	b09f      	sub	sp, #124	; 0x7c
 80211b8:	921b      	str	r2, [sp, #108]	; 0x6c
 80211ba:	9309      	str	r3, [sp, #36]	; 0x24
 80211bc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80211be:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80211c2:	931c      	str	r3, [sp, #112]	; 0x70
 80211c4:	9119      	str	r1, [sp, #100]	; 0x64
 80211c6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80211ca:	901d      	str	r0, [sp, #116]	; 0x74
 80211cc:	6850      	ldr	r0, [r2, #4]
 80211ce:	6812      	ldr	r2, [r2, #0]
 80211d0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80211d2:	fb00 1303 	mla	r3, r0, r3, r1
 80211d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80211da:	930c      	str	r3, [sp, #48]	; 0x30
 80211dc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80211de:	681b      	ldr	r3, [r3, #0]
 80211e0:	9312      	str	r3, [sp, #72]	; 0x48
 80211e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80211e4:	685e      	ldr	r6, [r3, #4]
 80211e6:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80211ea:	930d      	str	r3, [sp, #52]	; 0x34
 80211ec:	3604      	adds	r6, #4
 80211ee:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80211f0:	2b00      	cmp	r3, #0
 80211f2:	dc03      	bgt.n	80211fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80211f4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80211f6:	2b00      	cmp	r3, #0
 80211f8:	f340 8388 	ble.w	802190c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80211fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80211fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021202:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021206:	1e48      	subs	r0, r1, #1
 8021208:	1e57      	subs	r7, r2, #1
 802120a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802120c:	2b00      	cmp	r3, #0
 802120e:	f340 8195 	ble.w	802153c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021212:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021214:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021218:	ea4f 4325 	mov.w	r3, r5, asr #16
 802121c:	d406      	bmi.n	802122c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802121e:	4584      	cmp	ip, r0
 8021220:	da04      	bge.n	802122c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021222:	2b00      	cmp	r3, #0
 8021224:	db02      	blt.n	802122c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021226:	42bb      	cmp	r3, r7
 8021228:	f2c0 8189 	blt.w	802153e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802122c:	f11c 0c01 	adds.w	ip, ip, #1
 8021230:	f100 8177 	bmi.w	8021522 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021234:	4561      	cmp	r1, ip
 8021236:	f2c0 8174 	blt.w	8021522 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802123a:	3301      	adds	r3, #1
 802123c:	f100 8171 	bmi.w	8021522 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021240:	429a      	cmp	r2, r3
 8021242:	f2c0 816e 	blt.w	8021522 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021248:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802124a:	931a      	str	r3, [sp, #104]	; 0x68
 802124c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802124e:	2b00      	cmp	r3, #0
 8021250:	f340 8193 	ble.w	802157a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021254:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021256:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802125a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802125c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021260:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021262:	141b      	asrs	r3, r3, #16
 8021264:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021268:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802126c:	f100 81d6 	bmi.w	802161c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021270:	f100 38ff 	add.w	r8, r0, #4294967295
 8021274:	4543      	cmp	r3, r8
 8021276:	f280 81d1 	bge.w	802161c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802127a:	f1bc 0f00 	cmp.w	ip, #0
 802127e:	f2c0 81cd 	blt.w	802161c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021282:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021286:	45c4      	cmp	ip, r8
 8021288:	f280 81c8 	bge.w	802161c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802128c:	b200      	sxth	r0, r0
 802128e:	fb0c 3300 	mla	r3, ip, r0, r3
 8021292:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021294:	eb04 0803 	add.w	r8, r4, r3
 8021298:	5ce3      	ldrb	r3, [r4, r3]
 802129a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802129e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80212a2:	2a00      	cmp	r2, #0
 80212a4:	f000 81af 	beq.w	8021606 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80212a8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80212ac:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80212b0:	940e      	str	r4, [sp, #56]	; 0x38
 80212b2:	0e24      	lsrs	r4, r4, #24
 80212b4:	9415      	str	r4, [sp, #84]	; 0x54
 80212b6:	b179      	cbz	r1, 80212d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80212b8:	eb08 0c00 	add.w	ip, r8, r0
 80212bc:	f818 0000 	ldrb.w	r0, [r8, r0]
 80212c0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80212c4:	900a      	str	r0, [sp, #40]	; 0x28
 80212c6:	0e00      	lsrs	r0, r0, #24
 80212c8:	9013      	str	r0, [sp, #76]	; 0x4c
 80212ca:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80212ce:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80212d2:	900f      	str	r0, [sp, #60]	; 0x3c
 80212d4:	0e00      	lsrs	r0, r0, #24
 80212d6:	9016      	str	r0, [sp, #88]	; 0x58
 80212d8:	b292      	uxth	r2, r2
 80212da:	b289      	uxth	r1, r1
 80212dc:	fb02 f901 	mul.w	r9, r2, r1
 80212e0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80212e4:	0112      	lsls	r2, r2, #4
 80212e6:	eba2 0809 	sub.w	r8, r2, r9
 80212ea:	b289      	uxth	r1, r1
 80212ec:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80212f0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80212f2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80212f4:	fa1f f888 	uxth.w	r8, r8
 80212f8:	1a52      	subs	r2, r2, r1
 80212fa:	b292      	uxth	r2, r2
 80212fc:	fb08 f000 	mul.w	r0, r8, r0
 8021300:	fb02 000e 	mla	r0, r2, lr, r0
 8021304:	fb01 0004 	mla	r0, r1, r4, r0
 8021308:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802130a:	fb09 0004 	mla	r0, r9, r4, r0
 802130e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021312:	2800      	cmp	r0, #0
 8021314:	f000 80fa 	beq.w	802150c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021318:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802131c:	d01b      	beq.n	8021356 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802131e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021322:	fb0e fa0a 	mul.w	sl, lr, sl
 8021326:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802132a:	fb0e fe03 	mul.w	lr, lr, r3
 802132e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021332:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021336:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802133a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802133e:	4453      	add	r3, sl
 8021340:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021344:	0a1b      	lsrs	r3, r3, #8
 8021346:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802134a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802134e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021352:	ea43 030c 	orr.w	r3, r3, ip
 8021356:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021358:	2cff      	cmp	r4, #255	; 0xff
 802135a:	d021      	beq.n	80213a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802135c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802135e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021362:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021364:	fb04 fb0b 	mul.w	fp, r4, fp
 8021368:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802136a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802136e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021370:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021374:	fb04 fa0a 	mul.w	sl, r4, sl
 8021378:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802137c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021380:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021384:	44de      	add	lr, fp
 8021386:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802138a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802138e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021392:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021396:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802139a:	ea4e 040a 	orr.w	r4, lr, sl
 802139e:	940e      	str	r4, [sp, #56]	; 0x38
 80213a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213a2:	2cff      	cmp	r4, #255	; 0xff
 80213a4:	d021      	beq.n	80213ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80213a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80213a8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213ae:	fb04 fb0b 	mul.w	fp, r4, fp
 80213b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80213b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80213b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80213ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80213be:	fb04 fa0a 	mul.w	sl, r4, sl
 80213c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80213c6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80213ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80213ce:	44de      	add	lr, fp
 80213d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80213d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80213d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80213dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80213e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80213e4:	ea4e 040a 	orr.w	r4, lr, sl
 80213e8:	940a      	str	r4, [sp, #40]	; 0x28
 80213ea:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80213ec:	2cff      	cmp	r4, #255	; 0xff
 80213ee:	d021      	beq.n	8021434 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80213f0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80213f2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80213f6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80213f8:	fb04 fb0b 	mul.w	fp, r4, fp
 80213fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80213fe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021402:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021404:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021408:	fb04 fa0a 	mul.w	sl, r4, sl
 802140c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021410:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021414:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021418:	44de      	add	lr, fp
 802141a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802141e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021422:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021426:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802142a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802142e:	ea4e 040a 	orr.w	r4, lr, sl
 8021432:	940f      	str	r4, [sp, #60]	; 0x3c
 8021434:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021436:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802143a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802143c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021440:	fb08 fc0c 	mul.w	ip, r8, ip
 8021444:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021448:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802144c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802144e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021452:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021456:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021458:	fb09 cc0e 	mla	ip, r9, lr, ip
 802145c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021460:	fb08 f80e 	mul.w	r8, r8, lr
 8021464:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021468:	fb02 8303 	mla	r3, r2, r3, r8
 802146c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802146e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021470:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021474:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021476:	fb01 330a 	mla	r3, r1, sl, r3
 802147a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802147e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021480:	fb09 3901 	mla	r9, r9, r1, r3
 8021484:	4342      	muls	r2, r0
 8021486:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802148a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802148e:	883b      	ldrh	r3, [r7, #0]
 8021490:	1c50      	adds	r0, r2, #1
 8021492:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021496:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802149a:	ea4c 0c09 	orr.w	ip, ip, r9
 802149e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80214a2:	1219      	asrs	r1, r3, #8
 80214a4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80214a8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80214ac:	b2c0      	uxtb	r0, r0
 80214ae:	fb12 f204 	smulbb	r2, r2, r4
 80214b2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80214b6:	fb01 2100 	mla	r1, r1, r0, r2
 80214ba:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80214be:	10da      	asrs	r2, r3, #3
 80214c0:	fa5f fc8c 	uxtb.w	ip, ip
 80214c4:	00db      	lsls	r3, r3, #3
 80214c6:	fb1c fc04 	smulbb	ip, ip, r4
 80214ca:	b2db      	uxtb	r3, r3
 80214cc:	b289      	uxth	r1, r1
 80214ce:	fb03 c300 	mla	r3, r3, r0, ip
 80214d2:	fa1f fc83 	uxth.w	ip, r3
 80214d6:	1c4b      	adds	r3, r1, #1
 80214d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80214dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80214e0:	fb1e fe04 	smulbb	lr, lr, r4
 80214e4:	f10c 0301 	add.w	r3, ip, #1
 80214e8:	fb02 e200 	mla	r2, r2, r0, lr
 80214ec:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80214f0:	b292      	uxth	r2, r2
 80214f2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80214f6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80214fa:	430b      	orrs	r3, r1
 80214fc:	1c51      	adds	r1, r2, #1
 80214fe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021502:	0952      	lsrs	r2, r2, #5
 8021504:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021508:	4313      	orrs	r3, r2
 802150a:	803b      	strh	r3, [r7, #0]
 802150c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802150e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021510:	441a      	add	r2, r3
 8021512:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021514:	9229      	str	r2, [sp, #164]	; 0xa4
 8021516:	441d      	add	r5, r3
 8021518:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802151a:	3b01      	subs	r3, #1
 802151c:	3702      	adds	r7, #2
 802151e:	931a      	str	r3, [sp, #104]	; 0x68
 8021520:	e694      	b.n	802124c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021522:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021524:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021526:	441c      	add	r4, r3
 8021528:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802152a:	9429      	str	r4, [sp, #164]	; 0xa4
 802152c:	441d      	add	r5, r3
 802152e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021530:	3b01      	subs	r3, #1
 8021532:	9309      	str	r3, [sp, #36]	; 0x24
 8021534:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021536:	3302      	adds	r3, #2
 8021538:	930c      	str	r3, [sp, #48]	; 0x30
 802153a:	e666      	b.n	802120a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802153c:	d024      	beq.n	8021588 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802153e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021540:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021542:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021544:	3b01      	subs	r3, #1
 8021546:	fb00 4003 	mla	r0, r0, r3, r4
 802154a:	1400      	asrs	r0, r0, #16
 802154c:	f53f ae7b 	bmi.w	8021246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021550:	3901      	subs	r1, #1
 8021552:	4288      	cmp	r0, r1
 8021554:	f6bf ae77 	bge.w	8021246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021558:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802155a:	fb01 5303 	mla	r3, r1, r3, r5
 802155e:	141b      	asrs	r3, r3, #16
 8021560:	f53f ae71 	bmi.w	8021246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021564:	3a01      	subs	r2, #1
 8021566:	4293      	cmp	r3, r2
 8021568:	f6bf ae6d 	bge.w	8021246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802156c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021570:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021574:	f1bb 0f00 	cmp.w	fp, #0
 8021578:	dc70      	bgt.n	802165c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802157a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802157c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021580:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021582:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021586:	930c      	str	r3, [sp, #48]	; 0x30
 8021588:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802158a:	2b00      	cmp	r3, #0
 802158c:	f340 81be 	ble.w	802190c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021590:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021594:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021598:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802159c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802159e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80215a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80215a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80215aa:	eef0 6a62 	vmov.f32	s13, s5
 80215ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80215b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80215b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80215ba:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80215be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80215c2:	eef0 6a43 	vmov.f32	s13, s6
 80215c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80215ca:	ee12 2a90 	vmov	r2, s5
 80215ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80215d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80215d6:	ee13 2a10 	vmov	r2, s6
 80215da:	932b      	str	r3, [sp, #172]	; 0xac
 80215dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80215de:	fb92 f3f3 	sdiv	r3, r2, r3
 80215e2:	932c      	str	r3, [sp, #176]	; 0xb0
 80215e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80215e6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80215e8:	3b01      	subs	r3, #1
 80215ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80215ee:	9319      	str	r3, [sp, #100]	; 0x64
 80215f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80215f2:	bf08      	it	eq
 80215f4:	4613      	moveq	r3, r2
 80215f6:	ee16 5a90 	vmov	r5, s13
 80215fa:	9309      	str	r3, [sp, #36]	; 0x24
 80215fc:	eeb0 3a67 	vmov.f32	s6, s15
 8021600:	eef0 2a47 	vmov.f32	s5, s14
 8021604:	e5f3      	b.n	80211ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021606:	2900      	cmp	r1, #0
 8021608:	f43f ae66 	beq.w	80212d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802160c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021610:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021614:	900a      	str	r0, [sp, #40]	; 0x28
 8021616:	0e00      	lsrs	r0, r0, #24
 8021618:	9013      	str	r0, [sp, #76]	; 0x4c
 802161a:	e65d      	b.n	80212d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802161c:	f113 0801 	adds.w	r8, r3, #1
 8021620:	f53f af74 	bmi.w	802150c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021624:	4540      	cmp	r0, r8
 8021626:	f6ff af71 	blt.w	802150c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802162a:	f11c 0801 	adds.w	r8, ip, #1
 802162e:	f53f af6d 	bmi.w	802150c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021632:	45c6      	cmp	lr, r8
 8021634:	f6ff af6a 	blt.w	802150c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021638:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802163a:	9302      	str	r3, [sp, #8]
 802163c:	b200      	sxth	r0, r0
 802163e:	fa0f f38e 	sxth.w	r3, lr
 8021642:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021646:	e9cd c203 	strd	ip, r2, [sp, #12]
 802164a:	9301      	str	r3, [sp, #4]
 802164c:	9000      	str	r0, [sp, #0]
 802164e:	4633      	mov	r3, r6
 8021650:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021652:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021654:	4639      	mov	r1, r7
 8021656:	f7ff fc62 	bl	8020f1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802165a:	e757      	b.n	802150c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802165c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802165e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021660:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021664:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021666:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802166a:	1427      	asrs	r7, r4, #16
 802166c:	142b      	asrs	r3, r5, #16
 802166e:	fb01 7303 	mla	r3, r1, r3, r7
 8021672:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021674:	18e7      	adds	r7, r4, r3
 8021676:	5ce3      	ldrb	r3, [r4, r3]
 8021678:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802167c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021680:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021684:	2a00      	cmp	r2, #0
 8021686:	f000 8137 	beq.w	80218f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802168a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802168e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021692:	9410      	str	r4, [sp, #64]	; 0x40
 8021694:	0e24      	lsrs	r4, r4, #24
 8021696:	9417      	str	r4, [sp, #92]	; 0x5c
 8021698:	b170      	cbz	r0, 80216b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802169a:	eb07 0e01 	add.w	lr, r7, r1
 802169e:	5c79      	ldrb	r1, [r7, r1]
 80216a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80216a4:	910b      	str	r1, [sp, #44]	; 0x2c
 80216a6:	0e09      	lsrs	r1, r1, #24
 80216a8:	9114      	str	r1, [sp, #80]	; 0x50
 80216aa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80216ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80216b2:	9111      	str	r1, [sp, #68]	; 0x44
 80216b4:	0e09      	lsrs	r1, r1, #24
 80216b6:	9118      	str	r1, [sp, #96]	; 0x60
 80216b8:	b292      	uxth	r2, r2
 80216ba:	b280      	uxth	r0, r0
 80216bc:	fb02 f800 	mul.w	r8, r2, r0
 80216c0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80216c4:	0112      	lsls	r2, r2, #4
 80216c6:	eba2 0e08 	sub.w	lr, r2, r8
 80216ca:	b280      	uxth	r0, r0
 80216cc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80216d0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80216d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80216d4:	fa1f fe8e 	uxth.w	lr, lr
 80216d8:	1a12      	subs	r2, r2, r0
 80216da:	b292      	uxth	r2, r2
 80216dc:	fb0e f101 	mul.w	r1, lr, r1
 80216e0:	fb02 110c 	mla	r1, r2, ip, r1
 80216e4:	fb00 1104 	mla	r1, r0, r4, r1
 80216e8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80216ea:	fb08 1104 	mla	r1, r8, r4, r1
 80216ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80216f2:	2900      	cmp	r1, #0
 80216f4:	f000 80f5 	beq.w	80218e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80216f8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80216fc:	d019      	beq.n	8021732 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80216fe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021702:	fb0c fa0a 	mul.w	sl, ip, sl
 8021706:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802170a:	fb0c fc03 	mul.w	ip, ip, r3
 802170e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021712:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021716:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802171a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802171e:	4453      	add	r3, sl
 8021720:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021724:	0a1b      	lsrs	r3, r3, #8
 8021726:	0a3f      	lsrs	r7, r7, #8
 8021728:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802172c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021730:	433b      	orrs	r3, r7
 8021732:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021734:	2cff      	cmp	r4, #255	; 0xff
 8021736:	d020      	beq.n	802177a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8021738:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802173a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802173e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021740:	4367      	muls	r7, r4
 8021742:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021744:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021748:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802174a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802174e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021752:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021756:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802175a:	44bc      	add	ip, r7
 802175c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021760:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021764:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021768:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802176c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021770:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021774:	ea4c 040a 	orr.w	r4, ip, sl
 8021778:	9410      	str	r4, [sp, #64]	; 0x40
 802177a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802177c:	2cff      	cmp	r4, #255	; 0xff
 802177e:	d020      	beq.n	80217c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8021780:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021782:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021786:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021788:	4367      	muls	r7, r4
 802178a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802178c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021790:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021792:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021796:	fb04 fa0a 	mul.w	sl, r4, sl
 802179a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802179e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217a2:	44bc      	add	ip, r7
 80217a4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80217ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80217bc:	ea4c 040a 	orr.w	r4, ip, sl
 80217c0:	940b      	str	r4, [sp, #44]	; 0x2c
 80217c2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80217c4:	2cff      	cmp	r4, #255	; 0xff
 80217c6:	d020      	beq.n	802180a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80217c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80217ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80217ce:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80217d0:	4367      	muls	r7, r4
 80217d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80217d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80217d8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80217da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80217de:	fb04 fa0a 	mul.w	sl, r4, sl
 80217e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80217e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80217ea:	44bc      	add	ip, r7
 80217ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80217f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80217f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80217fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021800:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021804:	ea4c 040a 	orr.w	r4, ip, sl
 8021808:	9411      	str	r4, [sp, #68]	; 0x44
 802180a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802180c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021810:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021812:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021816:	fb0e f707 	mul.w	r7, lr, r7
 802181a:	fb02 770c 	mla	r7, r2, ip, r7
 802181e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021822:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021824:	fb00 770c 	mla	r7, r0, ip, r7
 8021828:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802182c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802182e:	fb08 770c 	mla	r7, r8, ip, r7
 8021832:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021836:	fb0e fe0c 	mul.w	lr, lr, ip
 802183a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802183e:	fb02 e303 	mla	r3, r2, r3, lr
 8021842:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021844:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021846:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802184a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802184c:	fb00 330a 	mla	r3, r0, sl, r3
 8021850:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021854:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021858:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802185a:	f8b9 0000 	ldrh.w	r0, [r9]
 802185e:	434b      	muls	r3, r1
 8021860:	0a3f      	lsrs	r7, r7, #8
 8021862:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021866:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802186a:	1c59      	adds	r1, r3, #1
 802186c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021870:	ea47 070c 	orr.w	r7, r7, ip
 8021874:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021878:	1202      	asrs	r2, r0, #8
 802187a:	0c3b      	lsrs	r3, r7, #16
 802187c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021880:	b2c9      	uxtb	r1, r1
 8021882:	fb13 f304 	smulbb	r3, r3, r4
 8021886:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802188a:	fb02 3201 	mla	r2, r2, r1, r3
 802188e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021892:	10c3      	asrs	r3, r0, #3
 8021894:	b2ff      	uxtb	r7, r7
 8021896:	00c0      	lsls	r0, r0, #3
 8021898:	b292      	uxth	r2, r2
 802189a:	fb1c fc04 	smulbb	ip, ip, r4
 802189e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80218a2:	b2c0      	uxtb	r0, r0
 80218a4:	fb17 f704 	smulbb	r7, r7, r4
 80218a8:	fb03 c301 	mla	r3, r3, r1, ip
 80218ac:	fb00 7001 	mla	r0, r0, r1, r7
 80218b0:	f102 0c01 	add.w	ip, r2, #1
 80218b4:	b280      	uxth	r0, r0
 80218b6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80218ba:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80218be:	1c42      	adds	r2, r0, #1
 80218c0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80218c4:	b29b      	uxth	r3, r3
 80218c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80218ca:	ea42 020c 	orr.w	r2, r2, ip
 80218ce:	f103 0c01 	add.w	ip, r3, #1
 80218d2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80218d6:	095b      	lsrs	r3, r3, #5
 80218d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80218dc:	431a      	orrs	r2, r3
 80218de:	f8a9 2000 	strh.w	r2, [r9]
 80218e2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80218e4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80218e6:	441a      	add	r2, r3
 80218e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80218ea:	9229      	str	r2, [sp, #164]	; 0xa4
 80218ec:	f109 0902 	add.w	r9, r9, #2
 80218f0:	441d      	add	r5, r3
 80218f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80218f6:	e63d      	b.n	8021574 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80218f8:	2800      	cmp	r0, #0
 80218fa:	f43f aedd 	beq.w	80216b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80218fe:	5c79      	ldrb	r1, [r7, r1]
 8021900:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021904:	910b      	str	r1, [sp, #44]	; 0x2c
 8021906:	0e09      	lsrs	r1, r1, #24
 8021908:	9114      	str	r1, [sp, #80]	; 0x50
 802190a:	e6d5      	b.n	80216b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802190c:	b01f      	add	sp, #124	; 0x7c
 802190e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021912 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021912:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021916:	b089      	sub	sp, #36	; 0x24
 8021918:	9101      	str	r1, [sp, #4]
 802191a:	9801      	ldr	r0, [sp, #4]
 802191c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021920:	8800      	ldrh	r0, [r0, #0]
 8021922:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021926:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802192a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802192e:	1206      	asrs	r6, r0, #8
 8021930:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8021934:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021938:	9602      	str	r6, [sp, #8]
 802193a:	10c6      	asrs	r6, r0, #3
 802193c:	00c0      	lsls	r0, r0, #3
 802193e:	b2c0      	uxtb	r0, r0
 8021940:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021944:	9004      	str	r0, [sp, #16]
 8021946:	2f00      	cmp	r7, #0
 8021948:	fb07 100c 	mla	r0, r7, ip, r1
 802194c:	9603      	str	r6, [sp, #12]
 802194e:	eb02 0e00 	add.w	lr, r2, r0
 8021952:	f2c0 810a 	blt.w	8021b6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021956:	45b8      	cmp	r8, r7
 8021958:	f340 8107 	ble.w	8021b6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802195c:	2900      	cmp	r1, #0
 802195e:	f2c0 8102 	blt.w	8021b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021962:	458c      	cmp	ip, r1
 8021964:	f340 80ff 	ble.w	8021b66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021968:	5c12      	ldrb	r2, [r2, r0]
 802196a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802196e:	1c4a      	adds	r2, r1, #1
 8021970:	f100 80fe 	bmi.w	8021b70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021974:	4594      	cmp	ip, r2
 8021976:	f340 80fb 	ble.w	8021b70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802197a:	2d00      	cmp	r5, #0
 802197c:	f000 80fa 	beq.w	8021b74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021980:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021984:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021988:	3701      	adds	r7, #1
 802198a:	f100 80f7 	bmi.w	8021b7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802198e:	45b8      	cmp	r8, r7
 8021990:	f340 80f4 	ble.w	8021b7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021994:	2c00      	cmp	r4, #0
 8021996:	f000 80f4 	beq.w	8021b82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802199a:	2900      	cmp	r1, #0
 802199c:	eb0e 020c 	add.w	r2, lr, ip
 80219a0:	f2c0 80ea 	blt.w	8021b78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80219a4:	458c      	cmp	ip, r1
 80219a6:	f340 80e7 	ble.w	8021b78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80219aa:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80219ae:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80219b2:	3101      	adds	r1, #1
 80219b4:	f100 80e8 	bmi.w	8021b88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80219b8:	458c      	cmp	ip, r1
 80219ba:	f340 80e5 	ble.w	8021b88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80219be:	2d00      	cmp	r5, #0
 80219c0:	f000 80e4 	beq.w	8021b8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80219c4:	7852      	ldrb	r2, [r2, #1]
 80219c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80219ca:	0e0b      	lsrs	r3, r1, #24
 80219cc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80219d0:	9300      	str	r3, [sp, #0]
 80219d2:	b2a4      	uxth	r4, r4
 80219d4:	b2ab      	uxth	r3, r5
 80219d6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80219da:	fb03 f904 	mul.w	r9, r3, r4
 80219de:	fb0a f505 	mul.w	r5, sl, r5
 80219e2:	011b      	lsls	r3, r3, #4
 80219e4:	eba3 0e09 	sub.w	lr, r3, r9
 80219e8:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80219ec:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80219f0:	0a28      	lsrs	r0, r5, #8
 80219f2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80219f6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80219fa:	4405      	add	r5, r0
 80219fc:	0a2d      	lsrs	r5, r5, #8
 80219fe:	fb0a f303 	mul.w	r3, sl, r3
 8021a02:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021a06:	9005      	str	r0, [sp, #20]
 8021a08:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8021a0c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021a10:	0a1b      	lsrs	r3, r3, #8
 8021a12:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021a16:	9306      	str	r3, [sp, #24]
 8021a18:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8021a1c:	fb0b f303 	mul.w	r3, fp, r3
 8021a20:	0a1d      	lsrs	r5, r3, #8
 8021a22:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021a26:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021a2a:	fb0b f606 	mul.w	r6, fp, r6
 8021a2e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021a32:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021a36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021a3a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021a3e:	fb08 f707 	mul.w	r7, r8, r7
 8021a42:	441d      	add	r5, r3
 8021a44:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021a48:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021a4c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021a50:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021a54:	fb08 fc0c 	mul.w	ip, r8, ip
 8021a58:	0a1b      	lsrs	r3, r3, #8
 8021a5a:	9307      	str	r3, [sp, #28]
 8021a5c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021a60:	0e0b      	lsrs	r3, r1, #24
 8021a62:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021a66:	435f      	muls	r7, r3
 8021a68:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021a6c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021a70:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021a74:	4460      	add	r0, ip
 8021a76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a7a:	b2a4      	uxth	r4, r4
 8021a7c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a80:	0a2d      	lsrs	r5, r5, #8
 8021a82:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021a86:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a8a:	fa1f fe8e 	uxth.w	lr, lr
 8021a8e:	4359      	muls	r1, r3
 8021a90:	1b12      	subs	r2, r2, r4
 8021a92:	9b05      	ldr	r3, [sp, #20]
 8021a94:	44bc      	add	ip, r7
 8021a96:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021a9a:	b292      	uxth	r2, r2
 8021a9c:	fb05 f50e 	mul.w	r5, r5, lr
 8021aa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021aa4:	fb03 5502 	mla	r5, r3, r2, r5
 8021aa8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021aac:	9b06      	ldr	r3, [sp, #24]
 8021aae:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021ab2:	0a36      	lsrs	r6, r6, #8
 8021ab4:	0a00      	lsrs	r0, r0, #8
 8021ab6:	fb0c 5509 	mla	r5, ip, r9, r5
 8021aba:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021abe:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021ac2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021ac6:	fb00 5504 	mla	r5, r0, r4, r5
 8021aca:	fb0e f606 	mul.w	r6, lr, r6
 8021ace:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021ad2:	0a09      	lsrs	r1, r1, #8
 8021ad4:	9b07      	ldr	r3, [sp, #28]
 8021ad6:	fb02 6000 	mla	r0, r2, r0, r6
 8021ada:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021ade:	fb09 0001 	mla	r0, r9, r1, r0
 8021ae2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021ae6:	fb0e fe0b 	mul.w	lr, lr, fp
 8021aea:	fb04 0003 	mla	r0, r4, r3, r0
 8021aee:	fb02 e20a 	mla	r2, r2, sl, lr
 8021af2:	9b00      	ldr	r3, [sp, #0]
 8021af4:	fb04 2408 	mla	r4, r4, r8, r2
 8021af8:	fb09 4903 	mla	r9, r9, r3, r4
 8021afc:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021b00:	9b02      	ldr	r3, [sp, #8]
 8021b02:	9a04      	ldr	r2, [sp, #16]
 8021b04:	fa5f f989 	uxtb.w	r9, r9
 8021b08:	fb03 f109 	mul.w	r1, r3, r9
 8021b0c:	9b03      	ldr	r3, [sp, #12]
 8021b0e:	0a2d      	lsrs	r5, r5, #8
 8021b10:	0a00      	lsrs	r0, r0, #8
 8021b12:	fb03 f309 	mul.w	r3, r3, r9
 8021b16:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021b1a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021b1e:	4305      	orrs	r5, r0
 8021b20:	fb02 f909 	mul.w	r9, r2, r9
 8021b24:	1c58      	adds	r0, r3, #1
 8021b26:	1c4a      	adds	r2, r1, #1
 8021b28:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021b2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021b30:	0a2b      	lsrs	r3, r5, #8
 8021b32:	0c2a      	lsrs	r2, r5, #16
 8021b34:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021b38:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021b3c:	00db      	lsls	r3, r3, #3
 8021b3e:	0212      	lsls	r2, r2, #8
 8021b40:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021b44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b48:	4313      	orrs	r3, r2
 8021b4a:	f109 0201 	add.w	r2, r9, #1
 8021b4e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021b52:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021b56:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021b5a:	431d      	orrs	r5, r3
 8021b5c:	9b01      	ldr	r3, [sp, #4]
 8021b5e:	801d      	strh	r5, [r3, #0]
 8021b60:	b009      	add	sp, #36	; 0x24
 8021b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b66:	2000      	movs	r0, #0
 8021b68:	e701      	b.n	802196e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021b6a:	2600      	movs	r6, #0
 8021b6c:	4630      	mov	r0, r6
 8021b6e:	e70b      	b.n	8021988 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021b70:	2600      	movs	r6, #0
 8021b72:	e709      	b.n	8021988 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021b74:	462e      	mov	r6, r5
 8021b76:	e707      	b.n	8021988 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021b78:	2700      	movs	r7, #0
 8021b7a:	e71a      	b.n	80219b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021b7c:	2100      	movs	r1, #0
 8021b7e:	460f      	mov	r7, r1
 8021b80:	e723      	b.n	80219ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021b82:	4621      	mov	r1, r4
 8021b84:	4627      	mov	r7, r4
 8021b86:	e720      	b.n	80219ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021b88:	2100      	movs	r1, #0
 8021b8a:	e71e      	b.n	80219ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021b8c:	4629      	mov	r1, r5
 8021b8e:	e71c      	b.n	80219ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021b90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b94:	b09b      	sub	sp, #108	; 0x6c
 8021b96:	9218      	str	r2, [sp, #96]	; 0x60
 8021b98:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021b9a:	9116      	str	r1, [sp, #88]	; 0x58
 8021b9c:	9307      	str	r3, [sp, #28]
 8021b9e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021ba2:	9019      	str	r0, [sp, #100]	; 0x64
 8021ba4:	6850      	ldr	r0, [r2, #4]
 8021ba6:	6812      	ldr	r2, [r2, #0]
 8021ba8:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021baa:	fb00 1303 	mla	r3, r0, r3, r1
 8021bae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021bb2:	930a      	str	r3, [sp, #40]	; 0x28
 8021bb4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021bb6:	681b      	ldr	r3, [r3, #0]
 8021bb8:	930f      	str	r3, [sp, #60]	; 0x3c
 8021bba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021bbc:	685e      	ldr	r6, [r3, #4]
 8021bbe:	3604      	adds	r6, #4
 8021bc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021bc2:	2b00      	cmp	r3, #0
 8021bc4:	dc03      	bgt.n	8021bce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021bc6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021bc8:	2b00      	cmp	r3, #0
 8021bca:	f340 8373 	ble.w	80222b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021bce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021bd0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021bd4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021bd8:	1e48      	subs	r0, r1, #1
 8021bda:	1e57      	subs	r7, r2, #1
 8021bdc:	9b07      	ldr	r3, [sp, #28]
 8021bde:	2b00      	cmp	r3, #0
 8021be0:	f340 8190 	ble.w	8021f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021be4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021be6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021bea:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021bee:	d406      	bmi.n	8021bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bf0:	4584      	cmp	ip, r0
 8021bf2:	da04      	bge.n	8021bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bf4:	2b00      	cmp	r3, #0
 8021bf6:	db02      	blt.n	8021bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bf8:	42bb      	cmp	r3, r7
 8021bfa:	f2c0 8184 	blt.w	8021f06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021bfe:	f11c 0c01 	adds.w	ip, ip, #1
 8021c02:	f100 8172 	bmi.w	8021eea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c06:	4561      	cmp	r1, ip
 8021c08:	f2c0 816f 	blt.w	8021eea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c0c:	3301      	adds	r3, #1
 8021c0e:	f100 816c 	bmi.w	8021eea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c12:	429a      	cmp	r2, r3
 8021c14:	f2c0 8169 	blt.w	8021eea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021c18:	9b07      	ldr	r3, [sp, #28]
 8021c1a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021c1c:	9317      	str	r3, [sp, #92]	; 0x5c
 8021c1e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021c20:	2b00      	cmp	r3, #0
 8021c22:	f340 818e 	ble.w	8021f42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021c26:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021c28:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021c2c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021c2e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021c32:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021c34:	141b      	asrs	r3, r3, #16
 8021c36:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021c3a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021c3e:	f100 81d1 	bmi.w	8021fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c42:	f101 38ff 	add.w	r8, r1, #4294967295
 8021c46:	4543      	cmp	r3, r8
 8021c48:	f280 81cc 	bge.w	8021fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c4c:	f1bc 0f00 	cmp.w	ip, #0
 8021c50:	f2c0 81c8 	blt.w	8021fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c54:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021c58:	45c4      	cmp	ip, r8
 8021c5a:	f280 81c3 	bge.w	8021fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021c5e:	b209      	sxth	r1, r1
 8021c60:	fb0c 3301 	mla	r3, ip, r1, r3
 8021c64:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021c66:	eb04 0803 	add.w	r8, r4, r3
 8021c6a:	5ce3      	ldrb	r3, [r4, r3]
 8021c6c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021c70:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021c74:	2a00      	cmp	r2, #0
 8021c76:	f000 81aa 	beq.w	8021fce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021c7a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021c7e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021c82:	940b      	str	r4, [sp, #44]	; 0x2c
 8021c84:	0e24      	lsrs	r4, r4, #24
 8021c86:	9412      	str	r4, [sp, #72]	; 0x48
 8021c88:	b178      	cbz	r0, 8021caa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021c8a:	eb08 0c01 	add.w	ip, r8, r1
 8021c8e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021c92:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021c96:	9108      	str	r1, [sp, #32]
 8021c98:	0e09      	lsrs	r1, r1, #24
 8021c9a:	9110      	str	r1, [sp, #64]	; 0x40
 8021c9c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021ca0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021ca4:	910c      	str	r1, [sp, #48]	; 0x30
 8021ca6:	0e09      	lsrs	r1, r1, #24
 8021ca8:	9113      	str	r1, [sp, #76]	; 0x4c
 8021caa:	b292      	uxth	r2, r2
 8021cac:	b280      	uxth	r0, r0
 8021cae:	fb02 f900 	mul.w	r9, r2, r0
 8021cb2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021cb6:	0112      	lsls	r2, r2, #4
 8021cb8:	eba2 0809 	sub.w	r8, r2, r9
 8021cbc:	b280      	uxth	r0, r0
 8021cbe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021cc2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021cc4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021cc6:	fa1f f888 	uxth.w	r8, r8
 8021cca:	1a12      	subs	r2, r2, r0
 8021ccc:	b292      	uxth	r2, r2
 8021cce:	fb08 f101 	mul.w	r1, r8, r1
 8021cd2:	fb02 110e 	mla	r1, r2, lr, r1
 8021cd6:	fb00 1104 	mla	r1, r0, r4, r1
 8021cda:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021cdc:	fb09 1104 	mla	r1, r9, r4, r1
 8021ce0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021ce4:	2900      	cmp	r1, #0
 8021ce6:	f000 80f5 	beq.w	8021ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021cea:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021cee:	d01b      	beq.n	8021d28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021cf0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021cf4:	fb0e fa0a 	mul.w	sl, lr, sl
 8021cf8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021cfc:	fb0e fe03 	mul.w	lr, lr, r3
 8021d00:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021d04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021d08:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021d0c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021d10:	4453      	add	r3, sl
 8021d12:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021d16:	0a1b      	lsrs	r3, r3, #8
 8021d18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d1c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021d20:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021d24:	ea43 030c 	orr.w	r3, r3, ip
 8021d28:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021d2a:	2cff      	cmp	r4, #255	; 0xff
 8021d2c:	d021      	beq.n	8021d72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021d2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d30:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021d34:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021d36:	fb04 fb0b 	mul.w	fp, r4, fp
 8021d3a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021d3c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021d40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021d42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021d46:	fb04 fa0a 	mul.w	sl, r4, sl
 8021d4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d4e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d52:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021d56:	44de      	add	lr, fp
 8021d58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021d5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021d60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021d64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021d6c:	ea4e 040a 	orr.w	r4, lr, sl
 8021d70:	940b      	str	r4, [sp, #44]	; 0x2c
 8021d72:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d74:	2cff      	cmp	r4, #255	; 0xff
 8021d76:	d021      	beq.n	8021dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021d78:	9c08      	ldr	r4, [sp, #32]
 8021d7a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021d7e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d80:	fb04 fb0b 	mul.w	fp, r4, fp
 8021d84:	9c08      	ldr	r4, [sp, #32]
 8021d86:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021d8a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021d8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021d90:	fb04 fa0a 	mul.w	sl, r4, sl
 8021d94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021d98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021d9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021da0:	44de      	add	lr, fp
 8021da2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021da6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021daa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021dae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021db2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021db6:	ea4e 040a 	orr.w	r4, lr, sl
 8021dba:	9408      	str	r4, [sp, #32]
 8021dbc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021dbe:	2cff      	cmp	r4, #255	; 0xff
 8021dc0:	d021      	beq.n	8021e06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021dc2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021dc4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021dc8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021dca:	fb04 fb0b 	mul.w	fp, r4, fp
 8021dce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021dd0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021dd4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021dd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021dda:	fb04 fa0a 	mul.w	sl, r4, sl
 8021dde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021de2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021de6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021dea:	44de      	add	lr, fp
 8021dec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021df0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021df4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021df8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021dfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e00:	ea4e 040a 	orr.w	r4, lr, sl
 8021e04:	940c      	str	r4, [sp, #48]	; 0x30
 8021e06:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021e08:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021e0c:	9c08      	ldr	r4, [sp, #32]
 8021e0e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021e12:	fb08 fc0c 	mul.w	ip, r8, ip
 8021e16:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021e1a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021e1e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021e20:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021e24:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021e28:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021e2a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021e2e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021e32:	fb08 f80e 	mul.w	r8, r8, lr
 8021e36:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021e3a:	fb02 8303 	mla	r3, r2, r3, r8
 8021e3e:	9a08      	ldr	r2, [sp, #32]
 8021e40:	f8b7 8000 	ldrh.w	r8, [r7]
 8021e44:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021e48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021e4a:	fb00 330a 	mla	r3, r0, sl, r3
 8021e4e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021e52:	fb09 3900 	mla	r9, r9, r0, r3
 8021e56:	43c9      	mvns	r1, r1
 8021e58:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021e5c:	fa5f fe81 	uxtb.w	lr, r1
 8021e60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021e64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e68:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021e6c:	fb02 f20e 	mul.w	r2, r2, lr
 8021e70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021e74:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021e78:	ea4c 0c09 	orr.w	ip, ip, r9
 8021e7c:	1c53      	adds	r3, r2, #1
 8021e7e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021e82:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021e86:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021e8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021e8e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021e92:	4a63      	ldr	r2, [pc, #396]	; (8022020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021e94:	fb00 f00e 	mul.w	r0, r0, lr
 8021e98:	b2db      	uxtb	r3, r3
 8021e9a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021e9e:	1c43      	adds	r3, r0, #1
 8021ea0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021ea4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021ea8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021eac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021eb0:	b2c9      	uxtb	r1, r1
 8021eb2:	00db      	lsls	r3, r3, #3
 8021eb4:	fb01 f10e 	mul.w	r1, r1, lr
 8021eb8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ebc:	4313      	orrs	r3, r2
 8021ebe:	1c4a      	adds	r2, r1, #1
 8021ec0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021ec4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021ec8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021ecc:	ea4c 0c03 	orr.w	ip, ip, r3
 8021ed0:	f8a7 c000 	strh.w	ip, [r7]
 8021ed4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021ed6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021ed8:	441a      	add	r2, r3
 8021eda:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021edc:	9225      	str	r2, [sp, #148]	; 0x94
 8021ede:	441d      	add	r5, r3
 8021ee0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021ee2:	3b01      	subs	r3, #1
 8021ee4:	3702      	adds	r7, #2
 8021ee6:	9317      	str	r3, [sp, #92]	; 0x5c
 8021ee8:	e699      	b.n	8021c1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021eea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021eec:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021eee:	441c      	add	r4, r3
 8021ef0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021ef2:	9425      	str	r4, [sp, #148]	; 0x94
 8021ef4:	441d      	add	r5, r3
 8021ef6:	9b07      	ldr	r3, [sp, #28]
 8021ef8:	3b01      	subs	r3, #1
 8021efa:	9307      	str	r3, [sp, #28]
 8021efc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021efe:	3302      	adds	r3, #2
 8021f00:	930a      	str	r3, [sp, #40]	; 0x28
 8021f02:	e66b      	b.n	8021bdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021f04:	d024      	beq.n	8021f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021f06:	9b07      	ldr	r3, [sp, #28]
 8021f08:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021f0a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021f0c:	3b01      	subs	r3, #1
 8021f0e:	fb00 4003 	mla	r0, r0, r3, r4
 8021f12:	1400      	asrs	r0, r0, #16
 8021f14:	f53f ae80 	bmi.w	8021c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f18:	3901      	subs	r1, #1
 8021f1a:	4288      	cmp	r0, r1
 8021f1c:	f6bf ae7c 	bge.w	8021c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f20:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021f22:	fb01 5303 	mla	r3, r1, r3, r5
 8021f26:	141b      	asrs	r3, r3, #16
 8021f28:	f53f ae76 	bmi.w	8021c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f2c:	3a01      	subs	r2, #1
 8021f2e:	4293      	cmp	r3, r2
 8021f30:	f6bf ae72 	bge.w	8021c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021f34:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021f38:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021f3c:	f1bb 0f00 	cmp.w	fp, #0
 8021f40:	dc70      	bgt.n	8022024 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021f42:	9b07      	ldr	r3, [sp, #28]
 8021f44:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021f48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021f4a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021f4e:	930a      	str	r3, [sp, #40]	; 0x28
 8021f50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021f52:	2b00      	cmp	r3, #0
 8021f54:	f340 81ae 	ble.w	80222b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021f58:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021f5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021f60:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021f64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021f6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021f6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021f72:	eef0 6a62 	vmov.f32	s13, s5
 8021f76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021f7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021f82:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021f86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021f8a:	eef0 6a43 	vmov.f32	s13, s6
 8021f8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f92:	ee12 2a90 	vmov	r2, s5
 8021f96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f9e:	ee13 2a10 	vmov	r2, s6
 8021fa2:	9327      	str	r3, [sp, #156]	; 0x9c
 8021fa4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8021faa:	9328      	str	r3, [sp, #160]	; 0xa0
 8021fac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021fae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021fb0:	3b01      	subs	r3, #1
 8021fb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021fb6:	9316      	str	r3, [sp, #88]	; 0x58
 8021fb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fba:	bf08      	it	eq
 8021fbc:	4613      	moveq	r3, r2
 8021fbe:	ee16 5a90 	vmov	r5, s13
 8021fc2:	9307      	str	r3, [sp, #28]
 8021fc4:	eeb0 3a67 	vmov.f32	s6, s15
 8021fc8:	eef0 2a47 	vmov.f32	s5, s14
 8021fcc:	e5f8      	b.n	8021bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021fce:	2800      	cmp	r0, #0
 8021fd0:	f43f ae6b 	beq.w	8021caa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021fd4:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021fd8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021fdc:	9108      	str	r1, [sp, #32]
 8021fde:	0e09      	lsrs	r1, r1, #24
 8021fe0:	9110      	str	r1, [sp, #64]	; 0x40
 8021fe2:	e662      	b.n	8021caa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021fe4:	f113 0801 	adds.w	r8, r3, #1
 8021fe8:	f53f af74 	bmi.w	8021ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021fec:	4541      	cmp	r1, r8
 8021fee:	f6ff af71 	blt.w	8021ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ff2:	f11c 0801 	adds.w	r8, ip, #1
 8021ff6:	f53f af6d 	bmi.w	8021ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021ffa:	45c6      	cmp	lr, r8
 8021ffc:	f6ff af6a 	blt.w	8021ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022000:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022004:	b209      	sxth	r1, r1
 8022006:	fa0f f38e 	sxth.w	r3, lr
 802200a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802200e:	9301      	str	r3, [sp, #4]
 8022010:	9100      	str	r1, [sp, #0]
 8022012:	4633      	mov	r3, r6
 8022014:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022016:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022018:	4639      	mov	r1, r7
 802201a:	f7ff fc7a 	bl	8021912 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802201e:	e759      	b.n	8021ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022020:	fffff800 	.word	0xfffff800
 8022024:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022026:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022028:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802202c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802202e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022032:	1427      	asrs	r7, r4, #16
 8022034:	142b      	asrs	r3, r5, #16
 8022036:	fb01 7303 	mla	r3, r1, r3, r7
 802203a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802203c:	18e7      	adds	r7, r4, r3
 802203e:	5ce3      	ldrb	r3, [r4, r3]
 8022040:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022044:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022048:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802204c:	2a00      	cmp	r2, #0
 802204e:	f000 8127 	beq.w	80222a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022052:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022056:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802205a:	940d      	str	r4, [sp, #52]	; 0x34
 802205c:	0e24      	lsrs	r4, r4, #24
 802205e:	9414      	str	r4, [sp, #80]	; 0x50
 8022060:	b170      	cbz	r0, 8022080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022062:	eb07 0e01 	add.w	lr, r7, r1
 8022066:	5c79      	ldrb	r1, [r7, r1]
 8022068:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802206c:	9109      	str	r1, [sp, #36]	; 0x24
 802206e:	0e09      	lsrs	r1, r1, #24
 8022070:	9111      	str	r1, [sp, #68]	; 0x44
 8022072:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022076:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802207a:	910e      	str	r1, [sp, #56]	; 0x38
 802207c:	0e09      	lsrs	r1, r1, #24
 802207e:	9115      	str	r1, [sp, #84]	; 0x54
 8022080:	b292      	uxth	r2, r2
 8022082:	b280      	uxth	r0, r0
 8022084:	fb02 f800 	mul.w	r8, r2, r0
 8022088:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802208c:	0112      	lsls	r2, r2, #4
 802208e:	eba2 0e08 	sub.w	lr, r2, r8
 8022092:	b280      	uxth	r0, r0
 8022094:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022098:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802209a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802209c:	fa1f fe8e 	uxth.w	lr, lr
 80220a0:	1a09      	subs	r1, r1, r0
 80220a2:	b289      	uxth	r1, r1
 80220a4:	fb0e f202 	mul.w	r2, lr, r2
 80220a8:	fb01 220c 	mla	r2, r1, ip, r2
 80220ac:	fb00 2204 	mla	r2, r0, r4, r2
 80220b0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80220b2:	fb08 2204 	mla	r2, r8, r4, r2
 80220b6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80220ba:	2a00      	cmp	r2, #0
 80220bc:	f000 80e5 	beq.w	802228a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80220c0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80220c4:	d019      	beq.n	80220fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80220c6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80220ca:	fb0c fa0a 	mul.w	sl, ip, sl
 80220ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80220d2:	fb0c fc03 	mul.w	ip, ip, r3
 80220d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80220da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80220de:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80220e2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80220e6:	4453      	add	r3, sl
 80220e8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80220ec:	0a1b      	lsrs	r3, r3, #8
 80220ee:	0a3f      	lsrs	r7, r7, #8
 80220f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80220f4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80220f8:	433b      	orrs	r3, r7
 80220fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80220fc:	2cff      	cmp	r4, #255	; 0xff
 80220fe:	d020      	beq.n	8022142 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022100:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022102:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022106:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022108:	4367      	muls	r7, r4
 802210a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802210c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022110:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022112:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022116:	fb04 fa0a 	mul.w	sl, r4, sl
 802211a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802211e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022122:	44bc      	add	ip, r7
 8022124:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022128:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802212c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022130:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022134:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022138:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802213c:	ea4c 040a 	orr.w	r4, ip, sl
 8022140:	940d      	str	r4, [sp, #52]	; 0x34
 8022142:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022144:	2cff      	cmp	r4, #255	; 0xff
 8022146:	d020      	beq.n	802218a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022148:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802214a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802214e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022150:	4367      	muls	r7, r4
 8022152:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022154:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022158:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802215a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802215e:	fb04 fa0a 	mul.w	sl, r4, sl
 8022162:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022166:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802216a:	44bc      	add	ip, r7
 802216c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022170:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022174:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022178:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802217c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022180:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022184:	ea4c 040a 	orr.w	r4, ip, sl
 8022188:	9409      	str	r4, [sp, #36]	; 0x24
 802218a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802218c:	2cff      	cmp	r4, #255	; 0xff
 802218e:	d020      	beq.n	80221d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022190:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022192:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022196:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022198:	4367      	muls	r7, r4
 802219a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802219c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221a0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80221a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80221a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80221aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80221ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221b2:	44bc      	add	ip, r7
 80221b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80221b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80221bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80221c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80221c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80221cc:	ea4c 040a 	orr.w	r4, ip, sl
 80221d0:	940e      	str	r4, [sp, #56]	; 0x38
 80221d2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80221d4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80221d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80221da:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80221de:	fb0e f707 	mul.w	r7, lr, r7
 80221e2:	fb01 770c 	mla	r7, r1, ip, r7
 80221e6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80221ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80221ec:	fb00 770c 	mla	r7, r0, ip, r7
 80221f0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80221f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80221f6:	fb08 770c 	mla	r7, r8, ip, r7
 80221fa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80221fe:	fb0e fe0c 	mul.w	lr, lr, ip
 8022202:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022206:	fb01 e303 	mla	r3, r1, r3, lr
 802220a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802220c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022210:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022212:	fb00 330a 	mla	r3, r0, sl, r3
 8022216:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802221a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802221e:	f8b9 3000 	ldrh.w	r3, [r9]
 8022222:	43d2      	mvns	r2, r2
 8022224:	1218      	asrs	r0, r3, #8
 8022226:	b2d2      	uxtb	r2, r2
 8022228:	10d9      	asrs	r1, r3, #3
 802222a:	0a3f      	lsrs	r7, r7, #8
 802222c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022230:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022234:	00db      	lsls	r3, r3, #3
 8022236:	4350      	muls	r0, r2
 8022238:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802223c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022240:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022244:	b2db      	uxtb	r3, r3
 8022246:	ea47 070c 	orr.w	r7, r7, ip
 802224a:	4351      	muls	r1, r2
 802224c:	4353      	muls	r3, r2
 802224e:	1c42      	adds	r2, r0, #1
 8022250:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022254:	0c3a      	lsrs	r2, r7, #16
 8022256:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802225a:	4a18      	ldr	r2, [pc, #96]	; (80222bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802225c:	b2c0      	uxtb	r0, r0
 802225e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022262:	1c4a      	adds	r2, r1, #1
 8022264:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022268:	0a3a      	lsrs	r2, r7, #8
 802226a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802226e:	00c9      	lsls	r1, r1, #3
 8022270:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022274:	4301      	orrs	r1, r0
 8022276:	1c58      	adds	r0, r3, #1
 8022278:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802227c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022280:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022284:	4308      	orrs	r0, r1
 8022286:	f8a9 0000 	strh.w	r0, [r9]
 802228a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802228c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802228e:	441a      	add	r2, r3
 8022290:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022292:	9225      	str	r2, [sp, #148]	; 0x94
 8022294:	f109 0902 	add.w	r9, r9, #2
 8022298:	441d      	add	r5, r3
 802229a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802229e:	e64d      	b.n	8021f3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80222a0:	2800      	cmp	r0, #0
 80222a2:	f43f aeed 	beq.w	8022080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80222a6:	5c79      	ldrb	r1, [r7, r1]
 80222a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80222ac:	9109      	str	r1, [sp, #36]	; 0x24
 80222ae:	0e09      	lsrs	r1, r1, #24
 80222b0:	9111      	str	r1, [sp, #68]	; 0x44
 80222b2:	e6e5      	b.n	8022080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80222b4:	b01b      	add	sp, #108	; 0x6c
 80222b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80222ba:	bf00      	nop
 80222bc:	fffff800 	.word	0xfffff800

080222c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80222c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222c4:	b085      	sub	sp, #20
 80222c6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80222ca:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80222ce:	9103      	str	r1, [sp, #12]
 80222d0:	fb00 7406 	mla	r4, r0, r6, r7
 80222d4:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80222d8:	2800      	cmp	r0, #0
 80222da:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80222de:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80222e2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80222e6:	9501      	str	r5, [sp, #4]
 80222e8:	eb03 0904 	add.w	r9, r3, r4
 80222ec:	f2c0 8150 	blt.w	8022590 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80222f0:	4583      	cmp	fp, r0
 80222f2:	f340 814d 	ble.w	8022590 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80222f6:	2f00      	cmp	r7, #0
 80222f8:	f2c0 8146 	blt.w	8022588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80222fc:	42be      	cmp	r6, r7
 80222fe:	f340 8143 	ble.w	8022588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022302:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022306:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802230a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802230e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022312:	4355      	muls	r5, r2
 8022314:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022318:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802231c:	fb0c f203 	mul.w	r2, ip, r3
 8022320:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022324:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022328:	441d      	add	r5, r3
 802232a:	f102 0320 	add.w	r3, r2, #32
 802232e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022332:	0a1b      	lsrs	r3, r3, #8
 8022334:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022338:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802233c:	431c      	orrs	r4, r3
 802233e:	1c7b      	adds	r3, r7, #1
 8022340:	f100 812b 	bmi.w	802259a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022344:	429e      	cmp	r6, r3
 8022346:	f340 8128 	ble.w	802259a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802234a:	2900      	cmp	r1, #0
 802234c:	f000 8128 	beq.w	80225a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022350:	9a01      	ldr	r2, [sp, #4]
 8022352:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022356:	8855      	ldrh	r5, [r2, #2]
 8022358:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802235c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022360:	fb08 f802 	mul.w	r8, r8, r2
 8022364:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022368:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802236c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022370:	435d      	muls	r5, r3
 8022372:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022376:	44d0      	add	r8, sl
 8022378:	f105 0a20 	add.w	sl, r5, #32
 802237c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022380:	0a2d      	lsrs	r5, r5, #8
 8022382:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022386:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802238a:	432a      	orrs	r2, r5
 802238c:	3001      	adds	r0, #1
 802238e:	f100 810d 	bmi.w	80225ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022392:	4583      	cmp	fp, r0
 8022394:	f340 810a 	ble.w	80225ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022398:	f1be 0f00 	cmp.w	lr, #0
 802239c:	f000 810b 	beq.w	80225b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80223a0:	2f00      	cmp	r7, #0
 80223a2:	f2c0 8100 	blt.w	80225a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80223a6:	42be      	cmp	r6, r7
 80223a8:	f340 80fd 	ble.w	80225a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80223ac:	9801      	ldr	r0, [sp, #4]
 80223ae:	f819 5006 	ldrb.w	r5, [r9, r6]
 80223b2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80223b6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80223ba:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80223be:	fb0a fa00 	mul.w	sl, sl, r0
 80223c2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80223c6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80223ca:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80223ce:	fb05 f808 	mul.w	r8, r5, r8
 80223d2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80223d6:	4482      	add	sl, r0
 80223d8:	f108 0020 	add.w	r0, r8, #32
 80223dc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80223e0:	0a00      	lsrs	r0, r0, #8
 80223e2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80223e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223ea:	ea4b 0b00 	orr.w	fp, fp, r0
 80223ee:	3701      	adds	r7, #1
 80223f0:	f100 80e6 	bmi.w	80225c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80223f4:	42be      	cmp	r6, r7
 80223f6:	f340 80e3 	ble.w	80225c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80223fa:	2900      	cmp	r1, #0
 80223fc:	f000 80e3 	beq.w	80225c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022400:	3601      	adds	r6, #1
 8022402:	9801      	ldr	r0, [sp, #4]
 8022404:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022408:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802240c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022410:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022414:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022418:	fb09 f906 	mul.w	r9, r9, r6
 802241c:	fb07 f800 	mul.w	r8, r7, r0
 8022420:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022424:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022428:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802242c:	44d1      	add	r9, sl
 802242e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022432:	f108 0020 	add.w	r0, r8, #32
 8022436:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802243a:	0a00      	lsrs	r0, r0, #8
 802243c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022440:	4330      	orrs	r0, r6
 8022442:	b28e      	uxth	r6, r1
 8022444:	fa1f f98e 	uxth.w	r9, lr
 8022448:	fb06 f809 	mul.w	r8, r6, r9
 802244c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022450:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022454:	0136      	lsls	r6, r6, #4
 8022456:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802245a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802245e:	9601      	str	r6, [sp, #4]
 8022460:	ea4a 0404 	orr.w	r4, sl, r4
 8022464:	fa1f f689 	uxth.w	r6, r9
 8022468:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802246c:	fb11 f90e 	smulbb	r9, r1, lr
 8022470:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022474:	9602      	str	r6, [sp, #8]
 8022476:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802247a:	4626      	mov	r6, r4
 802247c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022480:	f1ce 0410 	rsb	r4, lr, #16
 8022484:	1a64      	subs	r4, r4, r1
 8022486:	ea4a 0202 	orr.w	r2, sl, r2
 802248a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802248e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022492:	434a      	muls	r2, r1
 8022494:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022498:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802249c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80224a0:	fb04 2406 	mla	r4, r4, r6, r2
 80224a4:	ea4a 0000 	orr.w	r0, sl, r0
 80224a8:	fb09 4200 	mla	r2, r9, r0, r4
 80224ac:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80224b0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80224b4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80224b8:	ea44 0b0b 	orr.w	fp, r4, fp
 80224bc:	9c01      	ldr	r4, [sp, #4]
 80224be:	9e02      	ldr	r6, [sp, #8]
 80224c0:	9903      	ldr	r1, [sp, #12]
 80224c2:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80224c6:	1ba4      	subs	r4, r4, r6
 80224c8:	9e01      	ldr	r6, [sp, #4]
 80224ca:	8808      	ldrh	r0, [r1, #0]
 80224cc:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80224d0:	eba6 0608 	sub.w	r6, r6, r8
 80224d4:	b2b6      	uxth	r6, r6
 80224d6:	b2a4      	uxth	r4, r4
 80224d8:	4373      	muls	r3, r6
 80224da:	fb0c 3304 	mla	r3, ip, r4, r3
 80224de:	9c02      	ldr	r4, [sp, #8]
 80224e0:	fb04 3505 	mla	r5, r4, r5, r3
 80224e4:	fb08 5707 	mla	r7, r8, r7, r5
 80224e8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80224ec:	b289      	uxth	r1, r1
 80224ee:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80224f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80224f6:	434f      	muls	r7, r1
 80224f8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80224fc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022500:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022504:	1c7b      	adds	r3, r7, #1
 8022506:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802250a:	ea42 0e0e 	orr.w	lr, r2, lr
 802250e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022512:	fa1f f28e 	uxth.w	r2, lr
 8022516:	1203      	asrs	r3, r0, #8
 8022518:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802251c:	b2ff      	uxtb	r7, r7
 802251e:	1215      	asrs	r5, r2, #8
 8022520:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022524:	fb13 f307 	smulbb	r3, r3, r7
 8022528:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802252c:	fb05 3501 	mla	r5, r5, r1, r3
 8022530:	10c3      	asrs	r3, r0, #3
 8022532:	10d4      	asrs	r4, r2, #3
 8022534:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022538:	fb13 f307 	smulbb	r3, r3, r7
 802253c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022540:	fb04 3401 	mla	r4, r4, r1, r3
 8022544:	00c3      	lsls	r3, r0, #3
 8022546:	00d2      	lsls	r2, r2, #3
 8022548:	b2db      	uxtb	r3, r3
 802254a:	fb13 f307 	smulbb	r3, r3, r7
 802254e:	b2d2      	uxtb	r2, r2
 8022550:	fb02 3101 	mla	r1, r2, r1, r3
 8022554:	b2ad      	uxth	r5, r5
 8022556:	b289      	uxth	r1, r1
 8022558:	b2a4      	uxth	r4, r4
 802255a:	1c6b      	adds	r3, r5, #1
 802255c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022560:	1c62      	adds	r2, r4, #1
 8022562:	1c4b      	adds	r3, r1, #1
 8022564:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022568:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802256c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022570:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022574:	0964      	lsrs	r4, r4, #5
 8022576:	432b      	orrs	r3, r5
 8022578:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802257c:	9a03      	ldr	r2, [sp, #12]
 802257e:	4323      	orrs	r3, r4
 8022580:	8013      	strh	r3, [r2, #0]
 8022582:	b005      	add	sp, #20
 8022584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022588:	f04f 0c00 	mov.w	ip, #0
 802258c:	4664      	mov	r4, ip
 802258e:	e6d6      	b.n	802233e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022590:	2300      	movs	r3, #0
 8022592:	469c      	mov	ip, r3
 8022594:	461a      	mov	r2, r3
 8022596:	461c      	mov	r4, r3
 8022598:	e6f8      	b.n	802238c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802259a:	2300      	movs	r3, #0
 802259c:	461a      	mov	r2, r3
 802259e:	e6f5      	b.n	802238c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80225a0:	460b      	mov	r3, r1
 80225a2:	460a      	mov	r2, r1
 80225a4:	e6f2      	b.n	802238c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80225a6:	2500      	movs	r5, #0
 80225a8:	46ab      	mov	fp, r5
 80225aa:	e720      	b.n	80223ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80225ac:	2700      	movs	r7, #0
 80225ae:	463d      	mov	r5, r7
 80225b0:	4638      	mov	r0, r7
 80225b2:	46bb      	mov	fp, r7
 80225b4:	e745      	b.n	8022442 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80225b6:	4677      	mov	r7, lr
 80225b8:	4675      	mov	r5, lr
 80225ba:	4670      	mov	r0, lr
 80225bc:	46f3      	mov	fp, lr
 80225be:	e740      	b.n	8022442 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80225c0:	2700      	movs	r7, #0
 80225c2:	4638      	mov	r0, r7
 80225c4:	e73d      	b.n	8022442 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80225c6:	460f      	mov	r7, r1
 80225c8:	4608      	mov	r0, r1
 80225ca:	e73a      	b.n	8022442 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80225cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225d0:	b097      	sub	sp, #92	; 0x5c
 80225d2:	9214      	str	r2, [sp, #80]	; 0x50
 80225d4:	9308      	str	r3, [sp, #32]
 80225d6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80225d8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80225dc:	9312      	str	r3, [sp, #72]	; 0x48
 80225de:	9111      	str	r1, [sp, #68]	; 0x44
 80225e0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80225e4:	9015      	str	r0, [sp, #84]	; 0x54
 80225e6:	6850      	ldr	r0, [r2, #4]
 80225e8:	6812      	ldr	r2, [r2, #0]
 80225ea:	fb00 1303 	mla	r3, r0, r3, r1
 80225ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80225f2:	9309      	str	r3, [sp, #36]	; 0x24
 80225f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225f6:	681b      	ldr	r3, [r3, #0]
 80225f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80225fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225fc:	685b      	ldr	r3, [r3, #4]
 80225fe:	930c      	str	r3, [sp, #48]	; 0x30
 8022600:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022604:	930a      	str	r3, [sp, #40]	; 0x28
 8022606:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022608:	2b00      	cmp	r3, #0
 802260a:	dc03      	bgt.n	8022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802260c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802260e:	2b00      	cmp	r3, #0
 8022610:	f340 83cb 	ble.w	8022daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022614:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022616:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802261a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802261e:	1e48      	subs	r0, r1, #1
 8022620:	1e55      	subs	r5, r2, #1
 8022622:	9b08      	ldr	r3, [sp, #32]
 8022624:	2b00      	cmp	r3, #0
 8022626:	f340 81a3 	ble.w	8022970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802262a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802262c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802262e:	1436      	asrs	r6, r6, #16
 8022630:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022634:	d406      	bmi.n	8022644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022636:	4286      	cmp	r6, r0
 8022638:	da04      	bge.n	8022644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802263a:	2b00      	cmp	r3, #0
 802263c:	db02      	blt.n	8022644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802263e:	42ab      	cmp	r3, r5
 8022640:	f2c0 8197 	blt.w	8022972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022644:	3601      	adds	r6, #1
 8022646:	f100 8184 	bmi.w	8022952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802264a:	42b1      	cmp	r1, r6
 802264c:	f2c0 8181 	blt.w	8022952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022650:	3301      	adds	r3, #1
 8022652:	f100 817e 	bmi.w	8022952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022656:	429a      	cmp	r2, r3
 8022658:	f2c0 817b 	blt.w	8022952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802265c:	9b08      	ldr	r3, [sp, #32]
 802265e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022660:	9313      	str	r3, [sp, #76]	; 0x4c
 8022662:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022666:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022668:	2b00      	cmp	r3, #0
 802266a:	f340 81a4 	ble.w	80229b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802266e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022670:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022672:	1418      	asrs	r0, r3, #16
 8022674:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022676:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802267a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802267c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022680:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022682:	142d      	asrs	r5, r5, #16
 8022684:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022688:	f100 81f8 	bmi.w	8022a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802268c:	f102 3eff 	add.w	lr, r2, #4294967295
 8022690:	4575      	cmp	r5, lr
 8022692:	f280 81f3 	bge.w	8022a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022696:	2800      	cmp	r0, #0
 8022698:	f2c0 81f0 	blt.w	8022a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802269c:	f103 3eff 	add.w	lr, r3, #4294967295
 80226a0:	4570      	cmp	r0, lr
 80226a2:	f280 81eb 	bge.w	8022a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80226a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80226a8:	b212      	sxth	r2, r2
 80226aa:	fb00 5002 	mla	r0, r0, r2, r5
 80226ae:	fa1f fe81 	uxth.w	lr, r1
 80226b2:	eb03 0a00 	add.w	sl, r3, r0
 80226b6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80226ba:	f813 9000 	ldrb.w	r9, [r3, r0]
 80226be:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80226c2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80226c6:	b29b      	uxth	r3, r3
 80226c8:	f1bc 0f00 	cmp.w	ip, #0
 80226cc:	f000 81b9 	beq.w	8022a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80226d0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80226d4:	940d      	str	r4, [sp, #52]	; 0x34
 80226d6:	eb0a 0b02 	add.w	fp, sl, r2
 80226da:	fa1f fa8c 	uxth.w	sl, ip
 80226de:	fb0a fe0e 	mul.w	lr, sl, lr
 80226e2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80226e6:	fa1f fa8a 	uxth.w	sl, sl
 80226ea:	eba5 050e 	sub.w	r5, r5, lr
 80226ee:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80226f2:	940e      	str	r4, [sp, #56]	; 0x38
 80226f4:	eba3 030a 	sub.w	r3, r3, sl
 80226f8:	b2ad      	uxth	r5, r5
 80226fa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80226fc:	b29b      	uxth	r3, r3
 80226fe:	fb08 f505 	mul.w	r5, r8, r5
 8022702:	fb09 5303 	mla	r3, r9, r3, r5
 8022706:	fb0a 3304 	mla	r3, sl, r4, r3
 802270a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802270c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022710:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022714:	2b00      	cmp	r3, #0
 8022716:	f000 810f 	beq.w	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802271a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802271c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022720:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022724:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022728:	f000 8190 	beq.w	8022a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802272c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022730:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022734:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022738:	fb09 f000 	mul.w	r0, r9, r0
 802273c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022740:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022744:	f100 0b20 	add.w	fp, r0, #32
 8022748:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802274c:	44ce      	add	lr, r9
 802274e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022752:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022756:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802275a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802275e:	ea4e 0909 	orr.w	r9, lr, r9
 8022762:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022766:	8868      	ldrh	r0, [r5, #2]
 8022768:	d019      	beq.n	802279e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802276a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802276e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022772:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022776:	fb08 f800 	mul.w	r8, r8, r0
 802277a:	fb0a fe0e 	mul.w	lr, sl, lr
 802277e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022782:	f108 0b20 	add.w	fp, r8, #32
 8022786:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802278a:	4486      	add	lr, r0
 802278c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022790:	0a00      	lsrs	r0, r0, #8
 8022792:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022796:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802279a:	ea4e 0000 	orr.w	r0, lr, r0
 802279e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80227a2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80227a6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80227aa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80227ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80227b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80227b6:	ea4e 0909 	orr.w	r9, lr, r9
 80227ba:	ea4a 0000 	orr.w	r0, sl, r0
 80227be:	f1bc 0f00 	cmp.w	ip, #0
 80227c2:	f000 8145 	beq.w	8022a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80227c6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80227ca:	3a01      	subs	r2, #1
 80227cc:	0052      	lsls	r2, r2, #1
 80227ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80227d0:	3202      	adds	r2, #2
 80227d2:	2cff      	cmp	r4, #255	; 0xff
 80227d4:	eb05 0e02 	add.w	lr, r5, r2
 80227d8:	5aaa      	ldrh	r2, [r5, r2]
 80227da:	d018      	beq.n	802280e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80227dc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80227e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227e4:	fb04 fa02 	mul.w	sl, r4, r2
 80227e8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80227ec:	fb08 f805 	mul.w	r8, r8, r5
 80227f0:	f10a 0520 	add.w	r5, sl, #32
 80227f4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80227f8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80227fc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022800:	4442      	add	r2, r8
 8022802:	0a2d      	lsrs	r5, r5, #8
 8022804:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022808:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802280c:	432a      	orrs	r2, r5
 802280e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022810:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022814:	2cff      	cmp	r4, #255	; 0xff
 8022816:	d01a      	beq.n	802284e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022818:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802281c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022820:	fb04 fa05 	mul.w	sl, r4, r5
 8022824:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022828:	fb08 f80e 	mul.w	r8, r8, lr
 802282c:	f10a 0e20 	add.w	lr, sl, #32
 8022830:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022834:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022838:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802283c:	4445      	add	r5, r8
 802283e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022842:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022846:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802284a:	ea45 050e 	orr.w	r5, r5, lr
 802284e:	fb1c fe01 	smulbb	lr, ip, r1
 8022852:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022856:	f1cc 0810 	rsb	r8, ip, #16
 802285a:	eba8 0801 	sub.w	r8, r8, r1
 802285e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022862:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022866:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802286a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802286e:	4341      	muls	r1, r0
 8022870:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022874:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022878:	ea4a 0202 	orr.w	r2, sl, r2
 802287c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022880:	fb09 1108 	mla	r1, r9, r8, r1
 8022884:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022888:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802288c:	fb0c 1102 	mla	r1, ip, r2, r1
 8022890:	ea4b 0505 	orr.w	r5, fp, r5
 8022894:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022898:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802289c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80228a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228a4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80228a8:	ea42 0e0e 	orr.w	lr, r2, lr
 80228ac:	fa1f f28e 	uxth.w	r2, lr
 80228b0:	2bff      	cmp	r3, #255	; 0xff
 80228b2:	d103      	bne.n	80228bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80228b4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80228b6:	29ff      	cmp	r1, #255	; 0xff
 80228b8:	f000 80de 	beq.w	8022a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80228bc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80228be:	8838      	ldrh	r0, [r7, #0]
 80228c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80228c2:	434b      	muls	r3, r1
 80228c4:	f103 0c01 	add.w	ip, r3, #1
 80228c8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80228cc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80228d0:	fa5f fc83 	uxtb.w	ip, r3
 80228d4:	1203      	asrs	r3, r0, #8
 80228d6:	1215      	asrs	r5, r2, #8
 80228d8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80228dc:	fb13 f30c 	smulbb	r3, r3, ip
 80228e0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80228e4:	fb05 3501 	mla	r5, r5, r1, r3
 80228e8:	10c3      	asrs	r3, r0, #3
 80228ea:	10d1      	asrs	r1, r2, #3
 80228ec:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80228f0:	fb13 f30c 	smulbb	r3, r3, ip
 80228f4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80228f8:	fb01 3104 	mla	r1, r1, r4, r3
 80228fc:	00c3      	lsls	r3, r0, #3
 80228fe:	00d2      	lsls	r2, r2, #3
 8022900:	b2db      	uxtb	r3, r3
 8022902:	b2d2      	uxtb	r2, r2
 8022904:	fb13 f30c 	smulbb	r3, r3, ip
 8022908:	b2ad      	uxth	r5, r5
 802290a:	fb02 3304 	mla	r3, r2, r4, r3
 802290e:	b29a      	uxth	r2, r3
 8022910:	1c6b      	adds	r3, r5, #1
 8022912:	b289      	uxth	r1, r1
 8022914:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022918:	1c53      	adds	r3, r2, #1
 802291a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802291e:	1c4a      	adds	r2, r1, #1
 8022920:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022924:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022928:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802292c:	0949      	lsrs	r1, r1, #5
 802292e:	432b      	orrs	r3, r5
 8022930:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022934:	430b      	orrs	r3, r1
 8022936:	803b      	strh	r3, [r7, #0]
 8022938:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802293a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802293c:	4413      	add	r3, r2
 802293e:	9321      	str	r3, [sp, #132]	; 0x84
 8022940:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022942:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022944:	441a      	add	r2, r3
 8022946:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022948:	9222      	str	r2, [sp, #136]	; 0x88
 802294a:	3b01      	subs	r3, #1
 802294c:	3702      	adds	r7, #2
 802294e:	9313      	str	r3, [sp, #76]	; 0x4c
 8022950:	e689      	b.n	8022666 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022952:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022954:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022956:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022958:	4433      	add	r3, r6
 802295a:	9321      	str	r3, [sp, #132]	; 0x84
 802295c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802295e:	441c      	add	r4, r3
 8022960:	9b08      	ldr	r3, [sp, #32]
 8022962:	9422      	str	r4, [sp, #136]	; 0x88
 8022964:	3b01      	subs	r3, #1
 8022966:	9308      	str	r3, [sp, #32]
 8022968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802296a:	3302      	adds	r3, #2
 802296c:	9309      	str	r3, [sp, #36]	; 0x24
 802296e:	e658      	b.n	8022622 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022970:	d028      	beq.n	80229c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022972:	9b08      	ldr	r3, [sp, #32]
 8022974:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022976:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022978:	3b01      	subs	r3, #1
 802297a:	fb00 5003 	mla	r0, r0, r3, r5
 802297e:	1400      	asrs	r0, r0, #16
 8022980:	f53f ae6c 	bmi.w	802265c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022984:	3901      	subs	r1, #1
 8022986:	4288      	cmp	r0, r1
 8022988:	f6bf ae68 	bge.w	802265c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802298c:	9924      	ldr	r1, [sp, #144]	; 0x90
 802298e:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022990:	fb01 0303 	mla	r3, r1, r3, r0
 8022994:	141b      	asrs	r3, r3, #16
 8022996:	f53f ae61 	bmi.w	802265c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802299a:	3a01      	subs	r2, #1
 802299c:	4293      	cmp	r3, r2
 802299e:	f6bf ae5d 	bge.w	802265c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80229a2:	9b08      	ldr	r3, [sp, #32]
 80229a4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80229a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80229aa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80229ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80229b0:	2b00      	cmp	r3, #0
 80229b2:	f300 8082 	bgt.w	8022aba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80229b6:	9b08      	ldr	r3, [sp, #32]
 80229b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80229bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229be:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80229c2:	9309      	str	r3, [sp, #36]	; 0x24
 80229c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80229c6:	2b00      	cmp	r3, #0
 80229c8:	f340 81ef 	ble.w	8022daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80229cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80229d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80229d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80229d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80229da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80229de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80229e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80229e6:	eef0 6a62 	vmov.f32	s13, s5
 80229ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80229ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80229f6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80229fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80229fe:	eef0 6a43 	vmov.f32	s13, s6
 8022a02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a06:	ee12 2a90 	vmov	r2, s5
 8022a0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a12:	ee13 2a10 	vmov	r2, s6
 8022a16:	9323      	str	r3, [sp, #140]	; 0x8c
 8022a18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a1e:	9324      	str	r3, [sp, #144]	; 0x90
 8022a20:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022a22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022a24:	3b01      	subs	r3, #1
 8022a26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a2a:	9311      	str	r3, [sp, #68]	; 0x44
 8022a2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a2e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022a32:	bf08      	it	eq
 8022a34:	4613      	moveq	r3, r2
 8022a36:	9308      	str	r3, [sp, #32]
 8022a38:	eeb0 3a67 	vmov.f32	s6, s15
 8022a3c:	eef0 2a47 	vmov.f32	s5, s14
 8022a40:	e5e1      	b.n	8022606 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022a42:	fb08 f505 	mul.w	r5, r8, r5
 8022a46:	fb09 5303 	mla	r3, r9, r3, r5
 8022a4a:	e661      	b.n	8022710 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022a4c:	4681      	mov	r9, r0
 8022a4e:	e688      	b.n	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022a50:	f1c1 0210 	rsb	r2, r1, #16
 8022a54:	4341      	muls	r1, r0
 8022a56:	fb09 1902 	mla	r9, r9, r2, r1
 8022a5a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022a5e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022a62:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022a66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a6a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022a6e:	ea42 0909 	orr.w	r9, r2, r9
 8022a72:	fa1f f289 	uxth.w	r2, r9
 8022a76:	e71b      	b.n	80228b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022a78:	803a      	strh	r2, [r7, #0]
 8022a7a:	e75d      	b.n	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a7c:	f115 0e01 	adds.w	lr, r5, #1
 8022a80:	f53f af5a 	bmi.w	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a84:	4572      	cmp	r2, lr
 8022a86:	f6ff af57 	blt.w	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a8a:	f110 0e01 	adds.w	lr, r0, #1
 8022a8e:	f53f af53 	bmi.w	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a92:	4573      	cmp	r3, lr
 8022a94:	f6ff af50 	blt.w	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022a98:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022a9a:	9502      	str	r5, [sp, #8]
 8022a9c:	b21b      	sxth	r3, r3
 8022a9e:	b212      	sxth	r2, r2
 8022aa0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022aa4:	9301      	str	r3, [sp, #4]
 8022aa6:	9200      	str	r2, [sp, #0]
 8022aa8:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022aac:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022ab0:	4639      	mov	r1, r7
 8022ab2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022ab4:	f7ff fc04 	bl	80222c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022ab8:	e73e      	b.n	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022aba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022abc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022ac0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022ac2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022ac6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022ac8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022acc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022ace:	141f      	asrs	r7, r3, #16
 8022ad0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022ad2:	141b      	asrs	r3, r3, #16
 8022ad4:	fb01 3707 	mla	r7, r1, r7, r3
 8022ad8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022ada:	fa1f fc82 	uxth.w	ip, r2
 8022ade:	eb03 0a07 	add.w	sl, r3, r7
 8022ae2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022ae6:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022aea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022aee:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022af2:	b29b      	uxth	r3, r3
 8022af4:	2d00      	cmp	r5, #0
 8022af6:	f000 813d 	beq.w	8022d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022afa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022afe:	940f      	str	r4, [sp, #60]	; 0x3c
 8022b00:	eb0a 0b01 	add.w	fp, sl, r1
 8022b04:	fa1f fa85 	uxth.w	sl, r5
 8022b08:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b0c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022b10:	fa1f fa8a 	uxth.w	sl, sl
 8022b14:	eba0 000c 	sub.w	r0, r0, ip
 8022b18:	eba3 030a 	sub.w	r3, r3, sl
 8022b1c:	b280      	uxth	r0, r0
 8022b1e:	fb08 f000 	mul.w	r0, r8, r0
 8022b22:	b29b      	uxth	r3, r3
 8022b24:	fb09 0303 	mla	r3, r9, r3, r0
 8022b28:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022b2a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022b2e:	9410      	str	r4, [sp, #64]	; 0x40
 8022b30:	fb0a 3300 	mla	r3, sl, r0, r3
 8022b34:	fb0c 3304 	mla	r3, ip, r4, r3
 8022b38:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022b3c:	2b00      	cmp	r3, #0
 8022b3e:	f000 810b 	beq.w	8022d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022b42:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022b44:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022b46:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022b4a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022b4e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022b52:	f000 8114 	beq.w	8022d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022b56:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022b5a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022b5e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022b62:	fb09 f707 	mul.w	r7, r9, r7
 8022b66:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b6a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022b6e:	f107 0b20 	add.w	fp, r7, #32
 8022b72:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022b76:	44cc      	add	ip, r9
 8022b78:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022b7c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022b80:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022b84:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022b88:	ea4c 0909 	orr.w	r9, ip, r9
 8022b8c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022b90:	8847      	ldrh	r7, [r0, #2]
 8022b92:	d019      	beq.n	8022bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022b94:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022b98:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022b9c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ba0:	fb08 f807 	mul.w	r8, r8, r7
 8022ba4:	fb0a fc0c 	mul.w	ip, sl, ip
 8022ba8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022bac:	f108 0b20 	add.w	fp, r8, #32
 8022bb0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022bb4:	44bc      	add	ip, r7
 8022bb6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022bba:	0a3f      	lsrs	r7, r7, #8
 8022bbc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022bc0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022bc4:	ea4c 0707 	orr.w	r7, ip, r7
 8022bc8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022bcc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022bd0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022bd4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022bd8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022bdc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022be0:	ea4c 0909 	orr.w	r9, ip, r9
 8022be4:	ea4a 0707 	orr.w	r7, sl, r7
 8022be8:	2d00      	cmp	r5, #0
 8022bea:	f000 80ca 	beq.w	8022d82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022bee:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022bf2:	3901      	subs	r1, #1
 8022bf4:	0049      	lsls	r1, r1, #1
 8022bf6:	3102      	adds	r1, #2
 8022bf8:	eb00 0c01 	add.w	ip, r0, r1
 8022bfc:	5a41      	ldrh	r1, [r0, r1]
 8022bfe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022c00:	28ff      	cmp	r0, #255	; 0xff
 8022c02:	d019      	beq.n	8022c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022c04:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022c06:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022c0a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c0e:	fb04 fa01 	mul.w	sl, r4, r1
 8022c12:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022c16:	fb08 f800 	mul.w	r8, r8, r0
 8022c1a:	f10a 0020 	add.w	r0, sl, #32
 8022c1e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022c22:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022c26:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022c2a:	4441      	add	r1, r8
 8022c2c:	0a00      	lsrs	r0, r0, #8
 8022c2e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022c32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c36:	4301      	orrs	r1, r0
 8022c38:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022c3a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022c3e:	2cff      	cmp	r4, #255	; 0xff
 8022c40:	d01a      	beq.n	8022c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022c42:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022c46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c4a:	fb04 fa00 	mul.w	sl, r4, r0
 8022c4e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022c52:	fb08 f80c 	mul.w	r8, r8, ip
 8022c56:	f10a 0c20 	add.w	ip, sl, #32
 8022c5a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022c5e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022c62:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022c66:	4440      	add	r0, r8
 8022c68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c6c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022c70:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022c74:	ea40 000c 	orr.w	r0, r0, ip
 8022c78:	fb15 fc02 	smulbb	ip, r5, r2
 8022c7c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022c80:	f1c5 0810 	rsb	r8, r5, #16
 8022c84:	eba8 0802 	sub.w	r8, r8, r2
 8022c88:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022c8c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022c90:	437a      	muls	r2, r7
 8022c92:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022c96:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022c9a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022ca2:	fb09 2208 	mla	r2, r9, r8, r2
 8022ca6:	ea4a 0101 	orr.w	r1, sl, r1
 8022caa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022cae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022cb2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022cb6:	fb05 2201 	mla	r2, r5, r1, r2
 8022cba:	ea4b 0000 	orr.w	r0, fp, r0
 8022cbe:	fb0c 2200 	mla	r2, ip, r0, r2
 8022cc2:	0d57      	lsrs	r7, r2, #21
 8022cc4:	0952      	lsrs	r2, r2, #5
 8022cc6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022cca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022cce:	433a      	orrs	r2, r7
 8022cd0:	2bff      	cmp	r3, #255	; 0xff
 8022cd2:	b292      	uxth	r2, r2
 8022cd4:	d102      	bne.n	8022cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022cd6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022cd8:	29ff      	cmp	r1, #255	; 0xff
 8022cda:	d063      	beq.n	8022da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022cdc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022cde:	f8be 1000 	ldrh.w	r1, [lr]
 8022ce2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022ce4:	4343      	muls	r3, r0
 8022ce6:	1c58      	adds	r0, r3, #1
 8022ce8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022cec:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022cf0:	1208      	asrs	r0, r1, #8
 8022cf2:	b2db      	uxtb	r3, r3
 8022cf4:	1215      	asrs	r5, r2, #8
 8022cf6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022cfa:	fb10 f003 	smulbb	r0, r0, r3
 8022cfe:	10cf      	asrs	r7, r1, #3
 8022d00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022d04:	00c9      	lsls	r1, r1, #3
 8022d06:	fb05 0504 	mla	r5, r5, r4, r0
 8022d0a:	b2c9      	uxtb	r1, r1
 8022d0c:	10d0      	asrs	r0, r2, #3
 8022d0e:	00d2      	lsls	r2, r2, #3
 8022d10:	fb11 f103 	smulbb	r1, r1, r3
 8022d14:	b2d2      	uxtb	r2, r2
 8022d16:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022d1a:	fb02 1204 	mla	r2, r2, r4, r1
 8022d1e:	fb17 f703 	smulbb	r7, r7, r3
 8022d22:	b2ad      	uxth	r5, r5
 8022d24:	b292      	uxth	r2, r2
 8022d26:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022d2a:	fb00 7004 	mla	r0, r0, r4, r7
 8022d2e:	1c6b      	adds	r3, r5, #1
 8022d30:	1c57      	adds	r7, r2, #1
 8022d32:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022d36:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022d3a:	b280      	uxth	r0, r0
 8022d3c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022d40:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022d44:	433d      	orrs	r5, r7
 8022d46:	1c47      	adds	r7, r0, #1
 8022d48:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022d4c:	097f      	lsrs	r7, r7, #5
 8022d4e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d52:	433d      	orrs	r5, r7
 8022d54:	f8ae 5000 	strh.w	r5, [lr]
 8022d58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022d5a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022d5c:	4413      	add	r3, r2
 8022d5e:	9321      	str	r3, [sp, #132]	; 0x84
 8022d60:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022d62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d64:	441a      	add	r2, r3
 8022d66:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022d68:	9222      	str	r2, [sp, #136]	; 0x88
 8022d6a:	3b01      	subs	r3, #1
 8022d6c:	f10e 0e02 	add.w	lr, lr, #2
 8022d70:	9313      	str	r3, [sp, #76]	; 0x4c
 8022d72:	e61c      	b.n	80229ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022d74:	fb08 f000 	mul.w	r0, r8, r0
 8022d78:	fb09 0303 	mla	r3, r9, r3, r0
 8022d7c:	e6dc      	b.n	8022b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022d7e:	46b9      	mov	r9, r7
 8022d80:	e704      	b.n	8022b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022d82:	f1c2 0110 	rsb	r1, r2, #16
 8022d86:	437a      	muls	r2, r7
 8022d88:	fb09 2901 	mla	r9, r9, r1, r2
 8022d8c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022d90:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022d94:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022d98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d9c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022da0:	4302      	orrs	r2, r0
 8022da2:	e795      	b.n	8022cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022da4:	f8ae 2000 	strh.w	r2, [lr]
 8022da8:	e7d6      	b.n	8022d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022daa:	b017      	add	sp, #92	; 0x5c
 8022dac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022db4:	b085      	sub	sp, #20
 8022db6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022dba:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022dbe:	9103      	str	r1, [sp, #12]
 8022dc0:	fb00 7406 	mla	r4, r0, r6, r7
 8022dc4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022dc8:	2800      	cmp	r0, #0
 8022dca:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022dce:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022dd2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022dd6:	9501      	str	r5, [sp, #4]
 8022dd8:	eb02 0904 	add.w	r9, r2, r4
 8022ddc:	f2c0 8141 	blt.w	8023062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022de0:	4583      	cmp	fp, r0
 8022de2:	f340 813e 	ble.w	8023062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022de6:	2f00      	cmp	r7, #0
 8022de8:	f2c0 8137 	blt.w	802305a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022dec:	42be      	cmp	r6, r7
 8022dee:	f340 8134 	ble.w	802305a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022df2:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022df6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022dfa:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022dfe:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022e02:	4355      	muls	r5, r2
 8022e04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e08:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022e0c:	fb0c f203 	mul.w	r2, ip, r3
 8022e10:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022e14:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022e18:	441d      	add	r5, r3
 8022e1a:	f102 0320 	add.w	r3, r2, #32
 8022e1e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e22:	0a1b      	lsrs	r3, r3, #8
 8022e24:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022e28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e2c:	431c      	orrs	r4, r3
 8022e2e:	1c7b      	adds	r3, r7, #1
 8022e30:	f100 811c 	bmi.w	802306c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022e34:	429e      	cmp	r6, r3
 8022e36:	f340 8119 	ble.w	802306c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022e3a:	2900      	cmp	r1, #0
 8022e3c:	f000 8119 	beq.w	8023072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022e40:	9a01      	ldr	r2, [sp, #4]
 8022e42:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022e46:	8855      	ldrh	r5, [r2, #2]
 8022e48:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022e4c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022e50:	fb08 f802 	mul.w	r8, r8, r2
 8022e54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022e58:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022e5c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022e60:	435d      	muls	r5, r3
 8022e62:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022e66:	44d0      	add	r8, sl
 8022e68:	f105 0a20 	add.w	sl, r5, #32
 8022e6c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022e70:	0a2d      	lsrs	r5, r5, #8
 8022e72:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022e76:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022e7a:	432a      	orrs	r2, r5
 8022e7c:	3001      	adds	r0, #1
 8022e7e:	f100 80fe 	bmi.w	802307e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022e82:	4583      	cmp	fp, r0
 8022e84:	f340 80fb 	ble.w	802307e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022e88:	f1be 0f00 	cmp.w	lr, #0
 8022e8c:	f000 80fc 	beq.w	8023088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022e90:	2f00      	cmp	r7, #0
 8022e92:	f2c0 80f1 	blt.w	8023078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022e96:	42be      	cmp	r6, r7
 8022e98:	f340 80ee 	ble.w	8023078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022e9c:	9801      	ldr	r0, [sp, #4]
 8022e9e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022ea2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022ea6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022eaa:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022eae:	fb0a fa00 	mul.w	sl, sl, r0
 8022eb2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022eb6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022eba:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022ebe:	fb05 f808 	mul.w	r8, r5, r8
 8022ec2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022ec6:	4482      	add	sl, r0
 8022ec8:	f108 0020 	add.w	r0, r8, #32
 8022ecc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022ed0:	0a00      	lsrs	r0, r0, #8
 8022ed2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022ed6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022eda:	ea4b 0b00 	orr.w	fp, fp, r0
 8022ede:	3701      	adds	r7, #1
 8022ee0:	f100 80d7 	bmi.w	8023092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022ee4:	42be      	cmp	r6, r7
 8022ee6:	f340 80d4 	ble.w	8023092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022eea:	2900      	cmp	r1, #0
 8022eec:	f000 80d4 	beq.w	8023098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022ef0:	3601      	adds	r6, #1
 8022ef2:	9801      	ldr	r0, [sp, #4]
 8022ef4:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022ef8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022efc:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022f00:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022f04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f08:	fb09 f906 	mul.w	r9, r9, r6
 8022f0c:	fb07 f800 	mul.w	r8, r7, r0
 8022f10:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022f14:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022f18:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022f1c:	44d1      	add	r9, sl
 8022f1e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022f22:	f108 0020 	add.w	r0, r8, #32
 8022f26:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022f2a:	0a00      	lsrs	r0, r0, #8
 8022f2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f30:	4330      	orrs	r0, r6
 8022f32:	b28e      	uxth	r6, r1
 8022f34:	fa1f f98e 	uxth.w	r9, lr
 8022f38:	fb06 f809 	mul.w	r8, r6, r9
 8022f3c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022f40:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022f44:	0136      	lsls	r6, r6, #4
 8022f46:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f4a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022f4e:	9601      	str	r6, [sp, #4]
 8022f50:	ea4a 0404 	orr.w	r4, sl, r4
 8022f54:	fa1f f689 	uxth.w	r6, r9
 8022f58:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022f5c:	fb11 f90e 	smulbb	r9, r1, lr
 8022f60:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022f64:	9602      	str	r6, [sp, #8]
 8022f66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f6a:	4626      	mov	r6, r4
 8022f6c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f70:	f1ce 0410 	rsb	r4, lr, #16
 8022f74:	1a64      	subs	r4, r4, r1
 8022f76:	ea4a 0202 	orr.w	r2, sl, r2
 8022f7a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022f7e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022f82:	434a      	muls	r2, r1
 8022f84:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022f88:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f8c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f90:	fb04 2406 	mla	r4, r4, r6, r2
 8022f94:	ea4a 0000 	orr.w	r0, sl, r0
 8022f98:	fb09 4200 	mla	r2, r9, r0, r4
 8022f9c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022fa0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022fa4:	9801      	ldr	r0, [sp, #4]
 8022fa6:	9903      	ldr	r1, [sp, #12]
 8022fa8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022fac:	ea44 0b0b 	orr.w	fp, r4, fp
 8022fb0:	9c02      	ldr	r4, [sp, #8]
 8022fb2:	8809      	ldrh	r1, [r1, #0]
 8022fb4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022fb8:	1b00      	subs	r0, r0, r4
 8022fba:	9c01      	ldr	r4, [sp, #4]
 8022fbc:	eba4 0608 	sub.w	r6, r4, r8
 8022fc0:	b2b6      	uxth	r6, r6
 8022fc2:	b280      	uxth	r0, r0
 8022fc4:	4373      	muls	r3, r6
 8022fc6:	fb0c 3300 	mla	r3, ip, r0, r3
 8022fca:	9802      	ldr	r0, [sp, #8]
 8022fcc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022fd0:	fb00 3505 	mla	r5, r0, r5, r3
 8022fd4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022fd8:	fb08 5707 	mla	r7, r8, r7, r5
 8022fdc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022fe0:	120b      	asrs	r3, r1, #8
 8022fe2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022fe6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022fea:	b2ff      	uxtb	r7, r7
 8022fec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ff0:	10c8      	asrs	r0, r1, #3
 8022ff2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022ff6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022ffa:	00c9      	lsls	r1, r1, #3
 8022ffc:	437b      	muls	r3, r7
 8022ffe:	ea42 0e0e 	orr.w	lr, r2, lr
 8023002:	b2c9      	uxtb	r1, r1
 8023004:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023008:	fa1f f28e 	uxth.w	r2, lr
 802300c:	4378      	muls	r0, r7
 802300e:	434f      	muls	r7, r1
 8023010:	1c59      	adds	r1, r3, #1
 8023012:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023016:	1213      	asrs	r3, r2, #8
 8023018:	f023 0307 	bic.w	r3, r3, #7
 802301c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023020:	1c41      	adds	r1, r0, #1
 8023022:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023026:	10d1      	asrs	r1, r2, #3
 8023028:	f021 0103 	bic.w	r1, r1, #3
 802302c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023030:	021b      	lsls	r3, r3, #8
 8023032:	00c9      	lsls	r1, r1, #3
 8023034:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023038:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802303c:	430b      	orrs	r3, r1
 802303e:	1c79      	adds	r1, r7, #1
 8023040:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023044:	00d2      	lsls	r2, r2, #3
 8023046:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802304a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802304e:	431a      	orrs	r2, r3
 8023050:	9b03      	ldr	r3, [sp, #12]
 8023052:	801a      	strh	r2, [r3, #0]
 8023054:	b005      	add	sp, #20
 8023056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802305a:	f04f 0c00 	mov.w	ip, #0
 802305e:	4664      	mov	r4, ip
 8023060:	e6e5      	b.n	8022e2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8023062:	2300      	movs	r3, #0
 8023064:	469c      	mov	ip, r3
 8023066:	461a      	mov	r2, r3
 8023068:	461c      	mov	r4, r3
 802306a:	e707      	b.n	8022e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802306c:	2300      	movs	r3, #0
 802306e:	461a      	mov	r2, r3
 8023070:	e704      	b.n	8022e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023072:	460b      	mov	r3, r1
 8023074:	460a      	mov	r2, r1
 8023076:	e701      	b.n	8022e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023078:	2500      	movs	r5, #0
 802307a:	46ab      	mov	fp, r5
 802307c:	e72f      	b.n	8022ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802307e:	2700      	movs	r7, #0
 8023080:	463d      	mov	r5, r7
 8023082:	4638      	mov	r0, r7
 8023084:	46bb      	mov	fp, r7
 8023086:	e754      	b.n	8022f32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023088:	4677      	mov	r7, lr
 802308a:	4675      	mov	r5, lr
 802308c:	4670      	mov	r0, lr
 802308e:	46f3      	mov	fp, lr
 8023090:	e74f      	b.n	8022f32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023092:	2700      	movs	r7, #0
 8023094:	4638      	mov	r0, r7
 8023096:	e74c      	b.n	8022f32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023098:	460f      	mov	r7, r1
 802309a:	4608      	mov	r0, r1
 802309c:	e749      	b.n	8022f32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080230a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80230a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230a4:	b093      	sub	sp, #76	; 0x4c
 80230a6:	9210      	str	r2, [sp, #64]	; 0x40
 80230a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80230aa:	910e      	str	r1, [sp, #56]	; 0x38
 80230ac:	9306      	str	r3, [sp, #24]
 80230ae:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80230b2:	9011      	str	r0, [sp, #68]	; 0x44
 80230b4:	6850      	ldr	r0, [r2, #4]
 80230b6:	6812      	ldr	r2, [r2, #0]
 80230b8:	fb00 1303 	mla	r3, r0, r3, r1
 80230bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80230c0:	9307      	str	r3, [sp, #28]
 80230c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230c4:	681b      	ldr	r3, [r3, #0]
 80230c6:	9308      	str	r3, [sp, #32]
 80230c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230ca:	685b      	ldr	r3, [r3, #4]
 80230cc:	9309      	str	r3, [sp, #36]	; 0x24
 80230ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80230d0:	2b00      	cmp	r3, #0
 80230d2:	dc03      	bgt.n	80230dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80230d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80230d6:	2b00      	cmp	r3, #0
 80230d8:	f340 83b4 	ble.w	8023844 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80230dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80230e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80230e6:	1e48      	subs	r0, r1, #1
 80230e8:	1e55      	subs	r5, r2, #1
 80230ea:	9b06      	ldr	r3, [sp, #24]
 80230ec:	2b00      	cmp	r3, #0
 80230ee:	f340 8163 	ble.w	80233b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80230f2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80230f4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80230f6:	1436      	asrs	r6, r6, #16
 80230f8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80230fc:	d406      	bmi.n	802310c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80230fe:	4286      	cmp	r6, r0
 8023100:	da04      	bge.n	802310c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023102:	2b00      	cmp	r3, #0
 8023104:	db02      	blt.n	802310c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023106:	42ab      	cmp	r3, r5
 8023108:	f2c0 8157 	blt.w	80233ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802310c:	3601      	adds	r6, #1
 802310e:	f100 8144 	bmi.w	802339a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023112:	42b1      	cmp	r1, r6
 8023114:	f2c0 8141 	blt.w	802339a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023118:	3301      	adds	r3, #1
 802311a:	f100 813e 	bmi.w	802339a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802311e:	429a      	cmp	r2, r3
 8023120:	f2c0 813b 	blt.w	802339a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023124:	9b06      	ldr	r3, [sp, #24]
 8023126:	9f07      	ldr	r7, [sp, #28]
 8023128:	930f      	str	r3, [sp, #60]	; 0x3c
 802312a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802312e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023130:	2b00      	cmp	r3, #0
 8023132:	f340 8164 	ble.w	80233fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023136:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023138:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802313a:	1418      	asrs	r0, r3, #16
 802313c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802313e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023142:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023144:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023148:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802314a:	142d      	asrs	r5, r5, #16
 802314c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023150:	f100 81ee 	bmi.w	8023530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023154:	f102 3eff 	add.w	lr, r2, #4294967295
 8023158:	4575      	cmp	r5, lr
 802315a:	f280 81e9 	bge.w	8023530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802315e:	2800      	cmp	r0, #0
 8023160:	f2c0 81e6 	blt.w	8023530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023164:	f103 3eff 	add.w	lr, r3, #4294967295
 8023168:	4570      	cmp	r0, lr
 802316a:	f280 81e1 	bge.w	8023530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802316e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023170:	b212      	sxth	r2, r2
 8023172:	fb00 5002 	mla	r0, r0, r2, r5
 8023176:	fa1f fe81 	uxth.w	lr, r1
 802317a:	eb03 0a00 	add.w	sl, r3, r0
 802317e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023182:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023186:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802318a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802318e:	b29b      	uxth	r3, r3
 8023190:	f1bc 0f00 	cmp.w	ip, #0
 8023194:	f000 8179 	beq.w	802348a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023198:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802319c:	940a      	str	r4, [sp, #40]	; 0x28
 802319e:	eb0a 0b02 	add.w	fp, sl, r2
 80231a2:	fa1f fa8c 	uxth.w	sl, ip
 80231a6:	fb0a fe0e 	mul.w	lr, sl, lr
 80231aa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80231ae:	fa1f fa8a 	uxth.w	sl, sl
 80231b2:	eba5 050e 	sub.w	r5, r5, lr
 80231b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80231ba:	940b      	str	r4, [sp, #44]	; 0x2c
 80231bc:	eba3 030a 	sub.w	r3, r3, sl
 80231c0:	b2ad      	uxth	r5, r5
 80231c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80231c4:	b29b      	uxth	r3, r3
 80231c6:	fb08 f505 	mul.w	r5, r8, r5
 80231ca:	fb09 5303 	mla	r3, r9, r3, r5
 80231ce:	fb0a 3304 	mla	r3, sl, r4, r3
 80231d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80231d4:	fb0e 3304 	mla	r3, lr, r4, r3
 80231d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80231dc:	2b00      	cmp	r3, #0
 80231de:	f000 80cf 	beq.w	8023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80231e2:	9c08      	ldr	r4, [sp, #32]
 80231e4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80231e8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80231ec:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80231f0:	f000 8150 	beq.w	8023494 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80231f4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80231f8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80231fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023200:	fb09 f000 	mul.w	r0, r9, r0
 8023204:	fb0a fe0e 	mul.w	lr, sl, lr
 8023208:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802320c:	f100 0b20 	add.w	fp, r0, #32
 8023210:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023214:	44ce      	add	lr, r9
 8023216:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802321a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802321e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023222:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023226:	ea4e 0909 	orr.w	r9, lr, r9
 802322a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802322e:	8868      	ldrh	r0, [r5, #2]
 8023230:	d019      	beq.n	8023266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023232:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023236:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802323a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802323e:	fb08 f800 	mul.w	r8, r8, r0
 8023242:	fb0a fe0e 	mul.w	lr, sl, lr
 8023246:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802324a:	f108 0b20 	add.w	fp, r8, #32
 802324e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023252:	4486      	add	lr, r0
 8023254:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023258:	0a00      	lsrs	r0, r0, #8
 802325a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802325e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023262:	ea4e 0000 	orr.w	r0, lr, r0
 8023266:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802326a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802326e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023272:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023276:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802327a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802327e:	ea4e 0909 	orr.w	r9, lr, r9
 8023282:	ea4a 0000 	orr.w	r0, sl, r0
 8023286:	f1bc 0f00 	cmp.w	ip, #0
 802328a:	f000 8105 	beq.w	8023498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802328e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023292:	3a01      	subs	r2, #1
 8023294:	0052      	lsls	r2, r2, #1
 8023296:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023298:	3202      	adds	r2, #2
 802329a:	2cff      	cmp	r4, #255	; 0xff
 802329c:	eb05 0e02 	add.w	lr, r5, r2
 80232a0:	5aaa      	ldrh	r2, [r5, r2]
 80232a2:	d018      	beq.n	80232d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80232a4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80232a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232ac:	fb04 fa02 	mul.w	sl, r4, r2
 80232b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80232b4:	fb08 f805 	mul.w	r8, r8, r5
 80232b8:	f10a 0520 	add.w	r5, sl, #32
 80232bc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80232c0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80232c4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80232c8:	4442      	add	r2, r8
 80232ca:	0a2d      	lsrs	r5, r5, #8
 80232cc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80232d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80232d4:	432a      	orrs	r2, r5
 80232d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80232d8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80232dc:	2cff      	cmp	r4, #255	; 0xff
 80232de:	d01a      	beq.n	8023316 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80232e0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80232e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80232e8:	fb04 fa05 	mul.w	sl, r4, r5
 80232ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80232f0:	fb08 f80e 	mul.w	r8, r8, lr
 80232f4:	f10a 0e20 	add.w	lr, sl, #32
 80232f8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80232fc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023300:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023304:	4445      	add	r5, r8
 8023306:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802330a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802330e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023312:	ea45 050e 	orr.w	r5, r5, lr
 8023316:	fb1c fe01 	smulbb	lr, ip, r1
 802331a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802331e:	f1cc 0810 	rsb	r8, ip, #16
 8023322:	eba8 0801 	sub.w	r8, r8, r1
 8023326:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802332a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802332e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023332:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023336:	4341      	muls	r1, r0
 8023338:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802333c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023340:	ea4a 0202 	orr.w	r2, sl, r2
 8023344:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023348:	fb09 1108 	mla	r1, r9, r8, r1
 802334c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023350:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023354:	fb0c 1102 	mla	r1, ip, r2, r1
 8023358:	ea4b 0505 	orr.w	r5, fp, r5
 802335c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023360:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023364:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023368:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802336c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023370:	ea42 0e0e 	orr.w	lr, r2, lr
 8023374:	fa1f f28e 	uxth.w	r2, lr
 8023378:	2bff      	cmp	r3, #255	; 0xff
 802337a:	f040 80a1 	bne.w	80234c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802337e:	803a      	strh	r2, [r7, #0]
 8023380:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023382:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023384:	4413      	add	r3, r2
 8023386:	931d      	str	r3, [sp, #116]	; 0x74
 8023388:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802338a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802338c:	441a      	add	r2, r3
 802338e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023390:	921e      	str	r2, [sp, #120]	; 0x78
 8023392:	3b01      	subs	r3, #1
 8023394:	3702      	adds	r7, #2
 8023396:	930f      	str	r3, [sp, #60]	; 0x3c
 8023398:	e6c9      	b.n	802312e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802339a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802339c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802339e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80233a0:	4433      	add	r3, r6
 80233a2:	931d      	str	r3, [sp, #116]	; 0x74
 80233a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233a6:	441c      	add	r4, r3
 80233a8:	9b06      	ldr	r3, [sp, #24]
 80233aa:	941e      	str	r4, [sp, #120]	; 0x78
 80233ac:	3b01      	subs	r3, #1
 80233ae:	9306      	str	r3, [sp, #24]
 80233b0:	9b07      	ldr	r3, [sp, #28]
 80233b2:	3302      	adds	r3, #2
 80233b4:	9307      	str	r3, [sp, #28]
 80233b6:	e698      	b.n	80230ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80233b8:	d028      	beq.n	802340c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80233ba:	9b06      	ldr	r3, [sp, #24]
 80233bc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80233be:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80233c0:	3b01      	subs	r3, #1
 80233c2:	fb00 5003 	mla	r0, r0, r3, r5
 80233c6:	1400      	asrs	r0, r0, #16
 80233c8:	f53f aeac 	bmi.w	8023124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233cc:	3901      	subs	r1, #1
 80233ce:	4288      	cmp	r0, r1
 80233d0:	f6bf aea8 	bge.w	8023124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233d4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80233d6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80233d8:	fb01 0303 	mla	r3, r1, r3, r0
 80233dc:	141b      	asrs	r3, r3, #16
 80233de:	f53f aea1 	bmi.w	8023124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233e2:	3a01      	subs	r2, #1
 80233e4:	4293      	cmp	r3, r2
 80233e6:	f6bf ae9d 	bge.w	8023124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80233ea:	9b06      	ldr	r3, [sp, #24]
 80233ec:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80233f0:	930f      	str	r3, [sp, #60]	; 0x3c
 80233f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80233f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80233f8:	2b00      	cmp	r3, #0
 80233fa:	f300 80b6 	bgt.w	802356a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80233fe:	9b06      	ldr	r3, [sp, #24]
 8023400:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023404:	9b07      	ldr	r3, [sp, #28]
 8023406:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802340a:	9307      	str	r3, [sp, #28]
 802340c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802340e:	2b00      	cmp	r3, #0
 8023410:	f340 8218 	ble.w	8023844 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023414:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023418:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802341c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023420:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023422:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023426:	ee31 1a05 	vadd.f32	s2, s2, s10
 802342a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802342e:	eef0 6a62 	vmov.f32	s13, s5
 8023432:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023436:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802343a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802343e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023442:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023446:	eef0 6a43 	vmov.f32	s13, s6
 802344a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802344e:	ee12 2a90 	vmov	r2, s5
 8023452:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023456:	fb92 f3f3 	sdiv	r3, r2, r3
 802345a:	ee13 2a10 	vmov	r2, s6
 802345e:	931f      	str	r3, [sp, #124]	; 0x7c
 8023460:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023462:	fb92 f3f3 	sdiv	r3, r2, r3
 8023466:	9320      	str	r3, [sp, #128]	; 0x80
 8023468:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802346a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802346c:	3b01      	subs	r3, #1
 802346e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023472:	930e      	str	r3, [sp, #56]	; 0x38
 8023474:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023476:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802347a:	bf08      	it	eq
 802347c:	4613      	moveq	r3, r2
 802347e:	9306      	str	r3, [sp, #24]
 8023480:	eeb0 3a67 	vmov.f32	s6, s15
 8023484:	eef0 2a47 	vmov.f32	s5, s14
 8023488:	e621      	b.n	80230ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802348a:	fb08 f505 	mul.w	r5, r8, r5
 802348e:	fb09 5303 	mla	r3, r9, r3, r5
 8023492:	e6a1      	b.n	80231d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023494:	4681      	mov	r9, r0
 8023496:	e6c8      	b.n	802322a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023498:	f1c1 0210 	rsb	r2, r1, #16
 802349c:	4341      	muls	r1, r0
 802349e:	fb09 1902 	mla	r9, r9, r2, r1
 80234a2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80234a6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80234aa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80234ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80234b2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80234b6:	ea42 0909 	orr.w	r9, r2, r9
 80234ba:	fa1f f289 	uxth.w	r2, r9
 80234be:	e75b      	b.n	8023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80234c0:	f8b7 c000 	ldrh.w	ip, [r7]
 80234c4:	43db      	mvns	r3, r3
 80234c6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80234ca:	fa5f fe83 	uxtb.w	lr, r3
 80234ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80234d2:	fb00 f00e 	mul.w	r0, r0, lr
 80234d6:	1c41      	adds	r1, r0, #1
 80234d8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80234dc:	1211      	asrs	r1, r2, #8
 80234de:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80234e2:	f021 0107 	bic.w	r1, r1, #7
 80234e6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80234ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80234ee:	48d7      	ldr	r0, [pc, #860]	; (802384c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80234f0:	fb05 f50e 	mul.w	r5, r5, lr
 80234f4:	b2c9      	uxtb	r1, r1
 80234f6:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80234fa:	1c69      	adds	r1, r5, #1
 80234fc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023500:	10d1      	asrs	r1, r2, #3
 8023502:	f021 0103 	bic.w	r1, r1, #3
 8023506:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802350a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802350e:	b2db      	uxtb	r3, r3
 8023510:	00c9      	lsls	r1, r1, #3
 8023512:	fb03 f30e 	mul.w	r3, r3, lr
 8023516:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802351a:	4301      	orrs	r1, r0
 802351c:	1c58      	adds	r0, r3, #1
 802351e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023522:	00d2      	lsls	r2, r2, #3
 8023524:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023528:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802352c:	430a      	orrs	r2, r1
 802352e:	e726      	b.n	802337e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8023530:	f115 0e01 	adds.w	lr, r5, #1
 8023534:	f53f af24 	bmi.w	8023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023538:	4572      	cmp	r2, lr
 802353a:	f6ff af21 	blt.w	8023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802353e:	f110 0e01 	adds.w	lr, r0, #1
 8023542:	f53f af1d 	bmi.w	8023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023546:	4573      	cmp	r3, lr
 8023548:	f6ff af1a 	blt.w	8023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802354c:	b21b      	sxth	r3, r3
 802354e:	b212      	sxth	r2, r2
 8023550:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023554:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023558:	9301      	str	r3, [sp, #4]
 802355a:	9200      	str	r2, [sp, #0]
 802355c:	4639      	mov	r1, r7
 802355e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023562:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023564:	f7ff fc24 	bl	8022db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023568:	e70a      	b.n	8023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802356a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802356c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023570:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023572:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023576:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023578:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802357c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802357e:	141f      	asrs	r7, r3, #16
 8023580:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023582:	141b      	asrs	r3, r3, #16
 8023584:	fb01 3707 	mla	r7, r1, r7, r3
 8023588:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802358a:	fa1f fc82 	uxth.w	ip, r2
 802358e:	eb03 0a07 	add.w	sl, r3, r7
 8023592:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023596:	f813 9007 	ldrb.w	r9, [r3, r7]
 802359a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802359e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80235a2:	b29b      	uxth	r3, r3
 80235a4:	2d00      	cmp	r5, #0
 80235a6:	f000 80fe 	beq.w	80237a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80235aa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80235ae:	940c      	str	r4, [sp, #48]	; 0x30
 80235b0:	eb0a 0b01 	add.w	fp, sl, r1
 80235b4:	fa1f fa85 	uxth.w	sl, r5
 80235b8:	fb0a fc0c 	mul.w	ip, sl, ip
 80235bc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80235c0:	fa1f fa8a 	uxth.w	sl, sl
 80235c4:	eba0 000c 	sub.w	r0, r0, ip
 80235c8:	eba3 030a 	sub.w	r3, r3, sl
 80235cc:	b280      	uxth	r0, r0
 80235ce:	fb08 f000 	mul.w	r0, r8, r0
 80235d2:	b29b      	uxth	r3, r3
 80235d4:	fb09 0303 	mla	r3, r9, r3, r0
 80235d8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80235da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80235de:	940d      	str	r4, [sp, #52]	; 0x34
 80235e0:	fb0a 3300 	mla	r3, sl, r0, r3
 80235e4:	fb0c 3304 	mla	r3, ip, r4, r3
 80235e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80235ec:	2b00      	cmp	r3, #0
 80235ee:	f000 80cc 	beq.w	802378a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80235f2:	9808      	ldr	r0, [sp, #32]
 80235f4:	9c08      	ldr	r4, [sp, #32]
 80235f6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80235fa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80235fe:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023602:	f000 80d5 	beq.w	80237b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023606:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802360a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802360e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023612:	fb09 f707 	mul.w	r7, r9, r7
 8023616:	fb0a fc0c 	mul.w	ip, sl, ip
 802361a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802361e:	f107 0b20 	add.w	fp, r7, #32
 8023622:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023626:	44cc      	add	ip, r9
 8023628:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802362c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023630:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023634:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023638:	ea4c 0909 	orr.w	r9, ip, r9
 802363c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023640:	8847      	ldrh	r7, [r0, #2]
 8023642:	d019      	beq.n	8023678 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8023644:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023648:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802364c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023650:	fb08 f807 	mul.w	r8, r8, r7
 8023654:	fb0a fc0c 	mul.w	ip, sl, ip
 8023658:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802365c:	f108 0b20 	add.w	fp, r8, #32
 8023660:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023664:	44bc      	add	ip, r7
 8023666:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802366a:	0a3f      	lsrs	r7, r7, #8
 802366c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023670:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023674:	ea4c 0707 	orr.w	r7, ip, r7
 8023678:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802367c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023680:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023684:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023688:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802368c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023690:	ea4c 0909 	orr.w	r9, ip, r9
 8023694:	ea4a 0707 	orr.w	r7, sl, r7
 8023698:	2d00      	cmp	r5, #0
 802369a:	f000 808b 	beq.w	80237b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802369e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80236a2:	3901      	subs	r1, #1
 80236a4:	0049      	lsls	r1, r1, #1
 80236a6:	3102      	adds	r1, #2
 80236a8:	eb00 0c01 	add.w	ip, r0, r1
 80236ac:	5a41      	ldrh	r1, [r0, r1]
 80236ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 80236b0:	28ff      	cmp	r0, #255	; 0xff
 80236b2:	d019      	beq.n	80236e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80236b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80236b6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80236ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80236be:	fb04 fa01 	mul.w	sl, r4, r1
 80236c2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80236c6:	fb08 f800 	mul.w	r8, r8, r0
 80236ca:	f10a 0020 	add.w	r0, sl, #32
 80236ce:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80236d2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80236d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80236da:	4441      	add	r1, r8
 80236dc:	0a00      	lsrs	r0, r0, #8
 80236de:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80236e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236e6:	4301      	orrs	r1, r0
 80236e8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80236ea:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80236ee:	2cff      	cmp	r4, #255	; 0xff
 80236f0:	d01a      	beq.n	8023728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80236f2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80236f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236fa:	fb04 fa00 	mul.w	sl, r4, r0
 80236fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023702:	fb08 f80c 	mul.w	r8, r8, ip
 8023706:	f10a 0c20 	add.w	ip, sl, #32
 802370a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802370e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023712:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023716:	4440      	add	r0, r8
 8023718:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802371c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023720:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023724:	ea40 000c 	orr.w	r0, r0, ip
 8023728:	fb15 fc02 	smulbb	ip, r5, r2
 802372c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023730:	f1c5 0810 	rsb	r8, r5, #16
 8023734:	eba8 0802 	sub.w	r8, r8, r2
 8023738:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802373c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023740:	437a      	muls	r2, r7
 8023742:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023746:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802374a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802374e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023752:	fb09 2208 	mla	r2, r9, r8, r2
 8023756:	ea4a 0101 	orr.w	r1, sl, r1
 802375a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802375e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023762:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023766:	fb05 2201 	mla	r2, r5, r1, r2
 802376a:	ea4b 0000 	orr.w	r0, fp, r0
 802376e:	fb0c 2200 	mla	r2, ip, r0, r2
 8023772:	0d57      	lsrs	r7, r2, #21
 8023774:	0952      	lsrs	r2, r2, #5
 8023776:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802377a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802377e:	433a      	orrs	r2, r7
 8023780:	2bff      	cmp	r3, #255	; 0xff
 8023782:	b292      	uxth	r2, r2
 8023784:	d127      	bne.n	80237d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023786:	f8ae 2000 	strh.w	r2, [lr]
 802378a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802378c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802378e:	4413      	add	r3, r2
 8023790:	931d      	str	r3, [sp, #116]	; 0x74
 8023792:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023794:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023796:	441a      	add	r2, r3
 8023798:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802379a:	921e      	str	r2, [sp, #120]	; 0x78
 802379c:	3b01      	subs	r3, #1
 802379e:	f10e 0e02 	add.w	lr, lr, #2
 80237a2:	930f      	str	r3, [sp, #60]	; 0x3c
 80237a4:	e627      	b.n	80233f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80237a6:	fb08 f000 	mul.w	r0, r8, r0
 80237aa:	fb09 0303 	mla	r3, r9, r3, r0
 80237ae:	e71b      	b.n	80235e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80237b0:	46b9      	mov	r9, r7
 80237b2:	e743      	b.n	802363c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80237b4:	f1c2 0110 	rsb	r1, r2, #16
 80237b8:	437a      	muls	r2, r7
 80237ba:	fb09 2901 	mla	r9, r9, r1, r2
 80237be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80237c2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80237c6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80237ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80237ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80237d2:	4302      	orrs	r2, r0
 80237d4:	e7d4      	b.n	8023780 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80237d6:	f8be 7000 	ldrh.w	r7, [lr]
 80237da:	4c1c      	ldr	r4, [pc, #112]	; (802384c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80237dc:	43db      	mvns	r3, r3
 80237de:	1238      	asrs	r0, r7, #8
 80237e0:	fa5f fc83 	uxtb.w	ip, r3
 80237e4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80237e8:	10fd      	asrs	r5, r7, #3
 80237ea:	fb00 f00c 	mul.w	r0, r0, ip
 80237ee:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80237f2:	fb05 f10c 	mul.w	r1, r5, ip
 80237f6:	1c45      	adds	r5, r0, #1
 80237f8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80237fc:	1215      	asrs	r5, r2, #8
 80237fe:	f025 0507 	bic.w	r5, r5, #7
 8023802:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023806:	1c4d      	adds	r5, r1, #1
 8023808:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802380c:	10d1      	asrs	r1, r2, #3
 802380e:	f021 0103 	bic.w	r1, r1, #3
 8023812:	00fb      	lsls	r3, r7, #3
 8023814:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023818:	b2db      	uxtb	r3, r3
 802381a:	b2c0      	uxtb	r0, r0
 802381c:	00c9      	lsls	r1, r1, #3
 802381e:	fb03 f30c 	mul.w	r3, r3, ip
 8023822:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023826:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802382a:	4308      	orrs	r0, r1
 802382c:	1c59      	adds	r1, r3, #1
 802382e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023832:	00d2      	lsls	r2, r2, #3
 8023834:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023838:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802383c:	4318      	orrs	r0, r3
 802383e:	f8ae 0000 	strh.w	r0, [lr]
 8023842:	e7a2      	b.n	802378a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023844:	b013      	add	sp, #76	; 0x4c
 8023846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802384a:	bf00      	nop
 802384c:	fffff800 	.word	0xfffff800

08023850 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8023850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023854:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8023858:	fb05 4c03 	mla	ip, r5, r3, r4
 802385c:	2d00      	cmp	r5, #0
 802385e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8023862:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8023866:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802386a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802386e:	8808      	ldrh	r0, [r1, #0]
 8023870:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023874:	f2c0 80a7 	blt.w	80239c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023878:	45aa      	cmp	sl, r5
 802387a:	f340 80a4 	ble.w	80239c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802387e:	2c00      	cmp	r4, #0
 8023880:	f2c0 809f 	blt.w	80239c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023884:	42a3      	cmp	r3, r4
 8023886:	f340 809c 	ble.w	80239c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802388a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802388e:	1c62      	adds	r2, r4, #1
 8023890:	f100 809c 	bmi.w	80239cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023894:	4293      	cmp	r3, r2
 8023896:	f340 8099 	ble.w	80239cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802389a:	f1b9 0f00 	cmp.w	r9, #0
 802389e:	f000 8095 	beq.w	80239cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80238a2:	f8be c002 	ldrh.w	ip, [lr, #2]
 80238a6:	3501      	adds	r5, #1
 80238a8:	f100 8094 	bmi.w	80239d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80238ac:	45aa      	cmp	sl, r5
 80238ae:	f340 8091 	ble.w	80239d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80238b2:	2f00      	cmp	r7, #0
 80238b4:	f000 808e 	beq.w	80239d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80238b8:	2c00      	cmp	r4, #0
 80238ba:	f2c0 8089 	blt.w	80239d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80238be:	42a3      	cmp	r3, r4
 80238c0:	f340 8086 	ble.w	80239d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80238c4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80238c8:	3401      	adds	r4, #1
 80238ca:	f100 8086 	bmi.w	80239da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80238ce:	42a3      	cmp	r3, r4
 80238d0:	f340 8083 	ble.w	80239da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80238d4:	f1b9 0f00 	cmp.w	r9, #0
 80238d8:	d07f      	beq.n	80239da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80238da:	3301      	adds	r3, #1
 80238dc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80238e0:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80238e4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80238e8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80238ec:	fb19 fe07 	smulbb	lr, r9, r7
 80238f0:	ea44 0808 	orr.w	r8, r4, r8
 80238f4:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80238f8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80238fc:	f1c7 0210 	rsb	r2, r7, #16
 8023900:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023904:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023908:	ea44 0c0c 	orr.w	ip, r4, ip
 802390c:	eba2 0209 	sub.w	r2, r2, r9
 8023910:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023914:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023918:	fb04 f40c 	mul.w	r4, r4, ip
 802391c:	fb02 4808 	mla	r8, r2, r8, r4
 8023920:	041a      	lsls	r2, r3, #16
 8023922:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023926:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802392a:	4313      	orrs	r3, r2
 802392c:	042a      	lsls	r2, r5, #16
 802392e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023932:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023936:	fb0e 8303 	mla	r3, lr, r3, r8
 802393a:	432a      	orrs	r2, r5
 802393c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023940:	fb07 3202 	mla	r2, r7, r2, r3
 8023944:	0d53      	lsrs	r3, r2, #21
 8023946:	0952      	lsrs	r2, r2, #5
 8023948:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802394c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023950:	431a      	orrs	r2, r3
 8023952:	b293      	uxth	r3, r2
 8023954:	b2b4      	uxth	r4, r6
 8023956:	1202      	asrs	r2, r0, #8
 8023958:	43f6      	mvns	r6, r6
 802395a:	b2f6      	uxtb	r6, r6
 802395c:	121d      	asrs	r5, r3, #8
 802395e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023962:	fb12 f206 	smulbb	r2, r2, r6
 8023966:	10c7      	asrs	r7, r0, #3
 8023968:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802396c:	00c0      	lsls	r0, r0, #3
 802396e:	fb05 2504 	mla	r5, r5, r4, r2
 8023972:	b2c0      	uxtb	r0, r0
 8023974:	10da      	asrs	r2, r3, #3
 8023976:	00db      	lsls	r3, r3, #3
 8023978:	b2db      	uxtb	r3, r3
 802397a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802397e:	fb10 f006 	smulbb	r0, r0, r6
 8023982:	b2ad      	uxth	r5, r5
 8023984:	fb03 0004 	mla	r0, r3, r4, r0
 8023988:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802398c:	fb17 f706 	smulbb	r7, r7, r6
 8023990:	b280      	uxth	r0, r0
 8023992:	1c6b      	adds	r3, r5, #1
 8023994:	fb02 7204 	mla	r2, r2, r4, r7
 8023998:	b292      	uxth	r2, r2
 802399a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802399e:	1c43      	adds	r3, r0, #1
 80239a0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80239a4:	1c50      	adds	r0, r2, #1
 80239a6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80239aa:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80239ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80239b2:	0952      	lsrs	r2, r2, #5
 80239b4:	432b      	orrs	r3, r5
 80239b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80239ba:	4313      	orrs	r3, r2
 80239bc:	800b      	strh	r3, [r1, #0]
 80239be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80239c2:	4680      	mov	r8, r0
 80239c4:	e763      	b.n	802388e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80239c6:	4684      	mov	ip, r0
 80239c8:	4680      	mov	r8, r0
 80239ca:	e76c      	b.n	80238a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80239cc:	4684      	mov	ip, r0
 80239ce:	e76a      	b.n	80238a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80239d0:	4605      	mov	r5, r0
 80239d2:	e779      	b.n	80238c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80239d4:	4603      	mov	r3, r0
 80239d6:	4605      	mov	r5, r0
 80239d8:	e782      	b.n	80238e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80239da:	4603      	mov	r3, r0
 80239dc:	e780      	b.n	80238e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080239de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80239de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239e2:	b093      	sub	sp, #76	; 0x4c
 80239e4:	461d      	mov	r5, r3
 80239e6:	9210      	str	r2, [sp, #64]	; 0x40
 80239e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80239ea:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80239ee:	920b      	str	r2, [sp, #44]	; 0x2c
 80239f0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80239f4:	910a      	str	r1, [sp, #40]	; 0x28
 80239f6:	6859      	ldr	r1, [r3, #4]
 80239f8:	681b      	ldr	r3, [r3, #0]
 80239fa:	9011      	str	r0, [sp, #68]	; 0x44
 80239fc:	fb01 2707 	mla	r7, r1, r7, r2
 8023a00:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023a04:	9307      	str	r3, [sp, #28]
 8023a06:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a08:	681b      	ldr	r3, [r3, #0]
 8023a0a:	9309      	str	r3, [sp, #36]	; 0x24
 8023a0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a0e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023a12:	43db      	mvns	r3, r3
 8023a14:	b2db      	uxtb	r3, r3
 8023a16:	9308      	str	r3, [sp, #32]
 8023a18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a1a:	2b00      	cmp	r3, #0
 8023a1c:	dc03      	bgt.n	8023a26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023a1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023a20:	2b00      	cmp	r3, #0
 8023a22:	f340 8203 	ble.w	8023e2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023a26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023a2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023a30:	1e48      	subs	r0, r1, #1
 8023a32:	f102 3cff 	add.w	ip, r2, #4294967295
 8023a36:	2d00      	cmp	r5, #0
 8023a38:	f340 80da 	ble.w	8023bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023a3c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023a40:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023a44:	d406      	bmi.n	8023a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023a46:	4586      	cmp	lr, r0
 8023a48:	da04      	bge.n	8023a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023a4a:	2b00      	cmp	r3, #0
 8023a4c:	db02      	blt.n	8023a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023a4e:	4563      	cmp	r3, ip
 8023a50:	f2c0 80cf 	blt.w	8023bf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023a54:	f11e 0e01 	adds.w	lr, lr, #1
 8023a58:	f100 80c1 	bmi.w	8023bde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a5c:	4571      	cmp	r1, lr
 8023a5e:	f2c0 80be 	blt.w	8023bde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a62:	3301      	adds	r3, #1
 8023a64:	f100 80bb 	bmi.w	8023bde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a68:	429a      	cmp	r2, r3
 8023a6a:	f2c0 80b8 	blt.w	8023bde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a6e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023a72:	46a9      	mov	r9, r5
 8023a74:	f1b9 0f00 	cmp.w	r9, #0
 8023a78:	f340 80d8 	ble.w	8023c2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023a7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023a7e:	1421      	asrs	r1, r4, #16
 8023a80:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023a84:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023a88:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023a8c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023a90:	f100 8111 	bmi.w	8023cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a94:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023a98:	4551      	cmp	r1, sl
 8023a9a:	f280 810c 	bge.w	8023cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023a9e:	2800      	cmp	r0, #0
 8023aa0:	f2c0 8109 	blt.w	8023cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023aa4:	f103 3aff 	add.w	sl, r3, #4294967295
 8023aa8:	4550      	cmp	r0, sl
 8023aaa:	f280 8104 	bge.w	8023cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023aae:	fa0f f38e 	sxth.w	r3, lr
 8023ab2:	fb00 1103 	mla	r1, r0, r3, r1
 8023ab6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023ab8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023abc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023ac0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023ac4:	f1bc 0f00 	cmp.w	ip, #0
 8023ac8:	d007      	beq.n	8023ada <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023aca:	005b      	lsls	r3, r3, #1
 8023acc:	eb0a 0003 	add.w	r0, sl, r3
 8023ad0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023ad4:	930c      	str	r3, [sp, #48]	; 0x30
 8023ad6:	8843      	ldrh	r3, [r0, #2]
 8023ad8:	930d      	str	r3, [sp, #52]	; 0x34
 8023ada:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023ade:	fb12 f30c 	smulbb	r3, r2, ip
 8023ae2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023ae6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023aea:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023aee:	10db      	asrs	r3, r3, #3
 8023af0:	ea40 000e 	orr.w	r0, r0, lr
 8023af4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023af8:	f1cc 0e10 	rsb	lr, ip, #16
 8023afc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023b00:	ebae 0e02 	sub.w	lr, lr, r2
 8023b04:	ea4a 0101 	orr.w	r1, sl, r1
 8023b08:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023b0c:	4351      	muls	r1, r2
 8023b0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023b10:	9f08      	ldr	r7, [sp, #32]
 8023b12:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023b16:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023b1a:	0410      	lsls	r0, r2, #16
 8023b1c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023b20:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023b24:	4310      	orrs	r0, r2
 8023b26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023b28:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023b2a:	0412      	lsls	r2, r2, #16
 8023b2c:	fb03 e000 	mla	r0, r3, r0, lr
 8023b30:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023b34:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023b38:	ea42 020e 	orr.w	r2, r2, lr
 8023b3c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023b40:	fb03 0302 	mla	r3, r3, r2, r0
 8023b44:	0d5a      	lsrs	r2, r3, #21
 8023b46:	095b      	lsrs	r3, r3, #5
 8023b48:	f8b8 0000 	ldrh.w	r0, [r8]
 8023b4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b50:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023b54:	4313      	orrs	r3, r2
 8023b56:	b29b      	uxth	r3, r3
 8023b58:	1201      	asrs	r1, r0, #8
 8023b5a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023b5e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023b62:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023b66:	fb11 f107 	smulbb	r1, r1, r7
 8023b6a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023b6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023b72:	00c0      	lsls	r0, r0, #3
 8023b74:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023b78:	b2c0      	uxtb	r0, r0
 8023b7a:	10d9      	asrs	r1, r3, #3
 8023b7c:	00db      	lsls	r3, r3, #3
 8023b7e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023b82:	b2db      	uxtb	r3, r3
 8023b84:	fb10 f007 	smulbb	r0, r0, r7
 8023b88:	fa1f fc8c 	uxth.w	ip, ip
 8023b8c:	fb03 0302 	mla	r3, r3, r2, r0
 8023b90:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023b94:	fb1e fe07 	smulbb	lr, lr, r7
 8023b98:	fb01 e102 	mla	r1, r1, r2, lr
 8023b9c:	b29a      	uxth	r2, r3
 8023b9e:	f10c 0301 	add.w	r3, ip, #1
 8023ba2:	b289      	uxth	r1, r1
 8023ba4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023ba8:	1c53      	adds	r3, r2, #1
 8023baa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023bae:	1c4a      	adds	r2, r1, #1
 8023bb0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023bb4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023bb8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023bbc:	0949      	lsrs	r1, r1, #5
 8023bbe:	ea43 030c 	orr.w	r3, r3, ip
 8023bc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023bc6:	430b      	orrs	r3, r1
 8023bc8:	f8a8 3000 	strh.w	r3, [r8]
 8023bcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023bce:	441c      	add	r4, r3
 8023bd0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023bd2:	f108 0802 	add.w	r8, r8, #2
 8023bd6:	441e      	add	r6, r3
 8023bd8:	f109 39ff 	add.w	r9, r9, #4294967295
 8023bdc:	e74a      	b.n	8023a74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023bde:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023be0:	441c      	add	r4, r3
 8023be2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023be4:	441e      	add	r6, r3
 8023be6:	9b07      	ldr	r3, [sp, #28]
 8023be8:	3302      	adds	r3, #2
 8023bea:	3d01      	subs	r5, #1
 8023bec:	9307      	str	r3, [sp, #28]
 8023bee:	e722      	b.n	8023a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023bf0:	d022      	beq.n	8023c38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023bf2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023bf4:	1e6b      	subs	r3, r5, #1
 8023bf6:	fb00 4003 	mla	r0, r0, r3, r4
 8023bfa:	1400      	asrs	r0, r0, #16
 8023bfc:	f53f af37 	bmi.w	8023a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c00:	3901      	subs	r1, #1
 8023c02:	4288      	cmp	r0, r1
 8023c04:	f6bf af33 	bge.w	8023a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c08:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023c0a:	fb01 6303 	mla	r3, r1, r3, r6
 8023c0e:	141b      	asrs	r3, r3, #16
 8023c10:	f53f af2d 	bmi.w	8023a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c14:	3a01      	subs	r2, #1
 8023c16:	4293      	cmp	r3, r2
 8023c18:	f6bf af29 	bge.w	8023a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023c1c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023c20:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023c24:	46a8      	mov	r8, r5
 8023c26:	f1b8 0f00 	cmp.w	r8, #0
 8023c2a:	dc5e      	bgt.n	8023cea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023c2c:	9b07      	ldr	r3, [sp, #28]
 8023c2e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023c32:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023c36:	9307      	str	r3, [sp, #28]
 8023c38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023c3a:	2b00      	cmp	r3, #0
 8023c3c:	f340 80f6 	ble.w	8023e2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023c40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023c44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023c48:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023c4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023c52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023c56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023c5a:	eef0 6a62 	vmov.f32	s13, s5
 8023c5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023c62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023c6a:	ee16 4a90 	vmov	r4, s13
 8023c6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023c72:	eef0 6a43 	vmov.f32	s13, s6
 8023c76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023c7a:	ee12 2a90 	vmov	r2, s5
 8023c7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c86:	ee13 2a10 	vmov	r2, s6
 8023c8a:	931f      	str	r3, [sp, #124]	; 0x7c
 8023c8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c92:	9320      	str	r3, [sp, #128]	; 0x80
 8023c94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023c96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023c98:	3b01      	subs	r3, #1
 8023c9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c9e:	930a      	str	r3, [sp, #40]	; 0x28
 8023ca0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023ca2:	ee16 6a90 	vmov	r6, s13
 8023ca6:	bf14      	ite	ne
 8023ca8:	461d      	movne	r5, r3
 8023caa:	4615      	moveq	r5, r2
 8023cac:	eeb0 3a67 	vmov.f32	s6, s15
 8023cb0:	eef0 2a47 	vmov.f32	s5, s14
 8023cb4:	e6b0      	b.n	8023a18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023cb6:	f111 0a01 	adds.w	sl, r1, #1
 8023cba:	d487      	bmi.n	8023bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cbc:	45d6      	cmp	lr, sl
 8023cbe:	db85      	blt.n	8023bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cc0:	f110 0a01 	adds.w	sl, r0, #1
 8023cc4:	d482      	bmi.n	8023bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cc6:	4553      	cmp	r3, sl
 8023cc8:	db80      	blt.n	8023bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cca:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023ccc:	9101      	str	r1, [sp, #4]
 8023cce:	b21b      	sxth	r3, r3
 8023cd0:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023cd4:	9300      	str	r3, [sp, #0]
 8023cd6:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023cda:	fa0f f38e 	sxth.w	r3, lr
 8023cde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023ce0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023ce2:	4641      	mov	r1, r8
 8023ce4:	f7ff fdb4 	bl	8023850 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023ce8:	e770      	b.n	8023bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023cea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023cec:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023cee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023cf2:	1430      	asrs	r0, r6, #16
 8023cf4:	1423      	asrs	r3, r4, #16
 8023cf6:	fb01 3000 	mla	r0, r1, r0, r3
 8023cfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023cfc:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023d00:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023d04:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023d08:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023d0c:	8858      	ldrh	r0, [r3, #2]
 8023d0e:	f1be 0f00 	cmp.w	lr, #0
 8023d12:	d00b      	beq.n	8023d2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023d14:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023d18:	3901      	subs	r1, #1
 8023d1a:	0049      	lsls	r1, r1, #1
 8023d1c:	3102      	adds	r1, #2
 8023d1e:	eb03 0b01 	add.w	fp, r3, r1
 8023d22:	5a5b      	ldrh	r3, [r3, r1]
 8023d24:	930e      	str	r3, [sp, #56]	; 0x38
 8023d26:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023d2a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023d2c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023d30:	fb12 f30e 	smulbb	r3, r2, lr
 8023d34:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023d38:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023d3c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023d40:	10db      	asrs	r3, r3, #3
 8023d42:	ea41 010c 	orr.w	r1, r1, ip
 8023d46:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023d4a:	f1ce 0c10 	rsb	ip, lr, #16
 8023d4e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023d52:	ebac 0c02 	sub.w	ip, ip, r2
 8023d56:	ea4b 0000 	orr.w	r0, fp, r0
 8023d5a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023d5e:	4350      	muls	r0, r2
 8023d60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023d62:	9f08      	ldr	r7, [sp, #32]
 8023d64:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023d68:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023d6c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023d70:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023d74:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023d76:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023d78:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023d7c:	0412      	lsls	r2, r2, #16
 8023d7e:	ea4b 0101 	orr.w	r1, fp, r1
 8023d82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023d86:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023d8a:	fb03 c101 	mla	r1, r3, r1, ip
 8023d8e:	4302      	orrs	r2, r0
 8023d90:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023d94:	fb03 1202 	mla	r2, r3, r2, r1
 8023d98:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023d9c:	0952      	lsrs	r2, r2, #5
 8023d9e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023da2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023da6:	f8b9 2000 	ldrh.w	r2, [r9]
 8023daa:	ea4b 0303 	orr.w	r3, fp, r3
 8023dae:	b29b      	uxth	r3, r3
 8023db0:	1211      	asrs	r1, r2, #8
 8023db2:	1218      	asrs	r0, r3, #8
 8023db4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023db8:	fb11 f107 	smulbb	r1, r1, r7
 8023dbc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023dc0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023dc4:	00d2      	lsls	r2, r2, #3
 8023dc6:	fb00 100a 	mla	r0, r0, sl, r1
 8023dca:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023dce:	10d9      	asrs	r1, r3, #3
 8023dd0:	b2d2      	uxtb	r2, r2
 8023dd2:	00db      	lsls	r3, r3, #3
 8023dd4:	fb1c fc07 	smulbb	ip, ip, r7
 8023dd8:	fb12 f207 	smulbb	r2, r2, r7
 8023ddc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023de0:	b2db      	uxtb	r3, r3
 8023de2:	b280      	uxth	r0, r0
 8023de4:	fb01 c10a 	mla	r1, r1, sl, ip
 8023de8:	fb03 230a 	mla	r3, r3, sl, r2
 8023dec:	b29b      	uxth	r3, r3
 8023dee:	b289      	uxth	r1, r1
 8023df0:	1c42      	adds	r2, r0, #1
 8023df2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023df6:	f101 0c01 	add.w	ip, r1, #1
 8023dfa:	1c5a      	adds	r2, r3, #1
 8023dfc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023e00:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023e04:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023e06:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023e0a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023e0e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023e12:	4310      	orrs	r0, r2
 8023e14:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023e18:	441c      	add	r4, r3
 8023e1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e1c:	ea40 000c 	orr.w	r0, r0, ip
 8023e20:	f829 0b02 	strh.w	r0, [r9], #2
 8023e24:	441e      	add	r6, r3
 8023e26:	f108 38ff 	add.w	r8, r8, #4294967295
 8023e2a:	e6fc      	b.n	8023c26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023e2c:	b013      	add	sp, #76	; 0x4c
 8023e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023e32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023e32:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023e36:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023e3a:	fb0e 4703 	mla	r7, lr, r3, r4
 8023e3e:	f1be 0f00 	cmp.w	lr, #0
 8023e42:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023e46:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023e4a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023e4e:	8808      	ldrh	r0, [r1, #0]
 8023e50:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023e54:	db60      	blt.n	8023f18 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023e56:	45f1      	cmp	r9, lr
 8023e58:	dd5e      	ble.n	8023f18 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023e5a:	2c00      	cmp	r4, #0
 8023e5c:	db5a      	blt.n	8023f14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023e5e:	42a3      	cmp	r3, r4
 8023e60:	dd58      	ble.n	8023f14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023e62:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023e66:	1c62      	adds	r2, r4, #1
 8023e68:	d459      	bmi.n	8023f1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023e6a:	4293      	cmp	r3, r2
 8023e6c:	dd57      	ble.n	8023f1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023e6e:	2d00      	cmp	r5, #0
 8023e70:	d055      	beq.n	8023f1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023e72:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023e76:	f11e 0e01 	adds.w	lr, lr, #1
 8023e7a:	d454      	bmi.n	8023f26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023e7c:	45f1      	cmp	r9, lr
 8023e7e:	dd52      	ble.n	8023f26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023e80:	2e00      	cmp	r6, #0
 8023e82:	d050      	beq.n	8023f26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023e84:	2c00      	cmp	r4, #0
 8023e86:	db4c      	blt.n	8023f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023e88:	42a3      	cmp	r3, r4
 8023e8a:	dd4a      	ble.n	8023f22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023e8c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023e90:	3401      	adds	r4, #1
 8023e92:	d405      	bmi.n	8023ea0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e94:	42a3      	cmp	r3, r4
 8023e96:	dd03      	ble.n	8023ea0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e98:	b115      	cbz	r5, 8023ea0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023e9a:	3301      	adds	r3, #1
 8023e9c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023ea0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023ea4:	fb15 f406 	smulbb	r4, r5, r6
 8023ea8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023eac:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023eb0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023eb4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023eb8:	ea43 0c0c 	orr.w	ip, r3, ip
 8023ebc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023ec0:	f1c6 0310 	rsb	r3, r6, #16
 8023ec4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023ec8:	1b5b      	subs	r3, r3, r5
 8023eca:	ea4e 0707 	orr.w	r7, lr, r7
 8023ece:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023ed2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023ed6:	437d      	muls	r5, r7
 8023ed8:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023edc:	0403      	lsls	r3, r0, #16
 8023ede:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023ee2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023ee6:	4318      	orrs	r0, r3
 8023ee8:	0413      	lsls	r3, r2, #16
 8023eea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023eee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023ef2:	4313      	orrs	r3, r2
 8023ef4:	fb04 c000 	mla	r0, r4, r0, ip
 8023ef8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023efc:	fb06 0003 	mla	r0, r6, r3, r0
 8023f00:	0d43      	lsrs	r3, r0, #21
 8023f02:	0940      	lsrs	r0, r0, #5
 8023f04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f08:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f0c:	4318      	orrs	r0, r3
 8023f0e:	8008      	strh	r0, [r1, #0]
 8023f10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023f14:	4684      	mov	ip, r0
 8023f16:	e7a6      	b.n	8023e66 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023f18:	4607      	mov	r7, r0
 8023f1a:	4684      	mov	ip, r0
 8023f1c:	e7ab      	b.n	8023e76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023f1e:	4607      	mov	r7, r0
 8023f20:	e7a9      	b.n	8023e76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023f22:	4602      	mov	r2, r0
 8023f24:	e7b4      	b.n	8023e90 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023f26:	4602      	mov	r2, r0
 8023f28:	e7ba      	b.n	8023ea0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023f2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023f2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f2e:	b08f      	sub	sp, #60	; 0x3c
 8023f30:	461d      	mov	r5, r3
 8023f32:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023f34:	920c      	str	r2, [sp, #48]	; 0x30
 8023f36:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023f3a:	9107      	str	r1, [sp, #28]
 8023f3c:	6859      	ldr	r1, [r3, #4]
 8023f3e:	681b      	ldr	r3, [r3, #0]
 8023f40:	900d      	str	r0, [sp, #52]	; 0x34
 8023f42:	fb01 2707 	mla	r7, r1, r7, r2
 8023f46:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023f4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f4c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023f50:	f8d3 8000 	ldr.w	r8, [r3]
 8023f54:	9b07      	ldr	r3, [sp, #28]
 8023f56:	2b00      	cmp	r3, #0
 8023f58:	dc03      	bgt.n	8023f62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023f5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023f5c:	2b00      	cmp	r3, #0
 8023f5e:	f340 8181 	ble.w	8024264 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023f62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f6c:	1e48      	subs	r0, r1, #1
 8023f6e:	f102 3cff 	add.w	ip, r2, #4294967295
 8023f72:	2d00      	cmp	r5, #0
 8023f74:	f340 809b 	ble.w	80240ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023f78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023f7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023f80:	d406      	bmi.n	8023f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023f82:	4586      	cmp	lr, r0
 8023f84:	da04      	bge.n	8023f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023f86:	2b00      	cmp	r3, #0
 8023f88:	db02      	blt.n	8023f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023f8a:	4563      	cmp	r3, ip
 8023f8c:	f2c0 8090 	blt.w	80240b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023f90:	f11e 0e01 	adds.w	lr, lr, #1
 8023f94:	f100 8084 	bmi.w	80240a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f98:	4571      	cmp	r1, lr
 8023f9a:	f2c0 8081 	blt.w	80240a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023f9e:	3301      	adds	r3, #1
 8023fa0:	d47e      	bmi.n	80240a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023fa2:	429a      	cmp	r2, r3
 8023fa4:	db7c      	blt.n	80240a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023fa6:	46aa      	mov	sl, r5
 8023fa8:	46b9      	mov	r9, r7
 8023faa:	f1ba 0f00 	cmp.w	sl, #0
 8023fae:	f340 8099 	ble.w	80240e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023fb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fb4:	1421      	asrs	r1, r4, #16
 8023fb6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023fba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023fbe:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023fc2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023fc6:	f100 80d0 	bmi.w	802416a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fca:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023fce:	4559      	cmp	r1, fp
 8023fd0:	f280 80cb 	bge.w	802416a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fd4:	2800      	cmp	r0, #0
 8023fd6:	f2c0 80c8 	blt.w	802416a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fda:	f103 3bff 	add.w	fp, r3, #4294967295
 8023fde:	4558      	cmp	r0, fp
 8023fe0:	f280 80c3 	bge.w	802416a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023fe4:	fa0f fe8e 	sxth.w	lr, lr
 8023fe8:	fb00 110e 	mla	r1, r0, lr, r1
 8023fec:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023ff0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023ff4:	8841      	ldrh	r1, [r0, #2]
 8023ff6:	f1bc 0f00 	cmp.w	ip, #0
 8023ffa:	d00b      	beq.n	8024014 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023ffc:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8024000:	3b01      	subs	r3, #1
 8024002:	005b      	lsls	r3, r3, #1
 8024004:	3302      	adds	r3, #2
 8024006:	eb00 0e03 	add.w	lr, r0, r3
 802400a:	5ac3      	ldrh	r3, [r0, r3]
 802400c:	9308      	str	r3, [sp, #32]
 802400e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8024012:	9309      	str	r3, [sp, #36]	; 0x24
 8024014:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024018:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802401c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024020:	ea40 000b 	orr.w	r0, r0, fp
 8024024:	fb12 f30c 	smulbb	r3, r2, ip
 8024028:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802402c:	10db      	asrs	r3, r3, #3
 802402e:	f1cc 0e10 	rsb	lr, ip, #16
 8024032:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024036:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802403a:	ebae 0e02 	sub.w	lr, lr, r2
 802403e:	ea4b 0101 	orr.w	r1, fp, r1
 8024042:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024046:	4351      	muls	r1, r2
 8024048:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802404a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802404e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024052:	0410      	lsls	r0, r2, #16
 8024054:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024058:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802405c:	4310      	orrs	r0, r2
 802405e:	9a08      	ldr	r2, [sp, #32]
 8024060:	9908      	ldr	r1, [sp, #32]
 8024062:	0412      	lsls	r2, r2, #16
 8024064:	fb03 e000 	mla	r0, r3, r0, lr
 8024068:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802406c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024070:	ea42 020e 	orr.w	r2, r2, lr
 8024074:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024078:	fb03 0302 	mla	r3, r3, r2, r0
 802407c:	0d5a      	lsrs	r2, r3, #21
 802407e:	095b      	lsrs	r3, r3, #5
 8024080:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024084:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024088:	4313      	orrs	r3, r2
 802408a:	f8a9 3000 	strh.w	r3, [r9]
 802408e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024090:	441c      	add	r4, r3
 8024092:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024094:	f109 0902 	add.w	r9, r9, #2
 8024098:	441e      	add	r6, r3
 802409a:	f10a 3aff 	add.w	sl, sl, #4294967295
 802409e:	e784      	b.n	8023faa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80240a0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80240a2:	441c      	add	r4, r3
 80240a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80240a6:	3d01      	subs	r5, #1
 80240a8:	441e      	add	r6, r3
 80240aa:	3702      	adds	r7, #2
 80240ac:	e761      	b.n	8023f72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80240ae:	d01d      	beq.n	80240ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80240b0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80240b2:	1e6b      	subs	r3, r5, #1
 80240b4:	fb00 4003 	mla	r0, r0, r3, r4
 80240b8:	1400      	asrs	r0, r0, #16
 80240ba:	f53f af74 	bmi.w	8023fa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240be:	3901      	subs	r1, #1
 80240c0:	4288      	cmp	r0, r1
 80240c2:	f6bf af70 	bge.w	8023fa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240c6:	991c      	ldr	r1, [sp, #112]	; 0x70
 80240c8:	fb01 6303 	mla	r3, r1, r3, r6
 80240cc:	141b      	asrs	r3, r3, #16
 80240ce:	f53f af6a 	bmi.w	8023fa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240d2:	3a01      	subs	r2, #1
 80240d4:	4293      	cmp	r3, r2
 80240d6:	f6bf af66 	bge.w	8023fa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80240da:	46a9      	mov	r9, r5
 80240dc:	46ba      	mov	sl, r7
 80240de:	f1b9 0f00 	cmp.w	r9, #0
 80240e2:	dc5a      	bgt.n	802419a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80240e4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80240e8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80240ec:	9b07      	ldr	r3, [sp, #28]
 80240ee:	2b00      	cmp	r3, #0
 80240f0:	f340 80b8 	ble.w	8024264 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80240f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80240f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80240fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024100:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024102:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024106:	ee31 1a05 	vadd.f32	s2, s2, s10
 802410a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802410e:	eef0 6a62 	vmov.f32	s13, s5
 8024112:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024116:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802411a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802411e:	ee16 4a90 	vmov	r4, s13
 8024122:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024126:	eef0 6a43 	vmov.f32	s13, s6
 802412a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802412e:	ee12 2a90 	vmov	r2, s5
 8024132:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024136:	fb92 f3f3 	sdiv	r3, r2, r3
 802413a:	ee13 2a10 	vmov	r2, s6
 802413e:	931b      	str	r3, [sp, #108]	; 0x6c
 8024140:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024142:	fb92 f3f3 	sdiv	r3, r2, r3
 8024146:	931c      	str	r3, [sp, #112]	; 0x70
 8024148:	9b07      	ldr	r3, [sp, #28]
 802414a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802414c:	3b01      	subs	r3, #1
 802414e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024152:	9307      	str	r3, [sp, #28]
 8024154:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024156:	ee16 6a90 	vmov	r6, s13
 802415a:	bf14      	ite	ne
 802415c:	461d      	movne	r5, r3
 802415e:	4615      	moveq	r5, r2
 8024160:	eeb0 3a67 	vmov.f32	s6, s15
 8024164:	eef0 2a47 	vmov.f32	s5, s14
 8024168:	e6f4      	b.n	8023f54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802416a:	f111 0b01 	adds.w	fp, r1, #1
 802416e:	d48e      	bmi.n	802408e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024170:	45de      	cmp	lr, fp
 8024172:	db8c      	blt.n	802408e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024174:	f110 0b01 	adds.w	fp, r0, #1
 8024178:	d489      	bmi.n	802408e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802417a:	455b      	cmp	r3, fp
 802417c:	db87      	blt.n	802408e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802417e:	b21b      	sxth	r3, r3
 8024180:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024184:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024188:	9300      	str	r3, [sp, #0]
 802418a:	4642      	mov	r2, r8
 802418c:	fa0f f38e 	sxth.w	r3, lr
 8024190:	4649      	mov	r1, r9
 8024192:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024194:	f7ff fe4d 	bl	8023e32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024198:	e779      	b.n	802408e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802419a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802419c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80241a0:	1420      	asrs	r0, r4, #16
 80241a2:	1431      	asrs	r1, r6, #16
 80241a4:	fb03 0101 	mla	r1, r3, r1, r0
 80241a8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80241ac:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80241b0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80241b4:	8841      	ldrh	r1, [r0, #2]
 80241b6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80241ba:	f1be 0f00 	cmp.w	lr, #0
 80241be:	d00b      	beq.n	80241d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80241c0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80241c4:	3b01      	subs	r3, #1
 80241c6:	005b      	lsls	r3, r3, #1
 80241c8:	3302      	adds	r3, #2
 80241ca:	eb00 0b03 	add.w	fp, r0, r3
 80241ce:	5ac3      	ldrh	r3, [r0, r3]
 80241d0:	930a      	str	r3, [sp, #40]	; 0x28
 80241d2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80241d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80241d8:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80241dc:	fb12 f30e 	smulbb	r3, r2, lr
 80241e0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80241e4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80241e8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80241ec:	10db      	asrs	r3, r3, #3
 80241ee:	ea40 000c 	orr.w	r0, r0, ip
 80241f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80241f6:	f1ce 0c10 	rsb	ip, lr, #16
 80241fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80241fe:	ebac 0c02 	sub.w	ip, ip, r2
 8024202:	ea4b 0101 	orr.w	r1, fp, r1
 8024206:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802420a:	4351      	muls	r1, r2
 802420c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802420e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024212:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024216:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802421a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802421e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024220:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024222:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024226:	0412      	lsls	r2, r2, #16
 8024228:	ea4b 0000 	orr.w	r0, fp, r0
 802422c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024230:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024234:	fb03 c000 	mla	r0, r3, r0, ip
 8024238:	ea42 0b0b 	orr.w	fp, r2, fp
 802423c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024240:	fb03 000b 	mla	r0, r3, fp, r0
 8024244:	0d43      	lsrs	r3, r0, #21
 8024246:	0940      	lsrs	r0, r0, #5
 8024248:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802424c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024250:	4318      	orrs	r0, r3
 8024252:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024254:	f82a 0b02 	strh.w	r0, [sl], #2
 8024258:	441c      	add	r4, r3
 802425a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802425c:	f109 39ff 	add.w	r9, r9, #4294967295
 8024260:	441e      	add	r6, r3
 8024262:	e73c      	b.n	80240de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024264:	b00f      	add	sp, #60	; 0x3c
 8024266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802426a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802426a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802426e:	b085      	sub	sp, #20
 8024270:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024274:	9102      	str	r1, [sp, #8]
 8024276:	2c00      	cmp	r4, #0
 8024278:	fb04 7103 	mla	r1, r4, r3, r7
 802427c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024280:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024284:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024288:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802428c:	f2c0 811b 	blt.w	80244c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024290:	45a6      	cmp	lr, r4
 8024292:	f340 8118 	ble.w	80244c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024296:	2f00      	cmp	r7, #0
 8024298:	f2c0 8113 	blt.w	80244c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802429c:	42bb      	cmp	r3, r7
 802429e:	f340 8110 	ble.w	80244c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80242a2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80242a6:	1c7a      	adds	r2, r7, #1
 80242a8:	f100 8110 	bmi.w	80244cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80242ac:	4293      	cmp	r3, r2
 80242ae:	f340 810d 	ble.w	80244cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80242b2:	2e00      	cmp	r6, #0
 80242b4:	f000 810c 	beq.w	80244d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80242b8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80242bc:	3401      	adds	r4, #1
 80242be:	f100 810b 	bmi.w	80244d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80242c2:	45a6      	cmp	lr, r4
 80242c4:	f340 8108 	ble.w	80244d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80242c8:	2800      	cmp	r0, #0
 80242ca:	f000 8108 	beq.w	80244de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80242ce:	2f00      	cmp	r7, #0
 80242d0:	f2c0 8100 	blt.w	80244d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80242d4:	42bb      	cmp	r3, r7
 80242d6:	f340 80fd 	ble.w	80244d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80242da:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80242de:	3701      	adds	r7, #1
 80242e0:	f100 8100 	bmi.w	80244e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80242e4:	42bb      	cmp	r3, r7
 80242e6:	f340 80fd 	ble.w	80244e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80242ea:	2e00      	cmp	r6, #0
 80242ec:	f000 80fc 	beq.w	80244e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80242f0:	3301      	adds	r3, #1
 80242f2:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80242f6:	b2b6      	uxth	r6, r6
 80242f8:	b280      	uxth	r0, r0
 80242fa:	fb00 fe06 	mul.w	lr, r0, r6
 80242fe:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024302:	0136      	lsls	r6, r6, #4
 8024304:	eba6 070e 	sub.w	r7, r6, lr
 8024308:	b280      	uxth	r0, r0
 802430a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802430e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024312:	b2bf      	uxth	r7, r7
 8024314:	1a1b      	subs	r3, r3, r0
 8024316:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802431a:	b29b      	uxth	r3, r3
 802431c:	fb0a f607 	mul.w	r6, sl, r7
 8024320:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024324:	fb0b 6603 	mla	r6, fp, r3, r6
 8024328:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802432c:	fb00 6609 	mla	r6, r0, r9, r6
 8024330:	fb0e 6608 	mla	r6, lr, r8, r6
 8024334:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024338:	9600      	str	r6, [sp, #0]
 802433a:	2e00      	cmp	r6, #0
 802433c:	f000 80be 	beq.w	80244bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024340:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024344:	fb0b fc0c 	mul.w	ip, fp, ip
 8024348:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802434c:	fb0b f505 	mul.w	r5, fp, r5
 8024350:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024354:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024358:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802435c:	44dc      	add	ip, fp
 802435e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024362:	9501      	str	r5, [sp, #4]
 8024364:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024368:	9503      	str	r5, [sp, #12]
 802436a:	9d01      	ldr	r5, [sp, #4]
 802436c:	9e02      	ldr	r6, [sp, #8]
 802436e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024372:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024376:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802437a:	fb0a fc0c 	mul.w	ip, sl, ip
 802437e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024382:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024386:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802438a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802438e:	4465      	add	r5, ip
 8024390:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024394:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024398:	fb09 fc0c 	mul.w	ip, r9, ip
 802439c:	fb09 f904 	mul.w	r9, r9, r4
 80243a0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80243a4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80243a8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80243ac:	fb08 f404 	mul.w	r4, r8, r4
 80243b0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80243b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80243b8:	fb08 f802 	mul.w	r8, r8, r2
 80243bc:	fb0a fa01 	mul.w	sl, sl, r1
 80243c0:	0a22      	lsrs	r2, r4, #8
 80243c2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80243c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80243ca:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80243ce:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80243d2:	4414      	add	r4, r2
 80243d4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80243d8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80243dc:	0a2d      	lsrs	r5, r5, #8
 80243de:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80243e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80243e6:	9a03      	ldr	r2, [sp, #12]
 80243e8:	8836      	ldrh	r6, [r6, #0]
 80243ea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80243ee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80243f2:	437d      	muls	r5, r7
 80243f4:	4461      	add	r1, ip
 80243f6:	0a24      	lsrs	r4, r4, #8
 80243f8:	fb02 5503 	mla	r5, r2, r3, r5
 80243fc:	0a09      	lsrs	r1, r1, #8
 80243fe:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024402:	fb04 540e 	mla	r4, r4, lr, r5
 8024406:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802440a:	fb01 4100 	mla	r1, r1, r0, r4
 802440e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024412:	0a09      	lsrs	r1, r1, #8
 8024414:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024418:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802441c:	fb07 f70a 	mul.w	r7, r7, sl
 8024420:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024424:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024428:	fb03 7101 	mla	r1, r3, r1, r7
 802442c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024430:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024434:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024438:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802443c:	fb00 e101 	mla	r1, r0, r1, lr
 8024440:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024444:	9a00      	ldr	r2, [sp, #0]
 8024446:	b287      	uxth	r7, r0
 8024448:	437a      	muls	r2, r7
 802444a:	0a09      	lsrs	r1, r1, #8
 802444c:	1c53      	adds	r3, r2, #1
 802444e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024452:	4321      	orrs	r1, r4
 8024454:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024458:	1235      	asrs	r5, r6, #8
 802445a:	0c0a      	lsrs	r2, r1, #16
 802445c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024460:	b2db      	uxtb	r3, r3
 8024462:	fb12 f207 	smulbb	r2, r2, r7
 8024466:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802446a:	fb05 2503 	mla	r5, r5, r3, r2
 802446e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024472:	10f2      	asrs	r2, r6, #3
 8024474:	b2c8      	uxtb	r0, r1
 8024476:	00f6      	lsls	r6, r6, #3
 8024478:	fb14 f407 	smulbb	r4, r4, r7
 802447c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024480:	b2f6      	uxtb	r6, r6
 8024482:	fb10 f007 	smulbb	r0, r0, r7
 8024486:	fb02 4203 	mla	r2, r2, r3, r4
 802448a:	b2ad      	uxth	r5, r5
 802448c:	fb06 0303 	mla	r3, r6, r3, r0
 8024490:	b299      	uxth	r1, r3
 8024492:	b294      	uxth	r4, r2
 8024494:	1c6b      	adds	r3, r5, #1
 8024496:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802449a:	1c62      	adds	r2, r4, #1
 802449c:	1c4b      	adds	r3, r1, #1
 802449e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80244a2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80244a6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80244aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80244ae:	0952      	lsrs	r2, r2, #5
 80244b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244b4:	432b      	orrs	r3, r5
 80244b6:	4313      	orrs	r3, r2
 80244b8:	9a02      	ldr	r2, [sp, #8]
 80244ba:	8013      	strh	r3, [r2, #0]
 80244bc:	b005      	add	sp, #20
 80244be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244c2:	2500      	movs	r5, #0
 80244c4:	e6ef      	b.n	80242a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80244c6:	2100      	movs	r1, #0
 80244c8:	460d      	mov	r5, r1
 80244ca:	e6f7      	b.n	80242bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80244cc:	2100      	movs	r1, #0
 80244ce:	e6f5      	b.n	80242bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80244d0:	4631      	mov	r1, r6
 80244d2:	e6f3      	b.n	80242bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80244d4:	2400      	movs	r4, #0
 80244d6:	e702      	b.n	80242de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80244d8:	2200      	movs	r2, #0
 80244da:	4614      	mov	r4, r2
 80244dc:	e70b      	b.n	80242f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80244de:	4602      	mov	r2, r0
 80244e0:	4604      	mov	r4, r0
 80244e2:	e708      	b.n	80242f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80244e4:	2200      	movs	r2, #0
 80244e6:	e706      	b.n	80242f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80244e8:	4632      	mov	r2, r6
 80244ea:	e704      	b.n	80242f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080244ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80244ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244f0:	b09d      	sub	sp, #116	; 0x74
 80244f2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80244f6:	9219      	str	r2, [sp, #100]	; 0x64
 80244f8:	9307      	str	r3, [sp, #28]
 80244fa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80244fc:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024500:	931a      	str	r3, [sp, #104]	; 0x68
 8024502:	9117      	str	r1, [sp, #92]	; 0x5c
 8024504:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024508:	901b      	str	r0, [sp, #108]	; 0x6c
 802450a:	6850      	ldr	r0, [r2, #4]
 802450c:	6812      	ldr	r2, [r2, #0]
 802450e:	fb00 1303 	mla	r3, r0, r3, r1
 8024512:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024516:	930a      	str	r3, [sp, #40]	; 0x28
 8024518:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802451a:	681b      	ldr	r3, [r3, #0]
 802451c:	9310      	str	r3, [sp, #64]	; 0x40
 802451e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024522:	930b      	str	r3, [sp, #44]	; 0x2c
 8024524:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024526:	2b00      	cmp	r3, #0
 8024528:	dc03      	bgt.n	8024532 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802452a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802452c:	2b00      	cmp	r3, #0
 802452e:	f340 8375 	ble.w	8024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024532:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024534:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024538:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802453c:	1e48      	subs	r0, r1, #1
 802453e:	1e57      	subs	r7, r2, #1
 8024540:	9b07      	ldr	r3, [sp, #28]
 8024542:	2b00      	cmp	r3, #0
 8024544:	f340 818e 	ble.w	8024864 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024548:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802454c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024550:	d406      	bmi.n	8024560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024552:	4584      	cmp	ip, r0
 8024554:	da04      	bge.n	8024560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024556:	2b00      	cmp	r3, #0
 8024558:	db02      	blt.n	8024560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802455a:	42bb      	cmp	r3, r7
 802455c:	f2c0 8183 	blt.w	8024866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024560:	f11c 0c01 	adds.w	ip, ip, #1
 8024564:	f100 8173 	bmi.w	802484e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024568:	4561      	cmp	r1, ip
 802456a:	f2c0 8170 	blt.w	802484e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802456e:	3301      	adds	r3, #1
 8024570:	f100 816d 	bmi.w	802484e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024574:	429a      	cmp	r2, r3
 8024576:	f2c0 816a 	blt.w	802484e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802457a:	9b07      	ldr	r3, [sp, #28]
 802457c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802457e:	9318      	str	r3, [sp, #96]	; 0x60
 8024580:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024582:	2b00      	cmp	r3, #0
 8024584:	f340 818c 	ble.w	80248a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024588:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802458a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802458c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024590:	689b      	ldr	r3, [r3, #8]
 8024592:	1422      	asrs	r2, r4, #16
 8024594:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024598:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802459c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80245a0:	f100 81cd 	bmi.w	802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245a4:	f103 38ff 	add.w	r8, r3, #4294967295
 80245a8:	4542      	cmp	r2, r8
 80245aa:	f280 81c8 	bge.w	802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245ae:	f1bc 0f00 	cmp.w	ip, #0
 80245b2:	f2c0 81c4 	blt.w	802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245b6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80245ba:	45c4      	cmp	ip, r8
 80245bc:	f280 81bf 	bge.w	802493e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80245c0:	b21b      	sxth	r3, r3
 80245c2:	fb0c 2203 	mla	r2, ip, r3, r2
 80245c6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80245c8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80245cc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80245d0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80245d4:	2800      	cmp	r0, #0
 80245d6:	f000 81a9 	beq.w	802492c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80245da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80245de:	950c      	str	r5, [sp, #48]	; 0x30
 80245e0:	0e2d      	lsrs	r5, r5, #24
 80245e2:	9513      	str	r5, [sp, #76]	; 0x4c
 80245e4:	b181      	cbz	r1, 8024608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80245e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80245ea:	3b01      	subs	r3, #1
 80245ec:	009b      	lsls	r3, r3, #2
 80245ee:	3304      	adds	r3, #4
 80245f0:	eb08 0c03 	add.w	ip, r8, r3
 80245f4:	f858 3003 	ldr.w	r3, [r8, r3]
 80245f8:	9308      	str	r3, [sp, #32]
 80245fa:	0e1b      	lsrs	r3, r3, #24
 80245fc:	9311      	str	r3, [sp, #68]	; 0x44
 80245fe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024602:	930d      	str	r3, [sp, #52]	; 0x34
 8024604:	0e1b      	lsrs	r3, r3, #24
 8024606:	9314      	str	r3, [sp, #80]	; 0x50
 8024608:	b280      	uxth	r0, r0
 802460a:	b289      	uxth	r1, r1
 802460c:	fb00 f901 	mul.w	r9, r0, r1
 8024610:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024614:	0100      	lsls	r0, r0, #4
 8024616:	eba0 0809 	sub.w	r8, r0, r9
 802461a:	b289      	uxth	r1, r1
 802461c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024620:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024622:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024624:	fa1f f888 	uxth.w	r8, r8
 8024628:	1a5b      	subs	r3, r3, r1
 802462a:	b29b      	uxth	r3, r3
 802462c:	fb08 f000 	mul.w	r0, r8, r0
 8024630:	fb03 000e 	mla	r0, r3, lr, r0
 8024634:	fb01 0005 	mla	r0, r1, r5, r0
 8024638:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802463a:	fb09 0005 	mla	r0, r9, r5, r0
 802463e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024642:	2800      	cmp	r0, #0
 8024644:	f000 80fa 	beq.w	802483c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024648:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802464c:	d01b      	beq.n	8024686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802464e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024652:	fb0e fa0a 	mul.w	sl, lr, sl
 8024656:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802465a:	fb0e fe02 	mul.w	lr, lr, r2
 802465e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024662:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024666:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802466a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802466e:	4452      	add	r2, sl
 8024670:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024674:	0a12      	lsrs	r2, r2, #8
 8024676:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802467a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802467e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024682:	ea42 020c 	orr.w	r2, r2, ip
 8024686:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024688:	2dff      	cmp	r5, #255	; 0xff
 802468a:	d021      	beq.n	80246d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802468c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802468e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024692:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024694:	fb05 fb0b 	mul.w	fp, r5, fp
 8024698:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802469a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802469e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80246a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246a4:	fb05 fa0a 	mul.w	sl, r5, sl
 80246a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246b4:	44de      	add	lr, fp
 80246b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80246ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80246be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80246c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80246ca:	ea4e 050a 	orr.w	r5, lr, sl
 80246ce:	950c      	str	r5, [sp, #48]	; 0x30
 80246d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246d2:	2dff      	cmp	r5, #255	; 0xff
 80246d4:	d021      	beq.n	802471a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80246d6:	9d08      	ldr	r5, [sp, #32]
 80246d8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80246dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246de:	fb05 fb0b 	mul.w	fp, r5, fp
 80246e2:	9d08      	ldr	r5, [sp, #32]
 80246e4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80246e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80246ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80246ee:	fb05 fa0a 	mul.w	sl, r5, sl
 80246f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80246f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80246fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80246fe:	44de      	add	lr, fp
 8024700:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024704:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024708:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802470c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024710:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024714:	ea4e 050a 	orr.w	r5, lr, sl
 8024718:	9508      	str	r5, [sp, #32]
 802471a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802471c:	2dff      	cmp	r5, #255	; 0xff
 802471e:	d021      	beq.n	8024764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024720:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024722:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024726:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024728:	fb05 fb0b 	mul.w	fp, r5, fp
 802472c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802472e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024732:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024734:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024738:	fb05 fa0a 	mul.w	sl, r5, sl
 802473c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024740:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024744:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024748:	44de      	add	lr, fp
 802474a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802474e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024752:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024756:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802475a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802475e:	ea4e 050a 	orr.w	r5, lr, sl
 8024762:	950d      	str	r5, [sp, #52]	; 0x34
 8024764:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024766:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802476a:	9d08      	ldr	r5, [sp, #32]
 802476c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024770:	fb08 fc0c 	mul.w	ip, r8, ip
 8024774:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024778:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802477c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802477e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024782:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024786:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024788:	fb09 cc0e 	mla	ip, r9, lr, ip
 802478c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024790:	fb08 f80e 	mul.w	r8, r8, lr
 8024794:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024798:	fb03 8202 	mla	r2, r3, r2, r8
 802479c:	9b08      	ldr	r3, [sp, #32]
 802479e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80247a0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80247a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80247a6:	fb01 220a 	mla	r2, r1, sl, r2
 80247aa:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80247ae:	fb09 2901 	mla	r9, r9, r1, r2
 80247b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80247b4:	883b      	ldrh	r3, [r7, #0]
 80247b6:	4342      	muls	r2, r0
 80247b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80247c0:	1c50      	adds	r0, r2, #1
 80247c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247c6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80247ca:	ea4c 0c09 	orr.w	ip, ip, r9
 80247ce:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80247d2:	1219      	asrs	r1, r3, #8
 80247d4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80247d8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80247dc:	b2c0      	uxtb	r0, r0
 80247de:	fb12 f205 	smulbb	r2, r2, r5
 80247e2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80247e6:	fb01 2100 	mla	r1, r1, r0, r2
 80247ea:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80247ee:	10da      	asrs	r2, r3, #3
 80247f0:	fa5f fc8c 	uxtb.w	ip, ip
 80247f4:	00db      	lsls	r3, r3, #3
 80247f6:	fb1c fc05 	smulbb	ip, ip, r5
 80247fa:	b2db      	uxtb	r3, r3
 80247fc:	b289      	uxth	r1, r1
 80247fe:	fb03 c300 	mla	r3, r3, r0, ip
 8024802:	fa1f fc83 	uxth.w	ip, r3
 8024806:	1c4b      	adds	r3, r1, #1
 8024808:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802480c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024810:	fb1e fe05 	smulbb	lr, lr, r5
 8024814:	f10c 0301 	add.w	r3, ip, #1
 8024818:	fb02 e200 	mla	r2, r2, r0, lr
 802481c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024820:	b292      	uxth	r2, r2
 8024822:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024826:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802482a:	430b      	orrs	r3, r1
 802482c:	1c51      	adds	r1, r2, #1
 802482e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024832:	0952      	lsrs	r2, r2, #5
 8024834:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024838:	4313      	orrs	r3, r2
 802483a:	803b      	strh	r3, [r7, #0]
 802483c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802483e:	441c      	add	r4, r3
 8024840:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024842:	441e      	add	r6, r3
 8024844:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024846:	3b01      	subs	r3, #1
 8024848:	3702      	adds	r7, #2
 802484a:	9318      	str	r3, [sp, #96]	; 0x60
 802484c:	e698      	b.n	8024580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802484e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024850:	441c      	add	r4, r3
 8024852:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024854:	441e      	add	r6, r3
 8024856:	9b07      	ldr	r3, [sp, #28]
 8024858:	3b01      	subs	r3, #1
 802485a:	9307      	str	r3, [sp, #28]
 802485c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802485e:	3302      	adds	r3, #2
 8024860:	930a      	str	r3, [sp, #40]	; 0x28
 8024862:	e66d      	b.n	8024540 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024864:	d023      	beq.n	80248ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024866:	9b07      	ldr	r3, [sp, #28]
 8024868:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802486a:	3b01      	subs	r3, #1
 802486c:	fb00 4003 	mla	r0, r0, r3, r4
 8024870:	1400      	asrs	r0, r0, #16
 8024872:	f53f ae82 	bmi.w	802457a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024876:	3901      	subs	r1, #1
 8024878:	4288      	cmp	r0, r1
 802487a:	f6bf ae7e 	bge.w	802457a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802487e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8024880:	fb01 6303 	mla	r3, r1, r3, r6
 8024884:	141b      	asrs	r3, r3, #16
 8024886:	f53f ae78 	bmi.w	802457a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802488a:	3a01      	subs	r2, #1
 802488c:	4293      	cmp	r3, r2
 802488e:	f6bf ae74 	bge.w	802457a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024892:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024896:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802489a:	f1bb 0f00 	cmp.w	fp, #0
 802489e:	dc6c      	bgt.n	802497a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80248a0:	9b07      	ldr	r3, [sp, #28]
 80248a2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80248a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80248a8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80248ac:	930a      	str	r3, [sp, #40]	; 0x28
 80248ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80248b0:	2b00      	cmp	r3, #0
 80248b2:	f340 81b3 	ble.w	8024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80248b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80248ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80248be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80248c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80248c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80248c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80248cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80248d0:	eef0 6a62 	vmov.f32	s13, s5
 80248d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80248d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80248dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80248e0:	ee16 4a90 	vmov	r4, s13
 80248e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80248e8:	eef0 6a43 	vmov.f32	s13, s6
 80248ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80248f0:	ee12 2a90 	vmov	r2, s5
 80248f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80248f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80248fc:	ee13 2a10 	vmov	r2, s6
 8024900:	9329      	str	r3, [sp, #164]	; 0xa4
 8024902:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024904:	fb92 f3f3 	sdiv	r3, r2, r3
 8024908:	932a      	str	r3, [sp, #168]	; 0xa8
 802490a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802490c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802490e:	3b01      	subs	r3, #1
 8024910:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024914:	9317      	str	r3, [sp, #92]	; 0x5c
 8024916:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024918:	bf08      	it	eq
 802491a:	4613      	moveq	r3, r2
 802491c:	ee16 6a90 	vmov	r6, s13
 8024920:	9307      	str	r3, [sp, #28]
 8024922:	eeb0 3a67 	vmov.f32	s6, s15
 8024926:	eef0 2a47 	vmov.f32	s5, s14
 802492a:	e5fb      	b.n	8024524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802492c:	2900      	cmp	r1, #0
 802492e:	f43f ae6b 	beq.w	8024608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024932:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024936:	9308      	str	r3, [sp, #32]
 8024938:	0e1b      	lsrs	r3, r3, #24
 802493a:	9311      	str	r3, [sp, #68]	; 0x44
 802493c:	e664      	b.n	8024608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802493e:	f112 0801 	adds.w	r8, r2, #1
 8024942:	f53f af7b 	bmi.w	802483c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024946:	4543      	cmp	r3, r8
 8024948:	f6ff af78 	blt.w	802483c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802494c:	f11c 0801 	adds.w	r8, ip, #1
 8024950:	f53f af74 	bmi.w	802483c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024954:	45c6      	cmp	lr, r8
 8024956:	f6ff af71 	blt.w	802483c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802495a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802495c:	9201      	str	r2, [sp, #4]
 802495e:	fa0f f28e 	sxth.w	r2, lr
 8024962:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024966:	e9cd c002 	strd	ip, r0, [sp, #8]
 802496a:	9200      	str	r2, [sp, #0]
 802496c:	b21b      	sxth	r3, r3
 802496e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024970:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024972:	4639      	mov	r1, r7
 8024974:	f7ff fc79 	bl	802426a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024978:	e760      	b.n	802483c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802497a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802497c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802497e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024982:	1427      	asrs	r7, r4, #16
 8024984:	1433      	asrs	r3, r6, #16
 8024986:	fb01 7303 	mla	r3, r1, r3, r7
 802498a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802498e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024992:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024996:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802499a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802499e:	2a00      	cmp	r2, #0
 80249a0:	f000 8133 	beq.w	8024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80249a4:	687d      	ldr	r5, [r7, #4]
 80249a6:	950e      	str	r5, [sp, #56]	; 0x38
 80249a8:	0e2d      	lsrs	r5, r5, #24
 80249aa:	9515      	str	r5, [sp, #84]	; 0x54
 80249ac:	b178      	cbz	r0, 80249ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80249ae:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80249b2:	3901      	subs	r1, #1
 80249b4:	0089      	lsls	r1, r1, #2
 80249b6:	3104      	adds	r1, #4
 80249b8:	eb07 0e01 	add.w	lr, r7, r1
 80249bc:	5879      	ldr	r1, [r7, r1]
 80249be:	9109      	str	r1, [sp, #36]	; 0x24
 80249c0:	0e09      	lsrs	r1, r1, #24
 80249c2:	9112      	str	r1, [sp, #72]	; 0x48
 80249c4:	f8de 1004 	ldr.w	r1, [lr, #4]
 80249c8:	910f      	str	r1, [sp, #60]	; 0x3c
 80249ca:	0e09      	lsrs	r1, r1, #24
 80249cc:	9116      	str	r1, [sp, #88]	; 0x58
 80249ce:	b292      	uxth	r2, r2
 80249d0:	b280      	uxth	r0, r0
 80249d2:	fb02 f800 	mul.w	r8, r2, r0
 80249d6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80249da:	0112      	lsls	r2, r2, #4
 80249dc:	eba2 0e08 	sub.w	lr, r2, r8
 80249e0:	b280      	uxth	r0, r0
 80249e2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80249e6:	9915      	ldr	r1, [sp, #84]	; 0x54
 80249e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80249ea:	fa1f fe8e 	uxth.w	lr, lr
 80249ee:	1a12      	subs	r2, r2, r0
 80249f0:	b292      	uxth	r2, r2
 80249f2:	fb0e f101 	mul.w	r1, lr, r1
 80249f6:	fb02 110c 	mla	r1, r2, ip, r1
 80249fa:	fb00 1105 	mla	r1, r0, r5, r1
 80249fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024a00:	fb08 1105 	mla	r1, r8, r5, r1
 8024a04:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024a08:	2900      	cmp	r1, #0
 8024a0a:	f000 80f5 	beq.w	8024bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024a0e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024a12:	d019      	beq.n	8024a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024a14:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024a18:	fb0c fa0a 	mul.w	sl, ip, sl
 8024a1c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a20:	fb0c fc03 	mul.w	ip, ip, r3
 8024a24:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024a28:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a2c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a30:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024a34:	4453      	add	r3, sl
 8024a36:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024a3a:	0a1b      	lsrs	r3, r3, #8
 8024a3c:	0a3f      	lsrs	r7, r7, #8
 8024a3e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a42:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024a46:	433b      	orrs	r3, r7
 8024a48:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a4a:	2dff      	cmp	r5, #255	; 0xff
 8024a4c:	d020      	beq.n	8024a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024a4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a50:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a54:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a56:	436f      	muls	r7, r5
 8024a58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a5a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024a5e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a60:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a64:	fb05 fa0a 	mul.w	sl, r5, sl
 8024a68:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a70:	44bc      	add	ip, r7
 8024a72:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a76:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a8a:	ea4c 050a 	orr.w	r5, ip, sl
 8024a8e:	950e      	str	r5, [sp, #56]	; 0x38
 8024a90:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a92:	2dff      	cmp	r5, #255	; 0xff
 8024a94:	d020      	beq.n	8024ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024a96:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a98:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a9e:	436f      	muls	r7, r5
 8024aa0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024aa2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024aa6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024aa8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024aac:	fb05 fa0a 	mul.w	sl, r5, sl
 8024ab0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024ab4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ab8:	44bc      	add	ip, r7
 8024aba:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024abe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ac2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ac6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024aca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ace:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ad2:	ea4c 050a 	orr.w	r5, ip, sl
 8024ad6:	9509      	str	r5, [sp, #36]	; 0x24
 8024ad8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024ada:	2dff      	cmp	r5, #255	; 0xff
 8024adc:	d020      	beq.n	8024b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024ade:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024ae0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024ae4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024ae6:	436f      	muls	r7, r5
 8024ae8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024aea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024aee:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024af0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024af4:	fb05 fa0a 	mul.w	sl, r5, sl
 8024af8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024afc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b00:	44bc      	add	ip, r7
 8024b02:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b06:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b1a:	ea4c 050a 	orr.w	r5, ip, sl
 8024b1e:	950f      	str	r5, [sp, #60]	; 0x3c
 8024b20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b22:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b26:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024b28:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024b2c:	fb0e f707 	mul.w	r7, lr, r7
 8024b30:	fb02 770c 	mla	r7, r2, ip, r7
 8024b34:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b38:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024b3a:	fb00 770c 	mla	r7, r0, ip, r7
 8024b3e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b42:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b44:	fb08 770c 	mla	r7, r8, ip, r7
 8024b48:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024b4c:	fb0e fe0c 	mul.w	lr, lr, ip
 8024b50:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b54:	fb02 e303 	mla	r3, r2, r3, lr
 8024b58:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024b5a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024b5c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024b60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024b62:	fb00 330a 	mla	r3, r0, sl, r3
 8024b66:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024b6a:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024b6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024b70:	f8b9 0000 	ldrh.w	r0, [r9]
 8024b74:	4359      	muls	r1, r3
 8024b76:	0a3f      	lsrs	r7, r7, #8
 8024b78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b7c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024b80:	1c4b      	adds	r3, r1, #1
 8024b82:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024b86:	ea47 070c 	orr.w	r7, r7, ip
 8024b8a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024b8e:	1202      	asrs	r2, r0, #8
 8024b90:	0c3b      	lsrs	r3, r7, #16
 8024b92:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024b96:	b2c9      	uxtb	r1, r1
 8024b98:	fb13 f305 	smulbb	r3, r3, r5
 8024b9c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024ba0:	fb02 3201 	mla	r2, r2, r1, r3
 8024ba4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024ba8:	10c3      	asrs	r3, r0, #3
 8024baa:	b2ff      	uxtb	r7, r7
 8024bac:	00c0      	lsls	r0, r0, #3
 8024bae:	b2c0      	uxtb	r0, r0
 8024bb0:	fb17 f705 	smulbb	r7, r7, r5
 8024bb4:	fb00 7001 	mla	r0, r0, r1, r7
 8024bb8:	b292      	uxth	r2, r2
 8024bba:	fb1c fc05 	smulbb	ip, ip, r5
 8024bbe:	b280      	uxth	r0, r0
 8024bc0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024bc4:	fb03 c301 	mla	r3, r3, r1, ip
 8024bc8:	1c51      	adds	r1, r2, #1
 8024bca:	f100 0c01 	add.w	ip, r0, #1
 8024bce:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024bd2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024bd6:	b29b      	uxth	r3, r3
 8024bd8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024bdc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024be0:	ea4c 0202 	orr.w	r2, ip, r2
 8024be4:	f103 0c01 	add.w	ip, r3, #1
 8024be8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024bec:	095b      	lsrs	r3, r3, #5
 8024bee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024bf2:	431a      	orrs	r2, r3
 8024bf4:	f8a9 2000 	strh.w	r2, [r9]
 8024bf8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024bfa:	441c      	add	r4, r3
 8024bfc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024bfe:	f109 0902 	add.w	r9, r9, #2
 8024c02:	441e      	add	r6, r3
 8024c04:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024c08:	e647      	b.n	802489a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024c0a:	2800      	cmp	r0, #0
 8024c0c:	f43f aedf 	beq.w	80249ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024c10:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024c14:	9109      	str	r1, [sp, #36]	; 0x24
 8024c16:	0e09      	lsrs	r1, r1, #24
 8024c18:	9112      	str	r1, [sp, #72]	; 0x48
 8024c1a:	e6d8      	b.n	80249ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024c1c:	b01d      	add	sp, #116	; 0x74
 8024c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024c22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024c22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c26:	b085      	sub	sp, #20
 8024c28:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024c2c:	9102      	str	r1, [sp, #8]
 8024c2e:	2c00      	cmp	r4, #0
 8024c30:	fb04 7103 	mla	r1, r4, r3, r7
 8024c34:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024c38:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024c3c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024c40:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024c44:	f2c0 810c 	blt.w	8024e60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024c48:	45a6      	cmp	lr, r4
 8024c4a:	f340 8109 	ble.w	8024e60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024c4e:	2f00      	cmp	r7, #0
 8024c50:	f2c0 8104 	blt.w	8024e5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024c54:	42bb      	cmp	r3, r7
 8024c56:	f340 8101 	ble.w	8024e5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024c5a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024c5e:	1c7a      	adds	r2, r7, #1
 8024c60:	f100 8101 	bmi.w	8024e66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024c64:	4293      	cmp	r3, r2
 8024c66:	f340 80fe 	ble.w	8024e66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024c6a:	2e00      	cmp	r6, #0
 8024c6c:	f000 80fd 	beq.w	8024e6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024c70:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024c74:	3401      	adds	r4, #1
 8024c76:	f100 80fc 	bmi.w	8024e72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024c7a:	45a6      	cmp	lr, r4
 8024c7c:	f340 80f9 	ble.w	8024e72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024c80:	2800      	cmp	r0, #0
 8024c82:	f000 80f9 	beq.w	8024e78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024c86:	2f00      	cmp	r7, #0
 8024c88:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024c8c:	f2c0 80ef 	blt.w	8024e6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024c90:	42bb      	cmp	r3, r7
 8024c92:	f340 80ec 	ble.w	8024e6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024c96:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024c9a:	3701      	adds	r7, #1
 8024c9c:	f100 80ef 	bmi.w	8024e7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024ca0:	42bb      	cmp	r3, r7
 8024ca2:	f340 80ec 	ble.w	8024e7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024ca6:	2e00      	cmp	r6, #0
 8024ca8:	f000 80eb 	beq.w	8024e82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024cac:	6852      	ldr	r2, [r2, #4]
 8024cae:	b2b6      	uxth	r6, r6
 8024cb0:	b280      	uxth	r0, r0
 8024cb2:	fb00 fe06 	mul.w	lr, r0, r6
 8024cb6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024cba:	0136      	lsls	r6, r6, #4
 8024cbc:	eba6 070e 	sub.w	r7, r6, lr
 8024cc0:	b280      	uxth	r0, r0
 8024cc2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024cc6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024cca:	b2bf      	uxth	r7, r7
 8024ccc:	1a1b      	subs	r3, r3, r0
 8024cce:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024cd2:	b29b      	uxth	r3, r3
 8024cd4:	fb07 f60a 	mul.w	r6, r7, sl
 8024cd8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024cdc:	fb0b 6603 	mla	r6, fp, r3, r6
 8024ce0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024ce4:	fb00 6609 	mla	r6, r0, r9, r6
 8024ce8:	fb0e 6608 	mla	r6, lr, r8, r6
 8024cec:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024cf0:	9600      	str	r6, [sp, #0]
 8024cf2:	2e00      	cmp	r6, #0
 8024cf4:	f000 80af 	beq.w	8024e56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024cf8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024cfc:	fb0b fc0c 	mul.w	ip, fp, ip
 8024d00:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024d04:	fb0b f505 	mul.w	r5, fp, r5
 8024d08:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024d0c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024d10:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024d14:	44dc      	add	ip, fp
 8024d16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d1a:	9501      	str	r5, [sp, #4]
 8024d1c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024d20:	9503      	str	r5, [sp, #12]
 8024d22:	9d01      	ldr	r5, [sp, #4]
 8024d24:	9e02      	ldr	r6, [sp, #8]
 8024d26:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024d2a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024d2e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024d32:	fb0a fc0c 	mul.w	ip, sl, ip
 8024d36:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024d3a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024d3e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024d42:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024d46:	4465      	add	r5, ip
 8024d48:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024d4c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024d50:	fb09 fc0c 	mul.w	ip, r9, ip
 8024d54:	fb09 f904 	mul.w	r9, r9, r4
 8024d58:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024d5c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024d60:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024d64:	fb08 f404 	mul.w	r4, r8, r4
 8024d68:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024d6c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024d70:	fb08 f802 	mul.w	r8, r8, r2
 8024d74:	fb0a fa01 	mul.w	sl, sl, r1
 8024d78:	0a22      	lsrs	r2, r4, #8
 8024d7a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024d7e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024d82:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024d86:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024d8a:	4414      	add	r4, r2
 8024d8c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024d90:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024d94:	0a2d      	lsrs	r5, r5, #8
 8024d96:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024d9a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024d9e:	9a03      	ldr	r2, [sp, #12]
 8024da0:	8836      	ldrh	r6, [r6, #0]
 8024da2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024da6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024daa:	437d      	muls	r5, r7
 8024dac:	4461      	add	r1, ip
 8024dae:	0a24      	lsrs	r4, r4, #8
 8024db0:	fb02 5503 	mla	r5, r2, r3, r5
 8024db4:	0a09      	lsrs	r1, r1, #8
 8024db6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024dba:	fb04 540e 	mla	r4, r4, lr, r5
 8024dbe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024dc2:	fb01 4100 	mla	r1, r1, r0, r4
 8024dc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024dca:	0a09      	lsrs	r1, r1, #8
 8024dcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024dd0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024dd4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024dd8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024ddc:	fb07 f70a 	mul.w	r7, r7, sl
 8024de0:	fb03 7101 	mla	r1, r3, r1, r7
 8024de4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024de8:	9b00      	ldr	r3, [sp, #0]
 8024dea:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024dee:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024df2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024df6:	fb00 e101 	mla	r1, r0, r1, lr
 8024dfa:	43da      	mvns	r2, r3
 8024dfc:	1233      	asrs	r3, r6, #8
 8024dfe:	b2d2      	uxtb	r2, r2
 8024e00:	10f0      	asrs	r0, r6, #3
 8024e02:	0a09      	lsrs	r1, r1, #8
 8024e04:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024e08:	00f6      	lsls	r6, r6, #3
 8024e0a:	4353      	muls	r3, r2
 8024e0c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024e10:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024e14:	b2f6      	uxtb	r6, r6
 8024e16:	4321      	orrs	r1, r4
 8024e18:	4350      	muls	r0, r2
 8024e1a:	4356      	muls	r6, r2
 8024e1c:	1c5a      	adds	r2, r3, #1
 8024e1e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024e22:	0c0b      	lsrs	r3, r1, #16
 8024e24:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e28:	1c42      	adds	r2, r0, #1
 8024e2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024e2e:	0a0a      	lsrs	r2, r1, #8
 8024e30:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024e34:	021b      	lsls	r3, r3, #8
 8024e36:	00d2      	lsls	r2, r2, #3
 8024e38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024e3c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024e40:	4313      	orrs	r3, r2
 8024e42:	1c72      	adds	r2, r6, #1
 8024e44:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024e48:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024e4c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024e50:	4319      	orrs	r1, r3
 8024e52:	9b02      	ldr	r3, [sp, #8]
 8024e54:	8019      	strh	r1, [r3, #0]
 8024e56:	b005      	add	sp, #20
 8024e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024e5c:	2500      	movs	r5, #0
 8024e5e:	e6fe      	b.n	8024c5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024e60:	2100      	movs	r1, #0
 8024e62:	460d      	mov	r5, r1
 8024e64:	e706      	b.n	8024c74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024e66:	2100      	movs	r1, #0
 8024e68:	e704      	b.n	8024c74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024e6a:	4631      	mov	r1, r6
 8024e6c:	e702      	b.n	8024c74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024e6e:	2400      	movs	r4, #0
 8024e70:	e713      	b.n	8024c9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024e72:	2200      	movs	r2, #0
 8024e74:	4614      	mov	r4, r2
 8024e76:	e71a      	b.n	8024cae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024e78:	4602      	mov	r2, r0
 8024e7a:	4604      	mov	r4, r0
 8024e7c:	e717      	b.n	8024cae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024e7e:	2200      	movs	r2, #0
 8024e80:	e715      	b.n	8024cae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024e82:	4632      	mov	r2, r6
 8024e84:	e713      	b.n	8024cae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e8c:	b09b      	sub	sp, #108	; 0x6c
 8024e8e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024e92:	9218      	str	r2, [sp, #96]	; 0x60
 8024e94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024e96:	9116      	str	r1, [sp, #88]	; 0x58
 8024e98:	9307      	str	r3, [sp, #28]
 8024e9a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024e9e:	9019      	str	r0, [sp, #100]	; 0x64
 8024ea0:	6850      	ldr	r0, [r2, #4]
 8024ea2:	6812      	ldr	r2, [r2, #0]
 8024ea4:	fb00 1303 	mla	r3, r0, r3, r1
 8024ea8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024eac:	930a      	str	r3, [sp, #40]	; 0x28
 8024eae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024eb0:	681b      	ldr	r3, [r3, #0]
 8024eb2:	930f      	str	r3, [sp, #60]	; 0x3c
 8024eb4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024eb6:	2b00      	cmp	r3, #0
 8024eb8:	dc03      	bgt.n	8024ec2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024eba:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024ebc:	2b00      	cmp	r3, #0
 8024ebe:	f340 8386 	ble.w	80255ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024ec2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024ec4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024ec8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024ecc:	1e48      	subs	r0, r1, #1
 8024ece:	1e57      	subs	r7, r2, #1
 8024ed0:	9b07      	ldr	r3, [sp, #28]
 8024ed2:	2b00      	cmp	r3, #0
 8024ed4:	f340 8166 	ble.w	80251a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024ed8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024edc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024ee0:	d406      	bmi.n	8024ef0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024ee2:	4584      	cmp	ip, r0
 8024ee4:	da04      	bge.n	8024ef0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024ee6:	2b00      	cmp	r3, #0
 8024ee8:	db02      	blt.n	8024ef0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024eea:	42bb      	cmp	r3, r7
 8024eec:	f2c0 815b 	blt.w	80251a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024ef0:	f11c 0c01 	adds.w	ip, ip, #1
 8024ef4:	f100 814b 	bmi.w	802518e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024ef8:	4561      	cmp	r1, ip
 8024efa:	f2c0 8148 	blt.w	802518e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024efe:	3301      	adds	r3, #1
 8024f00:	f100 8145 	bmi.w	802518e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f04:	429a      	cmp	r2, r3
 8024f06:	f2c0 8142 	blt.w	802518e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024f0a:	9b07      	ldr	r3, [sp, #28]
 8024f0c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024f0e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024f10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024f12:	2b00      	cmp	r3, #0
 8024f14:	f340 8165 	ble.w	80251e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024f18:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024f1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f1c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024f20:	689b      	ldr	r3, [r3, #8]
 8024f22:	1422      	asrs	r2, r4, #16
 8024f24:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024f28:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024f2c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024f30:	f100 81d5 	bmi.w	80252de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f34:	f103 38ff 	add.w	r8, r3, #4294967295
 8024f38:	4542      	cmp	r2, r8
 8024f3a:	f280 81d0 	bge.w	80252de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f3e:	f1bc 0f00 	cmp.w	ip, #0
 8024f42:	f2c0 81cc 	blt.w	80252de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f46:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024f4a:	45c4      	cmp	ip, r8
 8024f4c:	f280 81c7 	bge.w	80252de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024f50:	b21b      	sxth	r3, r3
 8024f52:	fb0c 2203 	mla	r2, ip, r3, r2
 8024f56:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024f58:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024f5c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024f60:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024f64:	2900      	cmp	r1, #0
 8024f66:	f000 8182 	beq.w	802526e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024f6a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024f6e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024f70:	0e2d      	lsrs	r5, r5, #24
 8024f72:	9512      	str	r5, [sp, #72]	; 0x48
 8024f74:	b180      	cbz	r0, 8024f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024f76:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024f7a:	3b01      	subs	r3, #1
 8024f7c:	009b      	lsls	r3, r3, #2
 8024f7e:	3304      	adds	r3, #4
 8024f80:	eb08 0c03 	add.w	ip, r8, r3
 8024f84:	f858 3003 	ldr.w	r3, [r8, r3]
 8024f88:	9308      	str	r3, [sp, #32]
 8024f8a:	0e1b      	lsrs	r3, r3, #24
 8024f8c:	9310      	str	r3, [sp, #64]	; 0x40
 8024f8e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024f92:	930c      	str	r3, [sp, #48]	; 0x30
 8024f94:	0e1b      	lsrs	r3, r3, #24
 8024f96:	9313      	str	r3, [sp, #76]	; 0x4c
 8024f98:	b289      	uxth	r1, r1
 8024f9a:	b280      	uxth	r0, r0
 8024f9c:	fb01 f900 	mul.w	r9, r1, r0
 8024fa0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024fa4:	0109      	lsls	r1, r1, #4
 8024fa6:	eba1 0809 	sub.w	r8, r1, r9
 8024faa:	b280      	uxth	r0, r0
 8024fac:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024fb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024fb2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024fb4:	fa1f f888 	uxth.w	r8, r8
 8024fb8:	1a09      	subs	r1, r1, r0
 8024fba:	b289      	uxth	r1, r1
 8024fbc:	fb08 f303 	mul.w	r3, r8, r3
 8024fc0:	fb01 330e 	mla	r3, r1, lr, r3
 8024fc4:	fb00 3305 	mla	r3, r0, r5, r3
 8024fc8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024fca:	fb09 3305 	mla	r3, r9, r5, r3
 8024fce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024fd2:	2b00      	cmp	r3, #0
 8024fd4:	f000 80d2 	beq.w	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024fd8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024fdc:	d01b      	beq.n	8025016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024fde:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024fe2:	fb0e fa0a 	mul.w	sl, lr, sl
 8024fe6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024fea:	fb0e fe02 	mul.w	lr, lr, r2
 8024fee:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024ff2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024ff6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024ffa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024ffe:	4452      	add	r2, sl
 8025000:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025004:	0a12      	lsrs	r2, r2, #8
 8025006:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802500a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802500e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025012:	ea42 020c 	orr.w	r2, r2, ip
 8025016:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025018:	2dff      	cmp	r5, #255	; 0xff
 802501a:	d021      	beq.n	8025060 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802501c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802501e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025022:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025024:	fb05 fb0b 	mul.w	fp, r5, fp
 8025028:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802502a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802502e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025030:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025034:	fb05 fa0a 	mul.w	sl, r5, sl
 8025038:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802503c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025040:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025044:	44de      	add	lr, fp
 8025046:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802504a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802504e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025052:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025056:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802505a:	ea4e 050a 	orr.w	r5, lr, sl
 802505e:	950b      	str	r5, [sp, #44]	; 0x2c
 8025060:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025062:	2dff      	cmp	r5, #255	; 0xff
 8025064:	d021      	beq.n	80250aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025066:	9d08      	ldr	r5, [sp, #32]
 8025068:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802506c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802506e:	fb05 fb0b 	mul.w	fp, r5, fp
 8025072:	9d08      	ldr	r5, [sp, #32]
 8025074:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025078:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802507a:	fb05 fa0e 	mul.w	sl, r5, lr
 802507e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025082:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025086:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802508a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802508e:	44de      	add	lr, fp
 8025090:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025094:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025098:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802509c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250a4:	ea4e 050a 	orr.w	r5, lr, sl
 80250a8:	9508      	str	r5, [sp, #32]
 80250aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80250ac:	2dff      	cmp	r5, #255	; 0xff
 80250ae:	d021      	beq.n	80250f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80250b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80250b2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80250b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80250b8:	fb05 fb0b 	mul.w	fp, r5, fp
 80250bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80250be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80250c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80250c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80250c8:	fb05 fa0a 	mul.w	sl, r5, sl
 80250cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80250d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80250d8:	44de      	add	lr, fp
 80250da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80250de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80250e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80250e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80250ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80250ee:	ea4e 050a 	orr.w	r5, lr, sl
 80250f2:	950c      	str	r5, [sp, #48]	; 0x30
 80250f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80250f6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80250fa:	9d08      	ldr	r5, [sp, #32]
 80250fc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025100:	fb08 fc0c 	mul.w	ip, r8, ip
 8025104:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025108:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802510c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802510e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025112:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025116:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025118:	fb09 cc0e 	mla	ip, r9, lr, ip
 802511c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025120:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025124:	fb08 f80e 	mul.w	r8, r8, lr
 8025128:	fb01 8202 	mla	r2, r1, r2, r8
 802512c:	9908      	ldr	r1, [sp, #32]
 802512e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025132:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025134:	fb00 220a 	mla	r2, r0, sl, r2
 8025138:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802513c:	fb09 2900 	mla	r9, r9, r0, r2
 8025140:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025144:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025148:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802514c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025150:	ea4c 0c09 	orr.w	ip, ip, r9
 8025154:	2bff      	cmp	r3, #255	; 0xff
 8025156:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802515a:	f040 8091 	bne.w	8025280 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802515e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025162:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025166:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802516a:	f022 0207 	bic.w	r2, r2, #7
 802516e:	431a      	orrs	r2, r3
 8025170:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025174:	ea4c 0c02 	orr.w	ip, ip, r2
 8025178:	f8a7 c000 	strh.w	ip, [r7]
 802517c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802517e:	441c      	add	r4, r3
 8025180:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025182:	441e      	add	r6, r3
 8025184:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025186:	3b01      	subs	r3, #1
 8025188:	3702      	adds	r7, #2
 802518a:	9317      	str	r3, [sp, #92]	; 0x5c
 802518c:	e6c0      	b.n	8024f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802518e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025190:	441c      	add	r4, r3
 8025192:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025194:	441e      	add	r6, r3
 8025196:	9b07      	ldr	r3, [sp, #28]
 8025198:	3b01      	subs	r3, #1
 802519a:	9307      	str	r3, [sp, #28]
 802519c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802519e:	3302      	adds	r3, #2
 80251a0:	930a      	str	r3, [sp, #40]	; 0x28
 80251a2:	e695      	b.n	8024ed0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80251a4:	d024      	beq.n	80251f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80251a6:	9b07      	ldr	r3, [sp, #28]
 80251a8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80251aa:	3b01      	subs	r3, #1
 80251ac:	fb00 4003 	mla	r0, r0, r3, r4
 80251b0:	1400      	asrs	r0, r0, #16
 80251b2:	f53f aeaa 	bmi.w	8024f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251b6:	3901      	subs	r1, #1
 80251b8:	4288      	cmp	r0, r1
 80251ba:	f6bf aea6 	bge.w	8024f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251be:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80251c0:	fb01 6303 	mla	r3, r1, r3, r6
 80251c4:	141b      	asrs	r3, r3, #16
 80251c6:	f53f aea0 	bmi.w	8024f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251ca:	3a01      	subs	r2, #1
 80251cc:	4293      	cmp	r3, r2
 80251ce:	f6bf ae9c 	bge.w	8024f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80251d2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80251d6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80251da:	f1bb 0f00 	cmp.w	fp, #0
 80251de:	f300 809a 	bgt.w	8025316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80251e2:	9b07      	ldr	r3, [sp, #28]
 80251e4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80251e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80251ea:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80251ee:	930a      	str	r3, [sp, #40]	; 0x28
 80251f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80251f2:	2b00      	cmp	r3, #0
 80251f4:	f340 81eb 	ble.w	80255ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80251f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80251fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025200:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025204:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025206:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802520a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802520e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025212:	eef0 6a62 	vmov.f32	s13, s5
 8025216:	ee61 7a27 	vmul.f32	s15, s2, s15
 802521a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802521e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025222:	ee16 4a90 	vmov	r4, s13
 8025226:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802522a:	eef0 6a43 	vmov.f32	s13, s6
 802522e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025232:	ee12 2a90 	vmov	r2, s5
 8025236:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802523a:	fb92 f3f3 	sdiv	r3, r2, r3
 802523e:	ee13 2a10 	vmov	r2, s6
 8025242:	9327      	str	r3, [sp, #156]	; 0x9c
 8025244:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025246:	fb92 f3f3 	sdiv	r3, r2, r3
 802524a:	9328      	str	r3, [sp, #160]	; 0xa0
 802524c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802524e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025250:	3b01      	subs	r3, #1
 8025252:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025256:	9316      	str	r3, [sp, #88]	; 0x58
 8025258:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802525a:	bf08      	it	eq
 802525c:	4613      	moveq	r3, r2
 802525e:	ee16 6a90 	vmov	r6, s13
 8025262:	9307      	str	r3, [sp, #28]
 8025264:	eeb0 3a67 	vmov.f32	s6, s15
 8025268:	eef0 2a47 	vmov.f32	s5, s14
 802526c:	e622      	b.n	8024eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802526e:	2800      	cmp	r0, #0
 8025270:	f43f ae92 	beq.w	8024f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025274:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025278:	9308      	str	r3, [sp, #32]
 802527a:	0e1b      	lsrs	r3, r3, #24
 802527c:	9310      	str	r3, [sp, #64]	; 0x40
 802527e:	e68b      	b.n	8024f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025280:	8839      	ldrh	r1, [r7, #0]
 8025282:	4dd4      	ldr	r5, [pc, #848]	; (80255d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025284:	43db      	mvns	r3, r3
 8025286:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802528a:	fa5f f883 	uxtb.w	r8, r3
 802528e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025292:	fb0e fe08 	mul.w	lr, lr, r8
 8025296:	10c8      	asrs	r0, r1, #3
 8025298:	00cb      	lsls	r3, r1, #3
 802529a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802529e:	f10e 0101 	add.w	r1, lr, #1
 80252a2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80252a6:	fb00 f008 	mul.w	r0, r0, r8
 80252aa:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80252ae:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80252b2:	f100 0e01 	add.w	lr, r0, #1
 80252b6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80252ba:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80252be:	b2db      	uxtb	r3, r3
 80252c0:	b2c9      	uxtb	r1, r1
 80252c2:	00d2      	lsls	r2, r2, #3
 80252c4:	fb03 f308 	mul.w	r3, r3, r8
 80252c8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80252cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80252d0:	430a      	orrs	r2, r1
 80252d2:	1c59      	adds	r1, r3, #1
 80252d4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80252d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80252dc:	e748      	b.n	8025170 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80252de:	f112 0801 	adds.w	r8, r2, #1
 80252e2:	f53f af4b 	bmi.w	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252e6:	4543      	cmp	r3, r8
 80252e8:	f6ff af48 	blt.w	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252ec:	f11c 0801 	adds.w	r8, ip, #1
 80252f0:	f53f af44 	bmi.w	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252f4:	45c6      	cmp	lr, r8
 80252f6:	f6ff af41 	blt.w	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80252fa:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80252fe:	fa0f f28e 	sxth.w	r2, lr
 8025302:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025306:	9200      	str	r2, [sp, #0]
 8025308:	b21b      	sxth	r3, r3
 802530a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802530c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802530e:	4639      	mov	r1, r7
 8025310:	f7ff fc87 	bl	8024c22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025314:	e732      	b.n	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025316:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025318:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802531a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802531e:	1421      	asrs	r1, r4, #16
 8025320:	1433      	asrs	r3, r6, #16
 8025322:	fb07 1303 	mla	r3, r7, r3, r1
 8025326:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025328:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802532c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025330:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025334:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025338:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802533c:	2a00      	cmp	r2, #0
 802533e:	f000 8107 	beq.w	8025550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025342:	684d      	ldr	r5, [r1, #4]
 8025344:	950d      	str	r5, [sp, #52]	; 0x34
 8025346:	0e2d      	lsrs	r5, r5, #24
 8025348:	9514      	str	r5, [sp, #80]	; 0x50
 802534a:	b178      	cbz	r0, 802536c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802534c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025350:	3f01      	subs	r7, #1
 8025352:	00bf      	lsls	r7, r7, #2
 8025354:	3704      	adds	r7, #4
 8025356:	eb01 0e07 	add.w	lr, r1, r7
 802535a:	59c9      	ldr	r1, [r1, r7]
 802535c:	9109      	str	r1, [sp, #36]	; 0x24
 802535e:	0e09      	lsrs	r1, r1, #24
 8025360:	9111      	str	r1, [sp, #68]	; 0x44
 8025362:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025366:	910e      	str	r1, [sp, #56]	; 0x38
 8025368:	0e09      	lsrs	r1, r1, #24
 802536a:	9115      	str	r1, [sp, #84]	; 0x54
 802536c:	b292      	uxth	r2, r2
 802536e:	b280      	uxth	r0, r0
 8025370:	fb02 f900 	mul.w	r9, r2, r0
 8025374:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025378:	0112      	lsls	r2, r2, #4
 802537a:	eba2 0e09 	sub.w	lr, r2, r9
 802537e:	b280      	uxth	r0, r0
 8025380:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025384:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025386:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025388:	fa1f fe8e 	uxth.w	lr, lr
 802538c:	1a09      	subs	r1, r1, r0
 802538e:	b289      	uxth	r1, r1
 8025390:	fb0e f202 	mul.w	r2, lr, r2
 8025394:	fb01 220c 	mla	r2, r1, ip, r2
 8025398:	fb00 2205 	mla	r2, r0, r5, r2
 802539c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802539e:	fb09 2205 	mla	r2, r9, r5, r2
 80253a2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80253a6:	2a00      	cmp	r2, #0
 80253a8:	f000 80c9 	beq.w	802553e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80253ac:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80253b0:	d019      	beq.n	80253e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80253b2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80253b6:	fb0c fa0a 	mul.w	sl, ip, sl
 80253ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80253be:	fb0c fc03 	mul.w	ip, ip, r3
 80253c2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80253c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80253ca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80253ce:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80253d2:	4453      	add	r3, sl
 80253d4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80253d8:	0a1b      	lsrs	r3, r3, #8
 80253da:	0a3f      	lsrs	r7, r7, #8
 80253dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80253e0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80253e4:	433b      	orrs	r3, r7
 80253e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80253e8:	2dff      	cmp	r5, #255	; 0xff
 80253ea:	d020      	beq.n	802542e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80253ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80253ee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80253f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80253f4:	436f      	muls	r7, r5
 80253f6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80253f8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80253fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80253fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025402:	fb05 fa0a 	mul.w	sl, r5, sl
 8025406:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802540a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802540e:	44bc      	add	ip, r7
 8025410:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025414:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025418:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802541c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025420:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025424:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025428:	ea4c 050a 	orr.w	r5, ip, sl
 802542c:	950d      	str	r5, [sp, #52]	; 0x34
 802542e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025430:	2dff      	cmp	r5, #255	; 0xff
 8025432:	d020      	beq.n	8025476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025434:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025436:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802543a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802543c:	436f      	muls	r7, r5
 802543e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025440:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025444:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025446:	fb05 fa0c 	mul.w	sl, r5, ip
 802544a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802544e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025452:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025456:	44bc      	add	ip, r7
 8025458:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802545c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025460:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025464:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025468:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802546c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025470:	ea4c 050a 	orr.w	r5, ip, sl
 8025474:	9509      	str	r5, [sp, #36]	; 0x24
 8025476:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025478:	2dff      	cmp	r5, #255	; 0xff
 802547a:	d020      	beq.n	80254be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802547c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802547e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025482:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025484:	436f      	muls	r7, r5
 8025486:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025488:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802548c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802548e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025492:	fb05 fa0a 	mul.w	sl, r5, sl
 8025496:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802549a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802549e:	44bc      	add	ip, r7
 80254a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80254a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80254a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80254b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80254b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80254b8:	ea4c 050a 	orr.w	r5, ip, sl
 80254bc:	950e      	str	r5, [sp, #56]	; 0x38
 80254be:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80254c0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80254c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80254c6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80254ca:	fb0e f707 	mul.w	r7, lr, r7
 80254ce:	fb01 770c 	mla	r7, r1, ip, r7
 80254d2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80254d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80254d8:	fb00 770c 	mla	r7, r0, ip, r7
 80254dc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80254e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80254e2:	fb09 770c 	mla	r7, r9, ip, r7
 80254e6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80254ea:	fb0e fe0c 	mul.w	lr, lr, ip
 80254ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80254f2:	fb01 e303 	mla	r3, r1, r3, lr
 80254f6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80254f8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80254fc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80254fe:	fb00 330a 	mla	r3, r0, sl, r3
 8025502:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025506:	fb09 3c0c 	mla	ip, r9, ip, r3
 802550a:	0a3f      	lsrs	r7, r7, #8
 802550c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025510:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025514:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025518:	ea47 070c 	orr.w	r7, r7, ip
 802551c:	2aff      	cmp	r2, #255	; 0xff
 802551e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025522:	d11e      	bne.n	8025562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025524:	097a      	lsrs	r2, r7, #5
 8025526:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802552a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802552e:	f023 0307 	bic.w	r3, r3, #7
 8025532:	4313      	orrs	r3, r2
 8025534:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025538:	431f      	orrs	r7, r3
 802553a:	f8a8 7000 	strh.w	r7, [r8]
 802553e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025540:	441c      	add	r4, r3
 8025542:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025544:	f108 0802 	add.w	r8, r8, #2
 8025548:	441e      	add	r6, r3
 802554a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802554e:	e644      	b.n	80251da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025550:	2800      	cmp	r0, #0
 8025552:	f43f af0b 	beq.w	802536c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025556:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802555a:	9109      	str	r1, [sp, #36]	; 0x24
 802555c:	0e09      	lsrs	r1, r1, #24
 802555e:	9111      	str	r1, [sp, #68]	; 0x44
 8025560:	e704      	b.n	802536c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025562:	f8b8 1000 	ldrh.w	r1, [r8]
 8025566:	43d2      	mvns	r2, r2
 8025568:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802556c:	fa5f fe82 	uxtb.w	lr, r2
 8025570:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025574:	fb0c fc0e 	mul.w	ip, ip, lr
 8025578:	10c8      	asrs	r0, r1, #3
 802557a:	00ca      	lsls	r2, r1, #3
 802557c:	f10c 0101 	add.w	r1, ip, #1
 8025580:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025584:	0c39      	lsrs	r1, r7, #16
 8025586:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802558a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802558e:	4911      	ldr	r1, [pc, #68]	; (80255d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025590:	fb00 f00e 	mul.w	r0, r0, lr
 8025594:	fa5f fc8c 	uxtb.w	ip, ip
 8025598:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802559c:	b2d2      	uxtb	r2, r2
 802559e:	1c41      	adds	r1, r0, #1
 80255a0:	fb02 f20e 	mul.w	r2, r2, lr
 80255a4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80255a8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80255ac:	1c51      	adds	r1, r2, #1
 80255ae:	00c0      	lsls	r0, r0, #3
 80255b0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80255b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255b8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80255bc:	ea4c 0c00 	orr.w	ip, ip, r0
 80255c0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80255c4:	ea47 0c0c 	orr.w	ip, r7, ip
 80255c8:	f8a8 c000 	strh.w	ip, [r8]
 80255cc:	e7b7      	b.n	802553e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80255ce:	b01b      	add	sp, #108	; 0x6c
 80255d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80255d4:	fffff800 	.word	0xfffff800

080255d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80255d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80255dc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80255e0:	2d00      	cmp	r5, #0
 80255e2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80255e6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80255ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80255ee:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80255f2:	fb05 0e03 	mla	lr, r5, r3, r0
 80255f6:	f2c0 808c 	blt.w	8025712 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80255fa:	45a9      	cmp	r9, r5
 80255fc:	f340 8089 	ble.w	8025712 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025600:	2800      	cmp	r0, #0
 8025602:	f2c0 8084 	blt.w	802570e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025606:	4580      	cmp	r8, r0
 8025608:	f340 8081 	ble.w	802570e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802560c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025610:	f01e 0f01 	tst.w	lr, #1
 8025614:	5d16      	ldrb	r6, [r2, r4]
 8025616:	bf0c      	ite	eq
 8025618:	f006 060f 	andeq.w	r6, r6, #15
 802561c:	1136      	asrne	r6, r6, #4
 802561e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025622:	b2f6      	uxtb	r6, r6
 8025624:	1c44      	adds	r4, r0, #1
 8025626:	d477      	bmi.n	8025718 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025628:	45a0      	cmp	r8, r4
 802562a:	dd75      	ble.n	8025718 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802562c:	2f00      	cmp	r7, #0
 802562e:	d075      	beq.n	802571c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8025630:	f10e 0a01 	add.w	sl, lr, #1
 8025634:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025638:	f01a 0f01 	tst.w	sl, #1
 802563c:	5d14      	ldrb	r4, [r2, r4]
 802563e:	bf0c      	ite	eq
 8025640:	f004 040f 	andeq.w	r4, r4, #15
 8025644:	1124      	asrne	r4, r4, #4
 8025646:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802564a:	b2e4      	uxtb	r4, r4
 802564c:	3501      	adds	r5, #1
 802564e:	d469      	bmi.n	8025724 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025650:	45a9      	cmp	r9, r5
 8025652:	dd67      	ble.n	8025724 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025654:	f1bc 0f00 	cmp.w	ip, #0
 8025658:	d067      	beq.n	802572a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802565a:	2800      	cmp	r0, #0
 802565c:	db60      	blt.n	8025720 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802565e:	4580      	cmp	r8, r0
 8025660:	dd5e      	ble.n	8025720 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025662:	eb03 090e 	add.w	r9, r3, lr
 8025666:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802566a:	f019 0f01 	tst.w	r9, #1
 802566e:	5d55      	ldrb	r5, [r2, r5]
 8025670:	bf0c      	ite	eq
 8025672:	f005 050f 	andeq.w	r5, r5, #15
 8025676:	112d      	asrne	r5, r5, #4
 8025678:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802567c:	b2ed      	uxtb	r5, r5
 802567e:	3001      	adds	r0, #1
 8025680:	d456      	bmi.n	8025730 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025682:	4580      	cmp	r8, r0
 8025684:	dd54      	ble.n	8025730 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025686:	2f00      	cmp	r7, #0
 8025688:	d054      	beq.n	8025734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802568a:	3301      	adds	r3, #1
 802568c:	449e      	add	lr, r3
 802568e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025692:	f01e 0f01 	tst.w	lr, #1
 8025696:	5cd0      	ldrb	r0, [r2, r3]
 8025698:	bf0c      	ite	eq
 802569a:	f000 000f 	andeq.w	r0, r0, #15
 802569e:	1100      	asrne	r0, r0, #4
 80256a0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80256a4:	b2c3      	uxtb	r3, r0
 80256a6:	b2ba      	uxth	r2, r7
 80256a8:	fa1f fc8c 	uxth.w	ip, ip
 80256ac:	fb02 f00c 	mul.w	r0, r2, ip
 80256b0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80256b4:	0112      	lsls	r2, r2, #4
 80256b6:	fa1f fc8c 	uxth.w	ip, ip
 80256ba:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80256be:	1a12      	subs	r2, r2, r0
 80256c0:	eba7 070c 	sub.w	r7, r7, ip
 80256c4:	b292      	uxth	r2, r2
 80256c6:	b2bf      	uxth	r7, r7
 80256c8:	4362      	muls	r2, r4
 80256ca:	fb06 2207 	mla	r2, r6, r7, r2
 80256ce:	fb0c 2505 	mla	r5, ip, r5, r2
 80256d2:	fb00 5303 	mla	r3, r0, r3, r5
 80256d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80256da:	b1b3      	cbz	r3, 802570a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80256dc:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80256e0:	435a      	muls	r2, r3
 80256e2:	1c53      	adds	r3, r2, #1
 80256e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80256e8:	4a2d      	ldr	r2, [pc, #180]	; (80257a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80256ea:	121b      	asrs	r3, r3, #8
 80256ec:	6812      	ldr	r2, [r2, #0]
 80256ee:	2bff      	cmp	r3, #255	; 0xff
 80256f0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80256f4:	d120      	bne.n	8025738 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80256f6:	4b2b      	ldr	r3, [pc, #172]	; (80257a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80256f8:	0950      	lsrs	r0, r2, #5
 80256fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80256fe:	4033      	ands	r3, r6
 8025700:	4318      	orrs	r0, r3
 8025702:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025706:	4302      	orrs	r2, r0
 8025708:	800a      	strh	r2, [r1, #0]
 802570a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802570e:	2600      	movs	r6, #0
 8025710:	e788      	b.n	8025624 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8025712:	2400      	movs	r4, #0
 8025714:	4626      	mov	r6, r4
 8025716:	e799      	b.n	802564c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025718:	2400      	movs	r4, #0
 802571a:	e797      	b.n	802564c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802571c:	463c      	mov	r4, r7
 802571e:	e795      	b.n	802564c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025720:	2500      	movs	r5, #0
 8025722:	e7ac      	b.n	802567e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025724:	2300      	movs	r3, #0
 8025726:	461d      	mov	r5, r3
 8025728:	e7bd      	b.n	80256a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802572a:	4663      	mov	r3, ip
 802572c:	4665      	mov	r5, ip
 802572e:	e7ba      	b.n	80256a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025730:	2300      	movs	r3, #0
 8025732:	e7b8      	b.n	80256a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025734:	463b      	mov	r3, r7
 8025736:	e7b6      	b.n	80256a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025738:	880d      	ldrh	r5, [r1, #0]
 802573a:	b29f      	uxth	r7, r3
 802573c:	122c      	asrs	r4, r5, #8
 802573e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8025742:	43db      	mvns	r3, r3
 8025744:	b2db      	uxtb	r3, r3
 8025746:	fb10 f007 	smulbb	r0, r0, r7
 802574a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802574e:	fb04 0403 	mla	r4, r4, r3, r0
 8025752:	b2f6      	uxtb	r6, r6
 8025754:	10e8      	asrs	r0, r5, #3
 8025756:	b2d2      	uxtb	r2, r2
 8025758:	00ed      	lsls	r5, r5, #3
 802575a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802575e:	fb12 f207 	smulbb	r2, r2, r7
 8025762:	fb16 f607 	smulbb	r6, r6, r7
 8025766:	b2ed      	uxtb	r5, r5
 8025768:	b2a4      	uxth	r4, r4
 802576a:	fb00 6603 	mla	r6, r0, r3, r6
 802576e:	fb05 2303 	mla	r3, r5, r3, r2
 8025772:	b29a      	uxth	r2, r3
 8025774:	1c63      	adds	r3, r4, #1
 8025776:	b2b0      	uxth	r0, r6
 8025778:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802577c:	1c53      	adds	r3, r2, #1
 802577e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025782:	1c42      	adds	r2, r0, #1
 8025784:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025788:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802578c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025790:	0940      	lsrs	r0, r0, #5
 8025792:	4323      	orrs	r3, r4
 8025794:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025798:	4303      	orrs	r3, r0
 802579a:	800b      	strh	r3, [r1, #0]
 802579c:	e7b5      	b.n	802570a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802579e:	bf00      	nop
 80257a0:	20012dc4 	.word	0x20012dc4
 80257a4:	00fff800 	.word	0x00fff800

080257a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80257a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257ac:	b097      	sub	sp, #92	; 0x5c
 80257ae:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80257b2:	9214      	str	r2, [sp, #80]	; 0x50
 80257b4:	9309      	str	r3, [sp, #36]	; 0x24
 80257b6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80257b8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80257bc:	910d      	str	r1, [sp, #52]	; 0x34
 80257be:	930f      	str	r3, [sp, #60]	; 0x3c
 80257c0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80257c4:	9015      	str	r0, [sp, #84]	; 0x54
 80257c6:	6850      	ldr	r0, [r2, #4]
 80257c8:	6812      	ldr	r2, [r2, #0]
 80257ca:	fb00 1303 	mla	r3, r0, r3, r1
 80257ce:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80257d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257d4:	689b      	ldr	r3, [r3, #8]
 80257d6:	3301      	adds	r3, #1
 80257d8:	f023 0301 	bic.w	r3, r3, #1
 80257dc:	930a      	str	r3, [sp, #40]	; 0x28
 80257de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257e0:	681f      	ldr	r7, [r3, #0]
 80257e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80257e4:	2b00      	cmp	r3, #0
 80257e6:	dc03      	bgt.n	80257f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80257e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80257ea:	2b00      	cmp	r3, #0
 80257ec:	f340 8287 	ble.w	8025cfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80257f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80257f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80257fa:	1e48      	subs	r0, r1, #1
 80257fc:	f102 3cff 	add.w	ip, r2, #4294967295
 8025800:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025802:	2b00      	cmp	r3, #0
 8025804:	f340 80c4 	ble.w	8025990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025808:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802580c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025810:	d406      	bmi.n	8025820 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025812:	4586      	cmp	lr, r0
 8025814:	da04      	bge.n	8025820 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025816:	2b00      	cmp	r3, #0
 8025818:	db02      	blt.n	8025820 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802581a:	4563      	cmp	r3, ip
 802581c:	f2c0 80b9 	blt.w	8025992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025820:	f11e 0e01 	adds.w	lr, lr, #1
 8025824:	f100 80aa 	bmi.w	802597c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025828:	4571      	cmp	r1, lr
 802582a:	f2c0 80a7 	blt.w	802597c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802582e:	3301      	adds	r3, #1
 8025830:	f100 80a4 	bmi.w	802597c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025834:	429a      	cmp	r2, r3
 8025836:	f2c0 80a1 	blt.w	802597c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802583a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802583c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8025840:	930e      	str	r3, [sp, #56]	; 0x38
 8025842:	46c8      	mov	r8, r9
 8025844:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025846:	2b00      	cmp	r3, #0
 8025848:	f340 80c3 	ble.w	80259d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802584c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802584e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025852:	1423      	asrs	r3, r4, #16
 8025854:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025858:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802585c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025860:	f100 814d 	bmi.w	8025afe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025864:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025868:	455b      	cmp	r3, fp
 802586a:	f280 8148 	bge.w	8025afe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802586e:	2800      	cmp	r0, #0
 8025870:	f2c0 8145 	blt.w	8025afe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025874:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025878:	4558      	cmp	r0, fp
 802587a:	f280 8140 	bge.w	8025afe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802587e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025880:	fb00 3305 	mla	r3, r0, r5, r3
 8025884:	0858      	lsrs	r0, r3, #1
 8025886:	07dd      	lsls	r5, r3, #31
 8025888:	f817 c000 	ldrb.w	ip, [r7, r0]
 802588c:	bf54      	ite	pl
 802588e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025892:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025896:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802589a:	fa5f fc8c 	uxtb.w	ip, ip
 802589e:	2a00      	cmp	r2, #0
 80258a0:	f000 80db 	beq.w	8025a5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80258a4:	1c58      	adds	r0, r3, #1
 80258a6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80258aa:	07c0      	lsls	r0, r0, #31
 80258ac:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80258b0:	bf54      	ite	pl
 80258b2:	f00e 0e0f 	andpl.w	lr, lr, #15
 80258b6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80258ba:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80258be:	fa5f f08e 	uxtb.w	r0, lr
 80258c2:	9010      	str	r0, [sp, #64]	; 0x40
 80258c4:	b1c9      	cbz	r1, 80258fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80258c6:	4453      	add	r3, sl
 80258c8:	0858      	lsrs	r0, r3, #1
 80258ca:	07dd      	lsls	r5, r3, #31
 80258cc:	5c38      	ldrb	r0, [r7, r0]
 80258ce:	bf54      	ite	pl
 80258d0:	f000 000f 	andpl.w	r0, r0, #15
 80258d4:	1100      	asrmi	r0, r0, #4
 80258d6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80258da:	3301      	adds	r3, #1
 80258dc:	b2c0      	uxtb	r0, r0
 80258de:	900b      	str	r0, [sp, #44]	; 0x2c
 80258e0:	0858      	lsrs	r0, r3, #1
 80258e2:	07dd      	lsls	r5, r3, #31
 80258e4:	f817 e000 	ldrb.w	lr, [r7, r0]
 80258e8:	bf54      	ite	pl
 80258ea:	f00e 030f 	andpl.w	r3, lr, #15
 80258ee:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80258f2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80258f6:	b2db      	uxtb	r3, r3
 80258f8:	9311      	str	r3, [sp, #68]	; 0x44
 80258fa:	b292      	uxth	r2, r2
 80258fc:	b289      	uxth	r1, r1
 80258fe:	fb02 f301 	mul.w	r3, r2, r1
 8025902:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025906:	0112      	lsls	r2, r2, #4
 8025908:	b289      	uxth	r1, r1
 802590a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802590e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025910:	1ad2      	subs	r2, r2, r3
 8025912:	1a40      	subs	r0, r0, r1
 8025914:	b292      	uxth	r2, r2
 8025916:	436a      	muls	r2, r5
 8025918:	b280      	uxth	r0, r0
 802591a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802591e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025920:	fb01 c102 	mla	r1, r1, r2, ip
 8025924:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025926:	fb03 1302 	mla	r3, r3, r2, r1
 802592a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802592e:	b1db      	cbz	r3, 8025968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025930:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025932:	4353      	muls	r3, r2
 8025934:	1c5a      	adds	r2, r3, #1
 8025936:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802593a:	4ac6      	ldr	r2, [pc, #792]	; (8025c54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802593c:	121b      	asrs	r3, r3, #8
 802593e:	6812      	ldr	r2, [r2, #0]
 8025940:	2bff      	cmp	r3, #255	; 0xff
 8025942:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025946:	f040 8099 	bne.w	8025a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802594a:	0953      	lsrs	r3, r2, #5
 802594c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025950:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025954:	f02c 0c07 	bic.w	ip, ip, #7
 8025958:	ea43 0c0c 	orr.w	ip, r3, ip
 802595c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025960:	ea4c 0202 	orr.w	r2, ip, r2
 8025964:	f8a8 2000 	strh.w	r2, [r8]
 8025968:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802596a:	441c      	add	r4, r3
 802596c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802596e:	441e      	add	r6, r3
 8025970:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025972:	3b01      	subs	r3, #1
 8025974:	f108 0802 	add.w	r8, r8, #2
 8025978:	930e      	str	r3, [sp, #56]	; 0x38
 802597a:	e763      	b.n	8025844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802597c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802597e:	441c      	add	r4, r3
 8025980:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025982:	441e      	add	r6, r3
 8025984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025986:	3b01      	subs	r3, #1
 8025988:	9309      	str	r3, [sp, #36]	; 0x24
 802598a:	f109 0902 	add.w	r9, r9, #2
 802598e:	e737      	b.n	8025800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025990:	d024      	beq.n	80259dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025992:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025994:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025996:	3b01      	subs	r3, #1
 8025998:	fb00 4003 	mla	r0, r0, r3, r4
 802599c:	1400      	asrs	r0, r0, #16
 802599e:	f53f af4c 	bmi.w	802583a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80259a2:	3901      	subs	r1, #1
 80259a4:	4288      	cmp	r0, r1
 80259a6:	f6bf af48 	bge.w	802583a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80259aa:	9924      	ldr	r1, [sp, #144]	; 0x90
 80259ac:	fb01 6303 	mla	r3, r1, r3, r6
 80259b0:	141b      	asrs	r3, r3, #16
 80259b2:	f53f af42 	bmi.w	802583a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80259b6:	3a01      	subs	r2, #1
 80259b8:	4293      	cmp	r3, r2
 80259ba:	f6bf af3e 	bge.w	802583a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80259be:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80259c2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80259c6:	930e      	str	r3, [sp, #56]	; 0x38
 80259c8:	46c8      	mov	r8, r9
 80259ca:	f1bb 0f00 	cmp.w	fp, #0
 80259ce:	f300 80b7 	bgt.w	8025b40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80259d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80259d4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80259d8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80259dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80259de:	2b00      	cmp	r3, #0
 80259e0:	f340 818d 	ble.w	8025cfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80259e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80259e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80259ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80259f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80259f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80259f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80259fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80259fe:	eef0 6a62 	vmov.f32	s13, s5
 8025a02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025a06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025a0e:	ee16 4a90 	vmov	r4, s13
 8025a12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025a16:	eef0 6a43 	vmov.f32	s13, s6
 8025a1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025a1e:	ee12 2a90 	vmov	r2, s5
 8025a22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a2a:	ee13 2a10 	vmov	r2, s6
 8025a2e:	9323      	str	r3, [sp, #140]	; 0x8c
 8025a30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a36:	9324      	str	r3, [sp, #144]	; 0x90
 8025a38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025a3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025a3c:	3b01      	subs	r3, #1
 8025a3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a42:	930d      	str	r3, [sp, #52]	; 0x34
 8025a44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025a46:	bf08      	it	eq
 8025a48:	4613      	moveq	r3, r2
 8025a4a:	ee16 6a90 	vmov	r6, s13
 8025a4e:	9309      	str	r3, [sp, #36]	; 0x24
 8025a50:	eeb0 3a67 	vmov.f32	s6, s15
 8025a54:	eef0 2a47 	vmov.f32	s5, s14
 8025a58:	e6c3      	b.n	80257e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025a5a:	2900      	cmp	r1, #0
 8025a5c:	f43f af4d 	beq.w	80258fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025a60:	eb0a 0003 	add.w	r0, sl, r3
 8025a64:	0843      	lsrs	r3, r0, #1
 8025a66:	07c0      	lsls	r0, r0, #31
 8025a68:	5cfb      	ldrb	r3, [r7, r3]
 8025a6a:	bf54      	ite	pl
 8025a6c:	f003 030f 	andpl.w	r3, r3, #15
 8025a70:	111b      	asrmi	r3, r3, #4
 8025a72:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025a76:	b2db      	uxtb	r3, r3
 8025a78:	930b      	str	r3, [sp, #44]	; 0x2c
 8025a7a:	e73e      	b.n	80258fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025a7c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025a80:	fa1f fb83 	uxth.w	fp, r3
 8025a84:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025a88:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025a8c:	43db      	mvns	r3, r3
 8025a8e:	b2db      	uxtb	r3, r3
 8025a90:	fb11 f10b 	smulbb	r1, r1, fp
 8025a94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025a98:	fb00 1003 	mla	r0, r0, r3, r1
 8025a9c:	fa5f fc8c 	uxtb.w	ip, ip
 8025aa0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025aa4:	b2d2      	uxtb	r2, r2
 8025aa6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025aaa:	b280      	uxth	r0, r0
 8025aac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025ab0:	fb1c fc0b 	smulbb	ip, ip, fp
 8025ab4:	fa5f fe8e 	uxtb.w	lr, lr
 8025ab8:	fb12 fb0b 	smulbb	fp, r2, fp
 8025abc:	fb01 cc03 	mla	ip, r1, r3, ip
 8025ac0:	fb0e bb03 	mla	fp, lr, r3, fp
 8025ac4:	1c43      	adds	r3, r0, #1
 8025ac6:	fa1f fc8c 	uxth.w	ip, ip
 8025aca:	fa1f fb8b 	uxth.w	fp, fp
 8025ace:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025ad2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025ad6:	f10c 0101 	add.w	r1, ip, #1
 8025ada:	f10b 0001 	add.w	r0, fp, #1
 8025ade:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025ae2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025ae6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025aea:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025aee:	4318      	orrs	r0, r3
 8025af0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025af4:	ea40 000c 	orr.w	r0, r0, ip
 8025af8:	f8a8 0000 	strh.w	r0, [r8]
 8025afc:	e734      	b.n	8025968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025afe:	f113 0b01 	adds.w	fp, r3, #1
 8025b02:	f53f af31 	bmi.w	8025968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b06:	45dc      	cmp	ip, fp
 8025b08:	f6ff af2e 	blt.w	8025968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b0c:	f110 0b01 	adds.w	fp, r0, #1
 8025b10:	f53f af2a 	bmi.w	8025968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b14:	45de      	cmp	lr, fp
 8025b16:	f6ff af27 	blt.w	8025968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b1a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b1c:	9302      	str	r3, [sp, #8]
 8025b1e:	fa0f f38e 	sxth.w	r3, lr
 8025b22:	9301      	str	r3, [sp, #4]
 8025b24:	fa0f f38c 	sxth.w	r3, ip
 8025b28:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025b2c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025b30:	9300      	str	r3, [sp, #0]
 8025b32:	463a      	mov	r2, r7
 8025b34:	4653      	mov	r3, sl
 8025b36:	4641      	mov	r1, r8
 8025b38:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025b3a:	f7ff fd4d 	bl	80255d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025b3e:	e713      	b.n	8025968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025b40:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025b42:	1422      	asrs	r2, r4, #16
 8025b44:	1433      	asrs	r3, r6, #16
 8025b46:	fb05 2303 	mla	r3, r5, r3, r2
 8025b4a:	085a      	lsrs	r2, r3, #1
 8025b4c:	07dd      	lsls	r5, r3, #31
 8025b4e:	5cba      	ldrb	r2, [r7, r2]
 8025b50:	bf54      	ite	pl
 8025b52:	f002 020f 	andpl.w	r2, r2, #15
 8025b56:	1112      	asrmi	r2, r2, #4
 8025b58:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025b5c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025b60:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025b64:	b2d2      	uxtb	r2, r2
 8025b66:	2900      	cmp	r1, #0
 8025b68:	d076      	beq.n	8025c58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025b6a:	f103 0e01 	add.w	lr, r3, #1
 8025b6e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025b72:	f01e 0f01 	tst.w	lr, #1
 8025b76:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025b7a:	bf0c      	ite	eq
 8025b7c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025b80:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025b84:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025b88:	fa5f f58c 	uxtb.w	r5, ip
 8025b8c:	9512      	str	r5, [sp, #72]	; 0x48
 8025b8e:	b300      	cbz	r0, 8025bd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025b90:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b92:	442b      	add	r3, r5
 8025b94:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025b98:	07dd      	lsls	r5, r3, #31
 8025b9a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025b9e:	bf54      	ite	pl
 8025ba0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025ba4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025ba8:	3301      	adds	r3, #1
 8025baa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025bae:	fa5f f58c 	uxtb.w	r5, ip
 8025bb2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025bb6:	950c      	str	r5, [sp, #48]	; 0x30
 8025bb8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025bbc:	07dd      	lsls	r5, r3, #31
 8025bbe:	bf54      	ite	pl
 8025bc0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025bc4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025bc8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025bcc:	fa5f f38c 	uxtb.w	r3, ip
 8025bd0:	9313      	str	r3, [sp, #76]	; 0x4c
 8025bd2:	b289      	uxth	r1, r1
 8025bd4:	b280      	uxth	r0, r0
 8025bd6:	fb01 f300 	mul.w	r3, r1, r0
 8025bda:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025bde:	0109      	lsls	r1, r1, #4
 8025be0:	b280      	uxth	r0, r0
 8025be2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025be6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025be8:	1ac9      	subs	r1, r1, r3
 8025bea:	ebac 0c00 	sub.w	ip, ip, r0
 8025bee:	b289      	uxth	r1, r1
 8025bf0:	4369      	muls	r1, r5
 8025bf2:	fa1f fc8c 	uxth.w	ip, ip
 8025bf6:	fb02 120c 	mla	r2, r2, ip, r1
 8025bfa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025bfc:	fb00 2001 	mla	r0, r0, r1, r2
 8025c00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025c02:	fb03 0302 	mla	r3, r3, r2, r0
 8025c06:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025c0a:	b1d3      	cbz	r3, 8025c42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025c0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025c0e:	4353      	muls	r3, r2
 8025c10:	1c5a      	adds	r2, r3, #1
 8025c12:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025c16:	4a0f      	ldr	r2, [pc, #60]	; (8025c54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025c18:	121b      	asrs	r3, r3, #8
 8025c1a:	6812      	ldr	r2, [r2, #0]
 8025c1c:	2bff      	cmp	r3, #255	; 0xff
 8025c1e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025c22:	d12d      	bne.n	8025c80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025c24:	0953      	lsrs	r3, r2, #5
 8025c26:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025c2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c2e:	f02c 0c07 	bic.w	ip, ip, #7
 8025c32:	ea43 0c0c 	orr.w	ip, r3, ip
 8025c36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025c3a:	ea4c 0202 	orr.w	r2, ip, r2
 8025c3e:	f8a8 2000 	strh.w	r2, [r8]
 8025c42:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025c44:	441c      	add	r4, r3
 8025c46:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c48:	f108 0802 	add.w	r8, r8, #2
 8025c4c:	441e      	add	r6, r3
 8025c4e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025c52:	e6ba      	b.n	80259ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025c54:	20012dc4 	.word	0x20012dc4
 8025c58:	2800      	cmp	r0, #0
 8025c5a:	d0ba      	beq.n	8025bd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025c5c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025c5e:	442b      	add	r3, r5
 8025c60:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025c64:	07db      	lsls	r3, r3, #31
 8025c66:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025c6a:	bf54      	ite	pl
 8025c6c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025c70:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025c74:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025c78:	fa5f f38c 	uxtb.w	r3, ip
 8025c7c:	930c      	str	r3, [sp, #48]	; 0x30
 8025c7e:	e7a8      	b.n	8025bd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025c80:	f8b8 e000 	ldrh.w	lr, [r8]
 8025c84:	fa1f fa83 	uxth.w	sl, r3
 8025c88:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025c8c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025c90:	43db      	mvns	r3, r3
 8025c92:	b2db      	uxtb	r3, r3
 8025c94:	fb11 f10a 	smulbb	r1, r1, sl
 8025c98:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025c9c:	fb00 1003 	mla	r0, r0, r3, r1
 8025ca0:	b2d2      	uxtb	r2, r2
 8025ca2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025ca6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025caa:	fa5f fe8e 	uxtb.w	lr, lr
 8025cae:	fb12 f20a 	smulbb	r2, r2, sl
 8025cb2:	fb0e 2203 	mla	r2, lr, r3, r2
 8025cb6:	fa5f fc8c 	uxtb.w	ip, ip
 8025cba:	b280      	uxth	r0, r0
 8025cbc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025cc0:	b292      	uxth	r2, r2
 8025cc2:	fb1c fc0a 	smulbb	ip, ip, sl
 8025cc6:	fb01 cc03 	mla	ip, r1, r3, ip
 8025cca:	1c43      	adds	r3, r0, #1
 8025ccc:	1c51      	adds	r1, r2, #1
 8025cce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025cd2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025cd6:	fa1f fc8c 	uxth.w	ip, ip
 8025cda:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025cde:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025ce2:	4308      	orrs	r0, r1
 8025ce4:	f10c 0101 	add.w	r1, ip, #1
 8025ce8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025cec:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025cf0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025cf4:	ea40 000c 	orr.w	r0, r0, ip
 8025cf8:	f8a8 0000 	strh.w	r0, [r8]
 8025cfc:	e7a1      	b.n	8025c42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025cfe:	b017      	add	sp, #92	; 0x5c
 8025d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025d04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025d04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025d08:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025d0c:	2d00      	cmp	r5, #0
 8025d0e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025d12:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025d16:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025d1a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025d1e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025d22:	f2c0 80b0 	blt.w	8025e86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025d26:	45a9      	cmp	r9, r5
 8025d28:	f340 80ad 	ble.w	8025e86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025d2c:	2800      	cmp	r0, #0
 8025d2e:	f2c0 80a8 	blt.w	8025e82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025d32:	4580      	cmp	r8, r0
 8025d34:	f340 80a5 	ble.w	8025e82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025d38:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025d3c:	f01e 0f01 	tst.w	lr, #1
 8025d40:	5d16      	ldrb	r6, [r2, r4]
 8025d42:	bf0c      	ite	eq
 8025d44:	f006 060f 	andeq.w	r6, r6, #15
 8025d48:	1136      	asrne	r6, r6, #4
 8025d4a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025d4e:	b2f6      	uxtb	r6, r6
 8025d50:	1c44      	adds	r4, r0, #1
 8025d52:	f100 809b 	bmi.w	8025e8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025d56:	45a0      	cmp	r8, r4
 8025d58:	f340 8098 	ble.w	8025e8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025d5c:	2f00      	cmp	r7, #0
 8025d5e:	f000 8097 	beq.w	8025e90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025d62:	f10e 0a01 	add.w	sl, lr, #1
 8025d66:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025d6a:	f01a 0f01 	tst.w	sl, #1
 8025d6e:	5d14      	ldrb	r4, [r2, r4]
 8025d70:	bf0c      	ite	eq
 8025d72:	f004 040f 	andeq.w	r4, r4, #15
 8025d76:	1124      	asrne	r4, r4, #4
 8025d78:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025d7c:	b2e4      	uxtb	r4, r4
 8025d7e:	3501      	adds	r5, #1
 8025d80:	f100 808a 	bmi.w	8025e98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025d84:	45a9      	cmp	r9, r5
 8025d86:	f340 8087 	ble.w	8025e98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025d8a:	f1bc 0f00 	cmp.w	ip, #0
 8025d8e:	f000 8086 	beq.w	8025e9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025d92:	2800      	cmp	r0, #0
 8025d94:	db7e      	blt.n	8025e94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025d96:	4580      	cmp	r8, r0
 8025d98:	dd7c      	ble.n	8025e94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025d9a:	eb03 090e 	add.w	r9, r3, lr
 8025d9e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025da2:	f019 0f01 	tst.w	r9, #1
 8025da6:	5d55      	ldrb	r5, [r2, r5]
 8025da8:	bf0c      	ite	eq
 8025daa:	f005 050f 	andeq.w	r5, r5, #15
 8025dae:	112d      	asrne	r5, r5, #4
 8025db0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025db4:	b2ed      	uxtb	r5, r5
 8025db6:	3001      	adds	r0, #1
 8025db8:	d474      	bmi.n	8025ea4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025dba:	4580      	cmp	r8, r0
 8025dbc:	dd72      	ble.n	8025ea4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025dbe:	2f00      	cmp	r7, #0
 8025dc0:	d072      	beq.n	8025ea8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025dc2:	3301      	adds	r3, #1
 8025dc4:	449e      	add	lr, r3
 8025dc6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025dca:	f01e 0f01 	tst.w	lr, #1
 8025dce:	5cd0      	ldrb	r0, [r2, r3]
 8025dd0:	bf0c      	ite	eq
 8025dd2:	f000 000f 	andeq.w	r0, r0, #15
 8025dd6:	1100      	asrne	r0, r0, #4
 8025dd8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025ddc:	b2c3      	uxtb	r3, r0
 8025dde:	b2ba      	uxth	r2, r7
 8025de0:	fa1f fc8c 	uxth.w	ip, ip
 8025de4:	fb02 f00c 	mul.w	r0, r2, ip
 8025de8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025dec:	0112      	lsls	r2, r2, #4
 8025dee:	fa1f fc8c 	uxth.w	ip, ip
 8025df2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025df6:	1a12      	subs	r2, r2, r0
 8025df8:	eba7 070c 	sub.w	r7, r7, ip
 8025dfc:	b292      	uxth	r2, r2
 8025dfe:	b2bf      	uxth	r7, r7
 8025e00:	4362      	muls	r2, r4
 8025e02:	fb06 2207 	mla	r2, r6, r7, r2
 8025e06:	fb0c 2505 	mla	r5, ip, r5, r2
 8025e0a:	fb00 5303 	mla	r3, r0, r3, r5
 8025e0e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025e12:	b3a3      	cbz	r3, 8025e7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025e14:	4a25      	ldr	r2, [pc, #148]	; (8025eac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025e16:	880e      	ldrh	r6, [r1, #0]
 8025e18:	6815      	ldr	r5, [r2, #0]
 8025e1a:	1234      	asrs	r4, r6, #8
 8025e1c:	b29a      	uxth	r2, r3
 8025e1e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025e22:	43db      	mvns	r3, r3
 8025e24:	b2db      	uxtb	r3, r3
 8025e26:	fb10 f002 	smulbb	r0, r0, r2
 8025e2a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025e2e:	fb04 0403 	mla	r4, r4, r3, r0
 8025e32:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025e36:	10f0      	asrs	r0, r6, #3
 8025e38:	b2ed      	uxtb	r5, r5
 8025e3a:	00f6      	lsls	r6, r6, #3
 8025e3c:	fb17 f702 	smulbb	r7, r7, r2
 8025e40:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025e44:	fb15 f202 	smulbb	r2, r5, r2
 8025e48:	b2f6      	uxtb	r6, r6
 8025e4a:	b2a4      	uxth	r4, r4
 8025e4c:	fb00 7003 	mla	r0, r0, r3, r7
 8025e50:	fb06 2303 	mla	r3, r6, r3, r2
 8025e54:	b29a      	uxth	r2, r3
 8025e56:	1c63      	adds	r3, r4, #1
 8025e58:	b280      	uxth	r0, r0
 8025e5a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025e5e:	1c53      	adds	r3, r2, #1
 8025e60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025e64:	1c42      	adds	r2, r0, #1
 8025e66:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025e6a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025e6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025e72:	0940      	lsrs	r0, r0, #5
 8025e74:	4323      	orrs	r3, r4
 8025e76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025e7a:	4303      	orrs	r3, r0
 8025e7c:	800b      	strh	r3, [r1, #0]
 8025e7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025e82:	2600      	movs	r6, #0
 8025e84:	e764      	b.n	8025d50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025e86:	2400      	movs	r4, #0
 8025e88:	4626      	mov	r6, r4
 8025e8a:	e778      	b.n	8025d7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e8c:	2400      	movs	r4, #0
 8025e8e:	e776      	b.n	8025d7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e90:	463c      	mov	r4, r7
 8025e92:	e774      	b.n	8025d7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025e94:	2500      	movs	r5, #0
 8025e96:	e78e      	b.n	8025db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025e98:	2300      	movs	r3, #0
 8025e9a:	461d      	mov	r5, r3
 8025e9c:	e79f      	b.n	8025dde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025e9e:	4663      	mov	r3, ip
 8025ea0:	4665      	mov	r5, ip
 8025ea2:	e79c      	b.n	8025dde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025ea4:	2300      	movs	r3, #0
 8025ea6:	e79a      	b.n	8025dde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025ea8:	463b      	mov	r3, r7
 8025eaa:	e798      	b.n	8025dde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025eac:	20012dc4 	.word	0x20012dc4

08025eb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025eb4:	b093      	sub	sp, #76	; 0x4c
 8025eb6:	461d      	mov	r5, r3
 8025eb8:	920c      	str	r2, [sp, #48]	; 0x30
 8025eba:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025ebc:	9107      	str	r1, [sp, #28]
 8025ebe:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025ec2:	9011      	str	r0, [sp, #68]	; 0x44
 8025ec4:	6850      	ldr	r0, [r2, #4]
 8025ec6:	6812      	ldr	r2, [r2, #0]
 8025ec8:	fb00 1303 	mla	r3, r0, r3, r1
 8025ecc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025ed0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ed2:	689b      	ldr	r3, [r3, #8]
 8025ed4:	3301      	adds	r3, #1
 8025ed6:	f023 0301 	bic.w	r3, r3, #1
 8025eda:	9306      	str	r3, [sp, #24]
 8025edc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ede:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025ee2:	681f      	ldr	r7, [r3, #0]
 8025ee4:	9b07      	ldr	r3, [sp, #28]
 8025ee6:	2b00      	cmp	r3, #0
 8025ee8:	dc03      	bgt.n	8025ef2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025eea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025eec:	2b00      	cmp	r3, #0
 8025eee:	f340 8267 	ble.w	80263c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025ef2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ef4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ef8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025efc:	1e48      	subs	r0, r1, #1
 8025efe:	f102 3cff 	add.w	ip, r2, #4294967295
 8025f02:	2d00      	cmp	r5, #0
 8025f04:	f340 80b8 	ble.w	8026078 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025f08:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025f0c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025f10:	d406      	bmi.n	8025f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025f12:	4586      	cmp	lr, r0
 8025f14:	da04      	bge.n	8025f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025f16:	2b00      	cmp	r3, #0
 8025f18:	db02      	blt.n	8025f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025f1a:	4563      	cmp	r3, ip
 8025f1c:	f2c0 80ad 	blt.w	802607a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025f20:	f11e 0e01 	adds.w	lr, lr, #1
 8025f24:	f100 80a0 	bmi.w	8026068 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f28:	4571      	cmp	r1, lr
 8025f2a:	f2c0 809d 	blt.w	8026068 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f2e:	3301      	adds	r3, #1
 8025f30:	f100 809a 	bmi.w	8026068 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f34:	429a      	cmp	r2, r3
 8025f36:	f2c0 8097 	blt.w	8026068 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025f3a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025f3e:	9509      	str	r5, [sp, #36]	; 0x24
 8025f40:	46c8      	mov	r8, r9
 8025f42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025f44:	2b00      	cmp	r3, #0
 8025f46:	f340 80b6 	ble.w	80260b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025f4a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025f4e:	9308      	str	r3, [sp, #32]
 8025f50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f52:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025f56:	1423      	asrs	r3, r4, #16
 8025f58:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025f5c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025f60:	f100 813e 	bmi.w	80261e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f64:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025f68:	455b      	cmp	r3, fp
 8025f6a:	f280 8139 	bge.w	80261e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f6e:	2800      	cmp	r0, #0
 8025f70:	f2c0 8136 	blt.w	80261e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f74:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025f78:	4558      	cmp	r0, fp
 8025f7a:	f280 8131 	bge.w	80261e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025f7e:	9a06      	ldr	r2, [sp, #24]
 8025f80:	fb00 3302 	mla	r3, r0, r2, r3
 8025f84:	0858      	lsrs	r0, r3, #1
 8025f86:	07da      	lsls	r2, r3, #31
 8025f88:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025f8c:	9a08      	ldr	r2, [sp, #32]
 8025f8e:	bf54      	ite	pl
 8025f90:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025f94:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025f98:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025f9c:	fa5f fc8c 	uxtb.w	ip, ip
 8025fa0:	2a00      	cmp	r2, #0
 8025fa2:	f000 80cb 	beq.w	802613c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025fa6:	1c58      	adds	r0, r3, #1
 8025fa8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025fac:	07c0      	lsls	r0, r0, #31
 8025fae:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025fb2:	bf54      	ite	pl
 8025fb4:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025fb8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025fbc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025fc0:	fa5f fe8e 	uxtb.w	lr, lr
 8025fc4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025fc8:	b1b9      	cbz	r1, 8025ffa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025fca:	4453      	add	r3, sl
 8025fcc:	0858      	lsrs	r0, r3, #1
 8025fce:	07da      	lsls	r2, r3, #31
 8025fd0:	5c38      	ldrb	r0, [r7, r0]
 8025fd2:	bf54      	ite	pl
 8025fd4:	f000 000f 	andpl.w	r0, r0, #15
 8025fd8:	1100      	asrmi	r0, r0, #4
 8025fda:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025fde:	b2c0      	uxtb	r0, r0
 8025fe0:	900a      	str	r0, [sp, #40]	; 0x28
 8025fe2:	1c58      	adds	r0, r3, #1
 8025fe4:	0843      	lsrs	r3, r0, #1
 8025fe6:	07c2      	lsls	r2, r0, #31
 8025fe8:	5cfb      	ldrb	r3, [r7, r3]
 8025fea:	bf54      	ite	pl
 8025fec:	f003 030f 	andpl.w	r3, r3, #15
 8025ff0:	111b      	asrmi	r3, r3, #4
 8025ff2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025ff6:	b2db      	uxtb	r3, r3
 8025ff8:	930e      	str	r3, [sp, #56]	; 0x38
 8025ffa:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025ffe:	b289      	uxth	r1, r1
 8026000:	fb02 f301 	mul.w	r3, r2, r1
 8026004:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026008:	0112      	lsls	r2, r2, #4
 802600a:	b289      	uxth	r1, r1
 802600c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026010:	1a40      	subs	r0, r0, r1
 8026012:	fa1f fe80 	uxth.w	lr, r0
 8026016:	1ad2      	subs	r2, r2, r3
 8026018:	980d      	ldr	r0, [sp, #52]	; 0x34
 802601a:	b292      	uxth	r2, r2
 802601c:	4342      	muls	r2, r0
 802601e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8026022:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026024:	fb01 c102 	mla	r1, r1, r2, ip
 8026028:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802602a:	fb03 1302 	mla	r3, r3, r2, r1
 802602e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026032:	2bff      	cmp	r3, #255	; 0xff
 8026034:	f040 8093 	bne.w	802615e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026038:	4bbe      	ldr	r3, [pc, #760]	; (8026334 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802603a:	681a      	ldr	r2, [r3, #0]
 802603c:	4bbe      	ldr	r3, [pc, #760]	; (8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802603e:	0951      	lsrs	r1, r2, #5
 8026040:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026044:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026048:	430b      	orrs	r3, r1
 802604a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802604e:	4313      	orrs	r3, r2
 8026050:	f8a8 3000 	strh.w	r3, [r8]
 8026054:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026056:	441c      	add	r4, r3
 8026058:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802605a:	441e      	add	r6, r3
 802605c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802605e:	3b01      	subs	r3, #1
 8026060:	f108 0802 	add.w	r8, r8, #2
 8026064:	9309      	str	r3, [sp, #36]	; 0x24
 8026066:	e76c      	b.n	8025f42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026068:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802606a:	441c      	add	r4, r3
 802606c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802606e:	3d01      	subs	r5, #1
 8026070:	441e      	add	r6, r3
 8026072:	f109 0902 	add.w	r9, r9, #2
 8026076:	e744      	b.n	8025f02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026078:	d021      	beq.n	80260be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802607a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802607c:	1e6b      	subs	r3, r5, #1
 802607e:	fb00 4003 	mla	r0, r0, r3, r4
 8026082:	1400      	asrs	r0, r0, #16
 8026084:	f53f af59 	bmi.w	8025f3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026088:	3901      	subs	r1, #1
 802608a:	4288      	cmp	r0, r1
 802608c:	f6bf af55 	bge.w	8025f3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026090:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026092:	fb01 6303 	mla	r3, r1, r3, r6
 8026096:	141b      	asrs	r3, r3, #16
 8026098:	f53f af4f 	bmi.w	8025f3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802609c:	3a01      	subs	r2, #1
 802609e:	4293      	cmp	r3, r2
 80260a0:	f6bf af4b 	bge.w	8025f3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80260a4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80260a8:	9308      	str	r3, [sp, #32]
 80260aa:	46a8      	mov	r8, r5
 80260ac:	46ce      	mov	lr, r9
 80260ae:	f1b8 0f00 	cmp.w	r8, #0
 80260b2:	f300 80b5 	bgt.w	8026220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80260b6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80260ba:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80260be:	9b07      	ldr	r3, [sp, #28]
 80260c0:	2b00      	cmp	r3, #0
 80260c2:	f340 817d 	ble.w	80263c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80260c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80260ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80260ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80260d2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80260d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80260d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80260dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80260e0:	eef0 6a62 	vmov.f32	s13, s5
 80260e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80260e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80260ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80260f0:	ee16 4a90 	vmov	r4, s13
 80260f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80260f8:	eef0 6a43 	vmov.f32	s13, s6
 80260fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026100:	ee12 2a90 	vmov	r2, s5
 8026104:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026108:	fb92 f3f3 	sdiv	r3, r2, r3
 802610c:	ee13 2a10 	vmov	r2, s6
 8026110:	931f      	str	r3, [sp, #124]	; 0x7c
 8026112:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026114:	fb92 f3f3 	sdiv	r3, r2, r3
 8026118:	9320      	str	r3, [sp, #128]	; 0x80
 802611a:	9b07      	ldr	r3, [sp, #28]
 802611c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802611e:	3b01      	subs	r3, #1
 8026120:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026124:	9307      	str	r3, [sp, #28]
 8026126:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026128:	ee16 6a90 	vmov	r6, s13
 802612c:	bf14      	ite	ne
 802612e:	461d      	movne	r5, r3
 8026130:	4615      	moveq	r5, r2
 8026132:	eeb0 3a67 	vmov.f32	s6, s15
 8026136:	eef0 2a47 	vmov.f32	s5, s14
 802613a:	e6d3      	b.n	8025ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802613c:	2900      	cmp	r1, #0
 802613e:	f43f af5c 	beq.w	8025ffa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026142:	eb0a 0003 	add.w	r0, sl, r3
 8026146:	0843      	lsrs	r3, r0, #1
 8026148:	07c0      	lsls	r0, r0, #31
 802614a:	5cfb      	ldrb	r3, [r7, r3]
 802614c:	bf54      	ite	pl
 802614e:	f003 030f 	andpl.w	r3, r3, #15
 8026152:	111b      	asrmi	r3, r3, #4
 8026154:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026158:	b2db      	uxtb	r3, r3
 802615a:	930a      	str	r3, [sp, #40]	; 0x28
 802615c:	e74d      	b.n	8025ffa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802615e:	2b00      	cmp	r3, #0
 8026160:	f43f af78 	beq.w	8026054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026164:	4a73      	ldr	r2, [pc, #460]	; (8026334 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026166:	f8b8 c000 	ldrh.w	ip, [r8]
 802616a:	6810      	ldr	r0, [r2, #0]
 802616c:	fa1f fe83 	uxth.w	lr, r3
 8026170:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026174:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026178:	43db      	mvns	r3, r3
 802617a:	b2db      	uxtb	r3, r3
 802617c:	fb12 f20e 	smulbb	r2, r2, lr
 8026180:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026184:	fb01 2103 	mla	r1, r1, r3, r2
 8026188:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802618c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026190:	b2c0      	uxtb	r0, r0
 8026192:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026196:	fb1b fb0e 	smulbb	fp, fp, lr
 802619a:	b289      	uxth	r1, r1
 802619c:	fb10 fe0e 	smulbb	lr, r0, lr
 80261a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80261a4:	fa5f fc8c 	uxtb.w	ip, ip
 80261a8:	fb02 b203 	mla	r2, r2, r3, fp
 80261ac:	1c48      	adds	r0, r1, #1
 80261ae:	fb0c e303 	mla	r3, ip, r3, lr
 80261b2:	b292      	uxth	r2, r2
 80261b4:	b29b      	uxth	r3, r3
 80261b6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80261ba:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80261be:	f102 0b01 	add.w	fp, r2, #1
 80261c2:	1c59      	adds	r1, r3, #1
 80261c4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80261c8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80261cc:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80261d0:	0952      	lsrs	r2, r2, #5
 80261d2:	4301      	orrs	r1, r0
 80261d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261d8:	4311      	orrs	r1, r2
 80261da:	f8a8 1000 	strh.w	r1, [r8]
 80261de:	e739      	b.n	8026054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261e0:	f113 0b01 	adds.w	fp, r3, #1
 80261e4:	f53f af36 	bmi.w	8026054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261e8:	45dc      	cmp	ip, fp
 80261ea:	f6ff af33 	blt.w	8026054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261ee:	f110 0b01 	adds.w	fp, r0, #1
 80261f2:	f53f af2f 	bmi.w	8026054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261f6:	45de      	cmp	lr, fp
 80261f8:	f6ff af2c 	blt.w	8026054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80261fc:	9a08      	ldr	r2, [sp, #32]
 80261fe:	9302      	str	r3, [sp, #8]
 8026200:	fa0f f38e 	sxth.w	r3, lr
 8026204:	9301      	str	r3, [sp, #4]
 8026206:	fa0f f38c 	sxth.w	r3, ip
 802620a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802620e:	9105      	str	r1, [sp, #20]
 8026210:	9300      	str	r3, [sp, #0]
 8026212:	463a      	mov	r2, r7
 8026214:	4653      	mov	r3, sl
 8026216:	4641      	mov	r1, r8
 8026218:	9811      	ldr	r0, [sp, #68]	; 0x44
 802621a:	f7ff fd73 	bl	8025d04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802621e:	e719      	b.n	8026054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026220:	9906      	ldr	r1, [sp, #24]
 8026222:	1422      	asrs	r2, r4, #16
 8026224:	1433      	asrs	r3, r6, #16
 8026226:	fb01 2303 	mla	r3, r1, r3, r2
 802622a:	085a      	lsrs	r2, r3, #1
 802622c:	07d9      	lsls	r1, r3, #31
 802622e:	5cba      	ldrb	r2, [r7, r2]
 8026230:	bf54      	ite	pl
 8026232:	f002 020f 	andpl.w	r2, r2, #15
 8026236:	1112      	asrmi	r2, r2, #4
 8026238:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802623c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026240:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026244:	b2d2      	uxtb	r2, r2
 8026246:	2800      	cmp	r0, #0
 8026248:	d062      	beq.n	8026310 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802624a:	f103 0a01 	add.w	sl, r3, #1
 802624e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026252:	f01a 0f01 	tst.w	sl, #1
 8026256:	5c79      	ldrb	r1, [r7, r1]
 8026258:	bf0c      	ite	eq
 802625a:	f001 010f 	andeq.w	r1, r1, #15
 802625e:	1109      	asrne	r1, r1, #4
 8026260:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026264:	b2c9      	uxtb	r1, r1
 8026266:	910f      	str	r1, [sp, #60]	; 0x3c
 8026268:	f1bc 0f00 	cmp.w	ip, #0
 802626c:	d019      	beq.n	80262a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802626e:	9908      	ldr	r1, [sp, #32]
 8026270:	440b      	add	r3, r1
 8026272:	0859      	lsrs	r1, r3, #1
 8026274:	f013 0f01 	tst.w	r3, #1
 8026278:	5c79      	ldrb	r1, [r7, r1]
 802627a:	bf0c      	ite	eq
 802627c:	f001 010f 	andeq.w	r1, r1, #15
 8026280:	1109      	asrne	r1, r1, #4
 8026282:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026286:	b2c9      	uxtb	r1, r1
 8026288:	3301      	adds	r3, #1
 802628a:	910b      	str	r1, [sp, #44]	; 0x2c
 802628c:	0859      	lsrs	r1, r3, #1
 802628e:	07db      	lsls	r3, r3, #31
 8026290:	5c79      	ldrb	r1, [r7, r1]
 8026292:	bf54      	ite	pl
 8026294:	f001 010f 	andpl.w	r1, r1, #15
 8026298:	1109      	asrmi	r1, r1, #4
 802629a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802629e:	b2c9      	uxtb	r1, r1
 80262a0:	9110      	str	r1, [sp, #64]	; 0x40
 80262a2:	b280      	uxth	r0, r0
 80262a4:	fa1f fc8c 	uxth.w	ip, ip
 80262a8:	fb00 f30c 	mul.w	r3, r0, ip
 80262ac:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80262b0:	0100      	lsls	r0, r0, #4
 80262b2:	fa1f fc8c 	uxth.w	ip, ip
 80262b6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80262ba:	eba1 010c 	sub.w	r1, r1, ip
 80262be:	fa1f fa81 	uxth.w	sl, r1
 80262c2:	1ac0      	subs	r0, r0, r3
 80262c4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80262c6:	b280      	uxth	r0, r0
 80262c8:	4348      	muls	r0, r1
 80262ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80262cc:	fb02 020a 	mla	r2, r2, sl, r0
 80262d0:	fb0c 2c01 	mla	ip, ip, r1, r2
 80262d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80262d6:	fb03 c302 	mla	r3, r3, r2, ip
 80262da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262de:	2bff      	cmp	r3, #255	; 0xff
 80262e0:	d12c      	bne.n	802633c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80262e2:	4b14      	ldr	r3, [pc, #80]	; (8026334 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80262e4:	681a      	ldr	r2, [r3, #0]
 80262e6:	4b14      	ldr	r3, [pc, #80]	; (8026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80262e8:	0951      	lsrs	r1, r2, #5
 80262ea:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80262ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80262f2:	430b      	orrs	r3, r1
 80262f4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80262f8:	4313      	orrs	r3, r2
 80262fa:	f8ae 3000 	strh.w	r3, [lr]
 80262fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026300:	441c      	add	r4, r3
 8026302:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026304:	f10e 0e02 	add.w	lr, lr, #2
 8026308:	441e      	add	r6, r3
 802630a:	f108 38ff 	add.w	r8, r8, #4294967295
 802630e:	e6ce      	b.n	80260ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026310:	f1bc 0f00 	cmp.w	ip, #0
 8026314:	d0c5      	beq.n	80262a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026316:	9908      	ldr	r1, [sp, #32]
 8026318:	440b      	add	r3, r1
 802631a:	0859      	lsrs	r1, r3, #1
 802631c:	07db      	lsls	r3, r3, #31
 802631e:	5c79      	ldrb	r1, [r7, r1]
 8026320:	bf54      	ite	pl
 8026322:	f001 010f 	andpl.w	r1, r1, #15
 8026326:	1109      	asrmi	r1, r1, #4
 8026328:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802632c:	b2c9      	uxtb	r1, r1
 802632e:	910b      	str	r1, [sp, #44]	; 0x2c
 8026330:	e7b7      	b.n	80262a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026332:	bf00      	nop
 8026334:	20012dc4 	.word	0x20012dc4
 8026338:	fffff800 	.word	0xfffff800
 802633c:	2b00      	cmp	r3, #0
 802633e:	d0de      	beq.n	80262fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026340:	4a21      	ldr	r2, [pc, #132]	; (80263c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026342:	f8be c000 	ldrh.w	ip, [lr]
 8026346:	6810      	ldr	r0, [r2, #0]
 8026348:	fa1f fa83 	uxth.w	sl, r3
 802634c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026350:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026354:	43db      	mvns	r3, r3
 8026356:	b2db      	uxtb	r3, r3
 8026358:	fb12 f20a 	smulbb	r2, r2, sl
 802635c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026360:	fb01 2103 	mla	r1, r1, r3, r2
 8026364:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026368:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802636c:	b2c0      	uxtb	r0, r0
 802636e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026372:	fa5f fc8c 	uxtb.w	ip, ip
 8026376:	fb10 f00a 	smulbb	r0, r0, sl
 802637a:	fb0c 0003 	mla	r0, ip, r3, r0
 802637e:	b289      	uxth	r1, r1
 8026380:	fb1b fb0a 	smulbb	fp, fp, sl
 8026384:	b280      	uxth	r0, r0
 8026386:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802638a:	fb02 b203 	mla	r2, r2, r3, fp
 802638e:	1c4b      	adds	r3, r1, #1
 8026390:	f100 0b01 	add.w	fp, r0, #1
 8026394:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026398:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802639c:	b292      	uxth	r2, r2
 802639e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80263a2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80263a6:	ea4b 0101 	orr.w	r1, fp, r1
 80263aa:	f102 0b01 	add.w	fp, r2, #1
 80263ae:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80263b2:	0952      	lsrs	r2, r2, #5
 80263b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80263b8:	4311      	orrs	r1, r2
 80263ba:	f8ae 1000 	strh.w	r1, [lr]
 80263be:	e79e      	b.n	80262fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80263c0:	b013      	add	sp, #76	; 0x4c
 80263c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80263c6:	bf00      	nop
 80263c8:	20012dc4 	.word	0x20012dc4

080263cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80263cc:	b570      	push	{r4, r5, r6, lr}
 80263ce:	1208      	asrs	r0, r1, #8
 80263d0:	b29e      	uxth	r6, r3
 80263d2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80263d6:	1213      	asrs	r3, r2, #8
 80263d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80263dc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80263e0:	fb13 f305 	smulbb	r3, r3, r5
 80263e4:	fb10 f006 	smulbb	r0, r0, r6
 80263e8:	4418      	add	r0, r3
 80263ea:	10cc      	asrs	r4, r1, #3
 80263ec:	10d3      	asrs	r3, r2, #3
 80263ee:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80263f2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80263f6:	fb13 f305 	smulbb	r3, r3, r5
 80263fa:	fb14 f406 	smulbb	r4, r4, r6
 80263fe:	00c9      	lsls	r1, r1, #3
 8026400:	00d2      	lsls	r2, r2, #3
 8026402:	441c      	add	r4, r3
 8026404:	b2d2      	uxtb	r2, r2
 8026406:	b2cb      	uxtb	r3, r1
 8026408:	fb12 f205 	smulbb	r2, r2, r5
 802640c:	b280      	uxth	r0, r0
 802640e:	fb13 f306 	smulbb	r3, r3, r6
 8026412:	4413      	add	r3, r2
 8026414:	1c42      	adds	r2, r0, #1
 8026416:	b29b      	uxth	r3, r3
 8026418:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802641c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026420:	1c58      	adds	r0, r3, #1
 8026422:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026426:	b2a4      	uxth	r4, r4
 8026428:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802642c:	4310      	orrs	r0, r2
 802642e:	1c62      	adds	r2, r4, #1
 8026430:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026434:	0964      	lsrs	r4, r4, #5
 8026436:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802643a:	4320      	orrs	r0, r4
 802643c:	bd70      	pop	{r4, r5, r6, pc}
	...

08026440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026444:	b08f      	sub	sp, #60	; 0x3c
 8026446:	461c      	mov	r4, r3
 8026448:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802644c:	9004      	str	r0, [sp, #16]
 802644e:	460d      	mov	r5, r1
 8026450:	4616      	mov	r6, r2
 8026452:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026454:	2f00      	cmp	r7, #0
 8026456:	f000 80f6 	beq.w	8026646 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802645a:	6820      	ldr	r0, [r4, #0]
 802645c:	6861      	ldr	r1, [r4, #4]
 802645e:	aa0a      	add	r2, sp, #40	; 0x28
 8026460:	c203      	stmia	r2!, {r0, r1}
 8026462:	6818      	ldr	r0, [r3, #0]
 8026464:	6859      	ldr	r1, [r3, #4]
 8026466:	aa0c      	add	r2, sp, #48	; 0x30
 8026468:	c203      	stmia	r2!, {r0, r1}
 802646a:	a80a      	add	r0, sp, #40	; 0x28
 802646c:	f7ef fa9c 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026470:	4621      	mov	r1, r4
 8026472:	a80c      	add	r0, sp, #48	; 0x30
 8026474:	f7ef fadc 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026478:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802647c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026480:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026484:	f002 0301 	and.w	r3, r2, #1
 8026488:	9306      	str	r3, [sp, #24]
 802648a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802648e:	f003 0101 	and.w	r1, r3, #1
 8026492:	9105      	str	r1, [sp, #20]
 8026494:	9805      	ldr	r0, [sp, #20]
 8026496:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802649a:	4403      	add	r3, r0
 802649c:	fb01 2303 	mla	r3, r1, r3, r2
 80264a0:	f04f 0802 	mov.w	r8, #2
 80264a4:	fb93 f3f8 	sdiv	r3, r3, r8
 80264a8:	441d      	add	r5, r3
 80264aa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80264ae:	441a      	add	r2, r3
 80264b0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80264b4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80264b8:	4419      	add	r1, r3
 80264ba:	4b64      	ldr	r3, [pc, #400]	; (802664c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80264bc:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80264c0:	6818      	ldr	r0, [r3, #0]
 80264c2:	6803      	ldr	r3, [r0, #0]
 80264c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80264c6:	4798      	blx	r3
 80264c8:	4a61      	ldr	r2, [pc, #388]	; (8026650 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80264ca:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80264ce:	8813      	ldrh	r3, [r2, #0]
 80264d0:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80264d4:	2fff      	cmp	r7, #255	; 0xff
 80264d6:	fb03 a404 	mla	r4, r3, r4, sl
 80264da:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80264de:	f106 0604 	add.w	r6, r6, #4
 80264e2:	4611      	mov	r1, r2
 80264e4:	fb03 fb0b 	mul.w	fp, r3, fp
 80264e8:	d06b      	beq.n	80265c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80264ea:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80264ee:	9303      	str	r3, [sp, #12]
 80264f0:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80264f4:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80264f8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80264fc:	9b07      	ldr	r3, [sp, #28]
 80264fe:	42a3      	cmp	r3, r4
 8026500:	f240 809c 	bls.w	802663c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026504:	9b06      	ldr	r3, [sp, #24]
 8026506:	2b00      	cmp	r3, #0
 8026508:	d039      	beq.n	802657e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802650a:	782b      	ldrb	r3, [r5, #0]
 802650c:	8822      	ldrh	r2, [r4, #0]
 802650e:	9804      	ldr	r0, [sp, #16]
 8026510:	f003 030f 	and.w	r3, r3, #15
 8026514:	f105 0801 	add.w	r8, r5, #1
 8026518:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802651c:	9b03      	ldr	r3, [sp, #12]
 802651e:	9300      	str	r3, [sp, #0]
 8026520:	463b      	mov	r3, r7
 8026522:	f7ff ff53 	bl	80263cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026526:	f824 0b02 	strh.w	r0, [r4], #2
 802652a:	f109 3bff 	add.w	fp, r9, #4294967295
 802652e:	f1bb 0f01 	cmp.w	fp, #1
 8026532:	46a2      	mov	sl, r4
 8026534:	f104 0404 	add.w	r4, r4, #4
 8026538:	dd24      	ble.n	8026584 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802653a:	f898 3000 	ldrb.w	r3, [r8]
 802653e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026542:	9804      	ldr	r0, [sp, #16]
 8026544:	091b      	lsrs	r3, r3, #4
 8026546:	f1ab 0b02 	sub.w	fp, fp, #2
 802654a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802654e:	9b03      	ldr	r3, [sp, #12]
 8026550:	9300      	str	r3, [sp, #0]
 8026552:	463b      	mov	r3, r7
 8026554:	f7ff ff3a 	bl	80263cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026558:	f824 0c04 	strh.w	r0, [r4, #-4]
 802655c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026560:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026564:	9804      	ldr	r0, [sp, #16]
 8026566:	f003 030f 	and.w	r3, r3, #15
 802656a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802656e:	9b03      	ldr	r3, [sp, #12]
 8026570:	9300      	str	r3, [sp, #0]
 8026572:	463b      	mov	r3, r7
 8026574:	f7ff ff2a 	bl	80263cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026578:	f824 0c02 	strh.w	r0, [r4, #-2]
 802657c:	e7d7      	b.n	802652e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802657e:	46a8      	mov	r8, r5
 8026580:	46cb      	mov	fp, r9
 8026582:	e7d4      	b.n	802652e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026584:	d10e      	bne.n	80265a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026586:	f898 3000 	ldrb.w	r3, [r8]
 802658a:	f8ba 2000 	ldrh.w	r2, [sl]
 802658e:	9804      	ldr	r0, [sp, #16]
 8026590:	091b      	lsrs	r3, r3, #4
 8026592:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026596:	9b03      	ldr	r3, [sp, #12]
 8026598:	9300      	str	r3, [sp, #0]
 802659a:	463b      	mov	r3, r7
 802659c:	f7ff ff16 	bl	80263cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80265a0:	f82a 0b02 	strh.w	r0, [sl], #2
 80265a4:	9b08      	ldr	r3, [sp, #32]
 80265a6:	9a05      	ldr	r2, [sp, #20]
 80265a8:	881c      	ldrh	r4, [r3, #0]
 80265aa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80265ae:	eba4 0409 	sub.w	r4, r4, r9
 80265b2:	4413      	add	r3, r2
 80265b4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80265b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80265ba:	fb93 f3f2 	sdiv	r3, r3, r2
 80265be:	441d      	add	r5, r3
 80265c0:	e79c      	b.n	80264fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80265c2:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80265c6:	45a3      	cmp	fp, r4
 80265c8:	d938      	bls.n	802663c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80265ca:	9b06      	ldr	r3, [sp, #24]
 80265cc:	b1f3      	cbz	r3, 802660c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80265ce:	782b      	ldrb	r3, [r5, #0]
 80265d0:	f003 030f 	and.w	r3, r3, #15
 80265d4:	1c6a      	adds	r2, r5, #1
 80265d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80265da:	8023      	strh	r3, [r4, #0]
 80265dc:	f109 30ff 	add.w	r0, r9, #4294967295
 80265e0:	3402      	adds	r4, #2
 80265e2:	2801      	cmp	r0, #1
 80265e4:	4623      	mov	r3, r4
 80265e6:	f104 0404 	add.w	r4, r4, #4
 80265ea:	dd12      	ble.n	8026612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80265ec:	7813      	ldrb	r3, [r2, #0]
 80265ee:	091b      	lsrs	r3, r3, #4
 80265f0:	3802      	subs	r0, #2
 80265f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80265f6:	f824 3c04 	strh.w	r3, [r4, #-4]
 80265fa:	f812 3b01 	ldrb.w	r3, [r2], #1
 80265fe:	f003 030f 	and.w	r3, r3, #15
 8026602:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026606:	f824 3c02 	strh.w	r3, [r4, #-2]
 802660a:	e7ea      	b.n	80265e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802660c:	462a      	mov	r2, r5
 802660e:	4648      	mov	r0, r9
 8026610:	e7e7      	b.n	80265e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026612:	d106      	bne.n	8026622 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026614:	7812      	ldrb	r2, [r2, #0]
 8026616:	0912      	lsrs	r2, r2, #4
 8026618:	3302      	adds	r3, #2
 802661a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802661e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026622:	880c      	ldrh	r4, [r1, #0]
 8026624:	9a05      	ldr	r2, [sp, #20]
 8026626:	eba4 0409 	sub.w	r4, r4, r9
 802662a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802662e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026632:	4413      	add	r3, r2
 8026634:	fb93 f3f8 	sdiv	r3, r3, r8
 8026638:	441d      	add	r5, r3
 802663a:	e7c4      	b.n	80265c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802663c:	4b03      	ldr	r3, [pc, #12]	; (802664c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802663e:	6818      	ldr	r0, [r3, #0]
 8026640:	6803      	ldr	r3, [r0, #0]
 8026642:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026644:	4798      	blx	r3
 8026646:	b00f      	add	sp, #60	; 0x3c
 8026648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802664c:	20012db4 	.word	0x20012db4
 8026650:	20012dae 	.word	0x20012dae

08026654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026654:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026656:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802665a:	2dff      	cmp	r5, #255	; 0xff
 802665c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8026660:	d10c      	bne.n	802667c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026662:	2bff      	cmp	r3, #255	; 0xff
 8026664:	d10a      	bne.n	802667c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026666:	4b25      	ldr	r3, [pc, #148]	; (80266fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026668:	0948      	lsrs	r0, r1, #5
 802666a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802666e:	403b      	ands	r3, r7
 8026670:	4318      	orrs	r0, r3
 8026672:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026676:	4308      	orrs	r0, r1
 8026678:	b280      	uxth	r0, r0
 802667a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802667c:	fb15 f503 	smulbb	r5, r5, r3
 8026680:	b2ab      	uxth	r3, r5
 8026682:	1c5d      	adds	r5, r3, #1
 8026684:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026688:	1214      	asrs	r4, r2, #8
 802668a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802668e:	fa1f fc85 	uxth.w	ip, r5
 8026692:	10d6      	asrs	r6, r2, #3
 8026694:	00d0      	lsls	r0, r2, #3
 8026696:	43ed      	mvns	r5, r5
 8026698:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802669c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80266a0:	b2eb      	uxtb	r3, r5
 80266a2:	b2c0      	uxtb	r0, r0
 80266a4:	fb12 f20c 	smulbb	r2, r2, ip
 80266a8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80266ac:	fb04 2403 	mla	r4, r4, r3, r2
 80266b0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80266b4:	b2c8      	uxtb	r0, r1
 80266b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80266ba:	b2fd      	uxtb	r5, r7
 80266bc:	fb10 f00c 	smulbb	r0, r0, ip
 80266c0:	b2a4      	uxth	r4, r4
 80266c2:	fb02 0003 	mla	r0, r2, r3, r0
 80266c6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80266ca:	fb15 f50c 	smulbb	r5, r5, ip
 80266ce:	fb06 5503 	mla	r5, r6, r3, r5
 80266d2:	b283      	uxth	r3, r0
 80266d4:	1c60      	adds	r0, r4, #1
 80266d6:	b2ad      	uxth	r5, r5
 80266d8:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80266dc:	1c58      	adds	r0, r3, #1
 80266de:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80266e2:	1c6b      	adds	r3, r5, #1
 80266e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80266e8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80266ec:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80266f0:	096d      	lsrs	r5, r5, #5
 80266f2:	4320      	orrs	r0, r4
 80266f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80266f8:	4328      	orrs	r0, r5
 80266fa:	e7be      	b.n	802667a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80266fc:	00fff800 	.word	0x00fff800

08026700 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026704:	461c      	mov	r4, r3
 8026706:	b08d      	sub	sp, #52	; 0x34
 8026708:	460d      	mov	r5, r1
 802670a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802670c:	6861      	ldr	r1, [r4, #4]
 802670e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8026712:	4680      	mov	r8, r0
 8026714:	6820      	ldr	r0, [r4, #0]
 8026716:	4616      	mov	r6, r2
 8026718:	aa08      	add	r2, sp, #32
 802671a:	c203      	stmia	r2!, {r0, r1}
 802671c:	6818      	ldr	r0, [r3, #0]
 802671e:	6859      	ldr	r1, [r3, #4]
 8026720:	aa0a      	add	r2, sp, #40	; 0x28
 8026722:	c203      	stmia	r2!, {r0, r1}
 8026724:	a808      	add	r0, sp, #32
 8026726:	f7ef f93f 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802672a:	4621      	mov	r1, r4
 802672c:	a80a      	add	r0, sp, #40	; 0x28
 802672e:	f7ef f97f 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026732:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8026736:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 802673a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802673e:	f002 0301 	and.w	r3, r2, #1
 8026742:	9303      	str	r3, [sp, #12]
 8026744:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026748:	f003 0101 	and.w	r1, r3, #1
 802674c:	9102      	str	r1, [sp, #8]
 802674e:	9802      	ldr	r0, [sp, #8]
 8026750:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8026754:	4403      	add	r3, r0
 8026756:	fb01 2303 	mla	r3, r1, r3, r2
 802675a:	f04f 0a02 	mov.w	sl, #2
 802675e:	fb93 f3fa 	sdiv	r3, r3, sl
 8026762:	441d      	add	r5, r3
 8026764:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026768:	441a      	add	r2, r3
 802676a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802676e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8026772:	4a3f      	ldr	r2, [pc, #252]	; (8026870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026774:	9205      	str	r2, [sp, #20]
 8026776:	4419      	add	r1, r3
 8026778:	6810      	ldr	r0, [r2, #0]
 802677a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802677e:	6803      	ldr	r3, [r0, #0]
 8026780:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026782:	4798      	blx	r3
 8026784:	4b3b      	ldr	r3, [pc, #236]	; (8026874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026786:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 802678a:	8819      	ldrh	r1, [r3, #0]
 802678c:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026790:	fb01 c404 	mla	r4, r1, r4, ip
 8026794:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026798:	434f      	muls	r7, r1
 802679a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802679e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80267a2:	3604      	adds	r6, #4
 80267a4:	9204      	str	r2, [sp, #16]
 80267a6:	9b04      	ldr	r3, [sp, #16]
 80267a8:	429c      	cmp	r4, r3
 80267aa:	d258      	bcs.n	802685e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80267ac:	9b03      	ldr	r3, [sp, #12]
 80267ae:	2b00      	cmp	r3, #0
 80267b0:	d034      	beq.n	802681c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80267b2:	782b      	ldrb	r3, [r5, #0]
 80267b4:	f003 030f 	and.w	r3, r3, #15
 80267b8:	1c6f      	adds	r7, r5, #1
 80267ba:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80267be:	0e0b      	lsrs	r3, r1, #24
 80267c0:	d006      	beq.n	80267d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80267c2:	8822      	ldrh	r2, [r4, #0]
 80267c4:	9300      	str	r3, [sp, #0]
 80267c6:	4640      	mov	r0, r8
 80267c8:	464b      	mov	r3, r9
 80267ca:	f7ff ff43 	bl	8026654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80267ce:	8020      	strh	r0, [r4, #0]
 80267d0:	3402      	adds	r4, #2
 80267d2:	f10b 3aff 	add.w	sl, fp, #4294967295
 80267d6:	f1ba 0f01 	cmp.w	sl, #1
 80267da:	dd22      	ble.n	8026822 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80267dc:	783b      	ldrb	r3, [r7, #0]
 80267de:	091b      	lsrs	r3, r3, #4
 80267e0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80267e4:	0e0b      	lsrs	r3, r1, #24
 80267e6:	d006      	beq.n	80267f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80267e8:	8822      	ldrh	r2, [r4, #0]
 80267ea:	9300      	str	r3, [sp, #0]
 80267ec:	4640      	mov	r0, r8
 80267ee:	464b      	mov	r3, r9
 80267f0:	f7ff ff30 	bl	8026654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80267f4:	8020      	strh	r0, [r4, #0]
 80267f6:	f817 3b01 	ldrb.w	r3, [r7], #1
 80267fa:	f003 030f 	and.w	r3, r3, #15
 80267fe:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026802:	0e0b      	lsrs	r3, r1, #24
 8026804:	d006      	beq.n	8026814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026806:	8862      	ldrh	r2, [r4, #2]
 8026808:	9300      	str	r3, [sp, #0]
 802680a:	4640      	mov	r0, r8
 802680c:	464b      	mov	r3, r9
 802680e:	f7ff ff21 	bl	8026654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026812:	8060      	strh	r0, [r4, #2]
 8026814:	3404      	adds	r4, #4
 8026816:	f1aa 0a02 	sub.w	sl, sl, #2
 802681a:	e7dc      	b.n	80267d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802681c:	462f      	mov	r7, r5
 802681e:	46da      	mov	sl, fp
 8026820:	e7d9      	b.n	80267d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026822:	d10d      	bne.n	8026840 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026824:	783b      	ldrb	r3, [r7, #0]
 8026826:	091b      	lsrs	r3, r3, #4
 8026828:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802682c:	0e0b      	lsrs	r3, r1, #24
 802682e:	d006      	beq.n	802683e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8026830:	8822      	ldrh	r2, [r4, #0]
 8026832:	9300      	str	r3, [sp, #0]
 8026834:	4640      	mov	r0, r8
 8026836:	464b      	mov	r3, r9
 8026838:	f7ff ff0c 	bl	8026654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802683c:	8020      	strh	r0, [r4, #0]
 802683e:	3402      	adds	r4, #2
 8026840:	9b06      	ldr	r3, [sp, #24]
 8026842:	9a02      	ldr	r2, [sp, #8]
 8026844:	881b      	ldrh	r3, [r3, #0]
 8026846:	eba3 030b 	sub.w	r3, r3, fp
 802684a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802684e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026852:	4413      	add	r3, r2
 8026854:	9a07      	ldr	r2, [sp, #28]
 8026856:	fb93 f3f2 	sdiv	r3, r3, r2
 802685a:	441d      	add	r5, r3
 802685c:	e7a3      	b.n	80267a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802685e:	9b05      	ldr	r3, [sp, #20]
 8026860:	6818      	ldr	r0, [r3, #0]
 8026862:	6803      	ldr	r3, [r0, #0]
 8026864:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026866:	4798      	blx	r3
 8026868:	b00d      	add	sp, #52	; 0x34
 802686a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802686e:	bf00      	nop
 8026870:	20012db4 	.word	0x20012db4
 8026874:	20012dae 	.word	0x20012dae

08026878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026878:	b570      	push	{r4, r5, r6, lr}
 802687a:	1214      	asrs	r4, r2, #8
 802687c:	788d      	ldrb	r5, [r1, #2]
 802687e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026882:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026886:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802688a:	fb15 f503 	smulbb	r5, r5, r3
 802688e:	fb04 5506 	mla	r5, r4, r6, r5
 8026892:	10d0      	asrs	r0, r2, #3
 8026894:	784c      	ldrb	r4, [r1, #1]
 8026896:	7809      	ldrb	r1, [r1, #0]
 8026898:	00d2      	lsls	r2, r2, #3
 802689a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802689e:	b2d2      	uxtb	r2, r2
 80268a0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80268a4:	fb14 f403 	smulbb	r4, r4, r3
 80268a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80268ac:	fb11 f303 	smulbb	r3, r1, r3
 80268b0:	fb00 4406 	mla	r4, r0, r6, r4
 80268b4:	fb02 3306 	mla	r3, r2, r6, r3
 80268b8:	b2ad      	uxth	r5, r5
 80268ba:	b29b      	uxth	r3, r3
 80268bc:	b2a4      	uxth	r4, r4
 80268be:	1c68      	adds	r0, r5, #1
 80268c0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80268c4:	1c62      	adds	r2, r4, #1
 80268c6:	1c58      	adds	r0, r3, #1
 80268c8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80268cc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80268d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80268d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80268d8:	0964      	lsrs	r4, r4, #5
 80268da:	4328      	orrs	r0, r5
 80268dc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80268e0:	4320      	orrs	r0, r4
 80268e2:	bd70      	pop	{r4, r5, r6, pc}

080268e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80268e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80268e8:	b08f      	sub	sp, #60	; 0x3c
 80268ea:	461c      	mov	r4, r3
 80268ec:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80268f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80268f2:	4682      	mov	sl, r0
 80268f4:	460e      	mov	r6, r1
 80268f6:	4615      	mov	r5, r2
 80268f8:	2f00      	cmp	r7, #0
 80268fa:	f000 8142 	beq.w	8026b82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80268fe:	6820      	ldr	r0, [r4, #0]
 8026900:	6861      	ldr	r1, [r4, #4]
 8026902:	aa0a      	add	r2, sp, #40	; 0x28
 8026904:	c203      	stmia	r2!, {r0, r1}
 8026906:	6818      	ldr	r0, [r3, #0]
 8026908:	6859      	ldr	r1, [r3, #4]
 802690a:	aa0c      	add	r2, sp, #48	; 0x30
 802690c:	c203      	stmia	r2!, {r0, r1}
 802690e:	a80a      	add	r0, sp, #40	; 0x28
 8026910:	f7ef f84a 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026914:	4621      	mov	r1, r4
 8026916:	a80c      	add	r0, sp, #48	; 0x30
 8026918:	f7ef f88a 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802691c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026920:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026924:	f002 0301 	and.w	r3, r2, #1
 8026928:	9306      	str	r3, [sp, #24]
 802692a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802692e:	f003 0101 	and.w	r1, r3, #1
 8026932:	9105      	str	r1, [sp, #20]
 8026934:	9805      	ldr	r0, [sp, #20]
 8026936:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802693a:	4403      	add	r3, r0
 802693c:	fb01 2303 	mla	r3, r1, r3, r2
 8026940:	f04f 0802 	mov.w	r8, #2
 8026944:	fb93 f3f8 	sdiv	r3, r3, r8
 8026948:	441e      	add	r6, r3
 802694a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802694e:	441a      	add	r2, r3
 8026950:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026954:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026958:	4419      	add	r1, r3
 802695a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802695e:	9303      	str	r3, [sp, #12]
 8026960:	4b89      	ldr	r3, [pc, #548]	; (8026b88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026962:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026966:	6818      	ldr	r0, [r3, #0]
 8026968:	6803      	ldr	r3, [r0, #0]
 802696a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802696c:	4798      	blx	r3
 802696e:	4a87      	ldr	r2, [pc, #540]	; (8026b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026970:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026974:	8813      	ldrh	r3, [r2, #0]
 8026976:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 802697a:	2fff      	cmp	r7, #255	; 0xff
 802697c:	fb03 9404 	mla	r4, r3, r4, r9
 8026980:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026984:	f105 0504 	add.w	r5, r5, #4
 8026988:	4694      	mov	ip, r2
 802698a:	fb03 f30b 	mul.w	r3, r3, fp
 802698e:	d071      	beq.n	8026a74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026990:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026994:	43f9      	mvns	r1, r7
 8026996:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802699a:	b2c9      	uxtb	r1, r1
 802699c:	9104      	str	r1, [sp, #16]
 802699e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80269a2:	9b07      	ldr	r3, [sp, #28]
 80269a4:	42a3      	cmp	r3, r4
 80269a6:	f240 80e7 	bls.w	8026b78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80269aa:	9b06      	ldr	r3, [sp, #24]
 80269ac:	2b00      	cmp	r3, #0
 80269ae:	d03d      	beq.n	8026a2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80269b0:	7831      	ldrb	r1, [r6, #0]
 80269b2:	9b04      	ldr	r3, [sp, #16]
 80269b4:	8822      	ldrh	r2, [r4, #0]
 80269b6:	9300      	str	r3, [sp, #0]
 80269b8:	f001 010f 	and.w	r1, r1, #15
 80269bc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80269c0:	463b      	mov	r3, r7
 80269c2:	4429      	add	r1, r5
 80269c4:	4650      	mov	r0, sl
 80269c6:	f7ff ff57 	bl	8026878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80269ca:	9b03      	ldr	r3, [sp, #12]
 80269cc:	f824 0b02 	strh.w	r0, [r4], #2
 80269d0:	f106 0801 	add.w	r8, r6, #1
 80269d4:	f103 3bff 	add.w	fp, r3, #4294967295
 80269d8:	f1bb 0f01 	cmp.w	fp, #1
 80269dc:	46a1      	mov	r9, r4
 80269de:	f104 0404 	add.w	r4, r4, #4
 80269e2:	dd27      	ble.n	8026a34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80269e4:	f898 1000 	ldrb.w	r1, [r8]
 80269e8:	9b04      	ldr	r3, [sp, #16]
 80269ea:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80269ee:	9300      	str	r3, [sp, #0]
 80269f0:	0909      	lsrs	r1, r1, #4
 80269f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80269f6:	463b      	mov	r3, r7
 80269f8:	4429      	add	r1, r5
 80269fa:	4650      	mov	r0, sl
 80269fc:	f7ff ff3c 	bl	8026878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a00:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026a04:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026a08:	9b04      	ldr	r3, [sp, #16]
 8026a0a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026a0e:	9300      	str	r3, [sp, #0]
 8026a10:	f001 010f 	and.w	r1, r1, #15
 8026a14:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a18:	463b      	mov	r3, r7
 8026a1a:	4429      	add	r1, r5
 8026a1c:	4650      	mov	r0, sl
 8026a1e:	f7ff ff2b 	bl	8026878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a22:	f1ab 0b02 	sub.w	fp, fp, #2
 8026a26:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026a2a:	e7d5      	b.n	80269d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026a2c:	46b0      	mov	r8, r6
 8026a2e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026a32:	e7d1      	b.n	80269d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026a34:	d10f      	bne.n	8026a56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026a36:	f898 1000 	ldrb.w	r1, [r8]
 8026a3a:	9b04      	ldr	r3, [sp, #16]
 8026a3c:	f8b9 2000 	ldrh.w	r2, [r9]
 8026a40:	9300      	str	r3, [sp, #0]
 8026a42:	0909      	lsrs	r1, r1, #4
 8026a44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026a48:	463b      	mov	r3, r7
 8026a4a:	4429      	add	r1, r5
 8026a4c:	4650      	mov	r0, sl
 8026a4e:	f7ff ff13 	bl	8026878 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026a52:	f829 0b02 	strh.w	r0, [r9], #2
 8026a56:	9b08      	ldr	r3, [sp, #32]
 8026a58:	9a05      	ldr	r2, [sp, #20]
 8026a5a:	881c      	ldrh	r4, [r3, #0]
 8026a5c:	9b03      	ldr	r3, [sp, #12]
 8026a5e:	1ae4      	subs	r4, r4, r3
 8026a60:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026a64:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026a68:	4413      	add	r3, r2
 8026a6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026a6c:	fb93 f3f2 	sdiv	r3, r3, r2
 8026a70:	441e      	add	r6, r3
 8026a72:	e796      	b.n	80269a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026a74:	4f46      	ldr	r7, [pc, #280]	; (8026b90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026a76:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026a7a:	42a3      	cmp	r3, r4
 8026a7c:	d97c      	bls.n	8026b78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026a7e:	9a06      	ldr	r2, [sp, #24]
 8026a80:	2a00      	cmp	r2, #0
 8026a82:	d054      	beq.n	8026b2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026a84:	7830      	ldrb	r0, [r6, #0]
 8026a86:	f000 000f 	and.w	r0, r0, #15
 8026a8a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026a8e:	eb05 0e00 	add.w	lr, r5, r0
 8026a92:	5c28      	ldrb	r0, [r5, r0]
 8026a94:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026a98:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026a9c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026aa0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026aa4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026aa8:	ea42 020e 	orr.w	r2, r2, lr
 8026aac:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026ab0:	f824 2b02 	strh.w	r2, [r4], #2
 8026ab4:	9a03      	ldr	r2, [sp, #12]
 8026ab6:	1c71      	adds	r1, r6, #1
 8026ab8:	f102 3eff 	add.w	lr, r2, #4294967295
 8026abc:	f1be 0f01 	cmp.w	lr, #1
 8026ac0:	4620      	mov	r0, r4
 8026ac2:	f104 0404 	add.w	r4, r4, #4
 8026ac6:	dd36      	ble.n	8026b36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026ac8:	7808      	ldrb	r0, [r1, #0]
 8026aca:	0900      	lsrs	r0, r0, #4
 8026acc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026ad0:	eb05 0a00 	add.w	sl, r5, r0
 8026ad4:	f1ae 0e02 	sub.w	lr, lr, #2
 8026ad8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026adc:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026ae0:	00d2      	lsls	r2, r2, #3
 8026ae2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026ae6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026aea:	ea49 0202 	orr.w	r2, r9, r2
 8026aee:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026af2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026af6:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026afa:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026afe:	f000 000f 	and.w	r0, r0, #15
 8026b02:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026b06:	eb05 0a00 	add.w	sl, r5, r0
 8026b0a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026b0e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026b12:	00d2      	lsls	r2, r2, #3
 8026b14:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026b18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b1c:	ea49 0202 	orr.w	r2, r9, r2
 8026b20:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026b24:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026b28:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026b2c:	e7c6      	b.n	8026abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026b2e:	4631      	mov	r1, r6
 8026b30:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026b34:	e7c2      	b.n	8026abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026b36:	d111      	bne.n	8026b5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026b38:	7809      	ldrb	r1, [r1, #0]
 8026b3a:	0909      	lsrs	r1, r1, #4
 8026b3c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026b40:	186c      	adds	r4, r5, r1
 8026b42:	5c69      	ldrb	r1, [r5, r1]
 8026b44:	78a2      	ldrb	r2, [r4, #2]
 8026b46:	7864      	ldrb	r4, [r4, #1]
 8026b48:	00e4      	lsls	r4, r4, #3
 8026b4a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026b4e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026b52:	4322      	orrs	r2, r4
 8026b54:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026b58:	f820 2b02 	strh.w	r2, [r0], #2
 8026b5c:	9a03      	ldr	r2, [sp, #12]
 8026b5e:	f8bc 4000 	ldrh.w	r4, [ip]
 8026b62:	9905      	ldr	r1, [sp, #20]
 8026b64:	1aa4      	subs	r4, r4, r2
 8026b66:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026b6a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026b6e:	440a      	add	r2, r1
 8026b70:	fb92 f2f8 	sdiv	r2, r2, r8
 8026b74:	4416      	add	r6, r2
 8026b76:	e780      	b.n	8026a7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026b78:	4b03      	ldr	r3, [pc, #12]	; (8026b88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026b7a:	6818      	ldr	r0, [r3, #0]
 8026b7c:	6803      	ldr	r3, [r0, #0]
 8026b7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026b80:	4798      	blx	r3
 8026b82:	b00f      	add	sp, #60	; 0x3c
 8026b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b88:	20012db4 	.word	0x20012db4
 8026b8c:	20012dae 	.word	0x20012dae
 8026b90:	fffff800 	.word	0xfffff800

08026b94 <CRC_Lock>:
 8026b94:	b530      	push	{r4, r5, lr}
 8026b96:	4a20      	ldr	r2, [pc, #128]	; (8026c18 <CRC_Lock+0x84>)
 8026b98:	6813      	ldr	r3, [r2, #0]
 8026b9a:	f023 0301 	bic.w	r3, r3, #1
 8026b9e:	6013      	str	r3, [r2, #0]
 8026ba0:	4b1e      	ldr	r3, [pc, #120]	; (8026c1c <CRC_Lock+0x88>)
 8026ba2:	681a      	ldr	r2, [r3, #0]
 8026ba4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026ba8:	4022      	ands	r2, r4
 8026baa:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026bae:	42aa      	cmp	r2, r5
 8026bb0:	d005      	beq.n	8026bbe <CRC_Lock+0x2a>
 8026bb2:	681b      	ldr	r3, [r3, #0]
 8026bb4:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026bb8:	4023      	ands	r3, r4
 8026bba:	4293      	cmp	r3, r2
 8026bbc:	d124      	bne.n	8026c08 <CRC_Lock+0x74>
 8026bbe:	4b18      	ldr	r3, [pc, #96]	; (8026c20 <CRC_Lock+0x8c>)
 8026bc0:	681b      	ldr	r3, [r3, #0]
 8026bc2:	bb0b      	cbnz	r3, 8026c08 <CRC_Lock+0x74>
 8026bc4:	4b17      	ldr	r3, [pc, #92]	; (8026c24 <CRC_Lock+0x90>)
 8026bc6:	681a      	ldr	r2, [r3, #0]
 8026bc8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026bcc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026bd0:	d00d      	beq.n	8026bee <CRC_Lock+0x5a>
 8026bd2:	681a      	ldr	r2, [r3, #0]
 8026bd4:	f240 4483 	movw	r4, #1155	; 0x483
 8026bd8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026bdc:	42a2      	cmp	r2, r4
 8026bde:	d006      	beq.n	8026bee <CRC_Lock+0x5a>
 8026be0:	681b      	ldr	r3, [r3, #0]
 8026be2:	f240 4285 	movw	r2, #1157	; 0x485
 8026be6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026bea:	4293      	cmp	r3, r2
 8026bec:	d10c      	bne.n	8026c08 <CRC_Lock+0x74>
 8026bee:	4b0e      	ldr	r3, [pc, #56]	; (8026c28 <CRC_Lock+0x94>)
 8026bf0:	2201      	movs	r2, #1
 8026bf2:	601a      	str	r2, [r3, #0]
 8026bf4:	681a      	ldr	r2, [r3, #0]
 8026bf6:	2a00      	cmp	r2, #0
 8026bf8:	d1fc      	bne.n	8026bf4 <CRC_Lock+0x60>
 8026bfa:	4b0c      	ldr	r3, [pc, #48]	; (8026c2c <CRC_Lock+0x98>)
 8026bfc:	6018      	str	r0, [r3, #0]
 8026bfe:	6818      	ldr	r0, [r3, #0]
 8026c00:	1a43      	subs	r3, r0, r1
 8026c02:	4258      	negs	r0, r3
 8026c04:	4158      	adcs	r0, r3
 8026c06:	bd30      	pop	{r4, r5, pc}
 8026c08:	4b09      	ldr	r3, [pc, #36]	; (8026c30 <CRC_Lock+0x9c>)
 8026c0a:	2201      	movs	r2, #1
 8026c0c:	601a      	str	r2, [r3, #0]
 8026c0e:	681a      	ldr	r2, [r3, #0]
 8026c10:	2a00      	cmp	r2, #0
 8026c12:	d1fc      	bne.n	8026c0e <CRC_Lock+0x7a>
 8026c14:	4b07      	ldr	r3, [pc, #28]	; (8026c34 <CRC_Lock+0xa0>)
 8026c16:	e7f1      	b.n	8026bfc <CRC_Lock+0x68>
 8026c18:	e0002000 	.word	0xe0002000
 8026c1c:	e000ed00 	.word	0xe000ed00
 8026c20:	e0042000 	.word	0xe0042000
 8026c24:	5c001000 	.word	0x5c001000
 8026c28:	58024c08 	.word	0x58024c08
 8026c2c:	58024c00 	.word	0x58024c00
 8026c30:	40023008 	.word	0x40023008
 8026c34:	40023000 	.word	0x40023000

08026c38 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026c38:	6101      	str	r1, [r0, #16]
 8026c3a:	4770      	bx	lr

08026c3c <_ZN8touchgfx8Gestures4tickEv>:
 8026c3c:	7b83      	ldrb	r3, [r0, #14]
 8026c3e:	b14b      	cbz	r3, 8026c54 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026c40:	8903      	ldrh	r3, [r0, #8]
 8026c42:	3301      	adds	r3, #1
 8026c44:	b29b      	uxth	r3, r3
 8026c46:	2b07      	cmp	r3, #7
 8026c48:	8103      	strh	r3, [r0, #8]
 8026c4a:	bf81      	itttt	hi
 8026c4c:	2300      	movhi	r3, #0
 8026c4e:	8143      	strhhi	r3, [r0, #10]
 8026c50:	8183      	strhhi	r3, [r0, #12]
 8026c52:	7383      	strbhi	r3, [r0, #14]
 8026c54:	4770      	bx	lr
	...

08026c58 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026c58:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026c5c:	4698      	mov	r8, r3
 8026c5e:	8883      	ldrh	r3, [r0, #4]
 8026c60:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026c64:	eba8 0303 	sub.w	r3, r8, r3
 8026c68:	b21b      	sxth	r3, r3
 8026c6a:	4604      	mov	r4, r0
 8026c6c:	2b00      	cmp	r3, #0
 8026c6e:	4617      	mov	r7, r2
 8026c70:	4a18      	ldr	r2, [pc, #96]	; (8026cd4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026c72:	9200      	str	r2, [sp, #0]
 8026c74:	bfb8      	it	lt
 8026c76:	425b      	neglt	r3, r3
 8026c78:	8aa2      	ldrh	r2, [r4, #20]
 8026c7a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026c7e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026c82:	b21b      	sxth	r3, r3
 8026c84:	460e      	mov	r6, r1
 8026c86:	4293      	cmp	r3, r2
 8026c88:	88c1      	ldrh	r1, [r0, #6]
 8026c8a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026c8e:	f04f 0000 	mov.w	r0, #0
 8026c92:	f88d 0004 	strb.w	r0, [sp, #4]
 8026c96:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026c9a:	dc07      	bgt.n	8026cac <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026c9c:	1a69      	subs	r1, r5, r1
 8026c9e:	b209      	sxth	r1, r1
 8026ca0:	2900      	cmp	r1, #0
 8026ca2:	bfb8      	it	lt
 8026ca4:	4249      	neglt	r1, r1
 8026ca6:	b209      	sxth	r1, r1
 8026ca8:	428a      	cmp	r2, r1
 8026caa:	da10      	bge.n	8026cce <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026cac:	6920      	ldr	r0, [r4, #16]
 8026cae:	6803      	ldr	r3, [r0, #0]
 8026cb0:	4669      	mov	r1, sp
 8026cb2:	685b      	ldr	r3, [r3, #4]
 8026cb4:	4798      	blx	r3
 8026cb6:	eba8 0606 	sub.w	r6, r8, r6
 8026cba:	2300      	movs	r3, #0
 8026cbc:	1bef      	subs	r7, r5, r7
 8026cbe:	2001      	movs	r0, #1
 8026cc0:	8123      	strh	r3, [r4, #8]
 8026cc2:	8166      	strh	r6, [r4, #10]
 8026cc4:	81a7      	strh	r7, [r4, #12]
 8026cc6:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026cca:	80e5      	strh	r5, [r4, #6]
 8026ccc:	73a0      	strb	r0, [r4, #14]
 8026cce:	b004      	add	sp, #16
 8026cd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026cd4:	0802f508 	.word	0x0802f508

08026cd8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026cda:	461e      	mov	r6, r3
 8026cdc:	1e4b      	subs	r3, r1, #1
 8026cde:	2b01      	cmp	r3, #1
 8026ce0:	b085      	sub	sp, #20
 8026ce2:	4604      	mov	r4, r0
 8026ce4:	460d      	mov	r5, r1
 8026ce6:	4617      	mov	r7, r2
 8026ce8:	d84b      	bhi.n	8026d82 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026cea:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026cee:	1cd3      	adds	r3, r2, #3
 8026cf0:	b29b      	uxth	r3, r3
 8026cf2:	2b06      	cmp	r3, #6
 8026cf4:	d916      	bls.n	8026d24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026cf6:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026d98 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026cfa:	f8cd c004 	str.w	ip, [sp, #4]
 8026cfe:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026d02:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026d06:	6900      	ldr	r0, [r0, #16]
 8026d08:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026d0c:	f04f 0c00 	mov.w	ip, #0
 8026d10:	f88d c008 	strb.w	ip, [sp, #8]
 8026d14:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026d18:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026d1c:	6803      	ldr	r3, [r0, #0]
 8026d1e:	a901      	add	r1, sp, #4
 8026d20:	689b      	ldr	r3, [r3, #8]
 8026d22:	4798      	blx	r3
 8026d24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026d28:	1cd3      	adds	r3, r2, #3
 8026d2a:	b29b      	uxth	r3, r3
 8026d2c:	2b06      	cmp	r3, #6
 8026d2e:	d916      	bls.n	8026d5e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026d30:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026d98 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026d34:	f8cd c004 	str.w	ip, [sp, #4]
 8026d38:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026d3c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026d40:	6920      	ldr	r0, [r4, #16]
 8026d42:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026d46:	f04f 0c01 	mov.w	ip, #1
 8026d4a:	f88d c008 	strb.w	ip, [sp, #8]
 8026d4e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026d52:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026d56:	6803      	ldr	r3, [r0, #0]
 8026d58:	a901      	add	r1, sp, #4
 8026d5a:	689b      	ldr	r3, [r3, #8]
 8026d5c:	4798      	blx	r3
 8026d5e:	4b0d      	ldr	r3, [pc, #52]	; (8026d94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026d60:	9301      	str	r3, [sp, #4]
 8026d62:	6920      	ldr	r0, [r4, #16]
 8026d64:	f88d 5008 	strb.w	r5, [sp, #8]
 8026d68:	2300      	movs	r3, #0
 8026d6a:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026d6e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026d72:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026d76:	6803      	ldr	r3, [r0, #0]
 8026d78:	a901      	add	r1, sp, #4
 8026d7a:	681b      	ldr	r3, [r3, #0]
 8026d7c:	4798      	blx	r3
 8026d7e:	b005      	add	sp, #20
 8026d80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026d82:	2900      	cmp	r1, #0
 8026d84:	d1eb      	bne.n	8026d5e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026d86:	80a2      	strh	r2, [r4, #4]
 8026d88:	80c6      	strh	r6, [r0, #6]
 8026d8a:	60a1      	str	r1, [r4, #8]
 8026d8c:	81a1      	strh	r1, [r4, #12]
 8026d8e:	73a1      	strb	r1, [r4, #14]
 8026d90:	e7e5      	b.n	8026d5e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026d92:	bf00      	nop
 8026d94:	0802f4f4 	.word	0x0802f4f4
 8026d98:	0802f51c 	.word	0x0802f51c

08026d9c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026d9c:	10c9      	asrs	r1, r1, #3
 8026d9e:	2900      	cmp	r1, #0
 8026da0:	bfb8      	it	lt
 8026da2:	4249      	neglt	r1, r1
 8026da4:	2801      	cmp	r0, #1
 8026da6:	d108      	bne.n	8026dba <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026da8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026dac:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026db0:	4601      	mov	r1, r0
 8026db2:	dd02      	ble.n	8026dba <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026db4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026db8:	4770      	bx	lr
 8026dba:	29ff      	cmp	r1, #255	; 0xff
 8026dbc:	bfa8      	it	ge
 8026dbe:	21ff      	movge	r1, #255	; 0xff
 8026dc0:	4608      	mov	r0, r1
 8026dc2:	4770      	bx	lr

08026dc4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026dc4:	b410      	push	{r4}
 8026dc6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026dca:	429c      	cmp	r4, r3
 8026dcc:	d803      	bhi.n	8026dd6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026dce:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026dd2:	f7ed b8ef 	b.w	8013fb4 <_ZN8touchgfx7Outline6lineToEii>
 8026dd6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026dda:	4770      	bx	lr

08026ddc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026de0:	b08b      	sub	sp, #44	; 0x2c
 8026de2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026de6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026dea:	9308      	str	r3, [sp, #32]
 8026dec:	4606      	mov	r6, r0
 8026dee:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026df2:	9309      	str	r3, [sp, #36]	; 0x24
 8026df4:	468a      	mov	sl, r1
 8026df6:	f7ed fa4a 	bl	801428e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026dfa:	68b5      	ldr	r5, [r6, #8]
 8026dfc:	4604      	mov	r4, r0
 8026dfe:	2d00      	cmp	r5, #0
 8026e00:	d044      	beq.n	8026e8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026e02:	6873      	ldr	r3, [r6, #4]
 8026e04:	42ab      	cmp	r3, r5
 8026e06:	d33d      	bcc.n	8026e84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026e08:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026e0c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026e10:	eb02 0b03 	add.w	fp, r2, r3
 8026e14:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026e18:	fb02 1203 	mla	r2, r2, r3, r1
 8026e1c:	9205      	str	r2, [sp, #20]
 8026e1e:	1e6a      	subs	r2, r5, #1
 8026e20:	9204      	str	r2, [sp, #16]
 8026e22:	f04f 0800 	mov.w	r8, #0
 8026e26:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026e2a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026e2e:	454b      	cmp	r3, r9
 8026e30:	463a      	mov	r2, r7
 8026e32:	d008      	beq.n	8026e46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026e34:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026e38:	eb03 0b09 	add.w	fp, r3, r9
 8026e3c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026e40:	fb03 1309 	mla	r3, r3, r9, r1
 8026e44:	9305      	str	r3, [sp, #20]
 8026e46:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026e4a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026e4e:	4498      	add	r8, r3
 8026e50:	9b04      	ldr	r3, [sp, #16]
 8026e52:	3b01      	subs	r3, #1
 8026e54:	9304      	str	r3, [sp, #16]
 8026e56:	9b04      	ldr	r3, [sp, #16]
 8026e58:	3301      	adds	r3, #1
 8026e5a:	d015      	beq.n	8026e88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026e5c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026e60:	42bb      	cmp	r3, r7
 8026e62:	d117      	bne.n	8026e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026e64:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026e68:	9b04      	ldr	r3, [sp, #16]
 8026e6a:	4548      	cmp	r0, r9
 8026e6c:	f103 33ff 	add.w	r3, r3, #4294967295
 8026e70:	d17f      	bne.n	8026f72 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026e72:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026e76:	4401      	add	r1, r0
 8026e78:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026e7c:	4480      	add	r8, r0
 8026e7e:	e7e9      	b.n	8026e54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026e80:	461f      	mov	r7, r3
 8026e82:	e044      	b.n	8026f0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026e84:	2000      	movs	r0, #0
 8026e86:	e002      	b.n	8026e8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026e88:	2900      	cmp	r1, #0
 8026e8a:	d16f      	bne.n	8026f6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026e8c:	2001      	movs	r0, #1
 8026e8e:	b00b      	add	sp, #44	; 0x2c
 8026e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e94:	2900      	cmp	r1, #0
 8026e96:	d030      	beq.n	8026efa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026e98:	2f00      	cmp	r7, #0
 8026e9a:	db29      	blt.n	8026ef0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026e9c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026ea0:	42bb      	cmp	r3, r7
 8026ea2:	dd25      	ble.n	8026ef0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026ea4:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026ea8:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026eac:	f7ff ff76 	bl	8026d9c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026eb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026eb2:	fb10 f003 	smulbb	r0, r0, r3
 8026eb6:	b280      	uxth	r0, r0
 8026eb8:	1c41      	adds	r1, r0, #1
 8026eba:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026ebe:	1209      	asrs	r1, r1, #8
 8026ec0:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026ec4:	d014      	beq.n	8026ef0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026ec6:	9808      	ldr	r0, [sp, #32]
 8026ec8:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026eca:	b2c9      	uxtb	r1, r1
 8026ecc:	b2ba      	uxth	r2, r7
 8026ece:	9102      	str	r1, [sp, #8]
 8026ed0:	2101      	movs	r1, #1
 8026ed2:	4413      	add	r3, r2
 8026ed4:	9101      	str	r1, [sp, #4]
 8026ed6:	4402      	add	r2, r0
 8026ed8:	fa0f f18b 	sxth.w	r1, fp
 8026edc:	f8da 0000 	ldr.w	r0, [sl]
 8026ee0:	9100      	str	r1, [sp, #0]
 8026ee2:	6941      	ldr	r1, [r0, #20]
 8026ee4:	b21b      	sxth	r3, r3
 8026ee6:	460d      	mov	r5, r1
 8026ee8:	b212      	sxth	r2, r2
 8026eea:	9905      	ldr	r1, [sp, #20]
 8026eec:	4650      	mov	r0, sl
 8026eee:	47a8      	blx	r5
 8026ef0:	9b04      	ldr	r3, [sp, #16]
 8026ef2:	3301      	adds	r3, #1
 8026ef4:	f107 0201 	add.w	r2, r7, #1
 8026ef8:	d0c8      	beq.n	8026e8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026efa:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026efe:	1abb      	subs	r3, r7, r2
 8026f00:	2b00      	cmp	r3, #0
 8026f02:	dd31      	ble.n	8026f68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f04:	2a00      	cmp	r2, #0
 8026f06:	dabb      	bge.n	8026e80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026f08:	2f00      	cmp	r7, #0
 8026f0a:	dd2d      	ble.n	8026f68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f0c:	2200      	movs	r2, #0
 8026f0e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026f12:	19d1      	adds	r1, r2, r7
 8026f14:	4299      	cmp	r1, r3
 8026f16:	db02      	blt.n	8026f1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026f18:	1a9f      	subs	r7, r3, r2
 8026f1a:	2f00      	cmp	r7, #0
 8026f1c:	dd24      	ble.n	8026f68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f1e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026f22:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026f26:	f7ff ff39 	bl	8026d9c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026f2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f2c:	fb10 f003 	smulbb	r0, r0, r3
 8026f30:	b280      	uxth	r0, r0
 8026f32:	1c41      	adds	r1, r0, #1
 8026f34:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026f38:	1209      	asrs	r1, r1, #8
 8026f3a:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026f3e:	d013      	beq.n	8026f68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f40:	9808      	ldr	r0, [sp, #32]
 8026f42:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026f44:	b292      	uxth	r2, r2
 8026f46:	b2c9      	uxtb	r1, r1
 8026f48:	4413      	add	r3, r2
 8026f4a:	9102      	str	r1, [sp, #8]
 8026f4c:	4402      	add	r2, r0
 8026f4e:	b23f      	sxth	r7, r7
 8026f50:	f8da 0000 	ldr.w	r0, [sl]
 8026f54:	9701      	str	r7, [sp, #4]
 8026f56:	fa0f f18b 	sxth.w	r1, fp
 8026f5a:	9100      	str	r1, [sp, #0]
 8026f5c:	6947      	ldr	r7, [r0, #20]
 8026f5e:	9905      	ldr	r1, [sp, #20]
 8026f60:	b21b      	sxth	r3, r3
 8026f62:	b212      	sxth	r2, r2
 8026f64:	4650      	mov	r0, sl
 8026f66:	47b8      	blx	r7
 8026f68:	464b      	mov	r3, r9
 8026f6a:	e75c      	b.n	8026e26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026f6c:	2f00      	cmp	r7, #0
 8026f6e:	da95      	bge.n	8026e9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026f70:	e78c      	b.n	8026e8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026f72:	2900      	cmp	r1, #0
 8026f74:	d0f8      	beq.n	8026f68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026f76:	e78f      	b.n	8026e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026f78 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026f78:	4b4b      	ldr	r3, [pc, #300]	; (80270a8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026f7a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026f7e:	2500      	movs	r5, #0
 8026f80:	f100 0620 	add.w	r6, r0, #32
 8026f84:	4604      	mov	r4, r0
 8026f86:	e9c0 3100 	strd	r3, r1, [r0]
 8026f8a:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026f8e:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026f92:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026f96:	f100 0718 	add.w	r7, r0, #24
 8026f9a:	4630      	mov	r0, r6
 8026f9c:	4690      	mov	r8, r2
 8026f9e:	f7ec fb41 	bl	8013624 <_ZN8touchgfx7OutlineC1Ev>
 8026fa2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026fa6:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026faa:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026fae:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026fb2:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026fb6:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026fba:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026fbe:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026fc2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026fc6:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026fca:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026fce:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026fd2:	9500      	str	r5, [sp, #0]
 8026fd4:	4410      	add	r0, r2
 8026fd6:	b280      	uxth	r0, r0
 8026fd8:	fa0f fa80 	sxth.w	sl, r0
 8026fdc:	45aa      	cmp	sl, r5
 8026fde:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026fe2:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026fe6:	dd5c      	ble.n	80270a2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026fe8:	4591      	cmp	r9, r2
 8026fea:	dd5a      	ble.n	80270a2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026fec:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026ff0:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026ff4:	440b      	add	r3, r1
 8026ff6:	b29b      	uxth	r3, r3
 8026ff8:	b21d      	sxth	r5, r3
 8026ffa:	2d00      	cmp	r5, #0
 8026ffc:	dd51      	ble.n	80270a2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026ffe:	458e      	cmp	lr, r1
 8027000:	dd4f      	ble.n	80270a2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027002:	45d1      	cmp	r9, sl
 8027004:	bfb8      	it	lt
 8027006:	fa1f f089 	uxthlt.w	r0, r9
 802700a:	45ae      	cmp	lr, r5
 802700c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8027010:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8027014:	bfb8      	it	lt
 8027016:	fa1f f38e 	uxthlt.w	r3, lr
 802701a:	1a80      	subs	r0, r0, r2
 802701c:	1a5b      	subs	r3, r3, r1
 802701e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8027022:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027026:	f8ad 2000 	strh.w	r2, [sp]
 802702a:	f8ad 1002 	strh.w	r1, [sp, #2]
 802702e:	466d      	mov	r5, sp
 8027030:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027034:	e887 0003 	stmia.w	r7, {r0, r1}
 8027038:	f8dc 3000 	ldr.w	r3, [ip]
 802703c:	4660      	mov	r0, ip
 802703e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027040:	4639      	mov	r1, r7
 8027042:	4798      	blx	r3
 8027044:	6861      	ldr	r1, [r4, #4]
 8027046:	4628      	mov	r0, r5
 8027048:	3104      	adds	r1, #4
 802704a:	f7ee fcf1 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802704e:	4638      	mov	r0, r7
 8027050:	f7ee fcaa 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027054:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027058:	f8bd 2000 	ldrh.w	r2, [sp]
 802705c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8027060:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027064:	4630      	mov	r0, r6
 8027066:	f7ec fac1 	bl	80135ec <_ZN8touchgfx7Outline5resetEv>
 802706a:	f9bd 3000 	ldrsh.w	r3, [sp]
 802706e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8027072:	015b      	lsls	r3, r3, #5
 8027074:	60a3      	str	r3, [r4, #8]
 8027076:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802707a:	015b      	lsls	r3, r3, #5
 802707c:	60e3      	str	r3, [r4, #12]
 802707e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8027082:	015b      	lsls	r3, r3, #5
 8027084:	6123      	str	r3, [r4, #16]
 8027086:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802708a:	015b      	lsls	r3, r3, #5
 802708c:	6163      	str	r3, [r4, #20]
 802708e:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027092:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027096:	4620      	mov	r0, r4
 8027098:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802709c:	b002      	add	sp, #8
 802709e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80270a2:	2300      	movs	r3, #0
 80270a4:	9301      	str	r3, [sp, #4]
 80270a6:	e7c2      	b.n	802702e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80270a8:	0802f840 	.word	0x0802f840

080270ac <_ZN8touchgfx6Canvas5closeEv>:
 80270ac:	b538      	push	{r3, r4, r5, lr}
 80270ae:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80270b2:	4604      	mov	r4, r0
 80270b4:	b193      	cbz	r3, 80270dc <_ZN8touchgfx6Canvas5closeEv+0x30>
 80270b6:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80270ba:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80270be:	4213      	tst	r3, r2
 80270c0:	d10c      	bne.n	80270dc <_ZN8touchgfx6Canvas5closeEv+0x30>
 80270c2:	f100 0520 	add.w	r5, r0, #32
 80270c6:	b123      	cbz	r3, 80270d2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80270c8:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80270cc:	4628      	mov	r0, r5
 80270ce:	f7ff fe79 	bl	8026dc4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80270d2:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80270d6:	4628      	mov	r0, r5
 80270d8:	f7ff fe74 	bl	8026dc4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80270dc:	2300      	movs	r3, #0
 80270de:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80270e2:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80270e6:	4298      	cmp	r0, r3
 80270e8:	bf34      	ite	cc
 80270ea:	2000      	movcc	r0, #0
 80270ec:	2001      	movcs	r0, #1
 80270ee:	bd38      	pop	{r3, r4, r5, pc}

080270f0 <_ZN8touchgfx6Canvas6renderEh>:
 80270f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80270f4:	4604      	mov	r4, r0
 80270f6:	6840      	ldr	r0, [r0, #4]
 80270f8:	6803      	ldr	r3, [r0, #0]
 80270fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80270fc:	460d      	mov	r5, r1
 80270fe:	4798      	blx	r3
 8027100:	fb10 f105 	smulbb	r1, r0, r5
 8027104:	b289      	uxth	r1, r1
 8027106:	1c4d      	adds	r5, r1, #1
 8027108:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802710c:	122d      	asrs	r5, r5, #8
 802710e:	f000 809d 	beq.w	802724c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027112:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8027116:	2b00      	cmp	r3, #0
 8027118:	f000 8098 	beq.w	802724c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802711c:	4620      	mov	r0, r4
 802711e:	f7ff ffc5 	bl	80270ac <_ZN8touchgfx6Canvas5closeEv>
 8027122:	4607      	mov	r7, r0
 8027124:	2800      	cmp	r0, #0
 8027126:	d048      	beq.n	80271ba <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027128:	6863      	ldr	r3, [r4, #4]
 802712a:	4e49      	ldr	r6, [pc, #292]	; (8027250 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802712c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802712e:	6837      	ldr	r7, [r6, #0]
 8027130:	6803      	ldr	r3, [r0, #0]
 8027132:	689b      	ldr	r3, [r3, #8]
 8027134:	4798      	blx	r3
 8027136:	4601      	mov	r1, r0
 8027138:	4638      	mov	r0, r7
 802713a:	f7ea fbc5 	bl	80118c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802713e:	4607      	mov	r7, r0
 8027140:	f7dd fb88 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 8027144:	6803      	ldr	r3, [r0, #0]
 8027146:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027148:	4798      	blx	r3
 802714a:	4680      	mov	r8, r0
 802714c:	f7dd fb82 	bl	8004854 <_ZN8touchgfx3HAL3lcdEv>
 8027150:	6803      	ldr	r3, [r0, #0]
 8027152:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027154:	4798      	blx	r3
 8027156:	280b      	cmp	r0, #11
 8027158:	d85d      	bhi.n	8027216 <_ZN8touchgfx6Canvas6renderEh+0x126>
 802715a:	e8df f000 	tbb	[pc, r0]
 802715e:	5e53      	.short	0x5e53
 8027160:	325c066e 	.word	0x325c066e
 8027164:	67676742 	.word	0x67676742
 8027168:	6767      	.short	0x6767
 802716a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802716e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027172:	2208      	movs	r2, #8
 8027174:	fb91 f2f2 	sdiv	r2, r1, r2
 8027178:	fb08 2303 	mla	r3, r8, r3, r2
 802717c:	441f      	add	r7, r3
 802717e:	424b      	negs	r3, r1
 8027180:	f003 0307 	and.w	r3, r3, #7
 8027184:	f001 0107 	and.w	r1, r1, #7
 8027188:	bf58      	it	pl
 802718a:	4259      	negpl	r1, r3
 802718c:	b2c9      	uxtb	r1, r1
 802718e:	b2ed      	uxtb	r5, r5
 8027190:	e9cd 1500 	strd	r1, r5, [sp]
 8027194:	6860      	ldr	r0, [r4, #4]
 8027196:	463a      	mov	r2, r7
 8027198:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802719a:	fa0f f388 	sxth.w	r3, r8
 802719e:	f104 0020 	add.w	r0, r4, #32
 80271a2:	f7ff fe1b 	bl	8026ddc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80271a6:	6863      	ldr	r3, [r4, #4]
 80271a8:	4607      	mov	r7, r0
 80271aa:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80271ac:	6803      	ldr	r3, [r0, #0]
 80271ae:	691b      	ldr	r3, [r3, #16]
 80271b0:	4798      	blx	r3
 80271b2:	6830      	ldr	r0, [r6, #0]
 80271b4:	6803      	ldr	r3, [r0, #0]
 80271b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80271b8:	4798      	blx	r3
 80271ba:	4638      	mov	r0, r7
 80271bc:	b002      	add	sp, #8
 80271be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80271c2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80271c6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80271ca:	2204      	movs	r2, #4
 80271cc:	fb91 f2f2 	sdiv	r2, r1, r2
 80271d0:	fb08 2303 	mla	r3, r8, r3, r2
 80271d4:	441f      	add	r7, r3
 80271d6:	424b      	negs	r3, r1
 80271d8:	f003 0303 	and.w	r3, r3, #3
 80271dc:	f001 0103 	and.w	r1, r1, #3
 80271e0:	e7d2      	b.n	8027188 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80271e2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80271e6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80271ea:	2900      	cmp	r1, #0
 80271ec:	f04f 0202 	mov.w	r2, #2
 80271f0:	fb91 f2f2 	sdiv	r2, r1, r2
 80271f4:	f001 0101 	and.w	r1, r1, #1
 80271f8:	fb08 2303 	mla	r3, r8, r3, r2
 80271fc:	441f      	add	r7, r3
 80271fe:	bfb8      	it	lt
 8027200:	4249      	neglt	r1, r1
 8027202:	e7c3      	b.n	802718c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027204:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027208:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802720c:	fb08 f303 	mul.w	r3, r8, r3
 8027210:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027214:	441f      	add	r7, r3
 8027216:	2100      	movs	r1, #0
 8027218:	e7b9      	b.n	802718e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802721a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802721e:	fb08 f203 	mul.w	r2, r8, r3
 8027222:	8b23      	ldrh	r3, [r4, #24]
 8027224:	2103      	movs	r1, #3
 8027226:	fb13 2301 	smlabb	r3, r3, r1, r2
 802722a:	e7f3      	b.n	8027214 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802722c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027230:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027234:	fb08 2303 	mla	r3, r8, r3, r2
 8027238:	e7ec      	b.n	8027214 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802723a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802723e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027242:	fb08 f303 	mul.w	r3, r8, r3
 8027246:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802724a:	e7e3      	b.n	8027214 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802724c:	2701      	movs	r7, #1
 802724e:	e7b4      	b.n	80271ba <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027250:	20012db4 	.word	0x20012db4

08027254 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027254:	b510      	push	{r4, lr}
 8027256:	4b07      	ldr	r3, [pc, #28]	; (8027274 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027258:	781b      	ldrb	r3, [r3, #0]
 802725a:	2b01      	cmp	r3, #1
 802725c:	d108      	bne.n	8027270 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802725e:	6843      	ldr	r3, [r0, #4]
 8027260:	6814      	ldr	r4, [r2, #0]
 8027262:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027266:	680b      	ldr	r3, [r1, #0]
 8027268:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802726c:	6013      	str	r3, [r2, #0]
 802726e:	600c      	str	r4, [r1, #0]
 8027270:	bd10      	pop	{r4, pc}
 8027272:	bf00      	nop
 8027274:	20012dac 	.word	0x20012dac

08027278 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027278:	b513      	push	{r0, r1, r4, lr}
 802727a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802727e:	4604      	mov	r4, r0
 8027280:	e9cd 2100 	strd	r2, r1, [sp]
 8027284:	b9a3      	cbnz	r3, 80272b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027286:	466a      	mov	r2, sp
 8027288:	a901      	add	r1, sp, #4
 802728a:	4620      	mov	r0, r4
 802728c:	f7ff ffe2 	bl	8027254 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027290:	68a3      	ldr	r3, [r4, #8]
 8027292:	9901      	ldr	r1, [sp, #4]
 8027294:	9a00      	ldr	r2, [sp, #0]
 8027296:	1ac9      	subs	r1, r1, r3
 8027298:	68e3      	ldr	r3, [r4, #12]
 802729a:	9101      	str	r1, [sp, #4]
 802729c:	1ad2      	subs	r2, r2, r3
 802729e:	2a00      	cmp	r2, #0
 80272a0:	9200      	str	r2, [sp, #0]
 80272a2:	da0b      	bge.n	80272bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80272a4:	2301      	movs	r3, #1
 80272a6:	2900      	cmp	r1, #0
 80272a8:	da0e      	bge.n	80272c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80272aa:	f043 0304 	orr.w	r3, r3, #4
 80272ae:	e013      	b.n	80272d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80272b0:	f7ff fefc 	bl	80270ac <_ZN8touchgfx6Canvas5closeEv>
 80272b4:	2800      	cmp	r0, #0
 80272b6:	d1e6      	bne.n	8027286 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80272b8:	b002      	add	sp, #8
 80272ba:	bd10      	pop	{r4, pc}
 80272bc:	6963      	ldr	r3, [r4, #20]
 80272be:	429a      	cmp	r2, r3
 80272c0:	bfac      	ite	ge
 80272c2:	2302      	movge	r3, #2
 80272c4:	2300      	movlt	r3, #0
 80272c6:	e7ee      	b.n	80272a6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80272c8:	6920      	ldr	r0, [r4, #16]
 80272ca:	4281      	cmp	r1, r0
 80272cc:	bfac      	ite	ge
 80272ce:	2008      	movge	r0, #8
 80272d0:	2000      	movlt	r0, #0
 80272d2:	4318      	orrs	r0, r3
 80272d4:	b2c3      	uxtb	r3, r0
 80272d6:	b158      	cbz	r0, 80272f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80272d8:	2200      	movs	r2, #0
 80272da:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80272de:	9901      	ldr	r1, [sp, #4]
 80272e0:	9a00      	ldr	r2, [sp, #0]
 80272e2:	66a1      	str	r1, [r4, #104]	; 0x68
 80272e4:	66e2      	str	r2, [r4, #108]	; 0x6c
 80272e6:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80272ea:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80272ee:	e7e3      	b.n	80272b8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80272f0:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80272f4:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80272f8:	4298      	cmp	r0, r3
 80272fa:	d803      	bhi.n	8027304 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80272fc:	f104 0020 	add.w	r0, r4, #32
 8027300:	f7ec fe72 	bl	8013fe8 <_ZN8touchgfx7Outline6moveToEii>
 8027304:	2301      	movs	r3, #1
 8027306:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802730a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802730e:	2300      	movs	r3, #0
 8027310:	e7e5      	b.n	80272de <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027312:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027314:	ab02      	add	r3, sp, #8
 8027316:	4604      	mov	r4, r0
 8027318:	f843 2d08 	str.w	r2, [r3, #-8]!
 802731c:	9101      	str	r1, [sp, #4]
 802731e:	461a      	mov	r2, r3
 8027320:	a901      	add	r1, sp, #4
 8027322:	f7ff ff97 	bl	8027254 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027326:	68a3      	ldr	r3, [r4, #8]
 8027328:	9901      	ldr	r1, [sp, #4]
 802732a:	9a00      	ldr	r2, [sp, #0]
 802732c:	1ac9      	subs	r1, r1, r3
 802732e:	68e3      	ldr	r3, [r4, #12]
 8027330:	9101      	str	r1, [sp, #4]
 8027332:	1ad2      	subs	r2, r2, r3
 8027334:	2a00      	cmp	r2, #0
 8027336:	9200      	str	r2, [sp, #0]
 8027338:	db1c      	blt.n	8027374 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802733a:	6963      	ldr	r3, [r4, #20]
 802733c:	429a      	cmp	r2, r3
 802733e:	bfac      	ite	ge
 8027340:	2002      	movge	r0, #2
 8027342:	2000      	movlt	r0, #0
 8027344:	2900      	cmp	r1, #0
 8027346:	db17      	blt.n	8027378 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027348:	6923      	ldr	r3, [r4, #16]
 802734a:	4299      	cmp	r1, r3
 802734c:	bfac      	ite	ge
 802734e:	2308      	movge	r3, #8
 8027350:	2300      	movlt	r3, #0
 8027352:	4303      	orrs	r3, r0
 8027354:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027358:	b2dd      	uxtb	r5, r3
 802735a:	b978      	cbnz	r0, 802737c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802735c:	f104 0020 	add.w	r0, r4, #32
 8027360:	f7ff fd30 	bl	8026dc4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027364:	9b01      	ldr	r3, [sp, #4]
 8027366:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027368:	9b00      	ldr	r3, [sp, #0]
 802736a:	6623      	str	r3, [r4, #96]	; 0x60
 802736c:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027370:	b002      	add	sp, #8
 8027372:	bd70      	pop	{r4, r5, r6, pc}
 8027374:	2001      	movs	r0, #1
 8027376:	e7e5      	b.n	8027344 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027378:	2304      	movs	r3, #4
 802737a:	e7ea      	b.n	8027352 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802737c:	b113      	cbz	r3, 8027384 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802737e:	ea10 0305 	ands.w	r3, r0, r5
 8027382:	d11c      	bne.n	80273be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027384:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027388:	f104 0620 	add.w	r6, r4, #32
 802738c:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027390:	b98b      	cbnz	r3, 80273b6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027392:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027396:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802739a:	4298      	cmp	r0, r3
 802739c:	d802      	bhi.n	80273a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802739e:	4630      	mov	r0, r6
 80273a0:	f7ec fe22 	bl	8013fe8 <_ZN8touchgfx7Outline6moveToEii>
 80273a4:	2301      	movs	r3, #1
 80273a6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80273aa:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80273ae:	e9dd 2100 	ldrd	r2, r1, [sp]
 80273b2:	4630      	mov	r0, r6
 80273b4:	e7d4      	b.n	8027360 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80273b6:	4630      	mov	r0, r6
 80273b8:	f7ff fd04 	bl	8026dc4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80273bc:	e7f7      	b.n	80273ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80273be:	461d      	mov	r5, r3
 80273c0:	e7d0      	b.n	8027364 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080273c4 <_ZN8touchgfx6CanvasD1Ev>:
 80273c4:	b510      	push	{r4, lr}
 80273c6:	4b04      	ldr	r3, [pc, #16]	; (80273d8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80273c8:	4604      	mov	r4, r0
 80273ca:	f840 3b20 	str.w	r3, [r0], #32
 80273ce:	f7ec f905 	bl	80135dc <_ZN8touchgfx7OutlineD1Ev>
 80273d2:	4620      	mov	r0, r4
 80273d4:	bd10      	pop	{r4, pc}
 80273d6:	bf00      	nop
 80273d8:	0802f840 	.word	0x0802f840

080273dc <_ZN8touchgfx6CanvasD0Ev>:
 80273dc:	b510      	push	{r4, lr}
 80273de:	4604      	mov	r4, r0
 80273e0:	f7ff fff0 	bl	80273c4 <_ZN8touchgfx6CanvasD1Ev>
 80273e4:	4620      	mov	r0, r4
 80273e6:	2170      	movs	r1, #112	; 0x70
 80273e8:	f002 fd09 	bl	8029dfe <_ZdlPvj>
 80273ec:	4620      	mov	r0, r4
 80273ee:	bd10      	pop	{r4, pc}

080273f0 <_ZN8touchgfx6CircleD1Ev>:
 80273f0:	4770      	bx	lr

080273f2 <_ZN8touchgfx6CircleD0Ev>:
 80273f2:	b510      	push	{r4, lr}
 80273f4:	2148      	movs	r1, #72	; 0x48
 80273f6:	4604      	mov	r4, r0
 80273f8:	f002 fd01 	bl	8029dfe <_ZdlPvj>
 80273fc:	4620      	mov	r0, r4
 80273fe:	bd10      	pop	{r4, pc}

08027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027400:	b508      	push	{r3, lr}
 8027402:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027406:	f7ea fdb5 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802740a:	bd08      	pop	{r3, pc}

0802740c <_ZN8touchgfx6CircleC1Ev>:
 802740c:	b510      	push	{r4, lr}
 802740e:	4604      	mov	r4, r0
 8027410:	f7ea fc4c 	bl	8011cac <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027414:	4b08      	ldr	r3, [pc, #32]	; (8027438 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027416:	6023      	str	r3, [r4, #0]
 8027418:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802741c:	2300      	movs	r3, #0
 802741e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027422:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027426:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802742a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802742e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027432:	60a3      	str	r3, [r4, #8]
 8027434:	4620      	mov	r0, r4
 8027436:	bd10      	pop	{r4, pc}
 8027438:	0802f854 	.word	0x0802f854

0802743c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802743c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027440:	428a      	cmp	r2, r1
 8027442:	4680      	mov	r8, r0
 8027444:	4610      	mov	r0, r2
 8027446:	4699      	mov	r9, r3
 8027448:	bfa6      	itte	ge
 802744a:	460a      	movge	r2, r1
 802744c:	4603      	movge	r3, r0
 802744e:	460b      	movlt	r3, r1
 8027450:	1a99      	subs	r1, r3, r2
 8027452:	b085      	sub	sp, #20
 8027454:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027458:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802745c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802745e:	bfa4      	itt	ge
 8027460:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027464:	2200      	movge	r2, #0
 8027466:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802746a:	9300      	str	r3, [sp, #0]
 802746c:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027470:	f102 0b01 	add.w	fp, r2, #1
 8027474:	2c00      	cmp	r4, #0
 8027476:	f040 80af 	bne.w	80275d8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802747a:	4610      	mov	r0, r2
 802747c:	9201      	str	r2, [sp, #4]
 802747e:	f7ea fd79 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027482:	a903      	add	r1, sp, #12
 8027484:	9003      	str	r0, [sp, #12]
 8027486:	4650      	mov	r0, sl
 8027488:	f7ea fc3c 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802748c:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027490:	9a01      	ldr	r2, [sp, #4]
 8027492:	4408      	add	r0, r1
 8027494:	f8d9 1000 	ldr.w	r1, [r9]
 8027498:	4281      	cmp	r1, r0
 802749a:	bfc8      	it	gt
 802749c:	f8c9 0000 	strgt.w	r0, [r9]
 80274a0:	6839      	ldr	r1, [r7, #0]
 80274a2:	4288      	cmp	r0, r1
 80274a4:	bfc8      	it	gt
 80274a6:	6038      	strgt	r0, [r7, #0]
 80274a8:	4610      	mov	r0, r2
 80274aa:	f7ff ffa9 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80274ae:	a903      	add	r1, sp, #12
 80274b0:	9003      	str	r0, [sp, #12]
 80274b2:	4650      	mov	r0, sl
 80274b4:	f7ea fc26 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274b8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80274bc:	1a10      	subs	r0, r2, r0
 80274be:	6832      	ldr	r2, [r6, #0]
 80274c0:	4282      	cmp	r2, r0
 80274c2:	bfc8      	it	gt
 80274c4:	6030      	strgt	r0, [r6, #0]
 80274c6:	682a      	ldr	r2, [r5, #0]
 80274c8:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80274cc:	4290      	cmp	r0, r2
 80274ce:	fb9b f2f1 	sdiv	r2, fp, r1
 80274d2:	fb01 b212 	mls	r2, r1, r2, fp
 80274d6:	eba1 0202 	sub.w	r2, r1, r2
 80274da:	bfc8      	it	gt
 80274dc:	6028      	strgt	r0, [r5, #0]
 80274de:	fb92 f0f1 	sdiv	r0, r2, r1
 80274e2:	fb01 2210 	mls	r2, r1, r0, r2
 80274e6:	4493      	add	fp, r2
 80274e8:	9b00      	ldr	r3, [sp, #0]
 80274ea:	455b      	cmp	r3, fp
 80274ec:	db2a      	blt.n	8027544 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80274ee:	4658      	mov	r0, fp
 80274f0:	f7ea fd40 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80274f4:	a903      	add	r1, sp, #12
 80274f6:	9003      	str	r0, [sp, #12]
 80274f8:	4650      	mov	r0, sl
 80274fa:	f7ea fc03 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274fe:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027502:	4410      	add	r0, r2
 8027504:	f8d9 2000 	ldr.w	r2, [r9]
 8027508:	4282      	cmp	r2, r0
 802750a:	bfc8      	it	gt
 802750c:	f8c9 0000 	strgt.w	r0, [r9]
 8027510:	683a      	ldr	r2, [r7, #0]
 8027512:	4290      	cmp	r0, r2
 8027514:	bfc8      	it	gt
 8027516:	6038      	strgt	r0, [r7, #0]
 8027518:	4658      	mov	r0, fp
 802751a:	f7ff ff71 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802751e:	a903      	add	r1, sp, #12
 8027520:	9003      	str	r0, [sp, #12]
 8027522:	4650      	mov	r0, sl
 8027524:	f7ea fbee 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027528:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802752c:	1a10      	subs	r0, r2, r0
 802752e:	6832      	ldr	r2, [r6, #0]
 8027530:	4282      	cmp	r2, r0
 8027532:	bfc8      	it	gt
 8027534:	6030      	strgt	r0, [r6, #0]
 8027536:	682a      	ldr	r2, [r5, #0]
 8027538:	4290      	cmp	r0, r2
 802753a:	bfc8      	it	gt
 802753c:	6028      	strgt	r0, [r5, #0]
 802753e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027542:	e7d1      	b.n	80274e8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027544:	9b00      	ldr	r3, [sp, #0]
 8027546:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802754a:	455b      	cmp	r3, fp
 802754c:	dd27      	ble.n	802759e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802754e:	4618      	mov	r0, r3
 8027550:	f7ea fd10 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027554:	a903      	add	r1, sp, #12
 8027556:	9003      	str	r0, [sp, #12]
 8027558:	4650      	mov	r0, sl
 802755a:	f7ea fbd3 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802755e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027562:	4410      	add	r0, r2
 8027564:	f8d9 2000 	ldr.w	r2, [r9]
 8027568:	4282      	cmp	r2, r0
 802756a:	bfc8      	it	gt
 802756c:	f8c9 0000 	strgt.w	r0, [r9]
 8027570:	683a      	ldr	r2, [r7, #0]
 8027572:	4290      	cmp	r0, r2
 8027574:	bfc8      	it	gt
 8027576:	6038      	strgt	r0, [r7, #0]
 8027578:	9800      	ldr	r0, [sp, #0]
 802757a:	f7ff ff41 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802757e:	a903      	add	r1, sp, #12
 8027580:	9003      	str	r0, [sp, #12]
 8027582:	4650      	mov	r0, sl
 8027584:	f7ea fbbe 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027588:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802758c:	1a10      	subs	r0, r2, r0
 802758e:	6832      	ldr	r2, [r6, #0]
 8027590:	4282      	cmp	r2, r0
 8027592:	bfc8      	it	gt
 8027594:	6030      	strgt	r0, [r6, #0]
 8027596:	682a      	ldr	r2, [r5, #0]
 8027598:	4290      	cmp	r0, r2
 802759a:	bfc8      	it	gt
 802759c:	6028      	strgt	r0, [r5, #0]
 802759e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80275a2:	f8d9 1000 	ldr.w	r1, [r9]
 80275a6:	4291      	cmp	r1, r2
 80275a8:	bfc8      	it	gt
 80275aa:	f8c9 2000 	strgt.w	r2, [r9]
 80275ae:	683a      	ldr	r2, [r7, #0]
 80275b0:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80275b4:	429a      	cmp	r2, r3
 80275b6:	bfb8      	it	lt
 80275b8:	603b      	strlt	r3, [r7, #0]
 80275ba:	6832      	ldr	r2, [r6, #0]
 80275bc:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80275c0:	429a      	cmp	r2, r3
 80275c2:	bfc8      	it	gt
 80275c4:	6033      	strgt	r3, [r6, #0]
 80275c6:	682a      	ldr	r2, [r5, #0]
 80275c8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80275cc:	429a      	cmp	r2, r3
 80275ce:	da00      	bge.n	80275d2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80275d0:	602b      	str	r3, [r5, #0]
 80275d2:	b005      	add	sp, #20
 80275d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80275d8:	2002      	movs	r0, #2
 80275da:	3401      	adds	r4, #1
 80275dc:	fb94 f4f0 	sdiv	r4, r4, r0
 80275e0:	4610      	mov	r0, r2
 80275e2:	9201      	str	r2, [sp, #4]
 80275e4:	f7ea fcc6 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80275e8:	a903      	add	r1, sp, #12
 80275ea:	9003      	str	r0, [sp, #12]
 80275ec:	4650      	mov	r0, sl
 80275ee:	f7ea fb89 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275f2:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80275f6:	9a01      	ldr	r2, [sp, #4]
 80275f8:	4408      	add	r0, r1
 80275fa:	f8d9 1000 	ldr.w	r1, [r9]
 80275fe:	1b03      	subs	r3, r0, r4
 8027600:	4299      	cmp	r1, r3
 8027602:	bfc8      	it	gt
 8027604:	f8c9 3000 	strgt.w	r3, [r9]
 8027608:	6839      	ldr	r1, [r7, #0]
 802760a:	428b      	cmp	r3, r1
 802760c:	bfc8      	it	gt
 802760e:	603b      	strgt	r3, [r7, #0]
 8027610:	f8d9 1000 	ldr.w	r1, [r9]
 8027614:	4420      	add	r0, r4
 8027616:	4281      	cmp	r1, r0
 8027618:	bfc8      	it	gt
 802761a:	f8c9 0000 	strgt.w	r0, [r9]
 802761e:	6839      	ldr	r1, [r7, #0]
 8027620:	4288      	cmp	r0, r1
 8027622:	bfc8      	it	gt
 8027624:	6038      	strgt	r0, [r7, #0]
 8027626:	4610      	mov	r0, r2
 8027628:	f7ff feea 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802762c:	a903      	add	r1, sp, #12
 802762e:	9003      	str	r0, [sp, #12]
 8027630:	4650      	mov	r0, sl
 8027632:	f7ea fb67 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027636:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802763a:	1a10      	subs	r0, r2, r0
 802763c:	6832      	ldr	r2, [r6, #0]
 802763e:	1b01      	subs	r1, r0, r4
 8027640:	428a      	cmp	r2, r1
 8027642:	bfc8      	it	gt
 8027644:	6031      	strgt	r1, [r6, #0]
 8027646:	682a      	ldr	r2, [r5, #0]
 8027648:	4291      	cmp	r1, r2
 802764a:	bfc8      	it	gt
 802764c:	6029      	strgt	r1, [r5, #0]
 802764e:	6832      	ldr	r2, [r6, #0]
 8027650:	4420      	add	r0, r4
 8027652:	4282      	cmp	r2, r0
 8027654:	bfc8      	it	gt
 8027656:	6030      	strgt	r0, [r6, #0]
 8027658:	682a      	ldr	r2, [r5, #0]
 802765a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802765e:	4290      	cmp	r0, r2
 8027660:	fb9b f2f1 	sdiv	r2, fp, r1
 8027664:	fb01 b212 	mls	r2, r1, r2, fp
 8027668:	eba1 0202 	sub.w	r2, r1, r2
 802766c:	bfc8      	it	gt
 802766e:	6028      	strgt	r0, [r5, #0]
 8027670:	fb92 f0f1 	sdiv	r0, r2, r1
 8027674:	fb01 2210 	mls	r2, r1, r0, r2
 8027678:	4493      	add	fp, r2
 802767a:	9b00      	ldr	r3, [sp, #0]
 802767c:	455b      	cmp	r3, fp
 802767e:	db40      	blt.n	8027702 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027680:	4658      	mov	r0, fp
 8027682:	f7ea fc77 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027686:	a903      	add	r1, sp, #12
 8027688:	9003      	str	r0, [sp, #12]
 802768a:	4650      	mov	r0, sl
 802768c:	f7ea fb3a 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027690:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027694:	4410      	add	r0, r2
 8027696:	f8d9 2000 	ldr.w	r2, [r9]
 802769a:	1b01      	subs	r1, r0, r4
 802769c:	428a      	cmp	r2, r1
 802769e:	bfc8      	it	gt
 80276a0:	f8c9 1000 	strgt.w	r1, [r9]
 80276a4:	683a      	ldr	r2, [r7, #0]
 80276a6:	4291      	cmp	r1, r2
 80276a8:	bfc8      	it	gt
 80276aa:	6039      	strgt	r1, [r7, #0]
 80276ac:	f8d9 2000 	ldr.w	r2, [r9]
 80276b0:	4420      	add	r0, r4
 80276b2:	4282      	cmp	r2, r0
 80276b4:	bfc8      	it	gt
 80276b6:	f8c9 0000 	strgt.w	r0, [r9]
 80276ba:	683a      	ldr	r2, [r7, #0]
 80276bc:	4290      	cmp	r0, r2
 80276be:	bfc8      	it	gt
 80276c0:	6038      	strgt	r0, [r7, #0]
 80276c2:	4658      	mov	r0, fp
 80276c4:	f7ff fe9c 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80276c8:	a903      	add	r1, sp, #12
 80276ca:	9003      	str	r0, [sp, #12]
 80276cc:	4650      	mov	r0, sl
 80276ce:	f7ea fb19 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80276d2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80276d6:	1a10      	subs	r0, r2, r0
 80276d8:	6832      	ldr	r2, [r6, #0]
 80276da:	1b01      	subs	r1, r0, r4
 80276dc:	428a      	cmp	r2, r1
 80276de:	bfc8      	it	gt
 80276e0:	6031      	strgt	r1, [r6, #0]
 80276e2:	682a      	ldr	r2, [r5, #0]
 80276e4:	4291      	cmp	r1, r2
 80276e6:	bfc8      	it	gt
 80276e8:	6029      	strgt	r1, [r5, #0]
 80276ea:	6832      	ldr	r2, [r6, #0]
 80276ec:	4420      	add	r0, r4
 80276ee:	4282      	cmp	r2, r0
 80276f0:	bfc8      	it	gt
 80276f2:	6030      	strgt	r0, [r6, #0]
 80276f4:	682a      	ldr	r2, [r5, #0]
 80276f6:	4290      	cmp	r0, r2
 80276f8:	bfc8      	it	gt
 80276fa:	6028      	strgt	r0, [r5, #0]
 80276fc:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027700:	e7bb      	b.n	802767a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8027702:	9b00      	ldr	r3, [sp, #0]
 8027704:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027708:	455b      	cmp	r3, fp
 802770a:	f77f af62 	ble.w	80275d2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802770e:	4618      	mov	r0, r3
 8027710:	f7ea fc30 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027714:	a903      	add	r1, sp, #12
 8027716:	9003      	str	r0, [sp, #12]
 8027718:	4650      	mov	r0, sl
 802771a:	f7ea faf3 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802771e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027722:	4410      	add	r0, r2
 8027724:	f8d9 2000 	ldr.w	r2, [r9]
 8027728:	1b01      	subs	r1, r0, r4
 802772a:	428a      	cmp	r2, r1
 802772c:	bfc8      	it	gt
 802772e:	f8c9 1000 	strgt.w	r1, [r9]
 8027732:	683a      	ldr	r2, [r7, #0]
 8027734:	4291      	cmp	r1, r2
 8027736:	bfc8      	it	gt
 8027738:	6039      	strgt	r1, [r7, #0]
 802773a:	f8d9 2000 	ldr.w	r2, [r9]
 802773e:	4420      	add	r0, r4
 8027740:	4282      	cmp	r2, r0
 8027742:	bfc8      	it	gt
 8027744:	f8c9 0000 	strgt.w	r0, [r9]
 8027748:	683b      	ldr	r3, [r7, #0]
 802774a:	4298      	cmp	r0, r3
 802774c:	bfc8      	it	gt
 802774e:	6038      	strgt	r0, [r7, #0]
 8027750:	9800      	ldr	r0, [sp, #0]
 8027752:	f7ff fe55 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027756:	a903      	add	r1, sp, #12
 8027758:	9003      	str	r0, [sp, #12]
 802775a:	4650      	mov	r0, sl
 802775c:	f7ea fad2 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027760:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027764:	6832      	ldr	r2, [r6, #0]
 8027766:	1a18      	subs	r0, r3, r0
 8027768:	1b03      	subs	r3, r0, r4
 802776a:	429a      	cmp	r2, r3
 802776c:	bfc8      	it	gt
 802776e:	6033      	strgt	r3, [r6, #0]
 8027770:	682a      	ldr	r2, [r5, #0]
 8027772:	4293      	cmp	r3, r2
 8027774:	bfc8      	it	gt
 8027776:	602b      	strgt	r3, [r5, #0]
 8027778:	6833      	ldr	r3, [r6, #0]
 802777a:	4404      	add	r4, r0
 802777c:	42a3      	cmp	r3, r4
 802777e:	bfc8      	it	gt
 8027780:	6034      	strgt	r4, [r6, #0]
 8027782:	682b      	ldr	r3, [r5, #0]
 8027784:	429c      	cmp	r4, r3
 8027786:	bfc8      	it	gt
 8027788:	602c      	strgt	r4, [r5, #0]
 802778a:	e722      	b.n	80275d2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802778c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802778c:	b530      	push	{r4, r5, lr}
 802778e:	4604      	mov	r4, r0
 8027790:	4608      	mov	r0, r1
 8027792:	4611      	mov	r1, r2
 8027794:	461a      	mov	r2, r3
 8027796:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802779a:	b089      	sub	sp, #36	; 0x24
 802779c:	015b      	lsls	r3, r3, #5
 802779e:	9304      	str	r3, [sp, #16]
 80277a0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80277a4:	2500      	movs	r5, #0
 80277a6:	015b      	lsls	r3, r3, #5
 80277a8:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80277ac:	ab07      	add	r3, sp, #28
 80277ae:	9302      	str	r3, [sp, #8]
 80277b0:	ab06      	add	r3, sp, #24
 80277b2:	9301      	str	r3, [sp, #4]
 80277b4:	ab05      	add	r3, sp, #20
 80277b6:	9300      	str	r3, [sp, #0]
 80277b8:	ab04      	add	r3, sp, #16
 80277ba:	9505      	str	r5, [sp, #20]
 80277bc:	f7ff fe3e 	bl	802743c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80277c0:	2520      	movs	r5, #32
 80277c2:	9a04      	ldr	r2, [sp, #16]
 80277c4:	9805      	ldr	r0, [sp, #20]
 80277c6:	fb92 f2f5 	sdiv	r2, r2, r5
 80277ca:	fb90 f0f5 	sdiv	r0, r0, r5
 80277ce:	b292      	uxth	r2, r2
 80277d0:	3002      	adds	r0, #2
 80277d2:	1a80      	subs	r0, r0, r2
 80277d4:	9b06      	ldr	r3, [sp, #24]
 80277d6:	9907      	ldr	r1, [sp, #28]
 80277d8:	fb93 f3f5 	sdiv	r3, r3, r5
 80277dc:	fb91 f1f5 	sdiv	r1, r1, r5
 80277e0:	b29b      	uxth	r3, r3
 80277e2:	3102      	adds	r1, #2
 80277e4:	1ac9      	subs	r1, r1, r3
 80277e6:	3a01      	subs	r2, #1
 80277e8:	3b01      	subs	r3, #1
 80277ea:	80a0      	strh	r0, [r4, #4]
 80277ec:	4620      	mov	r0, r4
 80277ee:	8022      	strh	r2, [r4, #0]
 80277f0:	8063      	strh	r3, [r4, #2]
 80277f2:	80e1      	strh	r1, [r4, #6]
 80277f4:	b009      	add	sp, #36	; 0x24
 80277f6:	bd30      	pop	{r4, r5, pc}

080277f8 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80277f8:	b510      	push	{r4, lr}
 80277fa:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80277fe:	4604      	mov	r4, r0
 8027800:	f7ff ffc4 	bl	802778c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027804:	4620      	mov	r0, r4
 8027806:	bd10      	pop	{r4, pc}

08027808 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802780a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802780e:	4606      	mov	r6, r0
 8027810:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027814:	6813      	ldr	r3, [r2, #0]
 8027816:	42a5      	cmp	r5, r4
 8027818:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802781c:	da2b      	bge.n	8027876 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802781e:	42a3      	cmp	r3, r4
 8027820:	dd14      	ble.n	802784c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8027822:	b168      	cbz	r0, 8027840 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027824:	4267      	negs	r7, r4
 8027826:	fb97 f2f0 	sdiv	r2, r7, r0
 802782a:	fb00 7212 	mls	r2, r0, r2, r7
 802782e:	1a82      	subs	r2, r0, r2
 8027830:	fb92 f7f0 	sdiv	r7, r2, r0
 8027834:	fb00 2017 	mls	r0, r0, r7, r2
 8027838:	1a24      	subs	r4, r4, r0
 802783a:	42ac      	cmp	r4, r5
 802783c:	bfb8      	it	lt
 802783e:	462c      	movlt	r4, r5
 8027840:	4630      	mov	r0, r6
 8027842:	4622      	mov	r2, r4
 8027844:	f7ff ffa2 	bl	802778c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027848:	4630      	mov	r0, r6
 802784a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802784c:	42ab      	cmp	r3, r5
 802784e:	dd0e      	ble.n	802786e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027850:	b168      	cbz	r0, 802786e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027852:	425f      	negs	r7, r3
 8027854:	fb97 f2f0 	sdiv	r2, r7, r0
 8027858:	fb00 7212 	mls	r2, r0, r2, r7
 802785c:	1a82      	subs	r2, r0, r2
 802785e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027862:	fb00 2017 	mls	r0, r0, r7, r2
 8027866:	1a1b      	subs	r3, r3, r0
 8027868:	42ab      	cmp	r3, r5
 802786a:	bfb8      	it	lt
 802786c:	462b      	movlt	r3, r5
 802786e:	4622      	mov	r2, r4
 8027870:	461c      	mov	r4, r3
 8027872:	4613      	mov	r3, r2
 8027874:	e7e4      	b.n	8027840 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027876:	42a3      	cmp	r3, r4
 8027878:	da10      	bge.n	802789c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802787a:	b148      	cbz	r0, 8027890 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802787c:	fb94 f2f0 	sdiv	r2, r4, r0
 8027880:	fb00 4212 	mls	r2, r0, r2, r4
 8027884:	1a82      	subs	r2, r0, r2
 8027886:	fb92 f7f0 	sdiv	r7, r2, r0
 802788a:	fb00 2017 	mls	r0, r0, r7, r2
 802788e:	4404      	add	r4, r0
 8027890:	42a5      	cmp	r5, r4
 8027892:	bfa8      	it	ge
 8027894:	4625      	movge	r5, r4
 8027896:	461c      	mov	r4, r3
 8027898:	462b      	mov	r3, r5
 802789a:	e7d1      	b.n	8027840 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802789c:	42ab      	cmp	r3, r5
 802789e:	dacf      	bge.n	8027840 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80278a0:	2800      	cmp	r0, #0
 80278a2:	d0cd      	beq.n	8027840 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80278a4:	fb93 f2f0 	sdiv	r2, r3, r0
 80278a8:	fb00 3212 	mls	r2, r0, r2, r3
 80278ac:	1a82      	subs	r2, r0, r2
 80278ae:	fb92 f7f0 	sdiv	r7, r2, r0
 80278b2:	fb00 2017 	mls	r0, r0, r7, r2
 80278b6:	4403      	add	r3, r0
 80278b8:	42ab      	cmp	r3, r5
 80278ba:	bfa8      	it	ge
 80278bc:	462b      	movge	r3, r5
 80278be:	e7bf      	b.n	8027840 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080278c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80278c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80278c4:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80278c8:	42ae      	cmp	r6, r5
 80278ca:	bfa2      	ittt	ge
 80278cc:	4633      	movge	r3, r6
 80278ce:	462e      	movge	r6, r5
 80278d0:	461d      	movge	r5, r3
 80278d2:	1bab      	subs	r3, r5, r6
 80278d4:	468b      	mov	fp, r1
 80278d6:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80278d8:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80278dc:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80278e0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80278e4:	f04f 0220 	mov.w	r2, #32
 80278e8:	b0ab      	sub	sp, #172	; 0xac
 80278ea:	4604      	mov	r4, r0
 80278ec:	bfa4      	itt	ge
 80278ee:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80278f2:	2600      	movge	r6, #0
 80278f4:	fb99 f9f2 	sdiv	r9, r9, r2
 80278f8:	fb9a faf2 	sdiv	sl, sl, r2
 80278fc:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80278fe:	2900      	cmp	r1, #0
 8027900:	f000 80f5 	beq.w	8027aee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027904:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027908:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802790c:	eba9 0700 	sub.w	r7, r9, r0
 8027910:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027914:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027918:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802791c:	ebaa 0802 	sub.w	r8, sl, r2
 8027920:	4407      	add	r7, r0
 8027922:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027926:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802792a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802792e:	b23f      	sxth	r7, r7
 8027930:	4490      	add	r8, r2
 8027932:	eba9 0707 	sub.w	r7, r9, r7
 8027936:	fa0f f888 	sxth.w	r8, r8
 802793a:	ebaa 0808 	sub.w	r8, sl, r8
 802793e:	2f00      	cmp	r7, #0
 8027940:	bfb8      	it	lt
 8027942:	427f      	neglt	r7, r7
 8027944:	f1b8 0f00 	cmp.w	r8, #0
 8027948:	bfb8      	it	lt
 802794a:	f1c8 0800 	rsblt	r8, r8, #0
 802794e:	45bc      	cmp	ip, r7
 8027950:	bfcc      	ite	gt
 8027952:	f10c 0701 	addgt.w	r7, ip, #1
 8027956:	3701      	addle	r7, #1
 8027958:	4540      	cmp	r0, r8
 802795a:	bfc8      	it	gt
 802795c:	f100 0801 	addgt.w	r8, r0, #1
 8027960:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027964:	f100 0001 	add.w	r0, r0, #1
 8027968:	ea4f 0060 	mov.w	r0, r0, asr #1
 802796c:	f04f 0202 	mov.w	r2, #2
 8027970:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027974:	fb91 f1f2 	sdiv	r1, r1, r2
 8027978:	eba3 0301 	sub.w	r3, r3, r1
 802797c:	bfd8      	it	le
 802797e:	f108 0801 	addle.w	r8, r8, #1
 8027982:	9201      	str	r2, [sp, #4]
 8027984:	930d      	str	r3, [sp, #52]	; 0x34
 8027986:	f7ea fad5 	bl	8011f34 <_ZN8touchgfx7CWRUtil4sineEi>
 802798a:	a92a      	add	r1, sp, #168	; 0xa8
 802798c:	fb08 f808 	mul.w	r8, r8, r8
 8027990:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027994:	a80d      	add	r0, sp, #52	; 0x34
 8027996:	f7ea f9b5 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802799a:	fb07 8707 	mla	r7, r7, r7, r8
 802799e:	f04f 0c20 	mov.w	ip, #32
 80279a2:	fb90 f0fc 	sdiv	r0, r0, ip
 80279a6:	4340      	muls	r0, r0
 80279a8:	4287      	cmp	r7, r0
 80279aa:	9a01      	ldr	r2, [sp, #4]
 80279ac:	da04      	bge.n	80279b8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80279ae:	2401      	movs	r4, #1
 80279b0:	4620      	mov	r0, r4
 80279b2:	b02b      	add	sp, #172	; 0xac
 80279b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80279b8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80279ba:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80279bc:	fb91 f3f2 	sdiv	r3, r1, r2
 80279c0:	4403      	add	r3, r0
 80279c2:	fb93 f3fc 	sdiv	r3, r3, ip
 80279c6:	f9bb 1000 	ldrsh.w	r1, [fp]
 80279ca:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80279ce:	440a      	add	r2, r1
 80279d0:	b212      	sxth	r2, r2
 80279d2:	454a      	cmp	r2, r9
 80279d4:	bfa8      	it	ge
 80279d6:	464a      	movge	r2, r9
 80279d8:	428a      	cmp	r2, r1
 80279da:	bfac      	ite	ge
 80279dc:	eba9 0902 	subge.w	r9, r9, r2
 80279e0:	eba9 0901 	sublt.w	r9, r9, r1
 80279e4:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80279e8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80279ec:	440a      	add	r2, r1
 80279ee:	b212      	sxth	r2, r2
 80279f0:	4552      	cmp	r2, sl
 80279f2:	bfa8      	it	ge
 80279f4:	4652      	movge	r2, sl
 80279f6:	428a      	cmp	r2, r1
 80279f8:	bfac      	ite	ge
 80279fa:	ebaa 0a02 	subge.w	sl, sl, r2
 80279fe:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027a02:	3301      	adds	r3, #1
 8027a04:	fb0a fa0a 	mul.w	sl, sl, sl
 8027a08:	fb09 a909 	mla	r9, r9, r9, sl
 8027a0c:	435b      	muls	r3, r3
 8027a0e:	4599      	cmp	r9, r3
 8027a10:	dccd      	bgt.n	80279ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027a12:	465a      	mov	r2, fp
 8027a14:	4621      	mov	r1, r4
 8027a16:	a80e      	add	r0, sp, #56	; 0x38
 8027a18:	f7ff faae 	bl	8026f78 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8027a1c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8027a1e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027a20:	9209      	str	r2, [sp, #36]	; 0x24
 8027a22:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027a26:	930a      	str	r3, [sp, #40]	; 0x28
 8027a28:	dd07      	ble.n	8027a3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8027a2a:	2102      	movs	r1, #2
 8027a2c:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a30:	4413      	add	r3, r2
 8027a32:	930a      	str	r3, [sp, #40]	; 0x28
 8027a34:	fb93 f3f1 	sdiv	r3, r3, r1
 8027a38:	9309      	str	r3, [sp, #36]	; 0x24
 8027a3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027a3e:	4630      	mov	r0, r6
 8027a40:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027a44:	930b      	str	r3, [sp, #44]	; 0x2c
 8027a46:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8027a4a:	f7ea fa93 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a4e:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027a52:	f04f 0a02 	mov.w	sl, #2
 8027a56:	f849 0d74 	str.w	r0, [r9, #-116]!
 8027a5a:	a80b      	add	r0, sp, #44	; 0x2c
 8027a5c:	4649      	mov	r1, r9
 8027a5e:	f7ea f951 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a62:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027a64:	fb90 f0fa 	sdiv	r0, r0, sl
 8027a68:	eb00 0b03 	add.w	fp, r0, r3
 8027a6c:	4630      	mov	r0, r6
 8027a6e:	f7ff fcc7 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a72:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027a76:	017f      	lsls	r7, r7, #5
 8027a78:	f848 0d78 	str.w	r0, [r8, #-120]!
 8027a7c:	a80b      	add	r0, sp, #44	; 0x2c
 8027a7e:	4641      	mov	r1, r8
 8027a80:	f7ea f940 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a84:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027a86:	fb90 f0fa 	sdiv	r0, r0, sl
 8027a8a:	4659      	mov	r1, fp
 8027a8c:	1a12      	subs	r2, r2, r0
 8027a8e:	a80e      	add	r0, sp, #56	; 0x38
 8027a90:	f7ff fbf2 	bl	8027278 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027a94:	f106 0a20 	add.w	sl, r6, #32
 8027a98:	bb67      	cbnz	r7, 8027af4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8027a9a:	46b3      	mov	fp, r6
 8027a9c:	45aa      	cmp	sl, r5
 8027a9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027aa0:	dc33      	bgt.n	8027b0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027aa2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027aa4:	4650      	mov	r0, sl
 8027aa6:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8027aaa:	920b      	str	r2, [sp, #44]	; 0x2c
 8027aac:	f7ea fa62 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ab0:	4641      	mov	r1, r8
 8027ab2:	900c      	str	r0, [sp, #48]	; 0x30
 8027ab4:	a80b      	add	r0, sp, #44	; 0x2c
 8027ab6:	f7ea f925 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027aba:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8027abc:	2302      	movs	r3, #2
 8027abe:	fb90 f0f3 	sdiv	r0, r0, r3
 8027ac2:	eb00 0b02 	add.w	fp, r0, r2
 8027ac6:	4650      	mov	r0, sl
 8027ac8:	f7ff fc9a 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027acc:	4649      	mov	r1, r9
 8027ace:	900d      	str	r0, [sp, #52]	; 0x34
 8027ad0:	a80b      	add	r0, sp, #44	; 0x2c
 8027ad2:	f7ea f917 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ad6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027ad8:	2302      	movs	r3, #2
 8027ada:	4659      	mov	r1, fp
 8027adc:	fb90 f0f3 	sdiv	r0, r0, r3
 8027ae0:	1a12      	subs	r2, r2, r0
 8027ae2:	a80e      	add	r0, sp, #56	; 0x38
 8027ae4:	46d3      	mov	fp, sl
 8027ae6:	f7ff fc14 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027aea:	44ba      	add	sl, r7
 8027aec:	e7d6      	b.n	8027a9c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8027aee:	fb93 f3f2 	sdiv	r3, r3, r2
 8027af2:	e768      	b.n	80279c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027af4:	fb9a f2f7 	sdiv	r2, sl, r7
 8027af8:	fb07 a212 	mls	r2, r7, r2, sl
 8027afc:	1aba      	subs	r2, r7, r2
 8027afe:	fb92 f1f7 	sdiv	r1, r2, r7
 8027b02:	fb07 2211 	mls	r2, r7, r1, r2
 8027b06:	4492      	add	sl, r2
 8027b08:	e7c7      	b.n	8027a9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8027b0a:	45ab      	cmp	fp, r5
 8027b0c:	da23      	bge.n	8027b56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8027b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027b10:	4628      	mov	r0, r5
 8027b12:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027b16:	920b      	str	r2, [sp, #44]	; 0x2c
 8027b18:	f7ea fa2c 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b1c:	4641      	mov	r1, r8
 8027b1e:	900c      	str	r0, [sp, #48]	; 0x30
 8027b20:	a80b      	add	r0, sp, #44	; 0x2c
 8027b22:	f7ea f8ef 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b26:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b28:	f04f 0a02 	mov.w	sl, #2
 8027b2c:	fb90 f0fa 	sdiv	r0, r0, sl
 8027b30:	4403      	add	r3, r0
 8027b32:	4628      	mov	r0, r5
 8027b34:	9301      	str	r3, [sp, #4]
 8027b36:	f7ff fc63 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b3a:	4649      	mov	r1, r9
 8027b3c:	900d      	str	r0, [sp, #52]	; 0x34
 8027b3e:	a80b      	add	r0, sp, #44	; 0x2c
 8027b40:	f7ea f8e0 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b44:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b46:	9b01      	ldr	r3, [sp, #4]
 8027b48:	fb90 f0fa 	sdiv	r0, r0, sl
 8027b4c:	4619      	mov	r1, r3
 8027b4e:	1a12      	subs	r2, r2, r0
 8027b50:	a80e      	add	r0, sp, #56	; 0x38
 8027b52:	f7ff fbde 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027b58:	b99b      	cbnz	r3, 8027b82 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027b5a:	1bad      	subs	r5, r5, r6
 8027b5c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027b60:	da04      	bge.n	8027b6c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027b62:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027b66:	a80e      	add	r0, sp, #56	; 0x38
 8027b68:	f7ff fbd3 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b6c:	21ff      	movs	r1, #255	; 0xff
 8027b6e:	a80e      	add	r0, sp, #56	; 0x38
 8027b70:	f7ff fabe 	bl	80270f0 <_ZN8touchgfx6Canvas6renderEh>
 8027b74:	4604      	mov	r4, r0
 8027b76:	4b8a      	ldr	r3, [pc, #552]	; (8027da0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027b78:	930e      	str	r3, [sp, #56]	; 0x38
 8027b7a:	a816      	add	r0, sp, #88	; 0x58
 8027b7c:	f7eb fd2e 	bl	80135dc <_ZN8touchgfx7OutlineD1Ev>
 8027b80:	e716      	b.n	80279b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027b82:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027b86:	429a      	cmp	r2, r3
 8027b88:	f0c0 8107 	bcc.w	8027d9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027b8c:	1bab      	subs	r3, r5, r6
 8027b8e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027b92:	9301      	str	r3, [sp, #4]
 8027b94:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027b98:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027b9c:	da43      	bge.n	8027c26 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027b9e:	4628      	mov	r0, r5
 8027ba0:	f7ea f9e8 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ba4:	4649      	mov	r1, r9
 8027ba6:	900d      	str	r0, [sp, #52]	; 0x34
 8027ba8:	a809      	add	r0, sp, #36	; 0x24
 8027baa:	f7ea f8ab 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027bb0:	18c3      	adds	r3, r0, r3
 8027bb2:	4628      	mov	r0, r5
 8027bb4:	9303      	str	r3, [sp, #12]
 8027bb6:	f7ff fc23 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bba:	4649      	mov	r1, r9
 8027bbc:	900d      	str	r0, [sp, #52]	; 0x34
 8027bbe:	a809      	add	r0, sp, #36	; 0x24
 8027bc0:	f7ea f8a0 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bc4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027bc6:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027bca:	1a1b      	subs	r3, r3, r0
 8027bcc:	9302      	str	r3, [sp, #8]
 8027bce:	9204      	str	r2, [sp, #16]
 8027bd0:	eb0a 0305 	add.w	r3, sl, r5
 8027bd4:	9a04      	ldr	r2, [sp, #16]
 8027bd6:	4293      	cmp	r3, r2
 8027bd8:	da25      	bge.n	8027c26 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027bda:	4618      	mov	r0, r3
 8027bdc:	9306      	str	r3, [sp, #24]
 8027bde:	f7ea f9c9 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027be2:	4649      	mov	r1, r9
 8027be4:	900d      	str	r0, [sp, #52]	; 0x34
 8027be6:	a80a      	add	r0, sp, #40	; 0x28
 8027be8:	f7ea f88c 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bec:	9b03      	ldr	r3, [sp, #12]
 8027bee:	2202      	movs	r2, #2
 8027bf0:	fb90 f0f2 	sdiv	r0, r0, r2
 8027bf4:	18c3      	adds	r3, r0, r3
 8027bf6:	9305      	str	r3, [sp, #20]
 8027bf8:	9b06      	ldr	r3, [sp, #24]
 8027bfa:	9207      	str	r2, [sp, #28]
 8027bfc:	4618      	mov	r0, r3
 8027bfe:	f7ff fbff 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c02:	a92a      	add	r1, sp, #168	; 0xa8
 8027c04:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027c08:	a80a      	add	r0, sp, #40	; 0x28
 8027c0a:	f7ea f87b 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c0e:	9b02      	ldr	r3, [sp, #8]
 8027c10:	9a07      	ldr	r2, [sp, #28]
 8027c12:	9905      	ldr	r1, [sp, #20]
 8027c14:	fb90 f2f2 	sdiv	r2, r0, r2
 8027c18:	a80e      	add	r0, sp, #56	; 0x38
 8027c1a:	1a9a      	subs	r2, r3, r2
 8027c1c:	f7ff fb79 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c20:	9b06      	ldr	r3, [sp, #24]
 8027c22:	4453      	add	r3, sl
 8027c24:	e7d6      	b.n	8027bd4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027c26:	45ab      	cmp	fp, r5
 8027c28:	da25      	bge.n	8027c76 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027c2a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027c2e:	4628      	mov	r0, r5
 8027c30:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027c34:	930b      	str	r3, [sp, #44]	; 0x2c
 8027c36:	f7ea f99d 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c3a:	4641      	mov	r1, r8
 8027c3c:	900c      	str	r0, [sp, #48]	; 0x30
 8027c3e:	a80b      	add	r0, sp, #44	; 0x2c
 8027c40:	f7ea f860 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c46:	2202      	movs	r2, #2
 8027c48:	fb90 f0f2 	sdiv	r0, r0, r2
 8027c4c:	eb00 0903 	add.w	r9, r0, r3
 8027c50:	4628      	mov	r0, r5
 8027c52:	9202      	str	r2, [sp, #8]
 8027c54:	f7ff fbd4 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c58:	a92a      	add	r1, sp, #168	; 0xa8
 8027c5a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027c5e:	a80b      	add	r0, sp, #44	; 0x2c
 8027c60:	f7ea f850 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c64:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027c66:	9a02      	ldr	r2, [sp, #8]
 8027c68:	fb90 f2f2 	sdiv	r2, r0, r2
 8027c6c:	4649      	mov	r1, r9
 8027c6e:	1a9a      	subs	r2, r3, r2
 8027c70:	a80e      	add	r0, sp, #56	; 0x38
 8027c72:	f7ff fb4e 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c76:	46d9      	mov	r9, fp
 8027c78:	2502      	movs	r5, #2
 8027c7a:	45b1      	cmp	r9, r6
 8027c7c:	db25      	blt.n	8027cca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027c7e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027c82:	4648      	mov	r0, r9
 8027c84:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027c88:	930b      	str	r3, [sp, #44]	; 0x2c
 8027c8a:	f7ea f973 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c8e:	4641      	mov	r1, r8
 8027c90:	900c      	str	r0, [sp, #48]	; 0x30
 8027c92:	a80b      	add	r0, sp, #44	; 0x2c
 8027c94:	f7ea f836 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027c9a:	fb90 f0f5 	sdiv	r0, r0, r5
 8027c9e:	eb00 0b03 	add.w	fp, r0, r3
 8027ca2:	4648      	mov	r0, r9
 8027ca4:	f7ff fbac 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ca8:	a90d      	add	r1, sp, #52	; 0x34
 8027caa:	900d      	str	r0, [sp, #52]	; 0x34
 8027cac:	a80b      	add	r0, sp, #44	; 0x2c
 8027cae:	f7ea f829 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cb2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027cb4:	fb90 f0f5 	sdiv	r0, r0, r5
 8027cb8:	4659      	mov	r1, fp
 8027cba:	1a12      	subs	r2, r2, r0
 8027cbc:	a80e      	add	r0, sp, #56	; 0x38
 8027cbe:	46cb      	mov	fp, r9
 8027cc0:	f7ff fb27 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027cc4:	eba9 0907 	sub.w	r9, r9, r7
 8027cc8:	e7d7      	b.n	8027c7a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027cca:	455e      	cmp	r6, fp
 8027ccc:	da22      	bge.n	8027d14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027cce:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027cd2:	4630      	mov	r0, r6
 8027cd4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027cd8:	930b      	str	r3, [sp, #44]	; 0x2c
 8027cda:	f7ea f94b 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027cde:	4641      	mov	r1, r8
 8027ce0:	900c      	str	r0, [sp, #48]	; 0x30
 8027ce2:	a80b      	add	r0, sp, #44	; 0x2c
 8027ce4:	f7ea f80e 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ce8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027cea:	2502      	movs	r5, #2
 8027cec:	fb90 f0f5 	sdiv	r0, r0, r5
 8027cf0:	4407      	add	r7, r0
 8027cf2:	4630      	mov	r0, r6
 8027cf4:	f7ff fb84 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027cf8:	a92a      	add	r1, sp, #168	; 0xa8
 8027cfa:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027cfe:	a80b      	add	r0, sp, #44	; 0x2c
 8027d00:	f7ea f800 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d04:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027d06:	fb90 f0f5 	sdiv	r0, r0, r5
 8027d0a:	4639      	mov	r1, r7
 8027d0c:	1a12      	subs	r2, r2, r0
 8027d0e:	a80e      	add	r0, sp, #56	; 0x38
 8027d10:	f7ff faff 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d14:	9b01      	ldr	r3, [sp, #4]
 8027d16:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027d1a:	f6bf af27 	bge.w	8027b6c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027d1e:	4630      	mov	r0, r6
 8027d20:	f7ea f928 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d24:	ad2a      	add	r5, sp, #168	; 0xa8
 8027d26:	f04f 0b02 	mov.w	fp, #2
 8027d2a:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027d2e:	a809      	add	r0, sp, #36	; 0x24
 8027d30:	4629      	mov	r1, r5
 8027d32:	f7e9 ffe7 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d36:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027d38:	eb00 0903 	add.w	r9, r0, r3
 8027d3c:	4630      	mov	r0, r6
 8027d3e:	f7ff fb5f 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d42:	4629      	mov	r1, r5
 8027d44:	900d      	str	r0, [sp, #52]	; 0x34
 8027d46:	a809      	add	r0, sp, #36	; 0x24
 8027d48:	f7e9 ffdc 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027d4e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027d52:	eba3 0800 	sub.w	r8, r3, r0
 8027d56:	4454      	add	r4, sl
 8027d58:	42a6      	cmp	r6, r4
 8027d5a:	f77f af07 	ble.w	8027b6c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027d5e:	4620      	mov	r0, r4
 8027d60:	f7ea f908 	bl	8011f74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d64:	4629      	mov	r1, r5
 8027d66:	900d      	str	r0, [sp, #52]	; 0x34
 8027d68:	a80a      	add	r0, sp, #40	; 0x28
 8027d6a:	f7e9 ffcb 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d6e:	fb90 f0fb 	sdiv	r0, r0, fp
 8027d72:	eb00 0709 	add.w	r7, r0, r9
 8027d76:	4620      	mov	r0, r4
 8027d78:	f7ff fb42 	bl	8027400 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d7c:	a90c      	add	r1, sp, #48	; 0x30
 8027d7e:	900c      	str	r0, [sp, #48]	; 0x30
 8027d80:	a80a      	add	r0, sp, #40	; 0x28
 8027d82:	f7e9 ffbf 	bl	8011d04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d86:	4639      	mov	r1, r7
 8027d88:	fb90 f2fb 	sdiv	r2, r0, fp
 8027d8c:	a80e      	add	r0, sp, #56	; 0x38
 8027d8e:	eba8 0202 	sub.w	r2, r8, r2
 8027d92:	f7ff fabe 	bl	8027312 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027d96:	4454      	add	r4, sl
 8027d98:	e7de      	b.n	8027d58 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027d9a:	2400      	movs	r4, #0
 8027d9c:	e6eb      	b.n	8027b76 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027d9e:	bf00      	nop
 8027da0:	0802f840 	.word	0x0802f840

08027da4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027da4:	b570      	push	{r4, r5, r6, lr}
 8027da6:	790b      	ldrb	r3, [r1, #4]
 8027da8:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027dac:	2b00      	cmp	r3, #0
 8027dae:	bf0c      	ite	eq
 8027db0:	2301      	moveq	r3, #1
 8027db2:	2300      	movne	r3, #0
 8027db4:	4604      	mov	r4, r0
 8027db6:	460e      	mov	r6, r1
 8027db8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027dbc:	d109      	bne.n	8027dd2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027dbe:	b14d      	cbz	r5, 8027dd4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027dc0:	7933      	ldrb	r3, [r6, #4]
 8027dc2:	2b01      	cmp	r3, #1
 8027dc4:	d10c      	bne.n	8027de0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027dc6:	6823      	ldr	r3, [r4, #0]
 8027dc8:	4620      	mov	r0, r4
 8027dca:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027dd0:	4718      	bx	r3
 8027dd2:	b12d      	cbz	r5, 8027de0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027dd4:	6823      	ldr	r3, [r4, #0]
 8027dd6:	4620      	mov	r0, r4
 8027dd8:	695b      	ldr	r3, [r3, #20]
 8027dda:	4798      	blx	r3
 8027ddc:	2d00      	cmp	r5, #0
 8027dde:	d1ef      	bne.n	8027dc0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027de0:	bd70      	pop	{r4, r5, r6, pc}

08027de2 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027de2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027de6:	4770      	bx	lr

08027de8 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027de8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027dec:	4770      	bx	lr

08027dee <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027dee:	6802      	ldr	r2, [r0, #0]
 8027df0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027df4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027df6:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027dfa:	4710      	bx	r2

08027dfc <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027dfc:	6802      	ldr	r2, [r0, #0]
 8027dfe:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e02:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027e04:	eef0 0a40 	vmov.f32	s1, s0
 8027e08:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e0c:	4710      	bx	r2

08027e0e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027e0e:	6802      	ldr	r2, [r0, #0]
 8027e10:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e14:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027e16:	eeb0 1a40 	vmov.f32	s2, s0
 8027e1a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e1e:	4710      	bx	r2

08027e20 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027e20:	6802      	ldr	r2, [r0, #0]
 8027e22:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e26:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027e28:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e2c:	4710      	bx	r2

08027e2e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027e2e:	6802      	ldr	r2, [r0, #0]
 8027e30:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027e34:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027e36:	eef0 0a40 	vmov.f32	s1, s0
 8027e3a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e3e:	4710      	bx	r2

08027e40 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027e40:	6802      	ldr	r2, [r0, #0]
 8027e42:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027e46:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027e48:	eeb0 1a40 	vmov.f32	s2, s0
 8027e4c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e50:	4710      	bx	r2

08027e52 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027e52:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027e56:	4770      	bx	lr

08027e58 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027e58:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027e5c:	4770      	bx	lr

08027e5e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027e5e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027e62:	4770      	bx	lr

08027e64 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027e64:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027e68:	4770      	bx	lr

08027e6a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027e6a:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027e6e:	4770      	bx	lr

08027e70 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027e70:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027e74:	4770      	bx	lr

08027e76 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027e76:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027e7a:	4770      	bx	lr

08027e7c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027e7c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027e80:	4770      	bx	lr

08027e82 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027e82:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027e86:	4770      	bx	lr

08027e88 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027e88:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027e8c:	4770      	bx	lr

08027e8e <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027e8e:	ee07 2a90 	vmov	s15, r2
 8027e92:	6803      	ldr	r3, [r0, #0]
 8027e94:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027e98:	ee07 1a90 	vmov	s15, r1
 8027e9c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027ea0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027ea4:	4718      	bx	r3

08027ea6 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027ea6:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027eaa:	4770      	bx	lr

08027eac <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027eac:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027eb0:	4770      	bx	lr

08027eb2 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027eb2:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027eb6:	4770      	bx	lr

08027eb8 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027eb8:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027ebc:	4770      	bx	lr

08027ebe <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027ebe:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027ec2:	4770      	bx	lr

08027ec4 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027ec4:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027ec8:	4770      	bx	lr

08027eca <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027eca:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027ece:	4770      	bx	lr

08027ed0 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027ed0:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027ed4:	4770      	bx	lr

08027ed6 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027ed6:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027eda:	4770      	bx	lr

08027edc <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027edc:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027ee0:	4770      	bx	lr

08027ee2 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027ee2:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027ee6:	4770      	bx	lr

08027ee8 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027ee8:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027eec:	4770      	bx	lr

08027eee <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027eee:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027ef2:	4770      	bx	lr

08027ef4 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027ef4:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027ef8:	4770      	bx	lr

08027efa <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027efa:	b510      	push	{r4, lr}
 8027efc:	ed2d 8b04 	vpush	{d8-d9}
 8027f00:	6803      	ldr	r3, [r0, #0]
 8027f02:	4604      	mov	r4, r0
 8027f04:	699b      	ldr	r3, [r3, #24]
 8027f06:	eeb0 8a40 	vmov.f32	s16, s0
 8027f0a:	eef0 8a60 	vmov.f32	s17, s1
 8027f0e:	eeb0 9a41 	vmov.f32	s18, s2
 8027f12:	4798      	blx	r3
 8027f14:	6823      	ldr	r3, [r4, #0]
 8027f16:	4620      	mov	r0, r4
 8027f18:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027f1a:	eeb0 1a49 	vmov.f32	s2, s18
 8027f1e:	eef0 0a68 	vmov.f32	s1, s17
 8027f22:	eeb0 0a48 	vmov.f32	s0, s16
 8027f26:	4798      	blx	r3
 8027f28:	ecbd 8b04 	vpop	{d8-d9}
 8027f2c:	6823      	ldr	r3, [r4, #0]
 8027f2e:	4620      	mov	r0, r4
 8027f30:	699b      	ldr	r3, [r3, #24]
 8027f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027f36:	4718      	bx	r3

08027f38 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027f38:	b510      	push	{r4, lr}
 8027f3a:	ed2d 8b02 	vpush	{d8}
 8027f3e:	6803      	ldr	r3, [r0, #0]
 8027f40:	4604      	mov	r4, r0
 8027f42:	699b      	ldr	r3, [r3, #24]
 8027f44:	eeb0 8a40 	vmov.f32	s16, s0
 8027f48:	4798      	blx	r3
 8027f4a:	6823      	ldr	r3, [r4, #0]
 8027f4c:	4620      	mov	r0, r4
 8027f4e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027f52:	eeb0 0a48 	vmov.f32	s0, s16
 8027f56:	4798      	blx	r3
 8027f58:	ecbd 8b02 	vpop	{d8}
 8027f5c:	6823      	ldr	r3, [r4, #0]
 8027f5e:	4620      	mov	r0, r4
 8027f60:	699b      	ldr	r3, [r3, #24]
 8027f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027f66:	4718      	bx	r3

08027f68 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027f68:	2200      	movs	r2, #0
 8027f6a:	8002      	strh	r2, [r0, #0]
 8027f6c:	8042      	strh	r2, [r0, #2]
 8027f6e:	8082      	strh	r2, [r0, #4]
 8027f70:	80c2      	strh	r2, [r0, #6]
 8027f72:	4770      	bx	lr

08027f74 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027f74:	4770      	bx	lr

08027f76 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027f76:	b510      	push	{r4, lr}
 8027f78:	2190      	movs	r1, #144	; 0x90
 8027f7a:	4604      	mov	r4, r0
 8027f7c:	f001 ff3f 	bl	8029dfe <_ZdlPvj>
 8027f80:	4620      	mov	r0, r4
 8027f82:	bd10      	pop	{r4, pc}

08027f84 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8027f84:	b538      	push	{r3, r4, r5, lr}
 8027f86:	2500      	movs	r5, #0
 8027f88:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8027f8c:	2301      	movs	r3, #1
 8027f8e:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027f92:	4b1f      	ldr	r3, [pc, #124]	; (8028010 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027f94:	8085      	strh	r5, [r0, #4]
 8027f96:	80c5      	strh	r5, [r0, #6]
 8027f98:	8105      	strh	r5, [r0, #8]
 8027f9a:	8145      	strh	r5, [r0, #10]
 8027f9c:	8185      	strh	r5, [r0, #12]
 8027f9e:	81c5      	strh	r5, [r0, #14]
 8027fa0:	8205      	strh	r5, [r0, #16]
 8027fa2:	8245      	strh	r5, [r0, #18]
 8027fa4:	61c5      	str	r5, [r0, #28]
 8027fa6:	8405      	strh	r5, [r0, #32]
 8027fa8:	8445      	strh	r5, [r0, #34]	; 0x22
 8027faa:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8027fae:	6003      	str	r3, [r0, #0]
 8027fb0:	880b      	ldrh	r3, [r1, #0]
 8027fb2:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027fb4:	23ff      	movs	r3, #255	; 0xff
 8027fb6:	4604      	mov	r4, r0
 8027fb8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8027fbc:	f7eb f99f 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027fc0:	4b14      	ldr	r3, [pc, #80]	; (8028014 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027fc2:	6023      	str	r3, [r4, #0]
 8027fc4:	2300      	movs	r3, #0
 8027fc6:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8027fca:	4913      	ldr	r1, [pc, #76]	; (8028018 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8027fcc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027fce:	6323      	str	r3, [r4, #48]	; 0x30
 8027fd0:	6363      	str	r3, [r4, #52]	; 0x34
 8027fd2:	63a3      	str	r3, [r4, #56]	; 0x38
 8027fd4:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027fd6:	6463      	str	r3, [r4, #68]	; 0x44
 8027fd8:	64a3      	str	r3, [r4, #72]	; 0x48
 8027fda:	6523      	str	r3, [r4, #80]	; 0x50
 8027fdc:	6563      	str	r3, [r4, #84]	; 0x54
 8027fde:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027fe0:	6623      	str	r3, [r4, #96]	; 0x60
 8027fe2:	66a3      	str	r3, [r4, #104]	; 0x68
 8027fe4:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027fe6:	6763      	str	r3, [r4, #116]	; 0x74
 8027fe8:	67a3      	str	r3, [r4, #120]	; 0x78
 8027fea:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8027fee:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027ff2:	230c      	movs	r3, #12
 8027ff4:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027ff8:	6422      	str	r2, [r4, #64]	; 0x40
 8027ffa:	64e1      	str	r1, [r4, #76]	; 0x4c
 8027ffc:	65a1      	str	r1, [r4, #88]	; 0x58
 8027ffe:	6662      	str	r2, [r4, #100]	; 0x64
 8028000:	6722      	str	r2, [r4, #112]	; 0x70
 8028002:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028004:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8028008:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802800c:	4620      	mov	r0, r4
 802800e:	bd38      	pop	{r3, r4, r5, pc}
 8028010:	0802f2e8 	.word	0x0802f2e8
 8028014:	0802f8cc 	.word	0x0802f8cc
 8028018:	447a0000 	.word	0x447a0000

0802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802801c:	b570      	push	{r4, r5, r6, lr}
 802801e:	ed2d 8b04 	vpush	{d8-d9}
 8028022:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8028026:	add0      	add	r5, sp, #832	; 0x340
 8028028:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802802a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802802e:	4604      	mov	r4, r0
 8028030:	4628      	mov	r0, r5
 8028032:	f7f1 fa7f 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028036:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8028038:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802803c:	4606      	mov	r6, r0
 802803e:	4628      	mov	r0, r5
 8028040:	f7f1 faac 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028044:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8028048:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802804c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802804e:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8028052:	9312      	str	r3, [sp, #72]	; 0x48
 8028054:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028058:	1c72      	adds	r2, r6, #1
 802805a:	3001      	adds	r0, #1
 802805c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8028060:	ee07 2a90 	vmov	s15, r2
 8028064:	ee06 0a90 	vmov	s13, r0
 8028068:	ee36 6a47 	vsub.f32	s12, s12, s14
 802806c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028070:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028074:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028078:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802807c:	9316      	str	r3, [sp, #88]	; 0x58
 802807e:	931a      	str	r3, [sp, #104]	; 0x68
 8028080:	931e      	str	r3, [sp, #120]	; 0x78
 8028082:	2300      	movs	r3, #0
 8028084:	9320      	str	r3, [sp, #128]	; 0x80
 8028086:	9321      	str	r3, [sp, #132]	; 0x84
 8028088:	9322      	str	r3, [sp, #136]	; 0x88
 802808a:	9324      	str	r3, [sp, #144]	; 0x90
 802808c:	9325      	str	r3, [sp, #148]	; 0x94
 802808e:	9326      	str	r3, [sp, #152]	; 0x98
 8028090:	9328      	str	r3, [sp, #160]	; 0xa0
 8028092:	9329      	str	r3, [sp, #164]	; 0xa4
 8028094:	932a      	str	r3, [sp, #168]	; 0xa8
 8028096:	932c      	str	r3, [sp, #176]	; 0xb0
 8028098:	932d      	str	r3, [sp, #180]	; 0xb4
 802809a:	932e      	str	r3, [sp, #184]	; 0xb8
 802809c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80280a0:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80280a4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80280a8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80280ac:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80280b0:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80280b4:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80280b8:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80280bc:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80280c0:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80280c4:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80280c8:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80280cc:	a830      	add	r0, sp, #192	; 0xc0
 80280ce:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80280d2:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80280d6:	f000 fc43 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 80280da:	eeb1 0a49 	vneg.f32	s0, s18
 80280de:	a830      	add	r0, sp, #192	; 0xc0
 80280e0:	f000 fd12 	bl	8028b08 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80280e4:	eeb1 0a68 	vneg.f32	s0, s17
 80280e8:	f000 fd1c 	bl	8028b24 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80280ec:	eeb1 0a48 	vneg.f32	s0, s16
 80280f0:	f000 fd27 	bl	8028b42 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80280f4:	a840      	add	r0, sp, #256	; 0x100
 80280f6:	f000 fc33 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 80280fa:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80280fe:	a840      	add	r0, sp, #256	; 0x100
 8028100:	f000 fc86 	bl	8028a10 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028104:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028108:	f000 fcac 	bl	8028a64 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802810c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8028110:	f000 fcd1 	bl	8028ab6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028114:	a850      	add	r0, sp, #320	; 0x140
 8028116:	f000 fc23 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 802811a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802811e:	a850      	add	r0, sp, #320	; 0x140
 8028120:	f000 fd1e 	bl	8028b60 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028124:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028128:	f000 fd26 	bl	8028b78 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802812c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028130:	f000 fd2f 	bl	8028b92 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028134:	a860      	add	r0, sp, #384	; 0x180
 8028136:	f000 fc13 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 802813a:	eeb0 0a49 	vmov.f32	s0, s18
 802813e:	a860      	add	r0, sp, #384	; 0x180
 8028140:	f000 fce2 	bl	8028b08 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028144:	eeb0 0a68 	vmov.f32	s0, s17
 8028148:	f000 fcec 	bl	8028b24 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802814c:	eeb0 0a48 	vmov.f32	s0, s16
 8028150:	f000 fcf7 	bl	8028b42 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028154:	aa50      	add	r2, sp, #320	; 0x140
 8028156:	a960      	add	r1, sp, #384	; 0x180
 8028158:	a8b0      	add	r0, sp, #704	; 0x2c0
 802815a:	f000 fc1b 	bl	8028994 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802815e:	4628      	mov	r0, r5
 8028160:	aa40      	add	r2, sp, #256	; 0x100
 8028162:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028164:	f000 fc16 	bl	8028994 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028168:	4629      	mov	r1, r5
 802816a:	aa30      	add	r2, sp, #192	; 0xc0
 802816c:	a870      	add	r0, sp, #448	; 0x1c0
 802816e:	f000 fc11 	bl	8028994 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028172:	a880      	add	r0, sp, #512	; 0x200
 8028174:	f000 fbf4 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028178:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802817c:	a880      	add	r0, sp, #512	; 0x200
 802817e:	eeb1 0a40 	vneg.f32	s0, s0
 8028182:	f000 fcc1 	bl	8028b08 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028186:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802818a:	a880      	add	r0, sp, #512	; 0x200
 802818c:	eeb1 0a40 	vneg.f32	s0, s0
 8028190:	f000 fcc8 	bl	8028b24 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028194:	a890      	add	r0, sp, #576	; 0x240
 8028196:	f000 fbe3 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 802819a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802819e:	a890      	add	r0, sp, #576	; 0x240
 80281a0:	f000 fc26 	bl	80289f0 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80281a4:	a8a0      	add	r0, sp, #640	; 0x280
 80281a6:	f000 fbdb 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 80281aa:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80281ae:	a8a0      	add	r0, sp, #640	; 0x280
 80281b0:	f000 fcaa 	bl	8028b08 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80281b4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80281b8:	f000 fcb4 	bl	8028b24 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80281bc:	aa90      	add	r2, sp, #576	; 0x240
 80281be:	a9a0      	add	r1, sp, #640	; 0x280
 80281c0:	a8b0      	add	r0, sp, #704	; 0x2c0
 80281c2:	f000 fbe7 	bl	8028994 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281c6:	4628      	mov	r0, r5
 80281c8:	aa80      	add	r2, sp, #512	; 0x200
 80281ca:	a9b0      	add	r1, sp, #704	; 0x2c0
 80281cc:	f000 fbe2 	bl	8028994 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281d0:	4629      	mov	r1, r5
 80281d2:	aa70      	add	r2, sp, #448	; 0x1c0
 80281d4:	4668      	mov	r0, sp
 80281d6:	466d      	mov	r5, sp
 80281d8:	f000 fbdc 	bl	8028994 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80281dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80281de:	ae70      	add	r6, sp, #448	; 0x1c0
 80281e0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80281e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80281e4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80281e6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80281e8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80281ea:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80281ee:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80281f2:	2500      	movs	r5, #0
 80281f4:	0129      	lsls	r1, r5, #4
 80281f6:	ab20      	add	r3, sp, #128	; 0x80
 80281f8:	185e      	adds	r6, r3, r1
 80281fa:	ab10      	add	r3, sp, #64	; 0x40
 80281fc:	4419      	add	r1, r3
 80281fe:	a870      	add	r0, sp, #448	; 0x1c0
 8028200:	f000 fb7e 	bl	8028900 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028204:	3501      	adds	r5, #1
 8028206:	2d04      	cmp	r5, #4
 8028208:	ed86 0a00 	vstr	s0, [r6]
 802820c:	edc6 0a01 	vstr	s1, [r6, #4]
 8028210:	ed86 1a02 	vstr	s2, [r6, #8]
 8028214:	edc6 1a03 	vstr	s3, [r6, #12]
 8028218:	d1ec      	bne.n	80281f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802821a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802821e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028222:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028226:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802822a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802822e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028232:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028236:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802823a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802823e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028242:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028246:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802824a:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802824e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028252:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028256:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802825a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802825e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028262:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028266:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802826a:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802826e:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028272:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028276:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802827a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802827e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028282:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028286:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802828a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802828e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028292:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028296:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802829a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802829e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80282a2:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80282a6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80282aa:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80282ae:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80282b2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80282b6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80282ba:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80282be:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80282c2:	ecbd 8b04 	vpop	{d8-d9}
 80282c6:	bd70      	pop	{r4, r5, r6, pc}

080282c8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80282c8:	b510      	push	{r4, lr}
 80282ca:	4604      	mov	r4, r0
 80282cc:	f7eb f817 	bl	80132fe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80282d0:	4620      	mov	r0, r4
 80282d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80282d6:	f7ff bea1 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282da <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80282da:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80282de:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80282e2:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80282e6:	f7ff be99 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282ea <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80282ea:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80282ee:	f7ff be95 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282f2 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 80282f2:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 80282f6:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 80282fa:	f7ff be8f 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080282fe <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 80282fe:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028302:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802830a:	bfd8      	it	le
 802830c:	eeb0 0a67 	vmovle.f32	s0, s15
 8028310:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028314:	f7ff be82 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028318 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028318:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802831c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028320:	f7ff be7c 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028324 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028324:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028328:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802832c:	f7ff be76 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028330 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028330:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028334:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028338:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802833c:	f7ff be6e 	b.w	802801c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028340 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028344:	ed2d 8b04 	vpush	{d8-d9}
 8028348:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802834c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028350:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028354:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028358:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802835c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028360:	bf54      	ite	pl
 8028362:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028366:	eeb0 0a48 	vmovmi.f32	s0, s16
 802836a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802836e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028372:	bfd8      	it	le
 8028374:	eeb0 0a49 	vmovle.f32	s0, s18
 8028378:	eef4 8ac0 	vcmpe.f32	s17, s0
 802837c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028380:	bfd8      	it	le
 8028382:	eeb0 0a68 	vmovle.f32	s0, s17
 8028386:	460c      	mov	r4, r1
 8028388:	4607      	mov	r7, r0
 802838a:	f001 ff2b 	bl	802a1e4 <floorf>
 802838e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028396:	bf58      	it	pl
 8028398:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802839c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80283a0:	bf56      	itet	pl
 80283a2:	ee10 3a10 	vmovpl	r3, s0
 80283a6:	2600      	movmi	r6, #0
 80283a8:	b21e      	sxthpl	r6, r3
 80283aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283ae:	bfd8      	it	le
 80283b0:	eeb0 8a69 	vmovle.f32	s16, s19
 80283b4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80283b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283bc:	bf58      	it	pl
 80283be:	eeb0 8a49 	vmovpl.f32	s16, s18
 80283c2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80283c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283ca:	bf54      	ite	pl
 80283cc:	eeb0 0a68 	vmovpl.f32	s0, s17
 80283d0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80283d4:	f001 fec4 	bl	802a160 <ceilf>
 80283d8:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80283dc:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80283e0:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80283e4:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80283e8:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80283ec:	ee07 8a90 	vmov	s15, r8
 80283f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80283f4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80283f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283fc:	bfd8      	it	le
 80283fe:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028402:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028406:	bfdc      	itt	le
 8028408:	ee10 3a10 	vmovle	r3, s0
 802840c:	fa0f f883 	sxthle.w	r8, r3
 8028410:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028414:	bf54      	ite	pl
 8028416:	eeb0 0a69 	vmovpl.f32	s0, s19
 802841a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802841e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028426:	bfd8      	it	le
 8028428:	eeb0 0a49 	vmovle.f32	s0, s18
 802842c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028430:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028434:	bfd8      	it	le
 8028436:	eeb0 0a68 	vmovle.f32	s0, s17
 802843a:	f001 fed3 	bl	802a1e4 <floorf>
 802843e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028446:	bf58      	it	pl
 8028448:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802844c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028450:	bf56      	itet	pl
 8028452:	ee10 3a10 	vmovpl	r3, s0
 8028456:	2500      	movmi	r5, #0
 8028458:	b21d      	sxthpl	r5, r3
 802845a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802845e:	bfd8      	it	le
 8028460:	eeb0 8a69 	vmovle.f32	s16, s19
 8028464:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802846c:	bf58      	it	pl
 802846e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028472:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802847a:	bf54      	ite	pl
 802847c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028480:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028484:	f001 fe6c 	bl	802a160 <ceilf>
 8028488:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802848c:	803e      	strh	r6, [r7, #0]
 802848e:	ee07 3a90 	vmov	s15, r3
 8028492:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028496:	807d      	strh	r5, [r7, #2]
 8028498:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802849c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284a0:	bfd8      	it	le
 80284a2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80284a6:	eba8 0606 	sub.w	r6, r8, r6
 80284aa:	bfdc      	itt	le
 80284ac:	ee10 3a10 	vmovle	r3, s0
 80284b0:	b21b      	sxthle	r3, r3
 80284b2:	1b5d      	subs	r5, r3, r5
 80284b4:	80be      	strh	r6, [r7, #4]
 80284b6:	80fd      	strh	r5, [r7, #6]
 80284b8:	ecbd 8b04 	vpop	{d8-d9}
 80284bc:	4638      	mov	r0, r7
 80284be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080284c2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80284c2:	b513      	push	{r0, r1, r4, lr}
 80284c4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80284c8:	4604      	mov	r4, r0
 80284ca:	b143      	cbz	r3, 80284de <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80284cc:	4601      	mov	r1, r0
 80284ce:	4668      	mov	r0, sp
 80284d0:	f7ff ff36 	bl	8028340 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80284d4:	6823      	ldr	r3, [r4, #0]
 80284d6:	4669      	mov	r1, sp
 80284d8:	691b      	ldr	r3, [r3, #16]
 80284da:	4620      	mov	r0, r4
 80284dc:	4798      	blx	r3
 80284de:	b002      	add	sp, #8
 80284e0:	bd10      	pop	{r4, pc}

080284e2 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80284e2:	4603      	mov	r3, r0
 80284e4:	3026      	adds	r0, #38	; 0x26
 80284e6:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80284ea:	b90b      	cbnz	r3, 80284f0 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80284ec:	f7ee be38 	b.w	8017160 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80284f0:	f7ee be46 	b.w	8017180 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080284f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80284f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284f8:	ed2d 8b04 	vpush	{d8-d9}
 80284fc:	4604      	mov	r4, r0
 80284fe:	469b      	mov	fp, r3
 8028500:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028504:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028508:	f9b1 6000 	ldrsh.w	r6, [r1]
 802850c:	8888      	ldrh	r0, [r1, #4]
 802850e:	b0b3      	sub	sp, #204	; 0xcc
 8028510:	4430      	add	r0, r6
 8028512:	b280      	uxth	r0, r0
 8028514:	9206      	str	r2, [sp, #24]
 8028516:	fa0f fe80 	sxth.w	lr, r0
 802851a:	2200      	movs	r2, #0
 802851c:	4596      	cmp	lr, r2
 802851e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028522:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028526:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802852a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802852c:	9211      	str	r2, [sp, #68]	; 0x44
 802852e:	f340 8129 	ble.w	8028784 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028532:	45b4      	cmp	ip, r6
 8028534:	f340 8126 	ble.w	8028784 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028538:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802853c:	88ca      	ldrh	r2, [r1, #6]
 802853e:	442a      	add	r2, r5
 8028540:	b292      	uxth	r2, r2
 8028542:	b211      	sxth	r1, r2
 8028544:	2900      	cmp	r1, #0
 8028546:	f340 811d 	ble.w	8028784 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802854a:	42ab      	cmp	r3, r5
 802854c:	f340 811a 	ble.w	8028784 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028550:	45f4      	cmp	ip, lr
 8028552:	bfb8      	it	lt
 8028554:	fa1f f08c 	uxthlt.w	r0, ip
 8028558:	428b      	cmp	r3, r1
 802855a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802855e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028562:	bfb8      	it	lt
 8028564:	b29a      	uxthlt	r2, r3
 8028566:	1b80      	subs	r0, r0, r6
 8028568:	1b52      	subs	r2, r2, r5
 802856a:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802856e:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028572:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028576:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802857a:	ab11      	add	r3, sp, #68	; 0x44
 802857c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028580:	6822      	ldr	r2, [r4, #0]
 8028582:	9307      	str	r3, [sp, #28]
 8028584:	ad13      	add	r5, sp, #76	; 0x4c
 8028586:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028588:	e885 0003 	stmia.w	r5, {r0, r1}
 802858c:	4629      	mov	r1, r5
 802858e:	4620      	mov	r0, r4
 8028590:	4790      	blx	r2
 8028592:	4621      	mov	r1, r4
 8028594:	a815      	add	r0, sp, #84	; 0x54
 8028596:	f7ee fd3f 	bl	8017018 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802859a:	a815      	add	r0, sp, #84	; 0x54
 802859c:	f7ed fa04 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80285a0:	9b07      	ldr	r3, [sp, #28]
 80285a2:	1d26      	adds	r6, r4, #4
 80285a4:	4618      	mov	r0, r3
 80285a6:	4631      	mov	r1, r6
 80285a8:	f7ed fa42 	bl	8015a30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80285ac:	4628      	mov	r0, r5
 80285ae:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80285b2:	f7ed f9f9 	bl	80159a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80285b6:	4628      	mov	r0, r5
 80285b8:	f7f1 f8a8 	bl	801970c <_ZNK8touchgfx6Bitmap7getDataEv>
 80285bc:	9007      	str	r0, [sp, #28]
 80285be:	2800      	cmp	r0, #0
 80285c0:	f000 80db 	beq.w	802877a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80285c4:	f8db 2000 	ldr.w	r2, [fp]
 80285c8:	9209      	str	r2, [sp, #36]	; 0x24
 80285ca:	f8db 2004 	ldr.w	r2, [fp, #4]
 80285ce:	920a      	str	r2, [sp, #40]	; 0x28
 80285d0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80285d4:	920b      	str	r2, [sp, #44]	; 0x2c
 80285d6:	f8db 200c 	ldr.w	r2, [fp, #12]
 80285da:	920c      	str	r2, [sp, #48]	; 0x30
 80285dc:	f8da 2000 	ldr.w	r2, [sl]
 80285e0:	920d      	str	r2, [sp, #52]	; 0x34
 80285e2:	f8da 2004 	ldr.w	r2, [sl, #4]
 80285e6:	920e      	str	r2, [sp, #56]	; 0x38
 80285e8:	f8da 2008 	ldr.w	r2, [sl, #8]
 80285ec:	920f      	str	r2, [sp, #60]	; 0x3c
 80285ee:	f8da 200c 	ldr.w	r2, [sl, #12]
 80285f2:	9210      	str	r2, [sp, #64]	; 0x40
 80285f4:	a90d      	add	r1, sp, #52	; 0x34
 80285f6:	4632      	mov	r2, r6
 80285f8:	a809      	add	r0, sp, #36	; 0x24
 80285fa:	f7ed f9fd 	bl	80159f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80285fe:	4632      	mov	r2, r6
 8028600:	a90e      	add	r1, sp, #56	; 0x38
 8028602:	a80a      	add	r0, sp, #40	; 0x28
 8028604:	f7ed f9f8 	bl	80159f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028608:	4632      	mov	r2, r6
 802860a:	a90f      	add	r1, sp, #60	; 0x3c
 802860c:	a80b      	add	r0, sp, #44	; 0x2c
 802860e:	f7ed f9f3 	bl	80159f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028612:	4632      	mov	r2, r6
 8028614:	a910      	add	r1, sp, #64	; 0x40
 8028616:	a80c      	add	r0, sp, #48	; 0x30
 8028618:	f7ed f9ee 	bl	80159f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802861c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028620:	edd7 4a00 	vldr	s9, [r7]
 8028624:	edd7 5a01 	vldr	s11, [r7, #4]
 8028628:	ed98 4a00 	vldr	s8, [r8]
 802862c:	ed98 5a01 	vldr	s10, [r8, #4]
 8028630:	ed99 9a00 	vldr	s18, [r9]
 8028634:	ed99 8a01 	vldr	s16, [r9, #4]
 8028638:	edd9 8a02 	vldr	s17, [r9, #8]
 802863c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8028640:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8028644:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8028648:	eef0 6a67 	vmov.f32	s13, s15
 802864c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8028650:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8028654:	eeb0 7a67 	vmov.f32	s14, s15
 8028658:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802865c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8028660:	eeb0 6a67 	vmov.f32	s12, s15
 8028664:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028668:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802866c:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8028670:	ee16 6a10 	vmov	r6, s12
 8028674:	eeb0 6a67 	vmov.f32	s12, s15
 8028678:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802867c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028680:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028684:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028688:	68ff      	ldr	r7, [r7, #12]
 802868a:	9624      	str	r6, [sp, #144]	; 0x90
 802868c:	ee16 0a10 	vmov	r0, s12
 8028690:	eeb0 6a67 	vmov.f32	s12, s15
 8028694:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028698:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802869c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80286a0:	ee16 1a10 	vmov	r1, s12
 80286a4:	eeb0 6a67 	vmov.f32	s12, s15
 80286a8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80286ac:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80286b0:	ee16 2a10 	vmov	r2, s12
 80286b4:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80286b8:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80286bc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80286c0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80286c4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80286c8:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80286cc:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80286d0:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80286d4:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80286d8:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80286dc:	922d      	str	r2, [sp, #180]	; 0xb4
 80286de:	4a2b      	ldr	r2, [pc, #172]	; (802878c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80286e0:	9b06      	ldr	r3, [sp, #24]
 80286e2:	8812      	ldrh	r2, [r2, #0]
 80286e4:	9317      	str	r3, [sp, #92]	; 0x5c
 80286e6:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80286ea:	9b07      	ldr	r3, [sp, #28]
 80286ec:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80286f0:	4628      	mov	r0, r5
 80286f2:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80286f6:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80286fa:	9218      	str	r2, [sp, #96]	; 0x60
 80286fc:	9319      	str	r3, [sp, #100]	; 0x64
 80286fe:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8028702:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8028706:	9731      	str	r7, [sp, #196]	; 0xc4
 8028708:	f7f1 f830 	bl	801976c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802870c:	901a      	str	r0, [sp, #104]	; 0x68
 802870e:	4628      	mov	r0, r5
 8028710:	f7f0 ff10 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028714:	901b      	str	r0, [sp, #108]	; 0x6c
 8028716:	4628      	mov	r0, r5
 8028718:	f7f0 ff40 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 802871c:	901c      	str	r0, [sp, #112]	; 0x70
 802871e:	4628      	mov	r0, r5
 8028720:	f7f0 ff08 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028724:	eeb4 9a48 	vcmp.f32	s18, s16
 8028728:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802872c:	901d      	str	r0, [sp, #116]	; 0x74
 802872e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8028732:	d107      	bne.n	8028744 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8028734:	eeb4 8a68 	vcmp.f32	s16, s17
 8028738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802873c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8028740:	bf08      	it	eq
 8028742:	461e      	moveq	r6, r3
 8028744:	4b12      	ldr	r3, [pc, #72]	; (8028790 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8028746:	681b      	ldr	r3, [r3, #0]
 8028748:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802874c:	b10a      	cbz	r2, 8028752 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802874e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8028750:	b905      	cbnz	r5, 8028754 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8028752:	689d      	ldr	r5, [r3, #8]
 8028754:	682b      	ldr	r3, [r5, #0]
 8028756:	4620      	mov	r0, r4
 8028758:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802875a:	f7ff fec2 	bl	80284e2 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802875e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8028762:	9604      	str	r6, [sp, #16]
 8028764:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8028768:	ab13      	add	r3, sp, #76	; 0x4c
 802876a:	9301      	str	r3, [sp, #4]
 802876c:	ab15      	add	r3, sp, #84	; 0x54
 802876e:	9300      	str	r3, [sp, #0]
 8028770:	aa1e      	add	r2, sp, #120	; 0x78
 8028772:	ab19      	add	r3, sp, #100	; 0x64
 8028774:	a917      	add	r1, sp, #92	; 0x5c
 8028776:	4628      	mov	r0, r5
 8028778:	47b8      	blx	r7
 802877a:	b033      	add	sp, #204	; 0xcc
 802877c:	ecbd 8b04 	vpop	{d8-d9}
 8028780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028784:	2300      	movs	r3, #0
 8028786:	9312      	str	r3, [sp, #72]	; 0x48
 8028788:	e6f7      	b.n	802857a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802878a:	bf00      	nop
 802878c:	20012dae 	.word	0x20012dae
 8028790:	20012db4 	.word	0x20012db4

08028794 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028798:	ed2d 8b02 	vpush	{d8}
 802879c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80287a0:	b098      	sub	sp, #96	; 0x60
 80287a2:	4604      	mov	r4, r0
 80287a4:	4688      	mov	r8, r1
 80287a6:	2b00      	cmp	r3, #0
 80287a8:	d077      	beq.n	802889a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80287aa:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80287ae:	4628      	mov	r0, r5
 80287b0:	f7f0 fec0 	bl	8019534 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80287b4:	ee07 0a90 	vmov	s15, r0
 80287b8:	4628      	mov	r0, r5
 80287ba:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80287be:	f7f0 feed 	bl	801959c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80287c2:	4b4e      	ldr	r3, [pc, #312]	; (80288fc <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80287c4:	781b      	ldrb	r3, [r3, #0]
 80287c6:	ee07 0a90 	vmov	s15, r0
 80287ca:	2b01      	cmp	r3, #1
 80287cc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80287d0:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80287d4:	d066      	beq.n	80288a4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80287d6:	eeb0 6a47 	vmov.f32	s12, s14
 80287da:	ee17 3a10 	vmov	r3, s14
 80287de:	eeb0 4a48 	vmov.f32	s8, s16
 80287e2:	eeb0 7a48 	vmov.f32	s14, s16
 80287e6:	eef0 4a67 	vmov.f32	s9, s15
 80287ea:	eeb0 8a67 	vmov.f32	s16, s15
 80287ee:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80287f2:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80287f6:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80287fa:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80287fe:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028802:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028806:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028808:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802880a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802880c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8028810:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028814:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028818:	ee73 1a65 	vsub.f32	s3, s6, s11
 802881c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8028820:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028824:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028828:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802882c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8028830:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8028834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028838:	dd3d      	ble.n	80288b6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802883a:	ed8d 5a04 	vstr	s10, [sp, #16]
 802883e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8028842:	edcd 2a06 	vstr	s5, [sp, #24]
 8028846:	f8cd c01c 	str.w	ip, [sp, #28]
 802884a:	edcd 5a08 	vstr	s11, [sp, #32]
 802884e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8028852:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8028856:	970b      	str	r7, [sp, #44]	; 0x2c
 8028858:	960c      	str	r6, [sp, #48]	; 0x30
 802885a:	950d      	str	r5, [sp, #52]	; 0x34
 802885c:	920e      	str	r2, [sp, #56]	; 0x38
 802885e:	900f      	str	r0, [sp, #60]	; 0x3c
 8028860:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8028864:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8028868:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802886c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8028870:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8028874:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8028878:	9316      	str	r3, [sp, #88]	; 0x58
 802887a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802887e:	ab14      	add	r3, sp, #80	; 0x50
 8028880:	9303      	str	r3, [sp, #12]
 8028882:	ab10      	add	r3, sp, #64	; 0x40
 8028884:	9302      	str	r3, [sp, #8]
 8028886:	ab0c      	add	r3, sp, #48	; 0x30
 8028888:	9301      	str	r3, [sp, #4]
 802888a:	ab08      	add	r3, sp, #32
 802888c:	9300      	str	r3, [sp, #0]
 802888e:	2200      	movs	r2, #0
 8028890:	ab04      	add	r3, sp, #16
 8028892:	4641      	mov	r1, r8
 8028894:	4620      	mov	r0, r4
 8028896:	f7ff fe2d 	bl	80284f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802889a:	b018      	add	sp, #96	; 0x60
 802889c:	ecbd 8b02 	vpop	{d8}
 80288a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80288a4:	eeb0 6a48 	vmov.f32	s12, s16
 80288a8:	eef0 4a47 	vmov.f32	s9, s14
 80288ac:	ee17 3a90 	vmov	r3, s15
 80288b0:	eeb0 4a67 	vmov.f32	s8, s15
 80288b4:	e79b      	b.n	80287ee <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80288b6:	ed8d 5a05 	vstr	s10, [sp, #20]
 80288ba:	ed8d 2a04 	vstr	s4, [sp, #16]
 80288be:	f8cd c018 	str.w	ip, [sp, #24]
 80288c2:	edcd 2a07 	vstr	s5, [sp, #28]
 80288c6:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80288ca:	ed8d 3a08 	vstr	s6, [sp, #32]
 80288ce:	970a      	str	r7, [sp, #40]	; 0x28
 80288d0:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80288d4:	960d      	str	r6, [sp, #52]	; 0x34
 80288d6:	950c      	str	r5, [sp, #48]	; 0x30
 80288d8:	900e      	str	r0, [sp, #56]	; 0x38
 80288da:	920f      	str	r2, [sp, #60]	; 0x3c
 80288dc:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80288e0:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80288e4:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80288e8:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80288ec:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80288f0:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80288f4:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80288f8:	9317      	str	r3, [sp, #92]	; 0x5c
 80288fa:	e7c0      	b.n	802887e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80288fc:	20012dac 	.word	0x20012dac

08028900 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028900:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028902:	b08d      	sub	sp, #52	; 0x34
 8028904:	2300      	movs	r3, #0
 8028906:	9304      	str	r3, [sp, #16]
 8028908:	9305      	str	r3, [sp, #20]
 802890a:	9306      	str	r3, [sp, #24]
 802890c:	aa04      	add	r2, sp, #16
 802890e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8028912:	9307      	str	r3, [sp, #28]
 8028914:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028918:	4613      	mov	r3, r2
 802891a:	f101 0710 	add.w	r7, r1, #16
 802891e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802895c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028922:	460c      	mov	r4, r1
 8028924:	4605      	mov	r5, r0
 8028926:	ecb4 7a01 	vldmia	r4!, {s14}
 802892a:	ecf5 6a01 	vldmia	r5!, {s13}
 802892e:	42bc      	cmp	r4, r7
 8028930:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028934:	d1f7      	bne.n	8028926 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8028936:	3010      	adds	r0, #16
 8028938:	42b0      	cmp	r0, r6
 802893a:	ece2 7a01 	vstmia	r2!, {s15}
 802893e:	d1ee      	bne.n	802891e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8028940:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8028942:	ac0c      	add	r4, sp, #48	; 0x30
 8028944:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8028948:	ed9d 0a08 	vldr	s0, [sp, #32]
 802894c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8028950:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8028954:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8028958:	b00d      	add	sp, #52	; 0x34
 802895a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802895c:	00000000 	.word	0x00000000

08028960 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8028960:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028990 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028964:	2300      	movs	r3, #0
 8028966:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802896a:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802896e:	2200      	movs	r2, #0
 8028970:	4293      	cmp	r3, r2
 8028972:	f102 0201 	add.w	r2, r2, #1
 8028976:	bf14      	ite	ne
 8028978:	eef0 6a47 	vmovne.f32	s13, s14
 802897c:	eef0 6a67 	vmoveq.f32	s13, s15
 8028980:	2a04      	cmp	r2, #4
 8028982:	ece1 6a01 	vstmia	r1!, {s13}
 8028986:	d1f3      	bne.n	8028970 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028988:	3301      	adds	r3, #1
 802898a:	2b04      	cmp	r3, #4
 802898c:	d1ed      	bne.n	802896a <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802898e:	4770      	bx	lr
 8028990:	00000000 	.word	0x00000000

08028994 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028998:	460c      	mov	r4, r1
 802899a:	4605      	mov	r5, r0
 802899c:	4690      	mov	r8, r2
 802899e:	f7ff ffdf 	bl	8028960 <_ZN8touchgfx9Matrix4x4C1Ev>
 80289a2:	4628      	mov	r0, r5
 80289a4:	4621      	mov	r1, r4
 80289a6:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80289aa:	2300      	movs	r3, #0
 80289ac:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80289ec <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80289b0:	eb08 0603 	add.w	r6, r8, r3
 80289b4:	460f      	mov	r7, r1
 80289b6:	2400      	movs	r4, #0
 80289b8:	4632      	mov	r2, r6
 80289ba:	ecf7 6a01 	vldmia	r7!, {s13}
 80289be:	ed92 7a00 	vldr	s14, [r2]
 80289c2:	3401      	adds	r4, #1
 80289c4:	2c04      	cmp	r4, #4
 80289c6:	f106 0610 	add.w	r6, r6, #16
 80289ca:	eee6 7a87 	vfma.f32	s15, s13, s14
 80289ce:	d1f3      	bne.n	80289b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80289d0:	18c2      	adds	r2, r0, r3
 80289d2:	3304      	adds	r3, #4
 80289d4:	2b10      	cmp	r3, #16
 80289d6:	edc2 7a00 	vstr	s15, [r2]
 80289da:	d1e7      	bne.n	80289ac <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80289dc:	3110      	adds	r1, #16
 80289de:	4561      	cmp	r1, ip
 80289e0:	f100 0010 	add.w	r0, r0, #16
 80289e4:	d1e1      	bne.n	80289aa <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80289e6:	4628      	mov	r0, r5
 80289e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80289ec:	00000000 	.word	0x00000000

080289f0 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80289f0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80289f4:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80289f8:	f100 0320 	add.w	r3, r0, #32
 80289fc:	3030      	adds	r0, #48	; 0x30
 80289fe:	ecf3 7a01 	vldmia	r3!, {s15}
 8028a02:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028a06:	4283      	cmp	r3, r0
 8028a08:	edc3 7a03 	vstr	s15, [r3, #12]
 8028a0c:	d1f7      	bne.n	80289fe <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8028a0e:	4770      	bx	lr

08028a10 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028a10:	b510      	push	{r4, lr}
 8028a12:	ed2d 8b02 	vpush	{d8}
 8028a16:	4604      	mov	r4, r0
 8028a18:	eef0 8a40 	vmov.f32	s17, s0
 8028a1c:	f001 fb56 	bl	802a0cc <sinf>
 8028a20:	eeb0 8a40 	vmov.f32	s16, s0
 8028a24:	eeb0 0a68 	vmov.f32	s0, s17
 8028a28:	f001 fb04 	bl	802a034 <cosf>
 8028a2c:	f104 0310 	add.w	r3, r4, #16
 8028a30:	f104 0220 	add.w	r2, r4, #32
 8028a34:	eeb1 6a48 	vneg.f32	s12, s16
 8028a38:	edd3 7a04 	vldr	s15, [r3, #16]
 8028a3c:	edd3 6a00 	vldr	s13, [r3]
 8028a40:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028a44:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a48:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028a4c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028a50:	eca3 7a01 	vstmia	r3!, {s14}
 8028a54:	429a      	cmp	r2, r3
 8028a56:	edc3 7a03 	vstr	s15, [r3, #12]
 8028a5a:	d1ed      	bne.n	8028a38 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8028a5c:	ecbd 8b02 	vpop	{d8}
 8028a60:	4620      	mov	r0, r4
 8028a62:	bd10      	pop	{r4, pc}

08028a64 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028a64:	b510      	push	{r4, lr}
 8028a66:	ed2d 8b02 	vpush	{d8}
 8028a6a:	4604      	mov	r4, r0
 8028a6c:	eef0 8a40 	vmov.f32	s17, s0
 8028a70:	f001 fb2c 	bl	802a0cc <sinf>
 8028a74:	eeb0 8a40 	vmov.f32	s16, s0
 8028a78:	eeb0 0a68 	vmov.f32	s0, s17
 8028a7c:	f001 fada 	bl	802a034 <cosf>
 8028a80:	4623      	mov	r3, r4
 8028a82:	f104 0210 	add.w	r2, r4, #16
 8028a86:	eeb1 6a48 	vneg.f32	s12, s16
 8028a8a:	edd3 7a08 	vldr	s15, [r3, #32]
 8028a8e:	edd3 6a00 	vldr	s13, [r3]
 8028a92:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028a96:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a9a:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028a9e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028aa2:	eca3 7a01 	vstmia	r3!, {s14}
 8028aa6:	429a      	cmp	r2, r3
 8028aa8:	edc3 7a07 	vstr	s15, [r3, #28]
 8028aac:	d1ed      	bne.n	8028a8a <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8028aae:	ecbd 8b02 	vpop	{d8}
 8028ab2:	4620      	mov	r0, r4
 8028ab4:	bd10      	pop	{r4, pc}

08028ab6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028ab6:	b510      	push	{r4, lr}
 8028ab8:	ed2d 8b02 	vpush	{d8}
 8028abc:	4604      	mov	r4, r0
 8028abe:	eef0 8a40 	vmov.f32	s17, s0
 8028ac2:	f001 fb03 	bl	802a0cc <sinf>
 8028ac6:	eeb0 8a40 	vmov.f32	s16, s0
 8028aca:	eeb0 0a68 	vmov.f32	s0, s17
 8028ace:	f001 fab1 	bl	802a034 <cosf>
 8028ad2:	4623      	mov	r3, r4
 8028ad4:	f104 0210 	add.w	r2, r4, #16
 8028ad8:	eeb1 6a48 	vneg.f32	s12, s16
 8028adc:	edd3 7a04 	vldr	s15, [r3, #16]
 8028ae0:	edd3 6a00 	vldr	s13, [r3]
 8028ae4:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028ae8:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028aec:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028af0:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028af4:	eca3 7a01 	vstmia	r3!, {s14}
 8028af8:	429a      	cmp	r2, r3
 8028afa:	edc3 7a03 	vstr	s15, [r3, #12]
 8028afe:	d1ed      	bne.n	8028adc <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028b00:	ecbd 8b02 	vpop	{d8}
 8028b04:	4620      	mov	r0, r4
 8028b06:	bd10      	pop	{r4, pc}

08028b08 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028b08:	4603      	mov	r3, r0
 8028b0a:	f100 0210 	add.w	r2, r0, #16
 8028b0e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028b12:	edd3 7a00 	vldr	s15, [r3]
 8028b16:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028b1a:	ece3 7a01 	vstmia	r3!, {s15}
 8028b1e:	4293      	cmp	r3, r2
 8028b20:	d1f5      	bne.n	8028b0e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028b22:	4770      	bx	lr

08028b24 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028b24:	f100 0310 	add.w	r3, r0, #16
 8028b28:	f100 0220 	add.w	r2, r0, #32
 8028b2c:	ed93 7a08 	vldr	s14, [r3, #32]
 8028b30:	edd3 7a00 	vldr	s15, [r3]
 8028b34:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028b38:	ece3 7a01 	vstmia	r3!, {s15}
 8028b3c:	4293      	cmp	r3, r2
 8028b3e:	d1f5      	bne.n	8028b2c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028b40:	4770      	bx	lr

08028b42 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028b42:	f100 0320 	add.w	r3, r0, #32
 8028b46:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028b4a:	ed93 7a04 	vldr	s14, [r3, #16]
 8028b4e:	edd3 7a00 	vldr	s15, [r3]
 8028b52:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028b56:	ece3 7a01 	vstmia	r3!, {s15}
 8028b5a:	4293      	cmp	r3, r2
 8028b5c:	d1f5      	bne.n	8028b4a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028b5e:	4770      	bx	lr

08028b60 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028b60:	4603      	mov	r3, r0
 8028b62:	f100 0210 	add.w	r2, r0, #16
 8028b66:	edd3 7a00 	vldr	s15, [r3]
 8028b6a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b6e:	ece3 7a01 	vstmia	r3!, {s15}
 8028b72:	4293      	cmp	r3, r2
 8028b74:	d1f7      	bne.n	8028b66 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028b76:	4770      	bx	lr

08028b78 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028b78:	f100 0310 	add.w	r3, r0, #16
 8028b7c:	f100 0220 	add.w	r2, r0, #32
 8028b80:	edd3 7a00 	vldr	s15, [r3]
 8028b84:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028b88:	ece3 7a01 	vstmia	r3!, {s15}
 8028b8c:	4293      	cmp	r3, r2
 8028b8e:	d1f7      	bne.n	8028b80 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028b90:	4770      	bx	lr

08028b92 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028b92:	f100 0320 	add.w	r3, r0, #32
 8028b96:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028b9a:	edd3 7a00 	vldr	s15, [r3]
 8028b9e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028ba2:	ece3 7a01 	vstmia	r3!, {s15}
 8028ba6:	4293      	cmp	r3, r2
 8028ba8:	d1f7      	bne.n	8028b9a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028baa:	4770      	bx	lr

08028bac <arm_max_f32>:
 8028bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028bb0:	1e4f      	subs	r7, r1, #1
 8028bb2:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028bb6:	f100 0e04 	add.w	lr, r0, #4
 8028bba:	edd0 7a00 	vldr	s15, [r0]
 8028bbe:	d058      	beq.n	8028c72 <arm_max_f32+0xc6>
 8028bc0:	3014      	adds	r0, #20
 8028bc2:	46c4      	mov	ip, r8
 8028bc4:	2604      	movs	r6, #4
 8028bc6:	2400      	movs	r4, #0
 8028bc8:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028bcc:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028bd0:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028bd4:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028bd8:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028be0:	bfc8      	it	gt
 8028be2:	eef0 7a46 	vmovgt.f32	s15, s12
 8028be6:	f1a6 0503 	sub.w	r5, r6, #3
 8028bea:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028bee:	bfc8      	it	gt
 8028bf0:	462c      	movgt	r4, r5
 8028bf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028bf6:	bf48      	it	mi
 8028bf8:	eef0 7a66 	vmovmi.f32	s15, s13
 8028bfc:	f1a6 0502 	sub.w	r5, r6, #2
 8028c00:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028c04:	bf48      	it	mi
 8028c06:	462c      	movmi	r4, r5
 8028c08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c0c:	bf48      	it	mi
 8028c0e:	eef0 7a47 	vmovmi.f32	s15, s14
 8028c12:	f106 35ff 	add.w	r5, r6, #4294967295
 8028c16:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028c1a:	bf48      	it	mi
 8028c1c:	462c      	movmi	r4, r5
 8028c1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c22:	bf48      	it	mi
 8028c24:	4634      	movmi	r4, r6
 8028c26:	bf48      	it	mi
 8028c28:	eef0 7a65 	vmovmi.f32	s15, s11
 8028c2c:	f1bc 0c01 	subs.w	ip, ip, #1
 8028c30:	f106 0604 	add.w	r6, r6, #4
 8028c34:	f100 0010 	add.w	r0, r0, #16
 8028c38:	d1c6      	bne.n	8028bc8 <arm_max_f32+0x1c>
 8028c3a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028c3e:	f017 0003 	ands.w	r0, r7, #3
 8028c42:	d018      	beq.n	8028c76 <arm_max_f32+0xca>
 8028c44:	1a08      	subs	r0, r1, r0
 8028c46:	ecbe 7a01 	vldmia	lr!, {s14}
 8028c4a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c52:	bfc8      	it	gt
 8028c54:	4604      	movgt	r4, r0
 8028c56:	f100 0001 	add.w	r0, r0, #1
 8028c5a:	bfd8      	it	le
 8028c5c:	eeb0 7a67 	vmovle.f32	s14, s15
 8028c60:	4288      	cmp	r0, r1
 8028c62:	eef0 7a47 	vmov.f32	s15, s14
 8028c66:	d1ee      	bne.n	8028c46 <arm_max_f32+0x9a>
 8028c68:	ed82 7a00 	vstr	s14, [r2]
 8028c6c:	601c      	str	r4, [r3, #0]
 8028c6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028c72:	4644      	mov	r4, r8
 8028c74:	e7e3      	b.n	8028c3e <arm_max_f32+0x92>
 8028c76:	eeb0 7a67 	vmov.f32	s14, s15
 8028c7a:	e7f5      	b.n	8028c68 <arm_max_f32+0xbc>

08028c7c <arm_rfft_fast_init_f32>:
 8028c7c:	084b      	lsrs	r3, r1, #1
 8028c7e:	2b80      	cmp	r3, #128	; 0x80
 8028c80:	b410      	push	{r4}
 8028c82:	8201      	strh	r1, [r0, #16]
 8028c84:	8003      	strh	r3, [r0, #0]
 8028c86:	d047      	beq.n	8028d18 <arm_rfft_fast_init_f32+0x9c>
 8028c88:	d917      	bls.n	8028cba <arm_rfft_fast_init_f32+0x3e>
 8028c8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028c8e:	d03d      	beq.n	8028d0c <arm_rfft_fast_init_f32+0x90>
 8028c90:	d929      	bls.n	8028ce6 <arm_rfft_fast_init_f32+0x6a>
 8028c92:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028c96:	d020      	beq.n	8028cda <arm_rfft_fast_init_f32+0x5e>
 8028c98:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028c9c:	d113      	bne.n	8028cc6 <arm_rfft_fast_init_f32+0x4a>
 8028c9e:	4921      	ldr	r1, [pc, #132]	; (8028d24 <arm_rfft_fast_init_f32+0xa8>)
 8028ca0:	4a21      	ldr	r2, [pc, #132]	; (8028d28 <arm_rfft_fast_init_f32+0xac>)
 8028ca2:	4b22      	ldr	r3, [pc, #136]	; (8028d2c <arm_rfft_fast_init_f32+0xb0>)
 8028ca4:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028ca8:	8184      	strh	r4, [r0, #12]
 8028caa:	6081      	str	r1, [r0, #8]
 8028cac:	6042      	str	r2, [r0, #4]
 8028cae:	6143      	str	r3, [r0, #20]
 8028cb0:	2000      	movs	r0, #0
 8028cb2:	b240      	sxtb	r0, r0
 8028cb4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028cb8:	4770      	bx	lr
 8028cba:	2b20      	cmp	r3, #32
 8028cbc:	d01c      	beq.n	8028cf8 <arm_rfft_fast_init_f32+0x7c>
 8028cbe:	2b40      	cmp	r3, #64	; 0x40
 8028cc0:	d006      	beq.n	8028cd0 <arm_rfft_fast_init_f32+0x54>
 8028cc2:	2b10      	cmp	r3, #16
 8028cc4:	d01d      	beq.n	8028d02 <arm_rfft_fast_init_f32+0x86>
 8028cc6:	20ff      	movs	r0, #255	; 0xff
 8028cc8:	b240      	sxtb	r0, r0
 8028cca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028cce:	4770      	bx	lr
 8028cd0:	2438      	movs	r4, #56	; 0x38
 8028cd2:	4917      	ldr	r1, [pc, #92]	; (8028d30 <arm_rfft_fast_init_f32+0xb4>)
 8028cd4:	4a17      	ldr	r2, [pc, #92]	; (8028d34 <arm_rfft_fast_init_f32+0xb8>)
 8028cd6:	4b18      	ldr	r3, [pc, #96]	; (8028d38 <arm_rfft_fast_init_f32+0xbc>)
 8028cd8:	e7e6      	b.n	8028ca8 <arm_rfft_fast_init_f32+0x2c>
 8028cda:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028cde:	4917      	ldr	r1, [pc, #92]	; (8028d3c <arm_rfft_fast_init_f32+0xc0>)
 8028ce0:	4a17      	ldr	r2, [pc, #92]	; (8028d40 <arm_rfft_fast_init_f32+0xc4>)
 8028ce2:	4b18      	ldr	r3, [pc, #96]	; (8028d44 <arm_rfft_fast_init_f32+0xc8>)
 8028ce4:	e7e0      	b.n	8028ca8 <arm_rfft_fast_init_f32+0x2c>
 8028ce6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028cea:	d1ec      	bne.n	8028cc6 <arm_rfft_fast_init_f32+0x4a>
 8028cec:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028cf0:	4915      	ldr	r1, [pc, #84]	; (8028d48 <arm_rfft_fast_init_f32+0xcc>)
 8028cf2:	4a16      	ldr	r2, [pc, #88]	; (8028d4c <arm_rfft_fast_init_f32+0xd0>)
 8028cf4:	4b16      	ldr	r3, [pc, #88]	; (8028d50 <arm_rfft_fast_init_f32+0xd4>)
 8028cf6:	e7d7      	b.n	8028ca8 <arm_rfft_fast_init_f32+0x2c>
 8028cf8:	2430      	movs	r4, #48	; 0x30
 8028cfa:	4916      	ldr	r1, [pc, #88]	; (8028d54 <arm_rfft_fast_init_f32+0xd8>)
 8028cfc:	4a16      	ldr	r2, [pc, #88]	; (8028d58 <arm_rfft_fast_init_f32+0xdc>)
 8028cfe:	4b17      	ldr	r3, [pc, #92]	; (8028d5c <arm_rfft_fast_init_f32+0xe0>)
 8028d00:	e7d2      	b.n	8028ca8 <arm_rfft_fast_init_f32+0x2c>
 8028d02:	2414      	movs	r4, #20
 8028d04:	4916      	ldr	r1, [pc, #88]	; (8028d60 <arm_rfft_fast_init_f32+0xe4>)
 8028d06:	4a17      	ldr	r2, [pc, #92]	; (8028d64 <arm_rfft_fast_init_f32+0xe8>)
 8028d08:	4b17      	ldr	r3, [pc, #92]	; (8028d68 <arm_rfft_fast_init_f32+0xec>)
 8028d0a:	e7cd      	b.n	8028ca8 <arm_rfft_fast_init_f32+0x2c>
 8028d0c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028d10:	4916      	ldr	r1, [pc, #88]	; (8028d6c <arm_rfft_fast_init_f32+0xf0>)
 8028d12:	4a17      	ldr	r2, [pc, #92]	; (8028d70 <arm_rfft_fast_init_f32+0xf4>)
 8028d14:	4b17      	ldr	r3, [pc, #92]	; (8028d74 <arm_rfft_fast_init_f32+0xf8>)
 8028d16:	e7c7      	b.n	8028ca8 <arm_rfft_fast_init_f32+0x2c>
 8028d18:	24d0      	movs	r4, #208	; 0xd0
 8028d1a:	4917      	ldr	r1, [pc, #92]	; (8028d78 <arm_rfft_fast_init_f32+0xfc>)
 8028d1c:	4a17      	ldr	r2, [pc, #92]	; (8028d7c <arm_rfft_fast_init_f32+0x100>)
 8028d1e:	4b18      	ldr	r3, [pc, #96]	; (8028d80 <arm_rfft_fast_init_f32+0x104>)
 8028d20:	e7c2      	b.n	8028ca8 <arm_rfft_fast_init_f32+0x2c>
 8028d22:	bf00      	nop
 8028d24:	0803e7e0 	.word	0x0803e7e0
 8028d28:	0802f9d8 	.word	0x0802f9d8
 8028d2c:	08035b48 	.word	0x08035b48
 8028d30:	08033ad8 	.word	0x08033ad8
 8028d34:	080405a0 	.word	0x080405a0
 8028d38:	08042a90 	.word	0x08042a90
 8028d3c:	0803c4c8 	.word	0x0803c4c8
 8028d40:	0803a3c8 	.word	0x0803a3c8
 8028d44:	08033b48 	.word	0x08033b48
 8028d48:	08042720 	.word	0x08042720
 8028d4c:	08039b48 	.word	0x08039b48
 8028d50:	080407a0 	.word	0x080407a0
 8028d54:	0803d380 	.word	0x0803d380
 8028d58:	0803c3c8 	.word	0x0803c3c8
 8028d5c:	080339d8 	.word	0x080339d8
 8028d60:	0803d2d8 	.word	0x0803d2d8
 8028d64:	0803a348 	.word	0x0803a348
 8028d68:	0803d300 	.word	0x0803d300
 8028d6c:	08040fa0 	.word	0x08040fa0
 8028d70:	0803d7e0 	.word	0x0803d7e0
 8028d74:	08041320 	.word	0x08041320
 8028d78:	08042c90 	.word	0x08042c90
 8028d7c:	0803d3e0 	.word	0x0803d3e0
 8028d80:	08042320 	.word	0x08042320

08028d84 <arm_rfft_fast_f32>:
 8028d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d88:	8a06      	ldrh	r6, [r0, #16]
 8028d8a:	0876      	lsrs	r6, r6, #1
 8028d8c:	4607      	mov	r7, r0
 8028d8e:	4615      	mov	r5, r2
 8028d90:	8006      	strh	r6, [r0, #0]
 8028d92:	460c      	mov	r4, r1
 8028d94:	2b00      	cmp	r3, #0
 8028d96:	d15c      	bne.n	8028e52 <arm_rfft_fast_f32+0xce>
 8028d98:	461a      	mov	r2, r3
 8028d9a:	2301      	movs	r3, #1
 8028d9c:	f000 fbe6 	bl	802956c <arm_cfft_f32>
 8028da0:	edd4 7a00 	vldr	s15, [r4]
 8028da4:	ed94 7a01 	vldr	s14, [r4, #4]
 8028da8:	883e      	ldrh	r6, [r7, #0]
 8028daa:	6978      	ldr	r0, [r7, #20]
 8028dac:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028db0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028db4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028db8:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028dbc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028dc0:	3e01      	subs	r6, #1
 8028dc2:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028dc6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028dca:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028dce:	ed85 7a00 	vstr	s14, [r5]
 8028dd2:	edc5 7a01 	vstr	s15, [r5, #4]
 8028dd6:	3010      	adds	r0, #16
 8028dd8:	f105 0210 	add.w	r2, r5, #16
 8028ddc:	3b08      	subs	r3, #8
 8028dde:	f104 0110 	add.w	r1, r4, #16
 8028de2:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028de6:	ed93 5a02 	vldr	s10, [r3, #8]
 8028dea:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028dee:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028df2:	edd3 5a03 	vldr	s11, [r3, #12]
 8028df6:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028dfa:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028dfe:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028e02:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028e06:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028e0a:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028e0e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028e12:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028e16:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028e1a:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028e1e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028e22:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028e26:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028e2a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028e2e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028e32:	3e01      	subs	r6, #1
 8028e34:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028e38:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028e3c:	f1a3 0308 	sub.w	r3, r3, #8
 8028e40:	f101 0108 	add.w	r1, r1, #8
 8028e44:	f100 0008 	add.w	r0, r0, #8
 8028e48:	f102 0208 	add.w	r2, r2, #8
 8028e4c:	d1c9      	bne.n	8028de2 <arm_rfft_fast_f32+0x5e>
 8028e4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028e52:	edd1 7a00 	vldr	s15, [r1]
 8028e56:	edd1 6a01 	vldr	s13, [r1, #4]
 8028e5a:	6941      	ldr	r1, [r0, #20]
 8028e5c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028e60:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028e64:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028e68:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028e6c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028e70:	3e01      	subs	r6, #1
 8028e72:	ed82 7a00 	vstr	s14, [r2]
 8028e76:	edc2 7a01 	vstr	s15, [r2, #4]
 8028e7a:	00f0      	lsls	r0, r6, #3
 8028e7c:	b3ee      	cbz	r6, 8028efa <arm_rfft_fast_f32+0x176>
 8028e7e:	3808      	subs	r0, #8
 8028e80:	f101 0e10 	add.w	lr, r1, #16
 8028e84:	4420      	add	r0, r4
 8028e86:	f104 0110 	add.w	r1, r4, #16
 8028e8a:	f102 0c10 	add.w	ip, r2, #16
 8028e8e:	ed90 7a02 	vldr	s14, [r0, #8]
 8028e92:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028e96:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028e9a:	ed90 4a03 	vldr	s8, [r0, #12]
 8028e9e:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028ea2:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028ea6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028eaa:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028eae:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028eb2:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028eb6:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028eba:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028ebe:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028ec2:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028ec6:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028eca:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028ece:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028ed2:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028ed6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028eda:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028ede:	3e01      	subs	r6, #1
 8028ee0:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028ee4:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028ee8:	f1a0 0008 	sub.w	r0, r0, #8
 8028eec:	f101 0108 	add.w	r1, r1, #8
 8028ef0:	f10e 0e08 	add.w	lr, lr, #8
 8028ef4:	f10c 0c08 	add.w	ip, ip, #8
 8028ef8:	d1c9      	bne.n	8028e8e <arm_rfft_fast_f32+0x10a>
 8028efa:	4638      	mov	r0, r7
 8028efc:	4629      	mov	r1, r5
 8028efe:	461a      	mov	r2, r3
 8028f00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028f04:	2301      	movs	r3, #1
 8028f06:	f000 bb31 	b.w	802956c <arm_cfft_f32>
 8028f0a:	bf00      	nop

08028f0c <arm_cfft_radix8by2_f32>:
 8028f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028f10:	ed2d 8b08 	vpush	{d8-d11}
 8028f14:	f8b0 e000 	ldrh.w	lr, [r0]
 8028f18:	6842      	ldr	r2, [r0, #4]
 8028f1a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028f1e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028f22:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028f26:	4607      	mov	r7, r0
 8028f28:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8028f2c:	f000 80af 	beq.w	802908e <arm_cfft_radix8by2_f32+0x182>
 8028f30:	3310      	adds	r3, #16
 8028f32:	18ce      	adds	r6, r1, r3
 8028f34:	3210      	adds	r2, #16
 8028f36:	4443      	add	r3, r8
 8028f38:	f101 0510 	add.w	r5, r1, #16
 8028f3c:	f108 0410 	add.w	r4, r8, #16
 8028f40:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028f44:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028f48:	ed53 3a03 	vldr	s7, [r3, #-12]
 8028f4c:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028f50:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028f54:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028f58:	ed14 0a02 	vldr	s0, [r4, #-8]
 8028f5c:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028f60:	ed56 2a03 	vldr	s5, [r6, #-12]
 8028f64:	ed15 6a03 	vldr	s12, [r5, #-12]
 8028f68:	ed15 7a01 	vldr	s14, [r5, #-4]
 8028f6c:	ed15 3a04 	vldr	s6, [r5, #-16]
 8028f70:	ed54 7a01 	vldr	s15, [r4, #-4]
 8028f74:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028f78:	ed16 1a01 	vldr	s2, [r6, #-4]
 8028f7c:	ed55 4a02 	vldr	s9, [r5, #-8]
 8028f80:	ee73 ba21 	vadd.f32	s23, s6, s3
 8028f84:	ee36 ba26 	vadd.f32	s22, s12, s13
 8028f88:	ee37 aa27 	vadd.f32	s20, s14, s15
 8028f8c:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028f90:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8028f94:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028f98:	ee74 aa80 	vadd.f32	s21, s9, s0
 8028f9c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028fa0:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028fa4:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028fa8:	ed45 aa02 	vstr	s21, [r5, #-8]
 8028fac:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028fb0:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028fb4:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028fb8:	ed06 9a03 	vstr	s18, [r6, #-12]
 8028fbc:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028fc0:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028fc4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028fc8:	ed12 6a03 	vldr	s12, [r2, #-12]
 8028fcc:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028fd0:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028fd4:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028fd8:	ee26 8a86 	vmul.f32	s16, s13, s12
 8028fdc:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028fe0:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028fe4:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028fe8:	ee23 3a06 	vmul.f32	s6, s6, s12
 8028fec:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028ff0:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028ff4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028ff8:	ee36 6a04 	vadd.f32	s12, s12, s8
 8028ffc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029000:	ee72 3a63 	vsub.f32	s7, s4, s7
 8029004:	ee71 2a88 	vadd.f32	s5, s3, s16
 8029008:	ed44 6a03 	vstr	s13, [r4, #-12]
 802900c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8029010:	ed43 3a04 	vstr	s7, [r3, #-16]
 8029014:	ed03 6a03 	vstr	s12, [r3, #-12]
 8029018:	ee77 7a67 	vsub.f32	s15, s14, s15
 802901c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8029020:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029024:	ed52 5a02 	vldr	s11, [r2, #-8]
 8029028:	ee35 6a41 	vsub.f32	s12, s10, s2
 802902c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8029030:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029034:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029038:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802903c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8029040:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029044:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029048:	ee26 7a07 	vmul.f32	s14, s12, s14
 802904c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8029050:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029054:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029058:	ee35 6a46 	vsub.f32	s12, s10, s12
 802905c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8029060:	f1be 0e01 	subs.w	lr, lr, #1
 8029064:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029068:	f105 0510 	add.w	r5, r5, #16
 802906c:	ed44 7a01 	vstr	s15, [r4, #-4]
 8029070:	f106 0610 	add.w	r6, r6, #16
 8029074:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029078:	ed03 7a01 	vstr	s14, [r3, #-4]
 802907c:	f102 0210 	add.w	r2, r2, #16
 8029080:	f104 0410 	add.w	r4, r4, #16
 8029084:	f103 0310 	add.w	r3, r3, #16
 8029088:	f47f af5a 	bne.w	8028f40 <arm_cfft_radix8by2_f32+0x34>
 802908c:	687a      	ldr	r2, [r7, #4]
 802908e:	fa1f f48c 	uxth.w	r4, ip
 8029092:	4608      	mov	r0, r1
 8029094:	2302      	movs	r3, #2
 8029096:	4621      	mov	r1, r4
 8029098:	f000 fbca 	bl	8029830 <arm_radix8_butterfly_f32>
 802909c:	ecbd 8b08 	vpop	{d8-d11}
 80290a0:	4640      	mov	r0, r8
 80290a2:	4621      	mov	r1, r4
 80290a4:	687a      	ldr	r2, [r7, #4]
 80290a6:	2302      	movs	r3, #2
 80290a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80290ac:	f000 bbc0 	b.w	8029830 <arm_radix8_butterfly_f32>

080290b0 <arm_cfft_radix8by4_f32>:
 80290b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80290b4:	ed2d 8b0a 	vpush	{d8-d12}
 80290b8:	8802      	ldrh	r2, [r0, #0]
 80290ba:	ed91 6a00 	vldr	s12, [r1]
 80290be:	b08f      	sub	sp, #60	; 0x3c
 80290c0:	460f      	mov	r7, r1
 80290c2:	0852      	lsrs	r2, r2, #1
 80290c4:	0093      	lsls	r3, r2, #2
 80290c6:	900c      	str	r0, [sp, #48]	; 0x30
 80290c8:	9103      	str	r1, [sp, #12]
 80290ca:	6841      	ldr	r1, [r0, #4]
 80290cc:	ed97 7a01 	vldr	s14, [r7, #4]
 80290d0:	4638      	mov	r0, r7
 80290d2:	4418      	add	r0, r3
 80290d4:	4606      	mov	r6, r0
 80290d6:	9009      	str	r0, [sp, #36]	; 0x24
 80290d8:	4418      	add	r0, r3
 80290da:	edd0 6a00 	vldr	s13, [r0]
 80290de:	edd6 3a00 	vldr	s7, [r6]
 80290e2:	edd6 2a01 	vldr	s5, [r6, #4]
 80290e6:	edd0 7a01 	vldr	s15, [r0, #4]
 80290ea:	900a      	str	r0, [sp, #40]	; 0x28
 80290ec:	ee76 5a26 	vadd.f32	s11, s12, s13
 80290f0:	4604      	mov	r4, r0
 80290f2:	4625      	mov	r5, r4
 80290f4:	441c      	add	r4, r3
 80290f6:	ed94 4a00 	vldr	s8, [r4]
 80290fa:	ed94 5a01 	vldr	s10, [r4, #4]
 80290fe:	9401      	str	r4, [sp, #4]
 8029100:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8029104:	4630      	mov	r0, r6
 8029106:	ee74 4a24 	vadd.f32	s9, s8, s9
 802910a:	463e      	mov	r6, r7
 802910c:	ee14 ea90 	vmov	lr, s9
 8029110:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029114:	f846 eb08 	str.w	lr, [r6], #8
 8029118:	ee37 6a27 	vadd.f32	s12, s14, s15
 802911c:	edd0 4a01 	vldr	s9, [r0, #4]
 8029120:	9604      	str	r6, [sp, #16]
 8029122:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029126:	9e01      	ldr	r6, [sp, #4]
 8029128:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802912c:	ed96 2a01 	vldr	s4, [r6, #4]
 8029130:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029134:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029138:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802913c:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029140:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029144:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029148:	ee73 3a45 	vsub.f32	s7, s6, s10
 802914c:	4604      	mov	r4, r0
 802914e:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029152:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029156:	46a3      	mov	fp, r4
 8029158:	ee37 7a02 	vadd.f32	s14, s14, s4
 802915c:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029160:	ee13 8a90 	vmov	r8, s7
 8029164:	46a4      	mov	ip, r4
 8029166:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802916a:	ed87 7a01 	vstr	s14, [r7, #4]
 802916e:	f84b 8b08 	str.w	r8, [fp], #8
 8029172:	f1ac 0704 	sub.w	r7, ip, #4
 8029176:	ed8c 5a01 	vstr	s10, [ip, #4]
 802917a:	f101 0c08 	add.w	ip, r1, #8
 802917e:	462c      	mov	r4, r5
 8029180:	f8cd c014 	str.w	ip, [sp, #20]
 8029184:	ee15 ca90 	vmov	ip, s11
 8029188:	f844 cb08 	str.w	ip, [r4], #8
 802918c:	9407      	str	r4, [sp, #28]
 802918e:	f101 0410 	add.w	r4, r1, #16
 8029192:	ed85 6a01 	vstr	s12, [r5, #4]
 8029196:	0852      	lsrs	r2, r2, #1
 8029198:	9402      	str	r4, [sp, #8]
 802919a:	462c      	mov	r4, r5
 802919c:	f101 0518 	add.w	r5, r1, #24
 80291a0:	920b      	str	r2, [sp, #44]	; 0x2c
 80291a2:	46b2      	mov	sl, r6
 80291a4:	9506      	str	r5, [sp, #24]
 80291a6:	ee77 7ac4 	vsub.f32	s15, s15, s8
 80291aa:	3a02      	subs	r2, #2
 80291ac:	ee16 5a90 	vmov	r5, s13
 80291b0:	46b6      	mov	lr, r6
 80291b2:	4630      	mov	r0, r6
 80291b4:	0852      	lsrs	r2, r2, #1
 80291b6:	f84a 5b08 	str.w	r5, [sl], #8
 80291ba:	f1a0 0604 	sub.w	r6, r0, #4
 80291be:	edce 7a01 	vstr	s15, [lr, #4]
 80291c2:	9208      	str	r2, [sp, #32]
 80291c4:	f000 8130 	beq.w	8029428 <arm_cfft_radix8by4_f32+0x378>
 80291c8:	4691      	mov	r9, r2
 80291ca:	9a03      	ldr	r2, [sp, #12]
 80291cc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80291d0:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80291d4:	3b08      	subs	r3, #8
 80291d6:	f102 0510 	add.w	r5, r2, #16
 80291da:	f101 0c20 	add.w	ip, r1, #32
 80291de:	f1a4 020c 	sub.w	r2, r4, #12
 80291e2:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 80291e6:	4433      	add	r3, r6
 80291e8:	3410      	adds	r4, #16
 80291ea:	4650      	mov	r0, sl
 80291ec:	4659      	mov	r1, fp
 80291ee:	ed55 3a02 	vldr	s7, [r5, #-8]
 80291f2:	ed14 5a02 	vldr	s10, [r4, #-8]
 80291f6:	ed91 7a00 	vldr	s14, [r1]
 80291fa:	edd0 7a00 	vldr	s15, [r0]
 80291fe:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029202:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029206:	edd0 6a01 	vldr	s13, [r0, #4]
 802920a:	ed91 6a01 	vldr	s12, [r1, #4]
 802920e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029212:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029216:	ee78 4a07 	vadd.f32	s9, s16, s14
 802921a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802921e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029222:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029226:	ed45 4a02 	vstr	s9, [r5, #-8]
 802922a:	edd1 4a01 	vldr	s9, [r1, #4]
 802922e:	ed90 4a01 	vldr	s8, [r0, #4]
 8029232:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029236:	ee76 aa05 	vadd.f32	s21, s12, s10
 802923a:	ee74 4a84 	vadd.f32	s9, s9, s8
 802923e:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029242:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029246:	edd6 1a00 	vldr	s3, [r6]
 802924a:	edd7 0a00 	vldr	s1, [r7]
 802924e:	ed92 4a02 	vldr	s8, [r2, #8]
 8029252:	edd3 3a02 	vldr	s7, [r3, #8]
 8029256:	ed93 2a01 	vldr	s4, [r3, #4]
 802925a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802925e:	edd2 2a01 	vldr	s5, [r2, #4]
 8029262:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029266:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802926a:	ee39 3a81 	vadd.f32	s6, s19, s2
 802926e:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029272:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029276:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802927a:	ee7a aae6 	vsub.f32	s21, s21, s13
 802927e:	ee18 aa90 	vmov	sl, s17
 8029282:	f847 a908 	str.w	sl, [r7], #-8
 8029286:	edd2 8a01 	vldr	s17, [r2, #4]
 802928a:	ed93 9a01 	vldr	s18, [r3, #4]
 802928e:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029292:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029296:	ee78 8a89 	vadd.f32	s17, s17, s18
 802929a:	ee74 0a63 	vsub.f32	s1, s8, s7
 802929e:	edc7 8a01 	vstr	s17, [r7, #4]
 80292a2:	ed18 ba02 	vldr	s22, [r8, #-8]
 80292a6:	ed58 8a01 	vldr	s17, [r8, #-4]
 80292aa:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80292ae:	ee6a ba28 	vmul.f32	s23, s20, s17
 80292b2:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80292b6:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80292ba:	ee30 9a81 	vadd.f32	s18, s1, s2
 80292be:	ee79 9a82 	vadd.f32	s19, s19, s4
 80292c2:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80292c6:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80292ca:	ee69 baa8 	vmul.f32	s23, s19, s17
 80292ce:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80292d2:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80292d6:	ee69 8a28 	vmul.f32	s17, s18, s17
 80292da:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80292de:	ee1c aa10 	vmov	sl, s24
 80292e2:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80292e6:	f841 ab08 	str.w	sl, [r1], #8
 80292ea:	ee3a aa6a 	vsub.f32	s20, s20, s21
 80292ee:	ee3b bacb 	vsub.f32	s22, s23, s22
 80292f2:	ee34 4ac4 	vsub.f32	s8, s9, s8
 80292f6:	ee33 3a62 	vsub.f32	s6, s6, s5
 80292fa:	ed01 aa01 	vstr	s20, [r1, #-4]
 80292fe:	edc2 8a01 	vstr	s17, [r2, #4]
 8029302:	ed82 ba02 	vstr	s22, [r2, #8]
 8029306:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802930a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802930e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029312:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029316:	ee30 0a46 	vsub.f32	s0, s0, s12
 802931a:	ee33 3a42 	vsub.f32	s6, s6, s4
 802931e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029322:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029326:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802932a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802932e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029332:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029336:	ee28 8a04 	vmul.f32	s16, s16, s8
 802933a:	ee20 0a24 	vmul.f32	s0, s0, s9
 802933e:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029342:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029346:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802934a:	ee14 aa10 	vmov	sl, s8
 802934e:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029352:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029356:	ed44 9a02 	vstr	s19, [r4, #-8]
 802935a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802935e:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029362:	f846 a908 	str.w	sl, [r6], #-8
 8029366:	ee35 6a46 	vsub.f32	s12, s10, s12
 802936a:	ee35 7a87 	vadd.f32	s14, s11, s14
 802936e:	edc6 3a01 	vstr	s7, [r6, #4]
 8029372:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029376:	ee77 7a67 	vsub.f32	s15, s14, s15
 802937a:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802937e:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029382:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029386:	ee26 5a87 	vmul.f32	s10, s13, s14
 802938a:	ee72 2a62 	vsub.f32	s5, s4, s5
 802938e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029392:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029396:	ee75 5a25 	vadd.f32	s11, s10, s11
 802939a:	ee62 0a86 	vmul.f32	s1, s5, s12
 802939e:	ee66 6a86 	vmul.f32	s13, s13, s12
 80293a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80293a6:	ee21 6a06 	vmul.f32	s12, s2, s12
 80293aa:	ee62 2a87 	vmul.f32	s5, s5, s14
 80293ae:	ee21 1a07 	vmul.f32	s2, s2, s14
 80293b2:	ee15 aa90 	vmov	sl, s11
 80293b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80293ba:	f840 ab08 	str.w	sl, [r0], #8
 80293be:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80293c2:	ee76 2a22 	vadd.f32	s5, s12, s5
 80293c6:	f1b9 0901 	subs.w	r9, r9, #1
 80293ca:	ed40 7a01 	vstr	s15, [r0, #-4]
 80293ce:	f105 0508 	add.w	r5, r5, #8
 80293d2:	ed83 1a02 	vstr	s2, [r3, #8]
 80293d6:	edc3 2a01 	vstr	s5, [r3, #4]
 80293da:	f108 0808 	add.w	r8, r8, #8
 80293de:	f1a2 0208 	sub.w	r2, r2, #8
 80293e2:	f10c 0c10 	add.w	ip, ip, #16
 80293e6:	f104 0408 	add.w	r4, r4, #8
 80293ea:	f10e 0e18 	add.w	lr, lr, #24
 80293ee:	f1a3 0308 	sub.w	r3, r3, #8
 80293f2:	f47f aefc 	bne.w	80291ee <arm_cfft_radix8by4_f32+0x13e>
 80293f6:	9908      	ldr	r1, [sp, #32]
 80293f8:	9802      	ldr	r0, [sp, #8]
 80293fa:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 80293fe:	00cb      	lsls	r3, r1, #3
 8029400:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029404:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029408:	9102      	str	r1, [sp, #8]
 802940a:	9904      	ldr	r1, [sp, #16]
 802940c:	4419      	add	r1, r3
 802940e:	9104      	str	r1, [sp, #16]
 8029410:	9905      	ldr	r1, [sp, #20]
 8029412:	4419      	add	r1, r3
 8029414:	9105      	str	r1, [sp, #20]
 8029416:	9907      	ldr	r1, [sp, #28]
 8029418:	449b      	add	fp, r3
 802941a:	4419      	add	r1, r3
 802941c:	449a      	add	sl, r3
 802941e:	9b06      	ldr	r3, [sp, #24]
 8029420:	9107      	str	r1, [sp, #28]
 8029422:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029426:	9306      	str	r3, [sp, #24]
 8029428:	9a04      	ldr	r2, [sp, #16]
 802942a:	9807      	ldr	r0, [sp, #28]
 802942c:	edd2 3a00 	vldr	s7, [r2]
 8029430:	ed90 4a00 	vldr	s8, [r0]
 8029434:	eddb 7a00 	vldr	s15, [fp]
 8029438:	ed9a 3a00 	vldr	s6, [sl]
 802943c:	edd2 4a01 	vldr	s9, [r2, #4]
 8029440:	ed90 7a01 	vldr	s14, [r0, #4]
 8029444:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029448:	edda 5a01 	vldr	s11, [sl, #4]
 802944c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029450:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029452:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029456:	ee34 6a87 	vadd.f32	s12, s9, s14
 802945a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802945e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029462:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029466:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802946a:	ed82 5a00 	vstr	s10, [r2]
 802946e:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029472:	edda 4a01 	vldr	s9, [sl, #4]
 8029476:	ee36 5a05 	vadd.f32	s10, s12, s10
 802947a:	ee72 3a04 	vadd.f32	s7, s4, s8
 802947e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029482:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029486:	ed82 5a01 	vstr	s10, [r2, #4]
 802948a:	9a05      	ldr	r2, [sp, #20]
 802948c:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029490:	edd2 1a00 	vldr	s3, [r2]
 8029494:	edd2 2a01 	vldr	s5, [r2, #4]
 8029498:	9a02      	ldr	r2, [sp, #8]
 802949a:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802949e:	ee36 6a42 	vsub.f32	s12, s12, s4
 80294a2:	ee63 4aa1 	vmul.f32	s9, s7, s3
 80294a6:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80294aa:	ee65 2a22 	vmul.f32	s5, s10, s5
 80294ae:	ee25 5a21 	vmul.f32	s10, s10, s3
 80294b2:	ee74 2aa2 	vadd.f32	s5, s9, s5
 80294b6:	ee35 5a63 	vsub.f32	s10, s10, s7
 80294ba:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80294be:	edcb 2a00 	vstr	s5, [fp]
 80294c2:	ed8b 5a01 	vstr	s10, [fp, #4]
 80294c6:	edd2 3a01 	vldr	s7, [r2, #4]
 80294ca:	ed92 5a00 	vldr	s10, [r2]
 80294ce:	9a06      	ldr	r2, [sp, #24]
 80294d0:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80294d4:	ee36 6a65 	vsub.f32	s12, s12, s11
 80294d8:	ee66 4a85 	vmul.f32	s9, s13, s10
 80294dc:	ee26 5a05 	vmul.f32	s10, s12, s10
 80294e0:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80294e4:	ee26 6a23 	vmul.f32	s12, s12, s7
 80294e8:	ee75 6a66 	vsub.f32	s13, s10, s13
 80294ec:	ee34 6a86 	vadd.f32	s12, s9, s12
 80294f0:	ee34 4a42 	vsub.f32	s8, s8, s4
 80294f4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80294f8:	edc0 6a01 	vstr	s13, [r0, #4]
 80294fc:	ed80 6a00 	vstr	s12, [r0]
 8029500:	ed92 6a01 	vldr	s12, [r2, #4]
 8029504:	9803      	ldr	r0, [sp, #12]
 8029506:	ee77 7a43 	vsub.f32	s15, s14, s6
 802950a:	ee75 5a84 	vadd.f32	s11, s11, s8
 802950e:	ed92 7a00 	vldr	s14, [r2]
 8029512:	ee65 6a87 	vmul.f32	s13, s11, s14
 8029516:	ee27 7a87 	vmul.f32	s14, s15, s14
 802951a:	ee65 5a86 	vmul.f32	s11, s11, s12
 802951e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029522:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029526:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802952a:	edca 5a01 	vstr	s11, [sl, #4]
 802952e:	edca 7a00 	vstr	s15, [sl]
 8029532:	6872      	ldr	r2, [r6, #4]
 8029534:	4621      	mov	r1, r4
 8029536:	2304      	movs	r3, #4
 8029538:	f000 f97a 	bl	8029830 <arm_radix8_butterfly_f32>
 802953c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802953e:	6872      	ldr	r2, [r6, #4]
 8029540:	4621      	mov	r1, r4
 8029542:	2304      	movs	r3, #4
 8029544:	f000 f974 	bl	8029830 <arm_radix8_butterfly_f32>
 8029548:	980a      	ldr	r0, [sp, #40]	; 0x28
 802954a:	6872      	ldr	r2, [r6, #4]
 802954c:	4621      	mov	r1, r4
 802954e:	2304      	movs	r3, #4
 8029550:	f000 f96e 	bl	8029830 <arm_radix8_butterfly_f32>
 8029554:	9801      	ldr	r0, [sp, #4]
 8029556:	6872      	ldr	r2, [r6, #4]
 8029558:	4621      	mov	r1, r4
 802955a:	2304      	movs	r3, #4
 802955c:	b00f      	add	sp, #60	; 0x3c
 802955e:	ecbd 8b0a 	vpop	{d8-d12}
 8029562:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029566:	f000 b963 	b.w	8029830 <arm_radix8_butterfly_f32>
 802956a:	bf00      	nop

0802956c <arm_cfft_f32>:
 802956c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029570:	2a01      	cmp	r2, #1
 8029572:	4606      	mov	r6, r0
 8029574:	4617      	mov	r7, r2
 8029576:	460c      	mov	r4, r1
 8029578:	4698      	mov	r8, r3
 802957a:	8805      	ldrh	r5, [r0, #0]
 802957c:	d054      	beq.n	8029628 <arm_cfft_f32+0xbc>
 802957e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029582:	d04c      	beq.n	802961e <arm_cfft_f32+0xb2>
 8029584:	d916      	bls.n	80295b4 <arm_cfft_f32+0x48>
 8029586:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802958a:	d01a      	beq.n	80295c2 <arm_cfft_f32+0x56>
 802958c:	d95c      	bls.n	8029648 <arm_cfft_f32+0xdc>
 802958e:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029592:	d044      	beq.n	802961e <arm_cfft_f32+0xb2>
 8029594:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029598:	d105      	bne.n	80295a6 <arm_cfft_f32+0x3a>
 802959a:	4620      	mov	r0, r4
 802959c:	4629      	mov	r1, r5
 802959e:	6872      	ldr	r2, [r6, #4]
 80295a0:	2301      	movs	r3, #1
 80295a2:	f000 f945 	bl	8029830 <arm_radix8_butterfly_f32>
 80295a6:	f1b8 0f00 	cmp.w	r8, #0
 80295aa:	d111      	bne.n	80295d0 <arm_cfft_f32+0x64>
 80295ac:	2f01      	cmp	r7, #1
 80295ae:	d016      	beq.n	80295de <arm_cfft_f32+0x72>
 80295b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80295b4:	2d20      	cmp	r5, #32
 80295b6:	d032      	beq.n	802961e <arm_cfft_f32+0xb2>
 80295b8:	d94a      	bls.n	8029650 <arm_cfft_f32+0xe4>
 80295ba:	2d40      	cmp	r5, #64	; 0x40
 80295bc:	d0ed      	beq.n	802959a <arm_cfft_f32+0x2e>
 80295be:	2d80      	cmp	r5, #128	; 0x80
 80295c0:	d1f1      	bne.n	80295a6 <arm_cfft_f32+0x3a>
 80295c2:	4630      	mov	r0, r6
 80295c4:	4621      	mov	r1, r4
 80295c6:	f7ff fca1 	bl	8028f0c <arm_cfft_radix8by2_f32>
 80295ca:	f1b8 0f00 	cmp.w	r8, #0
 80295ce:	d0ed      	beq.n	80295ac <arm_cfft_f32+0x40>
 80295d0:	4620      	mov	r0, r4
 80295d2:	89b1      	ldrh	r1, [r6, #12]
 80295d4:	68b2      	ldr	r2, [r6, #8]
 80295d6:	f7d6 fe0b 	bl	80001f0 <arm_bitreversal_32>
 80295da:	2f01      	cmp	r7, #1
 80295dc:	d1e8      	bne.n	80295b0 <arm_cfft_f32+0x44>
 80295de:	ee07 5a90 	vmov	s15, r5
 80295e2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80295e6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80295ea:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 80295ee:	2d00      	cmp	r5, #0
 80295f0:	d0de      	beq.n	80295b0 <arm_cfft_f32+0x44>
 80295f2:	f104 0108 	add.w	r1, r4, #8
 80295f6:	2300      	movs	r3, #0
 80295f8:	3301      	adds	r3, #1
 80295fa:	429d      	cmp	r5, r3
 80295fc:	f101 0108 	add.w	r1, r1, #8
 8029600:	ed11 7a04 	vldr	s14, [r1, #-16]
 8029604:	ed51 7a03 	vldr	s15, [r1, #-12]
 8029608:	ee27 7a26 	vmul.f32	s14, s14, s13
 802960c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029610:	ed01 7a04 	vstr	s14, [r1, #-16]
 8029614:	ed41 7a03 	vstr	s15, [r1, #-12]
 8029618:	d1ee      	bne.n	80295f8 <arm_cfft_f32+0x8c>
 802961a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802961e:	4630      	mov	r0, r6
 8029620:	4621      	mov	r1, r4
 8029622:	f7ff fd45 	bl	80290b0 <arm_cfft_radix8by4_f32>
 8029626:	e7be      	b.n	80295a6 <arm_cfft_f32+0x3a>
 8029628:	b1ad      	cbz	r5, 8029656 <arm_cfft_f32+0xea>
 802962a:	f101 030c 	add.w	r3, r1, #12
 802962e:	2200      	movs	r2, #0
 8029630:	ed53 7a02 	vldr	s15, [r3, #-8]
 8029634:	3201      	adds	r2, #1
 8029636:	eef1 7a67 	vneg.f32	s15, s15
 802963a:	4295      	cmp	r5, r2
 802963c:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029640:	f103 0308 	add.w	r3, r3, #8
 8029644:	d1f4      	bne.n	8029630 <arm_cfft_f32+0xc4>
 8029646:	e79a      	b.n	802957e <arm_cfft_f32+0x12>
 8029648:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802964c:	d0a5      	beq.n	802959a <arm_cfft_f32+0x2e>
 802964e:	e7aa      	b.n	80295a6 <arm_cfft_f32+0x3a>
 8029650:	2d10      	cmp	r5, #16
 8029652:	d0b6      	beq.n	80295c2 <arm_cfft_f32+0x56>
 8029654:	e7a7      	b.n	80295a6 <arm_cfft_f32+0x3a>
 8029656:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802965a:	d894      	bhi.n	8029586 <arm_cfft_f32+0x1a>
 802965c:	e7aa      	b.n	80295b4 <arm_cfft_f32+0x48>
 802965e:	bf00      	nop

08029660 <arm_cmplx_mag_f32>:
 8029660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029664:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029668:	b084      	sub	sp, #16
 802966a:	d07f      	beq.n	802976c <arm_cmplx_mag_f32+0x10c>
 802966c:	2700      	movs	r7, #0
 802966e:	f100 0420 	add.w	r4, r0, #32
 8029672:	f101 0510 	add.w	r5, r1, #16
 8029676:	4646      	mov	r6, r8
 8029678:	e05a      	b.n	8029730 <arm_cmplx_mag_f32+0xd0>
 802967a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802967e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029682:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029686:	f040 80a4 	bne.w	80297d2 <arm_cmplx_mag_f32+0x172>
 802968a:	ed05 0a04 	vstr	s0, [r5, #-16]
 802968e:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029692:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029696:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802969a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802969e:	ee77 7a80 	vadd.f32	s15, s15, s0
 80296a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80296a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296aa:	f2c0 808f 	blt.w	80297cc <arm_cmplx_mag_f32+0x16c>
 80296ae:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80296b2:	eeb4 0a40 	vcmp.f32	s0, s0
 80296b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296ba:	f040 80af 	bne.w	802981c <arm_cmplx_mag_f32+0x1bc>
 80296be:	ed05 0a03 	vstr	s0, [r5, #-12]
 80296c2:	ed54 7a04 	vldr	s15, [r4, #-16]
 80296c6:	ed14 0a03 	vldr	s0, [r4, #-12]
 80296ca:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80296ce:	ee20 0a00 	vmul.f32	s0, s0, s0
 80296d2:	ee77 7a80 	vadd.f32	s15, s15, s0
 80296d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80296da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296de:	db72      	blt.n	80297c6 <arm_cmplx_mag_f32+0x166>
 80296e0:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80296e4:	eeb4 0a40 	vcmp.f32	s0, s0
 80296e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80296ec:	f040 808c 	bne.w	8029808 <arm_cmplx_mag_f32+0x1a8>
 80296f0:	ed05 0a02 	vstr	s0, [r5, #-8]
 80296f4:	ed54 7a02 	vldr	s15, [r4, #-8]
 80296f8:	ed14 0a01 	vldr	s0, [r4, #-4]
 80296fc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029700:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029704:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029708:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802970c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029710:	db20      	blt.n	8029754 <arm_cmplx_mag_f32+0xf4>
 8029712:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029716:	eeb4 0a40 	vcmp.f32	s0, s0
 802971a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802971e:	d169      	bne.n	80297f4 <arm_cmplx_mag_f32+0x194>
 8029720:	3e01      	subs	r6, #1
 8029722:	ed05 0a01 	vstr	s0, [r5, #-4]
 8029726:	f104 0420 	add.w	r4, r4, #32
 802972a:	f105 0510 	add.w	r5, r5, #16
 802972e:	d019      	beq.n	8029764 <arm_cmplx_mag_f32+0x104>
 8029730:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8029734:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8029738:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802973c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029740:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029744:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802974c:	da95      	bge.n	802967a <arm_cmplx_mag_f32+0x1a>
 802974e:	f845 7c10 	str.w	r7, [r5, #-16]
 8029752:	e79c      	b.n	802968e <arm_cmplx_mag_f32+0x2e>
 8029754:	3e01      	subs	r6, #1
 8029756:	f845 7c04 	str.w	r7, [r5, #-4]
 802975a:	f104 0420 	add.w	r4, r4, #32
 802975e:	f105 0510 	add.w	r5, r5, #16
 8029762:	d1e5      	bne.n	8029730 <arm_cmplx_mag_f32+0xd0>
 8029764:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029768:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802976c:	f012 0503 	ands.w	r5, r2, #3
 8029770:	d026      	beq.n	80297c0 <arm_cmplx_mag_f32+0x160>
 8029772:	2600      	movs	r6, #0
 8029774:	f100 0408 	add.w	r4, r0, #8
 8029778:	e00c      	b.n	8029794 <arm_cmplx_mag_f32+0x134>
 802977a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802977e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029786:	d12e      	bne.n	80297e6 <arm_cmplx_mag_f32+0x186>
 8029788:	3d01      	subs	r5, #1
 802978a:	ed01 0a01 	vstr	s0, [r1, #-4]
 802978e:	f104 0408 	add.w	r4, r4, #8
 8029792:	d015      	beq.n	80297c0 <arm_cmplx_mag_f32+0x160>
 8029794:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029798:	ed14 0a01 	vldr	s0, [r4, #-4]
 802979c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80297a0:	ee20 0a00 	vmul.f32	s0, s0, s0
 80297a4:	3104      	adds	r1, #4
 80297a6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80297aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80297ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297b2:	dae2      	bge.n	802977a <arm_cmplx_mag_f32+0x11a>
 80297b4:	3d01      	subs	r5, #1
 80297b6:	f841 6c04 	str.w	r6, [r1, #-4]
 80297ba:	f104 0408 	add.w	r4, r4, #8
 80297be:	d1e9      	bne.n	8029794 <arm_cmplx_mag_f32+0x134>
 80297c0:	b004      	add	sp, #16
 80297c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80297c6:	f845 7c08 	str.w	r7, [r5, #-8]
 80297ca:	e793      	b.n	80296f4 <arm_cmplx_mag_f32+0x94>
 80297cc:	f845 7c0c 	str.w	r7, [r5, #-12]
 80297d0:	e777      	b.n	80296c2 <arm_cmplx_mag_f32+0x62>
 80297d2:	eeb0 0a67 	vmov.f32	s0, s15
 80297d6:	9203      	str	r2, [sp, #12]
 80297d8:	9102      	str	r1, [sp, #8]
 80297da:	9001      	str	r0, [sp, #4]
 80297dc:	f000 fb38 	bl	8029e50 <sqrtf>
 80297e0:	a801      	add	r0, sp, #4
 80297e2:	c807      	ldmia	r0, {r0, r1, r2}
 80297e4:	e751      	b.n	802968a <arm_cmplx_mag_f32+0x2a>
 80297e6:	eeb0 0a67 	vmov.f32	s0, s15
 80297ea:	9101      	str	r1, [sp, #4]
 80297ec:	f000 fb30 	bl	8029e50 <sqrtf>
 80297f0:	9901      	ldr	r1, [sp, #4]
 80297f2:	e7c9      	b.n	8029788 <arm_cmplx_mag_f32+0x128>
 80297f4:	eeb0 0a67 	vmov.f32	s0, s15
 80297f8:	9203      	str	r2, [sp, #12]
 80297fa:	9102      	str	r1, [sp, #8]
 80297fc:	9001      	str	r0, [sp, #4]
 80297fe:	f000 fb27 	bl	8029e50 <sqrtf>
 8029802:	a801      	add	r0, sp, #4
 8029804:	c807      	ldmia	r0, {r0, r1, r2}
 8029806:	e78b      	b.n	8029720 <arm_cmplx_mag_f32+0xc0>
 8029808:	eeb0 0a67 	vmov.f32	s0, s15
 802980c:	9203      	str	r2, [sp, #12]
 802980e:	9102      	str	r1, [sp, #8]
 8029810:	9001      	str	r0, [sp, #4]
 8029812:	f000 fb1d 	bl	8029e50 <sqrtf>
 8029816:	a801      	add	r0, sp, #4
 8029818:	c807      	ldmia	r0, {r0, r1, r2}
 802981a:	e769      	b.n	80296f0 <arm_cmplx_mag_f32+0x90>
 802981c:	eeb0 0a67 	vmov.f32	s0, s15
 8029820:	9203      	str	r2, [sp, #12]
 8029822:	9102      	str	r1, [sp, #8]
 8029824:	9001      	str	r0, [sp, #4]
 8029826:	f000 fb13 	bl	8029e50 <sqrtf>
 802982a:	a801      	add	r0, sp, #4
 802982c:	c807      	ldmia	r0, {r0, r1, r2}
 802982e:	e746      	b.n	80296be <arm_cmplx_mag_f32+0x5e>

08029830 <arm_radix8_butterfly_f32>:
 8029830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029834:	ed2d 8b10 	vpush	{d8-d15}
 8029838:	b09d      	sub	sp, #116	; 0x74
 802983a:	461c      	mov	r4, r3
 802983c:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029b60 <arm_radix8_butterfly_f32+0x330>
 8029840:	921a      	str	r2, [sp, #104]	; 0x68
 8029842:	1d03      	adds	r3, r0, #4
 8029844:	4682      	mov	sl, r0
 8029846:	4689      	mov	r9, r1
 8029848:	468b      	mov	fp, r1
 802984a:	931b      	str	r3, [sp, #108]	; 0x6c
 802984c:	9400      	str	r4, [sp, #0]
 802984e:	469e      	mov	lr, r3
 8029850:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8029854:	005a      	lsls	r2, r3, #1
 8029856:	18d6      	adds	r6, r2, r3
 8029858:	18f5      	adds	r5, r6, r3
 802985a:	9203      	str	r2, [sp, #12]
 802985c:	195a      	adds	r2, r3, r5
 802985e:	18d0      	adds	r0, r2, r3
 8029860:	00df      	lsls	r7, r3, #3
 8029862:	1819      	adds	r1, r3, r0
 8029864:	463c      	mov	r4, r7
 8029866:	9701      	str	r7, [sp, #4]
 8029868:	4457      	add	r7, sl
 802986a:	930c      	str	r3, [sp, #48]	; 0x30
 802986c:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8029870:	011b      	lsls	r3, r3, #4
 8029872:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8029876:	eb07 0c04 	add.w	ip, r7, r4
 802987a:	9c00      	ldr	r4, [sp, #0]
 802987c:	9302      	str	r3, [sp, #8]
 802987e:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8029882:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029886:	3204      	adds	r2, #4
 8029888:	3104      	adds	r1, #4
 802988a:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802988e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8029892:	f04f 0800 	mov.w	r8, #0
 8029896:	eddc 7a00 	vldr	s15, [ip]
 802989a:	edd7 6a00 	vldr	s13, [r7]
 802989e:	edd6 3a00 	vldr	s7, [r6]
 80298a2:	ed5e aa01 	vldr	s21, [lr, #-4]
 80298a6:	edd5 4a00 	vldr	s9, [r5]
 80298aa:	ed90 2a00 	vldr	s4, [r0]
 80298ae:	ed12 7a01 	vldr	s14, [r2, #-4]
 80298b2:	ed51 0a01 	vldr	s1, [r1, #-4]
 80298b6:	ee77 8a82 	vadd.f32	s17, s15, s4
 80298ba:	ee33 4aa0 	vadd.f32	s8, s7, s1
 80298be:	ee76 1a87 	vadd.f32	s3, s13, s14
 80298c2:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 80298c6:	ee31 6a84 	vadd.f32	s12, s3, s8
 80298ca:	ee33 5a28 	vadd.f32	s10, s6, s17
 80298ce:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80298d2:	ee75 6a06 	vadd.f32	s13, s10, s12
 80298d6:	ee35 5a46 	vsub.f32	s10, s10, s12
 80298da:	ed4e 6a01 	vstr	s13, [lr, #-4]
 80298de:	ed85 5a00 	vstr	s10, [r5]
 80298e2:	ed96 1a01 	vldr	s2, [r6, #4]
 80298e6:	edd7 5a01 	vldr	s11, [r7, #4]
 80298ea:	ed92 aa00 	vldr	s20, [r2]
 80298ee:	ed91 6a00 	vldr	s12, [r1]
 80298f2:	ed9e 9a00 	vldr	s18, [lr]
 80298f6:	ed95 5a01 	vldr	s10, [r5, #4]
 80298fa:	eddc 6a01 	vldr	s13, [ip, #4]
 80298fe:	edd0 9a01 	vldr	s19, [r0, #4]
 8029902:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8029906:	ee71 2a46 	vsub.f32	s5, s2, s12
 802990a:	ee75 3aca 	vsub.f32	s7, s11, s20
 802990e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8029912:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029916:	ee37 7a20 	vadd.f32	s14, s14, s1
 802991a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802991e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029922:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029926:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802992a:	ee39 5a45 	vsub.f32	s10, s18, s10
 802992e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8029932:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8029936:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802993a:	ee31 6a06 	vadd.f32	s12, s2, s12
 802993e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8029942:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029946:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802994a:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802994e:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029952:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029956:	ee75 8a86 	vadd.f32	s17, s11, s12
 802995a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802995e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029962:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029966:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802996a:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802996e:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029972:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029976:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802997a:	ee75 4a22 	vadd.f32	s9, s10, s5
 802997e:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029982:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029986:	ee33 8a06 	vadd.f32	s16, s6, s12
 802998a:	ee75 2a87 	vadd.f32	s5, s11, s14
 802998e:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029992:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029996:	ee74 0a61 	vsub.f32	s1, s8, s3
 802999a:	ee33 2a80 	vadd.f32	s4, s7, s0
 802999e:	ee35 7ac7 	vsub.f32	s14, s11, s14
 80299a2:	ee34 3ac5 	vsub.f32	s6, s9, s10
 80299a6:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80299aa:	ee31 1a68 	vsub.f32	s2, s2, s17
 80299ae:	ee34 4a21 	vadd.f32	s8, s8, s3
 80299b2:	ee73 3ac0 	vsub.f32	s7, s7, s0
 80299b6:	ee74 4a85 	vadd.f32	s9, s9, s10
 80299ba:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80299be:	44d8      	add	r8, fp
 80299c0:	45c1      	cmp	r9, r8
 80299c2:	ed8e 9a00 	vstr	s18, [lr]
 80299c6:	ed85 1a01 	vstr	s2, [r5, #4]
 80299ca:	449e      	add	lr, r3
 80299cc:	ed8c 8a00 	vstr	s16, [ip]
 80299d0:	441d      	add	r5, r3
 80299d2:	ed80 6a00 	vstr	s12, [r0]
 80299d6:	edcc 0a01 	vstr	s1, [ip, #4]
 80299da:	ed80 4a01 	vstr	s8, [r0, #4]
 80299de:	449c      	add	ip, r3
 80299e0:	ed87 2a00 	vstr	s4, [r7]
 80299e4:	4418      	add	r0, r3
 80299e6:	ed41 3a01 	vstr	s7, [r1, #-4]
 80299ea:	ed42 2a01 	vstr	s5, [r2, #-4]
 80299ee:	ed86 7a00 	vstr	s14, [r6]
 80299f2:	ed87 3a01 	vstr	s6, [r7, #4]
 80299f6:	edc1 4a00 	vstr	s9, [r1]
 80299fa:	441f      	add	r7, r3
 80299fc:	edc2 5a00 	vstr	s11, [r2]
 8029a00:	4419      	add	r1, r3
 8029a02:	edc6 6a01 	vstr	s13, [r6, #4]
 8029a06:	441a      	add	r2, r3
 8029a08:	441e      	add	r6, r3
 8029a0a:	f63f af44 	bhi.w	8029896 <arm_radix8_butterfly_f32+0x66>
 8029a0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029a10:	2907      	cmp	r1, #7
 8029a12:	4620      	mov	r0, r4
 8029a14:	f240 81e9 	bls.w	8029dea <arm_radix8_butterfly_f32+0x5ba>
 8029a18:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8029a1c:	193e      	adds	r6, r7, r4
 8029a1e:	1935      	adds	r5, r6, r4
 8029a20:	9c03      	ldr	r4, [sp, #12]
 8029a22:	9000      	str	r0, [sp, #0]
 8029a24:	4622      	mov	r2, r4
 8029a26:	3201      	adds	r2, #1
 8029a28:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8029a2c:	9900      	ldr	r1, [sp, #0]
 8029a2e:	1828      	adds	r0, r5, r0
 8029a30:	eb00 0e01 	add.w	lr, r0, r1
 8029a34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029a36:	440a      	add	r2, r1
 8029a38:	eb04 0c01 	add.w	ip, r4, r1
 8029a3c:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029a40:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029a44:	9a00      	ldr	r2, [sp, #0]
 8029a46:	940f      	str	r4, [sp, #60]	; 0x3c
 8029a48:	00ed      	lsls	r5, r5, #3
 8029a4a:	9511      	str	r5, [sp, #68]	; 0x44
 8029a4c:	00d5      	lsls	r5, r2, #3
 8029a4e:	950d      	str	r5, [sp, #52]	; 0x34
 8029a50:	9d01      	ldr	r5, [sp, #4]
 8029a52:	3508      	adds	r5, #8
 8029a54:	9516      	str	r5, [sp, #88]	; 0x58
 8029a56:	9d02      	ldr	r5, [sp, #8]
 8029a58:	3508      	adds	r5, #8
 8029a5a:	0114      	lsls	r4, r2, #4
 8029a5c:	9517      	str	r5, [sp, #92]	; 0x5c
 8029a5e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029a60:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029a62:	940e      	str	r4, [sp, #56]	; 0x38
 8029a64:	00c0      	lsls	r0, r0, #3
 8029a66:	9010      	str	r0, [sp, #64]	; 0x40
 8029a68:	18aa      	adds	r2, r5, r2
 8029a6a:	9207      	str	r2, [sp, #28]
 8029a6c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029a6e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029a70:	18aa      	adds	r2, r5, r2
 8029a72:	9208      	str	r2, [sp, #32]
 8029a74:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029a76:	18aa      	adds	r2, r5, r2
 8029a78:	9209      	str	r2, [sp, #36]	; 0x24
 8029a7a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8029a7e:	f10e 0204 	add.w	r2, lr, #4
 8029a82:	920a      	str	r2, [sp, #40]	; 0x28
 8029a84:	00c9      	lsls	r1, r1, #3
 8029a86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029a88:	310c      	adds	r1, #12
 8029a8a:	00f6      	lsls	r6, r6, #3
 8029a8c:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029a90:	9114      	str	r1, [sp, #80]	; 0x50
 8029a92:	18a9      	adds	r1, r5, r2
 8029a94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029a96:	9612      	str	r6, [sp, #72]	; 0x48
 8029a98:	00ff      	lsls	r7, r7, #3
 8029a9a:	19ae      	adds	r6, r5, r6
 8029a9c:	3008      	adds	r0, #8
 8029a9e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029aa2:	9606      	str	r6, [sp, #24]
 8029aa4:	9019      	str	r0, [sp, #100]	; 0x64
 8029aa6:	18aa      	adds	r2, r5, r2
 8029aa8:	0164      	lsls	r4, r4, #5
 8029aaa:	19ee      	adds	r6, r5, r7
 8029aac:	f10c 000c 	add.w	r0, ip, #12
 8029ab0:	9713      	str	r7, [sp, #76]	; 0x4c
 8029ab2:	9604      	str	r6, [sp, #16]
 8029ab4:	9015      	str	r0, [sp, #84]	; 0x54
 8029ab6:	9103      	str	r1, [sp, #12]
 8029ab8:	9205      	str	r2, [sp, #20]
 8029aba:	f104 0208 	add.w	r2, r4, #8
 8029abe:	9218      	str	r2, [sp, #96]	; 0x60
 8029ac0:	f04f 0801 	mov.w	r8, #1
 8029ac4:	2200      	movs	r2, #0
 8029ac6:	f102 0108 	add.w	r1, r2, #8
 8029aca:	460f      	mov	r7, r1
 8029acc:	910b      	str	r1, [sp, #44]	; 0x2c
 8029ace:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029ad0:	188e      	adds	r6, r1, r2
 8029ad2:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029ad4:	188d      	adds	r5, r1, r2
 8029ad6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029ad8:	188c      	adds	r4, r1, r2
 8029ada:	9919      	ldr	r1, [sp, #100]	; 0x64
 8029adc:	1888      	adds	r0, r1, r2
 8029ade:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029ae0:	eb01 0c02 	add.w	ip, r1, r2
 8029ae4:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029ae6:	440a      	add	r2, r1
 8029ae8:	9903      	ldr	r1, [sp, #12]
 8029aea:	edd1 fa00 	vldr	s31, [r1]
 8029aee:	9905      	ldr	r1, [sp, #20]
 8029af0:	ed91 fa00 	vldr	s30, [r1]
 8029af4:	9904      	ldr	r1, [sp, #16]
 8029af6:	edd1 ea00 	vldr	s29, [r1]
 8029afa:	9906      	ldr	r1, [sp, #24]
 8029afc:	ed91 ea00 	vldr	s28, [r1]
 8029b00:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029b02:	edd1 da00 	vldr	s27, [r1]
 8029b06:	9908      	ldr	r1, [sp, #32]
 8029b08:	ed91 da00 	vldr	s26, [r1]
 8029b0c:	9907      	ldr	r1, [sp, #28]
 8029b0e:	edd1 ca00 	vldr	s25, [r1]
 8029b12:	9903      	ldr	r1, [sp, #12]
 8029b14:	ed91 ca01 	vldr	s24, [r1, #4]
 8029b18:	9905      	ldr	r1, [sp, #20]
 8029b1a:	edd1 ba01 	vldr	s23, [r1, #4]
 8029b1e:	9904      	ldr	r1, [sp, #16]
 8029b20:	edd1 aa01 	vldr	s21, [r1, #4]
 8029b24:	9906      	ldr	r1, [sp, #24]
 8029b26:	ed91 aa01 	vldr	s20, [r1, #4]
 8029b2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029b2c:	edd1 7a01 	vldr	s15, [r1, #4]
 8029b30:	9908      	ldr	r1, [sp, #32]
 8029b32:	edcd 7a00 	vstr	s15, [sp]
 8029b36:	edd1 7a01 	vldr	s15, [r1, #4]
 8029b3a:	9907      	ldr	r1, [sp, #28]
 8029b3c:	edcd 7a01 	vstr	s15, [sp, #4]
 8029b40:	edd1 7a01 	vldr	s15, [r1, #4]
 8029b44:	eb0a 0e07 	add.w	lr, sl, r7
 8029b48:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029b4a:	edcd 7a02 	vstr	s15, [sp, #8]
 8029b4e:	eb0c 010a 	add.w	r1, ip, sl
 8029b52:	4456      	add	r6, sl
 8029b54:	4455      	add	r5, sl
 8029b56:	4454      	add	r4, sl
 8029b58:	4450      	add	r0, sl
 8029b5a:	4452      	add	r2, sl
 8029b5c:	46c4      	mov	ip, r8
 8029b5e:	e001      	b.n	8029b64 <arm_radix8_butterfly_f32+0x334>
 8029b60:	3f3504f3 	.word	0x3f3504f3
 8029b64:	ed96 5a00 	vldr	s10, [r6]
 8029b68:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029b6c:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029b70:	edd0 7a00 	vldr	s15, [r0]
 8029b74:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029b78:	edde 3a00 	vldr	s7, [lr]
 8029b7c:	ed94 3a00 	vldr	s6, [r4]
 8029b80:	ed95 2a00 	vldr	s4, [r5]
 8029b84:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029b88:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029b8c:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029b90:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029b94:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029b98:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029b9c:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029ba0:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029ba4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029ba8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029bac:	ed8e 6a00 	vstr	s12, [lr]
 8029bb0:	edd0 8a01 	vldr	s17, [r0, #4]
 8029bb4:	ed95 9a01 	vldr	s18, [r5, #4]
 8029bb8:	edd1 2a00 	vldr	s5, [r1]
 8029bbc:	ed97 7a00 	vldr	s14, [r7]
 8029bc0:	edd4 0a01 	vldr	s1, [r4, #4]
 8029bc4:	ed96 6a01 	vldr	s12, [r6, #4]
 8029bc8:	edd2 5a00 	vldr	s11, [r2]
 8029bcc:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029bd0:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029bd4:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029bd8:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029bdc:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029be0:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029be4:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029be8:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029bec:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029bf0:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029bf4:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029bf8:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029bfc:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029c00:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029c04:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029c08:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029c0c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029c10:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029c14:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029c18:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029c1c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029c20:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029c24:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029c28:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029c2c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029c30:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029c34:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029c38:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029c3c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029c40:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029c44:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029c48:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029c4c:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029c50:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029c54:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029c58:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029c5c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029c60:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029c64:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029c68:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029c6c:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029c70:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029c74:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029c78:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029c7c:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029c80:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029c84:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029c88:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029c8c:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029c90:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029c94:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029c98:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029c9c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029ca0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029ca4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029ca8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029cac:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029cb0:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029cb4:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029cb8:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029cbc:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029cc0:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029cc4:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029cc8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029ccc:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029cd0:	ed86 3a00 	vstr	s6, [r6]
 8029cd4:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029cd8:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029cdc:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029ce0:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029ce4:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029ce8:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029cec:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029cf0:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029cf4:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029cf8:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029cfc:	ed9d 4a00 	vldr	s8, [sp]
 8029d00:	edc6 6a01 	vstr	s13, [r6, #4]
 8029d04:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029d08:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029d0c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029d10:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029d14:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029d18:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029d1c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029d20:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029d24:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029d28:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029d2c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029d30:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029d34:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029d38:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029d3c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029d40:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029d44:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029d48:	44dc      	add	ip, fp
 8029d4a:	45e1      	cmp	r9, ip
 8029d4c:	ed84 9a00 	vstr	s18, [r4]
 8029d50:	edc4 3a01 	vstr	s7, [r4, #4]
 8029d54:	449e      	add	lr, r3
 8029d56:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029d5a:	edc2 2a00 	vstr	s5, [r2]
 8029d5e:	441e      	add	r6, r3
 8029d60:	ed85 2a00 	vstr	s4, [r5]
 8029d64:	ed85 8a01 	vstr	s16, [r5, #4]
 8029d68:	441c      	add	r4, r3
 8029d6a:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029d6e:	ed87 0a00 	vstr	s0, [r7]
 8029d72:	441a      	add	r2, r3
 8029d74:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029d78:	edc1 9a00 	vstr	s19, [r1]
 8029d7c:	441d      	add	r5, r3
 8029d7e:	edc0 0a00 	vstr	s1, [r0]
 8029d82:	441f      	add	r7, r3
 8029d84:	ed80 6a01 	vstr	s12, [r0, #4]
 8029d88:	4419      	add	r1, r3
 8029d8a:	4418      	add	r0, r3
 8029d8c:	f63f aeea 	bhi.w	8029b64 <arm_radix8_butterfly_f32+0x334>
 8029d90:	9a03      	ldr	r2, [sp, #12]
 8029d92:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029d94:	440a      	add	r2, r1
 8029d96:	9203      	str	r2, [sp, #12]
 8029d98:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029d9a:	9a05      	ldr	r2, [sp, #20]
 8029d9c:	440a      	add	r2, r1
 8029d9e:	9205      	str	r2, [sp, #20]
 8029da0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029da2:	9a04      	ldr	r2, [sp, #16]
 8029da4:	440a      	add	r2, r1
 8029da6:	9204      	str	r2, [sp, #16]
 8029da8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029daa:	9a06      	ldr	r2, [sp, #24]
 8029dac:	440a      	add	r2, r1
 8029dae:	9206      	str	r2, [sp, #24]
 8029db0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029db2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029db4:	440a      	add	r2, r1
 8029db6:	9209      	str	r2, [sp, #36]	; 0x24
 8029db8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029dba:	9a08      	ldr	r2, [sp, #32]
 8029dbc:	440a      	add	r2, r1
 8029dbe:	9208      	str	r2, [sp, #32]
 8029dc0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029dc2:	9a07      	ldr	r2, [sp, #28]
 8029dc4:	440a      	add	r2, r1
 8029dc6:	9207      	str	r2, [sp, #28]
 8029dc8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029dca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029dcc:	f108 0801 	add.w	r8, r8, #1
 8029dd0:	3208      	adds	r2, #8
 8029dd2:	4588      	cmp	r8, r1
 8029dd4:	920a      	str	r2, [sp, #40]	; 0x28
 8029dd6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029dd8:	f47f ae75 	bne.w	8029ac6 <arm_radix8_butterfly_f32+0x296>
 8029ddc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029de0:	9300      	str	r3, [sp, #0]
 8029de2:	46c3      	mov	fp, r8
 8029de4:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029de8:	e532      	b.n	8029850 <arm_radix8_butterfly_f32+0x20>
 8029dea:	b01d      	add	sp, #116	; 0x74
 8029dec:	ecbd 8b10 	vpop	{d8-d15}
 8029df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029df4 <__aeabi_atexit>:
 8029df4:	460b      	mov	r3, r1
 8029df6:	4601      	mov	r1, r0
 8029df8:	4618      	mov	r0, r3
 8029dfa:	f000 bfc7 	b.w	802ad8c <__cxa_atexit>

08029dfe <_ZdlPvj>:
 8029dfe:	f000 b812 	b.w	8029e26 <_ZdlPv>

08029e02 <__cxa_guard_acquire>:
 8029e02:	6803      	ldr	r3, [r0, #0]
 8029e04:	07db      	lsls	r3, r3, #31
 8029e06:	d406      	bmi.n	8029e16 <__cxa_guard_acquire+0x14>
 8029e08:	7843      	ldrb	r3, [r0, #1]
 8029e0a:	b103      	cbz	r3, 8029e0e <__cxa_guard_acquire+0xc>
 8029e0c:	deff      	udf	#255	; 0xff
 8029e0e:	2301      	movs	r3, #1
 8029e10:	7043      	strb	r3, [r0, #1]
 8029e12:	4618      	mov	r0, r3
 8029e14:	4770      	bx	lr
 8029e16:	2000      	movs	r0, #0
 8029e18:	4770      	bx	lr

08029e1a <__cxa_guard_release>:
 8029e1a:	2301      	movs	r3, #1
 8029e1c:	6003      	str	r3, [r0, #0]
 8029e1e:	4770      	bx	lr

08029e20 <__cxa_pure_virtual>:
 8029e20:	b508      	push	{r3, lr}
 8029e22:	f000 f80f 	bl	8029e44 <_ZSt9terminatev>

08029e26 <_ZdlPv>:
 8029e26:	f000 befd 	b.w	802ac24 <free>

08029e2a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029e2a:	b508      	push	{r3, lr}
 8029e2c:	4780      	blx	r0
 8029e2e:	f000 fec5 	bl	802abbc <abort>
	...

08029e34 <_ZSt13get_terminatev>:
 8029e34:	4b02      	ldr	r3, [pc, #8]	; (8029e40 <_ZSt13get_terminatev+0xc>)
 8029e36:	6818      	ldr	r0, [r3, #0]
 8029e38:	f3bf 8f5b 	dmb	ish
 8029e3c:	4770      	bx	lr
 8029e3e:	bf00      	nop
 8029e40:	20000104 	.word	0x20000104

08029e44 <_ZSt9terminatev>:
 8029e44:	b508      	push	{r3, lr}
 8029e46:	f7ff fff5 	bl	8029e34 <_ZSt13get_terminatev>
 8029e4a:	f7ff ffee 	bl	8029e2a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029e50 <sqrtf>:
 8029e50:	b508      	push	{r3, lr}
 8029e52:	ed2d 8b02 	vpush	{d8}
 8029e56:	eeb0 8a40 	vmov.f32	s16, s0
 8029e5a:	f000 f97d 	bl	802a158 <__ieee754_sqrtf>
 8029e5e:	eeb4 8a48 	vcmp.f32	s16, s16
 8029e62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e66:	d60c      	bvs.n	8029e82 <sqrtf+0x32>
 8029e68:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029e88 <sqrtf+0x38>
 8029e6c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029e70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e74:	d505      	bpl.n	8029e82 <sqrtf+0x32>
 8029e76:	f001 f9a7 	bl	802b1c8 <__errno>
 8029e7a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029e7e:	2321      	movs	r3, #33	; 0x21
 8029e80:	6003      	str	r3, [r0, #0]
 8029e82:	ecbd 8b02 	vpop	{d8}
 8029e86:	bd08      	pop	{r3, pc}
 8029e88:	00000000 	.word	0x00000000

08029e8c <atanf>:
 8029e8c:	b538      	push	{r3, r4, r5, lr}
 8029e8e:	ee10 5a10 	vmov	r5, s0
 8029e92:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8029e96:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8029e9a:	eef0 7a40 	vmov.f32	s15, s0
 8029e9e:	db10      	blt.n	8029ec2 <atanf+0x36>
 8029ea0:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8029ea4:	dd04      	ble.n	8029eb0 <atanf+0x24>
 8029ea6:	ee70 7a00 	vadd.f32	s15, s0, s0
 8029eaa:	eeb0 0a67 	vmov.f32	s0, s15
 8029eae:	bd38      	pop	{r3, r4, r5, pc}
 8029eb0:	eddf 7a4d 	vldr	s15, [pc, #308]	; 8029fe8 <atanf+0x15c>
 8029eb4:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 8029fec <atanf+0x160>
 8029eb8:	2d00      	cmp	r5, #0
 8029eba:	bfd8      	it	le
 8029ebc:	eef0 7a47 	vmovle.f32	s15, s14
 8029ec0:	e7f3      	b.n	8029eaa <atanf+0x1e>
 8029ec2:	4b4b      	ldr	r3, [pc, #300]	; (8029ff0 <atanf+0x164>)
 8029ec4:	429c      	cmp	r4, r3
 8029ec6:	dc10      	bgt.n	8029eea <atanf+0x5e>
 8029ec8:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8029ecc:	da0a      	bge.n	8029ee4 <atanf+0x58>
 8029ece:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8029ff4 <atanf+0x168>
 8029ed2:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029ed6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029eda:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8029ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ee2:	dce2      	bgt.n	8029eaa <atanf+0x1e>
 8029ee4:	f04f 33ff 	mov.w	r3, #4294967295
 8029ee8:	e013      	b.n	8029f12 <atanf+0x86>
 8029eea:	f000 f8e7 	bl	802a0bc <fabsf>
 8029eee:	4b42      	ldr	r3, [pc, #264]	; (8029ff8 <atanf+0x16c>)
 8029ef0:	429c      	cmp	r4, r3
 8029ef2:	dc4f      	bgt.n	8029f94 <atanf+0x108>
 8029ef4:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8029ef8:	429c      	cmp	r4, r3
 8029efa:	dc41      	bgt.n	8029f80 <atanf+0xf4>
 8029efc:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 8029f00:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029f04:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029f08:	2300      	movs	r3, #0
 8029f0a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029f0e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029f12:	1c5a      	adds	r2, r3, #1
 8029f14:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8029f18:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8029ffc <atanf+0x170>
 8029f1c:	eddf 5a38 	vldr	s11, [pc, #224]	; 802a000 <atanf+0x174>
 8029f20:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802a004 <atanf+0x178>
 8029f24:	ee66 6a06 	vmul.f32	s13, s12, s12
 8029f28:	eee6 5a87 	vfma.f32	s11, s13, s14
 8029f2c:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802a008 <atanf+0x17c>
 8029f30:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029f34:	eddf 5a35 	vldr	s11, [pc, #212]	; 802a00c <atanf+0x180>
 8029f38:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029f3c:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802a010 <atanf+0x184>
 8029f40:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029f44:	eddf 5a33 	vldr	s11, [pc, #204]	; 802a014 <atanf+0x188>
 8029f48:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029f4c:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802a018 <atanf+0x18c>
 8029f50:	eea6 5a87 	vfma.f32	s10, s13, s14
 8029f54:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802a01c <atanf+0x190>
 8029f58:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029f5c:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802a020 <atanf+0x194>
 8029f60:	eea7 5a26 	vfma.f32	s10, s14, s13
 8029f64:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802a024 <atanf+0x198>
 8029f68:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029f6c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029f70:	eea5 7a86 	vfma.f32	s14, s11, s12
 8029f74:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029f78:	d121      	bne.n	8029fbe <atanf+0x132>
 8029f7a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029f7e:	e794      	b.n	8029eaa <atanf+0x1e>
 8029f80:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029f84:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029f88:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029f8c:	2301      	movs	r3, #1
 8029f8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029f92:	e7be      	b.n	8029f12 <atanf+0x86>
 8029f94:	4b24      	ldr	r3, [pc, #144]	; (802a028 <atanf+0x19c>)
 8029f96:	429c      	cmp	r4, r3
 8029f98:	dc0b      	bgt.n	8029fb2 <atanf+0x126>
 8029f9a:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8029f9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029fa2:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029fa6:	2302      	movs	r3, #2
 8029fa8:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029fac:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8029fb0:	e7af      	b.n	8029f12 <atanf+0x86>
 8029fb2:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029fb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029fba:	2303      	movs	r3, #3
 8029fbc:	e7a9      	b.n	8029f12 <atanf+0x86>
 8029fbe:	4a1b      	ldr	r2, [pc, #108]	; (802a02c <atanf+0x1a0>)
 8029fc0:	491b      	ldr	r1, [pc, #108]	; (802a030 <atanf+0x1a4>)
 8029fc2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029fc6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8029fca:	edd3 6a00 	vldr	s13, [r3]
 8029fce:	ee37 7a66 	vsub.f32	s14, s14, s13
 8029fd2:	2d00      	cmp	r5, #0
 8029fd4:	ee37 7a67 	vsub.f32	s14, s14, s15
 8029fd8:	edd2 7a00 	vldr	s15, [r2]
 8029fdc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029fe0:	bfb8      	it	lt
 8029fe2:	eef1 7a67 	vneglt.f32	s15, s15
 8029fe6:	e760      	b.n	8029eaa <atanf+0x1e>
 8029fe8:	3fc90fdb 	.word	0x3fc90fdb
 8029fec:	bfc90fdb 	.word	0xbfc90fdb
 8029ff0:	3edfffff 	.word	0x3edfffff
 8029ff4:	7149f2ca 	.word	0x7149f2ca
 8029ff8:	3f97ffff 	.word	0x3f97ffff
 8029ffc:	3c8569d7 	.word	0x3c8569d7
 802a000:	3d4bda59 	.word	0x3d4bda59
 802a004:	bd6ef16b 	.word	0xbd6ef16b
 802a008:	3d886b35 	.word	0x3d886b35
 802a00c:	3dba2e6e 	.word	0x3dba2e6e
 802a010:	3e124925 	.word	0x3e124925
 802a014:	3eaaaaab 	.word	0x3eaaaaab
 802a018:	bd15a221 	.word	0xbd15a221
 802a01c:	bd9d8795 	.word	0xbd9d8795
 802a020:	bde38e38 	.word	0xbde38e38
 802a024:	be4ccccd 	.word	0xbe4ccccd
 802a028:	401bffff 	.word	0x401bffff
 802a02c:	08042e30 	.word	0x08042e30
 802a030:	08042e40 	.word	0x08042e40

0802a034 <cosf>:
 802a034:	ee10 3a10 	vmov	r3, s0
 802a038:	b507      	push	{r0, r1, r2, lr}
 802a03a:	4a1e      	ldr	r2, [pc, #120]	; (802a0b4 <cosf+0x80>)
 802a03c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a040:	4293      	cmp	r3, r2
 802a042:	dc06      	bgt.n	802a052 <cosf+0x1e>
 802a044:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a0b8 <cosf+0x84>
 802a048:	b003      	add	sp, #12
 802a04a:	f85d eb04 	ldr.w	lr, [sp], #4
 802a04e:	f000 b90b 	b.w	802a268 <__kernel_cosf>
 802a052:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a056:	db04      	blt.n	802a062 <cosf+0x2e>
 802a058:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a05c:	b003      	add	sp, #12
 802a05e:	f85d fb04 	ldr.w	pc, [sp], #4
 802a062:	4668      	mov	r0, sp
 802a064:	f000 f9a6 	bl	802a3b4 <__ieee754_rem_pio2f>
 802a068:	f000 0003 	and.w	r0, r0, #3
 802a06c:	2801      	cmp	r0, #1
 802a06e:	d009      	beq.n	802a084 <cosf+0x50>
 802a070:	2802      	cmp	r0, #2
 802a072:	d010      	beq.n	802a096 <cosf+0x62>
 802a074:	b9b0      	cbnz	r0, 802a0a4 <cosf+0x70>
 802a076:	eddd 0a01 	vldr	s1, [sp, #4]
 802a07a:	ed9d 0a00 	vldr	s0, [sp]
 802a07e:	f000 f8f3 	bl	802a268 <__kernel_cosf>
 802a082:	e7eb      	b.n	802a05c <cosf+0x28>
 802a084:	eddd 0a01 	vldr	s1, [sp, #4]
 802a088:	ed9d 0a00 	vldr	s0, [sp]
 802a08c:	f000 f94a 	bl	802a324 <__kernel_sinf>
 802a090:	eeb1 0a40 	vneg.f32	s0, s0
 802a094:	e7e2      	b.n	802a05c <cosf+0x28>
 802a096:	eddd 0a01 	vldr	s1, [sp, #4]
 802a09a:	ed9d 0a00 	vldr	s0, [sp]
 802a09e:	f000 f8e3 	bl	802a268 <__kernel_cosf>
 802a0a2:	e7f5      	b.n	802a090 <cosf+0x5c>
 802a0a4:	eddd 0a01 	vldr	s1, [sp, #4]
 802a0a8:	ed9d 0a00 	vldr	s0, [sp]
 802a0ac:	2001      	movs	r0, #1
 802a0ae:	f000 f939 	bl	802a324 <__kernel_sinf>
 802a0b2:	e7d3      	b.n	802a05c <cosf+0x28>
 802a0b4:	3f490fd8 	.word	0x3f490fd8
 802a0b8:	00000000 	.word	0x00000000

0802a0bc <fabsf>:
 802a0bc:	ee10 3a10 	vmov	r3, s0
 802a0c0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a0c4:	ee00 3a10 	vmov	s0, r3
 802a0c8:	4770      	bx	lr
	...

0802a0cc <sinf>:
 802a0cc:	ee10 3a10 	vmov	r3, s0
 802a0d0:	b507      	push	{r0, r1, r2, lr}
 802a0d2:	4a1f      	ldr	r2, [pc, #124]	; (802a150 <sinf+0x84>)
 802a0d4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a0d8:	4293      	cmp	r3, r2
 802a0da:	dc07      	bgt.n	802a0ec <sinf+0x20>
 802a0dc:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a154 <sinf+0x88>
 802a0e0:	2000      	movs	r0, #0
 802a0e2:	b003      	add	sp, #12
 802a0e4:	f85d eb04 	ldr.w	lr, [sp], #4
 802a0e8:	f000 b91c 	b.w	802a324 <__kernel_sinf>
 802a0ec:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a0f0:	db04      	blt.n	802a0fc <sinf+0x30>
 802a0f2:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a0f6:	b003      	add	sp, #12
 802a0f8:	f85d fb04 	ldr.w	pc, [sp], #4
 802a0fc:	4668      	mov	r0, sp
 802a0fe:	f000 f959 	bl	802a3b4 <__ieee754_rem_pio2f>
 802a102:	f000 0003 	and.w	r0, r0, #3
 802a106:	2801      	cmp	r0, #1
 802a108:	d00a      	beq.n	802a120 <sinf+0x54>
 802a10a:	2802      	cmp	r0, #2
 802a10c:	d00f      	beq.n	802a12e <sinf+0x62>
 802a10e:	b9c0      	cbnz	r0, 802a142 <sinf+0x76>
 802a110:	eddd 0a01 	vldr	s1, [sp, #4]
 802a114:	ed9d 0a00 	vldr	s0, [sp]
 802a118:	2001      	movs	r0, #1
 802a11a:	f000 f903 	bl	802a324 <__kernel_sinf>
 802a11e:	e7ea      	b.n	802a0f6 <sinf+0x2a>
 802a120:	eddd 0a01 	vldr	s1, [sp, #4]
 802a124:	ed9d 0a00 	vldr	s0, [sp]
 802a128:	f000 f89e 	bl	802a268 <__kernel_cosf>
 802a12c:	e7e3      	b.n	802a0f6 <sinf+0x2a>
 802a12e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a132:	ed9d 0a00 	vldr	s0, [sp]
 802a136:	2001      	movs	r0, #1
 802a138:	f000 f8f4 	bl	802a324 <__kernel_sinf>
 802a13c:	eeb1 0a40 	vneg.f32	s0, s0
 802a140:	e7d9      	b.n	802a0f6 <sinf+0x2a>
 802a142:	eddd 0a01 	vldr	s1, [sp, #4]
 802a146:	ed9d 0a00 	vldr	s0, [sp]
 802a14a:	f000 f88d 	bl	802a268 <__kernel_cosf>
 802a14e:	e7f5      	b.n	802a13c <sinf+0x70>
 802a150:	3f490fd8 	.word	0x3f490fd8
 802a154:	00000000 	.word	0x00000000

0802a158 <__ieee754_sqrtf>:
 802a158:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a15c:	4770      	bx	lr
	...

0802a160 <ceilf>:
 802a160:	ee10 3a10 	vmov	r3, s0
 802a164:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a168:	3a7f      	subs	r2, #127	; 0x7f
 802a16a:	2a16      	cmp	r2, #22
 802a16c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a170:	dc2a      	bgt.n	802a1c8 <ceilf+0x68>
 802a172:	2a00      	cmp	r2, #0
 802a174:	da11      	bge.n	802a19a <ceilf+0x3a>
 802a176:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a1dc <ceilf+0x7c>
 802a17a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a17e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a186:	dd05      	ble.n	802a194 <ceilf+0x34>
 802a188:	2b00      	cmp	r3, #0
 802a18a:	db23      	blt.n	802a1d4 <ceilf+0x74>
 802a18c:	2900      	cmp	r1, #0
 802a18e:	bf18      	it	ne
 802a190:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a194:	ee00 3a10 	vmov	s0, r3
 802a198:	4770      	bx	lr
 802a19a:	4911      	ldr	r1, [pc, #68]	; (802a1e0 <ceilf+0x80>)
 802a19c:	4111      	asrs	r1, r2
 802a19e:	420b      	tst	r3, r1
 802a1a0:	d0fa      	beq.n	802a198 <ceilf+0x38>
 802a1a2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a1dc <ceilf+0x7c>
 802a1a6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a1aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a1ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1b2:	ddef      	ble.n	802a194 <ceilf+0x34>
 802a1b4:	2b00      	cmp	r3, #0
 802a1b6:	bfc2      	ittt	gt
 802a1b8:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a1bc:	fa40 f202 	asrgt.w	r2, r0, r2
 802a1c0:	189b      	addgt	r3, r3, r2
 802a1c2:	ea23 0301 	bic.w	r3, r3, r1
 802a1c6:	e7e5      	b.n	802a194 <ceilf+0x34>
 802a1c8:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a1cc:	d3e4      	bcc.n	802a198 <ceilf+0x38>
 802a1ce:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a1d2:	4770      	bx	lr
 802a1d4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a1d8:	e7dc      	b.n	802a194 <ceilf+0x34>
 802a1da:	bf00      	nop
 802a1dc:	7149f2ca 	.word	0x7149f2ca
 802a1e0:	007fffff 	.word	0x007fffff

0802a1e4 <floorf>:
 802a1e4:	ee10 3a10 	vmov	r3, s0
 802a1e8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a1ec:	3a7f      	subs	r2, #127	; 0x7f
 802a1ee:	2a16      	cmp	r2, #22
 802a1f0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a1f4:	dc2a      	bgt.n	802a24c <floorf+0x68>
 802a1f6:	2a00      	cmp	r2, #0
 802a1f8:	da11      	bge.n	802a21e <floorf+0x3a>
 802a1fa:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a25c <floorf+0x78>
 802a1fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a202:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a20a:	dd05      	ble.n	802a218 <floorf+0x34>
 802a20c:	2b00      	cmp	r3, #0
 802a20e:	da23      	bge.n	802a258 <floorf+0x74>
 802a210:	4a13      	ldr	r2, [pc, #76]	; (802a260 <floorf+0x7c>)
 802a212:	2900      	cmp	r1, #0
 802a214:	bf18      	it	ne
 802a216:	4613      	movne	r3, r2
 802a218:	ee00 3a10 	vmov	s0, r3
 802a21c:	4770      	bx	lr
 802a21e:	4911      	ldr	r1, [pc, #68]	; (802a264 <floorf+0x80>)
 802a220:	4111      	asrs	r1, r2
 802a222:	420b      	tst	r3, r1
 802a224:	d0fa      	beq.n	802a21c <floorf+0x38>
 802a226:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a25c <floorf+0x78>
 802a22a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a22e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a232:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a236:	ddef      	ble.n	802a218 <floorf+0x34>
 802a238:	2b00      	cmp	r3, #0
 802a23a:	bfbe      	ittt	lt
 802a23c:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a240:	fa40 f202 	asrlt.w	r2, r0, r2
 802a244:	189b      	addlt	r3, r3, r2
 802a246:	ea23 0301 	bic.w	r3, r3, r1
 802a24a:	e7e5      	b.n	802a218 <floorf+0x34>
 802a24c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a250:	d3e4      	bcc.n	802a21c <floorf+0x38>
 802a252:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a256:	4770      	bx	lr
 802a258:	2300      	movs	r3, #0
 802a25a:	e7dd      	b.n	802a218 <floorf+0x34>
 802a25c:	7149f2ca 	.word	0x7149f2ca
 802a260:	bf800000 	.word	0xbf800000
 802a264:	007fffff 	.word	0x007fffff

0802a268 <__kernel_cosf>:
 802a268:	ee10 3a10 	vmov	r3, s0
 802a26c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a270:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a274:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a278:	da05      	bge.n	802a286 <__kernel_cosf+0x1e>
 802a27a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a27e:	ee17 2a90 	vmov	r2, s15
 802a282:	2a00      	cmp	r2, #0
 802a284:	d03b      	beq.n	802a2fe <__kernel_cosf+0x96>
 802a286:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a28a:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a304 <__kernel_cosf+0x9c>
 802a28e:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a308 <__kernel_cosf+0xa0>
 802a292:	4a1e      	ldr	r2, [pc, #120]	; (802a30c <__kernel_cosf+0xa4>)
 802a294:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a298:	4293      	cmp	r3, r2
 802a29a:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a310 <__kernel_cosf+0xa8>
 802a29e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a2a2:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a314 <__kernel_cosf+0xac>
 802a2a6:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a2aa:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a318 <__kernel_cosf+0xb0>
 802a2ae:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a2b2:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a31c <__kernel_cosf+0xb4>
 802a2b6:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a2ba:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a2be:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a2c2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a2c6:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a2ca:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a2ce:	dc04      	bgt.n	802a2da <__kernel_cosf+0x72>
 802a2d0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a2d4:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a2d8:	4770      	bx	lr
 802a2da:	4a11      	ldr	r2, [pc, #68]	; (802a320 <__kernel_cosf+0xb8>)
 802a2dc:	4293      	cmp	r3, r2
 802a2de:	bfda      	itte	le
 802a2e0:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a2e4:	ee07 3a10 	vmovle	s14, r3
 802a2e8:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a2ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a2f0:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a2f4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a2f8:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a2fc:	4770      	bx	lr
 802a2fe:	eeb0 0a66 	vmov.f32	s0, s13
 802a302:	4770      	bx	lr
 802a304:	ad47d74e 	.word	0xad47d74e
 802a308:	310f74f6 	.word	0x310f74f6
 802a30c:	3e999999 	.word	0x3e999999
 802a310:	b493f27c 	.word	0xb493f27c
 802a314:	37d00d01 	.word	0x37d00d01
 802a318:	bab60b61 	.word	0xbab60b61
 802a31c:	3d2aaaab 	.word	0x3d2aaaab
 802a320:	3f480000 	.word	0x3f480000

0802a324 <__kernel_sinf>:
 802a324:	ee10 3a10 	vmov	r3, s0
 802a328:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a32c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a330:	da04      	bge.n	802a33c <__kernel_sinf+0x18>
 802a332:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a336:	ee17 3a90 	vmov	r3, s15
 802a33a:	b35b      	cbz	r3, 802a394 <__kernel_sinf+0x70>
 802a33c:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a340:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a398 <__kernel_sinf+0x74>
 802a344:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a39c <__kernel_sinf+0x78>
 802a348:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a34c:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a3a0 <__kernel_sinf+0x7c>
 802a350:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a354:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a3a4 <__kernel_sinf+0x80>
 802a358:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a35c:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a3a8 <__kernel_sinf+0x84>
 802a360:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a364:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a368:	b930      	cbnz	r0, 802a378 <__kernel_sinf+0x54>
 802a36a:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a3ac <__kernel_sinf+0x88>
 802a36e:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a372:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a376:	4770      	bx	lr
 802a378:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a37c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a380:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a384:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a388:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a3b0 <__kernel_sinf+0x8c>
 802a38c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a390:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a394:	4770      	bx	lr
 802a396:	bf00      	nop
 802a398:	2f2ec9d3 	.word	0x2f2ec9d3
 802a39c:	b2d72f34 	.word	0xb2d72f34
 802a3a0:	3638ef1b 	.word	0x3638ef1b
 802a3a4:	b9500d01 	.word	0xb9500d01
 802a3a8:	3c088889 	.word	0x3c088889
 802a3ac:	be2aaaab 	.word	0xbe2aaaab
 802a3b0:	3e2aaaab 	.word	0x3e2aaaab

0802a3b4 <__ieee754_rem_pio2f>:
 802a3b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a3b6:	ee10 6a10 	vmov	r6, s0
 802a3ba:	4b86      	ldr	r3, [pc, #536]	; (802a5d4 <__ieee754_rem_pio2f+0x220>)
 802a3bc:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a3c0:	429d      	cmp	r5, r3
 802a3c2:	b087      	sub	sp, #28
 802a3c4:	4604      	mov	r4, r0
 802a3c6:	dc05      	bgt.n	802a3d4 <__ieee754_rem_pio2f+0x20>
 802a3c8:	2300      	movs	r3, #0
 802a3ca:	ed80 0a00 	vstr	s0, [r0]
 802a3ce:	6043      	str	r3, [r0, #4]
 802a3d0:	2000      	movs	r0, #0
 802a3d2:	e020      	b.n	802a416 <__ieee754_rem_pio2f+0x62>
 802a3d4:	4b80      	ldr	r3, [pc, #512]	; (802a5d8 <__ieee754_rem_pio2f+0x224>)
 802a3d6:	429d      	cmp	r5, r3
 802a3d8:	dc38      	bgt.n	802a44c <__ieee754_rem_pio2f+0x98>
 802a3da:	2e00      	cmp	r6, #0
 802a3dc:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a5dc <__ieee754_rem_pio2f+0x228>
 802a3e0:	4b7f      	ldr	r3, [pc, #508]	; (802a5e0 <__ieee754_rem_pio2f+0x22c>)
 802a3e2:	f025 050f 	bic.w	r5, r5, #15
 802a3e6:	dd18      	ble.n	802a41a <__ieee754_rem_pio2f+0x66>
 802a3e8:	429d      	cmp	r5, r3
 802a3ea:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a3ee:	bf09      	itett	eq
 802a3f0:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a5e4 <__ieee754_rem_pio2f+0x230>
 802a3f4:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a5e8 <__ieee754_rem_pio2f+0x234>
 802a3f8:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a3fc:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a5ec <__ieee754_rem_pio2f+0x238>
 802a400:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a404:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a408:	edc0 6a00 	vstr	s13, [r0]
 802a40c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a410:	edc0 7a01 	vstr	s15, [r0, #4]
 802a414:	2001      	movs	r0, #1
 802a416:	b007      	add	sp, #28
 802a418:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a41a:	429d      	cmp	r5, r3
 802a41c:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a420:	bf09      	itett	eq
 802a422:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a5e4 <__ieee754_rem_pio2f+0x230>
 802a426:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a5e8 <__ieee754_rem_pio2f+0x234>
 802a42a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a42e:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a5ec <__ieee754_rem_pio2f+0x238>
 802a432:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a436:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a43a:	edc0 6a00 	vstr	s13, [r0]
 802a43e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a442:	edc0 7a01 	vstr	s15, [r0, #4]
 802a446:	f04f 30ff 	mov.w	r0, #4294967295
 802a44a:	e7e4      	b.n	802a416 <__ieee754_rem_pio2f+0x62>
 802a44c:	4b68      	ldr	r3, [pc, #416]	; (802a5f0 <__ieee754_rem_pio2f+0x23c>)
 802a44e:	429d      	cmp	r5, r3
 802a450:	dc71      	bgt.n	802a536 <__ieee754_rem_pio2f+0x182>
 802a452:	f7ff fe33 	bl	802a0bc <fabsf>
 802a456:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a5f4 <__ieee754_rem_pio2f+0x240>
 802a45a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a45e:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a462:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a466:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a46a:	ee17 0a90 	vmov	r0, s15
 802a46e:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a5dc <__ieee754_rem_pio2f+0x228>
 802a472:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a476:	281f      	cmp	r0, #31
 802a478:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a5e8 <__ieee754_rem_pio2f+0x234>
 802a47c:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a480:	eeb1 6a47 	vneg.f32	s12, s14
 802a484:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a488:	ee16 2a90 	vmov	r2, s13
 802a48c:	dc1c      	bgt.n	802a4c8 <__ieee754_rem_pio2f+0x114>
 802a48e:	495a      	ldr	r1, [pc, #360]	; (802a5f8 <__ieee754_rem_pio2f+0x244>)
 802a490:	1e47      	subs	r7, r0, #1
 802a492:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a496:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a49a:	428b      	cmp	r3, r1
 802a49c:	d014      	beq.n	802a4c8 <__ieee754_rem_pio2f+0x114>
 802a49e:	6022      	str	r2, [r4, #0]
 802a4a0:	ed94 7a00 	vldr	s14, [r4]
 802a4a4:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a4a8:	2e00      	cmp	r6, #0
 802a4aa:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a4ae:	ed84 0a01 	vstr	s0, [r4, #4]
 802a4b2:	dab0      	bge.n	802a416 <__ieee754_rem_pio2f+0x62>
 802a4b4:	eeb1 7a47 	vneg.f32	s14, s14
 802a4b8:	eeb1 0a40 	vneg.f32	s0, s0
 802a4bc:	ed84 7a00 	vstr	s14, [r4]
 802a4c0:	ed84 0a01 	vstr	s0, [r4, #4]
 802a4c4:	4240      	negs	r0, r0
 802a4c6:	e7a6      	b.n	802a416 <__ieee754_rem_pio2f+0x62>
 802a4c8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a4cc:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a4d0:	2908      	cmp	r1, #8
 802a4d2:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a4d6:	dde2      	ble.n	802a49e <__ieee754_rem_pio2f+0xea>
 802a4d8:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a5e4 <__ieee754_rem_pio2f+0x230>
 802a4dc:	eef0 6a40 	vmov.f32	s13, s0
 802a4e0:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a4e4:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a4e8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a4ec:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a5ec <__ieee754_rem_pio2f+0x238>
 802a4f0:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a4f4:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a4f8:	ee15 2a90 	vmov	r2, s11
 802a4fc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a500:	1a5b      	subs	r3, r3, r1
 802a502:	2b19      	cmp	r3, #25
 802a504:	dc04      	bgt.n	802a510 <__ieee754_rem_pio2f+0x15c>
 802a506:	edc4 5a00 	vstr	s11, [r4]
 802a50a:	eeb0 0a66 	vmov.f32	s0, s13
 802a50e:	e7c7      	b.n	802a4a0 <__ieee754_rem_pio2f+0xec>
 802a510:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a5fc <__ieee754_rem_pio2f+0x248>
 802a514:	eeb0 0a66 	vmov.f32	s0, s13
 802a518:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a51c:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a520:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a600 <__ieee754_rem_pio2f+0x24c>
 802a524:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a528:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a52c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a530:	ed84 7a00 	vstr	s14, [r4]
 802a534:	e7b4      	b.n	802a4a0 <__ieee754_rem_pio2f+0xec>
 802a536:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a53a:	db06      	blt.n	802a54a <__ieee754_rem_pio2f+0x196>
 802a53c:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a540:	edc0 7a01 	vstr	s15, [r0, #4]
 802a544:	edc0 7a00 	vstr	s15, [r0]
 802a548:	e742      	b.n	802a3d0 <__ieee754_rem_pio2f+0x1c>
 802a54a:	15ea      	asrs	r2, r5, #23
 802a54c:	3a86      	subs	r2, #134	; 0x86
 802a54e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a552:	ee07 3a90 	vmov	s15, r3
 802a556:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a55a:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a604 <__ieee754_rem_pio2f+0x250>
 802a55e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a562:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a566:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a56a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a56e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a572:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a576:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a57a:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a57e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a582:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a58a:	edcd 7a05 	vstr	s15, [sp, #20]
 802a58e:	d11e      	bne.n	802a5ce <__ieee754_rem_pio2f+0x21a>
 802a590:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a598:	bf14      	ite	ne
 802a59a:	2302      	movne	r3, #2
 802a59c:	2301      	moveq	r3, #1
 802a59e:	491a      	ldr	r1, [pc, #104]	; (802a608 <__ieee754_rem_pio2f+0x254>)
 802a5a0:	9101      	str	r1, [sp, #4]
 802a5a2:	2102      	movs	r1, #2
 802a5a4:	9100      	str	r1, [sp, #0]
 802a5a6:	a803      	add	r0, sp, #12
 802a5a8:	4621      	mov	r1, r4
 802a5aa:	f000 f895 	bl	802a6d8 <__kernel_rem_pio2f>
 802a5ae:	2e00      	cmp	r6, #0
 802a5b0:	f6bf af31 	bge.w	802a416 <__ieee754_rem_pio2f+0x62>
 802a5b4:	edd4 7a00 	vldr	s15, [r4]
 802a5b8:	eef1 7a67 	vneg.f32	s15, s15
 802a5bc:	edc4 7a00 	vstr	s15, [r4]
 802a5c0:	edd4 7a01 	vldr	s15, [r4, #4]
 802a5c4:	eef1 7a67 	vneg.f32	s15, s15
 802a5c8:	edc4 7a01 	vstr	s15, [r4, #4]
 802a5cc:	e77a      	b.n	802a4c4 <__ieee754_rem_pio2f+0x110>
 802a5ce:	2303      	movs	r3, #3
 802a5d0:	e7e5      	b.n	802a59e <__ieee754_rem_pio2f+0x1ea>
 802a5d2:	bf00      	nop
 802a5d4:	3f490fd8 	.word	0x3f490fd8
 802a5d8:	4016cbe3 	.word	0x4016cbe3
 802a5dc:	3fc90f80 	.word	0x3fc90f80
 802a5e0:	3fc90fd0 	.word	0x3fc90fd0
 802a5e4:	37354400 	.word	0x37354400
 802a5e8:	37354443 	.word	0x37354443
 802a5ec:	2e85a308 	.word	0x2e85a308
 802a5f0:	43490f80 	.word	0x43490f80
 802a5f4:	3f22f984 	.word	0x3f22f984
 802a5f8:	08042e50 	.word	0x08042e50
 802a5fc:	2e85a300 	.word	0x2e85a300
 802a600:	248d3132 	.word	0x248d3132
 802a604:	43800000 	.word	0x43800000
 802a608:	08042ed0 	.word	0x08042ed0

0802a60c <scalbnf>:
 802a60c:	ee10 3a10 	vmov	r3, s0
 802a610:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a614:	d02b      	beq.n	802a66e <scalbnf+0x62>
 802a616:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a61a:	d302      	bcc.n	802a622 <scalbnf+0x16>
 802a61c:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a620:	4770      	bx	lr
 802a622:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a626:	d123      	bne.n	802a670 <scalbnf+0x64>
 802a628:	4b24      	ldr	r3, [pc, #144]	; (802a6bc <scalbnf+0xb0>)
 802a62a:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a6c0 <scalbnf+0xb4>
 802a62e:	4298      	cmp	r0, r3
 802a630:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a634:	db17      	blt.n	802a666 <scalbnf+0x5a>
 802a636:	ee10 3a10 	vmov	r3, s0
 802a63a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a63e:	3a19      	subs	r2, #25
 802a640:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a644:	4288      	cmp	r0, r1
 802a646:	dd15      	ble.n	802a674 <scalbnf+0x68>
 802a648:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a6c4 <scalbnf+0xb8>
 802a64c:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a6c8 <scalbnf+0xbc>
 802a650:	ee10 3a10 	vmov	r3, s0
 802a654:	eeb0 7a67 	vmov.f32	s14, s15
 802a658:	2b00      	cmp	r3, #0
 802a65a:	bfb8      	it	lt
 802a65c:	eef0 7a66 	vmovlt.f32	s15, s13
 802a660:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a664:	4770      	bx	lr
 802a666:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a6cc <scalbnf+0xc0>
 802a66a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a66e:	4770      	bx	lr
 802a670:	0dd2      	lsrs	r2, r2, #23
 802a672:	e7e5      	b.n	802a640 <scalbnf+0x34>
 802a674:	4410      	add	r0, r2
 802a676:	28fe      	cmp	r0, #254	; 0xfe
 802a678:	dce6      	bgt.n	802a648 <scalbnf+0x3c>
 802a67a:	2800      	cmp	r0, #0
 802a67c:	dd06      	ble.n	802a68c <scalbnf+0x80>
 802a67e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a682:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a686:	ee00 3a10 	vmov	s0, r3
 802a68a:	4770      	bx	lr
 802a68c:	f110 0f16 	cmn.w	r0, #22
 802a690:	da09      	bge.n	802a6a6 <scalbnf+0x9a>
 802a692:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a6cc <scalbnf+0xc0>
 802a696:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a6d0 <scalbnf+0xc4>
 802a69a:	ee10 3a10 	vmov	r3, s0
 802a69e:	eeb0 7a67 	vmov.f32	s14, s15
 802a6a2:	2b00      	cmp	r3, #0
 802a6a4:	e7d9      	b.n	802a65a <scalbnf+0x4e>
 802a6a6:	3019      	adds	r0, #25
 802a6a8:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a6ac:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a6b0:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a6d4 <scalbnf+0xc8>
 802a6b4:	ee07 3a90 	vmov	s15, r3
 802a6b8:	e7d7      	b.n	802a66a <scalbnf+0x5e>
 802a6ba:	bf00      	nop
 802a6bc:	ffff3cb0 	.word	0xffff3cb0
 802a6c0:	4c000000 	.word	0x4c000000
 802a6c4:	7149f2ca 	.word	0x7149f2ca
 802a6c8:	f149f2ca 	.word	0xf149f2ca
 802a6cc:	0da24260 	.word	0x0da24260
 802a6d0:	8da24260 	.word	0x8da24260
 802a6d4:	33000000 	.word	0x33000000

0802a6d8 <__kernel_rem_pio2f>:
 802a6d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a6dc:	ed2d 8b04 	vpush	{d8-d9}
 802a6e0:	b0d9      	sub	sp, #356	; 0x164
 802a6e2:	4688      	mov	r8, r1
 802a6e4:	9002      	str	r0, [sp, #8]
 802a6e6:	49b8      	ldr	r1, [pc, #736]	; (802a9c8 <__kernel_rem_pio2f+0x2f0>)
 802a6e8:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a6ea:	9301      	str	r3, [sp, #4]
 802a6ec:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a6f0:	9901      	ldr	r1, [sp, #4]
 802a6f2:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a6f4:	f101 3bff 	add.w	fp, r1, #4294967295
 802a6f8:	1d11      	adds	r1, r2, #4
 802a6fa:	db25      	blt.n	802a748 <__kernel_rem_pio2f+0x70>
 802a6fc:	1ed0      	subs	r0, r2, #3
 802a6fe:	bf48      	it	mi
 802a700:	1d10      	addmi	r0, r2, #4
 802a702:	10c0      	asrs	r0, r0, #3
 802a704:	1c45      	adds	r5, r0, #1
 802a706:	00e9      	lsls	r1, r5, #3
 802a708:	eba0 070b 	sub.w	r7, r0, fp
 802a70c:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802a9d8 <__kernel_rem_pio2f+0x300>
 802a710:	9103      	str	r1, [sp, #12]
 802a712:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a716:	eb0a 0c0b 	add.w	ip, sl, fp
 802a71a:	ae1c      	add	r6, sp, #112	; 0x70
 802a71c:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a720:	2400      	movs	r4, #0
 802a722:	4564      	cmp	r4, ip
 802a724:	dd12      	ble.n	802a74c <__kernel_rem_pio2f+0x74>
 802a726:	9901      	ldr	r1, [sp, #4]
 802a728:	ac1c      	add	r4, sp, #112	; 0x70
 802a72a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a72e:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a732:	f04f 0c00 	mov.w	ip, #0
 802a736:	45d4      	cmp	ip, sl
 802a738:	dc27      	bgt.n	802a78a <__kernel_rem_pio2f+0xb2>
 802a73a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a73e:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802a9d8 <__kernel_rem_pio2f+0x300>
 802a742:	4627      	mov	r7, r4
 802a744:	2600      	movs	r6, #0
 802a746:	e016      	b.n	802a776 <__kernel_rem_pio2f+0x9e>
 802a748:	2000      	movs	r0, #0
 802a74a:	e7db      	b.n	802a704 <__kernel_rem_pio2f+0x2c>
 802a74c:	42e7      	cmn	r7, r4
 802a74e:	bf5d      	ittte	pl
 802a750:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a754:	ee07 1a90 	vmovpl	s15, r1
 802a758:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a75c:	eef0 7a47 	vmovmi.f32	s15, s14
 802a760:	ece6 7a01 	vstmia	r6!, {s15}
 802a764:	3401      	adds	r4, #1
 802a766:	e7dc      	b.n	802a722 <__kernel_rem_pio2f+0x4a>
 802a768:	ecfe 6a01 	vldmia	lr!, {s13}
 802a76c:	ed97 7a00 	vldr	s14, [r7]
 802a770:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a774:	3601      	adds	r6, #1
 802a776:	455e      	cmp	r6, fp
 802a778:	f1a7 0704 	sub.w	r7, r7, #4
 802a77c:	ddf4      	ble.n	802a768 <__kernel_rem_pio2f+0x90>
 802a77e:	ece9 7a01 	vstmia	r9!, {s15}
 802a782:	f10c 0c01 	add.w	ip, ip, #1
 802a786:	3404      	adds	r4, #4
 802a788:	e7d5      	b.n	802a736 <__kernel_rem_pio2f+0x5e>
 802a78a:	a908      	add	r1, sp, #32
 802a78c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a790:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a794:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802a9d4 <__kernel_rem_pio2f+0x2fc>
 802a798:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802a9d0 <__kernel_rem_pio2f+0x2f8>
 802a79c:	9105      	str	r1, [sp, #20]
 802a79e:	9304      	str	r3, [sp, #16]
 802a7a0:	4656      	mov	r6, sl
 802a7a2:	00b3      	lsls	r3, r6, #2
 802a7a4:	9306      	str	r3, [sp, #24]
 802a7a6:	ab58      	add	r3, sp, #352	; 0x160
 802a7a8:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a7ac:	ac08      	add	r4, sp, #32
 802a7ae:	ab44      	add	r3, sp, #272	; 0x110
 802a7b0:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a7b4:	46a4      	mov	ip, r4
 802a7b6:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a7ba:	4637      	mov	r7, r6
 802a7bc:	2f00      	cmp	r7, #0
 802a7be:	f1a0 0004 	sub.w	r0, r0, #4
 802a7c2:	dc4a      	bgt.n	802a85a <__kernel_rem_pio2f+0x182>
 802a7c4:	4628      	mov	r0, r5
 802a7c6:	9207      	str	r2, [sp, #28]
 802a7c8:	f7ff ff20 	bl	802a60c <scalbnf>
 802a7cc:	eeb0 8a40 	vmov.f32	s16, s0
 802a7d0:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a7d4:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a7d8:	f7ff fd04 	bl	802a1e4 <floorf>
 802a7dc:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a7e0:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a7e4:	2d00      	cmp	r5, #0
 802a7e6:	9a07      	ldr	r2, [sp, #28]
 802a7e8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a7ec:	ee17 9a90 	vmov	r9, s15
 802a7f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a7f4:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a7f8:	dd41      	ble.n	802a87e <__kernel_rem_pio2f+0x1a6>
 802a7fa:	f106 3cff 	add.w	ip, r6, #4294967295
 802a7fe:	ab08      	add	r3, sp, #32
 802a800:	f1c5 0e08 	rsb	lr, r5, #8
 802a804:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a808:	fa47 f00e 	asr.w	r0, r7, lr
 802a80c:	4481      	add	r9, r0
 802a80e:	fa00 f00e 	lsl.w	r0, r0, lr
 802a812:	1a3f      	subs	r7, r7, r0
 802a814:	f1c5 0007 	rsb	r0, r5, #7
 802a818:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a81c:	4107      	asrs	r7, r0
 802a81e:	2f00      	cmp	r7, #0
 802a820:	dd3c      	ble.n	802a89c <__kernel_rem_pio2f+0x1c4>
 802a822:	f04f 0e00 	mov.w	lr, #0
 802a826:	f109 0901 	add.w	r9, r9, #1
 802a82a:	4671      	mov	r1, lr
 802a82c:	4576      	cmp	r6, lr
 802a82e:	dc67      	bgt.n	802a900 <__kernel_rem_pio2f+0x228>
 802a830:	2d00      	cmp	r5, #0
 802a832:	dd03      	ble.n	802a83c <__kernel_rem_pio2f+0x164>
 802a834:	2d01      	cmp	r5, #1
 802a836:	d074      	beq.n	802a922 <__kernel_rem_pio2f+0x24a>
 802a838:	2d02      	cmp	r5, #2
 802a83a:	d07b      	beq.n	802a934 <__kernel_rem_pio2f+0x25c>
 802a83c:	2f02      	cmp	r7, #2
 802a83e:	d12d      	bne.n	802a89c <__kernel_rem_pio2f+0x1c4>
 802a840:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a844:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a848:	b341      	cbz	r1, 802a89c <__kernel_rem_pio2f+0x1c4>
 802a84a:	4628      	mov	r0, r5
 802a84c:	9207      	str	r2, [sp, #28]
 802a84e:	f7ff fedd 	bl	802a60c <scalbnf>
 802a852:	9a07      	ldr	r2, [sp, #28]
 802a854:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a858:	e020      	b.n	802a89c <__kernel_rem_pio2f+0x1c4>
 802a85a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a85e:	3f01      	subs	r7, #1
 802a860:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a868:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a86c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a870:	ecac 0a01 	vstmia	ip!, {s0}
 802a874:	ed90 0a00 	vldr	s0, [r0]
 802a878:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a87c:	e79e      	b.n	802a7bc <__kernel_rem_pio2f+0xe4>
 802a87e:	d105      	bne.n	802a88c <__kernel_rem_pio2f+0x1b4>
 802a880:	1e70      	subs	r0, r6, #1
 802a882:	ab08      	add	r3, sp, #32
 802a884:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a888:	11ff      	asrs	r7, r7, #7
 802a88a:	e7c8      	b.n	802a81e <__kernel_rem_pio2f+0x146>
 802a88c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a890:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a898:	da30      	bge.n	802a8fc <__kernel_rem_pio2f+0x224>
 802a89a:	2700      	movs	r7, #0
 802a89c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a8a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8a4:	f040 809a 	bne.w	802a9dc <__kernel_rem_pio2f+0x304>
 802a8a8:	1e74      	subs	r4, r6, #1
 802a8aa:	46a4      	mov	ip, r4
 802a8ac:	2100      	movs	r1, #0
 802a8ae:	45d4      	cmp	ip, sl
 802a8b0:	da47      	bge.n	802a942 <__kernel_rem_pio2f+0x26a>
 802a8b2:	2900      	cmp	r1, #0
 802a8b4:	d063      	beq.n	802a97e <__kernel_rem_pio2f+0x2a6>
 802a8b6:	ab08      	add	r3, sp, #32
 802a8b8:	3d08      	subs	r5, #8
 802a8ba:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a8be:	2b00      	cmp	r3, #0
 802a8c0:	d07f      	beq.n	802a9c2 <__kernel_rem_pio2f+0x2ea>
 802a8c2:	4628      	mov	r0, r5
 802a8c4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a8c8:	f7ff fea0 	bl	802a60c <scalbnf>
 802a8cc:	1c63      	adds	r3, r4, #1
 802a8ce:	aa44      	add	r2, sp, #272	; 0x110
 802a8d0:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802a9d4 <__kernel_rem_pio2f+0x2fc>
 802a8d4:	0099      	lsls	r1, r3, #2
 802a8d6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a8da:	4623      	mov	r3, r4
 802a8dc:	2b00      	cmp	r3, #0
 802a8de:	f280 80ad 	bge.w	802aa3c <__kernel_rem_pio2f+0x364>
 802a8e2:	4623      	mov	r3, r4
 802a8e4:	2b00      	cmp	r3, #0
 802a8e6:	f2c0 80cb 	blt.w	802aa80 <__kernel_rem_pio2f+0x3a8>
 802a8ea:	aa44      	add	r2, sp, #272	; 0x110
 802a8ec:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a8f0:	4e36      	ldr	r6, [pc, #216]	; (802a9cc <__kernel_rem_pio2f+0x2f4>)
 802a8f2:	eddf 7a39 	vldr	s15, [pc, #228]	; 802a9d8 <__kernel_rem_pio2f+0x300>
 802a8f6:	2000      	movs	r0, #0
 802a8f8:	1ae2      	subs	r2, r4, r3
 802a8fa:	e0b6      	b.n	802aa6a <__kernel_rem_pio2f+0x392>
 802a8fc:	2702      	movs	r7, #2
 802a8fe:	e790      	b.n	802a822 <__kernel_rem_pio2f+0x14a>
 802a900:	6820      	ldr	r0, [r4, #0]
 802a902:	b949      	cbnz	r1, 802a918 <__kernel_rem_pio2f+0x240>
 802a904:	b118      	cbz	r0, 802a90e <__kernel_rem_pio2f+0x236>
 802a906:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a90a:	6020      	str	r0, [r4, #0]
 802a90c:	2001      	movs	r0, #1
 802a90e:	f10e 0e01 	add.w	lr, lr, #1
 802a912:	3404      	adds	r4, #4
 802a914:	4601      	mov	r1, r0
 802a916:	e789      	b.n	802a82c <__kernel_rem_pio2f+0x154>
 802a918:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a91c:	6020      	str	r0, [r4, #0]
 802a91e:	4608      	mov	r0, r1
 802a920:	e7f5      	b.n	802a90e <__kernel_rem_pio2f+0x236>
 802a922:	1e74      	subs	r4, r6, #1
 802a924:	ab08      	add	r3, sp, #32
 802a926:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a92a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a92e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a932:	e783      	b.n	802a83c <__kernel_rem_pio2f+0x164>
 802a934:	1e74      	subs	r4, r6, #1
 802a936:	ab08      	add	r3, sp, #32
 802a938:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a93c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802a940:	e7f5      	b.n	802a92e <__kernel_rem_pio2f+0x256>
 802a942:	ab08      	add	r3, sp, #32
 802a944:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802a948:	f10c 3cff 	add.w	ip, ip, #4294967295
 802a94c:	4301      	orrs	r1, r0
 802a94e:	e7ae      	b.n	802a8ae <__kernel_rem_pio2f+0x1d6>
 802a950:	3001      	adds	r0, #1
 802a952:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802a956:	2f00      	cmp	r7, #0
 802a958:	d0fa      	beq.n	802a950 <__kernel_rem_pio2f+0x278>
 802a95a:	9b06      	ldr	r3, [sp, #24]
 802a95c:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802a960:	eb0d 0403 	add.w	r4, sp, r3
 802a964:	9b01      	ldr	r3, [sp, #4]
 802a966:	18f7      	adds	r7, r6, r3
 802a968:	ab1c      	add	r3, sp, #112	; 0x70
 802a96a:	f106 0c01 	add.w	ip, r6, #1
 802a96e:	3c4c      	subs	r4, #76	; 0x4c
 802a970:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802a974:	4430      	add	r0, r6
 802a976:	4560      	cmp	r0, ip
 802a978:	da04      	bge.n	802a984 <__kernel_rem_pio2f+0x2ac>
 802a97a:	4606      	mov	r6, r0
 802a97c:	e711      	b.n	802a7a2 <__kernel_rem_pio2f+0xca>
 802a97e:	9c05      	ldr	r4, [sp, #20]
 802a980:	2001      	movs	r0, #1
 802a982:	e7e6      	b.n	802a952 <__kernel_rem_pio2f+0x27a>
 802a984:	9b04      	ldr	r3, [sp, #16]
 802a986:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a98a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802a98e:	9306      	str	r3, [sp, #24]
 802a990:	ee07 3a90 	vmov	s15, r3
 802a994:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a998:	2600      	movs	r6, #0
 802a99a:	ece7 7a01 	vstmia	r7!, {s15}
 802a99e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a9d8 <__kernel_rem_pio2f+0x300>
 802a9a2:	46b9      	mov	r9, r7
 802a9a4:	455e      	cmp	r6, fp
 802a9a6:	dd04      	ble.n	802a9b2 <__kernel_rem_pio2f+0x2da>
 802a9a8:	ece4 7a01 	vstmia	r4!, {s15}
 802a9ac:	f10c 0c01 	add.w	ip, ip, #1
 802a9b0:	e7e1      	b.n	802a976 <__kernel_rem_pio2f+0x29e>
 802a9b2:	ecfe 6a01 	vldmia	lr!, {s13}
 802a9b6:	ed39 7a01 	vldmdb	r9!, {s14}
 802a9ba:	3601      	adds	r6, #1
 802a9bc:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a9c0:	e7f0      	b.n	802a9a4 <__kernel_rem_pio2f+0x2cc>
 802a9c2:	3c01      	subs	r4, #1
 802a9c4:	e777      	b.n	802a8b6 <__kernel_rem_pio2f+0x1de>
 802a9c6:	bf00      	nop
 802a9c8:	08043214 	.word	0x08043214
 802a9cc:	080431e8 	.word	0x080431e8
 802a9d0:	43800000 	.word	0x43800000
 802a9d4:	3b800000 	.word	0x3b800000
 802a9d8:	00000000 	.word	0x00000000
 802a9dc:	9b03      	ldr	r3, [sp, #12]
 802a9de:	eeb0 0a48 	vmov.f32	s0, s16
 802a9e2:	1a98      	subs	r0, r3, r2
 802a9e4:	f7ff fe12 	bl	802a60c <scalbnf>
 802a9e8:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802a9d0 <__kernel_rem_pio2f+0x2f8>
 802a9ec:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a9f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9f4:	db19      	blt.n	802aa2a <__kernel_rem_pio2f+0x352>
 802a9f6:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802a9d4 <__kernel_rem_pio2f+0x2fc>
 802a9fa:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a9fe:	aa08      	add	r2, sp, #32
 802aa00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aa04:	1c74      	adds	r4, r6, #1
 802aa06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aa0a:	3508      	adds	r5, #8
 802aa0c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802aa10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aa14:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802aa18:	ee10 3a10 	vmov	r3, s0
 802aa1c:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802aa20:	ee17 3a90 	vmov	r3, s15
 802aa24:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802aa28:	e74b      	b.n	802a8c2 <__kernel_rem_pio2f+0x1ea>
 802aa2a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802aa2e:	aa08      	add	r2, sp, #32
 802aa30:	ee10 3a10 	vmov	r3, s0
 802aa34:	4634      	mov	r4, r6
 802aa36:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802aa3a:	e742      	b.n	802a8c2 <__kernel_rem_pio2f+0x1ea>
 802aa3c:	a808      	add	r0, sp, #32
 802aa3e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802aa42:	9001      	str	r0, [sp, #4]
 802aa44:	ee07 0a90 	vmov	s15, r0
 802aa48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aa4c:	3b01      	subs	r3, #1
 802aa4e:	ee67 7a80 	vmul.f32	s15, s15, s0
 802aa52:	ee20 0a07 	vmul.f32	s0, s0, s14
 802aa56:	ed62 7a01 	vstmdb	r2!, {s15}
 802aa5a:	e73f      	b.n	802a8dc <__kernel_rem_pio2f+0x204>
 802aa5c:	ecf6 6a01 	vldmia	r6!, {s13}
 802aa60:	ecb5 7a01 	vldmia	r5!, {s14}
 802aa64:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aa68:	3001      	adds	r0, #1
 802aa6a:	4550      	cmp	r0, sl
 802aa6c:	dc01      	bgt.n	802aa72 <__kernel_rem_pio2f+0x39a>
 802aa6e:	4290      	cmp	r0, r2
 802aa70:	ddf4      	ble.n	802aa5c <__kernel_rem_pio2f+0x384>
 802aa72:	a858      	add	r0, sp, #352	; 0x160
 802aa74:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802aa78:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802aa7c:	3b01      	subs	r3, #1
 802aa7e:	e731      	b.n	802a8e4 <__kernel_rem_pio2f+0x20c>
 802aa80:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802aa82:	2b02      	cmp	r3, #2
 802aa84:	dc09      	bgt.n	802aa9a <__kernel_rem_pio2f+0x3c2>
 802aa86:	2b00      	cmp	r3, #0
 802aa88:	dc2b      	bgt.n	802aae2 <__kernel_rem_pio2f+0x40a>
 802aa8a:	d044      	beq.n	802ab16 <__kernel_rem_pio2f+0x43e>
 802aa8c:	f009 0007 	and.w	r0, r9, #7
 802aa90:	b059      	add	sp, #356	; 0x164
 802aa92:	ecbd 8b04 	vpop	{d8-d9}
 802aa96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aa9a:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802aa9c:	2b03      	cmp	r3, #3
 802aa9e:	d1f5      	bne.n	802aa8c <__kernel_rem_pio2f+0x3b4>
 802aaa0:	aa30      	add	r2, sp, #192	; 0xc0
 802aaa2:	1f0b      	subs	r3, r1, #4
 802aaa4:	4413      	add	r3, r2
 802aaa6:	461a      	mov	r2, r3
 802aaa8:	4620      	mov	r0, r4
 802aaaa:	2800      	cmp	r0, #0
 802aaac:	f1a2 0204 	sub.w	r2, r2, #4
 802aab0:	dc52      	bgt.n	802ab58 <__kernel_rem_pio2f+0x480>
 802aab2:	4622      	mov	r2, r4
 802aab4:	2a01      	cmp	r2, #1
 802aab6:	f1a3 0304 	sub.w	r3, r3, #4
 802aaba:	dc5d      	bgt.n	802ab78 <__kernel_rem_pio2f+0x4a0>
 802aabc:	ab30      	add	r3, sp, #192	; 0xc0
 802aabe:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802a9d8 <__kernel_rem_pio2f+0x300>
 802aac2:	440b      	add	r3, r1
 802aac4:	2c01      	cmp	r4, #1
 802aac6:	dc67      	bgt.n	802ab98 <__kernel_rem_pio2f+0x4c0>
 802aac8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802aacc:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802aad0:	2f00      	cmp	r7, #0
 802aad2:	d167      	bne.n	802aba4 <__kernel_rem_pio2f+0x4cc>
 802aad4:	edc8 6a00 	vstr	s13, [r8]
 802aad8:	ed88 7a01 	vstr	s14, [r8, #4]
 802aadc:	edc8 7a02 	vstr	s15, [r8, #8]
 802aae0:	e7d4      	b.n	802aa8c <__kernel_rem_pio2f+0x3b4>
 802aae2:	ab30      	add	r3, sp, #192	; 0xc0
 802aae4:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802a9d8 <__kernel_rem_pio2f+0x300>
 802aae8:	440b      	add	r3, r1
 802aaea:	4622      	mov	r2, r4
 802aaec:	2a00      	cmp	r2, #0
 802aaee:	da24      	bge.n	802ab3a <__kernel_rem_pio2f+0x462>
 802aaf0:	b34f      	cbz	r7, 802ab46 <__kernel_rem_pio2f+0x46e>
 802aaf2:	eef1 7a47 	vneg.f32	s15, s14
 802aaf6:	edc8 7a00 	vstr	s15, [r8]
 802aafa:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802aafe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab02:	aa31      	add	r2, sp, #196	; 0xc4
 802ab04:	2301      	movs	r3, #1
 802ab06:	429c      	cmp	r4, r3
 802ab08:	da20      	bge.n	802ab4c <__kernel_rem_pio2f+0x474>
 802ab0a:	b10f      	cbz	r7, 802ab10 <__kernel_rem_pio2f+0x438>
 802ab0c:	eef1 7a67 	vneg.f32	s15, s15
 802ab10:	edc8 7a01 	vstr	s15, [r8, #4]
 802ab14:	e7ba      	b.n	802aa8c <__kernel_rem_pio2f+0x3b4>
 802ab16:	ab30      	add	r3, sp, #192	; 0xc0
 802ab18:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802a9d8 <__kernel_rem_pio2f+0x300>
 802ab1c:	440b      	add	r3, r1
 802ab1e:	2c00      	cmp	r4, #0
 802ab20:	da05      	bge.n	802ab2e <__kernel_rem_pio2f+0x456>
 802ab22:	b10f      	cbz	r7, 802ab28 <__kernel_rem_pio2f+0x450>
 802ab24:	eef1 7a67 	vneg.f32	s15, s15
 802ab28:	edc8 7a00 	vstr	s15, [r8]
 802ab2c:	e7ae      	b.n	802aa8c <__kernel_rem_pio2f+0x3b4>
 802ab2e:	ed33 7a01 	vldmdb	r3!, {s14}
 802ab32:	3c01      	subs	r4, #1
 802ab34:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ab38:	e7f1      	b.n	802ab1e <__kernel_rem_pio2f+0x446>
 802ab3a:	ed73 7a01 	vldmdb	r3!, {s15}
 802ab3e:	3a01      	subs	r2, #1
 802ab40:	ee37 7a27 	vadd.f32	s14, s14, s15
 802ab44:	e7d2      	b.n	802aaec <__kernel_rem_pio2f+0x414>
 802ab46:	eef0 7a47 	vmov.f32	s15, s14
 802ab4a:	e7d4      	b.n	802aaf6 <__kernel_rem_pio2f+0x41e>
 802ab4c:	ecb2 7a01 	vldmia	r2!, {s14}
 802ab50:	3301      	adds	r3, #1
 802ab52:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ab56:	e7d6      	b.n	802ab06 <__kernel_rem_pio2f+0x42e>
 802ab58:	edd2 7a00 	vldr	s15, [r2]
 802ab5c:	edd2 6a01 	vldr	s13, [r2, #4]
 802ab60:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ab64:	3801      	subs	r0, #1
 802ab66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab6a:	ed82 7a00 	vstr	s14, [r2]
 802ab6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ab72:	edc2 7a01 	vstr	s15, [r2, #4]
 802ab76:	e798      	b.n	802aaaa <__kernel_rem_pio2f+0x3d2>
 802ab78:	edd3 7a00 	vldr	s15, [r3]
 802ab7c:	edd3 6a01 	vldr	s13, [r3, #4]
 802ab80:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ab84:	3a01      	subs	r2, #1
 802ab86:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab8a:	ed83 7a00 	vstr	s14, [r3]
 802ab8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ab92:	edc3 7a01 	vstr	s15, [r3, #4]
 802ab96:	e78d      	b.n	802aab4 <__kernel_rem_pio2f+0x3dc>
 802ab98:	ed33 7a01 	vldmdb	r3!, {s14}
 802ab9c:	3c01      	subs	r4, #1
 802ab9e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aba2:	e78f      	b.n	802aac4 <__kernel_rem_pio2f+0x3ec>
 802aba4:	eef1 6a66 	vneg.f32	s13, s13
 802aba8:	eeb1 7a47 	vneg.f32	s14, s14
 802abac:	edc8 6a00 	vstr	s13, [r8]
 802abb0:	ed88 7a01 	vstr	s14, [r8, #4]
 802abb4:	eef1 7a67 	vneg.f32	s15, s15
 802abb8:	e790      	b.n	802aadc <__kernel_rem_pio2f+0x404>
 802abba:	bf00      	nop

0802abbc <abort>:
 802abbc:	b508      	push	{r3, lr}
 802abbe:	2006      	movs	r0, #6
 802abc0:	f000 fa3a 	bl	802b038 <raise>
 802abc4:	2001      	movs	r0, #1
 802abc6:	f7d8 f935 	bl	8002e34 <_exit>
	...

0802abcc <__assert_func>:
 802abcc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802abce:	4614      	mov	r4, r2
 802abd0:	461a      	mov	r2, r3
 802abd2:	4b09      	ldr	r3, [pc, #36]	; (802abf8 <__assert_func+0x2c>)
 802abd4:	681b      	ldr	r3, [r3, #0]
 802abd6:	4605      	mov	r5, r0
 802abd8:	68d8      	ldr	r0, [r3, #12]
 802abda:	b14c      	cbz	r4, 802abf0 <__assert_func+0x24>
 802abdc:	4b07      	ldr	r3, [pc, #28]	; (802abfc <__assert_func+0x30>)
 802abde:	9100      	str	r1, [sp, #0]
 802abe0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802abe4:	4906      	ldr	r1, [pc, #24]	; (802ac00 <__assert_func+0x34>)
 802abe6:	462b      	mov	r3, r5
 802abe8:	f000 f982 	bl	802aef0 <fiprintf>
 802abec:	f7ff ffe6 	bl	802abbc <abort>
 802abf0:	4b04      	ldr	r3, [pc, #16]	; (802ac04 <__assert_func+0x38>)
 802abf2:	461c      	mov	r4, r3
 802abf4:	e7f3      	b.n	802abde <__assert_func+0x12>
 802abf6:	bf00      	nop
 802abf8:	20000160 	.word	0x20000160
 802abfc:	08043220 	.word	0x08043220
 802ac00:	0804322d 	.word	0x0804322d
 802ac04:	0804325b 	.word	0x0804325b

0802ac08 <atexit>:
 802ac08:	2300      	movs	r3, #0
 802ac0a:	4601      	mov	r1, r0
 802ac0c:	461a      	mov	r2, r3
 802ac0e:	4618      	mov	r0, r3
 802ac10:	f000 bb16 	b.w	802b240 <__register_exitproc>

0802ac14 <malloc>:
 802ac14:	4b02      	ldr	r3, [pc, #8]	; (802ac20 <malloc+0xc>)
 802ac16:	4601      	mov	r1, r0
 802ac18:	6818      	ldr	r0, [r3, #0]
 802ac1a:	f000 b82b 	b.w	802ac74 <_malloc_r>
 802ac1e:	bf00      	nop
 802ac20:	20000160 	.word	0x20000160

0802ac24 <free>:
 802ac24:	4b02      	ldr	r3, [pc, #8]	; (802ac30 <free+0xc>)
 802ac26:	4601      	mov	r1, r0
 802ac28:	6818      	ldr	r0, [r3, #0]
 802ac2a:	f000 bb67 	b.w	802b2fc <_free_r>
 802ac2e:	bf00      	nop
 802ac30:	20000160 	.word	0x20000160

0802ac34 <sbrk_aligned>:
 802ac34:	b570      	push	{r4, r5, r6, lr}
 802ac36:	4e0e      	ldr	r6, [pc, #56]	; (802ac70 <sbrk_aligned+0x3c>)
 802ac38:	460c      	mov	r4, r1
 802ac3a:	6831      	ldr	r1, [r6, #0]
 802ac3c:	4605      	mov	r5, r0
 802ac3e:	b911      	cbnz	r1, 802ac46 <sbrk_aligned+0x12>
 802ac40:	f000 faa0 	bl	802b184 <_sbrk_r>
 802ac44:	6030      	str	r0, [r6, #0]
 802ac46:	4621      	mov	r1, r4
 802ac48:	4628      	mov	r0, r5
 802ac4a:	f000 fa9b 	bl	802b184 <_sbrk_r>
 802ac4e:	1c43      	adds	r3, r0, #1
 802ac50:	d00a      	beq.n	802ac68 <sbrk_aligned+0x34>
 802ac52:	1cc4      	adds	r4, r0, #3
 802ac54:	f024 0403 	bic.w	r4, r4, #3
 802ac58:	42a0      	cmp	r0, r4
 802ac5a:	d007      	beq.n	802ac6c <sbrk_aligned+0x38>
 802ac5c:	1a21      	subs	r1, r4, r0
 802ac5e:	4628      	mov	r0, r5
 802ac60:	f000 fa90 	bl	802b184 <_sbrk_r>
 802ac64:	3001      	adds	r0, #1
 802ac66:	d101      	bne.n	802ac6c <sbrk_aligned+0x38>
 802ac68:	f04f 34ff 	mov.w	r4, #4294967295
 802ac6c:	4620      	mov	r0, r4
 802ac6e:	bd70      	pop	{r4, r5, r6, pc}
 802ac70:	2001370c 	.word	0x2001370c

0802ac74 <_malloc_r>:
 802ac74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ac78:	1ccd      	adds	r5, r1, #3
 802ac7a:	f025 0503 	bic.w	r5, r5, #3
 802ac7e:	3508      	adds	r5, #8
 802ac80:	2d0c      	cmp	r5, #12
 802ac82:	bf38      	it	cc
 802ac84:	250c      	movcc	r5, #12
 802ac86:	2d00      	cmp	r5, #0
 802ac88:	4607      	mov	r7, r0
 802ac8a:	db01      	blt.n	802ac90 <_malloc_r+0x1c>
 802ac8c:	42a9      	cmp	r1, r5
 802ac8e:	d905      	bls.n	802ac9c <_malloc_r+0x28>
 802ac90:	230c      	movs	r3, #12
 802ac92:	603b      	str	r3, [r7, #0]
 802ac94:	2600      	movs	r6, #0
 802ac96:	4630      	mov	r0, r6
 802ac98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ac9c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ad70 <_malloc_r+0xfc>
 802aca0:	f000 f868 	bl	802ad74 <__malloc_lock>
 802aca4:	f8d8 3000 	ldr.w	r3, [r8]
 802aca8:	461c      	mov	r4, r3
 802acaa:	bb5c      	cbnz	r4, 802ad04 <_malloc_r+0x90>
 802acac:	4629      	mov	r1, r5
 802acae:	4638      	mov	r0, r7
 802acb0:	f7ff ffc0 	bl	802ac34 <sbrk_aligned>
 802acb4:	1c43      	adds	r3, r0, #1
 802acb6:	4604      	mov	r4, r0
 802acb8:	d155      	bne.n	802ad66 <_malloc_r+0xf2>
 802acba:	f8d8 4000 	ldr.w	r4, [r8]
 802acbe:	4626      	mov	r6, r4
 802acc0:	2e00      	cmp	r6, #0
 802acc2:	d145      	bne.n	802ad50 <_malloc_r+0xdc>
 802acc4:	2c00      	cmp	r4, #0
 802acc6:	d048      	beq.n	802ad5a <_malloc_r+0xe6>
 802acc8:	6823      	ldr	r3, [r4, #0]
 802acca:	4631      	mov	r1, r6
 802accc:	4638      	mov	r0, r7
 802acce:	eb04 0903 	add.w	r9, r4, r3
 802acd2:	f000 fa57 	bl	802b184 <_sbrk_r>
 802acd6:	4581      	cmp	r9, r0
 802acd8:	d13f      	bne.n	802ad5a <_malloc_r+0xe6>
 802acda:	6821      	ldr	r1, [r4, #0]
 802acdc:	1a6d      	subs	r5, r5, r1
 802acde:	4629      	mov	r1, r5
 802ace0:	4638      	mov	r0, r7
 802ace2:	f7ff ffa7 	bl	802ac34 <sbrk_aligned>
 802ace6:	3001      	adds	r0, #1
 802ace8:	d037      	beq.n	802ad5a <_malloc_r+0xe6>
 802acea:	6823      	ldr	r3, [r4, #0]
 802acec:	442b      	add	r3, r5
 802acee:	6023      	str	r3, [r4, #0]
 802acf0:	f8d8 3000 	ldr.w	r3, [r8]
 802acf4:	2b00      	cmp	r3, #0
 802acf6:	d038      	beq.n	802ad6a <_malloc_r+0xf6>
 802acf8:	685a      	ldr	r2, [r3, #4]
 802acfa:	42a2      	cmp	r2, r4
 802acfc:	d12b      	bne.n	802ad56 <_malloc_r+0xe2>
 802acfe:	2200      	movs	r2, #0
 802ad00:	605a      	str	r2, [r3, #4]
 802ad02:	e00f      	b.n	802ad24 <_malloc_r+0xb0>
 802ad04:	6822      	ldr	r2, [r4, #0]
 802ad06:	1b52      	subs	r2, r2, r5
 802ad08:	d41f      	bmi.n	802ad4a <_malloc_r+0xd6>
 802ad0a:	2a0b      	cmp	r2, #11
 802ad0c:	d917      	bls.n	802ad3e <_malloc_r+0xca>
 802ad0e:	1961      	adds	r1, r4, r5
 802ad10:	42a3      	cmp	r3, r4
 802ad12:	6025      	str	r5, [r4, #0]
 802ad14:	bf18      	it	ne
 802ad16:	6059      	strne	r1, [r3, #4]
 802ad18:	6863      	ldr	r3, [r4, #4]
 802ad1a:	bf08      	it	eq
 802ad1c:	f8c8 1000 	streq.w	r1, [r8]
 802ad20:	5162      	str	r2, [r4, r5]
 802ad22:	604b      	str	r3, [r1, #4]
 802ad24:	4638      	mov	r0, r7
 802ad26:	f104 060b 	add.w	r6, r4, #11
 802ad2a:	f000 f829 	bl	802ad80 <__malloc_unlock>
 802ad2e:	f026 0607 	bic.w	r6, r6, #7
 802ad32:	1d23      	adds	r3, r4, #4
 802ad34:	1af2      	subs	r2, r6, r3
 802ad36:	d0ae      	beq.n	802ac96 <_malloc_r+0x22>
 802ad38:	1b9b      	subs	r3, r3, r6
 802ad3a:	50a3      	str	r3, [r4, r2]
 802ad3c:	e7ab      	b.n	802ac96 <_malloc_r+0x22>
 802ad3e:	42a3      	cmp	r3, r4
 802ad40:	6862      	ldr	r2, [r4, #4]
 802ad42:	d1dd      	bne.n	802ad00 <_malloc_r+0x8c>
 802ad44:	f8c8 2000 	str.w	r2, [r8]
 802ad48:	e7ec      	b.n	802ad24 <_malloc_r+0xb0>
 802ad4a:	4623      	mov	r3, r4
 802ad4c:	6864      	ldr	r4, [r4, #4]
 802ad4e:	e7ac      	b.n	802acaa <_malloc_r+0x36>
 802ad50:	4634      	mov	r4, r6
 802ad52:	6876      	ldr	r6, [r6, #4]
 802ad54:	e7b4      	b.n	802acc0 <_malloc_r+0x4c>
 802ad56:	4613      	mov	r3, r2
 802ad58:	e7cc      	b.n	802acf4 <_malloc_r+0x80>
 802ad5a:	230c      	movs	r3, #12
 802ad5c:	603b      	str	r3, [r7, #0]
 802ad5e:	4638      	mov	r0, r7
 802ad60:	f000 f80e 	bl	802ad80 <__malloc_unlock>
 802ad64:	e797      	b.n	802ac96 <_malloc_r+0x22>
 802ad66:	6025      	str	r5, [r4, #0]
 802ad68:	e7dc      	b.n	802ad24 <_malloc_r+0xb0>
 802ad6a:	605b      	str	r3, [r3, #4]
 802ad6c:	deff      	udf	#255	; 0xff
 802ad6e:	bf00      	nop
 802ad70:	20013708 	.word	0x20013708

0802ad74 <__malloc_lock>:
 802ad74:	4801      	ldr	r0, [pc, #4]	; (802ad7c <__malloc_lock+0x8>)
 802ad76:	f000 ba52 	b.w	802b21e <__retarget_lock_acquire_recursive>
 802ad7a:	bf00      	nop
 802ad7c:	20013851 	.word	0x20013851

0802ad80 <__malloc_unlock>:
 802ad80:	4801      	ldr	r0, [pc, #4]	; (802ad88 <__malloc_unlock+0x8>)
 802ad82:	f000 ba4d 	b.w	802b220 <__retarget_lock_release_recursive>
 802ad86:	bf00      	nop
 802ad88:	20013851 	.word	0x20013851

0802ad8c <__cxa_atexit>:
 802ad8c:	b510      	push	{r4, lr}
 802ad8e:	4c05      	ldr	r4, [pc, #20]	; (802ada4 <__cxa_atexit+0x18>)
 802ad90:	4613      	mov	r3, r2
 802ad92:	b12c      	cbz	r4, 802ada0 <__cxa_atexit+0x14>
 802ad94:	460a      	mov	r2, r1
 802ad96:	4601      	mov	r1, r0
 802ad98:	2002      	movs	r0, #2
 802ad9a:	f000 fa51 	bl	802b240 <__register_exitproc>
 802ad9e:	bd10      	pop	{r4, pc}
 802ada0:	4620      	mov	r0, r4
 802ada2:	e7fc      	b.n	802ad9e <__cxa_atexit+0x12>
 802ada4:	0802b241 	.word	0x0802b241

0802ada8 <std>:
 802ada8:	2300      	movs	r3, #0
 802adaa:	b510      	push	{r4, lr}
 802adac:	4604      	mov	r4, r0
 802adae:	e9c0 3300 	strd	r3, r3, [r0]
 802adb2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802adb6:	6083      	str	r3, [r0, #8]
 802adb8:	8181      	strh	r1, [r0, #12]
 802adba:	6643      	str	r3, [r0, #100]	; 0x64
 802adbc:	81c2      	strh	r2, [r0, #14]
 802adbe:	6183      	str	r3, [r0, #24]
 802adc0:	4619      	mov	r1, r3
 802adc2:	2208      	movs	r2, #8
 802adc4:	305c      	adds	r0, #92	; 0x5c
 802adc6:	f000 f906 	bl	802afd6 <memset>
 802adca:	4b0d      	ldr	r3, [pc, #52]	; (802ae00 <std+0x58>)
 802adcc:	6263      	str	r3, [r4, #36]	; 0x24
 802adce:	4b0d      	ldr	r3, [pc, #52]	; (802ae04 <std+0x5c>)
 802add0:	62a3      	str	r3, [r4, #40]	; 0x28
 802add2:	4b0d      	ldr	r3, [pc, #52]	; (802ae08 <std+0x60>)
 802add4:	62e3      	str	r3, [r4, #44]	; 0x2c
 802add6:	4b0d      	ldr	r3, [pc, #52]	; (802ae0c <std+0x64>)
 802add8:	6323      	str	r3, [r4, #48]	; 0x30
 802adda:	4b0d      	ldr	r3, [pc, #52]	; (802ae10 <std+0x68>)
 802addc:	6224      	str	r4, [r4, #32]
 802adde:	429c      	cmp	r4, r3
 802ade0:	d006      	beq.n	802adf0 <std+0x48>
 802ade2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802ade6:	4294      	cmp	r4, r2
 802ade8:	d002      	beq.n	802adf0 <std+0x48>
 802adea:	33d0      	adds	r3, #208	; 0xd0
 802adec:	429c      	cmp	r4, r3
 802adee:	d105      	bne.n	802adfc <std+0x54>
 802adf0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802adf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802adf8:	f000 ba10 	b.w	802b21c <__retarget_lock_init_recursive>
 802adfc:	bd10      	pop	{r4, pc}
 802adfe:	bf00      	nop
 802ae00:	0802af51 	.word	0x0802af51
 802ae04:	0802af73 	.word	0x0802af73
 802ae08:	0802afab 	.word	0x0802afab
 802ae0c:	0802afcf 	.word	0x0802afcf
 802ae10:	20013710 	.word	0x20013710

0802ae14 <stdio_exit_handler>:
 802ae14:	4a02      	ldr	r2, [pc, #8]	; (802ae20 <stdio_exit_handler+0xc>)
 802ae16:	4903      	ldr	r1, [pc, #12]	; (802ae24 <stdio_exit_handler+0x10>)
 802ae18:	4803      	ldr	r0, [pc, #12]	; (802ae28 <stdio_exit_handler+0x14>)
 802ae1a:	f000 b87b 	b.w	802af14 <_fwalk_sglue>
 802ae1e:	bf00      	nop
 802ae20:	20000108 	.word	0x20000108
 802ae24:	0802ba49 	.word	0x0802ba49
 802ae28:	20000114 	.word	0x20000114

0802ae2c <cleanup_stdio>:
 802ae2c:	6841      	ldr	r1, [r0, #4]
 802ae2e:	4b0c      	ldr	r3, [pc, #48]	; (802ae60 <cleanup_stdio+0x34>)
 802ae30:	4299      	cmp	r1, r3
 802ae32:	b510      	push	{r4, lr}
 802ae34:	4604      	mov	r4, r0
 802ae36:	d001      	beq.n	802ae3c <cleanup_stdio+0x10>
 802ae38:	f000 fe06 	bl	802ba48 <_fflush_r>
 802ae3c:	68a1      	ldr	r1, [r4, #8]
 802ae3e:	4b09      	ldr	r3, [pc, #36]	; (802ae64 <cleanup_stdio+0x38>)
 802ae40:	4299      	cmp	r1, r3
 802ae42:	d002      	beq.n	802ae4a <cleanup_stdio+0x1e>
 802ae44:	4620      	mov	r0, r4
 802ae46:	f000 fdff 	bl	802ba48 <_fflush_r>
 802ae4a:	68e1      	ldr	r1, [r4, #12]
 802ae4c:	4b06      	ldr	r3, [pc, #24]	; (802ae68 <cleanup_stdio+0x3c>)
 802ae4e:	4299      	cmp	r1, r3
 802ae50:	d004      	beq.n	802ae5c <cleanup_stdio+0x30>
 802ae52:	4620      	mov	r0, r4
 802ae54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ae58:	f000 bdf6 	b.w	802ba48 <_fflush_r>
 802ae5c:	bd10      	pop	{r4, pc}
 802ae5e:	bf00      	nop
 802ae60:	20013710 	.word	0x20013710
 802ae64:	20013778 	.word	0x20013778
 802ae68:	200137e0 	.word	0x200137e0

0802ae6c <global_stdio_init.part.0>:
 802ae6c:	b510      	push	{r4, lr}
 802ae6e:	4b0b      	ldr	r3, [pc, #44]	; (802ae9c <global_stdio_init.part.0+0x30>)
 802ae70:	4c0b      	ldr	r4, [pc, #44]	; (802aea0 <global_stdio_init.part.0+0x34>)
 802ae72:	4a0c      	ldr	r2, [pc, #48]	; (802aea4 <global_stdio_init.part.0+0x38>)
 802ae74:	601a      	str	r2, [r3, #0]
 802ae76:	4620      	mov	r0, r4
 802ae78:	2200      	movs	r2, #0
 802ae7a:	2104      	movs	r1, #4
 802ae7c:	f7ff ff94 	bl	802ada8 <std>
 802ae80:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802ae84:	2201      	movs	r2, #1
 802ae86:	2109      	movs	r1, #9
 802ae88:	f7ff ff8e 	bl	802ada8 <std>
 802ae8c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ae90:	2202      	movs	r2, #2
 802ae92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ae96:	2112      	movs	r1, #18
 802ae98:	f7ff bf86 	b.w	802ada8 <std>
 802ae9c:	20013848 	.word	0x20013848
 802aea0:	20013710 	.word	0x20013710
 802aea4:	0802ae15 	.word	0x0802ae15

0802aea8 <__sfp_lock_acquire>:
 802aea8:	4801      	ldr	r0, [pc, #4]	; (802aeb0 <__sfp_lock_acquire+0x8>)
 802aeaa:	f000 b9b8 	b.w	802b21e <__retarget_lock_acquire_recursive>
 802aeae:	bf00      	nop
 802aeb0:	20013852 	.word	0x20013852

0802aeb4 <__sfp_lock_release>:
 802aeb4:	4801      	ldr	r0, [pc, #4]	; (802aebc <__sfp_lock_release+0x8>)
 802aeb6:	f000 b9b3 	b.w	802b220 <__retarget_lock_release_recursive>
 802aeba:	bf00      	nop
 802aebc:	20013852 	.word	0x20013852

0802aec0 <__sinit>:
 802aec0:	b510      	push	{r4, lr}
 802aec2:	4604      	mov	r4, r0
 802aec4:	f7ff fff0 	bl	802aea8 <__sfp_lock_acquire>
 802aec8:	6a23      	ldr	r3, [r4, #32]
 802aeca:	b11b      	cbz	r3, 802aed4 <__sinit+0x14>
 802aecc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aed0:	f7ff bff0 	b.w	802aeb4 <__sfp_lock_release>
 802aed4:	4b04      	ldr	r3, [pc, #16]	; (802aee8 <__sinit+0x28>)
 802aed6:	6223      	str	r3, [r4, #32]
 802aed8:	4b04      	ldr	r3, [pc, #16]	; (802aeec <__sinit+0x2c>)
 802aeda:	681b      	ldr	r3, [r3, #0]
 802aedc:	2b00      	cmp	r3, #0
 802aede:	d1f5      	bne.n	802aecc <__sinit+0xc>
 802aee0:	f7ff ffc4 	bl	802ae6c <global_stdio_init.part.0>
 802aee4:	e7f2      	b.n	802aecc <__sinit+0xc>
 802aee6:	bf00      	nop
 802aee8:	0802ae2d 	.word	0x0802ae2d
 802aeec:	20013848 	.word	0x20013848

0802aef0 <fiprintf>:
 802aef0:	b40e      	push	{r1, r2, r3}
 802aef2:	b503      	push	{r0, r1, lr}
 802aef4:	4601      	mov	r1, r0
 802aef6:	ab03      	add	r3, sp, #12
 802aef8:	4805      	ldr	r0, [pc, #20]	; (802af10 <fiprintf+0x20>)
 802aefa:	f853 2b04 	ldr.w	r2, [r3], #4
 802aefe:	6800      	ldr	r0, [r0, #0]
 802af00:	9301      	str	r3, [sp, #4]
 802af02:	f000 fa71 	bl	802b3e8 <_vfiprintf_r>
 802af06:	b002      	add	sp, #8
 802af08:	f85d eb04 	ldr.w	lr, [sp], #4
 802af0c:	b003      	add	sp, #12
 802af0e:	4770      	bx	lr
 802af10:	20000160 	.word	0x20000160

0802af14 <_fwalk_sglue>:
 802af14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802af18:	4607      	mov	r7, r0
 802af1a:	4688      	mov	r8, r1
 802af1c:	4614      	mov	r4, r2
 802af1e:	2600      	movs	r6, #0
 802af20:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802af24:	f1b9 0901 	subs.w	r9, r9, #1
 802af28:	d505      	bpl.n	802af36 <_fwalk_sglue+0x22>
 802af2a:	6824      	ldr	r4, [r4, #0]
 802af2c:	2c00      	cmp	r4, #0
 802af2e:	d1f7      	bne.n	802af20 <_fwalk_sglue+0xc>
 802af30:	4630      	mov	r0, r6
 802af32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802af36:	89ab      	ldrh	r3, [r5, #12]
 802af38:	2b01      	cmp	r3, #1
 802af3a:	d907      	bls.n	802af4c <_fwalk_sglue+0x38>
 802af3c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802af40:	3301      	adds	r3, #1
 802af42:	d003      	beq.n	802af4c <_fwalk_sglue+0x38>
 802af44:	4629      	mov	r1, r5
 802af46:	4638      	mov	r0, r7
 802af48:	47c0      	blx	r8
 802af4a:	4306      	orrs	r6, r0
 802af4c:	3568      	adds	r5, #104	; 0x68
 802af4e:	e7e9      	b.n	802af24 <_fwalk_sglue+0x10>

0802af50 <__sread>:
 802af50:	b510      	push	{r4, lr}
 802af52:	460c      	mov	r4, r1
 802af54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af58:	f000 f8ee 	bl	802b138 <_read_r>
 802af5c:	2800      	cmp	r0, #0
 802af5e:	bfab      	itete	ge
 802af60:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802af62:	89a3      	ldrhlt	r3, [r4, #12]
 802af64:	181b      	addge	r3, r3, r0
 802af66:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802af6a:	bfac      	ite	ge
 802af6c:	6563      	strge	r3, [r4, #84]	; 0x54
 802af6e:	81a3      	strhlt	r3, [r4, #12]
 802af70:	bd10      	pop	{r4, pc}

0802af72 <__swrite>:
 802af72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802af76:	461f      	mov	r7, r3
 802af78:	898b      	ldrh	r3, [r1, #12]
 802af7a:	05db      	lsls	r3, r3, #23
 802af7c:	4605      	mov	r5, r0
 802af7e:	460c      	mov	r4, r1
 802af80:	4616      	mov	r6, r2
 802af82:	d505      	bpl.n	802af90 <__swrite+0x1e>
 802af84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af88:	2302      	movs	r3, #2
 802af8a:	2200      	movs	r2, #0
 802af8c:	f000 f8c2 	bl	802b114 <_lseek_r>
 802af90:	89a3      	ldrh	r3, [r4, #12]
 802af92:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802af96:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802af9a:	81a3      	strh	r3, [r4, #12]
 802af9c:	4632      	mov	r2, r6
 802af9e:	463b      	mov	r3, r7
 802afa0:	4628      	mov	r0, r5
 802afa2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802afa6:	f000 b8fd 	b.w	802b1a4 <_write_r>

0802afaa <__sseek>:
 802afaa:	b510      	push	{r4, lr}
 802afac:	460c      	mov	r4, r1
 802afae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802afb2:	f000 f8af 	bl	802b114 <_lseek_r>
 802afb6:	1c43      	adds	r3, r0, #1
 802afb8:	89a3      	ldrh	r3, [r4, #12]
 802afba:	bf15      	itete	ne
 802afbc:	6560      	strne	r0, [r4, #84]	; 0x54
 802afbe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802afc2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802afc6:	81a3      	strheq	r3, [r4, #12]
 802afc8:	bf18      	it	ne
 802afca:	81a3      	strhne	r3, [r4, #12]
 802afcc:	bd10      	pop	{r4, pc}

0802afce <__sclose>:
 802afce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802afd2:	f000 b839 	b.w	802b048 <_close_r>

0802afd6 <memset>:
 802afd6:	4402      	add	r2, r0
 802afd8:	4603      	mov	r3, r0
 802afda:	4293      	cmp	r3, r2
 802afdc:	d100      	bne.n	802afe0 <memset+0xa>
 802afde:	4770      	bx	lr
 802afe0:	f803 1b01 	strb.w	r1, [r3], #1
 802afe4:	e7f9      	b.n	802afda <memset+0x4>

0802afe6 <_raise_r>:
 802afe6:	291f      	cmp	r1, #31
 802afe8:	b538      	push	{r3, r4, r5, lr}
 802afea:	4604      	mov	r4, r0
 802afec:	460d      	mov	r5, r1
 802afee:	d904      	bls.n	802affa <_raise_r+0x14>
 802aff0:	2316      	movs	r3, #22
 802aff2:	6003      	str	r3, [r0, #0]
 802aff4:	f04f 30ff 	mov.w	r0, #4294967295
 802aff8:	bd38      	pop	{r3, r4, r5, pc}
 802affa:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802affc:	b112      	cbz	r2, 802b004 <_raise_r+0x1e>
 802affe:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b002:	b94b      	cbnz	r3, 802b018 <_raise_r+0x32>
 802b004:	4620      	mov	r0, r4
 802b006:	f000 f8bb 	bl	802b180 <_getpid_r>
 802b00a:	462a      	mov	r2, r5
 802b00c:	4601      	mov	r1, r0
 802b00e:	4620      	mov	r0, r4
 802b010:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b014:	f000 b8a2 	b.w	802b15c <_kill_r>
 802b018:	2b01      	cmp	r3, #1
 802b01a:	d00a      	beq.n	802b032 <_raise_r+0x4c>
 802b01c:	1c59      	adds	r1, r3, #1
 802b01e:	d103      	bne.n	802b028 <_raise_r+0x42>
 802b020:	2316      	movs	r3, #22
 802b022:	6003      	str	r3, [r0, #0]
 802b024:	2001      	movs	r0, #1
 802b026:	e7e7      	b.n	802aff8 <_raise_r+0x12>
 802b028:	2400      	movs	r4, #0
 802b02a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b02e:	4628      	mov	r0, r5
 802b030:	4798      	blx	r3
 802b032:	2000      	movs	r0, #0
 802b034:	e7e0      	b.n	802aff8 <_raise_r+0x12>
	...

0802b038 <raise>:
 802b038:	4b02      	ldr	r3, [pc, #8]	; (802b044 <raise+0xc>)
 802b03a:	4601      	mov	r1, r0
 802b03c:	6818      	ldr	r0, [r3, #0]
 802b03e:	f7ff bfd2 	b.w	802afe6 <_raise_r>
 802b042:	bf00      	nop
 802b044:	20000160 	.word	0x20000160

0802b048 <_close_r>:
 802b048:	b538      	push	{r3, r4, r5, lr}
 802b04a:	4d06      	ldr	r5, [pc, #24]	; (802b064 <_close_r+0x1c>)
 802b04c:	2300      	movs	r3, #0
 802b04e:	4604      	mov	r4, r0
 802b050:	4608      	mov	r0, r1
 802b052:	602b      	str	r3, [r5, #0]
 802b054:	f7d7 ff10 	bl	8002e78 <_close>
 802b058:	1c43      	adds	r3, r0, #1
 802b05a:	d102      	bne.n	802b062 <_close_r+0x1a>
 802b05c:	682b      	ldr	r3, [r5, #0]
 802b05e:	b103      	cbz	r3, 802b062 <_close_r+0x1a>
 802b060:	6023      	str	r3, [r4, #0]
 802b062:	bd38      	pop	{r3, r4, r5, pc}
 802b064:	2001384c 	.word	0x2001384c

0802b068 <_reclaim_reent>:
 802b068:	4b29      	ldr	r3, [pc, #164]	; (802b110 <_reclaim_reent+0xa8>)
 802b06a:	681b      	ldr	r3, [r3, #0]
 802b06c:	4283      	cmp	r3, r0
 802b06e:	b570      	push	{r4, r5, r6, lr}
 802b070:	4604      	mov	r4, r0
 802b072:	d04b      	beq.n	802b10c <_reclaim_reent+0xa4>
 802b074:	69c3      	ldr	r3, [r0, #28]
 802b076:	b143      	cbz	r3, 802b08a <_reclaim_reent+0x22>
 802b078:	68db      	ldr	r3, [r3, #12]
 802b07a:	2b00      	cmp	r3, #0
 802b07c:	d144      	bne.n	802b108 <_reclaim_reent+0xa0>
 802b07e:	69e3      	ldr	r3, [r4, #28]
 802b080:	6819      	ldr	r1, [r3, #0]
 802b082:	b111      	cbz	r1, 802b08a <_reclaim_reent+0x22>
 802b084:	4620      	mov	r0, r4
 802b086:	f000 f939 	bl	802b2fc <_free_r>
 802b08a:	6961      	ldr	r1, [r4, #20]
 802b08c:	b111      	cbz	r1, 802b094 <_reclaim_reent+0x2c>
 802b08e:	4620      	mov	r0, r4
 802b090:	f000 f934 	bl	802b2fc <_free_r>
 802b094:	69e1      	ldr	r1, [r4, #28]
 802b096:	b111      	cbz	r1, 802b09e <_reclaim_reent+0x36>
 802b098:	4620      	mov	r0, r4
 802b09a:	f000 f92f 	bl	802b2fc <_free_r>
 802b09e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b0a0:	b111      	cbz	r1, 802b0a8 <_reclaim_reent+0x40>
 802b0a2:	4620      	mov	r0, r4
 802b0a4:	f000 f92a 	bl	802b2fc <_free_r>
 802b0a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b0aa:	b111      	cbz	r1, 802b0b2 <_reclaim_reent+0x4a>
 802b0ac:	4620      	mov	r0, r4
 802b0ae:	f000 f925 	bl	802b2fc <_free_r>
 802b0b2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b0b4:	b111      	cbz	r1, 802b0bc <_reclaim_reent+0x54>
 802b0b6:	4620      	mov	r0, r4
 802b0b8:	f000 f920 	bl	802b2fc <_free_r>
 802b0bc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b0be:	b111      	cbz	r1, 802b0c6 <_reclaim_reent+0x5e>
 802b0c0:	4620      	mov	r0, r4
 802b0c2:	f000 f91b 	bl	802b2fc <_free_r>
 802b0c6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b0c8:	b111      	cbz	r1, 802b0d0 <_reclaim_reent+0x68>
 802b0ca:	4620      	mov	r0, r4
 802b0cc:	f000 f916 	bl	802b2fc <_free_r>
 802b0d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b0d2:	b111      	cbz	r1, 802b0da <_reclaim_reent+0x72>
 802b0d4:	4620      	mov	r0, r4
 802b0d6:	f000 f911 	bl	802b2fc <_free_r>
 802b0da:	6a23      	ldr	r3, [r4, #32]
 802b0dc:	b1b3      	cbz	r3, 802b10c <_reclaim_reent+0xa4>
 802b0de:	4620      	mov	r0, r4
 802b0e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b0e4:	4718      	bx	r3
 802b0e6:	5949      	ldr	r1, [r1, r5]
 802b0e8:	b941      	cbnz	r1, 802b0fc <_reclaim_reent+0x94>
 802b0ea:	3504      	adds	r5, #4
 802b0ec:	69e3      	ldr	r3, [r4, #28]
 802b0ee:	2d80      	cmp	r5, #128	; 0x80
 802b0f0:	68d9      	ldr	r1, [r3, #12]
 802b0f2:	d1f8      	bne.n	802b0e6 <_reclaim_reent+0x7e>
 802b0f4:	4620      	mov	r0, r4
 802b0f6:	f000 f901 	bl	802b2fc <_free_r>
 802b0fa:	e7c0      	b.n	802b07e <_reclaim_reent+0x16>
 802b0fc:	680e      	ldr	r6, [r1, #0]
 802b0fe:	4620      	mov	r0, r4
 802b100:	f000 f8fc 	bl	802b2fc <_free_r>
 802b104:	4631      	mov	r1, r6
 802b106:	e7ef      	b.n	802b0e8 <_reclaim_reent+0x80>
 802b108:	2500      	movs	r5, #0
 802b10a:	e7ef      	b.n	802b0ec <_reclaim_reent+0x84>
 802b10c:	bd70      	pop	{r4, r5, r6, pc}
 802b10e:	bf00      	nop
 802b110:	20000160 	.word	0x20000160

0802b114 <_lseek_r>:
 802b114:	b538      	push	{r3, r4, r5, lr}
 802b116:	4d07      	ldr	r5, [pc, #28]	; (802b134 <_lseek_r+0x20>)
 802b118:	4604      	mov	r4, r0
 802b11a:	4608      	mov	r0, r1
 802b11c:	4611      	mov	r1, r2
 802b11e:	2200      	movs	r2, #0
 802b120:	602a      	str	r2, [r5, #0]
 802b122:	461a      	mov	r2, r3
 802b124:	f7d7 feb4 	bl	8002e90 <_lseek>
 802b128:	1c43      	adds	r3, r0, #1
 802b12a:	d102      	bne.n	802b132 <_lseek_r+0x1e>
 802b12c:	682b      	ldr	r3, [r5, #0]
 802b12e:	b103      	cbz	r3, 802b132 <_lseek_r+0x1e>
 802b130:	6023      	str	r3, [r4, #0]
 802b132:	bd38      	pop	{r3, r4, r5, pc}
 802b134:	2001384c 	.word	0x2001384c

0802b138 <_read_r>:
 802b138:	b538      	push	{r3, r4, r5, lr}
 802b13a:	4d07      	ldr	r5, [pc, #28]	; (802b158 <_read_r+0x20>)
 802b13c:	4604      	mov	r4, r0
 802b13e:	4608      	mov	r0, r1
 802b140:	4611      	mov	r1, r2
 802b142:	2200      	movs	r2, #0
 802b144:	602a      	str	r2, [r5, #0]
 802b146:	461a      	mov	r2, r3
 802b148:	f7d7 fe7a 	bl	8002e40 <_read>
 802b14c:	1c43      	adds	r3, r0, #1
 802b14e:	d102      	bne.n	802b156 <_read_r+0x1e>
 802b150:	682b      	ldr	r3, [r5, #0]
 802b152:	b103      	cbz	r3, 802b156 <_read_r+0x1e>
 802b154:	6023      	str	r3, [r4, #0]
 802b156:	bd38      	pop	{r3, r4, r5, pc}
 802b158:	2001384c 	.word	0x2001384c

0802b15c <_kill_r>:
 802b15c:	b538      	push	{r3, r4, r5, lr}
 802b15e:	4d07      	ldr	r5, [pc, #28]	; (802b17c <_kill_r+0x20>)
 802b160:	2300      	movs	r3, #0
 802b162:	4604      	mov	r4, r0
 802b164:	4608      	mov	r0, r1
 802b166:	4611      	mov	r1, r2
 802b168:	602b      	str	r3, [r5, #0]
 802b16a:	f7d7 fe5b 	bl	8002e24 <_kill>
 802b16e:	1c43      	adds	r3, r0, #1
 802b170:	d102      	bne.n	802b178 <_kill_r+0x1c>
 802b172:	682b      	ldr	r3, [r5, #0]
 802b174:	b103      	cbz	r3, 802b178 <_kill_r+0x1c>
 802b176:	6023      	str	r3, [r4, #0]
 802b178:	bd38      	pop	{r3, r4, r5, pc}
 802b17a:	bf00      	nop
 802b17c:	2001384c 	.word	0x2001384c

0802b180 <_getpid_r>:
 802b180:	f7d7 be4e 	b.w	8002e20 <_getpid>

0802b184 <_sbrk_r>:
 802b184:	b538      	push	{r3, r4, r5, lr}
 802b186:	4d06      	ldr	r5, [pc, #24]	; (802b1a0 <_sbrk_r+0x1c>)
 802b188:	2300      	movs	r3, #0
 802b18a:	4604      	mov	r4, r0
 802b18c:	4608      	mov	r0, r1
 802b18e:	602b      	str	r3, [r5, #0]
 802b190:	f7d7 fe80 	bl	8002e94 <_sbrk>
 802b194:	1c43      	adds	r3, r0, #1
 802b196:	d102      	bne.n	802b19e <_sbrk_r+0x1a>
 802b198:	682b      	ldr	r3, [r5, #0]
 802b19a:	b103      	cbz	r3, 802b19e <_sbrk_r+0x1a>
 802b19c:	6023      	str	r3, [r4, #0]
 802b19e:	bd38      	pop	{r3, r4, r5, pc}
 802b1a0:	2001384c 	.word	0x2001384c

0802b1a4 <_write_r>:
 802b1a4:	b538      	push	{r3, r4, r5, lr}
 802b1a6:	4d07      	ldr	r5, [pc, #28]	; (802b1c4 <_write_r+0x20>)
 802b1a8:	4604      	mov	r4, r0
 802b1aa:	4608      	mov	r0, r1
 802b1ac:	4611      	mov	r1, r2
 802b1ae:	2200      	movs	r2, #0
 802b1b0:	602a      	str	r2, [r5, #0]
 802b1b2:	461a      	mov	r2, r3
 802b1b4:	f7d7 fe52 	bl	8002e5c <_write>
 802b1b8:	1c43      	adds	r3, r0, #1
 802b1ba:	d102      	bne.n	802b1c2 <_write_r+0x1e>
 802b1bc:	682b      	ldr	r3, [r5, #0]
 802b1be:	b103      	cbz	r3, 802b1c2 <_write_r+0x1e>
 802b1c0:	6023      	str	r3, [r4, #0]
 802b1c2:	bd38      	pop	{r3, r4, r5, pc}
 802b1c4:	2001384c 	.word	0x2001384c

0802b1c8 <__errno>:
 802b1c8:	4b01      	ldr	r3, [pc, #4]	; (802b1d0 <__errno+0x8>)
 802b1ca:	6818      	ldr	r0, [r3, #0]
 802b1cc:	4770      	bx	lr
 802b1ce:	bf00      	nop
 802b1d0:	20000160 	.word	0x20000160

0802b1d4 <__libc_init_array>:
 802b1d4:	b570      	push	{r4, r5, r6, lr}
 802b1d6:	4d0d      	ldr	r5, [pc, #52]	; (802b20c <__libc_init_array+0x38>)
 802b1d8:	4c0d      	ldr	r4, [pc, #52]	; (802b210 <__libc_init_array+0x3c>)
 802b1da:	1b64      	subs	r4, r4, r5
 802b1dc:	10a4      	asrs	r4, r4, #2
 802b1de:	2600      	movs	r6, #0
 802b1e0:	42a6      	cmp	r6, r4
 802b1e2:	d109      	bne.n	802b1f8 <__libc_init_array+0x24>
 802b1e4:	4d0b      	ldr	r5, [pc, #44]	; (802b214 <__libc_init_array+0x40>)
 802b1e6:	4c0c      	ldr	r4, [pc, #48]	; (802b218 <__libc_init_array+0x44>)
 802b1e8:	f000 fd70 	bl	802bccc <_init>
 802b1ec:	1b64      	subs	r4, r4, r5
 802b1ee:	10a4      	asrs	r4, r4, #2
 802b1f0:	2600      	movs	r6, #0
 802b1f2:	42a6      	cmp	r6, r4
 802b1f4:	d105      	bne.n	802b202 <__libc_init_array+0x2e>
 802b1f6:	bd70      	pop	{r4, r5, r6, pc}
 802b1f8:	f855 3b04 	ldr.w	r3, [r5], #4
 802b1fc:	4798      	blx	r3
 802b1fe:	3601      	adds	r6, #1
 802b200:	e7ee      	b.n	802b1e0 <__libc_init_array+0xc>
 802b202:	f855 3b04 	ldr.w	r3, [r5], #4
 802b206:	4798      	blx	r3
 802b208:	3601      	adds	r6, #1
 802b20a:	e7f2      	b.n	802b1f2 <__libc_init_array+0x1e>
 802b20c:	081609d4 	.word	0x081609d4
 802b210:	081609d4 	.word	0x081609d4
 802b214:	081609d4 	.word	0x081609d4
 802b218:	081609e8 	.word	0x081609e8

0802b21c <__retarget_lock_init_recursive>:
 802b21c:	4770      	bx	lr

0802b21e <__retarget_lock_acquire_recursive>:
 802b21e:	4770      	bx	lr

0802b220 <__retarget_lock_release_recursive>:
 802b220:	4770      	bx	lr

0802b222 <memcpy>:
 802b222:	440a      	add	r2, r1
 802b224:	4291      	cmp	r1, r2
 802b226:	f100 33ff 	add.w	r3, r0, #4294967295
 802b22a:	d100      	bne.n	802b22e <memcpy+0xc>
 802b22c:	4770      	bx	lr
 802b22e:	b510      	push	{r4, lr}
 802b230:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b234:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b238:	4291      	cmp	r1, r2
 802b23a:	d1f9      	bne.n	802b230 <memcpy+0xe>
 802b23c:	bd10      	pop	{r4, pc}
	...

0802b240 <__register_exitproc>:
 802b240:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b244:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b2f8 <__register_exitproc+0xb8>
 802b248:	4606      	mov	r6, r0
 802b24a:	f8d8 0000 	ldr.w	r0, [r8]
 802b24e:	461f      	mov	r7, r3
 802b250:	460d      	mov	r5, r1
 802b252:	4691      	mov	r9, r2
 802b254:	f7ff ffe3 	bl	802b21e <__retarget_lock_acquire_recursive>
 802b258:	4b23      	ldr	r3, [pc, #140]	; (802b2e8 <__register_exitproc+0xa8>)
 802b25a:	681c      	ldr	r4, [r3, #0]
 802b25c:	b934      	cbnz	r4, 802b26c <__register_exitproc+0x2c>
 802b25e:	4c23      	ldr	r4, [pc, #140]	; (802b2ec <__register_exitproc+0xac>)
 802b260:	601c      	str	r4, [r3, #0]
 802b262:	4b23      	ldr	r3, [pc, #140]	; (802b2f0 <__register_exitproc+0xb0>)
 802b264:	b113      	cbz	r3, 802b26c <__register_exitproc+0x2c>
 802b266:	681b      	ldr	r3, [r3, #0]
 802b268:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b26c:	6863      	ldr	r3, [r4, #4]
 802b26e:	2b1f      	cmp	r3, #31
 802b270:	dd07      	ble.n	802b282 <__register_exitproc+0x42>
 802b272:	f8d8 0000 	ldr.w	r0, [r8]
 802b276:	f7ff ffd3 	bl	802b220 <__retarget_lock_release_recursive>
 802b27a:	f04f 30ff 	mov.w	r0, #4294967295
 802b27e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b282:	b32e      	cbz	r6, 802b2d0 <__register_exitproc+0x90>
 802b284:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b288:	b968      	cbnz	r0, 802b2a6 <__register_exitproc+0x66>
 802b28a:	4b1a      	ldr	r3, [pc, #104]	; (802b2f4 <__register_exitproc+0xb4>)
 802b28c:	2b00      	cmp	r3, #0
 802b28e:	d0f0      	beq.n	802b272 <__register_exitproc+0x32>
 802b290:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b294:	f7ff fcbe 	bl	802ac14 <malloc>
 802b298:	2800      	cmp	r0, #0
 802b29a:	d0ea      	beq.n	802b272 <__register_exitproc+0x32>
 802b29c:	2300      	movs	r3, #0
 802b29e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b2a2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b2a6:	6863      	ldr	r3, [r4, #4]
 802b2a8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b2ac:	2201      	movs	r2, #1
 802b2ae:	409a      	lsls	r2, r3
 802b2b0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b2b4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b2b8:	4313      	orrs	r3, r2
 802b2ba:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b2be:	2e02      	cmp	r6, #2
 802b2c0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b2c4:	bf02      	ittt	eq
 802b2c6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b2ca:	4313      	orreq	r3, r2
 802b2cc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b2d0:	6863      	ldr	r3, [r4, #4]
 802b2d2:	f8d8 0000 	ldr.w	r0, [r8]
 802b2d6:	1c5a      	adds	r2, r3, #1
 802b2d8:	3302      	adds	r3, #2
 802b2da:	6062      	str	r2, [r4, #4]
 802b2dc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b2e0:	f7ff ff9e 	bl	802b220 <__retarget_lock_release_recursive>
 802b2e4:	2000      	movs	r0, #0
 802b2e6:	e7ca      	b.n	802b27e <__register_exitproc+0x3e>
 802b2e8:	200138e0 	.word	0x200138e0
 802b2ec:	20013854 	.word	0x20013854
 802b2f0:	0804325c 	.word	0x0804325c
 802b2f4:	0802ac15 	.word	0x0802ac15
 802b2f8:	20000164 	.word	0x20000164

0802b2fc <_free_r>:
 802b2fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b2fe:	2900      	cmp	r1, #0
 802b300:	d044      	beq.n	802b38c <_free_r+0x90>
 802b302:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b306:	9001      	str	r0, [sp, #4]
 802b308:	2b00      	cmp	r3, #0
 802b30a:	f1a1 0404 	sub.w	r4, r1, #4
 802b30e:	bfb8      	it	lt
 802b310:	18e4      	addlt	r4, r4, r3
 802b312:	f7ff fd2f 	bl	802ad74 <__malloc_lock>
 802b316:	4a1e      	ldr	r2, [pc, #120]	; (802b390 <_free_r+0x94>)
 802b318:	9801      	ldr	r0, [sp, #4]
 802b31a:	6813      	ldr	r3, [r2, #0]
 802b31c:	b933      	cbnz	r3, 802b32c <_free_r+0x30>
 802b31e:	6063      	str	r3, [r4, #4]
 802b320:	6014      	str	r4, [r2, #0]
 802b322:	b003      	add	sp, #12
 802b324:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b328:	f7ff bd2a 	b.w	802ad80 <__malloc_unlock>
 802b32c:	42a3      	cmp	r3, r4
 802b32e:	d908      	bls.n	802b342 <_free_r+0x46>
 802b330:	6825      	ldr	r5, [r4, #0]
 802b332:	1961      	adds	r1, r4, r5
 802b334:	428b      	cmp	r3, r1
 802b336:	bf01      	itttt	eq
 802b338:	6819      	ldreq	r1, [r3, #0]
 802b33a:	685b      	ldreq	r3, [r3, #4]
 802b33c:	1949      	addeq	r1, r1, r5
 802b33e:	6021      	streq	r1, [r4, #0]
 802b340:	e7ed      	b.n	802b31e <_free_r+0x22>
 802b342:	461a      	mov	r2, r3
 802b344:	685b      	ldr	r3, [r3, #4]
 802b346:	b10b      	cbz	r3, 802b34c <_free_r+0x50>
 802b348:	42a3      	cmp	r3, r4
 802b34a:	d9fa      	bls.n	802b342 <_free_r+0x46>
 802b34c:	6811      	ldr	r1, [r2, #0]
 802b34e:	1855      	adds	r5, r2, r1
 802b350:	42a5      	cmp	r5, r4
 802b352:	d10b      	bne.n	802b36c <_free_r+0x70>
 802b354:	6824      	ldr	r4, [r4, #0]
 802b356:	4421      	add	r1, r4
 802b358:	1854      	adds	r4, r2, r1
 802b35a:	42a3      	cmp	r3, r4
 802b35c:	6011      	str	r1, [r2, #0]
 802b35e:	d1e0      	bne.n	802b322 <_free_r+0x26>
 802b360:	681c      	ldr	r4, [r3, #0]
 802b362:	685b      	ldr	r3, [r3, #4]
 802b364:	6053      	str	r3, [r2, #4]
 802b366:	440c      	add	r4, r1
 802b368:	6014      	str	r4, [r2, #0]
 802b36a:	e7da      	b.n	802b322 <_free_r+0x26>
 802b36c:	d902      	bls.n	802b374 <_free_r+0x78>
 802b36e:	230c      	movs	r3, #12
 802b370:	6003      	str	r3, [r0, #0]
 802b372:	e7d6      	b.n	802b322 <_free_r+0x26>
 802b374:	6825      	ldr	r5, [r4, #0]
 802b376:	1961      	adds	r1, r4, r5
 802b378:	428b      	cmp	r3, r1
 802b37a:	bf04      	itt	eq
 802b37c:	6819      	ldreq	r1, [r3, #0]
 802b37e:	685b      	ldreq	r3, [r3, #4]
 802b380:	6063      	str	r3, [r4, #4]
 802b382:	bf04      	itt	eq
 802b384:	1949      	addeq	r1, r1, r5
 802b386:	6021      	streq	r1, [r4, #0]
 802b388:	6054      	str	r4, [r2, #4]
 802b38a:	e7ca      	b.n	802b322 <_free_r+0x26>
 802b38c:	b003      	add	sp, #12
 802b38e:	bd30      	pop	{r4, r5, pc}
 802b390:	20013708 	.word	0x20013708

0802b394 <__sfputc_r>:
 802b394:	6893      	ldr	r3, [r2, #8]
 802b396:	3b01      	subs	r3, #1
 802b398:	2b00      	cmp	r3, #0
 802b39a:	b410      	push	{r4}
 802b39c:	6093      	str	r3, [r2, #8]
 802b39e:	da08      	bge.n	802b3b2 <__sfputc_r+0x1e>
 802b3a0:	6994      	ldr	r4, [r2, #24]
 802b3a2:	42a3      	cmp	r3, r4
 802b3a4:	db01      	blt.n	802b3aa <__sfputc_r+0x16>
 802b3a6:	290a      	cmp	r1, #10
 802b3a8:	d103      	bne.n	802b3b2 <__sfputc_r+0x1e>
 802b3aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b3ae:	f000 bb73 	b.w	802ba98 <__swbuf_r>
 802b3b2:	6813      	ldr	r3, [r2, #0]
 802b3b4:	1c58      	adds	r0, r3, #1
 802b3b6:	6010      	str	r0, [r2, #0]
 802b3b8:	7019      	strb	r1, [r3, #0]
 802b3ba:	4608      	mov	r0, r1
 802b3bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b3c0:	4770      	bx	lr

0802b3c2 <__sfputs_r>:
 802b3c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b3c4:	4606      	mov	r6, r0
 802b3c6:	460f      	mov	r7, r1
 802b3c8:	4614      	mov	r4, r2
 802b3ca:	18d5      	adds	r5, r2, r3
 802b3cc:	42ac      	cmp	r4, r5
 802b3ce:	d101      	bne.n	802b3d4 <__sfputs_r+0x12>
 802b3d0:	2000      	movs	r0, #0
 802b3d2:	e007      	b.n	802b3e4 <__sfputs_r+0x22>
 802b3d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b3d8:	463a      	mov	r2, r7
 802b3da:	4630      	mov	r0, r6
 802b3dc:	f7ff ffda 	bl	802b394 <__sfputc_r>
 802b3e0:	1c43      	adds	r3, r0, #1
 802b3e2:	d1f3      	bne.n	802b3cc <__sfputs_r+0xa>
 802b3e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b3e8 <_vfiprintf_r>:
 802b3e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b3ec:	460d      	mov	r5, r1
 802b3ee:	b09d      	sub	sp, #116	; 0x74
 802b3f0:	4614      	mov	r4, r2
 802b3f2:	4698      	mov	r8, r3
 802b3f4:	4606      	mov	r6, r0
 802b3f6:	b118      	cbz	r0, 802b400 <_vfiprintf_r+0x18>
 802b3f8:	6a03      	ldr	r3, [r0, #32]
 802b3fa:	b90b      	cbnz	r3, 802b400 <_vfiprintf_r+0x18>
 802b3fc:	f7ff fd60 	bl	802aec0 <__sinit>
 802b400:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b402:	07d9      	lsls	r1, r3, #31
 802b404:	d405      	bmi.n	802b412 <_vfiprintf_r+0x2a>
 802b406:	89ab      	ldrh	r3, [r5, #12]
 802b408:	059a      	lsls	r2, r3, #22
 802b40a:	d402      	bmi.n	802b412 <_vfiprintf_r+0x2a>
 802b40c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b40e:	f7ff ff06 	bl	802b21e <__retarget_lock_acquire_recursive>
 802b412:	89ab      	ldrh	r3, [r5, #12]
 802b414:	071b      	lsls	r3, r3, #28
 802b416:	d501      	bpl.n	802b41c <_vfiprintf_r+0x34>
 802b418:	692b      	ldr	r3, [r5, #16]
 802b41a:	b99b      	cbnz	r3, 802b444 <_vfiprintf_r+0x5c>
 802b41c:	4629      	mov	r1, r5
 802b41e:	4630      	mov	r0, r6
 802b420:	f000 fb78 	bl	802bb14 <__swsetup_r>
 802b424:	b170      	cbz	r0, 802b444 <_vfiprintf_r+0x5c>
 802b426:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b428:	07dc      	lsls	r4, r3, #31
 802b42a:	d504      	bpl.n	802b436 <_vfiprintf_r+0x4e>
 802b42c:	f04f 30ff 	mov.w	r0, #4294967295
 802b430:	b01d      	add	sp, #116	; 0x74
 802b432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b436:	89ab      	ldrh	r3, [r5, #12]
 802b438:	0598      	lsls	r0, r3, #22
 802b43a:	d4f7      	bmi.n	802b42c <_vfiprintf_r+0x44>
 802b43c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b43e:	f7ff feef 	bl	802b220 <__retarget_lock_release_recursive>
 802b442:	e7f3      	b.n	802b42c <_vfiprintf_r+0x44>
 802b444:	2300      	movs	r3, #0
 802b446:	9309      	str	r3, [sp, #36]	; 0x24
 802b448:	2320      	movs	r3, #32
 802b44a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b44e:	f8cd 800c 	str.w	r8, [sp, #12]
 802b452:	2330      	movs	r3, #48	; 0x30
 802b454:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b608 <_vfiprintf_r+0x220>
 802b458:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b45c:	f04f 0901 	mov.w	r9, #1
 802b460:	4623      	mov	r3, r4
 802b462:	469a      	mov	sl, r3
 802b464:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b468:	b10a      	cbz	r2, 802b46e <_vfiprintf_r+0x86>
 802b46a:	2a25      	cmp	r2, #37	; 0x25
 802b46c:	d1f9      	bne.n	802b462 <_vfiprintf_r+0x7a>
 802b46e:	ebba 0b04 	subs.w	fp, sl, r4
 802b472:	d00b      	beq.n	802b48c <_vfiprintf_r+0xa4>
 802b474:	465b      	mov	r3, fp
 802b476:	4622      	mov	r2, r4
 802b478:	4629      	mov	r1, r5
 802b47a:	4630      	mov	r0, r6
 802b47c:	f7ff ffa1 	bl	802b3c2 <__sfputs_r>
 802b480:	3001      	adds	r0, #1
 802b482:	f000 80a9 	beq.w	802b5d8 <_vfiprintf_r+0x1f0>
 802b486:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b488:	445a      	add	r2, fp
 802b48a:	9209      	str	r2, [sp, #36]	; 0x24
 802b48c:	f89a 3000 	ldrb.w	r3, [sl]
 802b490:	2b00      	cmp	r3, #0
 802b492:	f000 80a1 	beq.w	802b5d8 <_vfiprintf_r+0x1f0>
 802b496:	2300      	movs	r3, #0
 802b498:	f04f 32ff 	mov.w	r2, #4294967295
 802b49c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b4a0:	f10a 0a01 	add.w	sl, sl, #1
 802b4a4:	9304      	str	r3, [sp, #16]
 802b4a6:	9307      	str	r3, [sp, #28]
 802b4a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b4ac:	931a      	str	r3, [sp, #104]	; 0x68
 802b4ae:	4654      	mov	r4, sl
 802b4b0:	2205      	movs	r2, #5
 802b4b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b4b6:	4854      	ldr	r0, [pc, #336]	; (802b608 <_vfiprintf_r+0x220>)
 802b4b8:	f7d4 fefa 	bl	80002b0 <memchr>
 802b4bc:	9a04      	ldr	r2, [sp, #16]
 802b4be:	b9d8      	cbnz	r0, 802b4f8 <_vfiprintf_r+0x110>
 802b4c0:	06d1      	lsls	r1, r2, #27
 802b4c2:	bf44      	itt	mi
 802b4c4:	2320      	movmi	r3, #32
 802b4c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b4ca:	0713      	lsls	r3, r2, #28
 802b4cc:	bf44      	itt	mi
 802b4ce:	232b      	movmi	r3, #43	; 0x2b
 802b4d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b4d4:	f89a 3000 	ldrb.w	r3, [sl]
 802b4d8:	2b2a      	cmp	r3, #42	; 0x2a
 802b4da:	d015      	beq.n	802b508 <_vfiprintf_r+0x120>
 802b4dc:	9a07      	ldr	r2, [sp, #28]
 802b4de:	4654      	mov	r4, sl
 802b4e0:	2000      	movs	r0, #0
 802b4e2:	f04f 0c0a 	mov.w	ip, #10
 802b4e6:	4621      	mov	r1, r4
 802b4e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b4ec:	3b30      	subs	r3, #48	; 0x30
 802b4ee:	2b09      	cmp	r3, #9
 802b4f0:	d94d      	bls.n	802b58e <_vfiprintf_r+0x1a6>
 802b4f2:	b1b0      	cbz	r0, 802b522 <_vfiprintf_r+0x13a>
 802b4f4:	9207      	str	r2, [sp, #28]
 802b4f6:	e014      	b.n	802b522 <_vfiprintf_r+0x13a>
 802b4f8:	eba0 0308 	sub.w	r3, r0, r8
 802b4fc:	fa09 f303 	lsl.w	r3, r9, r3
 802b500:	4313      	orrs	r3, r2
 802b502:	9304      	str	r3, [sp, #16]
 802b504:	46a2      	mov	sl, r4
 802b506:	e7d2      	b.n	802b4ae <_vfiprintf_r+0xc6>
 802b508:	9b03      	ldr	r3, [sp, #12]
 802b50a:	1d19      	adds	r1, r3, #4
 802b50c:	681b      	ldr	r3, [r3, #0]
 802b50e:	9103      	str	r1, [sp, #12]
 802b510:	2b00      	cmp	r3, #0
 802b512:	bfbb      	ittet	lt
 802b514:	425b      	neglt	r3, r3
 802b516:	f042 0202 	orrlt.w	r2, r2, #2
 802b51a:	9307      	strge	r3, [sp, #28]
 802b51c:	9307      	strlt	r3, [sp, #28]
 802b51e:	bfb8      	it	lt
 802b520:	9204      	strlt	r2, [sp, #16]
 802b522:	7823      	ldrb	r3, [r4, #0]
 802b524:	2b2e      	cmp	r3, #46	; 0x2e
 802b526:	d10c      	bne.n	802b542 <_vfiprintf_r+0x15a>
 802b528:	7863      	ldrb	r3, [r4, #1]
 802b52a:	2b2a      	cmp	r3, #42	; 0x2a
 802b52c:	d134      	bne.n	802b598 <_vfiprintf_r+0x1b0>
 802b52e:	9b03      	ldr	r3, [sp, #12]
 802b530:	1d1a      	adds	r2, r3, #4
 802b532:	681b      	ldr	r3, [r3, #0]
 802b534:	9203      	str	r2, [sp, #12]
 802b536:	2b00      	cmp	r3, #0
 802b538:	bfb8      	it	lt
 802b53a:	f04f 33ff 	movlt.w	r3, #4294967295
 802b53e:	3402      	adds	r4, #2
 802b540:	9305      	str	r3, [sp, #20]
 802b542:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b618 <_vfiprintf_r+0x230>
 802b546:	7821      	ldrb	r1, [r4, #0]
 802b548:	2203      	movs	r2, #3
 802b54a:	4650      	mov	r0, sl
 802b54c:	f7d4 feb0 	bl	80002b0 <memchr>
 802b550:	b138      	cbz	r0, 802b562 <_vfiprintf_r+0x17a>
 802b552:	9b04      	ldr	r3, [sp, #16]
 802b554:	eba0 000a 	sub.w	r0, r0, sl
 802b558:	2240      	movs	r2, #64	; 0x40
 802b55a:	4082      	lsls	r2, r0
 802b55c:	4313      	orrs	r3, r2
 802b55e:	3401      	adds	r4, #1
 802b560:	9304      	str	r3, [sp, #16]
 802b562:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b566:	4829      	ldr	r0, [pc, #164]	; (802b60c <_vfiprintf_r+0x224>)
 802b568:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b56c:	2206      	movs	r2, #6
 802b56e:	f7d4 fe9f 	bl	80002b0 <memchr>
 802b572:	2800      	cmp	r0, #0
 802b574:	d03f      	beq.n	802b5f6 <_vfiprintf_r+0x20e>
 802b576:	4b26      	ldr	r3, [pc, #152]	; (802b610 <_vfiprintf_r+0x228>)
 802b578:	bb1b      	cbnz	r3, 802b5c2 <_vfiprintf_r+0x1da>
 802b57a:	9b03      	ldr	r3, [sp, #12]
 802b57c:	3307      	adds	r3, #7
 802b57e:	f023 0307 	bic.w	r3, r3, #7
 802b582:	3308      	adds	r3, #8
 802b584:	9303      	str	r3, [sp, #12]
 802b586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b588:	443b      	add	r3, r7
 802b58a:	9309      	str	r3, [sp, #36]	; 0x24
 802b58c:	e768      	b.n	802b460 <_vfiprintf_r+0x78>
 802b58e:	fb0c 3202 	mla	r2, ip, r2, r3
 802b592:	460c      	mov	r4, r1
 802b594:	2001      	movs	r0, #1
 802b596:	e7a6      	b.n	802b4e6 <_vfiprintf_r+0xfe>
 802b598:	2300      	movs	r3, #0
 802b59a:	3401      	adds	r4, #1
 802b59c:	9305      	str	r3, [sp, #20]
 802b59e:	4619      	mov	r1, r3
 802b5a0:	f04f 0c0a 	mov.w	ip, #10
 802b5a4:	4620      	mov	r0, r4
 802b5a6:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b5aa:	3a30      	subs	r2, #48	; 0x30
 802b5ac:	2a09      	cmp	r2, #9
 802b5ae:	d903      	bls.n	802b5b8 <_vfiprintf_r+0x1d0>
 802b5b0:	2b00      	cmp	r3, #0
 802b5b2:	d0c6      	beq.n	802b542 <_vfiprintf_r+0x15a>
 802b5b4:	9105      	str	r1, [sp, #20]
 802b5b6:	e7c4      	b.n	802b542 <_vfiprintf_r+0x15a>
 802b5b8:	fb0c 2101 	mla	r1, ip, r1, r2
 802b5bc:	4604      	mov	r4, r0
 802b5be:	2301      	movs	r3, #1
 802b5c0:	e7f0      	b.n	802b5a4 <_vfiprintf_r+0x1bc>
 802b5c2:	ab03      	add	r3, sp, #12
 802b5c4:	9300      	str	r3, [sp, #0]
 802b5c6:	462a      	mov	r2, r5
 802b5c8:	4b12      	ldr	r3, [pc, #72]	; (802b614 <_vfiprintf_r+0x22c>)
 802b5ca:	a904      	add	r1, sp, #16
 802b5cc:	4630      	mov	r0, r6
 802b5ce:	f3af 8000 	nop.w
 802b5d2:	4607      	mov	r7, r0
 802b5d4:	1c78      	adds	r0, r7, #1
 802b5d6:	d1d6      	bne.n	802b586 <_vfiprintf_r+0x19e>
 802b5d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b5da:	07d9      	lsls	r1, r3, #31
 802b5dc:	d405      	bmi.n	802b5ea <_vfiprintf_r+0x202>
 802b5de:	89ab      	ldrh	r3, [r5, #12]
 802b5e0:	059a      	lsls	r2, r3, #22
 802b5e2:	d402      	bmi.n	802b5ea <_vfiprintf_r+0x202>
 802b5e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b5e6:	f7ff fe1b 	bl	802b220 <__retarget_lock_release_recursive>
 802b5ea:	89ab      	ldrh	r3, [r5, #12]
 802b5ec:	065b      	lsls	r3, r3, #25
 802b5ee:	f53f af1d 	bmi.w	802b42c <_vfiprintf_r+0x44>
 802b5f2:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b5f4:	e71c      	b.n	802b430 <_vfiprintf_r+0x48>
 802b5f6:	ab03      	add	r3, sp, #12
 802b5f8:	9300      	str	r3, [sp, #0]
 802b5fa:	462a      	mov	r2, r5
 802b5fc:	4b05      	ldr	r3, [pc, #20]	; (802b614 <_vfiprintf_r+0x22c>)
 802b5fe:	a904      	add	r1, sp, #16
 802b600:	4630      	mov	r0, r6
 802b602:	f000 f879 	bl	802b6f8 <_printf_i>
 802b606:	e7e4      	b.n	802b5d2 <_vfiprintf_r+0x1ea>
 802b608:	08043260 	.word	0x08043260
 802b60c:	0804326a 	.word	0x0804326a
 802b610:	00000000 	.word	0x00000000
 802b614:	0802b3c3 	.word	0x0802b3c3
 802b618:	08043266 	.word	0x08043266

0802b61c <_printf_common>:
 802b61c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b620:	4616      	mov	r6, r2
 802b622:	4699      	mov	r9, r3
 802b624:	688a      	ldr	r2, [r1, #8]
 802b626:	690b      	ldr	r3, [r1, #16]
 802b628:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b62c:	4293      	cmp	r3, r2
 802b62e:	bfb8      	it	lt
 802b630:	4613      	movlt	r3, r2
 802b632:	6033      	str	r3, [r6, #0]
 802b634:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b638:	4607      	mov	r7, r0
 802b63a:	460c      	mov	r4, r1
 802b63c:	b10a      	cbz	r2, 802b642 <_printf_common+0x26>
 802b63e:	3301      	adds	r3, #1
 802b640:	6033      	str	r3, [r6, #0]
 802b642:	6823      	ldr	r3, [r4, #0]
 802b644:	0699      	lsls	r1, r3, #26
 802b646:	bf42      	ittt	mi
 802b648:	6833      	ldrmi	r3, [r6, #0]
 802b64a:	3302      	addmi	r3, #2
 802b64c:	6033      	strmi	r3, [r6, #0]
 802b64e:	6825      	ldr	r5, [r4, #0]
 802b650:	f015 0506 	ands.w	r5, r5, #6
 802b654:	d106      	bne.n	802b664 <_printf_common+0x48>
 802b656:	f104 0a19 	add.w	sl, r4, #25
 802b65a:	68e3      	ldr	r3, [r4, #12]
 802b65c:	6832      	ldr	r2, [r6, #0]
 802b65e:	1a9b      	subs	r3, r3, r2
 802b660:	42ab      	cmp	r3, r5
 802b662:	dc26      	bgt.n	802b6b2 <_printf_common+0x96>
 802b664:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b668:	1e13      	subs	r3, r2, #0
 802b66a:	6822      	ldr	r2, [r4, #0]
 802b66c:	bf18      	it	ne
 802b66e:	2301      	movne	r3, #1
 802b670:	0692      	lsls	r2, r2, #26
 802b672:	d42b      	bmi.n	802b6cc <_printf_common+0xb0>
 802b674:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b678:	4649      	mov	r1, r9
 802b67a:	4638      	mov	r0, r7
 802b67c:	47c0      	blx	r8
 802b67e:	3001      	adds	r0, #1
 802b680:	d01e      	beq.n	802b6c0 <_printf_common+0xa4>
 802b682:	6823      	ldr	r3, [r4, #0]
 802b684:	6922      	ldr	r2, [r4, #16]
 802b686:	f003 0306 	and.w	r3, r3, #6
 802b68a:	2b04      	cmp	r3, #4
 802b68c:	bf02      	ittt	eq
 802b68e:	68e5      	ldreq	r5, [r4, #12]
 802b690:	6833      	ldreq	r3, [r6, #0]
 802b692:	1aed      	subeq	r5, r5, r3
 802b694:	68a3      	ldr	r3, [r4, #8]
 802b696:	bf0c      	ite	eq
 802b698:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b69c:	2500      	movne	r5, #0
 802b69e:	4293      	cmp	r3, r2
 802b6a0:	bfc4      	itt	gt
 802b6a2:	1a9b      	subgt	r3, r3, r2
 802b6a4:	18ed      	addgt	r5, r5, r3
 802b6a6:	2600      	movs	r6, #0
 802b6a8:	341a      	adds	r4, #26
 802b6aa:	42b5      	cmp	r5, r6
 802b6ac:	d11a      	bne.n	802b6e4 <_printf_common+0xc8>
 802b6ae:	2000      	movs	r0, #0
 802b6b0:	e008      	b.n	802b6c4 <_printf_common+0xa8>
 802b6b2:	2301      	movs	r3, #1
 802b6b4:	4652      	mov	r2, sl
 802b6b6:	4649      	mov	r1, r9
 802b6b8:	4638      	mov	r0, r7
 802b6ba:	47c0      	blx	r8
 802b6bc:	3001      	adds	r0, #1
 802b6be:	d103      	bne.n	802b6c8 <_printf_common+0xac>
 802b6c0:	f04f 30ff 	mov.w	r0, #4294967295
 802b6c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b6c8:	3501      	adds	r5, #1
 802b6ca:	e7c6      	b.n	802b65a <_printf_common+0x3e>
 802b6cc:	18e1      	adds	r1, r4, r3
 802b6ce:	1c5a      	adds	r2, r3, #1
 802b6d0:	2030      	movs	r0, #48	; 0x30
 802b6d2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b6d6:	4422      	add	r2, r4
 802b6d8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b6dc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b6e0:	3302      	adds	r3, #2
 802b6e2:	e7c7      	b.n	802b674 <_printf_common+0x58>
 802b6e4:	2301      	movs	r3, #1
 802b6e6:	4622      	mov	r2, r4
 802b6e8:	4649      	mov	r1, r9
 802b6ea:	4638      	mov	r0, r7
 802b6ec:	47c0      	blx	r8
 802b6ee:	3001      	adds	r0, #1
 802b6f0:	d0e6      	beq.n	802b6c0 <_printf_common+0xa4>
 802b6f2:	3601      	adds	r6, #1
 802b6f4:	e7d9      	b.n	802b6aa <_printf_common+0x8e>
	...

0802b6f8 <_printf_i>:
 802b6f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b6fc:	7e0f      	ldrb	r7, [r1, #24]
 802b6fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b700:	2f78      	cmp	r7, #120	; 0x78
 802b702:	4691      	mov	r9, r2
 802b704:	4680      	mov	r8, r0
 802b706:	460c      	mov	r4, r1
 802b708:	469a      	mov	sl, r3
 802b70a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b70e:	d807      	bhi.n	802b720 <_printf_i+0x28>
 802b710:	2f62      	cmp	r7, #98	; 0x62
 802b712:	d80a      	bhi.n	802b72a <_printf_i+0x32>
 802b714:	2f00      	cmp	r7, #0
 802b716:	f000 80d4 	beq.w	802b8c2 <_printf_i+0x1ca>
 802b71a:	2f58      	cmp	r7, #88	; 0x58
 802b71c:	f000 80c0 	beq.w	802b8a0 <_printf_i+0x1a8>
 802b720:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b724:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b728:	e03a      	b.n	802b7a0 <_printf_i+0xa8>
 802b72a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b72e:	2b15      	cmp	r3, #21
 802b730:	d8f6      	bhi.n	802b720 <_printf_i+0x28>
 802b732:	a101      	add	r1, pc, #4	; (adr r1, 802b738 <_printf_i+0x40>)
 802b734:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b738:	0802b791 	.word	0x0802b791
 802b73c:	0802b7a5 	.word	0x0802b7a5
 802b740:	0802b721 	.word	0x0802b721
 802b744:	0802b721 	.word	0x0802b721
 802b748:	0802b721 	.word	0x0802b721
 802b74c:	0802b721 	.word	0x0802b721
 802b750:	0802b7a5 	.word	0x0802b7a5
 802b754:	0802b721 	.word	0x0802b721
 802b758:	0802b721 	.word	0x0802b721
 802b75c:	0802b721 	.word	0x0802b721
 802b760:	0802b721 	.word	0x0802b721
 802b764:	0802b8a9 	.word	0x0802b8a9
 802b768:	0802b7d1 	.word	0x0802b7d1
 802b76c:	0802b863 	.word	0x0802b863
 802b770:	0802b721 	.word	0x0802b721
 802b774:	0802b721 	.word	0x0802b721
 802b778:	0802b8cb 	.word	0x0802b8cb
 802b77c:	0802b721 	.word	0x0802b721
 802b780:	0802b7d1 	.word	0x0802b7d1
 802b784:	0802b721 	.word	0x0802b721
 802b788:	0802b721 	.word	0x0802b721
 802b78c:	0802b86b 	.word	0x0802b86b
 802b790:	682b      	ldr	r3, [r5, #0]
 802b792:	1d1a      	adds	r2, r3, #4
 802b794:	681b      	ldr	r3, [r3, #0]
 802b796:	602a      	str	r2, [r5, #0]
 802b798:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b79c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b7a0:	2301      	movs	r3, #1
 802b7a2:	e09f      	b.n	802b8e4 <_printf_i+0x1ec>
 802b7a4:	6820      	ldr	r0, [r4, #0]
 802b7a6:	682b      	ldr	r3, [r5, #0]
 802b7a8:	0607      	lsls	r7, r0, #24
 802b7aa:	f103 0104 	add.w	r1, r3, #4
 802b7ae:	6029      	str	r1, [r5, #0]
 802b7b0:	d501      	bpl.n	802b7b6 <_printf_i+0xbe>
 802b7b2:	681e      	ldr	r6, [r3, #0]
 802b7b4:	e003      	b.n	802b7be <_printf_i+0xc6>
 802b7b6:	0646      	lsls	r6, r0, #25
 802b7b8:	d5fb      	bpl.n	802b7b2 <_printf_i+0xba>
 802b7ba:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b7be:	2e00      	cmp	r6, #0
 802b7c0:	da03      	bge.n	802b7ca <_printf_i+0xd2>
 802b7c2:	232d      	movs	r3, #45	; 0x2d
 802b7c4:	4276      	negs	r6, r6
 802b7c6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b7ca:	485a      	ldr	r0, [pc, #360]	; (802b934 <_printf_i+0x23c>)
 802b7cc:	230a      	movs	r3, #10
 802b7ce:	e012      	b.n	802b7f6 <_printf_i+0xfe>
 802b7d0:	682b      	ldr	r3, [r5, #0]
 802b7d2:	6820      	ldr	r0, [r4, #0]
 802b7d4:	1d19      	adds	r1, r3, #4
 802b7d6:	6029      	str	r1, [r5, #0]
 802b7d8:	0605      	lsls	r5, r0, #24
 802b7da:	d501      	bpl.n	802b7e0 <_printf_i+0xe8>
 802b7dc:	681e      	ldr	r6, [r3, #0]
 802b7de:	e002      	b.n	802b7e6 <_printf_i+0xee>
 802b7e0:	0641      	lsls	r1, r0, #25
 802b7e2:	d5fb      	bpl.n	802b7dc <_printf_i+0xe4>
 802b7e4:	881e      	ldrh	r6, [r3, #0]
 802b7e6:	4853      	ldr	r0, [pc, #332]	; (802b934 <_printf_i+0x23c>)
 802b7e8:	2f6f      	cmp	r7, #111	; 0x6f
 802b7ea:	bf0c      	ite	eq
 802b7ec:	2308      	moveq	r3, #8
 802b7ee:	230a      	movne	r3, #10
 802b7f0:	2100      	movs	r1, #0
 802b7f2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b7f6:	6865      	ldr	r5, [r4, #4]
 802b7f8:	60a5      	str	r5, [r4, #8]
 802b7fa:	2d00      	cmp	r5, #0
 802b7fc:	bfa2      	ittt	ge
 802b7fe:	6821      	ldrge	r1, [r4, #0]
 802b800:	f021 0104 	bicge.w	r1, r1, #4
 802b804:	6021      	strge	r1, [r4, #0]
 802b806:	b90e      	cbnz	r6, 802b80c <_printf_i+0x114>
 802b808:	2d00      	cmp	r5, #0
 802b80a:	d04b      	beq.n	802b8a4 <_printf_i+0x1ac>
 802b80c:	4615      	mov	r5, r2
 802b80e:	fbb6 f1f3 	udiv	r1, r6, r3
 802b812:	fb03 6711 	mls	r7, r3, r1, r6
 802b816:	5dc7      	ldrb	r7, [r0, r7]
 802b818:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b81c:	4637      	mov	r7, r6
 802b81e:	42bb      	cmp	r3, r7
 802b820:	460e      	mov	r6, r1
 802b822:	d9f4      	bls.n	802b80e <_printf_i+0x116>
 802b824:	2b08      	cmp	r3, #8
 802b826:	d10b      	bne.n	802b840 <_printf_i+0x148>
 802b828:	6823      	ldr	r3, [r4, #0]
 802b82a:	07de      	lsls	r6, r3, #31
 802b82c:	d508      	bpl.n	802b840 <_printf_i+0x148>
 802b82e:	6923      	ldr	r3, [r4, #16]
 802b830:	6861      	ldr	r1, [r4, #4]
 802b832:	4299      	cmp	r1, r3
 802b834:	bfde      	ittt	le
 802b836:	2330      	movle	r3, #48	; 0x30
 802b838:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b83c:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b840:	1b52      	subs	r2, r2, r5
 802b842:	6122      	str	r2, [r4, #16]
 802b844:	f8cd a000 	str.w	sl, [sp]
 802b848:	464b      	mov	r3, r9
 802b84a:	aa03      	add	r2, sp, #12
 802b84c:	4621      	mov	r1, r4
 802b84e:	4640      	mov	r0, r8
 802b850:	f7ff fee4 	bl	802b61c <_printf_common>
 802b854:	3001      	adds	r0, #1
 802b856:	d14a      	bne.n	802b8ee <_printf_i+0x1f6>
 802b858:	f04f 30ff 	mov.w	r0, #4294967295
 802b85c:	b004      	add	sp, #16
 802b85e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b862:	6823      	ldr	r3, [r4, #0]
 802b864:	f043 0320 	orr.w	r3, r3, #32
 802b868:	6023      	str	r3, [r4, #0]
 802b86a:	4833      	ldr	r0, [pc, #204]	; (802b938 <_printf_i+0x240>)
 802b86c:	2778      	movs	r7, #120	; 0x78
 802b86e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b872:	6823      	ldr	r3, [r4, #0]
 802b874:	6829      	ldr	r1, [r5, #0]
 802b876:	061f      	lsls	r7, r3, #24
 802b878:	f851 6b04 	ldr.w	r6, [r1], #4
 802b87c:	d402      	bmi.n	802b884 <_printf_i+0x18c>
 802b87e:	065f      	lsls	r7, r3, #25
 802b880:	bf48      	it	mi
 802b882:	b2b6      	uxthmi	r6, r6
 802b884:	07df      	lsls	r7, r3, #31
 802b886:	bf48      	it	mi
 802b888:	f043 0320 	orrmi.w	r3, r3, #32
 802b88c:	6029      	str	r1, [r5, #0]
 802b88e:	bf48      	it	mi
 802b890:	6023      	strmi	r3, [r4, #0]
 802b892:	b91e      	cbnz	r6, 802b89c <_printf_i+0x1a4>
 802b894:	6823      	ldr	r3, [r4, #0]
 802b896:	f023 0320 	bic.w	r3, r3, #32
 802b89a:	6023      	str	r3, [r4, #0]
 802b89c:	2310      	movs	r3, #16
 802b89e:	e7a7      	b.n	802b7f0 <_printf_i+0xf8>
 802b8a0:	4824      	ldr	r0, [pc, #144]	; (802b934 <_printf_i+0x23c>)
 802b8a2:	e7e4      	b.n	802b86e <_printf_i+0x176>
 802b8a4:	4615      	mov	r5, r2
 802b8a6:	e7bd      	b.n	802b824 <_printf_i+0x12c>
 802b8a8:	682b      	ldr	r3, [r5, #0]
 802b8aa:	6826      	ldr	r6, [r4, #0]
 802b8ac:	6961      	ldr	r1, [r4, #20]
 802b8ae:	1d18      	adds	r0, r3, #4
 802b8b0:	6028      	str	r0, [r5, #0]
 802b8b2:	0635      	lsls	r5, r6, #24
 802b8b4:	681b      	ldr	r3, [r3, #0]
 802b8b6:	d501      	bpl.n	802b8bc <_printf_i+0x1c4>
 802b8b8:	6019      	str	r1, [r3, #0]
 802b8ba:	e002      	b.n	802b8c2 <_printf_i+0x1ca>
 802b8bc:	0670      	lsls	r0, r6, #25
 802b8be:	d5fb      	bpl.n	802b8b8 <_printf_i+0x1c0>
 802b8c0:	8019      	strh	r1, [r3, #0]
 802b8c2:	2300      	movs	r3, #0
 802b8c4:	6123      	str	r3, [r4, #16]
 802b8c6:	4615      	mov	r5, r2
 802b8c8:	e7bc      	b.n	802b844 <_printf_i+0x14c>
 802b8ca:	682b      	ldr	r3, [r5, #0]
 802b8cc:	1d1a      	adds	r2, r3, #4
 802b8ce:	602a      	str	r2, [r5, #0]
 802b8d0:	681d      	ldr	r5, [r3, #0]
 802b8d2:	6862      	ldr	r2, [r4, #4]
 802b8d4:	2100      	movs	r1, #0
 802b8d6:	4628      	mov	r0, r5
 802b8d8:	f7d4 fcea 	bl	80002b0 <memchr>
 802b8dc:	b108      	cbz	r0, 802b8e2 <_printf_i+0x1ea>
 802b8de:	1b40      	subs	r0, r0, r5
 802b8e0:	6060      	str	r0, [r4, #4]
 802b8e2:	6863      	ldr	r3, [r4, #4]
 802b8e4:	6123      	str	r3, [r4, #16]
 802b8e6:	2300      	movs	r3, #0
 802b8e8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b8ec:	e7aa      	b.n	802b844 <_printf_i+0x14c>
 802b8ee:	6923      	ldr	r3, [r4, #16]
 802b8f0:	462a      	mov	r2, r5
 802b8f2:	4649      	mov	r1, r9
 802b8f4:	4640      	mov	r0, r8
 802b8f6:	47d0      	blx	sl
 802b8f8:	3001      	adds	r0, #1
 802b8fa:	d0ad      	beq.n	802b858 <_printf_i+0x160>
 802b8fc:	6823      	ldr	r3, [r4, #0]
 802b8fe:	079b      	lsls	r3, r3, #30
 802b900:	d413      	bmi.n	802b92a <_printf_i+0x232>
 802b902:	68e0      	ldr	r0, [r4, #12]
 802b904:	9b03      	ldr	r3, [sp, #12]
 802b906:	4298      	cmp	r0, r3
 802b908:	bfb8      	it	lt
 802b90a:	4618      	movlt	r0, r3
 802b90c:	e7a6      	b.n	802b85c <_printf_i+0x164>
 802b90e:	2301      	movs	r3, #1
 802b910:	4632      	mov	r2, r6
 802b912:	4649      	mov	r1, r9
 802b914:	4640      	mov	r0, r8
 802b916:	47d0      	blx	sl
 802b918:	3001      	adds	r0, #1
 802b91a:	d09d      	beq.n	802b858 <_printf_i+0x160>
 802b91c:	3501      	adds	r5, #1
 802b91e:	68e3      	ldr	r3, [r4, #12]
 802b920:	9903      	ldr	r1, [sp, #12]
 802b922:	1a5b      	subs	r3, r3, r1
 802b924:	42ab      	cmp	r3, r5
 802b926:	dcf2      	bgt.n	802b90e <_printf_i+0x216>
 802b928:	e7eb      	b.n	802b902 <_printf_i+0x20a>
 802b92a:	2500      	movs	r5, #0
 802b92c:	f104 0619 	add.w	r6, r4, #25
 802b930:	e7f5      	b.n	802b91e <_printf_i+0x226>
 802b932:	bf00      	nop
 802b934:	08043271 	.word	0x08043271
 802b938:	08043282 	.word	0x08043282

0802b93c <__sflush_r>:
 802b93c:	898a      	ldrh	r2, [r1, #12]
 802b93e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b942:	4605      	mov	r5, r0
 802b944:	0710      	lsls	r0, r2, #28
 802b946:	460c      	mov	r4, r1
 802b948:	d458      	bmi.n	802b9fc <__sflush_r+0xc0>
 802b94a:	684b      	ldr	r3, [r1, #4]
 802b94c:	2b00      	cmp	r3, #0
 802b94e:	dc05      	bgt.n	802b95c <__sflush_r+0x20>
 802b950:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802b952:	2b00      	cmp	r3, #0
 802b954:	dc02      	bgt.n	802b95c <__sflush_r+0x20>
 802b956:	2000      	movs	r0, #0
 802b958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b95c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b95e:	2e00      	cmp	r6, #0
 802b960:	d0f9      	beq.n	802b956 <__sflush_r+0x1a>
 802b962:	2300      	movs	r3, #0
 802b964:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802b968:	682f      	ldr	r7, [r5, #0]
 802b96a:	6a21      	ldr	r1, [r4, #32]
 802b96c:	602b      	str	r3, [r5, #0]
 802b96e:	d032      	beq.n	802b9d6 <__sflush_r+0x9a>
 802b970:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802b972:	89a3      	ldrh	r3, [r4, #12]
 802b974:	075a      	lsls	r2, r3, #29
 802b976:	d505      	bpl.n	802b984 <__sflush_r+0x48>
 802b978:	6863      	ldr	r3, [r4, #4]
 802b97a:	1ac0      	subs	r0, r0, r3
 802b97c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802b97e:	b10b      	cbz	r3, 802b984 <__sflush_r+0x48>
 802b980:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b982:	1ac0      	subs	r0, r0, r3
 802b984:	2300      	movs	r3, #0
 802b986:	4602      	mov	r2, r0
 802b988:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b98a:	6a21      	ldr	r1, [r4, #32]
 802b98c:	4628      	mov	r0, r5
 802b98e:	47b0      	blx	r6
 802b990:	1c43      	adds	r3, r0, #1
 802b992:	89a3      	ldrh	r3, [r4, #12]
 802b994:	d106      	bne.n	802b9a4 <__sflush_r+0x68>
 802b996:	6829      	ldr	r1, [r5, #0]
 802b998:	291d      	cmp	r1, #29
 802b99a:	d82b      	bhi.n	802b9f4 <__sflush_r+0xb8>
 802b99c:	4a29      	ldr	r2, [pc, #164]	; (802ba44 <__sflush_r+0x108>)
 802b99e:	410a      	asrs	r2, r1
 802b9a0:	07d6      	lsls	r6, r2, #31
 802b9a2:	d427      	bmi.n	802b9f4 <__sflush_r+0xb8>
 802b9a4:	2200      	movs	r2, #0
 802b9a6:	6062      	str	r2, [r4, #4]
 802b9a8:	04d9      	lsls	r1, r3, #19
 802b9aa:	6922      	ldr	r2, [r4, #16]
 802b9ac:	6022      	str	r2, [r4, #0]
 802b9ae:	d504      	bpl.n	802b9ba <__sflush_r+0x7e>
 802b9b0:	1c42      	adds	r2, r0, #1
 802b9b2:	d101      	bne.n	802b9b8 <__sflush_r+0x7c>
 802b9b4:	682b      	ldr	r3, [r5, #0]
 802b9b6:	b903      	cbnz	r3, 802b9ba <__sflush_r+0x7e>
 802b9b8:	6560      	str	r0, [r4, #84]	; 0x54
 802b9ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b9bc:	602f      	str	r7, [r5, #0]
 802b9be:	2900      	cmp	r1, #0
 802b9c0:	d0c9      	beq.n	802b956 <__sflush_r+0x1a>
 802b9c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b9c6:	4299      	cmp	r1, r3
 802b9c8:	d002      	beq.n	802b9d0 <__sflush_r+0x94>
 802b9ca:	4628      	mov	r0, r5
 802b9cc:	f7ff fc96 	bl	802b2fc <_free_r>
 802b9d0:	2000      	movs	r0, #0
 802b9d2:	6360      	str	r0, [r4, #52]	; 0x34
 802b9d4:	e7c0      	b.n	802b958 <__sflush_r+0x1c>
 802b9d6:	2301      	movs	r3, #1
 802b9d8:	4628      	mov	r0, r5
 802b9da:	47b0      	blx	r6
 802b9dc:	1c41      	adds	r1, r0, #1
 802b9de:	d1c8      	bne.n	802b972 <__sflush_r+0x36>
 802b9e0:	682b      	ldr	r3, [r5, #0]
 802b9e2:	2b00      	cmp	r3, #0
 802b9e4:	d0c5      	beq.n	802b972 <__sflush_r+0x36>
 802b9e6:	2b1d      	cmp	r3, #29
 802b9e8:	d001      	beq.n	802b9ee <__sflush_r+0xb2>
 802b9ea:	2b16      	cmp	r3, #22
 802b9ec:	d101      	bne.n	802b9f2 <__sflush_r+0xb6>
 802b9ee:	602f      	str	r7, [r5, #0]
 802b9f0:	e7b1      	b.n	802b956 <__sflush_r+0x1a>
 802b9f2:	89a3      	ldrh	r3, [r4, #12]
 802b9f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b9f8:	81a3      	strh	r3, [r4, #12]
 802b9fa:	e7ad      	b.n	802b958 <__sflush_r+0x1c>
 802b9fc:	690f      	ldr	r7, [r1, #16]
 802b9fe:	2f00      	cmp	r7, #0
 802ba00:	d0a9      	beq.n	802b956 <__sflush_r+0x1a>
 802ba02:	0793      	lsls	r3, r2, #30
 802ba04:	680e      	ldr	r6, [r1, #0]
 802ba06:	bf08      	it	eq
 802ba08:	694b      	ldreq	r3, [r1, #20]
 802ba0a:	600f      	str	r7, [r1, #0]
 802ba0c:	bf18      	it	ne
 802ba0e:	2300      	movne	r3, #0
 802ba10:	eba6 0807 	sub.w	r8, r6, r7
 802ba14:	608b      	str	r3, [r1, #8]
 802ba16:	f1b8 0f00 	cmp.w	r8, #0
 802ba1a:	dd9c      	ble.n	802b956 <__sflush_r+0x1a>
 802ba1c:	6a21      	ldr	r1, [r4, #32]
 802ba1e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802ba20:	4643      	mov	r3, r8
 802ba22:	463a      	mov	r2, r7
 802ba24:	4628      	mov	r0, r5
 802ba26:	47b0      	blx	r6
 802ba28:	2800      	cmp	r0, #0
 802ba2a:	dc06      	bgt.n	802ba3a <__sflush_r+0xfe>
 802ba2c:	89a3      	ldrh	r3, [r4, #12]
 802ba2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802ba32:	81a3      	strh	r3, [r4, #12]
 802ba34:	f04f 30ff 	mov.w	r0, #4294967295
 802ba38:	e78e      	b.n	802b958 <__sflush_r+0x1c>
 802ba3a:	4407      	add	r7, r0
 802ba3c:	eba8 0800 	sub.w	r8, r8, r0
 802ba40:	e7e9      	b.n	802ba16 <__sflush_r+0xda>
 802ba42:	bf00      	nop
 802ba44:	dfbffffe 	.word	0xdfbffffe

0802ba48 <_fflush_r>:
 802ba48:	b538      	push	{r3, r4, r5, lr}
 802ba4a:	690b      	ldr	r3, [r1, #16]
 802ba4c:	4605      	mov	r5, r0
 802ba4e:	460c      	mov	r4, r1
 802ba50:	b913      	cbnz	r3, 802ba58 <_fflush_r+0x10>
 802ba52:	2500      	movs	r5, #0
 802ba54:	4628      	mov	r0, r5
 802ba56:	bd38      	pop	{r3, r4, r5, pc}
 802ba58:	b118      	cbz	r0, 802ba62 <_fflush_r+0x1a>
 802ba5a:	6a03      	ldr	r3, [r0, #32]
 802ba5c:	b90b      	cbnz	r3, 802ba62 <_fflush_r+0x1a>
 802ba5e:	f7ff fa2f 	bl	802aec0 <__sinit>
 802ba62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ba66:	2b00      	cmp	r3, #0
 802ba68:	d0f3      	beq.n	802ba52 <_fflush_r+0xa>
 802ba6a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ba6c:	07d0      	lsls	r0, r2, #31
 802ba6e:	d404      	bmi.n	802ba7a <_fflush_r+0x32>
 802ba70:	0599      	lsls	r1, r3, #22
 802ba72:	d402      	bmi.n	802ba7a <_fflush_r+0x32>
 802ba74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ba76:	f7ff fbd2 	bl	802b21e <__retarget_lock_acquire_recursive>
 802ba7a:	4628      	mov	r0, r5
 802ba7c:	4621      	mov	r1, r4
 802ba7e:	f7ff ff5d 	bl	802b93c <__sflush_r>
 802ba82:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ba84:	07da      	lsls	r2, r3, #31
 802ba86:	4605      	mov	r5, r0
 802ba88:	d4e4      	bmi.n	802ba54 <_fflush_r+0xc>
 802ba8a:	89a3      	ldrh	r3, [r4, #12]
 802ba8c:	059b      	lsls	r3, r3, #22
 802ba8e:	d4e1      	bmi.n	802ba54 <_fflush_r+0xc>
 802ba90:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ba92:	f7ff fbc5 	bl	802b220 <__retarget_lock_release_recursive>
 802ba96:	e7dd      	b.n	802ba54 <_fflush_r+0xc>

0802ba98 <__swbuf_r>:
 802ba98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ba9a:	460e      	mov	r6, r1
 802ba9c:	4614      	mov	r4, r2
 802ba9e:	4605      	mov	r5, r0
 802baa0:	b118      	cbz	r0, 802baaa <__swbuf_r+0x12>
 802baa2:	6a03      	ldr	r3, [r0, #32]
 802baa4:	b90b      	cbnz	r3, 802baaa <__swbuf_r+0x12>
 802baa6:	f7ff fa0b 	bl	802aec0 <__sinit>
 802baaa:	69a3      	ldr	r3, [r4, #24]
 802baac:	60a3      	str	r3, [r4, #8]
 802baae:	89a3      	ldrh	r3, [r4, #12]
 802bab0:	071a      	lsls	r2, r3, #28
 802bab2:	d525      	bpl.n	802bb00 <__swbuf_r+0x68>
 802bab4:	6923      	ldr	r3, [r4, #16]
 802bab6:	b31b      	cbz	r3, 802bb00 <__swbuf_r+0x68>
 802bab8:	6823      	ldr	r3, [r4, #0]
 802baba:	6922      	ldr	r2, [r4, #16]
 802babc:	1a98      	subs	r0, r3, r2
 802babe:	6963      	ldr	r3, [r4, #20]
 802bac0:	b2f6      	uxtb	r6, r6
 802bac2:	4283      	cmp	r3, r0
 802bac4:	4637      	mov	r7, r6
 802bac6:	dc04      	bgt.n	802bad2 <__swbuf_r+0x3a>
 802bac8:	4621      	mov	r1, r4
 802baca:	4628      	mov	r0, r5
 802bacc:	f7ff ffbc 	bl	802ba48 <_fflush_r>
 802bad0:	b9e0      	cbnz	r0, 802bb0c <__swbuf_r+0x74>
 802bad2:	68a3      	ldr	r3, [r4, #8]
 802bad4:	3b01      	subs	r3, #1
 802bad6:	60a3      	str	r3, [r4, #8]
 802bad8:	6823      	ldr	r3, [r4, #0]
 802bada:	1c5a      	adds	r2, r3, #1
 802badc:	6022      	str	r2, [r4, #0]
 802bade:	701e      	strb	r6, [r3, #0]
 802bae0:	6962      	ldr	r2, [r4, #20]
 802bae2:	1c43      	adds	r3, r0, #1
 802bae4:	429a      	cmp	r2, r3
 802bae6:	d004      	beq.n	802baf2 <__swbuf_r+0x5a>
 802bae8:	89a3      	ldrh	r3, [r4, #12]
 802baea:	07db      	lsls	r3, r3, #31
 802baec:	d506      	bpl.n	802bafc <__swbuf_r+0x64>
 802baee:	2e0a      	cmp	r6, #10
 802baf0:	d104      	bne.n	802bafc <__swbuf_r+0x64>
 802baf2:	4621      	mov	r1, r4
 802baf4:	4628      	mov	r0, r5
 802baf6:	f7ff ffa7 	bl	802ba48 <_fflush_r>
 802bafa:	b938      	cbnz	r0, 802bb0c <__swbuf_r+0x74>
 802bafc:	4638      	mov	r0, r7
 802bafe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802bb00:	4621      	mov	r1, r4
 802bb02:	4628      	mov	r0, r5
 802bb04:	f000 f806 	bl	802bb14 <__swsetup_r>
 802bb08:	2800      	cmp	r0, #0
 802bb0a:	d0d5      	beq.n	802bab8 <__swbuf_r+0x20>
 802bb0c:	f04f 37ff 	mov.w	r7, #4294967295
 802bb10:	e7f4      	b.n	802bafc <__swbuf_r+0x64>
	...

0802bb14 <__swsetup_r>:
 802bb14:	b538      	push	{r3, r4, r5, lr}
 802bb16:	4b2a      	ldr	r3, [pc, #168]	; (802bbc0 <__swsetup_r+0xac>)
 802bb18:	4605      	mov	r5, r0
 802bb1a:	6818      	ldr	r0, [r3, #0]
 802bb1c:	460c      	mov	r4, r1
 802bb1e:	b118      	cbz	r0, 802bb28 <__swsetup_r+0x14>
 802bb20:	6a03      	ldr	r3, [r0, #32]
 802bb22:	b90b      	cbnz	r3, 802bb28 <__swsetup_r+0x14>
 802bb24:	f7ff f9cc 	bl	802aec0 <__sinit>
 802bb28:	89a3      	ldrh	r3, [r4, #12]
 802bb2a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bb2e:	0718      	lsls	r0, r3, #28
 802bb30:	d422      	bmi.n	802bb78 <__swsetup_r+0x64>
 802bb32:	06d9      	lsls	r1, r3, #27
 802bb34:	d407      	bmi.n	802bb46 <__swsetup_r+0x32>
 802bb36:	2309      	movs	r3, #9
 802bb38:	602b      	str	r3, [r5, #0]
 802bb3a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802bb3e:	81a3      	strh	r3, [r4, #12]
 802bb40:	f04f 30ff 	mov.w	r0, #4294967295
 802bb44:	e034      	b.n	802bbb0 <__swsetup_r+0x9c>
 802bb46:	0758      	lsls	r0, r3, #29
 802bb48:	d512      	bpl.n	802bb70 <__swsetup_r+0x5c>
 802bb4a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bb4c:	b141      	cbz	r1, 802bb60 <__swsetup_r+0x4c>
 802bb4e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bb52:	4299      	cmp	r1, r3
 802bb54:	d002      	beq.n	802bb5c <__swsetup_r+0x48>
 802bb56:	4628      	mov	r0, r5
 802bb58:	f7ff fbd0 	bl	802b2fc <_free_r>
 802bb5c:	2300      	movs	r3, #0
 802bb5e:	6363      	str	r3, [r4, #52]	; 0x34
 802bb60:	89a3      	ldrh	r3, [r4, #12]
 802bb62:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802bb66:	81a3      	strh	r3, [r4, #12]
 802bb68:	2300      	movs	r3, #0
 802bb6a:	6063      	str	r3, [r4, #4]
 802bb6c:	6923      	ldr	r3, [r4, #16]
 802bb6e:	6023      	str	r3, [r4, #0]
 802bb70:	89a3      	ldrh	r3, [r4, #12]
 802bb72:	f043 0308 	orr.w	r3, r3, #8
 802bb76:	81a3      	strh	r3, [r4, #12]
 802bb78:	6923      	ldr	r3, [r4, #16]
 802bb7a:	b94b      	cbnz	r3, 802bb90 <__swsetup_r+0x7c>
 802bb7c:	89a3      	ldrh	r3, [r4, #12]
 802bb7e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802bb82:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bb86:	d003      	beq.n	802bb90 <__swsetup_r+0x7c>
 802bb88:	4621      	mov	r1, r4
 802bb8a:	4628      	mov	r0, r5
 802bb8c:	f000 f840 	bl	802bc10 <__smakebuf_r>
 802bb90:	89a0      	ldrh	r0, [r4, #12]
 802bb92:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bb96:	f010 0301 	ands.w	r3, r0, #1
 802bb9a:	d00a      	beq.n	802bbb2 <__swsetup_r+0x9e>
 802bb9c:	2300      	movs	r3, #0
 802bb9e:	60a3      	str	r3, [r4, #8]
 802bba0:	6963      	ldr	r3, [r4, #20]
 802bba2:	425b      	negs	r3, r3
 802bba4:	61a3      	str	r3, [r4, #24]
 802bba6:	6923      	ldr	r3, [r4, #16]
 802bba8:	b943      	cbnz	r3, 802bbbc <__swsetup_r+0xa8>
 802bbaa:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802bbae:	d1c4      	bne.n	802bb3a <__swsetup_r+0x26>
 802bbb0:	bd38      	pop	{r3, r4, r5, pc}
 802bbb2:	0781      	lsls	r1, r0, #30
 802bbb4:	bf58      	it	pl
 802bbb6:	6963      	ldrpl	r3, [r4, #20]
 802bbb8:	60a3      	str	r3, [r4, #8]
 802bbba:	e7f4      	b.n	802bba6 <__swsetup_r+0x92>
 802bbbc:	2000      	movs	r0, #0
 802bbbe:	e7f7      	b.n	802bbb0 <__swsetup_r+0x9c>
 802bbc0:	20000160 	.word	0x20000160

0802bbc4 <__swhatbuf_r>:
 802bbc4:	b570      	push	{r4, r5, r6, lr}
 802bbc6:	460c      	mov	r4, r1
 802bbc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bbcc:	2900      	cmp	r1, #0
 802bbce:	b096      	sub	sp, #88	; 0x58
 802bbd0:	4615      	mov	r5, r2
 802bbd2:	461e      	mov	r6, r3
 802bbd4:	da0d      	bge.n	802bbf2 <__swhatbuf_r+0x2e>
 802bbd6:	89a3      	ldrh	r3, [r4, #12]
 802bbd8:	f013 0f80 	tst.w	r3, #128	; 0x80
 802bbdc:	f04f 0100 	mov.w	r1, #0
 802bbe0:	bf0c      	ite	eq
 802bbe2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bbe6:	2340      	movne	r3, #64	; 0x40
 802bbe8:	2000      	movs	r0, #0
 802bbea:	6031      	str	r1, [r6, #0]
 802bbec:	602b      	str	r3, [r5, #0]
 802bbee:	b016      	add	sp, #88	; 0x58
 802bbf0:	bd70      	pop	{r4, r5, r6, pc}
 802bbf2:	466a      	mov	r2, sp
 802bbf4:	f000 f848 	bl	802bc88 <_fstat_r>
 802bbf8:	2800      	cmp	r0, #0
 802bbfa:	dbec      	blt.n	802bbd6 <__swhatbuf_r+0x12>
 802bbfc:	9901      	ldr	r1, [sp, #4]
 802bbfe:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802bc02:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bc06:	4259      	negs	r1, r3
 802bc08:	4159      	adcs	r1, r3
 802bc0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802bc0e:	e7eb      	b.n	802bbe8 <__swhatbuf_r+0x24>

0802bc10 <__smakebuf_r>:
 802bc10:	898b      	ldrh	r3, [r1, #12]
 802bc12:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bc14:	079d      	lsls	r5, r3, #30
 802bc16:	4606      	mov	r6, r0
 802bc18:	460c      	mov	r4, r1
 802bc1a:	d507      	bpl.n	802bc2c <__smakebuf_r+0x1c>
 802bc1c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bc20:	6023      	str	r3, [r4, #0]
 802bc22:	6123      	str	r3, [r4, #16]
 802bc24:	2301      	movs	r3, #1
 802bc26:	6163      	str	r3, [r4, #20]
 802bc28:	b002      	add	sp, #8
 802bc2a:	bd70      	pop	{r4, r5, r6, pc}
 802bc2c:	ab01      	add	r3, sp, #4
 802bc2e:	466a      	mov	r2, sp
 802bc30:	f7ff ffc8 	bl	802bbc4 <__swhatbuf_r>
 802bc34:	9900      	ldr	r1, [sp, #0]
 802bc36:	4605      	mov	r5, r0
 802bc38:	4630      	mov	r0, r6
 802bc3a:	f7ff f81b 	bl	802ac74 <_malloc_r>
 802bc3e:	b948      	cbnz	r0, 802bc54 <__smakebuf_r+0x44>
 802bc40:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bc44:	059a      	lsls	r2, r3, #22
 802bc46:	d4ef      	bmi.n	802bc28 <__smakebuf_r+0x18>
 802bc48:	f023 0303 	bic.w	r3, r3, #3
 802bc4c:	f043 0302 	orr.w	r3, r3, #2
 802bc50:	81a3      	strh	r3, [r4, #12]
 802bc52:	e7e3      	b.n	802bc1c <__smakebuf_r+0xc>
 802bc54:	89a3      	ldrh	r3, [r4, #12]
 802bc56:	6020      	str	r0, [r4, #0]
 802bc58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bc5c:	81a3      	strh	r3, [r4, #12]
 802bc5e:	9b00      	ldr	r3, [sp, #0]
 802bc60:	6163      	str	r3, [r4, #20]
 802bc62:	9b01      	ldr	r3, [sp, #4]
 802bc64:	6120      	str	r0, [r4, #16]
 802bc66:	b15b      	cbz	r3, 802bc80 <__smakebuf_r+0x70>
 802bc68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bc6c:	4630      	mov	r0, r6
 802bc6e:	f000 f81d 	bl	802bcac <_isatty_r>
 802bc72:	b128      	cbz	r0, 802bc80 <__smakebuf_r+0x70>
 802bc74:	89a3      	ldrh	r3, [r4, #12]
 802bc76:	f023 0303 	bic.w	r3, r3, #3
 802bc7a:	f043 0301 	orr.w	r3, r3, #1
 802bc7e:	81a3      	strh	r3, [r4, #12]
 802bc80:	89a3      	ldrh	r3, [r4, #12]
 802bc82:	431d      	orrs	r5, r3
 802bc84:	81a5      	strh	r5, [r4, #12]
 802bc86:	e7cf      	b.n	802bc28 <__smakebuf_r+0x18>

0802bc88 <_fstat_r>:
 802bc88:	b538      	push	{r3, r4, r5, lr}
 802bc8a:	4d07      	ldr	r5, [pc, #28]	; (802bca8 <_fstat_r+0x20>)
 802bc8c:	2300      	movs	r3, #0
 802bc8e:	4604      	mov	r4, r0
 802bc90:	4608      	mov	r0, r1
 802bc92:	4611      	mov	r1, r2
 802bc94:	602b      	str	r3, [r5, #0]
 802bc96:	f7d7 f8f3 	bl	8002e80 <_fstat>
 802bc9a:	1c43      	adds	r3, r0, #1
 802bc9c:	d102      	bne.n	802bca4 <_fstat_r+0x1c>
 802bc9e:	682b      	ldr	r3, [r5, #0]
 802bca0:	b103      	cbz	r3, 802bca4 <_fstat_r+0x1c>
 802bca2:	6023      	str	r3, [r4, #0]
 802bca4:	bd38      	pop	{r3, r4, r5, pc}
 802bca6:	bf00      	nop
 802bca8:	2001384c 	.word	0x2001384c

0802bcac <_isatty_r>:
 802bcac:	b538      	push	{r3, r4, r5, lr}
 802bcae:	4d06      	ldr	r5, [pc, #24]	; (802bcc8 <_isatty_r+0x1c>)
 802bcb0:	2300      	movs	r3, #0
 802bcb2:	4604      	mov	r4, r0
 802bcb4:	4608      	mov	r0, r1
 802bcb6:	602b      	str	r3, [r5, #0]
 802bcb8:	f7d7 f8e8 	bl	8002e8c <_isatty>
 802bcbc:	1c43      	adds	r3, r0, #1
 802bcbe:	d102      	bne.n	802bcc6 <_isatty_r+0x1a>
 802bcc0:	682b      	ldr	r3, [r5, #0]
 802bcc2:	b103      	cbz	r3, 802bcc6 <_isatty_r+0x1a>
 802bcc4:	6023      	str	r3, [r4, #0]
 802bcc6:	bd38      	pop	{r3, r4, r5, pc}
 802bcc8:	2001384c 	.word	0x2001384c

0802bccc <_init>:
 802bccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bcce:	bf00      	nop
 802bcd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bcd2:	bc08      	pop	{r3}
 802bcd4:	469e      	mov	lr, r3
 802bcd6:	4770      	bx	lr

0802bcd8 <_fini>:
 802bcd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bcda:	bf00      	nop
 802bcdc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bcde:	bc08      	pop	{r3}
 802bce0:	469e      	mov	lr, r3
 802bce2:	4770      	bx	lr
